{"name":"ld","description":"ld - The GNU linker","body":"\n\n<h1 align=\"center\">LD</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">ld - The GNU\nlinker</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">ld\n[<b>options</b>] <i>objfile</i> ...</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ld</b>\ncombines a number of object and archive files, relocates\ntheir data and ties up symbol references. Usually the last\nstep in compiling a program is to run <b>ld</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ld</b>\naccepts Linker Command Language files written in a superset\nof <small>AT&amp;T</small> &rsquo;s Link Editor Command\nLanguage syntax, to provide explicit and total control over\nthe linking process.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This man page\ndoes not describe the command language; see the <b>ld</b>\nentry in &quot;info&quot; for full details on the command\nlanguage and on other aspects of the <small>GNU</small>\nlinker.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This version of\n<b>ld</b> uses the general purpose <small>BFD</small>\nlibraries to operate on object files. This allows <b>ld</b>\nto read, combine, and write object files in many different\nformats---for example, <small>COFF</small> or\n&quot;a.out&quot;. Different formats may be linked together\nto produce any available kind of object file.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Aside from its\nflexibility, the <small>GNU</small> linker is more helpful\nthan other linkers in providing diagnostic information. Many\nlinkers abandon execution immediately upon encountering an\nerror; whenever possible, <b>ld</b> continues executing,\nallowing you to identify other errors (or, in some cases, to\nget an output file in spite of the error).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<small>GNU</small> linker <b>ld</b> is meant to cover a\nbroad range of situations, and to be as compatible as\npossible with other linkers. As a result, you have many\nchoices to control its behavior.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The linker\nsupports a plethora of command-line options, but in actual\npractice few of them are used in any particular context. For\ninstance, a frequent use of <b>ld</b> is to link standard\nUnix object files on a standard, supported Unix system. On\nsuch a system, to link a file &quot;hello.o&quot;:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">ld -o\n&lt;output&gt; /lib/crt0.o hello.o -lc</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This tells\n<b>ld</b> to produce a file called <i>output</i> as the\nresult of linking the file &quot;/lib/crt0.o&quot; with\n&quot;hello.o&quot; and the library &quot;libc.a&quot;,\nwhich will come from the standard search directories. (See\nthe discussion of the <b>-l</b> option below.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Some of the\ncommand-line options to <b>ld</b> may be specified at any\npoint in the command line. However, options which refer to\nfiles, such as <b>-l</b> or <b>-T</b>, cause the file to be\nread at the point at which the option appears in the command\nline, relative to the object files and other file options.\nRepeating non-file options with a different argument will\neither have no further effect, or override prior occurrences\n(those further to the left on the command line) of that\noption. Options which may be meaningfully specified more\nthan once are noted in the descriptions below.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Non-option\narguments are object files or archives which are to be\nlinked together. They may follow, precede, or be mixed in\nwith command-line options, except that an object file\nargument may not be placed between an option and its\nargument.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Usually the\nlinker is invoked with at least one object file, but you can\nspecify other forms of binary input files using <b>-l</b>,\n<b>-R</b>, and the script command language. If <i>no</i>\nbinary input files at all are specified, the linker does not\nproduce any output, and issues the message <b>No input\nfiles</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the linker\ncannot recognize the format of an object file, it will\nassume that it is a linker script. A script specified in\nthis way augments the main linker script used for the link\n(either the default linker script or the one specified by\nusing <b>-T</b>). This feature permits the linker to link\nagainst a file which appears to be an object or an archive,\nbut actually merely defines some symbol values, or uses\n&quot;INPUT&quot; or &quot;GROUP&quot; to load other\nobjects. Specifying a script in this way merely augments the\nmain linker script, with the extra commands placed after the\nmain script; use the <b>-T</b> option to replace the default\nlinker script entirely, but note the effect of the\n&quot;INSERT&quot; command.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For options\nwhose names are a single letter, option arguments must\neither follow the option letter without intervening\nwhitespace, or be given as separate arguments immediately\nfollowing the option that requires them.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For options\nwhose names are multiple letters, either one dash or two can\nprecede the option name; for example, <b>-trace-symbol</b>\nand <b>--trace-symbol</b> are equivalent. Note---there is\none exception to this rule. Multiple letter options that\nstart with a lower case &rsquo;o&rsquo; can only be preceded\nby two dashes. This is to reduce confusion with the\n<b>-o</b> option. So for example <b>-omagic</b> sets the\noutput file name to <b>magic</b> whereas <b>--omagic</b>\nsets the <small>NMAGIC</small> flag on the output.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Arguments to\nmultiple-letter options must either be separated from the\noption name by an equals sign, or be given as separate\narguments immediately following the option that requires\nthem. For example, <b>--trace-symbol foo</b> and\n<b>--trace-symbol=foo</b> are equivalent. Unique\nabbreviations of the names of multiple-letter options are\naccepted.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note---if the\nlinker is being invoked indirectly, via a compiler driver\n(e.g. <b>gcc</b>) then all the linker command-line options\nshould be prefixed by <b>-Wl,</b> (or whatever is\nappropriate for the particular compiler driver) like\nthis:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">gcc\n-Wl,--start-group foo.o bar.o -Wl,--end-group</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This is\nimportant, because otherwise the compiler driver program may\nsilently drop the linker options, resulting in a bad link.\nConfusion may also arise when passing options that require\nvalues through a driver, as the use of a space between\noption and argument acts as a separator, and causes the\ndriver to pass only the option to the linker and the\nargument to the compiler. In this case, it is simplest to\nuse the joined forms of both single- and multiple-letter\noptions, such as:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">gcc foo.o bar.o\n-Wl,-eENTRY -Wl,-Map=a.map</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Here is a table\nof the generic command-line switches accepted by the\n<small>GNU</small> linker: <b><br>\n@</b><i>file</i></p>\n\n<p style=\"margin-left:17%;\">Read command-line options from\n<i>file</i>. The options read are inserted in place of the\noriginal @<i>file</i> option. If <i>file</i> does not exist,\nor cannot be read, then the option will be treated\nliterally, and not removed.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Options in\n<i>file</i> are separated by whitespace. A whitespace\ncharacter may be included in an option by surrounding the\nentire option in either single or double quotes. Any\ncharacter (including a backslash) may be included by\nprefixing the character to be included with a backslash. The\n<i>file</i> may itself contain additional @<i>file</i>\noptions; any such options will be processed recursively.</p>\n\n<p style=\"margin-left:11%;\"><b>-a</b> <i>keyword</i></p>\n\n<p style=\"margin-left:17%;\">This option is supported for\n<small>HP/UX</small> compatibility. The <i>keyword</i>\nargument must be one of the strings <b>archive</b>,\n<b>shared</b>, or <b>default</b>. <b>-aarchive</b> is\nfunctionally equivalent to <b>-Bstatic</b>, and the other\ntwo keywords are functionally equivalent to\n<b>-Bdynamic</b>. This option may be used any number of\ntimes.</p>\n\n<p style=\"margin-left:11%;\"><b>--audit</b>\n<i><small>AUDITLIB</small></i></p>\n\n<p style=\"margin-left:17%;\">Adds\n<i><small>AUDITLIB</small></i> to the &quot;DT_AUDIT&quot;\nentry of the dynamic section. <i><small>AUDITLIB</small></i>\nis not checked for existence, nor will it use the\n<small>DT_SONAME</small> specified in the library. If\nspecified multiple times &quot;DT_AUDIT&quot; will contain a\ncolon separated list of audit interfaces to use. If the\nlinker finds an object with an audit entry while searching\nfor shared libraries, it will add a corresponding\n&quot;DT_DEPAUDIT&quot; entry in the output file. This\noption is only meaningful on <small>ELF</small> platforms\nsupporting the rtld-audit interface.</p>\n\n<p style=\"margin-left:11%;\"><b>-b</b> <i>input-format</i>\n<b><br>\n--format=</b><i>input-format</i></p>\n\n<p style=\"margin-left:17%;\"><b>ld</b> may be configured to\nsupport more than one kind of object file. If your <b>ld</b>\nis configured this way, you can use the <b>-b</b> option to\nspecify the binary format for input object files that follow\nthis option on the command line. Even when <b>ld</b> is\nconfigured to support alternative object formats, you\ndon&rsquo;t usually need to specify this, as <b>ld</b>\nshould be configured to expect as a default input format the\nmost usual format on each machine. <i>input-format</i> is a\ntext string, the name of a particular format supported by\nthe <small>BFD</small> libraries. (You can list the\navailable binary formats with <b>objdump -i</b>.)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">You may want to\nuse this option if you are linking files with an unusual\nbinary format. You can also use <b>-b</b> to switch formats\nexplicitly (when linking object files of different formats),\nby including <b>-b</b> <i>input-format</i> before each group\nof object files in a particular format.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The default\nformat is taken from the environment variable\n&quot;GNUTARGET&quot;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">You can also\ndefine the input format from a script, using the command\n&quot;TARGET&quot;;</p>\n\n<p style=\"margin-left:11%;\"><b>-c</b>\n<i>MRI-commandfile</i> <b><br>\n--mri-script=</b><i>MRI-commandfile</i></p>\n\n<p style=\"margin-left:17%;\">For compatibility with linkers\nproduced by <small>MRI,</small> <b>ld</b> accepts script\nfiles written in an alternate, restricted command language,\ndescribed in the <small>MRI</small> Compatible Script Files\nsection of <small>GNU</small> ld documentation. Introduce\n<small>MRI</small> script files with the option <b>-c</b>;\nuse the <b>-T</b> option to run linker scripts written in\nthe general-purpose <b>ld</b> scripting language. If\n<i>MRI-cmdfile</i> does not exist, <b>ld</b> looks for it in\nthe directories specified by any <b>-L</b> options.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-d</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"83%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-dc</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"83%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-dp</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"83%\">\n\n\n<p>These three options are equivalent; multiple forms are\nsupported for compatibility with other linkers. They assign\nspace to common symbols even if a relocatable output file is\nspecified (with <b>-r</b>). The script command\n&quot;FORCE_COMMON_ALLOCATION&quot; has the same effect.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--depaudit</b>\n<i><small>AUDITLIB</small></i> <b><br>\n-P</b> <i><small>AUDITLIB</small></i></p>\n\n<p style=\"margin-left:17%;\">Adds\n<i><small>AUDITLIB</small></i> to the\n&quot;DT_DEPAUDIT&quot; entry of the dynamic section.\n<i><small>AUDITLIB</small></i> is not checked for existence,\nnor will it use the <small>DT_SONAME</small> specified in\nthe library. If specified multiple times\n&quot;DT_DEPAUDIT&quot; will contain a colon separated list\nof audit interfaces to use. This option is only meaningful\non <small>ELF</small> platforms supporting the rtld-audit\ninterface. The -P option is provided for Solaris\ncompatibility.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--enable-non-contiguous-regions</b></p>\n\n<p style=\"margin-left:17%;\">This option avoids generating\nan error if an input section does not fit a matching output\nsection. The linker tries to allocate the input section to\nsubseque nt matching output sections, and generates an error\nonly if no output section is large enough. This is useful\nwhen several non-contiguous memory regions are available and\nthe input section does not require a particular one. The\norder in which input sections are evaluated does not change,\nfor instance:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">MEMORY { <br>\nMEM1 (rwx) : ORIGIN : 0x1000, LENGTH = 0x14 <br>\nMEM2 (rwx) : ORIGIN : 0x1000, LENGTH = 0x40 <br>\nMEM3 (rwx) : ORIGIN : 0x2000, LENGTH = 0x40 <br>\n} <br>\nSECTIONS { <br>\nmem1 : { *(.data.*); } &gt; MEM1 <br>\nmem2 : { *(.data.*); } &gt; MEM2 <br>\nmem3 : { *(.data.*); } &gt; MEM2 <br>\n} <br>\nwith input sections: <br>\n.data.1: size 8 <br>\n.data.2: size 0x10 <br>\n.data.3: size 4 <br>\nresults in .data.1 affected to mem1, and .data.2 and .data.3\n<br>\naffected to mem2, even though .data.3 would fit in mem3.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This option is\nincompatible with <small>INSERT</small> statements because\nit changes the way input sections are mapped to output\nsections.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--enable-non-contiguous-regions-warnings</b></p>\n\n<p style=\"margin-left:17%;\">This option enables warnings\nwhen &quot;--enable-non-contiguous-regions&quot; allows\npossibly unexpected matches in sections mapping, potentially\nleading to silently discarding a section instead of failing\nbecause it does not fit any output region.</p>\n\n<p style=\"margin-left:11%;\"><b>-e</b> <i>entry</i> <b><br>\n--entry=</b><i>entry</i></p>\n\n<p style=\"margin-left:17%;\">Use <i>entry</i> as the\nexplicit symbol for beginning execution of your program,\nrather than the default entry point. If there is no symbol\nnamed <i>entry</i>, the linker will try to parse\n<i>entry</i> as a number, and use that as the entry address\n(the number will be interpreted in base 10; you may use a\nleading <b>0x</b> for base 16, or a leading <b>0</b> for\nbase 8).</p>\n\n<p style=\"margin-left:11%;\"><b>--exclude-libs</b>\n<i>lib</i><b>,</b><i>lib</i><b>,...</b></p>\n\n<p style=\"margin-left:17%;\">Specifies a list of archive\nlibraries from which symbols should not be automatically\nexported. The library names may be delimited by commas or\ncolons. Specifying &quot;--exclude-libs ALL&quot; excludes\nsymbols in all archive libraries from automatic export. This\noption is available only for the i386 <small>PE</small>\ntargeted port of the linker and for <small>ELF</small>\ntargeted ports. For i386 <small>PE,</small> symbols\nexplicitly listed in a .def file are still exported,\nregardless of this option. For <small>ELF</small> targeted\nports, symbols affected by this option will be treated as\nhidden.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--exclude-modules-for-implib</b>\n<i>module</i><b>,</b><i>module</i><b>,...</b></p>\n\n<p style=\"margin-left:17%;\">Specifies a list of object\nfiles or archive members, from which symbols should not be\nautomatically exported, but which should be copied wholesale\ninto the import library being generated during the link. The\nmodule names may be delimited by commas or colons, and must\nmatch exactly the filenames used by <b>ld</b> to open the\nfiles; for archive members, this is simply the member name,\nbut for object files the name listed must include and match\nprecisely any path used to specify the input file on the\nlinker&rsquo;s command-line. This option is available only\nfor the i386 <small>PE</small> targeted port of the linker.\nSymbols explicitly listed in a .def file are still exported,\nregardless of this option.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-E</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--export-dynamic <br>\n--no-export-dynamic</b></p>\n\n<p style=\"margin-left:17%;\">When creating a dynamically\nlinked executable, using the <b>-E</b> option or the\n<b>--export-dynamic</b> option causes the linker to add all\nsymbols to the dynamic symbol table. The dynamic symbol\ntable is the set of symbols which are visible from dynamic\nobjects at run time.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If you do not\nuse either of these options (or use the\n<b>--no-export-dynamic</b> option to restore the default\nbehavior), the dynamic symbol table will normally contain\nonly those symbols which are referenced by some dynamic\nobject mentioned in the link.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If you use\n&quot;dlopen&quot; to load a dynamic object which needs to\nrefer back to the symbols defined by the program, rather\nthan some other dynamic object, then you will probably need\nto use this option when linking the program itself.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">You can also\nuse the dynamic list to control what symbols should be added\nto the dynamic symbol table if the output format supports\nit. See the description of <b>--dynamic-list</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that this\noption is specific to <small>ELF</small> targeted ports.\n<small>PE</small> targets support a similar function to\nexport all symbols from a <small>DLL</small> or\n<small>EXE</small> ; see the description of\n<b>--export-all-symbols</b> below.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--export-dynamic-symbol=</b><i>glob</i></p>\n\n<p style=\"margin-left:17%;\">When creating a dynamically\nlinked executable, symbols matching <i>glob</i> will be\nadded to the dynamic symbol table. When creating a shared\nlibrary, references to symbols matching <i>glob</i> will not\nbe bound to the definitions within the shared library. This\noption is a no-op when creating a shared library and\n<b>-Bsymbolic</b> or <b>--dynamic-list</b> are not\nspecified. This option is only meaningful on\n<small>ELF</small> platforms which support shared\nlibraries.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--export-dynamic-symbol-list=</b><i>file</i></p>\n\n<p style=\"margin-left:17%;\">Specify a\n<b>--export-dynamic-symbol</b> for each pattern in the file.\nThe format of the file is the same as the version node\nwithout scope and node name. See\n<b><small>VERSION</small></b> for more information.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-EB</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"83%\">\n\n\n<p>Link big-endian objects. This affects the default output\nformat.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-EL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"83%\">\n\n\n<p>Link little-endian objects. This affects the default\noutput format.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-f</b> <i>name</i> <b><br>\n--auxiliary=</b><i>name</i></p>\n\n<p style=\"margin-left:17%;\">When creating an\n<small>ELF</small> shared object, set the internal\n<small>DT_AUXILIARY</small> field to the specified name.\nThis tells the dynamic linker that the symbol table of the\nshared object should be used as an auxiliary filter on the\nsymbol table of the shared object <i>name</i>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If you later\nlink a program against this filter object, then, when you\nrun the program, the dynamic linker will see the\n<small>DT_AUXILIARY</small> field. If the dynamic linker\nresolves any symbols from the filter object, it will first\ncheck whether there is a definition in the shared object\n<i>name</i>. If there is one, it will be used instead of the\ndefinition in the filter object. The shared object\n<i>name</i> need not exist. Thus the shared object\n<i>name</i> may be used to provide an alternative\nimplementation of certain functions, perhaps for debugging\nor for machine-specific performance.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This option may\nbe specified more than once. The <small>DT_AUXILIARY</small>\nentries will be created in the order in which they appear on\nthe command line.</p>\n\n<p style=\"margin-left:11%;\"><b>-F</b> <i>name</i> <b><br>\n--filter=</b><i>name</i></p>\n\n<p style=\"margin-left:17%;\">When creating an\n<small>ELF</small> shared object, set the internal\n<small>DT_FILTER</small> field to the specified name. This\ntells the dynamic linker that the symbol table of the shared\nobject which is being created should be used as a filter on\nthe symbol table of the shared object <i>name</i>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If you later\nlink a program against this filter object, then, when you\nrun the program, the dynamic linker will see the\n<small>DT_FILTER</small> field. The dynamic linker will\nresolve symbols according to the symbol table of the filter\nobject as usual, but it will actually link to the\ndefinitions found in the shared object <i>name</i>. Thus the\nfilter object can be used to select a subset of the symbols\nprovided by the object <i>name</i>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Some older\nlinkers used the <b>-F</b> option throughout a compilation\ntoolchain for specifying object-file format for both input\nand output object files. The <small>GNU</small> linker uses\nother mechanisms for this purpose: the <b>-b</b>,\n<b>--format</b>, <b>--oformat</b> options, the\n&quot;TARGET&quot; command in linker scripts, and the\n&quot;GNUTARGET&quot; environment variable. The\n<small>GNU</small> linker will ignore the <b>-F</b> option\nwhen not creating an <small>ELF</small> shared object.</p>\n\n<p style=\"margin-left:11%;\"><b>-fini=</b><i>name</i></p>\n\n<p style=\"margin-left:17%;\">When creating an\n<small>ELF</small> executable or shared object, call\n<small>NAME</small> when the executable or shared object is\nunloaded, by setting <small>DT_FINI</small> to the address\nof the function. By default, the linker uses\n&quot;_fini&quot; as the function to call.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-g</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>Ignored. Provided for compatibility with other\ntools.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-G</b> <i>value</i> <b><br>\n--gpsize=</b><i>value</i></p>\n\n<p style=\"margin-left:17%;\">Set the maximum size of objects\nto be optimized using the <small>GP</small> register to\n<i>size</i>. This is only meaningful for object file formats\nsuch as <small>MIPS ELF</small> that support putting large\nand small objects into different sections. This is ignored\nfor other object file formats.</p>\n\n<p style=\"margin-left:11%;\"><b>-h</b> <i>name</i> <b><br>\n-soname=</b><i>name</i></p>\n\n<p style=\"margin-left:17%;\">When creating an\n<small>ELF</small> shared object, set the internal\n<small>DT_SONAME</small> field to the specified name. When\nan executable is linked with a shared object which has a\n<small>DT_SONAME</small> field, then when the executable is\nrun the dynamic linker will attempt to load the shared\nobject specified by the <small>DT_SONAME</small> field\nrather than using the file name given to the linker.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-i</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>Perform an incremental link (same as option\n<b>-r</b>).</p> </td>\n<td width=\"9%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-init=</b><i>name</i></p>\n\n<p style=\"margin-left:17%;\">When creating an\n<small>ELF</small> executable or shared object, call\n<small>NAME</small> when the executable or shared object is\nloaded, by setting <small>DT_INIT</small> to the address of\nthe function. By default, the linker uses &quot;_init&quot;\nas the function to call.</p>\n\n<p style=\"margin-left:11%;\"><b>-l</b> <i>namespec</i>\n<b><br>\n--library=</b><i>namespec</i></p>\n\n<p style=\"margin-left:17%;\">Add the archive or object file\nspecified by <i>namespec</i> to the list of files to link.\nThis option may be used any number of times. If\n<i>namespec</i> is of the form <i>:filename</i>, <b>ld</b>\nwill search the library path for a file called\n<i>filename</i>, otherwise it will search the library path\nfor a file called <i>libnamespec.a</i>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">On systems\nwhich support shared libraries, <b>ld</b> may also search\nfor files other than <i>libnamespec.a</i>. Specifically, on\n<small>ELF</small> and SunOS systems, <b>ld</b> will search\na directory for a library called <i>libnamespec.so</i>\nbefore searching for one called <i>libnamespec.a</i>. (By\nconvention, a &quot;.so&quot; extension indicates a shared\nlibrary.) Note that this behavior does not apply to\n<i>:filename</i>, which always specifies a file called\n<i>filename</i>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The linker will\nsearch an archive only once, at the location where it is\nspecified on the command line. If the archive defines a\nsymbol which was undefined in some object which appeared\nbefore the archive on the command line, the linker will\ninclude the appropriate file(s) from the archive. However,\nan undefined symbol in an object appearing later on the\ncommand line will not cause the linker to search the archive\nagain.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">See the\n<b>-(</b> option for a way to force the linker to search\narchives multiple times.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">You may list\nthe same archive multiple times on the command line.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This type of\narchive searching is standard for Unix linkers. However, if\nyou are using <b>ld</b> on <small>AIX,</small> note that it\nis different from the behaviour of the <small>AIX</small>\nlinker.</p>\n\n<p style=\"margin-left:11%;\"><b>-L</b> <i>searchdir</i>\n<b><br>\n--library-path=</b><i>searchdir</i></p>\n\n<p style=\"margin-left:17%;\">Add path <i>searchdir</i> to\nthe list of paths that <b>ld</b> will search for archive\nlibraries and <b>ld</b> control scripts. You may use this\noption any number of times. The directories are searched in\nthe order in which they are specified on the command line.\nDirectories specified on the command line are searched\nbefore the default directories. All <b>-L</b> options apply\nto all <b>-l</b> options, regardless of the order in which\nthe options appear. <b>-L</b> options do not affect how\n<b>ld</b> searches for a linker script unless <b>-T</b>\noption is specified.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If\n<i>searchdir</i> begins with &quot;=&quot; or $SYSROOT, then\nthis prefix will be replaced by the <i>sysroot prefix</i>,\ncontrolled by the <b>--sysroot</b> option, or specified when\nthe linker is configured.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The default set\nof paths searched (without being specified with <b>-L</b>)\ndepends on which emulation mode <b>ld</b> is using, and in\nsome cases also on how it was configured.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The paths can\nalso be specified in a link script with the\n&quot;SEARCH_DIR&quot; command. Directories specified this\nway are searched at the point in which the linker script\nappears in the command line.</p>\n\n<p style=\"margin-left:11%;\"><b>-m</b> <i>emulation</i></p>\n\n<p style=\"margin-left:17%;\">Emulate the <i>emulation</i>\nlinker. You can list the available emulations with the\n<b>--verbose</b> or <b>-V</b> options.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If the\n<b>-m</b> option is not used, the emulation is taken from\nthe &quot;LDEMULATION&quot; environment variable, if that is\ndefined.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Otherwise, the\ndefault emulation depends upon how the linker was\nconfigured.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-M</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--print-map</b></p>\n\n<p style=\"margin-left:17%;\">Print a link map to the\nstandard output. A link map provides information about the\nlink, including the following:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"77%\">\n\n\n<p>Where object files are mapped into memory.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"77%\">\n\n\n<p>How common symbols are allocated.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"77%\">\n\n\n<p>All archive members included in the link, with a mention\nof the symbol which caused the archive member to be brought\nin.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"77%\">\n\n\n<p>The values assigned to symbols.</p></td></tr>\n</table>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Note - symbols\nwhose values are computed by an expression which involves a\nreference to a previous value of the same symbol may not\nhave correct result displayed in the link map. This is\nbecause the linker discards intermediate results and only\nretains the final value of an expression. Under such\ncircumstances the linker will display the final value\nenclosed by square brackets. Thus for example a linker\nscript containing:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">foo = 1 <br>\nfoo = foo * 4 <br>\nfoo = foo + 8</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">will produce\nthe following output in the link map if the <b>-M</b> option\nis used:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">0x00000001 foo\n= 0x1 <br>\n[0x0000000c] foo = (foo * 0x4) <br>\n[0x0000000c] foo = (foo + 0x8)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">See\n<b>Expressions</b> for more information about expressions in\nlinker scripts.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"46%\">\n\n\n<p style=\"margin-top: 1em\">How <small>GNU</small>\nproperties are merged.</p></td>\n<td width=\"31%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:23%; margin-top: 1em\">When the linker\nmerges input .note.gnu.property sections into one output\n.note.gnu.property section, some properties are removed or\nupdated. These actions are reported in the link map. For\nexample:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Removed\nproperty 0xc0000002 to merge foo.o (0x1) and bar.o (not\nfound)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">This indicates\nthat property 0xc0000002 is removed from output when merging\nproperties in <i>foo.o</i>, whose property 0xc0000002 value\nis 0x1, and <i>bar.o</i>, which doesn&rsquo;t have property\n0xc0000002.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Updated\nproperty 0xc0010001 (0x1) to merge foo.o (0x1) and bar.o\n(0x1)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">This indicates\nthat property 0xc0010001 value is updated to 0x1 in output\nwhen merging properties in <i>foo.o</i>, whose 0xc0010001\nproperty value is 0x1, and <i>bar.o</i>, whose 0xc0010001\nproperty value is 0x1.</p>\n\n<p style=\"margin-left:11%;\"><b>--print-map-discarded <br>\n--no-print-map-discarded</b></p>\n\n<p style=\"margin-left:17%;\">Print (or do not print) the\nlist of discarded and garbage collected sections in the link\nmap. Enabled by default.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-n</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--nmagic</b></p>\n\n<p style=\"margin-left:17%;\">Turn off page alignment of\nsections, and disable linking against shared libraries. If\nthe output format supports Unix style magic numbers, mark\nthe output as &quot;NMAGIC&quot;.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-N</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--omagic</b></p>\n\n<p style=\"margin-left:17%;\">Set the text and data sections\nto be readable and writable. Also, do not page-align the\ndata segment, and disable linking against shared libraries.\nIf the output format supports Unix style magic numbers, mark\nthe output as &quot;OMAGIC&quot;. Note: Although a writable\ntext section is allowed for PE-COFF targets, it does not\nconform to the format specification published by\nMicrosoft.</p>\n\n<p style=\"margin-left:11%;\"><b>--no-omagic</b></p>\n\n<p style=\"margin-left:17%;\">This option negates most of the\neffects of the <b>-N</b> option. It sets the text section to\nbe read-only, and forces the data segment to be\npage-aligned. Note - this option does not enable linking\nagainst shared libraries. Use <b>-Bdynamic</b> for this.</p>\n\n<p style=\"margin-left:11%;\"><b>-o</b> <i>output</i> <b><br>\n--output=</b><i>output</i></p>\n\n<p style=\"margin-left:17%;\">Use <i>output</i> as the name\nfor the program produced by <b>ld</b>; if this option is not\nspecified, the name <i>a.out</i> is used by default. The\nscript command &quot;OUTPUT&quot; can also specify the\noutput file name.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--dependency-file=</b><i>depfile</i></p>\n\n<p style=\"margin-left:17%;\">Write a <i>dependency file</i>\nto <i>depfile</i>. This file contains a rule suitable for\n&quot;make&quot; describing the output file and all the\ninput files that were read to produce it. The output is\nsimilar to the compiler&rsquo;s output with <b>-M -MP</b>.\nNote that there is no option like the compiler&rsquo;s\n<b>-MM</b>, to exclude &quot;system files&quot; (which is\nnot a well-specified concept in the linker, unlike\n&quot;system headers&quot; in the compiler). So the output\nfrom <b>--dependency-file</b> is always specific to the\nexact state of the installation where it was produced, and\nshould not be copied into distributed makefiles without\ncareful editing.</p>\n\n<p style=\"margin-left:11%;\"><b>-O</b> <i>level</i></p>\n\n<p style=\"margin-left:17%;\">If <i>level</i> is a numeric\nvalues greater than zero <b>ld</b> optimizes the output.\nThis might take significantly longer and therefore probably\nshould only be enabled for the final binary. At the moment\nthis option only affects <small>ELF</small> shared library\ngeneration. Future releases of the linker may make more use\nof this option. Also currently there is no difference in the\nlinker&rsquo;s behaviour for different non-zero values of\nthis option. Again this may change with future releases.</p>\n\n<p style=\"margin-left:11%;\"><b>-plugin</b> <i>name</i></p>\n\n<p style=\"margin-left:17%;\">Involve a plugin in the linking\nprocess. The <i>name</i> parameter is the absolute filename\nof the plugin. Usually this parameter is automatically added\nby the complier, when using link time optimization, but\nusers can also add their own plugins if they so wish.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that the\nlocation of the compiler originated plugins is different\nfrom the place where the <b>ar</b>, <b>nm</b> and\n<b>ranlib</b> programs search for their plugins. In order\nfor those commands to make use of a compiler based plugin it\nmust first be copied into the <i>${libdir}/bfd-plugins</i>\ndirectory. All gcc based linker plugins are backward\ncompatible, so it is sufficient to just copy in the newest\none.</p>\n\n<p style=\"margin-left:11%;\"><b>--push-state</b></p>\n\n<p style=\"margin-left:17%;\">The <b>--push-state</b> allows\none to preserve the current state of the flags which govern\nthe input file handling so that they can all be restored\nwith one corresponding <b>--pop-state</b> option.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The option\nwhich are covered are: <b>-Bdynamic</b>, <b>-Bstatic</b>,\n<b>-dn</b>, <b>-dy</b>, <b>-call_shared</b>,\n<b>-non_shared</b>, <b>-static</b>, <b>-N</b>, <b>-n</b>,\n<b>--whole-archive</b>, <b>--no-whole-archive</b>,\n<b>-r</b>, <b>-Ur</b>, <b>--copy-dt-needed-entries</b>,\n<b>--no-copy-dt-needed-entries</b>, <b>--as-needed</b>,\n<b>--no-as-needed</b>, and <b>-a</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">One target for\nthis option are specifications for <i>pkg-config</i>. When\nused with the <b>--libs</b> option all possibly needed\nlibraries are listed and then possibly linked with all the\ntime. It is better to return something as follows:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">-Wl,--push-state,--as-needed\n-libone -libtwo -Wl,--pop-state</p>\n\n<p style=\"margin-left:11%;\"><b>--pop-state</b></p>\n\n<p style=\"margin-left:17%;\">Undoes the effect of\n--push-state, restores the previous values of the flags\ngoverning input file handling.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-q</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--emit-relocs</b></p>\n\n<p style=\"margin-left:17%;\">Leave relocation sections and\ncontents in fully linked executables. Post link analysis and\noptimization tools may need this information in order to\nperform correct modifications of executables. This results\nin larger executables.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This option is\ncurrently only supported on <small>ELF</small>\nplatforms.</p>\n\n<p style=\"margin-left:11%;\"><b>--force-dynamic</b></p>\n\n<p style=\"margin-left:17%;\">Force the output file to have\ndynamic sections. This option is specific to VxWorks\ntargets.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-r</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--relocatable</b></p>\n\n<p style=\"margin-left:17%;\">Generate relocatable\noutput---i.e., generate an output file that can in turn\nserve as input to <b>ld</b>. This is often called <i>partial\nlinking</i>. As a side effect, in environments that support\nstandard Unix magic numbers, this option also sets the\noutput file&rsquo;s magic number to &quot;OMAGIC&quot;. If\nthis option is not specified, an absolute file is produced.\nWhen linking C <small>++</small> programs, this option\n<i>will not</i> resolve references to constructors; to do\nthat, use <b>-Ur</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When an input\nfile does not have the same format as the output file,\npartial linking is only supported if that input file does\nnot contain any relocations. Different output formats can\nhave further restrictions; for example some\n&quot;a.out&quot;-based formats do not support partial\nlinking with input files in other formats at all.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This option\ndoes the same thing as <b>-i</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>-R</b> <i>filename</i>\n<b><br>\n--just-symbols=</b><i>filename</i></p>\n\n<p style=\"margin-left:17%;\">Read symbol names and their\naddresses from <i>filename</i>, but do not relocate it or\ninclude it in the output. This allows your output file to\nrefer symbolically to absolute locations of memory defined\nin other programs. You may use this option more than\nonce.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For\ncompatibility with other <small>ELF</small> linkers, if the\n<b>-R</b> option is followed by a directory name, rather\nthan a file name, it is treated as the <b>-rpath</b>\noption.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-s</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--strip-all</b></p>\n\n<p style=\"margin-left:17%;\">Omit all symbol information\nfrom the output file.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-S</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--strip-debug</b></p>\n\n<p style=\"margin-left:17%;\">Omit debugger symbol\ninformation (but not all symbols) from the output file.</p>\n\n<p style=\"margin-left:11%;\"><b>--strip-discarded <br>\n--no-strip-discarded</b></p>\n\n<p style=\"margin-left:17%;\">Omit (or do not omit) global\nsymbols defined in discarded sections. Enabled by\ndefault.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-t</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--trace</b></p>\n\n<p style=\"margin-left:17%;\">Print the names of the input\nfiles as <b>ld</b> processes them. If <b>-t</b> is given\ntwice then members within archives are also printed.\n<b>-t</b> output is useful to generate a list of all the\nobject files and scripts involved in linking, for example,\nwhen packaging files for a linker bug report.</p>\n\n<p style=\"margin-left:11%;\"><b>-T</b> <i>scriptfile</i>\n<b><br>\n--script=</b><i>scriptfile</i></p>\n\n<p style=\"margin-left:17%;\">Use <i>scriptfile</i> as the\nlinker script. This script replaces <b>ld</b>&rsquo;s\ndefault linker script (rather than adding to it), so\n<i>commandfile</i> must specify everything necessary to\ndescribe the output file. If <i>scriptfile</i> does not\nexist in the current directory, &quot;ld&quot; looks for it\nin the directories specified by any preceding <b>-L</b>\noptions. Multiple <b>-T</b> options accumulate.</p>\n\n<p style=\"margin-left:11%;\"><b>-dT</b> <i>scriptfile</i>\n<b><br>\n--default-script=</b><i>scriptfile</i></p>\n\n<p style=\"margin-left:17%;\">Use <i>scriptfile</i> as the\ndefault linker script.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This option is\nsimilar to the <b>--script</b> option except that processing\nof the script is delayed until after the rest of the command\nline has been processed. This allows options placed after\nthe <b>--default-script</b> option on the command line to\naffect the behaviour of the linker script, which can be\nimportant when the linker command line cannot be directly\ncontrolled by the user. (eg because the command line is\nbeing constructed by another tool, such as <b>gcc</b>).</p>\n\n<p style=\"margin-left:11%;\"><b>-u</b> <i>symbol</i> <b><br>\n--undefined=</b><i>symbol</i></p>\n\n<p style=\"margin-left:17%;\">Force <i>symbol</i> to be\nentered in the output file as an undefined symbol. Doing\nthis may, for example, trigger linking of additional modules\nfrom standard libraries. <b>-u</b> may be repeated with\ndifferent option arguments to enter additional undefined\nsymbols. This option is equivalent to the &quot;EXTERN&quot;\nlinker script command.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If this option\nis being used to force additional modules to be pulled into\nthe link, and if it is an error for the symbol to remain\nundefined, then the option <b>--require-defined</b> should\nbe used instead.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--require-defined=</b><i>symbol</i></p>\n\n<p style=\"margin-left:17%;\">Require that <i>symbol</i> is\ndefined in the output file. This option is the same as\noption <b>--undefined</b> except that if <i>symbol</i> is\nnot defined in the output file then the linker will issue an\nerror and exit. The same effect can be achieved in a linker\nscript by using &quot;EXTERN&quot;, &quot;ASSERT&quot; and\n&quot;DEFINED&quot; together. This option can be used\nmultiple times to require additional symbols.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-Ur</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"83%\">\n\n\n<p>For anything other than C <small>++</small> programs,\nthis option is equivalent to <b>-r</b>: it generates\nrelocatable output---i.e., an output file that can in turn\nserve as input to <b>ld</b>. When linking C\n<small>++</small> programs, <b>-Ur</b> <i>does</i> resolve\nreferences to constructors, unlike <b>-r</b>. It does not\nwork to use <b>-Ur</b> on files that were themselves linked\nwith <b>-Ur</b>; once the constructor table has been built,\nit cannot be added to. Use <b>-Ur</b> only for the last\npartial link, and <b>-r</b> for the others.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--orphan-handling=</b>\n<i><small>MODE</small></i></p>\n\n<p style=\"margin-left:17%;\">Control how orphan sections are\nhandled. An orphan section is one not specifically mentioned\nin a linker script.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><i><small>MODE</small></i>\ncan have any of the following values: <br>\n&quot;place&quot;</p>\n\n<p style=\"margin-left:23%;\">Orphan sections are placed into\na suitable output section following the strategy described\nin <b>Orphan Sections</b>. The option <b>--unique</b> also\naffects how sections are placed.</p>\n\n<p style=\"margin-left:17%;\">&quot;discard&quot;</p>\n\n<p style=\"margin-left:23%;\">All orphan sections are\ndiscarded, by placing them in the <b>/DISCARD/</b>\nsection.</p>\n\n<p style=\"margin-left:17%;\">&quot;warn&quot;</p>\n\n<p style=\"margin-left:23%;\">The linker will place the\norphan section as for &quot;place&quot; and also issue a\nwarning.</p>\n\n<p style=\"margin-left:17%;\">&quot;error&quot;</p>\n\n<p style=\"margin-left:23%;\">The linker will exit with an\nerror if any orphan section is found.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The default if\n<b>--orphan-handling</b> is not given is\n&quot;place&quot;.</p>\n\n<p style=\"margin-left:11%;\"><b>--unique[=</b>\n<i><small>SECTION</small></i> <b>]</b></p>\n\n<p style=\"margin-left:17%;\">Creates a separate output\nsection for every input section matching\n<i><small>SECTION</small></i> , or if the optional wildcard\n<i><small>SECTION</small></i> argument is missing, for every\norphan input section. An orphan section is one not\nspecifically mentioned in a linker script. You may use this\noption multiple times on the command line; It prevents the\nnormal merging of input sections with the same name,\noverriding output section assignments in a linker\nscript.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-v</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--version</b></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-V</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>Display the version number for <b>ld</b>. The <b>-V</b>\noption also lists the supported emulations.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-x</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--discard-all</b></p>\n\n<p style=\"margin-left:17%;\">Delete all local symbols.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-X</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--discard-locals</b></p>\n\n<p style=\"margin-left:17%;\">Delete all temporary local\nsymbols. (These symbols start with system-specific local\nlabel prefixes, typically <b>.L</b> for <small>ELF</small>\nsystems or <b>L</b> for traditional a.out systems.)</p>\n\n<p style=\"margin-left:11%;\"><b>-y</b> <i>symbol</i> <b><br>\n--trace-symbol=</b><i>symbol</i></p>\n\n<p style=\"margin-left:17%;\">Print the name of each linked\nfile in which <i>symbol</i> appears. This option may be\ngiven any number of times. On many systems it is necessary\nto prepend an underscore.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This option is\nuseful when you have an undefined symbol in your link but\ndon&rsquo;t know where the reference is coming from.</p>\n\n<p style=\"margin-left:11%;\"><b>-Y</b> <i>path</i></p>\n\n<p style=\"margin-left:17%;\">Add <i>path</i> to the default\nlibrary search path. This option exists for Solaris\ncompatibility.</p>\n\n<p style=\"margin-left:11%;\"><b>-z</b> <i>keyword</i></p>\n\n<p style=\"margin-left:17%;\">The recognized keywords are:\n<b><br>\nbndplt</b></p>\n\n<p style=\"margin-left:23%;\">Always generate\n<small>BND</small> prefix in <small>PLT</small> entries.\nSupported for Linux/x86_64.</p>\n\n<p style=\"margin-left:17%;\"><b>call-nop=prefix-addr <br>\ncall-nop=suffix-nop <br>\ncall-nop=prefix-</b><i>byte</i> <b><br>\ncall-nop=suffix-</b><i>byte</i></p>\n\n<p style=\"margin-left:23%;\">Specify the 1-byte\n&quot;NOP&quot; padding when transforming indirect call to a\nlocally defined function, foo, via its <small>GOT</small>\nslot. <b>call-nop=prefix-addr</b> generates &quot;0x67 call\nfoo&quot;. <b>call-nop=suffix-nop</b> generates &quot;call\nfoo 0x90&quot;. <b>call-nop=prefix-</b><i>byte</i> generates\n&quot;<i>byte</i> call foo&quot;.\n<b>call-nop=suffix-</b><i>byte</i> generates &quot;call foo\n<i>byte</i>&quot;. Supported for i386 and x86_64.</p>\n\n<p style=\"margin-left:17%;\"><b>cet-report=none <br>\ncet-report=warning <br>\ncet-report=error</b></p>\n\n<p style=\"margin-left:23%;\">Specify how to report the\nmissing <small>GNU_PROPERTY_X86_FEATURE_1_IBT</small> and\n<small>GNU_PROPERTY_X86_FEATURE_1_SHSTK</small> properties\nin input .note.gnu.property section. <b>cet-report=none</b>,\nwhich is the default, will make the linker not report\nmissing properties in input files. <b>cet-report=warning</b>\nwill make the linker issue a warning for missing properties\nin input files. <b>cet-report=error</b> will make the linker\nissue an error for missing properties in input files. Note\nthat <b>ibt</b> will turn off the missing\n<small>GNU_PROPERTY_X86_FEATURE_1_IBT</small> property\nreport and <b>shstk</b> will turn off the missing\n<small>GNU_PROPERTY_X86_FEATURE_1_SHSTK</small> property\nreport. Supported for Linux/i386 and Linux/x86_64.</p>\n\n<p style=\"margin-left:17%;\"><b>combreloc <br>\nnocombreloc</b></p>\n\n<p style=\"margin-left:23%;\">Combine multiple dynamic\nrelocation sections and sort to improve dynamic symbol\nlookup caching. Do not do this if <b>nocombreloc</b>.</p>\n\n<p style=\"margin-left:17%;\"><b>common <br>\nnocommon</b></p>\n\n<p style=\"margin-left:23%;\">Generate common symbols with\n<small>STT_COMMON</small> type during a relocatable link.\nUse <small>STT_OBJECT</small> type if <b>nocommon</b>.</p>\n\n\n<p style=\"margin-left:17%;\"><b>common-page-size=</b><i>value</i></p>\n\n<p style=\"margin-left:23%;\">Set the page size most commonly\nused to <i>value</i>. Memory image layout will be optimized\nto minimize memory pages if the system is using pages of\nthis size.</p>\n\n<p style=\"margin-left:17%;\"><b>defs</b></p>\n\n<p style=\"margin-left:23%;\">Report unresolved symbol\nreferences from regular object files. This is done even if\nthe linker is creating a non-symbolic shared library. This\noption is the inverse of <b>-z undefs</b>.</p>\n\n<p style=\"margin-left:17%;\"><b>dynamic-undefined-weak <br>\nnodynamic-undefined-weak</b></p>\n\n<p style=\"margin-left:23%;\">Make undefined weak symbols\ndynamic when building a dynamic object, if they are\nreferenced from a regular object file and not forced local\nby symbol visibility or versioning. Do not make them dynamic\nif <b>nodynamic-undefined-weak</b>. If neither option is\ngiven, a target may default to either option being in force,\nor make some other selection of undefined weak symbols\ndynamic. Not all targets support these options.</p>\n\n<p style=\"margin-left:17%;\"><b>execstack</b></p>\n\n<p style=\"margin-left:23%;\">Marks the object as requiring\nexecutable stack.</p>\n\n<p style=\"margin-left:17%;\"><b>global</b></p>\n\n<p style=\"margin-left:23%;\">This option is only meaningful\nwhen building a shared object. It makes the symbols defined\nby this shared object available for symbol resolution of\nsubsequently loaded libraries.</p>\n\n<p style=\"margin-left:17%;\"><b>globalaudit</b></p>\n\n<p style=\"margin-left:23%;\">This option is only meaningful\nwhen building a dynamic executable. This option marks the\nexecutable as requiring global auditing by setting the\n&quot;DF_1_GLOBAUDIT&quot; bit in the &quot;DT_FLAGS_1&quot;\ndynamic tag. Global auditing requires that any auditing\nlibrary defined via the <b>--depaudit</b> or <b>-P</b>\ncommand-line options be run for all dynamic objects loaded\nby the application.</p>\n\n<p style=\"margin-left:17%;\"><b>ibtplt</b></p>\n\n<p style=\"margin-left:23%;\">Generate Intel Indirect Branch\nTracking ( <small>IBT</small> ) enabled <small>PLT</small>\nentries. Supported for Linux/i386 and Linux/x86_64.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p><b>ibt</b></p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>Generate <small>GNU_PROPERTY_X86_FEATURE_1_IBT</small>\nin .note.gnu.property section to indicate compatibility with\n<small>IBT.</small> This also implies <b>ibtplt</b>.\nSupported for Linux/i386 and Linux/x86_64.</p></td></tr>\n</table>\n\n<p style=\"margin-left:17%;\"><b>indirect-extern-access <br>\nnoindirect-extern-access</b></p>\n\n<p style=\"margin-left:23%;\">Generate\n<small>GNU_PROPERTY_1_NEEDED_INDIRECT_EXTERN_ACCESS</small>\nin .note.gnu.property section to indicate that object file\nrequires canonical function pointers and cannot be used with\ncopy relocation. This option also implies\n<b>noextern-protected-data</b> and <b>nocopyreloc</b>.\nSupported for i386 and x86-64.</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>noindirect-extern-access</b>\nremoves\n<small>GNU_PROPERTY_1_NEEDED_INDIRECT_EXTERN_ACCESS</small>\nfrom .note.gnu.property section.</p>\n\n<p style=\"margin-left:17%;\"><b>initfirst</b></p>\n\n<p style=\"margin-left:23%;\">This option is only meaningful\nwhen building a shared object. It marks the object so that\nits runtime initialization will occur before the runtime\ninitialization of any other objects brought into the process\nat the same time. Similarly the runtime finalization of the\nobject will occur after the runtime finalization of any\nother objects.</p>\n\n<p style=\"margin-left:17%;\"><b>interpose</b></p>\n\n<p style=\"margin-left:23%;\">Specify that the dynamic loader\nshould modify its symbol search order so that symbols in\nthis shared library interpose all other shared libraries not\nso marked.</p>\n\n<p style=\"margin-left:17%;\"><b>unique <br>\nnounique</b></p>\n\n<p style=\"margin-left:23%;\">When generating a shared\nlibrary or other dynamically loadable <small>ELF</small>\nobject mark it as one that should (by default) only ever be\nloaded once, and only in the main namespace (when using\n&quot;dlmopen&quot;). This is primarily used to mark\nfundamental libraries such as libc, libpthread et al which\ndo not usually function correctly unless they are the sole\ninstances of themselves. This behaviour can be overridden by\nthe &quot;dlmopen&quot; caller and does not apply to certain\nloading mechanisms (such as audit libraries).</p>\n\n<p style=\"margin-left:17%;\"><b>lam-u48</b></p>\n\n<p style=\"margin-left:23%;\">Generate\n<small>GNU_PROPERTY_X86_FEATURE_1_LAM_U48</small> in\n.note.gnu.property section to indicate compatibility with\nIntel <small>LAM_U48.</small> Supported for\nLinux/x86_64.</p>\n\n<p style=\"margin-left:17%;\"><b>lam-u57</b></p>\n\n<p style=\"margin-left:23%;\">Generate\n<small>GNU_PROPERTY_X86_FEATURE_1_LAM_U57</small> in\n.note.gnu.property section to indicate compatibility with\nIntel <small>LAM_U57.</small> Supported for\nLinux/x86_64.</p>\n\n<p style=\"margin-left:17%;\"><b>lam-u48-report=none <br>\nlam-u48-report=warning <br>\nlam-u48-report=error</b></p>\n\n<p style=\"margin-left:23%;\">Specify how to report the\nmissing <small>GNU_PROPERTY_X86_FEATURE_1_LAM_U48</small>\nproperty in input .note.gnu.property section.\n<b>lam-u48-report=none</b>, which is the default, will make\nthe linker not report missing properties in input files.\n<b>lam-u48-report=warning</b> will make the linker issue a\nwarning for missing properties in input files.\n<b>lam-u48-report=error</b> will make the linker issue an\nerror for missing properties in input files. Supported for\nLinux/x86_64.</p>\n\n<p style=\"margin-left:17%;\"><b>lam-u57-report=none <br>\nlam-u57-report=warning <br>\nlam-u57-report=error</b></p>\n\n<p style=\"margin-left:23%;\">Specify how to report the\nmissing <small>GNU_PROPERTY_X86_FEATURE_1_LAM_U57</small>\nproperty in input .note.gnu.property section.\n<b>lam-u57-report=none</b>, which is the default, will make\nthe linker not report missing properties in input files.\n<b>lam-u57-report=warning</b> will make the linker issue a\nwarning for missing properties in input files.\n<b>lam-u57-report=error</b> will make the linker issue an\nerror for missing properties in input files. Supported for\nLinux/x86_64.</p>\n\n<p style=\"margin-left:17%;\"><b>lam-report=none <br>\nlam-report=warning <br>\nlam-report=error</b></p>\n\n<p style=\"margin-left:23%;\">Specify how to report the\nmissing <small>GNU_PROPERTY_X86_FEATURE_1_LAM_U48</small>\nand <small>GNU_PROPERTY_X86_FEATURE_1_LAM_U57</small>\nproperties in input .note.gnu.property section.\n<b>lam-report=none</b>, which is the default, will make the\nlinker not report missing properties in input files.\n<b>lam-report=warning</b> will make the linker issue a\nwarning for missing properties in input files.\n<b>lam-report=error</b> will make the linker issue an error\nfor missing properties in input files. Supported for\nLinux/x86_64.</p>\n\n<p style=\"margin-left:17%;\"><b>lazy</b></p>\n\n<p style=\"margin-left:23%;\">When generating an executable\nor shared library, mark it to tell the dynamic linker to\ndefer function call resolution to the point when the\nfunction is called (lazy binding), rather than at load time.\nLazy binding is the default.</p>\n\n<p style=\"margin-left:17%;\"><b>loadfltr</b></p>\n\n<p style=\"margin-left:23%;\">Specify that the object&rsquo;s\nfilters be processed immediately at runtime.</p>\n\n\n<p style=\"margin-left:17%;\"><b>max-page-size=</b><i>value</i></p>\n\n<p style=\"margin-left:23%;\">Set the maximum memory page\nsize supported to <i>value</i>.</p>\n\n<p style=\"margin-left:17%;\"><b>muldefs</b></p>\n\n<p style=\"margin-left:23%;\">Allow multiple definitions.</p>\n\n<p style=\"margin-left:17%;\"><b>nocopyreloc</b></p>\n\n<p style=\"margin-left:23%;\">Disable linker generated\n.dynbss variables used in place of variables defined in\nshared libraries. May result in dynamic text\nrelocations.</p>\n\n<p style=\"margin-left:17%;\"><b>nodefaultlib</b></p>\n\n<p style=\"margin-left:23%;\">Specify that the dynamic loader\nsearch for dependencies of this object should ignore any\ndefault library search paths.</p>\n\n<p style=\"margin-left:17%;\"><b>nodelete</b></p>\n\n<p style=\"margin-left:23%;\">Specify that the object\nshouldn&rsquo;t be unloaded at runtime.</p>\n\n<p style=\"margin-left:17%;\"><b>nodlopen</b></p>\n\n<p style=\"margin-left:23%;\">Specify that the object is not\navailable to &quot;dlopen&quot;.</p>\n\n<p style=\"margin-left:17%;\"><b>nodump</b></p>\n\n<p style=\"margin-left:23%;\">Specify that the object can not\nbe dumped by &quot;dldump&quot;.</p>\n\n<p style=\"margin-left:17%;\"><b>noexecstack</b></p>\n\n<p style=\"margin-left:23%;\">Marks the object as not\nrequiring executable stack.</p>\n\n\n<p style=\"margin-left:17%;\"><b>noextern-protected-data</b></p>\n\n<p style=\"margin-left:23%;\">Don&rsquo;t treat protected\ndata symbols as external when building a shared library.\nThis option overrides the linker backend default. It can be\nused to work around incorrect relocations against protected\ndata symbols generated by compiler. Updates on protected\ndata symbols by another module aren&rsquo;t visible to the\nresulting shared library. Supported for i386 and x86-64.</p>\n\n<p style=\"margin-left:17%;\"><b>noreloc-overflow</b></p>\n\n<p style=\"margin-left:23%;\">Disable relocation overflow\ncheck. This can be used to disable relocation overflow check\nif there will be no dynamic relocation overflow at run-time.\nSupported for x86_64.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p><b>now</b></p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>When generating an executable or shared library, mark it\nto tell the dynamic linker to resolve all symbols when the\nprogram is started, or when the shared library is loaded by\ndlopen, instead of deferring function call resolution to the\npoint when the function is first called.</p></td></tr>\n</table>\n\n<p style=\"margin-left:17%;\"><b>origin</b></p>\n\n<p style=\"margin-left:23%;\">Specify that the object\nrequires <b>$ORIGIN</b> handling in paths.</p>\n\n<p style=\"margin-left:17%;\"><b>pack-relative-relocs <br>\nnopack-relative-relocs</b></p>\n\n<p style=\"margin-left:23%;\">Generate compact relative\nrelocation in position-independent executable and shared\nlibrary. It adds &quot;DT_RELR&quot;, &quot;DT_RELRSZ&quot;\nand &quot;DT_RELRENT&quot; entries to the dynamic section.\nIt is ignored when building position-dependent executable\nand relocatable output. <b>nopack-relative-relocs</b> is the\ndefault, which disables compact relative relocation. When\nlinked against the <small>GNU C</small> Library, a\n<small>GLIBC_ABI_DT_RELR</small> symbol version dependency\non the shared C Library is added to the output. Supported\nfor i386 and x86-64.</p>\n\n<p style=\"margin-left:17%;\"><b>relro <br>\nnorelro</b></p>\n\n<p style=\"margin-left:23%;\">Create an <small>ELF</small>\n&quot;PT_GNU_RELRO&quot; segment header in the object. This\nspecifies a memory segment that should be made read-only\nafter relocation, if supported. Specifying\n<b>common-page-size</b> smaller than the system page size\nwill render this protection ineffective. Don&rsquo;t create\nan <small>ELF</small> &quot;PT_GNU_RELRO&quot; segment if\n<b>norelro</b>.</p>\n\n\n<p style=\"margin-left:17%;\"><b>report-relative-reloc</b></p>\n\n<p style=\"margin-left:23%;\">Report dynamic relative\nrelocations generated by linker. Supported for Linux/i386\nand Linux/x86_64.</p>\n\n<p style=\"margin-left:17%;\"><b>separate-code <br>\nnoseparate-code</b></p>\n\n<p style=\"margin-left:23%;\">Create separate code\n&quot;PT_LOAD&quot; segment header in the object. This\nspecifies a memory segment that should contain only\ninstructions and must be in wholly disjoint pages from any\nother data. Don&rsquo;t create separate code\n&quot;PT_LOAD&quot; segment if <b>noseparate-code</b> is\nused.</p>\n\n<p style=\"margin-left:17%;\"><b>shstk</b></p>\n\n<p style=\"margin-left:23%;\">Generate\n<small>GNU_PROPERTY_X86_FEATURE_1_SHSTK</small> in\n.note.gnu.property section to indicate compatibility with\nIntel Shadow Stack. Supported for Linux/i386 and\nLinux/x86_64.</p>\n\n\n<p style=\"margin-left:17%;\"><b>stack-size=</b><i>value</i></p>\n\n<p style=\"margin-left:23%;\">Specify a stack size for an\n<small>ELF</small> &quot;PT_GNU_STACK&quot; segment.\nSpecifying zero will override any default non-zero sized\n&quot;PT_GNU_STACK&quot; segment creation.</p>\n\n<p style=\"margin-left:17%;\"><b>start-stop-gc <br>\nnostart-stop-gc</b></p>\n\n<p style=\"margin-left:23%;\">When <b>--gc-sections</b> is in\neffect, a reference from a retained section to\n&quot;__start_SECNAME&quot; or &quot;__stop_SECNAME&quot;\ncauses all input sections named &quot;SECNAME&quot; to also\nbe retained, if &quot;SECNAME&quot; is representable as a C\nidentifier and either &quot;__start_SECNAME&quot; or\n&quot;__stop_SECNAME&quot; is synthesized by the linker.\n<b>-z start-stop-gc</b> disables this effect, allowing\nsections to be garbage collected as if the special\nsynthesized symbols were not defined. <b>-z\nstart-stop-gc</b> has no effect on a definition of\n&quot;__start_SECNAME&quot; or &quot;__stop_SECNAME&quot; in\nan object file or linker script. Such a definition will\nprevent the linker providing a synthesized\n&quot;__start_SECNAME&quot; or &quot;__stop_SECNAME&quot;\nrespectively, and therefore the special treatment by garbage\ncollection for those references.</p>\n\n\n<p style=\"margin-left:17%;\"><b>start-stop-visibility=</b><i>value</i></p>\n\n<p style=\"margin-left:23%;\">Specify the <small>ELF</small>\nsymbol visibility for synthesized\n&quot;__start_SECNAME&quot; and &quot;__stop_SECNAME&quot;\nsymbols. <i>value</i> must be exactly <b>default</b>,\n<b>internal</b>, <b>hidden</b>, or <b>protected</b>. If no\n<b>-z start-stop-visibility</b> option is given,\n<b>protected</b> is used for compatibility with historical\npractice. However, it&rsquo;s highly recommended to use\n<b>-z start-stop-visibility=hidden</b> in new programs and\nshared libraries so that these symbols are not exported\nbetween shared objects, which is not usually what&rsquo;s\nintended.</p>\n\n<p style=\"margin-left:17%;\"><b>text <br>\nnotext <br>\ntextoff</b></p>\n\n<p style=\"margin-left:23%;\">Report an error if\n<small>DT_TEXTREL</small> is set, i.e., if the\nposition-independent or shared object has dynamic\nrelocations in read-only sections. Don&rsquo;t report an\nerror if <b>notext</b> or <b>textoff</b>.</p>\n\n<p style=\"margin-left:17%;\"><b>undefs</b></p>\n\n<p style=\"margin-left:23%;\">Do not report unresolved symbol\nreferences from regular object files, either when creating\nan executable, or when creating a shared library. This\noption is the inverse of <b>-z defs</b>.</p>\n\n<p style=\"margin-left:17%;\"><b>unique-symbol <br>\nnounique-symbol</b></p>\n\n<p style=\"margin-left:23%;\">Avoid duplicated local symbol\nnames in the symbol string table. Append\n&quot;.&quot;number&quot;&quot; to duplicated local symbol\nnames if <b>unique-symbol</b> is used.\n<b>nounique-symbol</b> is the default.</p>\n\n<p style=\"margin-left:17%;\"><b>x86-64-baseline <br>\nx86-64-v2 <br>\nx86-64-v3 <br>\nx86-64-v4</b></p>\n\n<p style=\"margin-left:23%;\">Specify the x86-64\n<small>ISA</small> level needed in .note.gnu.property\nsection. <b>x86-64-baseline</b> generates\n&quot;GNU_PROPERTY_X86_ISA_1_BASELINE&quot;.\n<b>x86-64-v2</b> generates\n&quot;GNU_PROPERTY_X86_ISA_1_V2&quot;. <b>x86-64-v3</b>\ngenerates &quot;GNU_PROPERTY_X86_ISA_1_V3&quot;.\n<b>x86-64-v4</b> generates\n&quot;GNU_PROPERTY_X86_ISA_1_V4&quot;. Supported for\nLinux/i386 and Linux/x86_64.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Other keywords\nare ignored for Solaris compatibility.</p>\n\n<p style=\"margin-left:11%;\"><b>-(</b> <i>archives</i> <b>-)\n<br>\n--start-group</b> <i>archives</i> <b>--end-group</b></p>\n\n<p style=\"margin-left:17%;\">The <i>archives</i> should be a\nlist of archive files. They may be either explicit file\nnames, or <b>-l</b> options.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The specified\narchives are searched repeatedly until no new undefined\nreferences are created. Normally, an archive is searched\nonly once in the order that it is specified on the command\nline. If a symbol in that archive is needed to resolve an\nundefined symbol referred to by an object in an archive that\nappears later on the command line, the linker would not be\nable to resolve that reference. By grouping the archives,\nthey will all be searched repeatedly until all possible\nreferences are resolved.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Using this\noption has a significant performance cost. It is best to use\nit only when there are unavoidable circular references\nbetween two or more archives.</p>\n\n<p style=\"margin-left:11%;\"><b>--accept-unknown-input-arch\n<br>\n--no-accept-unknown-input-arch</b></p>\n\n<p style=\"margin-left:17%;\">Tells the linker to accept\ninput files whose architecture cannot be recognised. The\nassumption is that the user knows what they are doing and\ndeliberately wants to link in these unknown input files.\nThis was the default behaviour of the linker, before release\n2.14. The default behaviour from release 2.14 onwards is to\nreject such input files, and so the\n<b>--accept-unknown-input-arch</b> option has been added to\nrestore the old behaviour.</p>\n\n<p style=\"margin-left:11%;\"><b>--as-needed <br>\n--no-as-needed</b></p>\n\n<p style=\"margin-left:17%;\">This option affects <small>ELF\nDT_NEEDED</small> tags for dynamic libraries mentioned on\nthe command line after the <b>--as-needed</b> option.\nNormally the linker will add a <small>DT_NEEDED</small> tag\nfor each dynamic library mentioned on the command line,\nregardless of whether the library is actually needed or not.\n<b>--as-needed</b> causes a <small>DT_NEEDED</small> tag to\nonly be emitted for a library that <i>at that point in the\nlink</i> satisfies a non-weak undefined symbol reference\nfrom a regular object file or, if the library is not found\nin the <small>DT_NEEDED</small> lists of other needed\nlibraries, a non-weak undefined symbol reference from\nanother needed dynamic library. Object files or libraries\nappearing on the command line <i>after</i> the library in\nquestion do not affect whether the library is seen as\nneeded. This is similar to the rules for extraction of\nobject files from archives. <b>--no-as-needed</b> restores\nthe default behaviour.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note: On Linux\nbased systems the <b>--as-needed</b> option also has an\naffect on the behaviour of the <b>--rpath</b> and\n<b>--rpath-link</b> options. See the description of\n<b>--rpath-link</b> for more details.</p>\n\n<p style=\"margin-left:11%;\"><b>--add-needed <br>\n--no-add-needed</b></p>\n\n<p style=\"margin-left:17%;\">These two options have been\ndeprecated because of the similarity of their names to the\n<b>--as-needed</b> and <b>--no-as-needed</b> options. They\nhave been replaced by <b>--copy-dt-needed-entries</b> and\n<b>--no-copy-dt-needed-entries</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>-assert</b>\n<i>keyword</i></p>\n\n<p style=\"margin-left:17%;\">This option is ignored for\nSunOS compatibility.</p>\n\n<p style=\"margin-left:11%;\"><b>-Bdynamic</b></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-dy</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-call_shared</b></p>\n\n<p style=\"margin-left:17%;\">Link against dynamic libraries.\nThis is only meaningful on platforms for which shared\nlibraries are supported. This option is normally the default\non such platforms. The different variants of this option are\nfor compatibility with various systems. You may use this\noption multiple times on the command line: it affects\nlibrary searching for <b>-l</b> options which follow it.</p>\n\n<p style=\"margin-left:11%;\"><b>-Bgroup</b></p>\n\n<p style=\"margin-left:17%;\">Set the &quot;DF_1_GROUP&quot;\nflag in the &quot;DT_FLAGS_1&quot; entry in the dynamic\nsection. This causes the runtime linker to handle lookups in\nthis object and its dependencies to be performed only inside\nthe group. <b>--unresolved-symbols=report-all</b> is\nimplied. This option is only meaningful on\n<small>ELF</small> platforms which support shared\nlibraries.</p>\n\n<p style=\"margin-left:11%;\"><b>-Bstatic</b></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-dn</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-non_shared <br>\n-static</b></p>\n\n<p style=\"margin-left:17%;\">Do not link against shared\nlibraries. This is only meaningful on platforms for which\nshared libraries are supported. The different variants of\nthis option are for compatibility with various systems. You\nmay use this option multiple times on the command line: it\naffects library searching for <b>-l</b> options which follow\nit. This option also implies\n<b>--unresolved-symbols=report-all</b>. This option can be\nused with <b>-shared</b>. Doing so means that a shared\nlibrary is being created but that all of the library&rsquo;s\nexternal references must be resolved by pulling in entries\nfrom static libraries.</p>\n\n<p style=\"margin-left:11%;\"><b>-Bsymbolic</b></p>\n\n<p style=\"margin-left:17%;\">When creating a shared library,\nbind references to global symbols to the definition within\nthe shared library, if any. Normally, it is possible for a\nprogram linked against a shared library to override the\ndefinition within the shared library. This option is only\nmeaningful on <small>ELF</small> platforms which support\nshared libraries.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-Bsymbolic-functions</b></p>\n\n<p style=\"margin-left:17%;\">When creating a shared library,\nbind references to global function symbols to the definition\nwithin the shared library, if any. This option is only\nmeaningful on <small>ELF</small> platforms which support\nshared libraries.</p>\n\n<p style=\"margin-left:11%;\"><b>-Bno-symbolic</b></p>\n\n<p style=\"margin-left:17%;\">This option can cancel\npreviously specified <b>-Bsymbolic</b> and\n<b>-Bsymbolic-functions</b>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--dynamic-list=</b><i>dynamic-list-file</i></p>\n\n<p style=\"margin-left:17%;\">Specify the name of a dynamic\nlist file to the linker. This is typically used when\ncreating shared libraries to specify a list of global\nsymbols whose references shouldn&rsquo;t be bound to the\ndefinition within the shared library, or creating\ndynamically linked executables to specify a list of symbols\nwhich should be added to the symbol table in the executable.\nThis option is only meaningful on <small>ELF</small>\nplatforms which support shared libraries.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The format of\nthe dynamic list is the same as the version node without\nscope and node name. See <b><small>VERSION</small></b> for\nmore information.</p>\n\n<p style=\"margin-left:11%;\"><b>--dynamic-list-data</b></p>\n\n<p style=\"margin-left:17%;\">Include all global data symbols\nto the dynamic list.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--dynamic-list-cpp-new</b></p>\n\n<p style=\"margin-left:17%;\">Provide the builtin dynamic\nlist for C <small>++</small> operator new and delete. It is\nmainly useful for building shared libstdc++.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--dynamic-list-cpp-typeinfo</b></p>\n\n<p style=\"margin-left:17%;\">Provide the builtin dynamic\nlist for C <small>++</small> runtime type\nidentification.</p>\n\n<p style=\"margin-left:11%;\"><b>--check-sections <br>\n--no-check-sections</b></p>\n\n<p style=\"margin-left:17%;\">Asks the linker <i>not</i> to\ncheck section addresses after they have been assigned to see\nif there are any overlaps. Normally the linker will perform\nthis check, and if it finds any overlaps it will produce\nsuitable error messages. The linker does know about, and\ndoes make allowances for sections in overlays. The default\nbehaviour can be restored by using the command-line switch\n<b>--check-sections</b>. Section overlap is not usually\nchecked for relocatable links. You can force checking in\nthat case by using the <b>--check-sections</b> option.</p>\n\n<p style=\"margin-left:11%;\"><b>--copy-dt-needed-entries\n<br>\n--no-copy-dt-needed-entries</b></p>\n\n<p style=\"margin-left:17%;\">This option affects the\ntreatment of dynamic libraries referred to by\n<small>DT_NEEDED</small> tags <i>inside</i>\n<small>ELF</small> dynamic libraries mentioned on the\ncommand line. Normally the linker won&rsquo;t add a\n<small>DT_NEEDED</small> tag to the output binary for each\nlibrary mentioned in a <small>DT_NEEDED</small> tag in an\ninput dynamic library. With <b>--copy-dt-needed-entries</b>\nspecified on the command line however any dynamic libraries\nthat follow it will have their <small>DT_NEEDED</small>\nentries added. The default behaviour can be restored with\n<b>--no-copy-dt-needed-entries</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This option\nalso has an effect on the resolution of symbols in dynamic\nlibraries. With <b>--copy-dt-needed-entries</b> dynamic\nlibraries mentioned on the command line will be recursively\nsearched, following their <small>DT_NEEDED</small> tags to\nother libraries, in order to resolve symbols required by the\noutput binary. With the default setting however the\nsearching of dynamic libraries that follow it will stop with\nthe dynamic library itself. No <small>DT_NEEDED</small>\nlinks will be traversed to resolve symbols.</p>\n\n<p style=\"margin-left:11%;\"><b>--cref</b></p>\n\n<p style=\"margin-left:17%;\">Output a cross reference table.\nIf a linker map file is being generated, the cross reference\ntable is printed to the map file. Otherwise, it is printed\non the standard output.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The format of\nthe table is intentionally simple, so that it may be easily\nprocessed by a script if necessary. The symbols are printed\nout, sorted by name. For each symbol, a list of file names\nis given. If the symbol is defined, the first file listed is\nthe location of the definition. If the symbol is defined as\na common value then any files where this happens appear\nnext. Finally any files that reference the symbol are\nlisted.</p>\n\n<p style=\"margin-left:11%;\"><b>--ctf-variables <br>\n--no-ctf-variables</b></p>\n\n<p style=\"margin-left:17%;\">The <small>CTF</small>\ndebuginfo format supports a section which encodes the names\nand types of variables found in the program which do not\nappear in any symbol table. These variables clearly cannot\nbe looked up by address by conventional debuggers, so the\nspace used for their types and names is usually wasted: the\ntypes are usually small but the names are often not.\n<b>--ctf-variables</b> causes the generation of such a\nsection. The default behaviour can be restored with\n<b>--no-ctf-variables</b>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--ctf-share-types=</b><i>method</i></p>\n\n<p style=\"margin-left:17%;\">Adjust the method used to share\ntypes between translation units in <small>CTF.</small>\n<b><br>\nshare-unconflicted</b></p>\n\n<p style=\"margin-left:23%;\">Put all types that do not have\nambiguous definitions into the shared dictionary, where\ndebuggers can easily access them, even if they only occur in\none translation unit. This is the default.</p>\n\n<p style=\"margin-left:17%;\"><b>share-duplicated</b></p>\n\n<p style=\"margin-left:23%;\">Put only types that occur in\nmultiple translation units into the shared dictionary: types\nwith only one definition go into per-translation-unit\ndictionaries. Types with ambiguous definitions in multiple\ntranslation units always go into per-translation-unit\ndictionaries. This tends to make the <small>CTF</small>\nlarger, but may reduce the amount of <small>CTF</small> in\nthe shared dictionary. For very large projects this may\nspeed up opening the <small>CTF</small> and save memory in\nthe <small>CTF</small> consumer at runtime.</p>\n\n<p style=\"margin-left:11%;\"><b>--no-define-common</b></p>\n\n<p style=\"margin-left:17%;\">This option inhibits the\nassignment of addresses to common symbols. The script\ncommand &quot;INHIBIT_COMMON_ALLOCATION&quot; has the same\neffect.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\n<b>--no-define-common</b> option allows decoupling the\ndecision to assign addresses to Common symbols from the\nchoice of the output file type; otherwise a non-Relocatable\noutput type forces assigning addresses to Common symbols.\nUsing <b>--no-define-common</b> allows Common symbols that\nare referenced from a shared library to be assigned\naddresses only in the main program. This eliminates the\nunused duplicate space in the shared library, and also\nprevents any possible confusion over resolving to the wrong\nduplicate when there are many dynamic modules with\nspecialized search paths for runtime symbol resolution.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--force-group-allocation</b></p>\n\n<p style=\"margin-left:17%;\">This option causes the linker\nto place section group members like normal input sections,\nand to delete the section groups. This is the default\nbehaviour for a final link but this option can be used to\nchange the behaviour of a relocatable link (<b>-r</b>). The\nscript command &quot;FORCE_GROUP_ALLOCATION&quot; has the\nsame effect.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--defsym=</b><i>symbol</i><b>=</b><i>expression</i></p>\n\n<p style=\"margin-left:17%;\">Create a global symbol in the\noutput file, containing the absolute address given by\n<i>expression</i>. You may use this option as many times as\nnecessary to define multiple symbols in the command line. A\nlimited form of arithmetic is supported for the\n<i>expression</i> in this context: you may give a\nhexadecimal constant or the name of an existing symbol, or\nuse &quot;+&quot; and &quot;-&quot; to add or subtract\nhexadecimal constants or symbols. If you need more elaborate\nexpressions, consider using the linker command language from\na script. <i>Note:</i> there should be no white space\nbetween <i>symbol</i>, the equals sign\n(&quot;<b>=</b>&quot;), and <i>expression</i>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The linker\nprocesses <b>--defsym</b> arguments and <b>-T</b> arguments\nin order, placing <b>--defsym</b> before <b>-T</b> will\ndefine the symbol before the linker script from <b>-T</b> is\nprocessed, while placing <b>--defsym</b> after <b>-T</b>\nwill define the symbol after the linker script has been\nprocessed. This difference has consequences for expressions\nwithin the linker script that use the <b>--defsym</b>\nsymbols, which order is correct will depend on what you are\ntrying to achieve.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--demangle[=</b><i>style</i><b>]\n<br>\n--no-demangle</b></p>\n\n<p style=\"margin-left:17%;\">These options control whether\nto demangle symbol names in error messages and other output.\nWhen the linker is told to demangle, it tries to present\nsymbol names in a readable fashion: it strips leading\nunderscores if they are used by the object file format, and\nconverts C <small>++</small> mangled symbol names into user\nreadable names. Different compilers have different mangling\nstyles. The optional demangling style argument can be used\nto choose an appropriate demangling style for your compiler.\nThe linker will demangle by default unless the environment\nvariable <b><small>COLLECT_NO_DEMANGLE</small></b> is set.\nThese options may be used to override the default.</p>\n\n<p style=\"margin-left:11%;\"><b>-I</b><i>file</i> <b><br>\n--dynamic-linker=</b><i>file</i></p>\n\n<p style=\"margin-left:17%;\">Set the name of the dynamic\nlinker. This is only meaningful when generating dynamically\nlinked <small>ELF</small> executables. The default dynamic\nlinker is normally correct; don&rsquo;t use this unless you\nknow what you are doing.</p>\n\n<p style=\"margin-left:11%;\"><b>--no-dynamic-linker</b></p>\n\n<p style=\"margin-left:17%;\">When producing an executable\nfile, omit the request for a dynamic linker to be used at\nload-time. This is only meaningful for <small>ELF</small>\nexecutables that contain dynamic relocations, and usually\nrequires entry point code that is capable of processing\nthese relocations.</p>\n\n<p style=\"margin-left:11%;\"><b>--embedded-relocs</b></p>\n\n<p style=\"margin-left:17%;\">This option is similar to the\n<b>--emit-relocs</b> option except that the relocs are\nstored in a target-specific section. This option is only\nsupported by the <b><small>BFIN</small></b> ,\n<b><small>CR16</small></b> and <i>M68K</i> targets.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--disable-multiple-abs-defs</b></p>\n\n<p style=\"margin-left:17%;\">Do not allow multiple\ndefinitions with symbols included in filename invoked by -R\nor --just-symbols</p>\n\n<p style=\"margin-left:11%;\"><b>--fatal-warnings <br>\n--no-fatal-warnings</b></p>\n\n<p style=\"margin-left:17%;\">Treat all warnings as errors.\nThe default behaviour can be restored with the option\n<b>--no-fatal-warnings</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>--force-exe-suffix</b></p>\n\n<p style=\"margin-left:17%;\">Make sure that an output file\nhas a .exe suffix.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If a\nsuccessfully built fully linked output file does not have a\n&quot;.exe&quot; or &quot;.dll&quot; suffix, this option\nforces the linker to copy the output file to one of the same\nname with a &quot;.exe&quot; suffix. This option is useful\nwhen using unmodified Unix makefiles on a Microsoft Windows\nhost, since some versions of Windows won&rsquo;t run an\nimage unless it ends in a &quot;.exe&quot; suffix.</p>\n\n<p style=\"margin-left:11%;\"><b>--gc-sections <br>\n--no-gc-sections</b></p>\n\n<p style=\"margin-left:17%;\">Enable garbage collection of\nunused input sections. It is ignored on targets that do not\nsupport this option. The default behaviour (of not\nperforming this garbage collection) can be restored by\nspecifying <b>--no-gc-sections</b> on the command line. Note\nthat garbage collection for <small>COFF</small> and\n<small>PE</small> format targets is supported, but the\nimplementation is currently considered to be\nexperimental.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>--gc-sections</b>\ndecides which input sections are used by examining symbols\nand relocations. The section containing the entry symbol and\nall sections containing symbols undefined on the\ncommand-line will be kept, as will sections containing\nsymbols referenced by dynamic objects. Note that when\nbuilding shared libraries, the linker must assume that any\nvisible symbol is referenced. Once this initial set of\nsections has been determined, the linker recursively marks\nas used any section referenced by their relocations. See\n<b>--entry</b>, <b>--undefined</b>, and\n<b>--gc-keep-exported</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This option can\nbe set when doing a partial link (enabled with option\n<b>-r</b>). In this case the root of symbols kept must be\nexplicitly specified either by one of the options\n<b>--entry</b>, <b>--undefined</b>, or\n<b>--gc-keep-exported</b> or by a &quot;ENTRY&quot; command\nin the linker script.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">As a\n<small>GNU</small> extension, <small>ELF</small> input\nsections marked with the &quot;SHF_GNU_RETAIN&quot; flag\nwill not be garbage collected.</p>\n\n<p style=\"margin-left:11%;\"><b>--print-gc-sections <br>\n--no-print-gc-sections</b></p>\n\n<p style=\"margin-left:17%;\">List all sections removed by\ngarbage collection. The listing is printed on stderr. This\noption is only effective if garbage collection has been\nenabled via the <b>--gc-sections</b>) option. The default\nbehaviour (of not listing the sections that are removed) can\nbe restored by specifying <b>--no-print-gc-sections</b> on\nthe command line.</p>\n\n<p style=\"margin-left:11%;\"><b>--gc-keep-exported</b></p>\n\n<p style=\"margin-left:17%;\">When <b>--gc-sections</b> is\nenabled, this option prevents garbage collection of unused\ninput sections that contain global symbols having default or\nprotected visibility. This option is intended to be used for\nexecutables where unreferenced sections would otherwise be\ngarbage collected regardless of the external visibility of\ncontained symbols. Note that this option has no effect when\nlinking shared objects since it is already the default\nbehaviour. This option is only supported for\n<small>ELF</small> format targets.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--print-output-format</b></p>\n\n<p style=\"margin-left:17%;\">Print the name of the default\noutput format (perhaps influenced by other command-line\noptions). This is the string that would appear in an\n&quot;OUTPUT_FORMAT&quot; linker script command.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--print-memory-usage</b></p>\n\n<p style=\"margin-left:17%;\">Print used size, total size and\nused size of memory regions created with the\n<b><small>MEMORY</small></b> command. This is useful on\nembedded targets to have a quick view of amount of free\nmemory. The format of the output has one headline and one\nline per region. It is both human readable and easily\nparsable by tools. Here is an example of an output:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Memory region\nUsed Size Region Size %age Used <br>\nROM: 256 KB 1 MB 25.00% <br>\nRAM: 32 B 2 GB 0.00%</p>\n\n<p style=\"margin-left:11%;\"><b>--help</b></p>\n\n<p style=\"margin-left:17%;\">Print a summary of the\ncommand-line options on the standard output and exit.</p>\n\n<p style=\"margin-left:11%;\"><b>--target-help</b></p>\n\n<p style=\"margin-left:17%;\">Print a summary of all\ntarget-specific options on the standard output and exit.</p>\n\n<p style=\"margin-left:11%;\"><b>-Map=</b><i>mapfile</i></p>\n\n<p style=\"margin-left:17%;\">Print a link map to the file\n<i>mapfile</i>. See the description of the <b>-M</b> option,\nabove. If <i>mapfile</i> is just the character &quot;-&quot;\nthen the map will be written to stdout.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Specifying a\ndirectory as <i>mapfile</i> causes the linker map to be\nwritten as a file inside the directory. Normally name of the\nfile inside the directory is computed as the basename of the\n<i>output</i> file with &quot;.map&quot; appended. If\nhowever the special character &quot;%&quot; is used then\nthis will be replaced by the full path of the output file.\nAdditionally if there are any characters after the <i>%</i>\nsymbol then &quot;.map&quot; will no longer be appended.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">-o foo.exe\n-Map=bar [Creates ./bar] <br>\n-o ../dir/foo.exe -Map=bar [Creates ./bar] <br>\n-o foo.exe -Map=../dir [Creates ../dir/foo.exe.map] <br>\n-o ../dir2/foo.exe -Map=../dir [Creates ../dir/foo.exe.map]\n<br>\n-o foo.exe -Map=% [Creates ./foo.exe.map] <br>\n-o ../dir/foo.exe -Map=% [Creates ../dir/foo.exe.map] <br>\n-o foo.exe -Map=%.bar [Creates ./foo.exe.bar] <br>\n-o ../dir/foo.exe -Map=%.bar [Creates ../dir/foo.exe.bar]\n<br>\n-o ../dir2/foo.exe -Map=../dir/% [Creates\n../dir/../dir2/foo.exe.map] <br>\n-o ../dir2/foo.exe -Map=../dir/%.bar [Creates\n../dir/../dir2/foo.exe.bar]</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">It is an error\nto specify more than one &quot;%&quot; character.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If the map file\nalready exists then it will be overwritten by this\noperation.</p>\n\n<p style=\"margin-left:11%;\"><b>--no-keep-memory</b></p>\n\n<p style=\"margin-left:17%;\"><b>ld</b> normally optimizes\nfor speed over memory usage by caching the symbol tables of\ninput files in memory. This option tells <b>ld</b> to\ninstead optimize for memory usage, by rereading the symbol\ntables as necessary. This may be required if <b>ld</b> runs\nout of memory space while linking a large executable.</p>\n\n<p style=\"margin-left:11%;\"><b>--no-undefined <br>\n-z defs</b></p>\n\n<p style=\"margin-left:17%;\">Report unresolved symbol\nreferences from regular object files. This is done even if\nthe linker is creating a non-symbolic shared library. The\nswitch <b>--[no-]allow-shlib-undefined</b> controls the\nbehaviour for reporting unresolved references found in\nshared libraries being linked in.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The effects of\nthis option can be reverted by using &quot;-z\nundefs&quot;.</p>\n\n<p style=\"margin-left:11%;\"><b>--allow-multiple-definition\n<br>\n-z muldefs</b></p>\n\n<p style=\"margin-left:17%;\">Normally when a symbol is\ndefined multiple times, the linker will report a fatal\nerror. These options allow multiple definitions and the\nfirst definition will be used.</p>\n\n<p style=\"margin-left:11%;\"><b>--allow-shlib-undefined <br>\n--no-allow-shlib-undefined</b></p>\n\n<p style=\"margin-left:17%;\">Allows or disallows undefined\nsymbols in shared libraries. This switch is similar to\n<b>--no-undefined</b> except that it determines the\nbehaviour when the undefined symbols are in a shared library\nrather than a regular object file. It does not affect how\nundefined symbols in regular object files are handled.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The default\nbehaviour is to report errors for any undefined symbols\nreferenced in shared libraries if the linker is being used\nto create an executable, but to allow them if the linker is\nbeing used to create a shared library.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The reasons for\nallowing undefined symbol references in shared libraries\nspecified at link time are that:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"77%\">\n\n\n<p>A shared library specified at link time may not be the\nsame as the one that is available at load time, so the\nsymbol might actually be resolvable at load time.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"77%\">\n\n\n<p>There are some operating systems, eg BeOS and\n<small>HPPA,</small> where undefined symbols in shared\nlibraries are normal.</p></td></tr>\n</table>\n\n<p style=\"margin-left:23%; margin-top: 1em\">The BeOS kernel\nfor example patches shared libraries at load time to select\nwhichever function is most appropriate for the current\narchitecture. This is used, for example, to dynamically\nselect an appropriate memset function.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--error-handling-script=</b><i>scriptname</i></p>\n\n<p style=\"margin-left:17%;\">If this option is provided then\nthe linker will invoke <i>scriptname</i> whenever an error\nis encountered. Currently however only two kinds of error\nare supported: missing symbols and missing libraries. Two\narguments will be passed to script: the keyword\n&quot;undefined-symbol&quot; or &rsquo;missing-lib&quot; and\nthe <i>name</i> of the undefined symbol or missing library.\nThe intention is that the script will provide suggestions to\nthe user as to where the symbol or library might be found.\nAfter the script has finished then the normal linker error\nmessage will be displayed.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\navailability of this option is controlled by a configure\ntime switch, so it may not be present in specific\nimplementations.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--no-undefined-version</b></p>\n\n<p style=\"margin-left:17%;\">Normally when a symbol has an\nundefined version, the linker will ignore it. This option\ndisallows symbols with undefined version and a fatal error\nwill be issued instead.</p>\n\n<p style=\"margin-left:11%;\"><b>--default-symver</b></p>\n\n<p style=\"margin-left:17%;\">Create and use a default symbol\nversion (the soname) for unversioned exported symbols.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--default-imported-symver</b></p>\n\n<p style=\"margin-left:17%;\">Create and use a default symbol\nversion (the soname) for unversioned imported symbols.</p>\n\n<p style=\"margin-left:11%;\"><b>--no-warn-mismatch</b></p>\n\n<p style=\"margin-left:17%;\">Normally <b>ld</b> will give an\nerror if you try to link together input files that are\nmismatched for some reason, perhaps because they have been\ncompiled for different processors or for different\nendiannesses. This option tells <b>ld</b> that it should\nsilently permit such possible errors. This option should\nonly be used with care, in cases when you have taken some\nspecial action that ensures that the linker errors are\ninappropriate.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--no-warn-search-mismatch</b></p>\n\n<p style=\"margin-left:17%;\">Normally <b>ld</b> will give a\nwarning if it finds an incompatible library during a library\nsearch. This option silences the warning.</p>\n\n<p style=\"margin-left:11%;\"><b>--no-whole-archive</b></p>\n\n<p style=\"margin-left:17%;\">Turn off the effect of the\n<b>--whole-archive</b> option for subsequent archive\nfiles.</p>\n\n<p style=\"margin-left:11%;\"><b>--noinhibit-exec</b></p>\n\n<p style=\"margin-left:17%;\">Retain the executable output\nfile whenever it is still usable. Normally, the linker will\nnot produce an output file if it encounters errors during\nthe link process; it exits without writing an output file\nwhen it issues any error whatsoever.</p>\n\n<p style=\"margin-left:11%;\"><b>-nostdlib</b></p>\n\n<p style=\"margin-left:17%;\">Only search library directories\nexplicitly specified on the command line. Library\ndirectories specified in linker scripts (including linker\nscripts specified on the command line) are ignored.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--oformat=</b><i>output-format</i></p>\n\n<p style=\"margin-left:17%;\"><b>ld</b> may be configured to\nsupport more than one kind of object file. If your <b>ld</b>\nis configured this way, you can use the <b>--oformat</b>\noption to specify the binary format for the output object\nfile. Even when <b>ld</b> is configured to support\nalternative object formats, you don&rsquo;t usually need to\nspecify this, as <b>ld</b> should be configured to produce\nas a default output format the most usual format on each\nmachine. <i>output-format</i> is a text string, the name of\na particular format supported by the <small>BFD</small>\nlibraries. (You can list the available binary formats with\n<b>objdump -i</b>.) The script command\n&quot;OUTPUT_FORMAT&quot; can also specify the output\nformat, but this option overrides it.</p>\n\n<p style=\"margin-left:11%;\"><b>--out-implib</b>\n<i>file</i></p>\n\n<p style=\"margin-left:17%;\">Create an import library in\n<i>file</i> corresponding to the executable the linker is\ngenerating (eg. a <small>DLL</small> or <small>ELF</small>\nprogram). This import library (which should be called\n&quot;*.dll.a&quot; or &quot;*.a&quot; for DLLs) may be used\nto link clients against the generated executable; this\nbehaviour makes it possible to skip a separate import\nlibrary creation step (eg. &quot;dlltool&quot; for DLLs).\nThis option is only available for the i386 <small>PE</small>\nand <small>ELF</small> targetted ports of the linker.</p>\n\n<p style=\"margin-left:11%;\"><b>-pie <br>\n--pic-executable</b></p>\n\n<p style=\"margin-left:17%;\">Create a position independent\nexecutable. This is currently only supported on\n<small>ELF</small> platforms. Position independent\nexecutables are similar to shared libraries in that they are\nrelocated by the dynamic linker to the virtual address the\n<small>OS</small> chooses for them (which can vary between\ninvocations). Like normal dynamically linked executables\nthey can be executed and symbols defined in the executable\ncannot be overridden by shared libraries.</p>\n\n<p style=\"margin-left:11%;\"><b>-no-pie</b></p>\n\n<p style=\"margin-left:17%;\">Create a position dependent\nexecutable. This is the default.</p>\n\n<p style=\"margin-left:11%;\"><b>-qmagic</b></p>\n\n<p style=\"margin-left:17%;\">This option is ignored for\nLinux compatibility.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-Qy</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"71%\">\n\n\n<p>This option is ignored for <small>SVR4</small>\ncompatibility.</p> </td>\n<td width=\"12%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--relax <br>\n--no-relax</b></p>\n\n<p style=\"margin-left:17%;\">An option with machine\ndependent effects. This option is only supported on a few\ntargets.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">On some\nplatforms the <b>--relax</b> option performs target\nspecific, global optimizations that become possible when the\nlinker resolves addressing in the program, such as relaxing\naddress modes, synthesizing new instructions, selecting\nshorter version of current instructions, and combining\nconstant values.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">On some\nplatforms these link time global optimizations may make\nsymbolic debugging of the resulting executable impossible.\nThis is known to be the case for the Matsushita\n<small>MN10200</small> and <small>MN10300</small> family of\nprocessors.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">On platforms\nwhere the feature is supported, the option <b>--no-relax</b>\nwill disable it.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">On platforms\nwhere the feature is not supported, both <b>--relax</b> and\n<b>--no-relax</b> are accepted, but ignored.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--retain-symbols-file=</b><i>filename</i></p>\n\n<p style=\"margin-left:17%;\">Retain <i>only</i> the symbols\nlisted in the file <i>filename</i>, discarding all others.\n<i>filename</i> is simply a flat file, with one symbol name\nper line. This option is especially useful in environments\n(such as VxWorks) where a large global symbol table is\naccumulated gradually, to conserve run-time memory.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>--retain-symbols-file</b>\ndoes <i>not</i> discard undefined symbols, or symbols needed\nfor relocations.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">You may only\nspecify <b>--retain-symbols-file</b> once in the command\nline. It overrides <b>-s</b> and <b>-S</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>-rpath=</b><i>dir</i></p>\n\n<p style=\"margin-left:17%;\">Add a directory to the runtime\nlibrary search path. This is used when linking an\n<small>ELF</small> executable with shared objects. All\n<b>-rpath</b> arguments are concatenated and passed to the\nruntime linker, which uses them to locate shared objects at\nruntime.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\n<b>-rpath</b> option is also used when locating shared\nobjects which are needed by shared objects explicitly\nincluded in the link; see the description of the\n<b>-rpath-link</b> option. Searching <b>-rpath</b> in this\nway is only supported by native linkers and cross linkers\nwhich have been configured with the <b>--with-sysroot</b>\noption.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If\n<b>-rpath</b> is not used when linking an <small>ELF</small>\nexecutable, the contents of the environment variable\n&quot;LD_RUN_PATH&quot; will be used if it is defined.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\n<b>-rpath</b> option may also be used on SunOS. By default,\non SunOS, the linker will form a runtime search path out of\nall the <b>-L</b> options it is given. If a <b>-rpath</b>\noption is used, the runtime search path will be formed\nexclusively using the <b>-rpath</b> options, ignoring the\n<b>-L</b> options. This can be useful when using gcc, which\nadds many <b>-L</b> options which may be on\n<small>NFS</small> mounted file systems.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For\ncompatibility with other <small>ELF</small> linkers, if the\n<b>-R</b> option is followed by a directory name, rather\nthan a file name, it is treated as the <b>-rpath</b>\noption.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-rpath-link=</b><i>dir</i></p>\n\n<p style=\"margin-left:17%;\">When using <small>ELF</small>\nor SunOS, one shared library may require another. This\nhappens when an &quot;ld -shared&quot; link includes a\nshared library as one of the input files.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When the linker\nencounters such a dependency when doing a non-shared,\nnon-relocatable link, it will automatically try to locate\nthe required shared library and include it in the link, if\nit is not included explicitly. In such a case, the\n<b>-rpath-link</b> option specifies the first set of\ndirectories to search. The <b>-rpath-link</b> option may\nspecify a sequence of directory names either by specifying a\nlist of names separated by colons, or by appearing multiple\ntimes.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The tokens\n<i>$ORIGIN</i> and <i>$LIB</i> can appear in these search\ndirectories. They will be replaced by the full path to the\ndirectory containing the program or shared object in the\ncase of <i>$ORIGIN</i> and either <b>lib</b> - for 32-bit\nbinaries - or <b>lib64</b> - for 64-bit binaries - in the\ncase of <i>$LIB</i>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The alternative\nform of these tokens - <i>${ <small>ORIGIN</small> }</i> and\n<i>${ <small>LIB</small> }</i> can also be used. The token\n<i>$PLATFORM</i> is not supported.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This option\nshould be used with caution as it overrides the search path\nthat may have been hard compiled into a shared library. In\nsuch a case it is possible to use unintentionally a\ndifferent search path than the runtime linker would do.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The linker uses\nthe following search paths to locate required shared\nlibraries:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p>1.</p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>Any directories specified by <b>-rpath-link</b>\noptions.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p>2.</p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>Any directories specified by <b>-rpath</b> options. The\ndifference between <b>-rpath</b> and <b>-rpath-link</b> is\nthat directories specified by <b>-rpath</b> options are\nincluded in the executable and used at runtime, whereas the\n<b>-rpath-link</b> option is only effective at link time.\nSearching <b>-rpath</b> in this way is only supported by\nnative linkers and cross linkers which have been configured\nwith the <b>--with-sysroot</b> option.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p>3.</p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>On an <small>ELF</small> system, for native linkers, if\nthe <b>-rpath</b> and <b>-rpath-link</b> options were not\nused, search the contents of the environment variable\n&quot;LD_RUN_PATH&quot;.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p>4.</p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>On SunOS, if the <b>-rpath</b> option was not used,\nsearch any directories specified using <b>-L</b>\noptions.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p>5.</p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>For a native linker, search the contents of the\nenvironment variable &quot;LD_LIBRARY_PATH&quot;.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p>6.</p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>For a native <small>ELF</small> linker, the directories\nin &quot;DT_RUNPATH&quot; or &quot;DT_RPATH&quot; of a\nshared library are searched for shared libraries needed by\nit. The &quot;DT_RPATH&quot; entries are ignored if\n&quot;DT_RUNPATH&quot; entries exist.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p>7.</p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>For a linker for a Linux system, if the file\n<i>/etc/ld.so.conf</i> exists, the list of directories found\nin that file. Note: the path to this file is prefixed with\nthe &quot;sysroot&quot; value, if that is defined, and then\nany &quot;prefix&quot; string if the linker was configured\nwith the <b>--prefix=&lt;path&gt;</b> option.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p>8.</p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>For a native linker on a FreeBSD system, any directories\nspecified by the &quot;_PATH_ELF_HINTS&quot; macro defined\nin the <i>elf-hints.h</i> header file.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p>9.</p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>Any directories specified by a &quot;SEARCH_DIR&quot;\ncommand in a linker script given on the command line,\nincluding scripts specified by <b>-T</b> (but not\n<b>-dT</b>).</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p>10.</p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>The default directories, normally <i>/lib</i> and\n<i>/usr/lib</i>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p>11.</p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>Any directories specified by a plugin\n<small>LDPT_SET_EXTRA_LIBRARY_PATH.</small></p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p>12.</p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>Any directories specified by a &quot;SEARCH_DIR&quot;\ncommand in a default linker script.</p></td></tr>\n</table>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note however on\nLinux based systems there is an additional caveat: If the\n<b>--as-needed</b> option is active <i>and</i> a shared\nlibrary is located which would normally satisfy the search\n<i>and</i> this library does not have\n<small>DT_NEEDED</small> tag for <i>libc.so and</i> there is\na shared library later on in the set of search directories\nwhich also satisfies the search <i>and</i> this second\nshared library does have a <small>DT_NEEDED</small> tag for\n<i>libc.so then</i> the second library will be selected\ninstead of the first.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If the required\nshared library is not found, the linker will issue a warning\nand continue with the link.</p>\n\n<p style=\"margin-left:11%;\"><b>-shared <br>\n-Bshareable</b></p>\n\n<p style=\"margin-left:17%;\">Create a shared library. This\nis currently only supported on <small>ELF, XCOFF</small> and\nSunOS platforms. On SunOS, the linker will automatically\ncreate a shared library if the <b>-e</b> option is not used\nand there are undefined symbols in the link.</p>\n\n<p style=\"margin-left:11%;\"><b>--sort-common <br>\n--sort-common=ascending <br>\n--sort-common=descending</b></p>\n\n<p style=\"margin-left:17%;\">This option tells <b>ld</b> to\nsort the common symbols by alignment in ascending or\ndescending order when it places them in the appropriate\noutput sections. The symbol alignments considered are\nsixteen-byte or larger, eight-byte, four-byte, two-byte, and\none-byte. This is to prevent gaps between symbols due to\nalignment constraints. If no sorting order is specified,\nthen descending order is assumed.</p>\n\n<p style=\"margin-left:11%;\"><b>--sort-section=name</b></p>\n\n<p style=\"margin-left:17%;\">This option will apply\n&quot;SORT_BY_NAME&quot; to all wildcard section patterns in\nthe linker script.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--sort-section=alignment</b></p>\n\n<p style=\"margin-left:17%;\">This option will apply\n&quot;SORT_BY_ALIGNMENT&quot; to all wildcard section\npatterns in the linker script.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--spare-dynamic-tags=</b><i>count</i></p>\n\n<p style=\"margin-left:17%;\">This option specifies the\nnumber of empty slots to leave in the .dynamic section of\n<small>ELF</small> shared objects. Empty slots may be needed\nby post processing tools, such as the prelinker. The default\nis 5.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--split-by-file[=</b><i>size</i><b>]</b></p>\n\n<p style=\"margin-left:17%;\">Similar to\n<b>--split-by-reloc</b> but creates a new output section for\neach input file when <i>size</i> is reached. <i>size</i>\ndefaults to a size of 1 if not given.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--split-by-reloc[=</b><i>count</i><b>]</b></p>\n\n<p style=\"margin-left:17%;\">Tries to creates extra sections\nin the output file so that no single output section in the\nfile contains more than <i>count</i> relocations. This is\nuseful when generating huge relocatable files for\ndownloading into certain real time kernels with the\n<small>COFF</small> object file format; since\n<small>COFF</small> cannot represent more than 65535\nrelocations in a single section. Note that this will fail to\nwork with object file formats which do not support arbitrary\nsections. The linker will not split up individual input\nsections for redistribution, so if a single input section\ncontains more than <i>count</i> relocations one output\nsection will contain that many relocations. <i>count</i>\ndefaults to a value of 32768.</p>\n\n<p style=\"margin-left:11%;\"><b>--stats</b></p>\n\n<p style=\"margin-left:17%;\">Compute and display statistics\nabout the operation of the linker, such as execution time\nand memory usage.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--sysroot=</b><i>directory</i></p>\n\n<p style=\"margin-left:17%;\">Use <i>directory</i> as the\nlocation of the sysroot, overriding the configure-time\ndefault. This option is only supported by linkers that were\nconfigured using <b>--with-sysroot</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>--task-link</b></p>\n\n<p style=\"margin-left:17%;\">This is used by\n<small>COFF/PE</small> based targets to create a task-linked\nobject file where all of the global symbols have been\nconverted to statics.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--traditional-format</b></p>\n\n<p style=\"margin-left:17%;\">For some targets, the output of\n<b>ld</b> is different in some ways from the output of some\nexisting linker. This switch requests <b>ld</b> to use the\ntraditional format instead.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For example, on\nSunOS, <b>ld</b> combines duplicate entries in the symbol\nstring table. This can reduce the size of an output file\nwith full debugging information by over 30 percent.\nUnfortunately, the SunOS &quot;dbx&quot; program can not\nread the resulting program (&quot;gdb&quot; has no trouble).\nThe <b>--traditional-format</b> switch tells <b>ld</b> to\nnot combine duplicate entries.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--section-start=</b><i>sectionname</i><b>=</b><i>org</i></p>\n\n<p style=\"margin-left:17%;\">Locate a section in the output\nfile at the absolute address given by <i>org</i>. You may\nuse this option as many times as necessary to locate\nmultiple sections in the command line. <i>org</i> must be a\nsingle hexadecimal integer; for compatibility with other\nlinkers, you may omit the leading <b>0x</b> usually\nassociated with hexadecimal values. <i>Note:</i> there\nshould be no white space between <i>sectionname</i>, the\nequals sign (&quot;<b>=</b>&quot;), and <i>org</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>-Tbss=</b><i>org</i> <b><br>\n-Tdata=</b><i>org</i> <b><br>\n-Ttext=</b><i>org</i></p>\n\n<p style=\"margin-left:17%;\">Same as <b>--section-start</b>,\nwith &quot;.bss&quot;, &quot;.data&quot; or\n&quot;.text&quot; as the <i>sectionname</i>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-Ttext-segment=</b><i>org</i></p>\n\n<p style=\"margin-left:17%;\">When creating an\n<small>ELF</small> executable, it will set the address of\nthe first byte of the text segment.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-Trodata-segment=</b><i>org</i></p>\n\n<p style=\"margin-left:17%;\">When creating an\n<small>ELF</small> executable or shared object for a target\nwhere the read-only data is in its own segment separate from\nthe executable text, it will set the address of the first\nbyte of the read-only data segment.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-Tldata-segment=</b><i>org</i></p>\n\n<p style=\"margin-left:17%;\">When creating an\n<small>ELF</small> executable or shared object for x86-64\nmedium memory model, it will set the address of the first\nbyte of the ldata segment.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--unresolved-symbols=</b><i>method</i></p>\n\n<p style=\"margin-left:17%;\">Determine how to handle\nunresolved symbols. There are four possible values for\n<b>method</b>: <b><br>\nignore-all</b></p>\n\n<p style=\"margin-left:23%;\">Do not report any unresolved\nsymbols.</p>\n\n<p style=\"margin-left:17%;\"><b>report-all</b></p>\n\n<p style=\"margin-left:23%;\">Report all unresolved symbols.\nThis is the default.</p>\n\n\n<p style=\"margin-left:17%;\"><b>ignore-in-object-files</b></p>\n\n<p style=\"margin-left:23%;\">Report unresolved symbols that\nare contained in shared libraries, but ignore them if they\ncome from regular object files.</p>\n\n\n<p style=\"margin-left:17%;\"><b>ignore-in-shared-libs</b></p>\n\n<p style=\"margin-left:23%;\">Report unresolved symbols that\ncome from regular object files, but ignore them if they come\nfrom shared libraries. This can be useful when creating a\ndynamic binary and it is known that all the shared libraries\nthat it should be referencing are included on the\nlinker&rsquo;s command line.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The behaviour\nfor shared libraries on their own can also be controlled by\nthe <b>--[no-]allow-shlib-undefined</b> option.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Normally the\nlinker will generate an error message for each reported\nunresolved symbol but the option\n<b>--warn-unresolved-symbols</b> can change this to a\nwarning.</p>\n\n<p style=\"margin-left:11%;\"><b>--dll-verbose <br>\n--verbose[=</b> <i><small>NUMBER</small></i> <b>]</b></p>\n\n<p style=\"margin-left:17%;\">Display the version number for\n<b>ld</b> and list the linker emulations supported. Display\nwhich input files can and cannot be opened. Display the\nlinker script being used by the linker. If the optional\n<i><small>NUMBER</small></i> argument &gt; 1, plugin symbol\nstatus will also be displayed.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--version-script=</b><i>version-scriptfile</i></p>\n\n<p style=\"margin-left:17%;\">Specify the name of a version\nscript to the linker. This is typically used when creating\nshared libraries to specify additional information about the\nversion hierarchy for the library being created. This option\nis only fully supported on <small>ELF</small> platforms\nwhich support shared libraries; see\n<b><small>VERSION</small></b> . It is partially supported on\n<small>PE</small> platforms, which can use version scripts\nto filter symbol visibility in auto-export mode: any symbols\nmarked <b>local</b> in the version script will not be\nexported.</p>\n\n<p style=\"margin-left:11%;\"><b>--warn-common</b></p>\n\n<p style=\"margin-left:17%;\">Warn when a common symbol is\ncombined with another common symbol or with a symbol\ndefinition. Unix linkers allow this somewhat sloppy\npractice, but linkers on some other operating systems do\nnot. This option allows you to find potential problems from\ncombining global symbols. Unfortunately, some C libraries\nuse this practice, so you may get some warnings about\nsymbols in the libraries as well as in your programs.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">There are three\nkinds of global symbols, illustrated here by C examples:\n<b><br>\nint i = 1;</b></p>\n\n<p style=\"margin-left:23%;\">A definition, which goes in the\ninitialized data section of the output file.</p>\n\n<p style=\"margin-left:17%;\"><b>extern int i;</b></p>\n\n<p style=\"margin-left:23%;\">An undefined reference, which\ndoes not allocate space. There must be either a definition\nor a common symbol for the variable somewhere.</p>\n\n<p style=\"margin-left:17%;\"><b>int i;</b></p>\n\n<p style=\"margin-left:23%;\">A common symbol. If there are\nonly (one or more) common symbols for a variable, it goes in\nthe uninitialized data area of the output file. The linker\nmerges multiple common symbols for the same variable into a\nsingle symbol. If they are of different sizes, it picks the\nlargest size. The linker turns a common symbol into a\ndeclaration, if there is a definition of the same\nvariable.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\n<b>--warn-common</b> option can produce five kinds of\nwarnings. Each warning consists of a pair of lines: the\nfirst describes the symbol just encountered, and the second\ndescribes the previous symbol encountered with the same\nname. One or both of the two symbols will be a common\nsymbol.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"3%\">\n\n\n<p>1.</p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>Turning a common symbol into a reference, because there\nis already a definition for the symbol.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\">&lt;file&gt;(&lt;section&gt;):\nwarning: common of `&lt;symbol&gt;' <br>\noverridden by definition <br>\n&lt;file&gt;(&lt;section&gt;): warning: defined here</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\">2.</p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p style=\"margin-top: 1em\">Turning a common symbol into a\nreference, because a later definition for the symbol is\nencountered. This is the same as the previous case, except\nthat the symbols are encountered in a different order.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\">&lt;file&gt;(&lt;section&gt;):\nwarning: definition of `&lt;symbol&gt;' <br>\noverriding common <br>\n&lt;file&gt;(&lt;section&gt;): warning: common is here</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\">3.</p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p style=\"margin-top: 1em\">Merging a common symbol with a\nprevious same-sized common symbol.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\">&lt;file&gt;(&lt;section&gt;):\nwarning: multiple common <br>\nof `&lt;symbol&gt;' <br>\n&lt;file&gt;(&lt;section&gt;): warning: previous common is\nhere</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\">4.</p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p style=\"margin-top: 1em\">Merging a common symbol with a\nprevious larger common symbol.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\">&lt;file&gt;(&lt;section&gt;):\nwarning: common of `&lt;symbol&gt;' <br>\noverridden by larger common <br>\n&lt;file&gt;(&lt;section&gt;): warning: larger common is\nhere</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\">5.</p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p style=\"margin-top: 1em\">Merging a common symbol with a\nprevious smaller common symbol. This is the same as the\nprevious case, except that the symbols are encountered in a\ndifferent order.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\">&lt;file&gt;(&lt;section&gt;):\nwarning: common of `&lt;symbol&gt;' <br>\noverriding smaller common <br>\n&lt;file&gt;(&lt;section&gt;): warning: smaller common is\nhere</p>\n\n<p style=\"margin-left:11%;\"><b>--warn-constructors</b></p>\n\n<p style=\"margin-left:17%;\">Warn if any global constructors\nare used. This is only useful for a few object file formats.\nFor formats like <small>COFF</small> or <small>ELF,</small>\nthe linker can not detect the use of global\nconstructors.</p>\n\n<p style=\"margin-left:11%;\"><b>--warn-multiple-gp</b></p>\n\n<p style=\"margin-left:17%;\">Warn if multiple global pointer\nvalues are required in the output file. This is only\nmeaningful for certain processors, such as the Alpha.\nSpecifically, some processors put large-valued constants in\na special section. A special register (the global pointer)\npoints into the middle of this section, so that constants\ncan be loaded efficiently via a base-register relative\naddressing mode. Since the offset in base-register relative\nmode is fixed and relatively small (e.g., 16 bits), this\nlimits the maximum size of the constant pool. Thus, in large\nprograms, it is often necessary to use multiple global\npointer values in order to be able to address all possible\nconstants. This option causes a warning to be issued\nwhenever this case occurs.</p>\n\n<p style=\"margin-left:11%;\"><b>--warn-once</b></p>\n\n<p style=\"margin-left:17%;\">Only warn once for each\nundefined symbol, rather than once per module which refers\nto it.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--warn-section-align</b></p>\n\n<p style=\"margin-left:17%;\">Warn if the address of an\noutput section is changed because of alignment. Typically,\nthe alignment will be set by an input section. The address\nwill only be changed if it not explicitly specified; that\nis, if the &quot;SECTIONS&quot; command does not specify a\nstart address for the section.</p>\n\n<p style=\"margin-left:11%;\"><b>--warn-textrel</b></p>\n\n<p style=\"margin-left:17%;\">Warn if the linker adds\n<small>DT_TEXTREL</small> to a position-independent\nexecutable or shared object.</p>\n\n<p style=\"margin-left:11%;\"><b>--warn-alternate-em</b></p>\n\n<p style=\"margin-left:17%;\">Warn if an object has alternate\n<small>ELF</small> machine code.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--warn-unresolved-symbols</b></p>\n\n<p style=\"margin-left:17%;\">If the linker is going to\nreport an unresolved symbol (see the option\n<b>--unresolved-symbols</b>) it will normally generate an\nerror. This option makes it generate a warning instead.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--error-unresolved-symbols</b></p>\n\n<p style=\"margin-left:17%;\">This restores the\nlinker&rsquo;s default behaviour of generating errors when\nit is reporting unresolved symbols.</p>\n\n<p style=\"margin-left:11%;\"><b>--whole-archive</b></p>\n\n<p style=\"margin-left:17%;\">For each archive mentioned on\nthe command line after the <b>--whole-archive</b> option,\ninclude every object file in the archive in the link, rather\nthan searching the archive for the required object files.\nThis is normally used to turn an archive file into a shared\nlibrary, forcing every object to be included in the\nresulting shared library. This option may be used more than\nonce.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Two notes when\nusing this option from gcc: First, gcc doesn&rsquo;t know\nabout this option, so you have to use\n<b>-Wl,-whole-archive</b>. Second, don&rsquo;t forget to use\n<b>-Wl,-no-whole-archive</b> after your list of archives,\nbecause gcc will add its own list of archives to your link\nand you may not want this flag to affect those as well.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--wrap=</b><i>symbol</i></p>\n\n<p style=\"margin-left:17%;\">Use a wrapper function for\n<i>symbol</i>. Any undefined reference to <i>symbol</i> will\nbe resolved to &quot;__wrap_<i>symbol</i>&quot;. Any\nundefined reference to &quot;__real_<i>symbol</i>&quot; will\nbe resolved to <i>symbol</i>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This can be\nused to provide a wrapper for a system function. The wrapper\nfunction should be called &quot;__wrap_<i>symbol</i>&quot;.\nIf it wishes to call the system function, it should call\n&quot;__real_<i>symbol</i>&quot;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Here is a\ntrivial example:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">void * <br>\n__wrap_malloc (size_t c) <br>\n{ <br>\nprintf (&quot;malloc called with %zu\\n&quot;, c); <br>\nreturn __real_malloc (c); <br>\n}</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If you link\nother code with this file using <b>--wrap malloc</b>, then\nall calls to &quot;malloc&quot; will call the function\n&quot;__wrap_malloc&quot; instead. The call to\n&quot;__real_malloc&quot; in &quot;__wrap_malloc&quot; will\ncall the real &quot;malloc&quot; function.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">You may wish to\nprovide a &quot;__real_malloc&quot; function as well, so\nthat links without the <b>--wrap</b> option will succeed. If\nyou do this, you should not put the definition of\n&quot;__real_malloc&quot; in the same file as\n&quot;__wrap_malloc&quot;; if you do, the assembler may\nresolve the call before the linker has a chance to wrap it\nto &quot;malloc&quot;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Only undefined\nreferences are replaced by the linker. So, translation unit\ninternal references to <i>symbol</i> are not resolved to\n&quot;__wrap_<i>symbol</i>&quot;. In the next example, the\ncall to &quot;f&quot; in &quot;g&quot; is not resolved to\n&quot;__wrap_f&quot;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">int <br>\nf (void) <br>\n{ <br>\nreturn 123; <br>\n} <br>\nint <br>\ng (void) <br>\n{ <br>\nreturn f(); <br>\n}</p>\n\n<p style=\"margin-left:11%;\"><b>--eh-frame-hdr <br>\n--no-eh-frame-hdr</b></p>\n\n<p style=\"margin-left:17%;\">Request (<b>--eh-frame-hdr</b>)\nor suppress (<b>--no-eh-frame-hdr</b>) the creation of\n&quot;.eh_frame_hdr&quot; section and <small>ELF</small>\n&quot;PT_GNU_EH_FRAME&quot; segment header.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--no-ld-generated-unwind-info</b></p>\n\n<p style=\"margin-left:17%;\">Request creation of\n&quot;.eh_frame&quot; unwind info for linker generated code\nsections like <small>PLT.</small> This option is on by\ndefault if linker generated unwind info is supported.</p>\n\n<p style=\"margin-left:11%;\"><b>--enable-new-dtags <br>\n--disable-new-dtags</b></p>\n\n<p style=\"margin-left:17%;\">This linker can create the new\ndynamic tags in <small>ELF.</small> But the older\n<small>ELF</small> systems may not understand them. If you\nspecify <b>--enable-new-dtags</b>, the new dynamic tags will\nbe created as needed and older dynamic tags will be omitted.\nIf you specify <b>--disable-new-dtags</b>, no new dynamic\ntags will be created. By default, the new dynamic tags are\nnot created. Note that those options are only available for\n<small>ELF</small> systems.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--hash-size=</b><i>number</i></p>\n\n<p style=\"margin-left:17%;\">Set the default size of the\nlinker&rsquo;s hash tables to a prime number close to\n<i>number</i>. Increasing this value can reduce the length\nof time it takes the linker to perform its tasks, at the\nexpense of increasing the linker&rsquo;s memory\nrequirements. Similarly reducing this value can reduce the\nmemory requirements at the expense of speed.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--hash-style=</b><i>style</i></p>\n\n<p style=\"margin-left:17%;\">Set the type of linker&rsquo;s\nhash table(s). <i>style</i> can be either &quot;sysv&quot;\nfor classic <small>ELF</small> &quot;.hash&quot; section,\n&quot;gnu&quot; for new style <small>GNU</small>\n&quot;.gnu.hash&quot; section or &quot;both&quot; for both\nthe classic <small>ELF</small> &quot;.hash&quot; and new\nstyle <small>GNU</small> &quot;.gnu.hash&quot; hash tables.\nThe default depends upon how the linker was configured, but\nfor most Linux based systems it will be\n&quot;both&quot;.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--compress-debug-sections=none\n<br>\n--compress-debug-sections=zlib <br>\n--compress-debug-sections=zlib-gnu <br>\n--compress-debug-sections=zlib-gabi</b></p>\n\n<p style=\"margin-left:17%;\">On <small>ELF</small>\nplatforms, these options control how <small>DWARF</small>\ndebug sections are compressed using zlib.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>--compress-debug-sections=none</b>\ndoesn&rsquo;t compress <small>DWARF</small> debug sections.\n<b>--compress-debug-sections=zlib-gnu</b> compresses\n<small>DWARF</small> debug sections and renames them to\nbegin with <b>.zdebug</b> instead of <b>.debug</b>.\n<b>--compress-debug-sections=zlib-gabi</b> also compresses\n<small>DWARF</small> debug sections, but rather than\nrenaming them it sets the <small>SHF_COMPRESSED</small> flag\nin the sections&rsquo; headers.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\n<b>--compress-debug-sections=zlib</b> option is an alias for\n<b>--compress-debug-sections=zlib-gabi</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that this\noption overrides any compression in input debug sections, so\nif a binary is linked with\n<b>--compress-debug-sections=none</b> for example, then any\ncompressed debug sections in input files will be\nuncompressed before they are copied into the output\nbinary.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The default\ncompression behaviour varies depending upon the target\ninvolved and the configure options used to build the\ntoolchain. The default can be determined by examining the\noutput from the linker&rsquo;s <b>--help</b> option.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--reduce-memory-overheads</b></p>\n\n<p style=\"margin-left:17%;\">This option reduces memory\nrequirements at ld runtime, at the expense of linking speed.\nThis was introduced to select the old O(n^2) algorithm for\nlink map file generation, rather than the new O(n) algorithm\nwhich uses about 40% more memory for symbol storage.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Another effect\nof the switch is to set the default hash table size to 1021,\nwhich again saves memory at the cost of lengthening the\nlinker&rsquo;s run time. This is not done however if the\n<b>--hash-size</b> switch has been used.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\n<b>--reduce-memory-overheads</b> switch may be also be used\nto enable other tradeoffs in future versions of the\nlinker.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--max-cache-size=</b><i>size</i></p>\n\n<p style=\"margin-left:17%;\"><b>ld</b> normally caches the\nrelocation information and symbol tables of input files in\nmemory with the unlimited size. This option sets the maximum\ncache size to <i>size</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>--build-id <br>\n--build-id=</b><i>style</i></p>\n\n<p style=\"margin-left:17%;\">Request the creation of a\n&quot;.note.gnu.build-id&quot; <small>ELF</small> note\nsection or a &quot;.buildid&quot; <small>COFF</small>\nsection. The contents of the note are unique bits\nidentifying this linked file. <i>style</i> can be\n&quot;uuid&quot; to use 128 random bits, &quot;sha1&quot; to\nuse a 160-bit <small>SHA1</small> hash on the normative\nparts of the output contents, &quot;md5&quot; to use a\n128-bit <small>MD5</small> hash on the normative parts of\nthe output contents, or &quot;0x<i>hexstring</i>&quot; to\nuse a chosen bit string specified as an even number of\nhexadecimal digits (&quot;-&quot; and &quot;:&quot;\ncharacters between digit pairs are ignored). If <i>style</i>\nis omitted, &quot;sha1&quot; is used.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\n&quot;md5&quot; and &quot;sha1&quot; styles produces an\nidentifier that is always the same in an identical output\nfile, but will be unique among all nonidentical output\nfiles. It is not intended to be compared as a checksum for\nthe file&rsquo;s contents. A linked file may be changed\nlater by other tools, but the build <small>ID</small> bit\nstring identifying the original linked file does not\nchange.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Passing\n&quot;none&quot; for <i>style</i> disables the setting from\nany &quot;--build-id&quot; options earlier on the command\nline.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The i386\n<small>PE</small> linker supports the <b>-shared</b> option,\nwhich causes the output to be a dynamically linked library (\n<small>DLL</small> ) instead of a normal executable. You\nshould name the output &quot;*.dll&quot; when you use this\noption. In addition, the linker fully supports the standard\n&quot;*.def&quot; files, which may be specified on the\nlinker command line like an object file (in fact, it should\nprecede archives it exports symbols from, to ensure that\nthey get linked in, just like a normal object file).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In addition to\nthe options common to all targets, the i386\n<small>PE</small> linker support additional command-line\noptions that are specific to the i386 <small>PE</small>\ntarget. Options that take values may be separated from their\nvalues by either a space or an equals sign. <b><br>\n--add-stdcall-alias</b></p>\n\n<p style=\"margin-left:17%;\">If given, symbols with a\nstdcall suffix (@<i>nn</i>) will be exported as-is and also\nwith the suffix stripped. [This option is specific to the\ni386 <small>PE</small> targeted port of the linker]</p>\n\n<p style=\"margin-left:11%;\"><b>--base-file</b>\n<i>file</i></p>\n\n<p style=\"margin-left:17%;\">Use <i>file</i> as the name of\na file in which to save the base addresses of all the\nrelocations needed for generating DLLs with <i>dlltool</i>.\n[This is an i386 <small>PE</small> specific option]</p>\n\n<p style=\"margin-left:11%;\"><b>--dll</b></p>\n\n<p style=\"margin-left:17%;\">Create a <small>DLL</small>\ninstead of a regular executable. You may also use\n<b>-shared</b> or specify a &quot;LIBRARY&quot; in a given\n&quot;.def&quot; file. [This option is specific to the i386\n<small>PE</small> targeted port of the linker]</p>\n\n<p style=\"margin-left:11%;\"><b>--enable-long-section-names\n<br>\n--disable-long-section-names</b></p>\n\n<p style=\"margin-left:17%;\">The <small>PE</small> variants\nof the <small>COFF</small> object format add an extension\nthat permits the use of section names longer than eight\ncharacters, the normal limit for <small>COFF.</small> By\ndefault, these names are only allowed in object files, as\nfully-linked executable images do not carry the\n<small>COFF</small> string table required to support the\nlonger names. As a <small>GNU</small> extension, it is\npossible to allow their use in executable images as well, or\nto (probably pointlessly!) disallow it in object files, by\nusing these two options. Executable images generated with\nthese long section names are slightly non-standard, carrying\nas they do a string table, and may generate confusing output\nwhen examined with non-GNU PE-aware tools, such as file\nviewers and dumpers. However, <small>GDB</small> relies on\nthe use of <small>PE</small> long section names to find\nDwarf-2 debug information sections in an executable image at\nruntime, and so if neither option is specified on the\ncommand-line, <b>ld</b> will enable long section names,\noverriding the default and technically correct behaviour,\nwhen it finds the presence of debug information while\nlinking an executable image and not stripping symbols. [This\noption is valid for all <small>PE</small> targeted ports of\nthe linker]</p>\n\n<p style=\"margin-left:11%;\"><b>--enable-stdcall-fixup <br>\n--disable-stdcall-fixup</b></p>\n\n<p style=\"margin-left:17%;\">If the link finds a symbol that\nit cannot resolve, it will attempt to do &quot;fuzzy\nlinking&quot; by looking for another defined symbol that\ndiffers only in the format of the symbol name (cdecl vs\nstdcall) and will resolve that symbol by linking to the\nmatch. For example, the undefined symbol &quot;_foo&quot;\nmight be linked to the function &quot;_foo@12&quot;, or the\nundefined symbol &quot;_bar@16&quot; might be linked to the\nfunction &quot;_bar&quot;. When the linker does this, it\nprints a warning, since it normally should have failed to\nlink, but sometimes import libraries generated from\nthird-party dlls may need this feature to be usable. If you\nspecify <b>--enable-stdcall-fixup</b>, this feature is fully\nenabled and warnings are not printed. If you specify\n<b>--disable-stdcall-fixup</b>, this feature is disabled and\nsuch mismatches are considered to be errors. [This option is\nspecific to the i386 <small>PE</small> targeted port of the\nlinker]</p>\n\n<p style=\"margin-left:11%;\"><b>--leading-underscore <br>\n--no-leading-underscore</b></p>\n\n<p style=\"margin-left:17%;\">For most targets default\nsymbol-prefix is an underscore and is defined in\ntarget&rsquo;s description. By this option it is possible to\ndisable/enable the default underscore symbol-prefix.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--export-all-symbols</b></p>\n\n<p style=\"margin-left:17%;\">If given, all global symbols in\nthe objects used to build a <small>DLL</small> will be\nexported by the <small>DLL.</small> Note that this is the\ndefault if there otherwise wouldn&rsquo;t be any exported\nsymbols. When symbols are explicitly exported via\n<small>DEF</small> files or implicitly exported via function\nattributes, the default is to not export anything else\nunless this option is given. Note that the symbols\n&quot;DllMain@12&quot;, &quot;DllEntryPoint@0&quot;,\n&quot;DllMainCRTStartup@12&quot;, and &quot;impure_ptr&quot;\nwill not be automatically exported. Also, symbols imported\nfrom other DLLs will not be re-exported, nor will symbols\nspecifying the <small>DLL</small> &rsquo;s internal layout\nsuch as those beginning with &quot;_head_&quot; or ending\nwith &quot;_iname&quot;. In addition, no symbols from\n&quot;libgcc&quot;, &quot;libstd++&quot;,\n&quot;libmingw32&quot;, or &quot;crtX.o&quot; will be\nexported. Symbols whose names begin with &quot;__rtti_&quot;\nor &quot;__builtin_&quot; will not be exported, to help with\nC <small>++</small> DLLs. Finally, there is an extensive\nlist of cygwin-private symbols that are not exported\n(obviously, this applies on when building DLLs for cygwin\ntargets). These cygwin-excludes are:\n&quot;_cygwin_dll_entry@12&quot;,\n&quot;_cygwin_crt0_common@8&quot;,\n&quot;_cygwin_noncygwin_dll_entry@12&quot;,\n&quot;_fmode&quot;, &quot;_impure_ptr&quot;,\n&quot;cygwin_attach_dll&quot;, &quot;cygwin_premain0&quot;,\n&quot;cygwin_premain1&quot;, &quot;cygwin_premain2&quot;,\n&quot;cygwin_premain3&quot;, and &quot;environ&quot;. [This\noption is specific to the i386 <small>PE</small> targeted\nport of the linker]</p>\n\n<p style=\"margin-left:11%;\"><b>--exclude-symbols</b>\n<i>symbol</i><b>,</b><i>symbol</i><b>,...</b></p>\n\n<p style=\"margin-left:17%;\">Specifies a list of symbols\nwhich should not be automatically exported. The symbol names\nmay be delimited by commas or colons. [This option is\nspecific to the i386 <small>PE</small> targeted port of the\nlinker]</p>\n\n\n<p style=\"margin-left:11%;\"><b>--exclude-all-symbols</b></p>\n\n<p style=\"margin-left:17%;\">Specifies no symbols should be\nautomatically exported. [This option is specific to the i386\n<small>PE</small> targeted port of the linker]</p>\n\n<p style=\"margin-left:11%;\"><b>--file-alignment</b></p>\n\n<p style=\"margin-left:17%;\">Specify the file alignment.\nSections in the file will always begin at file offsets which\nare multiples of this number. This defaults to 512. [This\noption is specific to the i386 <small>PE</small> targeted\nport of the linker]</p>\n\n<p style=\"margin-left:11%;\"><b>--heap</b> <i>reserve</i>\n<b><br>\n--heap</b> <i>reserve</i><b>,</b><i>commit</i></p>\n\n<p style=\"margin-left:17%;\">Specify the number of bytes of\nmemory to reserve (and optionally commit) to be used as heap\nfor this program. The default is 1MB reserved, 4K committed.\n[This option is specific to the i386 <small>PE</small>\ntargeted port of the linker]</p>\n\n<p style=\"margin-left:11%;\"><b>--image-base</b>\n<i>value</i></p>\n\n<p style=\"margin-left:17%;\">Use <i>value</i> as the base\naddress of your program or dll. This is the lowest memory\nlocation that will be used when your program or dll is\nloaded. To reduce the need to relocate and improve\nperformance of your dlls, each should have a unique base\naddress and not overlap any other dlls. The default is\n0x400000 for executables, and 0x10000000 for dlls. [This\noption is specific to the i386 <small>PE</small> targeted\nport of the linker]</p>\n\n<p style=\"margin-left:11%;\"><b>--kill-at</b></p>\n\n<p style=\"margin-left:17%;\">If given, the stdcall suffixes\n(@<i>nn</i>) will be stripped from symbols before they are\nexported. [This option is specific to the i386\n<small>PE</small> targeted port of the linker]</p>\n\n\n<p style=\"margin-left:11%;\"><b>--large-address-aware</b></p>\n\n<p style=\"margin-left:17%;\">If given, the appropriate bit\nin the &quot;Characteristics&quot; field of the\n<small>COFF</small> header is set to indicate that this\nexecutable supports virtual addresses greater than 2\ngigabytes. This should be used in conjunction with the /3GB\nor /USERVA=<i>value</i> megabytes switch in the\n&quot;[operating systems]&quot; section of the\n<small>BOOT.INI.</small> Otherwise, this bit has no effect.\n[This option is specific to <small>PE</small> targeted ports\nof the linker]</p>\n\n\n<p style=\"margin-left:11%;\"><b>--disable-large-address-aware</b></p>\n\n<p style=\"margin-left:17%;\">Reverts the effect of a\nprevious <b>--large-address-aware</b> option. This is useful\nif <b>--large-address-aware</b> is always set by the\ncompiler driver (e.g. Cygwin gcc) and the executable does\nnot support virtual addresses greater than 2 gigabytes.\n[This option is specific to <small>PE</small> targeted ports\nof the linker]</p>\n\n<p style=\"margin-left:11%;\"><b>--major-image-version</b>\n<i>value</i></p>\n\n<p style=\"margin-left:17%;\">Sets the major number of the\n&quot;image version&quot;. Defaults to 1. [This option is\nspecific to the i386 <small>PE</small> targeted port of the\nlinker]</p>\n\n<p style=\"margin-left:11%;\"><b>--major-os-version</b>\n<i>value</i></p>\n\n<p style=\"margin-left:17%;\">Sets the major number of the\n&quot;os version&quot;. Defaults to 4. [This option is\nspecific to the i386 <small>PE</small> targeted port of the\nlinker]</p>\n\n\n<p style=\"margin-left:11%;\"><b>--major-subsystem-version</b>\n<i>value</i></p>\n\n<p style=\"margin-left:17%;\">Sets the major number of the\n&quot;subsystem version&quot;. Defaults to 4. [This option\nis specific to the i386 <small>PE</small> targeted port of\nthe linker]</p>\n\n<p style=\"margin-left:11%;\"><b>--minor-image-version</b>\n<i>value</i></p>\n\n<p style=\"margin-left:17%;\">Sets the minor number of the\n&quot;image version&quot;. Defaults to 0. [This option is\nspecific to the i386 <small>PE</small> targeted port of the\nlinker]</p>\n\n<p style=\"margin-left:11%;\"><b>--minor-os-version</b>\n<i>value</i></p>\n\n<p style=\"margin-left:17%;\">Sets the minor number of the\n&quot;os version&quot;. Defaults to 0. [This option is\nspecific to the i386 <small>PE</small> targeted port of the\nlinker]</p>\n\n\n<p style=\"margin-left:11%;\"><b>--minor-subsystem-version</b>\n<i>value</i></p>\n\n<p style=\"margin-left:17%;\">Sets the minor number of the\n&quot;subsystem version&quot;. Defaults to 0. [This option\nis specific to the i386 <small>PE</small> targeted port of\nthe linker]</p>\n\n<p style=\"margin-left:11%;\"><b>--output-def</b>\n<i>file</i></p>\n\n<p style=\"margin-left:17%;\">The linker will create the file\n<i>file</i> which will contain a <small>DEF</small> file\ncorresponding to the <small>DLL</small> the linker is\ngenerating. This <small>DEF</small> file (which should be\ncalled &quot;*.def&quot;) may be used to create an import\nlibrary with &quot;dlltool&quot; or may be used as a\nreference to automatically or implicitly exported symbols.\n[This option is specific to the i386 <small>PE</small>\ntargeted port of the linker]</p>\n\n<p style=\"margin-left:11%;\"><b>--enable-auto-image-base\n<br>\n--enable-auto-image-base=</b><i>value</i></p>\n\n<p style=\"margin-left:17%;\">Automatically choose the image\nbase for DLLs, optionally starting with base <i>value</i>,\nunless one is specified using the &quot;--image-base&quot;\nargument. By using a hash generated from the dllname to\ncreate unique image bases for each <small>DLL,</small>\nin-memory collisions and relocations which can delay program\nexecution are avoided. [This option is specific to the i386\n<small>PE</small> targeted port of the linker]</p>\n\n\n<p style=\"margin-left:11%;\"><b>--disable-auto-image-base</b></p>\n\n<p style=\"margin-left:17%;\">Do not automatically generate a\nunique image base. If there is no user-specified image base\n(&quot;--image-base&quot;) then use the platform default.\n[This option is specific to the i386 <small>PE</small>\ntargeted port of the linker]</p>\n\n<p style=\"margin-left:11%;\"><b>--dll-search-prefix</b>\n<i>string</i></p>\n\n<p style=\"margin-left:17%;\">When linking dynamically to a\ndll without an import library, search for\n&quot;&lt;string&gt;&lt;basename&gt;.dll&quot; in preference\nto &quot;lib&lt;basename&gt;.dll&quot;. This behaviour\nallows easy distinction between DLLs built for the various\n&quot;subplatforms&quot;: native, cygwin, uwin, pw, etc. For\ninstance, cygwin DLLs typically use\n&quot;--dll-search-prefix=cyg&quot;. [This option is\nspecific to the i386 <small>PE</small> targeted port of the\nlinker]</p>\n\n\n<p style=\"margin-left:11%;\"><b>--enable-auto-import</b></p>\n\n<p style=\"margin-left:17%;\">Do sophisticated linking of\n&quot;_symbol&quot; to &quot;__imp__symbol&quot; for\n<small>DATA</small> imports from DLLs, thus making it\npossible to bypass the dllimport mechanism on the user side\nand to reference unmangled symbol names. [This option is\nspecific to the i386 <small>PE</small> targeted port of the\nlinker]</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The following\nremarks pertain to the original implementation of the\nfeature and are obsolete nowadays for Cygwin and MinGW\ntargets.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note: Use of\nthe &rsquo;auto-import&rsquo; extension will cause the text\nsection of the image file to be made writable. This does not\nconform to the PE-COFF format specification published by\nMicrosoft.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note - use of\nthe &rsquo;auto-import&rsquo; extension will also cause read\nonly data which would normally be placed into the .rdata\nsection to be placed into the .data section instead. This is\nin order to work around a problem with consts that is\ndescribed here:\nhttp://www.cygwin.com/ml/cygwin/2004-09/msg01101.html</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Using\n&rsquo;auto-import&rsquo; generally will &rsquo;just\nwork&rsquo; -- but sometimes you may see this message:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&quot;variable\n&rsquo;&lt;var&gt;&rsquo; can&rsquo;t be auto-imported.\nPlease read the documentation for ld&rsquo;s\n&quot;--enable-auto-import&quot; for details.&quot;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This message\noccurs when some (sub)expression accesses an address\nultimately given by the sum of two constants (Win32 import\ntables only allow one). Instances where this may occur\ninclude accesses to member fields of struct variables\nimported from a <small>DLL,</small> as well as using a\nconstant index into an array variable imported from a\n<small>DLL.</small> Any multiword variable (arrays, structs,\nlong long, etc) may trigger this error condition. However,\nregardless of the exact data type of the offending exported\nvariable, ld will always detect it, issue the warning, and\nexit.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">There are\nseveral ways to address this difficulty, regardless of the\ndata type of the exported variable:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">One way is to\nuse --enable-runtime-pseudo-reloc switch. This leaves the\ntask of adjusting references in your client code for runtime\nenvironment, so this method works only when runtime\nenvironment supports this feature.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">A second\nsolution is to force one of the &rsquo;constants&rsquo; to\nbe a variable -- that is, unknown and un-optimizable at\ncompile time. For arrays, there are two possibilities: a)\nmake the indexee (the array&rsquo;s address) a variable, or\nb) make the &rsquo;constant&rsquo; index a variable.\nThus:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">extern type\nextern_array[]; <br>\nextern_array[1] --&gt; <br>\n{ volatile type *t=extern_array; t[1] }</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">or</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">extern type\nextern_array[]; <br>\nextern_array[1] --&gt; <br>\n{ volatile int t=1; extern_array[t] }</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For structs\n(and most other multiword data types) the only option is to\nmake the struct itself (or the long long, or the ...)\nvariable:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">extern struct s\nextern_struct; <br>\nextern_struct.field --&gt; <br>\n{ volatile struct s *t=&amp;extern_struct; t-&gt;field }</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">or</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">extern long\nlong extern_ll; <br>\nextern_ll --&gt; <br>\n{ volatile long long * local_ll=&amp;extern_ll; *local_ll\n}</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">A third method\nof dealing with this difficulty is to abandon\n&rsquo;auto-import&rsquo; for the offending symbol and mark\nit with &quot;__declspec(dllimport)&quot;. However, in\npractice that requires using compile-time #defines to\nindicate whether you are building a <small>DLL,</small>\nbuilding client code that will link to the\n<small>DLL,</small> or merely building/linking to a static\nlibrary. In making the choice between the various methods of\nresolving the &rsquo;direct address with constant\noffset&rsquo; problem, you should consider typical\nreal-world usage:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Original:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">--foo.h <br>\nextern int arr[]; <br>\n--foo.c <br>\n#include &quot;foo.h&quot; <br>\nvoid main(int argc, char **argv){ <br>\nprintf(&quot;%d\\n&quot;,arr[1]); <br>\n}</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Solution 1:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">--foo.h <br>\nextern int arr[]; <br>\n--foo.c <br>\n#include &quot;foo.h&quot; <br>\nvoid main(int argc, char **argv){ <br>\n/* This workaround is for win32 and cygwin; do not\n&quot;optimize&quot; */ <br>\nvolatile int *parr = arr; <br>\nprintf(&quot;%d\\n&quot;,parr[1]); <br>\n}</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Solution 2:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">--foo.h <br>\n/* Note: auto-export is assumed (no __declspec(dllexport))\n*/ <br>\n#if (defined(_WIN32) || defined(__CYGWIN__)) &amp;&amp; \\\n<br>\n!(defined(FOO_BUILD_DLL) || defined(FOO_STATIC)) <br>\n#define FOO_IMPORT __declspec(dllimport) <br>\n#else <br>\n#define FOO_IMPORT <br>\n#endif <br>\nextern FOO_IMPORT int arr[]; <br>\n--foo.c <br>\n#include &quot;foo.h&quot; <br>\nvoid main(int argc, char **argv){ <br>\nprintf(&quot;%d\\n&quot;,arr[1]); <br>\n}</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">A fourth way to\navoid this problem is to re-code your library to use a\nfunctional interface rather than a data interface for the\noffending variables (e.g. <b>set_foo()</b> and\n<b>get_foo()</b> accessor functions).</p>\n\n\n<p style=\"margin-left:11%;\"><b>--disable-auto-import</b></p>\n\n<p style=\"margin-left:17%;\">Do not attempt to do\nsophisticated linking of &quot;_symbol&quot; to\n&quot;__imp__symbol&quot; for <small>DATA</small> imports\nfrom DLLs. [This option is specific to the i386\n<small>PE</small> targeted port of the linker]</p>\n\n\n<p style=\"margin-left:11%;\"><b>--enable-runtime-pseudo-reloc</b></p>\n\n<p style=\"margin-left:17%;\">If your code contains\nexpressions described in --enable-auto-import section, that\nis, <small>DATA</small> imports from <small>DLL</small> with\nnon-zero offset, this switch will create a vector of\n&rsquo;runtime pseudo relocations&rsquo; which can be used\nby runtime environment to adjust references to such data in\nyour client code. [This option is specific to the i386\n<small>PE</small> targeted port of the linker]</p>\n\n\n<p style=\"margin-left:11%;\"><b>--disable-runtime-pseudo-reloc</b></p>\n\n<p style=\"margin-left:17%;\">Do not create pseudo\nrelocations for non-zero offset <small>DATA</small> imports\nfrom DLLs. [This option is specific to the i386\n<small>PE</small> targeted port of the linker]</p>\n\n\n<p style=\"margin-left:11%;\"><b>--enable-extra-pe-debug</b></p>\n\n<p style=\"margin-left:17%;\">Show additional debug info\nrelated to auto-import symbol thunking. [This option is\nspecific to the i386 <small>PE</small> targeted port of the\nlinker]</p>\n\n<p style=\"margin-left:11%;\"><b>--section-alignment</b></p>\n\n<p style=\"margin-left:17%;\">Sets the section alignment.\nSections in memory will always begin at addresses which are\na multiple of this number. Defaults to 0x1000. [This option\nis specific to the i386 <small>PE</small> targeted port of\nthe linker]</p>\n\n<p style=\"margin-left:11%;\"><b>--stack</b> <i>reserve</i>\n<b><br>\n--stack</b> <i>reserve</i><b>,</b><i>commit</i></p>\n\n<p style=\"margin-left:17%;\">Specify the number of bytes of\nmemory to reserve (and optionally commit) to be used as\nstack for this program. The default is 2MB reserved, 4K\ncommitted. [This option is specific to the i386\n<small>PE</small> targeted port of the linker]</p>\n\n<p style=\"margin-left:11%;\"><b>--subsystem</b> <i>which</i>\n<b><br>\n--subsystem</b> <i>which</i><b>:</b><i>major</i> <b><br>\n--subsystem</b>\n<i>which</i><b>:</b><i>major</i><b>.</b><i>minor</i></p>\n\n<p style=\"margin-left:17%;\">Specifies the subsystem under\nwhich your program will execute. The legal values for\n<i>which</i> are &quot;native&quot;, &quot;windows&quot;,\n&quot;console&quot;, &quot;posix&quot;, and\n&quot;xbox&quot;. You may optionally set the subsystem\nversion also. Numeric values are also accepted for\n<i>which</i>. [This option is specific to the i386\n<small>PE</small> targeted port of the linker]</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The following\noptions set flags in the &quot;DllCharacteristics&quot;\nfield of the <small>PE</small> file header: [These options\nare specific to <small>PE</small> targeted ports of the\nlinker]</p>\n\n<p style=\"margin-left:11%;\"><b>--high-entropy-va <br>\n--disable-high-entropy-va</b></p>\n\n<p style=\"margin-left:17%;\">Image is compatible with 64-bit\naddress space layout randomization ( <small>ASLR</small> ).\nThis option is enabled by default for 64-bit\n<small>PE</small> images.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This option\nalso implies <b>--dynamicbase</b> and\n<b>--enable-reloc-section</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>--dynamicbase <br>\n--disable-dynamicbase</b></p>\n\n<p style=\"margin-left:17%;\">The image base address may be\nrelocated using address space layout randomization (\n<small>ASLR</small> ). This feature was introduced with\n<small>MS</small> Windows Vista for i386 <small>PE</small>\ntargets. This option is enabled by default but can be\ndisabled via the <b>--disable-dynamicbase</b> option. This\noption also implies <b>--enable-reloc-section</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>--forceinteg <br>\n--disable-forceinteg</b></p>\n\n<p style=\"margin-left:17%;\">Code integrity checks are\nenforced. This option is disabled by default.</p>\n\n<p style=\"margin-left:11%;\"><b>--nxcompat <br>\n--disable-nxcompat</b></p>\n\n<p style=\"margin-left:17%;\">The image is compatible with\nthe Data Execution Prevention. This feature was introduced\nwith <small>MS</small> Windows <small>XP SP2</small> for\ni386 <small>PE</small> targets. The option is enabled by\ndefault.</p>\n\n<p style=\"margin-left:11%;\"><b>--no-isolation <br>\n--disable-no-isolation</b></p>\n\n<p style=\"margin-left:17%;\">Although the image understands\nisolation, do not isolate the image. This option is disabled\nby default.</p>\n\n<p style=\"margin-left:11%;\"><b>--no-seh <br>\n--disable-no-seh</b></p>\n\n<p style=\"margin-left:17%;\">The image does not use\n<small>SEH.</small> No <small>SE</small> handler may be\ncalled from this image. This option is disabled by\ndefault.</p>\n\n<p style=\"margin-left:11%;\"><b>--no-bind <br>\n--disable-no-bind</b></p>\n\n<p style=\"margin-left:17%;\">Do not bind this image. This\noption is disabled by default.</p>\n\n<p style=\"margin-left:11%;\"><b>--wdmdriver <br>\n--disable-wdmdriver</b></p>\n\n<p style=\"margin-left:17%;\">The driver uses the\n<small>MS</small> Windows Driver Model. This option is\ndisabled by default.</p>\n\n<p style=\"margin-left:11%;\"><b>--tsaware <br>\n--disable-tsaware</b></p>\n\n<p style=\"margin-left:17%;\">The image is Terminal Server\naware. This option is disabled by default.</p>\n\n<p style=\"margin-left:11%;\"><b>--insert-timestamp <br>\n--no-insert-timestamp</b></p>\n\n<p style=\"margin-left:17%;\">Insert a real timestamp into\nthe image. This is the default behaviour as it matches\nlegacy code and it means that the image will work with\nother, proprietary tools. The problem with this default is\nthat it will result in slightly different images being\nproduced each time the same sources are linked. The option\n<b>--no-insert-timestamp</b> can be used to insert a zero\nvalue for the timestamp, this ensuring that binaries\nproduced from identical sources will compare\nidentically.</p>\n\n<p style=\"margin-left:11%;\"><b>--enable-reloc-section <br>\n--disable-reloc-section</b></p>\n\n<p style=\"margin-left:17%;\">Create the base relocation\ntable, which is necessary if the image is loaded at a\ndifferent image base than specified in the <small>PE</small>\nheader. This option is enabled by default.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The C6X uClinux\ntarget uses a binary format called <small>DSBT</small> to\nsupport shared libraries. Each shared library in the system\nneeds to have a unique index; all executables use an index\nof 0. <b><br>\n--dsbt-size</b> <i>size</i></p>\n\n<p style=\"margin-left:17%;\">This option sets the number of\nentries in the <small>DSBT</small> of the current executable\nor shared library to <i>size</i>. The default is to create a\ntable with 64 entries.</p>\n\n<p style=\"margin-left:11%;\"><b>--dsbt-index</b>\n<i>index</i></p>\n\n<p style=\"margin-left:17%;\">This option sets the\n<small>DSBT</small> index of the current executable or\nshared library to <i>index</i>. The default is 0, which is\nappropriate for generating executables. If a shared library\nis generated with a <small>DSBT</small> index of 0, the\n&quot;R_C6000_DSBT_INDEX&quot; relocs are copied into the\noutput file.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\n<b>--no-merge-exidx-entries</b> switch disables the merging\nof adjacent exidx entries in frame unwind info.</p>\n\n<p style=\"margin-left:11%;\"><b>--branch-stub</b></p>\n\n<p style=\"margin-left:17%;\">This option enables linker\nbranch relaxation by inserting branch stub sections when\nneeded to extend the range of branches. This option is\nusually not required since C-SKY supports branch and call\ninstructions that can access the full memory range and\nbranch relaxation is normally handled by the compiler or\nassembler.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--stub-group-size=</b><i>N</i></p>\n\n<p style=\"margin-left:17%;\">This option allows finer\ncontrol of linker branch stub creation. It sets the maximum\nsize of a group of input sections that can be handled by one\nstub section. A negative value of <i>N</i> locates stub\nsections after their branches, while a positive value allows\nstub sections to appear either before or after the branches.\nValues of <b>1</b> or <b>-1</b> indicate that the linker\nshould choose suitable defaults.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The 68HC11 and\n68HC12 linkers support specific options to control the\nmemory bank switching mapping and trampoline code\ngeneration. <b><br>\n--no-trampoline</b></p>\n\n<p style=\"margin-left:17%;\">This option disables the\ngeneration of trampoline. By default a trampoline is\ngenerated for each far function which is called using a\n&quot;jsr&quot; instruction (this happens when a pointer to\na far function is taken).</p>\n\n<p style=\"margin-left:11%;\"><b>--bank-window</b>\n<i>name</i></p>\n\n<p style=\"margin-left:17%;\">This option indicates to the\nlinker the name of the memory region in the\n<b><small>MEMORY</small></b> specification that describes\nthe memory bank window. The definition of such region is\nthen used by the linker to compute paging and addresses\nwithin the memory window.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are supported to control handling of\n<small>GOT</small> generation when linking for 68K targets.\n<b><br>\n--got=</b><i>type</i></p>\n\n<p style=\"margin-left:17%;\">This option tells the linker\nwhich <small>GOT</small> generation scheme to use.\n<i>type</i> should be one of <b>single</b>, <b>negative</b>,\n<b>multigot</b> or <b>target</b>. For more information refer\nto the Info entry for <i>ld</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are supported to control microMIPS instruction\ngeneration and branch relocation checks for\n<small>ISA</small> mode transitions when linking for\n<small>MIPS</small> targets. <b><br>\n--insn32 <br>\n--no-insn32</b></p>\n\n<p style=\"margin-left:17%;\">These options control the\nchoice of microMIPS instructions used in code generated by\nthe linker, such as that in the <small>PLT</small> or lazy\nbinding stubs, or in relaxation. If <b>--insn32</b> is used,\nthen the linker only uses 32-bit instruction encodings. By\ndefault or if <b>--no-insn32</b> is used, all instruction\nencodings are used, including 16-bit ones where\npossible.</p>\n\n<p style=\"margin-left:11%;\"><b>--ignore-branch-isa <br>\n--no-ignore-branch-isa</b></p>\n\n<p style=\"margin-left:17%;\">These options control branch\nrelocation checks for invalid <small>ISA</small> mode\ntransitions. If <b>--ignore-branch-isa</b> is used, then the\nlinker accepts any branch relocations and any\n<small>ISA</small> mode transition required is lost in\nrelocation calculation, except for some cases of\n&quot;BAL&quot; instructions which meet relaxation\nconditions and are converted to equivalent &quot;JALX&quot;\ninstructions as the associated relocation is calculated. By\ndefault or if <b>--no-ignore-branch-isa</b> is used a check\nis made causing the loss of an <small>ISA</small> mode\ntransition to produce an error.</p>\n\n<p style=\"margin-left:11%;\"><b>--compact-branches <br>\n--no-compact-branches</b></p>\n\n<p style=\"margin-left:17%;\">These options control the\ngeneration of compact instructions by the linker in the\n<small>PLT</small> entries for <small>MIPS R6.</small></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For the\npdp11-aout target, three variants of the output format can\nbe produced as selected by the following options. The\ndefault variant for pdp11-aout is the <b>--omagic</b>\noption, whereas for other targets <b>--nmagic</b> is the\ndefault. The <b>--imagic</b> option is defined only for the\npdp11-aout target, while the others are described here as\nthey apply to the pdp11-aout target.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-N</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--omagic</b></p>\n\n<p style=\"margin-left:17%;\">Mark the output as\n&quot;OMAGIC&quot; (0407) in the <i>a.out</i> header to\nindicate that the text segment is not to be write-protected\nand shared. Since the text and data sections are both\nreadable and writable, the data section is allocated\nimmediately contiguous after the text segment. This is the\noldest format for <small>PDP11</small> executable programs\nand is the default for <b>ld</b> on <small>PDP11</small>\nUnix systems from the beginning through 2.11BSD.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-n</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--nmagic</b></p>\n\n<p style=\"margin-left:17%;\">Mark the output as\n&quot;NMAGIC&quot; (0410) in the <i>a.out</i> header to\nindicate that when the output file is executed, the text\nportion will be read-only and shareable among all processes\nexecuting the same file. This involves moving the data areas\nup to the first possible 8K byte page boundary following the\nend of the text. This option creates a <i>pure\nexecutable</i> format.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-z</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--imagic</b></p>\n\n<p style=\"margin-left:17%;\">Mark the output as\n&quot;IMAGIC&quot; (0411) in the <i>a.out</i> header to\nindicate that when the output file is executed, the program\ntext and data areas will be loaded into separate address\nspaces using the split instruction and data space feature of\nthe memory management unit in larger models of the\n<small>PDP11.</small> This doubles the address space\navailable to the program. The text segment is again pure,\nwrite-protected, and shareable. The only difference in the\noutput format between this option and the others, besides\nthe magic number, is that both the text and data sections\nstart at location 0. The <b>-z</b> option selected this\nformat in 2.11BSD. This option creates a <i>separate\nexecutable</i> format.</p>\n\n<p style=\"margin-left:11%;\"><b>--no-omagic</b></p>\n\n<p style=\"margin-left:17%;\">Equivalent to <b>--nmagic</b>\nfor pdp11-aout.</p>\n\n<h2>ENVIRONMENT\n<a name=\"ENVIRONMENT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">You can change\nthe behaviour of <b>ld</b> with the environment variables\n&quot;GNUTARGET&quot;, &quot;LDEMULATION&quot; and\n&quot;COLLECT_NO_DEMANGLE&quot;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&quot;GNUTARGET&quot;\ndetermines the input-file object format if you don&rsquo;t\nuse <b>-b</b> (or its synonym <b>--format</b>). Its value\nshould be one of the <small>BFD</small> names for an input\nformat. If there is no &quot;GNUTARGET&quot; in the\nenvironment, <b>ld</b> uses the natural format of the\ntarget. If &quot;GNUTARGET&quot; is set to\n&quot;default&quot; then <small>BFD</small> attempts to\ndiscover the input format by examining binary input files;\nthis method often succeeds, but there are potential\nambiguities, since there is no method of ensuring that the\nmagic number used to specify object-file formats is unique.\nHowever, the configuration procedure for <small>BFD</small>\non each system places the conventional format for that\nsystem first in the search-list, so ambiguities are resolved\nin favor of convention.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&quot;LDEMULATION&quot;\ndetermines the default emulation if you don&rsquo;t use the\n<b>-m</b> option. The emulation can affect various aspects\nof linker behaviour, particularly the default linker script.\nYou can list the available emulations with the\n<b>--verbose</b> or <b>-V</b> options. If the <b>-m</b>\noption is not used, and the &quot;LDEMULATION&quot;\nenvironment variable is not defined, the default emulation\ndepends upon how the linker was configured.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Normally, the\nlinker will default to demangling symbols. However, if\n&quot;COLLECT_NO_DEMANGLE&quot; is set in the environment,\nthen it will default to not demangling symbols. This\nenvironment variable is used in a similar fashion by the\n&quot;gcc&quot; linker wrapper program. The default may be\noverridden by the <b>--demangle</b> and <b>--no-demangle</b>\noptions.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/ar\">ar(1)</a>,\n<a href=\"https://man.page/1/nm\">nm(1)</a>, <a href=\"https://man.page/1/objcopy\">objcopy(1)</a>, <a href=\"https://man.page/1/objdump\">objdump(1)</a>,\n<a href=\"https://man.page/1/readelf\">readelf(1)</a> and the Info entries for <i>binutils</i>\nand <i>ld</i>.</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright (c)\n1991-2022 Free Software Foundation, Inc.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Permission is\ngranted to copy, distribute and/or modify this document\nunder the terms of the <small>GNU</small> Free Documentation\nLicense, Version 1.3 or any later version published by the\nFree Software Foundation; with no Invariant Sections, with\nno Front-Cover Texts, and with no Back-Cover Texts. A copy\nof the license is included in the section entitled &quot;\n<small>GNU</small> Free Documentation License&quot;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#ENVIRONMENT\">ENVIRONMENT</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"]}