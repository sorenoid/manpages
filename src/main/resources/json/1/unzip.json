{"name":"unzip","description":"unzip - list, test and extract compressed files in a ZIP archive","body":"\n\n<h1 align=\"center\">UNZIP</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">unzip - list,\ntest and extract compressed files in a ZIP archive</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>unzip</b>\n[<b>-Z</b>] [<b>-cflptTuvz</b>[<b>abjnoqsCDKLMUVWX$/:^</b>]]\n<i>file</i>[<i>.zip</i>] [<i>file(s)&nbsp;</i>...]\n[<b>-x&nbsp;</b><i>xfile(s)&nbsp;</i>...]\n[<b>-d&nbsp;</b><i>exdir</i>]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>unzip</i>\nwill list, test, or extract files from a ZIP archive,\ncommonly found on MS-DOS systems. The default behavior (with\nno options) is to extract into the current directory (and\nsubdirectories below it) all files from the specified ZIP\narchive. A companion program, <i>zip</i>(1), creates ZIP\narchives; both programs are compatible with archives created\nby PKWARE&rsquo;s <i>PKZIP</i> and <i>PKUNZIP</i> for\nMS-DOS, but in many cases the program options or default\nbehaviors differ.</p>\n\n<h2>ARGUMENTS\n<a name=\"ARGUMENTS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>file</i>[<i>.zip</i>]</p>\n\n<p style=\"margin-left:22%;\">Path of the ZIP archive(s). If\nthe file specification is a wildcard, each matching file is\nprocessed in an order determined by the operating system (or\nfile system). Only the filename can be a wildcard; the path\nitself cannot. Wildcard expressions are similar to those\nsupported in commonly used Unix shells (<i>sh</i>,\n<i>ksh</i>, <i>csh</i>) and may contain:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>matches a sequence of 0 or more characters</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n\n\n<p>?</p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>matches exactly 1 character</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n\n\n<p>[...]</p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>matches any single character found inside the brackets;\nranges are specified by a beginning character, a hyphen, and\nan ending character. If an exclamation point or a caret\n(&rsquo;!&rsquo; or &rsquo;^&rsquo;) follows the left\nbracket, then the range of characters within the brackets is\ncomplemented (that is, anything <i>except</i> the characters\ninside the brackets is considered a match). To specify a\nverbatim left bracket, the three-character sequence\n&rsquo;&rsquo;[[]&rsquo;&rsquo; has to be used.</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">(Be sure to\nquote any character that might otherwise be interpreted or\nmodified by the operating system, particularly under Unix\nand VMS.) If no matches are found, the specification is\nassumed to be a literal filename; and if that also fails,\nthe suffix <tt>.zip</tt> is appended. Note that\nself-extracting ZIP files are supported, as with any other\nZIP archive; just specify the <tt>.exe</tt> suffix (if any)\nexplicitly.</p>\n\n<p style=\"margin-left:11%;\">[<i>file(s)</i>]</p>\n\n<p style=\"margin-left:22%;\">An optional list of archive\nmembers to be processed, separated by spaces. (VMS versions\ncompiled with VMSCLI defined must delimit files with commas\ninstead. See <b>-v</b> in <b>OPTIONS</b> below.) Regular\nexpressions (wildcards) may be used to match multiple\nmembers; see above. Again, be sure to quote expressions that\nwould otherwise be expanded or modified by the operating\nsystem.</p>\n\n\n<p style=\"margin-left:11%;\">[<b>-x&nbsp;</b><i>xfile(s)</i>]</p>\n\n<p style=\"margin-left:22%;\">An optional list of archive\nmembers to be excluded from processing. Since wildcard\ncharacters normally match (&rsquo;/&rsquo;) directory\nseparators (for exceptions see the option <b>-W</b>), this\noption may be used to exclude any files that are in\nsubdirectories. For example, &rsquo;&rsquo;<tt>unzip foo\n*.[ch] -x */*</tt>&rsquo;&rsquo; would extract all C source\nfiles in the main directory, but none in any subdirectories.\nWithout the <b>-x</b> option, all C source files in all\ndirectories within the zipfile would be extracted.</p>\n\n\n<p style=\"margin-left:11%;\">[<b>-d&nbsp;</b><i>exdir</i>]</p>\n\n<p style=\"margin-left:22%;\">An optional directory to which\nto extract files. By default, all files and subdirectories\nare recreated in the current directory; the <b>-d</b> option\nallows extraction in an arbitrary directory (always assuming\none has permission to write to the directory). This option\nneed not appear at the end of the command line; it is also\naccepted before the zipfile specification (with the normal\noptions), immediately after the zipfile specification, or\nbetween the <i>file(s)</i> and the <b>-x</b> option. The\noption and directory may be concatenated without any white\nspace between them, but note that this may cause normal\nshell behavior to be suppressed. In particular,\n&rsquo;&rsquo;<tt>-d&nbsp;~</tt>&rsquo;&rsquo; (tilde) is\nexpanded by Unix C shells into the name of the user&rsquo;s\nhome directory, but &rsquo;&rsquo;<tt>-d~</tt>&rsquo;&rsquo;\nis treated as a literal subdirectory\n&rsquo;&rsquo;<b>~</b>&rsquo;&rsquo; of the current\ndirectory.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that, in\norder to support obsolescent hardware, <i>unzip</i>&rsquo;s\nusage screen is limited to 22 or 23 lines and should\ntherefore be considered only a reminder of the basic\n<i>unzip</i> syntax rather than an exhaustive list of all\npossible flags. The exhaustive list follows:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-Z</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p><i>zipinfo</i>(1) mode. If the first option on the\ncommand line is <b>-Z</b>, the remaining options are taken\nto be <i>zipinfo</i>(1) options. See the appropriate manual\npage for a description of these options.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-A</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[OS/2, Unix DLL] print extended help for the DLL&rsquo;s\nprogramming interface (API).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-c</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>extract files to stdout/screen\n(&rsquo;&rsquo;CRT&rsquo;&rsquo;). This option is similar to\nthe <b>-p</b> option except that the name of each file is\nprinted as it is extracted, the <b>-a</b> option is allowed,\nand ASCII-EBCDIC conversion is automatically performed if\nappropriate. This option is not listed in the <i>unzip</i>\nusage screen.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-f</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>freshen existing files, i.e., extract only those files\nthat already exist on disk and that are newer than the disk\ncopies. By default <i>unzip</i> queries before overwriting,\nbut the <b>-o</b> option may be used to suppress the\nqueries. Note that under many operating systems, the TZ\n(timezone) environment variable must be set correctly in\norder for <b>-f</b> and <b>-u</b> to work properly (under\nUnix the variable is usually set automatically). The reasons\nfor this are somewhat subtle but have to do with the\ndifferences between DOS-format file times (always local\ntime) and Unix-format times (always in GMT/UTC) and the\nnecessity to compare the two. A typical TZ value is\n&rsquo;&rsquo;PST8PDT&rsquo;&rsquo; (US Pacific time with\nautomatic adjustment for Daylight Savings Time or\n&rsquo;&rsquo;summer time&rsquo;&rsquo;).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-l</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>list archive files (short format). The names,\nuncompressed file sizes and modification dates and times of\nthe specified files are printed, along with totals for all\nfiles specified. If UnZip was compiled with OS2_EAS defined,\nthe <b>-l</b> option also lists columns for the sizes of\nstored OS/2 extended attributes (EAs) and OS/2 access\ncontrol lists (ACLs). In addition, the zipfile comment and\nindividual file comments (if any) are displayed. If a file\nwas archived from a single-case file system (for example,\nthe old MS-DOS FAT file system) and the <b>-L</b> option was\ngiven, the filename is converted to lowercase and is\nprefixed with a caret (^).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-p</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>extract files to pipe (stdout). Nothing but the file\ndata is sent to stdout, and the files are always extracted\nin binary format, just as they are stored (no\nconversions).</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-t</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>test archive files. This option extracts each specified\nfile in memory and compares the CRC (cyclic redundancy\ncheck, an enhanced checksum) of the expanded file with the\noriginal file&rsquo;s stored CRC value.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-T</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[most OSes] set the timestamp on the archive(s) to that\nof the newest file in each one. This corresponds to\n<i>zip</i>&rsquo;s <b>-go</b> option except that it can be\nused on wildcard zipfiles (e.g., &rsquo;&rsquo;<tt>unzip -T\n\\*.zip</tt>&rsquo;&rsquo;) and is much faster.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-u</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>update existing files and create new ones if needed.\nThis option performs the same function as the <b>-f</b>\noption, extracting (with query) files that are newer than\nthose with the same name on disk, and in addition it\nextracts those files that do not already exist on disk. See\n<b>-f</b> above for information on setting the timezone\nproperly.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-v</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>list archive files (verbose format) or show diagnostic\nversion info. This option has evolved and now behaves as\nboth an option and a modifier. As an option it has two\npurposes: when a zipfile is specified with no other options,\n<b>-v</b> lists archive files verbosely, adding to the basic\n<b>-l</b> info the compression method, compressed size,\ncompression ratio and 32-bit CRC. In contrast to most of the\ncompeting utilities, <i>unzip</i> removes the 12 additional\nheader bytes of encrypted entries from the compressed size\nnumbers. Therefore, compressed size and compression ratio\nfigures are independent of the entry&rsquo;s encryption\nstatus and show the correct compression performance. (The\ncomplete size of the encrypted compressed data stream for\nzipfile entries is reported by the more verbose\n<i>zipinfo</i>(1) reports, see the separate manual.) When no\nzipfile is specified (that is, the complete command is\nsimply &rsquo;&rsquo;<tt>unzip -v</tt>&rsquo;&rsquo;), a\ndiagnostic screen is printed. In addition to the normal\nheader with release date and version, <i>unzip</i> lists the\nhome Info-ZIP ftp site and where to find a list of other ftp\nand non-ftp sites; the target operating system for which it\nwas compiled, as well as (possibly) the hardware on which it\nwas compiled, the compiler and version used, and the\ncompilation date; any special compilation options that might\naffect the program&rsquo;s operation (see also\n<b>DECRYPTION</b> below); and any options stored in\nenvironment variables that might do the same (see\n<b>ENVIRONMENT OPTIONS</b> below). As a modifier it works in\nconjunction with other options (e.g., <b>-t</b>) to produce\nmore verbose or debugging output; this is not yet fully\nimplemented but will be in future releases.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-z</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>display only the archive comment.</p></td></tr>\n</table>\n\n<h2>MODIFIERS\n<a name=\"MODIFIERS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\"><b>-a</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">convert text files. Ordinarily\nall files are extracted exactly as they are stored (as\n&rsquo;&rsquo;binary&rsquo;&rsquo; files). The <b>-a</b>\noption causes files identified by <i>zip</i> as text files\n(those with the &rsquo;t&rsquo; label in <i>zipinfo</i>\nlistings, rather than &rsquo;b&rsquo;) to be automatically\nextracted as such, converting line endings, end-of-file\ncharacters and the character set itself as necessary. (For\nexample, Unix files use line feeds (LFs) for end-of-line\n(EOL) and have no end-of-file (EOF) marker; Macintoshes use\ncarriage returns (CRs) for EOLs; and most PC operating\nsystems use CR+LF for EOLs and control-Z for EOF. In\naddition, IBM mainframes and the Michigan Terminal System\nuse EBCDIC rather than the more common ASCII character set,\nand NT supports Unicode.) Note that <i>zip</i>&rsquo;s\nidentification of text files is by no means perfect; some\n&rsquo;&rsquo;text&rsquo;&rsquo; files may actually be\nbinary and vice versa. <i>unzip</i> therefore prints\n&rsquo;&rsquo;<tt>[text]</tt>&rsquo;&rsquo; or\n&rsquo;&rsquo;<tt>[binary]</tt>&rsquo;&rsquo; as a visual\ncheck for each file it extracts when using the <b>-a</b>\noption. The <b>-aa</b> option forces all files to be\nextracted as text, regardless of the supposed file type. On\nVMS, see also <b>-S</b>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-b</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[general] treat all files as binary (no text\nconversions). This is a shortcut for <b>---a</b>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-b</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[Tandem] force the creation files with filecode type 180\n(&rsquo;C&rsquo;) when extracting Zip entries marked as\n&quot;text&quot;. (On Tandem, <b>-a</b> is enabled by\ndefault, see above).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-b</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[VMS] auto-convert binary files (see <b>-a</b> above) to\nfixed-length, 512-byte record format. Doubling the option\n(<b>-bb</b>) forces all files to be extracted in this\nformat. When extracting to standard output (<b>-c</b> or\n<b>-p</b> option in effect), the default conversion of text\nrecord delimiters is disabled for binary (<b>-b</b>) resp.\nall (<b>-bb</b>) files.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-B</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[when compiled with UNIXBACKUP defined] save a backup\ncopy of each overwritten file. The backup file is gets the\nname of the target file with a tilde and optionally a unique\nsequence number (up to 5 digits) appended. The sequence\nnumber is applied whenever another file with the original\nname plus tilde already exists. When used together with the\n&quot;overwrite all&quot; option <b>-o</b>, numbered backup\nfiles are never created. In this case, all backup files are\nnamed as the original file with an appended tilde, existing\nbackup files are deleted without notice. This feature works\nsimilarly to the default behavior of <i>emacs</i>(1) in many\nlocations.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Example: the\nold copy of &rsquo;&rsquo;<tt>foo</tt>&rsquo;&rsquo; is\nrenamed to &rsquo;&rsquo;<tt>foo~</tt>&rsquo;&rsquo;.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Warning: Users\nshould be aware that the <b>-B</b> option does not prevent\nloss of existing data under all circumstances. For example,\nwhen <i>unzip</i> is run in overwrite-all mode, an existing\n&rsquo;&rsquo;<tt>foo~</tt>&rsquo;&rsquo; file is deleted\nbefore <i>unzip</i> attempts to rename\n&rsquo;&rsquo;<tt>foo</tt>&rsquo;&rsquo; to\n&rsquo;&rsquo;<tt>foo~</tt>&rsquo;&rsquo;. When this rename\nattempt fails (because of a file locks, insufficient\nprivileges, or ...), the extraction of\n&rsquo;&rsquo;<tt>foo~</tt>&rsquo;&rsquo; gets cancelled,\nbut the old backup file is already lost. A similar scenario\ntakes place when the sequence number range for numbered\nbackup files gets exhausted (99999, or 65535 for 16-bit\nsystems). In this case, the backup file with the maximum\nsequence number is deleted and replaced by the new backup\nversion without notice.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\"><b>-C</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">use case-insensitive matching\nfor the selection of archive entries from the command-line\nlist of extract selection patterns. <i>unzip</i>&rsquo;s\nphilosophy is &rsquo;&rsquo;you get what you ask\nfor&rsquo;&rsquo; (this is also responsible for the\n<b>-L</b>/<b>-U</b> change; see the relevant options below).\nBecause some file systems are fully case-sensitive (notably\nthose under the Unix operating system) and because both ZIP\narchives and <i>unzip</i> itself are portable across\nplatforms, <i>unzip</i>&rsquo;s default behavior is to match\nboth wildcard and literal filenames case-sensitively. That\nis, specifying &rsquo;&rsquo;<tt>makefile</tt>&rsquo;&rsquo;\non the command line will <i>only</i> match\n&rsquo;&rsquo;makefile&rsquo;&rsquo; in the archive, not\n&rsquo;&rsquo;Makefile&rsquo;&rsquo; or\n&rsquo;&rsquo;MAKEFILE&rsquo;&rsquo; (and similarly for\nwildcard specifications). Since this does not correspond to\nthe behavior of many other operating/file systems (for\nexample, OS/2 HPFS, which preserves mixed case but is not\nsensitive to it), the <b>-C</b> option may be used to force\nall filename matches to be case-insensitive. In the example\nabove, all three files would then match\n&rsquo;&rsquo;<tt>makefile</tt>&rsquo;&rsquo; (or\n&rsquo;&rsquo;<tt>make*</tt>&rsquo;&rsquo;, or similar). The\n<b>-C</b> option affects file specs in both the normal file\nlist and the excluded-file list (xlist).</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Please note\nthat the <b>-C</b> option does neither affect the search for\nthe zipfile(s) nor the matching of archive entries to\nexisting files on the extraction path. On a case-sensitive\nfile system, <i>unzip</i> will never try to overwrite a file\n&rsquo;&rsquo;FOO&rsquo;&rsquo; when extracting an entry\n&rsquo;&rsquo;foo&rsquo;&rsquo;!</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\"><b>-D</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">skip restoration of timestamps\nfor extracted items. Normally, <i>unzip</i> tries to restore\nall meta-information for extracted items that are supplied\nin the Zip archive (and do not require privileges or impose\na security risk). By specifying <b>-D</b>, <i>unzip</i> is\ntold to suppress restoration of timestamps for directories\nexplicitly created from Zip archive entries. This option\nonly applies to ports that support setting timestamps for\ndirectories (currently ATheOS, BeOS, MacOS, OS/2, Unix, VMS,\nWin32, for other <i>unzip</i> ports, <b>-D</b> has no\neffect). The duplicated option <b>-DD</b> forces suppression\nof timestamp restoration for all extracted entries (files\nand directories). This option results in setting the\ntimestamps for all extracted entries to the current\ntime.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">On VMS, the\ndefault setting for this option is <b>-D</b> for consistency\nwith the behaviour of BACKUP: file timestamps are restored,\ntimestamps of extracted directories are left at the current\ntime. To enable restoration of directory timestamps, the\nnegated option <b>--D</b> should be specified. On VMS, the\noption <b>-D</b> disables timestamp restoration for all\nextracted Zip archive items. (Here, a single <b>-D</b> on\nthe command line combines with the default <b>-D</b> to do\nwhat an explicit <b>-DD</b> does on other systems.)</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\"><b>-E</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">[MacOS only] display contents of\nMacOS extra field during restore operation.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-F</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[Acorn only] suppress removal of NFS filetype extension\nfrom stored filenames.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-F</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[non-Acorn systems supporting long filenames with\nembedded commas, and only if compiled with ACORN_FTYPE_NFS\ndefined] translate filetype information from ACORN RISC OS\nextra field blocks into a NFS filetype extension and append\nit to the names of the extracted files. (When the stored\nfilename appears to already have an appended NFS filetype\nextension, it is replaced by the info from the extra\nfield.)</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-i</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[MacOS only] ignore filenames stored in MacOS extra\nfields. Instead, the most compatible filename stored in the\ngeneric part of the entry&rsquo;s header is used.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-j</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>junk paths. The archive&rsquo;s directory structure is\nnot recreated; all files are deposited in the extraction\ndirectory (by default, the current one).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-J</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[BeOS only] junk file attributes. The file&rsquo;s BeOS\nfile attributes are not restored, just the file&rsquo;s\ndata.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-J</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[MacOS only] ignore MacOS extra fields. All Macintosh\nspecific info is skipped. Data-fork and resource-fork are\nrestored as separate files.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-K</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[AtheOS, BeOS, Unix only] retain SUID/SGID/Tacky file\nattributes. Without this flag, these attribute bits are\ncleared for security reasons.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-L</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>convert to lowercase any filename originating on an\nuppercase-only operating system or file system. (This was\n<i>unzip</i>&rsquo;s default behavior in releases prior to\n5.11; the new default behavior is identical to the old\nbehavior with the <b>-U</b> option, which is now obsolete\nand will be removed in a future release.) Depending on the\narchiver, files archived under single-case file systems\n(VMS, old MS-DOS FAT, etc.) may be stored as all-uppercase\nnames; this can be ugly or inconvenient when extracting to a\ncase-preserving file system such as OS/2 HPFS or a\ncase-sensitive one such as under Unix. By default\n<i>unzip</i> lists and extracts such filenames exactly as\nthey&rsquo;re stored (excepting truncation, conversion of\nunsupported characters, etc.); this option causes the names\nof all files from certain systems to be converted to\nlowercase. The <b>-LL</b> option forces conversion of every\nfilename to lowercase, regardless of the originating file\nsystem.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-M</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>pipe all output through an internal pager similar to the\nUnix <i>more</i>(1) command. At the end of a screenful of\noutput, <i>unzip</i> pauses with a\n&rsquo;&rsquo;--More--&rsquo;&rsquo; prompt; the next\nscreenful may be viewed by pressing the Enter (Return) key\nor the space bar. <i>unzip</i> can be terminated by pressing\nthe &rsquo;&rsquo;q&rsquo;&rsquo; key and, on some systems,\nthe Enter/Return key. Unlike Unix <i>more</i>(1), there is\nno forward-searching or editing capability. Also,\n<i>unzip</i> doesn&rsquo;t notice if long lines wrap at the\nedge of the screen, effectively resulting in the printing of\ntwo or more lines and the likelihood that some text will\nscroll off the top of the screen before being viewed. On\nsome systems the number of available lines on the screen is\nnot detected, in which case <i>unzip</i> assumes the height\nis 24 lines.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-n</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>never overwrite existing files. If a file already\nexists, skip the extraction of that file without prompting.\nBy default <i>unzip</i> queries before extracting any file\nthat already exists; the user may choose to overwrite only\nthe current file, overwrite all files, skip extraction of\nthe current file, skip extraction of all existing files, or\nrename the current file.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-N</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[Amiga] extract file comments as Amiga filenotes. File\ncomments are created with the -c option of <i>zip</i>(1), or\nwith the -N option of the Amiga port of <i>zip</i>(1), which\nstores filenotes as comments.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-o</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>overwrite existing files without prompting. This is a\ndangerous option, so use it with care. (It is often used\nwith <b>-f</b>, however, and is the only way to overwrite\ndirectory EAs under OS/2.)</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>-P&nbsp;</b><i>password</i></p>\n\n<p style=\"margin-left:22%;\">use <i>password</i> to decrypt\nencrypted zipfile entries (if any). <b>THIS IS INSECURE!</b>\nMany multi-user operating systems provide ways for any user\nto see the current command line of any other user; even on\nstand-alone systems there is always the threat of\nover-the-shoulder peeking. Storing the plaintext password as\npart of a command line in an automated script is even worse.\nWhenever possible, use the non-echoing, interactive prompt\nto enter passwords. (And where security is truly important,\nuse strong encryption such as Pretty Good Privacy instead of\nthe relatively weak encryption provided by standard zipfile\nutilities.)</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-q</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>perform operations quietly (<b>-qq</b> = even quieter).\nOrdinarily <i>unzip</i> prints the names of the files\nit&rsquo;s extracting or testing, the extraction methods,\nany file or zipfile comments that may be stored in the\narchive, and possibly a summary when finished with each\narchive. The <b>-q</b>[<b>q</b>] options suppress the\nprinting of some or all of these messages.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-s</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[OS/2, NT, MS-DOS] convert spaces in filenames to\nunderscores. Since all PC operating systems allow spaces in\nfilenames, <i>unzip</i> by default extracts filenames with\nspaces intact (e.g.,\n&rsquo;&rsquo;<tt>EA&nbsp;DATA.&nbsp;SF</tt>&rsquo;&rsquo;).\nThis can be awkward, however, since MS-DOS in particular\ndoes not gracefully support spaces in filenames. Conversion\nof spaces to underscores can eliminate the awkwardness in\nsome cases.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-S</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[VMS] convert text files (<b>-a</b>, <b>-aa</b>) into\nStream_LF record format, instead of the text-file default,\nvariable-length record format. (Stream_LF is the default\nrecord format of VMS <i>unzip</i>. It is applied unless\nconversion (<b>-a</b>, <b>-aa</b> and/or <b>-b</b>,\n<b>-bb</b>) is requested or a VMS-specific entry is\nprocessed.)</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-U</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[UNICODE_SUPPORT only] modify or disable UTF-8 handling.\nWhen UNICODE_SUPPORT is available, the option <b>-U</b>\nforces <i>unzip</i> to escape all non-ASCII characters from\nUTF-8 coded filenames as &rsquo;&rsquo;#Uxxxx&rsquo;&rsquo;\n(for UCS-2 characters, or\n&rsquo;&rsquo;#Lxxxxxx&rsquo;&rsquo; for unicode codepoints\nneeding 3 octets). This option is mainly provided for\ndebugging purpose when the fairly new UTF-8 support is\nsuspected to mangle up extracted filenames.</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The option\n<b>-UU</b> allows to entirely disable the recognition of\nUTF-8 encoded filenames. The handling of filename codings\nwithin <i>unzip</i> falls back to the behaviour of previous\nversions.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">[old, obsolete\nusage] leave filenames uppercase if created under MS-DOS,\nVMS, etc. See <b>-L</b> above.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\"><b>-V</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">retain (VMS) file version\nnumbers. VMS files can be stored with a version number, in\nthe format <tt>file.ext;##</tt>. By default the\n&rsquo;&rsquo;<tt>;##</tt>&rsquo;&rsquo; version numbers are\nstripped, but this option allows them to be retained. (On\nfile systems that limit filenames to particularly short\nlengths, the version numbers may be truncated or stripped\nregardless of this option.)</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-W</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[only when WILD_STOP_AT_DIR compile-time option enabled]\nmodifies the pattern matching routine so that both\n&rsquo;?&rsquo; (single-char wildcard) and &rsquo;*&rsquo;\n(multi-char wildcard) do not match the directory separator\ncharacter &rsquo;/&rsquo;. (The two-character sequence\n&rsquo;&rsquo;**&rsquo;&rsquo; acts as a multi-char wildcard\nthat includes the directory separator in its matched\ncharacters.) Examples:</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&quot;*.c&quot;\nmatches &quot;foo.c&quot; but not &quot;mydir/foo.c&quot;\n<br>\n&quot;**.c&quot; matches both &quot;foo.c&quot; and\n&quot;mydir/foo.c&quot; <br>\n&quot;*/*.c&quot; matches &quot;bar/foo.c&quot; but not\n&quot;baz/bar/foo.c&quot; <br>\n&quot;??*/*&quot; matches &quot;ab/foo&quot; and\n&quot;abc/foo&quot; <br>\nbut not &quot;a/foo&quot; or &quot;a/b/foo&quot;</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">This modified\nbehaviour is equivalent to the pattern matching style used\nby the shells of some of UnZip&rsquo;s supported target OSs\n(one example is Acorn RISC OS). This option may not be\navailable on systems where the Zip archive&rsquo;s internal\ndirectory separator character &rsquo;/&rsquo; is allowed as\nregular character in native operating system filenames.\n(Currently, UnZip uses the same pattern matching rules for\nboth wildcard zipfile specifications and zip entry selection\npatterns in most ports. For systems allowing &rsquo;/&rsquo;\nas regular filename character, the -W option would not work\nas expected on a wildcard zipfile specification.)</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\"><b>-X</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">[VMS, Unix, OS/2, NT, Tandem]\nrestore owner/protection info (UICs and ACL entries) under\nVMS, or user and group info (UID/GID) under Unix, or access\ncontrol lists (ACLs) under certain network-enabled versions\nof OS/2 (Warp Server with IBM LAN Server/Requester 3.0 to\n5.0; Warp Connect with IBM Peer 1.0), or security ACLs under\nWindows NT. In most cases this will require special system\nprivileges, and doubling the option (<b>-XX</b>) under NT\ninstructs <i>unzip</i> to use privileges for extraction; but\nunder Unix, for example, a user who belongs to several\ngroups can restore files owned by any of those groups, as\nlong as the user IDs match his or her own. Note that\nordinary file attributes are always restored--this option\napplies only to optional, extra ownership info available on\nsome operating systems. [NT&rsquo;s access control lists do\nnot appear to be especially compatible with OS/2&rsquo;s, so\nno attempt is made at cross-platform portability of access\nprivileges. It is not clear under what conditions this would\never be useful anyway.]</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-Y</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[VMS] treat archived file name endings of\n&rsquo;&rsquo;.nnn&rsquo;&rsquo; (where\n&rsquo;&rsquo;nnn&rsquo;&rsquo; is a decimal number) as if\nthey were VMS version numbers\n(&rsquo;&rsquo;;nnn&rsquo;&rsquo;). (The default is to treat\nthem as file types.) Example:</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%;\">&quot;a.b.3&quot; -&gt;\n&quot;a.b;3&quot;.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\"><b>-$</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">[MS-DOS, OS/2, NT] restore the\nvolume label if the extraction medium is removable (e.g., a\ndiskette). Doubling the option (<b>-$$</b>) allows fixed\nmedia (hard disks) to be labelled as well. By default,\nvolume labels are ignored.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>-/&nbsp;</b><i>extensions</i></p>\n\n<p style=\"margin-left:22%;\">[Acorn only] overrides the\nextension list supplied by Unzip$Ext environment variable.\nDuring extraction, filename extensions that match one of the\nitems in this extension list are swapped in front of the\nbase name of the extracted file.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-:</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[all but Acorn, VM/CMS, MVS, Tandem] allows to extract\narchive members into locations outside of the current\n&rsquo;&rsquo; extraction root folder&rsquo;&rsquo;. For\nsecurity reasons, <i>unzip</i> normally removes\n&rsquo;&rsquo;parent dir&rsquo;&rsquo; path components\n(&rsquo;&rsquo;../&rsquo;&rsquo;) from the names of\nextracted file. This safety feature (new for version 5.50)\nprevents <i>unzip</i> from accidentally writing files to\n&rsquo;&rsquo;sensitive&rsquo;&rsquo; areas outside the\nactive extraction folder tree head. The <b>-:</b> option\nlets <i>unzip</i> switch back to its previous, more liberal\nbehaviour, to allow exact extraction of (older) archives\nthat used &rsquo;&rsquo;../&rsquo;&rsquo; components to\ncreate multiple directory trees at the level of the current\nextraction folder. This option does not enable writing\nexplicitly to the root directory\n(&rsquo;&rsquo;/&rsquo;&rsquo;). To achieve this, it is\nnecessary to set the extraction target folder to root (e.g.\n<b>-d /</b> ). However, when the <b>-:</b> option is\nspecified, it is still possible to implicitly write to the\nroot directory by specifying enough\n&rsquo;&rsquo;../&rsquo;&rsquo; path components within the\nzip archive. Use this option with extreme caution.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-^</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[Unix only] allow control characters in names of\nextracted ZIP archive entries. On Unix, a file name may\ncontain any (8-bit) character code with the two exception\n&rsquo;/&rsquo; (directory delimiter) and NUL (0x00, the C\nstring termination indicator), unless the specific file\nsystem has more restrictive conventions. Generally, this\nallows to embed ASCII control characters (or even\nsophisticated control sequences) in file names, at least on\n&rsquo;native&rsquo; Unix file systems. However, it may be\nhighly suspicious to make use of this Unix\n&quot;feature&quot;. Embedded control characters in file\nnames might have nasty side effects when displayed on screen\nby some listing code without sufficient filtering. And, for\nordinary users, it may be difficult to handle such file\nnames (e.g. when trying to specify it for open, copy, move,\nor delete operations). Therefore, <i>unzip</i> applies a\nfilter by default that removes potentially dangerous control\ncharacters from the extracted file names. The <b>-^</b>\noption allows to override this filter in the rare case that\nembedded filename control characters are to be intentionally\nrestored.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-2</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>[VMS] force unconditionally conversion of file names to\nODS2-compatible names. The default is to exploit the\ndestination file system, preserving case and extended file\nname characters on an ODS5 destination file system; and\napplying the ODS2-compatibility file name filtering on an\nODS2 destination file system.</p></td></tr>\n</table>\n\n<h2>ENVIRONMENT OPTIONS\n<a name=\"ENVIRONMENT OPTIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>unzip</i>&rsquo;s\ndefault behavior may be modified via options placed in an\nenvironment variable. This can be done with any option, but\nit is probably most useful with the <b>-a</b>, <b>-L</b>,\n<b>-C</b>, <b>-q</b>, <b>-o</b>, or <b>-n</b> modifiers:\nmake <i>unzip</i> auto-convert text files by default, make\nit convert filenames from uppercase systems to lowercase,\nmake it match names case-insensitively, make it quieter, or\nmake it always overwrite or never overwrite files as it\nextracts them. For example, to make <i>unzip</i> act as\nquietly as possible, only reporting errors, one would use\none of the following commands: <br>\nUnix Bourne shell:</p>\n\n<p style=\"margin-left:22%;\">UNZIP=-qq; export UNZIP</p>\n\n<p style=\"margin-left:11%;\">Unix C shell:</p>\n\n<p style=\"margin-left:22%;\">setenv UNZIP -qq</p>\n\n<p style=\"margin-left:11%;\">OS/2 or MS-DOS:</p>\n\n<p style=\"margin-left:22%;\">set UNZIP=-qq</p>\n\n<p style=\"margin-left:11%;\">VMS (quotes for\n<i>lowercase</i>):</p>\n\n<p style=\"margin-left:22%;\">define UNZIP_OPTS\n&quot;-qq&quot;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Environment\noptions are, in effect, considered to be just like any other\ncommand-line options, except that they are effectively the\nfirst options on the command line. To override an\nenvironment option, one may use the &rsquo;&rsquo;minus\noperator&rsquo;&rsquo; to remove it. For instance, to\noverride one of the quiet-flags in the example above, use\nthe command</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unzip\n--q[<i>other options</i>] zipfile</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The first\nhyphen is the normal switch character, and the second is a\nminus sign, acting on the q option. Thus the effect here is\nto cancel one quantum of quietness. To cancel both quiet\nflags, two (or more) minuses may be used:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unzip -t--q\nzipfile <br>\nunzip ---qt zipfile</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">(the two are\nequivalent). This may seem awkward or confusing, but it is\nreasonably intuitive: just ignore the first hyphen and go\nfrom there. It is also consistent with the behavior of Unix\n<i>nice</i>(1).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">As suggested by\nthe examples above, the default variable names are\nUNZIP_OPTS for VMS (where the symbol used to install\n<i>unzip</i> as a foreign command would otherwise be\nconfused with the environment variable), and UNZIP for all\nother operating systems. For compatibility with\n<i>zip</i>(1), UNZIPOPT is also accepted (don&rsquo;t ask).\nIf both UNZIP and UNZIPOPT are defined, however, UNZIP takes\nprecedence. <i>unzip</i>&rsquo;s diagnostic option\n(<b>-v</b> with no zipfile name) can be used to check the\nvalues of all four possible <i>unzip</i> and <i>zipinfo</i>\nenvironment variables.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The timezone\nvariable (TZ) should be set according to the local timezone\nin order for the <b>-f</b> and <b>-u</b> to operate\ncorrectly. See the description of <b>-f</b> above for\ndetails. This variable may also be necessary to get\ntimestamps of extracted files to be set correctly. The WIN32\n(Win9x/ME/NT4/2K/XP/2K3) port of <i>unzip</i> gets the\ntimezone configuration from the registry, assuming it is\ncorrectly set in the Control Panel. The TZ variable is\nignored for this port.</p>\n\n<h2>DECRYPTION\n<a name=\"DECRYPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Encrypted\narchives are fully supported by Info-ZIP software, but due\nto United States export restrictions, de-/encryption support\nmight be disabled in your compiled binary. However, since\nspring 2000, US export restrictions have been liberated, and\nour source archives do now include full crypt code. In case\nyou need binary distributions with crypt support enabled,\nsee the file &rsquo;&rsquo;WHERE&rsquo;&rsquo; in any\nInfo-ZIP source or binary distribution for locations both\ninside and outside the US.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Some compiled\nversions of <i>unzip</i> may not support decryption. To\ncheck a version for crypt support, either attempt to test or\nextract an encrypted archive, or else check\n<i>unzip</i>&rsquo;s diagnostic screen (see the <b>-v</b>\noption above) for\n&rsquo;&rsquo;<tt>[decryption]</tt>&rsquo;&rsquo; as one of\nthe special compilation options.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">As noted above,\nthe <b>-P</b> option may be used to supply a password on the\ncommand line, but at a cost in security. The preferred\ndecryption method is simply to extract normally; if a\nzipfile member is encrypted, <i>unzip</i> will prompt for\nthe password without echoing what is typed. <i>unzip</i>\ncontinues to use the same password as long as it appears to\nbe valid, by testing a 12-byte header on each file. The\ncorrect password will always check out against the header,\nbut there is a 1-in-256 chance that an incorrect password\nwill as well. (This is a security feature of the PKWARE\nzipfile format; it helps prevent brute-force attacks that\nmight otherwise gain a large speed advantage by testing only\nthe header.) In the case that an incorrect password is given\nbut it passes the header test anyway, either an incorrect\nCRC will be generated for the extracted data or else\n<i>unzip</i> will fail during the extraction because the\n&rsquo;&rsquo;decrypted&rsquo;&rsquo; bytes do not\nconstitute a valid compressed data stream.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the first\npassword fails the header check on some file, <i>unzip</i>\nwill prompt for another password, and so on until all files\nare extracted. If a password is not known, entering a null\npassword (that is, just a carriage return or\n&rsquo;&rsquo;Enter&rsquo;&rsquo;) is taken as a signal to\nskip all further prompting. Only unencrypted files in the\narchive(s) will thereafter be extracted. (In fact,\nthat&rsquo;s not quite true; older versions of <i>zip</i>(1)\nand <i>zipcloak</i>(1) allowed null passwords, so\n<i>unzip</i> checks each encrypted file to see if the null\npassword works. This may result in &rsquo;&rsquo;false\npositives&rsquo;&rsquo; and extraction errors, as noted\nabove.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Archives\nencrypted with 8-bit passwords (for example, passwords with\naccented European characters) may not be portable across\nsystems and/or other archivers. This problem stems from the\nuse of multiple encoding methods for such characters,\nincluding Latin-1 (ISO 8859-1) and OEM code page 850. DOS\n<i>PKZIP</i> 2.04g uses the OEM code page; Windows\n<i>PKZIP</i> 2.50 uses Latin-1 (and is therefore\nincompatible with DOS <i>PKZIP</i>); Info-ZIP uses the OEM\ncode page on DOS, OS/2 and Win3.x ports but ISO coding\n(Latin-1 etc.) everywhere else; and Nico Mak&rsquo;s\n<i>WinZip</i> 6.x does not allow 8-bit passwords at all.\n<i>UnZip</i> 5.3 (or newer) attempts to use the default\ncharacter set first (e.g., Latin-1), followed by the\nalternate one (e.g., OEM code page) to test passwords. On\nEBCDIC systems, if both of these fail, EBCDIC encoding will\nbe tested as a last resort. (EBCDIC is not tested on\nnon-EBCDIC systems, because there are no known archivers\nthat encrypt using EBCDIC encoding.) ISO character encodings\nother than Latin-1 are not supported. The new addition of\n(partially) Unicode (resp. UTF-8) support in <i>UnZip</i>\n6.0 has not yet been adapted to the encryption password\nhandling in <i>unzip</i>. On systems that use UTF-8 as\nnative character encoding, <i>unzip</i> simply tries\ndecryption with the native UTF-8 encoded password; the\nbuilt-in attempts to check the password in translated\nencoding have not yet been adapted for UTF-8 support and\nwill consequently fail.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">To use\n<i>unzip</i> to extract all members of the archive\n<i>letters.zip</i> into the current directory and\nsubdirectories below it, creating any subdirectories as\nnecessary:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unzip\nletters</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To extract all\nmembers of <i>letters.zip</i> into the current directory\nonly:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unzip -j\nletters</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To test\n<i>letters.zip</i>, printing only a summary message\nindicating whether the archive is OK or not:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unzip -tq\nletters</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To test\n<i>all</i> zipfiles in the current directory, printing only\nthe summaries:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unzip -tq\n\\*.zip</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">(The backslash\nbefore the asterisk is only required if the shell expands\nwildcards, as in Unix; double quotes could have been used\ninstead, as in the source examples below.)&nbsp;&nbsp;To\nextract to standard output all members of <i>letters.zip</i>\nwhose names end in <i>.tex</i>, auto-converting to the local\nend-of-line convention and piping the output into\n<i>more</i>(1):</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unzip -ca\nletters \\*.tex | more</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To extract the\nbinary file <i>paper1.dvi</i> to standard output and pipe it\nto a printing program:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unzip -p\narticles paper1.dvi | dvips</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To extract all\nFORTRAN and C source files--*.f, *.c, *.h, and\nMakefile--into the /tmp directory:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unzip\nsource.zip &quot;*.[fch]&quot; Makefile -d /tmp</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">(the double\nquotes are necessary only in Unix and only if globbing is\nturned on). To extract all FORTRAN and C source files,\nregardless of case (e.g., both *.c and *.C, and any\nmakefile, Makefile, MAKEFILE or similar):</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unzip -C\nsource.zip &quot;*.[fch]&quot; makefile -d /tmp</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To extract any\nsuch files but convert any uppercase MS-DOS or VMS names to\nlowercase and convert the line-endings of all of the files\nto the local standard (without respect to any files that\nmight be marked &rsquo;&rsquo;binary&rsquo;&rsquo;):</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unzip -aaCL\nsource.zip &quot;*.[fch]&quot; makefile -d /tmp</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To extract only\nnewer versions of the files already in the current\ndirectory, without querying (NOTE: be careful of unzipping\nin one timezone a zipfile created in another--ZIP archives\nother than those created by Zip 2.1 or later contain no\ntimezone information, and a\n&rsquo;&rsquo;newer&rsquo;&rsquo; file from an eastern\ntimezone may, in fact, be older):</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unzip -fo\nsources</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To extract\nnewer versions of the files already in the current directory\nand to create any files not already there (same caveat as\nprevious example):</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unzip -uo\nsources</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To display a\ndiagnostic screen showing which <i>unzip</i> and\n<i>zipinfo</i> options are stored in environment variables,\nwhether decryption support was compiled in, the compiler\nwith which <i>unzip</i> was compiled, etc.:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unzip -v</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the last\nfive examples, assume that UNZIP or UNZIP_OPTS is set to -q.\nTo do a singly quiet listing:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unzip -l\nfile.zip</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To do a doubly\nquiet listing:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unzip -ql\nfile.zip</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">(Note that the\n&rsquo;&rsquo;<tt>.zip</tt>&rsquo;&rsquo; is generally not\nnecessary.) To do a standard listing:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unzip --ql\nfile.zip <br>\nor <br>\nunzip -l-q file.zip <br>\nor <br>\nunzip -l--q file.zip <br>\n(Extra minuses in options don&rsquo;t hurt.)</p>\n\n<h2>TIPS\n<a name=\"TIPS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The current\nmaintainer, being a lazy sort, finds it very useful to\ndefine a pair of aliases: <tt>tt</tt> for\n&rsquo;&rsquo;<tt>unzip -tq</tt>&rsquo;&rsquo; and\n<tt>ii</tt> for &rsquo;&rsquo;<tt>unzip\n-Z</tt>&rsquo;&rsquo; (or\n&rsquo;&rsquo;<tt>zipinfo</tt>&rsquo;&rsquo;). One may then\nsimply type &rsquo;&rsquo;<tt>tt zipfile</tt>&rsquo;&rsquo;\nto test an archive, something that is worth making a habit\nof doing. With luck <i>unzip</i> will report\n&rsquo;&rsquo;<tt>No errors detected in compressed data of\nzipfile.zip</tt>,&rsquo;&rsquo; after which one may breathe\na sigh of relief.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The maintainer\nalso finds it useful to set the UNZIP environment variable\nto &rsquo;&rsquo;<tt>-aL</tt>&rsquo;&rsquo; and is tempted\nto add &rsquo;&rsquo;<tt>-C</tt>&rsquo;&rsquo; as well. His\nZIPINFO variable is set to\n&rsquo;&rsquo;<tt>-z</tt>&rsquo;&rsquo;.</p>\n\n<h2>DIAGNOSTICS\n<a name=\"DIAGNOSTICS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The exit status\n(or error level) approximates the exit codes defined by\nPKWARE and takes on the following values, except under\nVMS:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>0</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>normal; no errors or warnings detected.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>1</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>one or more warning errors were encountered, but\nprocessing completed successfully anyway. This includes\nzipfiles where one or more files was skipped due to\nunsupported compression method or encryption with an unknown\npassword.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>2</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>a generic error in the zipfile format was detected.\nProcessing may have completed successfully anyway; some\nbroken zipfiles created by other archivers have simple\nwork-arounds.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>3</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>a severe error in the zipfile format was detected.\nProcessing probably failed immediately.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>4</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p><i>unzip</i> was unable to allocate memory for one or\nmore buffers during program initialization.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>5</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p><i>unzip</i> was unable to allocate memory or unable to\nobtain a tty to read the decryption password(s).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>6</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p><i>unzip</i> was unable to allocate memory during\ndecompression to disk.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>7</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p><i>unzip</i> was unable to allocate memory during\nin-memory decompression.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>8</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>[currently not used]</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>9</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>the specified zipfiles were not found.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>10</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>invalid options were specified on the command line.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>11</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>no matching files were found.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>50</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>the disk is (or was) full during extraction.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>51</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>the end of the ZIP archive was encountered\nprematurely.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>80</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>the user aborted <i>unzip</i> prematurely with control-C\n(or similar)</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>81</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>testing or extraction of one or more files failed due to\nunsupported compression methods or unsupported\ndecryption.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>82</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>no files were found due to bad decryption password(s).\n(If even one file is successfully processed, however, the\nexit status is 1.)</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">VMS interprets\nstandard Unix (or PC) return values as other,\nscarier-looking things, so <i>unzip</i> instead maps them\ninto VMS-style status codes. The current mapping is as\nfollows: 1 (success) for normal exit, 0x7fff0001 for warning\nerrors, and (0x7fff000? + 16*normal_unzip_exit_status) for\nall other errors, where the &rsquo;?&rsquo; is 2 (error) for\n<i>unzip</i> values 2, 9-11 and 80-82, and 4 (fatal error)\nfor the remaining ones (3-8, 50, 51). In addition, there is\na compilation option to expand upon this behavior: defining\nRETURN_CODES results in a human-readable explanation of what\nthe error status means.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Multi-part\narchives are not yet supported, except in conjunction with\n<i>zip</i>. (All parts must be concatenated together in\norder, and then &rsquo;&rsquo;<tt>zip -F</tt>&rsquo;&rsquo;\n(for <i>zip 2.x</i>) or &rsquo;&rsquo;<tt>zip\n-FF</tt>&rsquo;&rsquo; (for <i>zip 3.x</i>) must be\nperformed on the concatenated archive in order to\n&rsquo;&rsquo;fix&rsquo;&rsquo; it. Also, <i>zip 3.0</i> and\nlater can combine multi-part (split) archives into a\ncombined single-file archive using &rsquo;&rsquo;<tt>zip -s-\ninarchive -O outarchive</tt>&rsquo;&rsquo;. See the <i>zip\n3</i> manual page for more information.) This will\ndefinitely be corrected in the next major release.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Archives read\nfrom standard input are not yet supported, except with\n<i>funzip</i> (and then only the first member of the archive\ncan be extracted).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Archives\nencrypted with 8-bit passwords (e.g., passwords with\naccented European characters) may not be portable across\nsystems and/or other archivers. See the discussion in\n<b>DECRYPTION</b> above.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>unzip</i>&rsquo;s\n<b>-M</b> (&rsquo;&rsquo;more&rsquo;&rsquo;) option tries to\ntake into account automatic wrapping of long lines. However,\nthe code may fail to detect the correct wrapping locations.\nFirst, TAB characters (and similar control sequences) are\nnot taken into account, they are handled as ordinary\nprintable characters. Second, depending on the actual system\n/ OS port, <i>unzip</i> may not detect the true screen\ngeometry but rather rely on &quot;commonly used&quot;\ndefault dimensions. The correct handling of tabs would\nrequire the implementation of a query for the actual\ntabulator setup on the output console.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Dates, times\nand permissions of stored directories are not restored\nexcept under Unix. (On Windows NT and successors, timestamps\nare now restored.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">[MS-DOS] When\nextracting or testing files from an archive on a defective\nfloppy diskette, if the &rsquo;&rsquo;Fail&rsquo;&rsquo;\noption is chosen from DOS&rsquo;s &rsquo;&rsquo;Abort,\nRetry, Fail?&rsquo;&rsquo; message, older versions of\n<i>unzip</i> may hang the system, requiring a reboot. This\nproblem appears to be fixed, but control-C (or\ncontrol-Break) can still be used to terminate\n<i>unzip</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Under DEC\nUltrix, <i>unzip</i> would sometimes fail on long zipfiles\n(bad CRC, not always reproducible). This was apparently due\neither to a hardware bug (cache memory) or an operating\nsystem bug (improper handling of page faults?). Since Ultrix\nhas been abandoned in favor of Digital Unix (OSF/1), this\nmay not be an issue anymore.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">[Unix] Unix\nspecial files such as FIFO buffers (named pipes), block\ndevices and character devices are not restored even if they\nare somehow represented in the zipfile, nor are hard-linked\nfiles relinked. Basically the only file types restored by\n<i>unzip</i> are regular files, directories and symbolic\n(soft) links.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">[OS/2] Extended\nattributes for existing directories are only updated if the\n<b>-o</b> (&rsquo;&rsquo;overwrite all&rsquo;&rsquo;) option\nis given. This is a limitation of the operating system;\nbecause directories only have a creation time associated\nwith them, <i>unzip</i> has no way to determine whether the\nstored attributes are newer or older than those on disk. In\npractice this may mean a two-pass approach is required:\nfirst unpack the archive normally (with or without\nfreshening/updating existing files), then overwrite just the\ndirectory entries (e.g., &rsquo;&rsquo;<tt>unzip -o foo\n*/</tt>&rsquo;&rsquo;).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">[VMS] When\nextracting to another directory, only the <i>[.foo]</i>\nsyntax is accepted for the <b>-d</b> option; the simple Unix\n<i>foo</i> syntax is silently ignored (as is the less common\nVMS <i>foo.dir</i> syntax).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">[VMS] When the\nfile being extracted already exists, <i>unzip</i>&rsquo;s\nquery only allows skipping, overwriting or renaming; there\nshould additionally be a choice for creating a new version\nof the file. In fact, the\n&rsquo;&rsquo;overwrite&rsquo;&rsquo; choice does create a\nnew version; the old version is not overwritten or\ndeleted.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>funzip</i>(1),\n<i>zip</i>(1), <i>zipcloak</i>(1), <i>zipgrep</i>(1),\n<i>zipinfo</i>(1), <i>zipnote</i>(1), <i>zipsplit</i>(1)</p>\n\n<h2>URL\n<a name=\"URL\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The Info-ZIP\nhome page is currently at</p>\n\n<pre style=\"margin-left:11%;\">http://www.info-zip.org/pub/infozip/</pre>\n\n\n<p style=\"margin-left:11%;\">or <tt><br>\nftp://ftp.info-zip.org/pub/infozip/</tt> .</p>\n\n<h2>AUTHORS\n<a name=\"AUTHORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The primary\nInfo-ZIP authors (current semi-active members of the\nZip-Bugs workgroup) are: Ed Gordon (Zip, general\nmaintenance, shared code, Zip64, Win32, Unix, Unicode);\nChristian Spieler (UnZip maintenance coordination, VMS,\nMS-DOS, Win32, shared code, general Zip and UnZip\nintegration and optimization); Onno van der Linden (Zip);\nMike White (Win32, Windows GUI, Windows DLLs); Kai Uwe\nRommel (OS/2, Win32); Steven M. Schweda (VMS, Unix, support\nof new features); Paul Kienitz (Amiga, Win32, Unicode);\nChris Herborth (BeOS, QNX, Atari); Jonathan Hudson\n(SMS/QDOS); Sergio Monesi (Acorn RISC OS); Harald Denker\n(Atari, MVS); John Bush (Solaris, Amiga); Hunter Goatley\n(VMS, Info-ZIP Site maintenance); Steve Salisbury (Win32);\nSteve Miller (Windows CE GUI), Johnny Lee (MS-DOS, Win32,\nZip64); and Dave Smith (Tandem NSK).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\npeople were former members of the Info-ZIP development group\nand provided major contributions to key parts of the current\ncode: Greg &rsquo;&rsquo;Cave Newt&rsquo;&rsquo; Roelofs\n(UnZip, unshrink decompression); Jean-loup Gailly (deflate\ncompression); Mark Adler (inflate decompression,\nfUnZip).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The author of\nthe original unzip code upon which Info-ZIP&rsquo;s was\nbased is Samuel H. Smith; Carl Mascott did the first Unix\nport; and David P. Kirschbaum organized and led Info-ZIP in\nits early days with Keith Petersen hosting the original\nmailing list at WSMR-SimTel20. The full list of contributors\nto UnZip has grown quite large; please refer to the CONTRIBS\nfile in the UnZip source distribution for a relatively\ncomplete version.</p>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p style=\"margin-top: 1em\">v1.2 15 Mar 89</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p style=\"margin-top: 1em\">Samuel H. Smith</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v2.0 &nbsp;9 Sep 89</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Samuel H. Smith</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v2.x fall 1989</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>many Usenet contributors</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v3.0 &nbsp;1 May 90</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP (DPK, consolidator)</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v3.1 15 Aug 90</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP (DPK, consolidator)</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v4.0 &nbsp;1 Dec 90</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP (GRR, maintainer)</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v4.1 12 May 91</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v4.2 20 Mar 92</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP (Zip-Bugs subgroup, GRR)</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v5.0 21 Aug 92</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP (Zip-Bugs subgroup, GRR)</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v5.01 15 Jan 93</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP (Zip-Bugs subgroup, GRR)</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v5.1 &nbsp;7 Feb 94</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP (Zip-Bugs subgroup, GRR)</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v5.11 &nbsp;2 Aug 94</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP (Zip-Bugs subgroup, GRR)</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v5.12 28 Aug 94</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP (Zip-Bugs subgroup, GRR)</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v5.2 30 Apr 96</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP (Zip-Bugs subgroup, GRR)</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v5.3 22 Apr 97</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP (Zip-Bugs subgroup, GRR)</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v5.31 31 May 97</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP (Zip-Bugs subgroup, GRR)</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v5.32 &nbsp;3 Nov 97</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP (Zip-Bugs subgroup, GRR)</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v5.4 28 Nov 98</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP (Zip-Bugs subgroup, SPC)</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v5.41 16 Apr 00</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP (Zip-Bugs subgroup, SPC)</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v5.42 14 Jan 01</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP (Zip-Bugs subgroup, SPC)</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v5.5 17 Feb 02</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP (Zip-Bugs subgroup, SPC)</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v5.51 22 May 04</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP (Zip-Bugs subgroup, SPC)</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v5.52 28 Feb 05</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP (Zip-Bugs subgroup, SPC)</p></td>\n<td width=\"9%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p>v6.0 20 Apr 09</p></td>\n<td width=\"5%\"></td>\n<td width=\"51%\">\n\n\n<p>Info-ZIP (Zip-Bugs subgroup, SPC)</p></td>\n<td width=\"9%\">\n</td></tr>\n </table>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#ARGUMENTS\">ARGUMENTS</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#MODIFIERS\">MODIFIERS</a>","<a href=\"#ENVIRONMENT OPTIONS\">ENVIRONMENT OPTIONS</a>","<a href=\"#DECRYPTION\">DECRYPTION</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#TIPS\">TIPS</a>","<a href=\"#DIAGNOSTICS\">DIAGNOSTICS</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#URL\">URL</a>","<a href=\"#AUTHORS\">AUTHORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>"]}