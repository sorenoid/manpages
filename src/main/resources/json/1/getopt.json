{"name":"getopt","description":"getopt - parse\ncommand options (enhanced)","body":"\n\n<h1 align=\"center\">GETOPT</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">getopt - parse\ncommand options (enhanced)</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>getopt</b>\n<i>optstring parameters</i> <b>getopt</b> [options]\n[<b>--</b>] <i>optstring parameters</i> <b>getopt</b>\n[options] <b>-o</b>|<b>--options</b> <i>optstring</i>\n[options] [<b>--</b>] <i>parameters</i></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i><b>getopt</b></i>\nis used to break up (<i>parse</i>) options in command lines\nfor easy parsing by shell procedures, and to check for valid\noptions. It uses the GNU <a href=\"https://man.page/3/getopt\">getopt(3)</a> routines to do\nthis.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The parameters\n<b>getopt</b> is called with can be divided into two parts:\noptions which modify the way <b>getopt</b> will do the\nparsing (the <i>options</i> and the <i>optstring</i> in the\n<b>SYNOPSIS</b>), and the parameters which are to be parsed\n(<i>parameters</i> in the <b>SYNOPSIS</b>). The second part\nwill start at the first non-option parameter that is not an\noption argument, or after the first occurrence of\n'<b>--</b>'. If no '<b>-o</b>' or '<b>--options</b>' option\nis found in the first part, the first parameter of the\nsecond part is used as the short options string.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\nenvironment variable <b>GETOPT_COMPATIBLE</b> is set, or if\nthe first <i>parameter</i> is not an option (does not start\nwith a '<b>-</b>', the first format in the <b>SYNOPSIS</b>),\n<b>getopt</b> will generate output that is compatible with\nthat of other versions of <a href=\"https://man.page/1/getopt\">getopt(1)</a>. It will still do\nparameter shuffling and recognize optional arguments (see\nsection <b>COMPATIBILITY</b> for more information).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Traditional\nimplementations of <a href=\"https://man.page/1/getopt\">getopt(1)</a> are unable to cope with\nwhitespace and other (shell-specific) special characters in\narguments and non-option parameters. To solve this problem,\nthis implementation can generate quoted output which must\nonce again be interpreted by the shell (usually by using the\n<b>eval</b> command). This has the effect of preserving\nthose characters, but you must call <b>getopt</b> in a way\nthat is no longer compatible with other versions (the second\nor third format in the <b>SYNOPSIS</b>). To determine\nwhether this enhanced version of <a href=\"https://man.page/1/getopt\">getopt(1)</a> is\ninstalled, a special test option (<b>-T</b>) can be\nused.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-a</b>,\n<b>--alternative</b></p>\n\n<p style=\"margin-left:17%;\">Allow long options to start\nwith a single '<b>-</b>'.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-h</b>,\n<b>--help</b></p>\n\n<p style=\"margin-left:17%;\">Display help text and exit. No\nother output is generated.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-l</b>,\n<b>--longoptions</b> <i>longopts</i></p>\n\n<p style=\"margin-left:17%;\">The long (multi-character)\noptions to be recognized. More than one option name may be\nspecified at once, by separating the names with commas. This\noption may be given more than once, the <i>longopts</i> are\ncumulative. Each long option name in <i>longopts</i> may be\nfollowed by one colon to indicate it has a required\nargument, and by two colons to indicate it has an optional\nargument.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-n</b>,\n<b>--name</b> <i>progname</i></p>\n\n<p style=\"margin-left:17%;\">The name that will be used by\nthe <a href=\"https://man.page/3/getopt\">getopt(3)</a> routines when it reports errors. Note\nthat errors of <a href=\"https://man.page/1/getopt\">getopt(1)</a> are still reported as coming\nfrom getopt.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-o</b>,\n<b>--options</b> <i>shortopts</i></p>\n\n<p style=\"margin-left:17%;\">The short (one-character)\noptions to be recognized. If this option is not found, the\nfirst parameter of <b>getopt</b> that does not start with a\n'<b>-</b>' (and is not an option argument) is used as the\nshort options string. Each short option character in\n<i>shortopts</i> may be followed by one colon to indicate it\nhas a required argument, and by two colons to indicate it\nhas an optional argument. The first character of shortopts\nmay be '<b>+</b>' or '<b>-</b>' to influence the way options\nare parsed and output is generated (see section <b>SCANNING\nMODES</b> for details).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-q</b>,\n<b>--quiet</b></p>\n\n<p style=\"margin-left:17%;\">Disable error reporting by\n<a href=\"https://man.page/3/getopt\">getopt(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-Q</b>,\n<b>--quiet-output</b></p>\n\n<p style=\"margin-left:17%;\">Do not generate normal output.\nErrors are still reported by <a href=\"https://man.page/3/getopt\">getopt(3)</a>, unless you\nalso use <b>-q</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-s</b>,\n<b>--shell</b> <i>shell</i></p>\n\n<p style=\"margin-left:17%;\">Set quoting conventions to\nthose of <i>shell</i>. If the <b>-s</b> option is not given,\nthe BASH conventions are used. Valid arguments are currently\n'<b>sh</b>' '<b>bash</b>', '<b>csh</b>', and\n'<b>tcsh</b>'.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-T</b>,\n<b>--test</b></p>\n\n<p style=\"margin-left:17%;\">Test if your <a href=\"https://man.page/1/getopt\">getopt(1)</a>\nis this enhanced version or an old version. This generates\nno output, and sets the error status to 4. Other\nimplementations of <a href=\"https://man.page/1/getopt\">getopt(1)</a>, and this version if the\nenvironment variable <b>GETOPT_COMPATIBLE</b> is set, will\nreturn '<b>--</b>' and error status 0.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-u</b>,\n<b>--unquoted</b></p>\n\n<p style=\"margin-left:17%;\">Do not quote the output. Note\nthat whitespace and special (shell-dependent) characters can\ncause havoc in this mode (like they do with other\n<a href=\"https://man.page/1/getopt\">getopt(1)</a> implementations).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-V</b>,\n<b>--version</b></p>\n\n<p style=\"margin-left:17%;\">Display version information and\nexit. No other output is generated.</p>\n\n<h2>PARSING\n<a name=\"PARSING\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This section\nspecifies the format of the second part of the parameters of\n<b>getopt</b> (the <i>parameters</i> in the\n<b>SYNOPSIS</b>). The next section (<b>OUTPUT</b>) describes\nthe output that is generated. These parameters were\ntypically the parameters a shell function was called with.\nCare must be taken that each parameter the shell function\nwas called with corresponds to exactly one parameter in the\nparameter list of <b>getopt</b> (see the <b>EXAMPLES</b>).\nAll parsing is done by the GNU <a href=\"https://man.page/3/getopt\">getopt(3)</a>\nroutines.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The parameters\nare parsed from left to right. Each parameter is classified\nas a short option, a long option, an argument to an option,\nor a non-option parameter.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A simple short\noption is a '<b>-</b>' followed by a short option character.\nIf the option has a required argument, it may be written\ndirectly after the option character or as the next parameter\n(i.e., separated by whitespace on the command line). If the\noption has an optional argument, it must be written directly\nafter the option character if present.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It is possible\nto specify several short options after one '<b>-</b>', as\nlong as all (except possibly the last) do not have required\nor optional arguments.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A long option\nnormally begins with '<b>--</b>' followed by the long option\nname. If the option has a required argument, it may be\nwritten directly after the long option name, separated by\n'<b>=</b>', or as the next argument (i.e., separated by\nwhitespace on the command line). If the option has an\noptional argument, it must be written directly after the\nlong option name, separated by '<b>=</b>', if present (if\nyou add the '<b>=</b>' but nothing behind it, it is\ninterpreted as if no argument was present; this is a slight\nbug, see the <b>BUGS</b>). Long options may be abbreviated,\nas long as the abbreviation is not ambiguous.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Each parameter\nnot starting with a '<b>-</b>', and not a required argument\nof a previous option, is a non-option parameter. Each\nparameter after a '<b>--</b>' parameter is always\ninterpreted as a non-option parameter. If the environment\nvariable <b>POSIXLY_CORRECT</b> is set, or if the short\noption string started with a '<b>+</b>', all remaining\nparameters are interpreted as non-option parameters as soon\nas the first non-option parameter is found.</p>\n\n<h2>OUTPUT\n<a name=\"OUTPUT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Output is\ngenerated for each element described in the previous\nsection. Output is done in the same order as the elements\nare specified in the input, except for non-option\nparameters. Output can be done in <i>compatible</i>\n(<i>unquoted</i>) mode, or in such way that whitespace and\nother special characters within arguments and non-option\nparameters are preserved (see <b>QUOTING</b>). When the\noutput is processed in the shell script, it will seem to be\ncomposed of distinct elements that can be processed one by\none (by using the shift command in most shell languages).\nThis is imperfect in unquoted mode, as elements can be split\nat unexpected places if they contain whitespace or special\ncharacters.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If there are\nproblems parsing the parameters, for example because a\nrequired argument is not found or an option is not\nrecognized, an error will be reported on stderr, there will\nbe no output for the offending element, and a non-zero error\nstatus is returned.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For a short\noption, a single '<b>-</b>' and the option character are\ngenerated as one parameter. If the option has an argument,\nthe next parameter will be the argument. If the option takes\nan optional argument, but none was found, the next parameter\nwill be generated but be empty in quoting mode, but no\nsecond parameter will be generated in unquoted (compatible)\nmode. Note that many other <a href=\"https://man.page/1/getopt\">getopt(1)</a> implementations\ndo not support optional arguments.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If several\nshort options were specified after a single '<b>-</b>', each\nwill be present in the output as a separate parameter.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For a long\noption, '<b>--</b>' and the full option name are generated\nas one parameter. This is done regardless whether the option\nwas abbreviated or specified with a single '<b>-</b>' in the\ninput. Arguments are handled as with short options.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Normally, no\nnon-option parameters output is generated until all options\nand their arguments have been generated. Then '<b>--</b>' is\ngenerated as a single parameter, and after it the non-option\nparameters in the order they were found, each as a separate\nparameter. Only if the first character of the short options\nstring was a '<b>-</b>', non-option parameter output is\ngenerated at the place they are found in the input (this is\nnot supported if the first format of the <b>SYNOPSIS</b> is\nused; in that case all preceding occurrences of '<b>-</b>'\nand '<b>+</b>' are ignored).</p>\n\n<h2>QUOTING\n<a name=\"QUOTING\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">In\ncompatibility mode, whitespace or 'special' characters in\narguments or non-option parameters are not handled\ncorrectly. As the output is fed to the shell script, the\nscript does not know how it is supposed to break the output\ninto separate parameters. To circumvent this problem, this\nimplementation offers quoting. The idea is that output is\ngenerated with quotes around each parameter. When this\noutput is once again fed to the shell (usually by a shell\n<b>eval</b> command), it is split correctly into separate\nparameters.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Quoting is not\nenabled if the environment variable <b>GETOPT_COMPATIBLE</b>\nis set, if the first form of the <b>SYNOPSIS</b> is used, or\nif the option '<b>-u</b>' is found.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Different\nshells use different quoting conventions. You can use the\n'<b>-s</b>' option to select the shell you are using. The\nfollowing shells are currently supported: '<b>sh</b>',\n'<b>bash</b>', '<b>csh</b>' and '<b>tcsh</b>'. Actually,\nonly two 'flavors' are distinguished: sh-like quoting\nconventions and csh-like quoting conventions. Chances are\nthat if you use another shell script language, one of these\nflavors can still be used.</p>\n\n<h2>SCANNING MODES\n<a name=\"SCANNING MODES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The first\ncharacter of the short options string may be a '<b>-</b>' or\na '<b>+</b>' to indicate a special scanning mode. If the\nfirst calling form in the <b>SYNOPSIS</b> is used they are\nignored; the environment variable <b>POSIXLY_CORRECT</b> is\nstill examined, though.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the first\ncharacter is '<b>+</b>', or if the environment variable\n<b>POSIXLY_CORRECT</b> is set, parsing stops as soon as the\nfirst non-option parameter (i.e., a parameter that does not\nstart with a '<b>-</b>') is found that is not an option\nargument. The remaining parameters are all interpreted as\nnon-option parameters.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the first\ncharacter is a '<b>-</b>', non-option parameters are\noutputted at the place where they are found; in normal\noperation, they are all collected at the end of output after\na '<b>--</b>' parameter has been generated. Note that this\n'<b>--</b>' parameter is still generated, but it will always\nbe the last parameter in this mode.</p>\n\n<h2>COMPATIBILITY\n<a name=\"COMPATIBILITY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This version of\n<a href=\"https://man.page/1/getopt\">getopt(1)</a> is written to be as compatible as possible\nto other versions. Usually you can just replace them with\nthis version without any modifications, and with some\nadvantages.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the first\ncharacter of the first parameter of getopt is not a\n'<b>-</b>', <b>getopt</b> goes into compatibility mode. It\nwill interpret its first parameter as the string of short\noptions, and all other arguments will be parsed. It will\nstill do parameter shuffling (i.e., all non-option\nparameters are output at the end), unless the environment\nvariable <b>POSIXLY_CORRECT</b> is set, in which case,\n<b>getopt</b> will prepend a '<b>+</b>' before short options\nautomatically.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The environment\nvariable <b>GETOPT_COMPATIBLE</b> forces <b>getopt</b> into\ncompatibility mode. Setting both this environment variable\nand <b>POSIXLY_CORRECT</b> offers 100% compatibility for\n'difficult' programs. Usually, though, neither is\nneeded.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In\ncompatibility mode, leading '<b>-</b>' and '<b>+</b>'\ncharacters in the short options string are ignored.</p>\n\n<h2>RETURN CODES\n<a name=\"RETURN CODES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>getopt</b>\nreturns error code <b>0</b> for successful parsing, <b>1</b>\nif <a href=\"https://man.page/3/getopt\">getopt(3)</a> returns errors, <b>2</b> if it does not\nunderstand its own parameters, <b>3</b> if an internal error\noccurs like out-of-memory, and <b>4</b> if it is called with\n<b>-T</b>.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Example scripts\nfor (ba)sh and (t)csh are provided with the <a href=\"https://man.page/1/getopt\">getopt(1)</a>\ndistribution, and are installed in\n<i>/usr/share/doc/util-linux/examples/</i> directory.</p>\n\n<h2>ENVIRONMENT\n<a name=\"ENVIRONMENT\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>POSIXLY_CORRECT</b></p>\n\n<p style=\"margin-left:17%;\">This environment variable is\nexamined by the <a href=\"https://man.page/3/getopt\">getopt(3)</a> routines. If it is set,\nparsing stops as soon as a parameter is found that is not an\noption or an option argument. All remaining parameters are\nalso interpreted as non-option parameters, regardless\nwhether they start with a '<b>-</b>'.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>GETOPT_COMPATIBLE</b></p>\n\n<p style=\"margin-left:17%;\">Forces <b>getopt</b> to use the\nfirst calling format as specified in the\n<b>SYNOPSIS</b>.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/getopt\">getopt(3)</a>\ncan parse long options with optional arguments that are\ngiven an empty optional argument (but cannot do this for\nshort options). This <a href=\"https://man.page/1/getopt\">getopt(1)</a> treats optional\narguments that are empty as if they were not present.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The syntax if\nyou do not want any short option variables at all is not\nvery intuitive (you have to set them explicitly to the empty\nstring).</p>\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Frodo\nLooijaard</i> &lt;frodo@frodo.looijaard.name&gt;</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/bash\">bash(1)</a>,\n<a href=\"https://man.page/1/tcsh\">tcsh(1)</a>, <a href=\"https://man.page/3/getopt\">getopt(3)</a></p>\n\n<h2>REPORTING BUGS\n<a name=\"REPORTING BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For bug\nreports, use the issue tracker at\n&lt;https://github.com/karelzak/util-linux/issues&gt;.</p>\n\n<h2>AVAILABILITY\n<a name=\"AVAILABILITY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>getopt</b> command is part of the util-linux package\nwhich can be downloaded from <i>Linux Kernel Archive</i>\n&lt;https://www.kernel.org/pub/linux/utils/util-linux/&gt;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#PARSING\">PARSING</a>","<a href=\"#OUTPUT\">OUTPUT</a>","<a href=\"#QUOTING\">QUOTING</a>","<a href=\"#SCANNING MODES\">SCANNING MODES</a>","<a href=\"#COMPATIBILITY\">COMPATIBILITY</a>","<a href=\"#RETURN CODES\">RETURN CODES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#ENVIRONMENT\">ENVIRONMENT</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#AUTHOR\">AUTHOR</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#REPORTING BUGS\">REPORTING BUGS</a>","<a href=\"#AVAILABILITY\">AVAILABILITY</a>"]}