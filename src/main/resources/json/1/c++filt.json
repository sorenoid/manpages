{"name":"c++filt","description":"c++filt - demangle C++ and Java symbols","body":"\n\n<h1 align=\"center\">C++FILT</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">c++filt -\ndemangle C++ and Java symbols</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">c++filt\n[<b>-_</b>|<b>--strip-underscore</b>] <br>\n[<b>-n</b>|<b>--no-strip-underscore</b>] <br>\n[<b>-p</b>|<b>--no-params</b>] <br>\n[<b>-t</b>|<b>--types</b>] <br>\n[<b>-i</b>|<b>--no-verbose</b>] <br>\n[<b>-r</b>|<b>--no-recurse-limit</b>] <br>\n[<b>-R</b>|<b>--recurse-limit</b>] <br>\n[<b>-s</b> <i>format</i>|<b>--format=</b><i>format</i>] <br>\n[<b>--help</b>] [<b>--version</b>] [<i>symbol</i>...]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The C\n<small>++</small> and Java languages provide function\noverloading, which means that you can write many functions\nwith the same name, providing that each function takes\nparameters of different types. In order to be able to\ndistinguish these similarly named functions C\n<small>++</small> and Java encode them into a low-level\nassembler name which uniquely identifies each different\nversion. This process is known as <i>mangling</i>. The\n<b>c++filt</b> [1] program does the inverse mapping: it\ndecodes (<i>demangles</i>) low-level names into user-level\nnames so that they can be read.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Every\nalphanumeric word (consisting of letters, digits,\nunderscores, dollars, or periods) seen in the input is a\npotential mangled name. If the name decodes into a C\n<small>++</small> name, the C <small>++</small> name\nreplaces the low-level name in the output, otherwise the\noriginal word is output. In this way you can pass an entire\nassembler source file, containing mangled names, through\n<b>c++filt</b> and see the same source file containing\ndemangled names.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">You can also\nuse <b>c++filt</b> to decipher individual symbols by passing\nthem on the command line:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">c++filt\n&lt;symbol&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If no\n<i>symbol</i> arguments are given, <b>c++filt</b> reads\nsymbol names from the standard input instead. All the\nresults are printed on the standard output. The difference\nbetween reading names from the command line versus reading\nnames from the standard input is that command-line arguments\nare expected to be just mangled names and no checking is\nperformed to separate them from surrounding text. Thus for\nexample:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">c++filt -n\n_Z1fv</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">will work and\ndemangle the name to &quot;f()&quot; whereas:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">c++filt -n\n_Z1fv,</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">will not work.\n(Note the extra comma at the end of the mangled name which\nmakes it invalid). This command however will work:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">echo _Z1fv, |\nc++filt -n</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">and will\ndisplay &quot;f(),&quot;, i.e., the demangled name followed\nby a trailing comma. This behaviour is because when the\nnames are read from the standard input it is expected that\nthey might be part of an assembler source file where there\nmight be extra, extraneous characters trailing after a\nmangled name. For example:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">.type _Z1fv,\n@function</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\"><b>-_</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--strip-underscore</b></p>\n\n<p style=\"margin-left:17%;\">On some systems, both the C and\nC <small>++</small> compilers put an underscore in front of\nevery name. For example, the C name &quot;foo&quot; gets the\nlow-level name &quot;_foo&quot;. This option removes the\ninitial underscore. Whether <b>c++filt</b> removes the\nunderscore by default is target dependent.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-n</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>--no-strip-underscore</b></p>\n\n<p style=\"margin-left:17%;\">Do not remove the initial\nunderscore.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-p</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--no-params</b></p>\n\n<p style=\"margin-left:17%;\">When demangling the name of a\nfunction, do not display the types of the function&rsquo;s\nparameters.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-t</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--types</b></p>\n\n<p style=\"margin-left:17%;\">Attempt to demangle types as\nwell as function names. This is disabled by default since\nmangled types are normally only used internally in the\ncompiler, and they can be confused with non-mangled names.\nFor example, a function called &quot;a&quot; treated as a\nmangled type name would be demangled to &quot;signed\nchar&quot;.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-i</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--no-verbose</b></p>\n\n<p style=\"margin-left:17%;\">Do not include implementation\ndetails (if any) in the demangled output.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-r</b></p></td>\n<td width=\"86%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-R</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--recurse-limit <br>\n--no-recurse-limit <br>\n--recursion-limit <br>\n--no-recursion-limit</b></p>\n\n<p style=\"margin-left:17%;\">Enables or disables a limit on\nthe amount of recursion performed whilst demangling strings.\nSince the name mangling formats allow for an infinite level\nof recursion it is possible to create strings whose decoding\nwill exhaust the amount of stack space available on the host\nmachine, triggering a memory fault. The limit tries to\nprevent this from happening by restricting recursion to 2048\nlevels of nesting.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The default is\nfor this limit to be enabled, but disabling it may be\nnecessary in order to demangle truly complicated names. Note\nhowever that if the recursion limit is disabled then stack\nexhaustion is possible and any bug reports about such an\nevent will be rejected.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The <b>-r</b>\noption is a synonym for the <b>--no-recurse-limit</b>\noption. The <b>-R</b> option is a synonym for the\n<b>--recurse-limit</b> option.</p>\n\n<p style=\"margin-left:11%;\"><b>-s</b> <i>format</i> <b><br>\n--format=</b><i>format</i></p>\n\n<p style=\"margin-left:17%;\"><b>c++filt</b> can decode\nvarious methods of mangling, used by different compilers.\nThe argument to this option selects which method it uses:\n<br>\n&quot;auto&quot;</p>\n\n<p style=\"margin-left:23%;\">Automatic selection based on\nexecutable (the default method)</p>\n\n<p style=\"margin-left:17%;\">&quot;gnu&quot;</p>\n\n<p style=\"margin-left:23%;\">the one used by the <small>GNU\nC <small>++ compiler (g++)</small></small></p>\n\n\n<p style=\"margin-left:17%;\"><small><small>&quot;lucid&quot;</small></small></p>\n\n<p style=\"margin-left:23%;\">the one used by the Lucid\ncompiler (lcc)</p>\n\n<p style=\"margin-left:17%;\">&quot;arm&quot;</p>\n\n<p style=\"margin-left:23%;\">the one specified by the C\n<small>++</small> Annotated Reference Manual</p>\n\n<p style=\"margin-left:17%;\">&quot;hp&quot;</p>\n\n<p style=\"margin-left:23%;\">the one used by the\n<small>HP</small> compiler (aCC)</p>\n\n<p style=\"margin-left:17%;\">&quot;edg&quot;</p>\n\n<p style=\"margin-left:23%;\">the one used by the\n<small>EDG</small> compiler</p>\n\n<p style=\"margin-left:17%;\">&quot;gnu-v3&quot;</p>\n\n<p style=\"margin-left:23%;\">the one used by the <small>GNU\nC <small>++ compiler (g++) with the V3\n<small>ABI.</small></small></small></p>\n\n\n<p style=\"margin-left:17%;\"><small><small>&quot;java&quot;</small></small></p>\n\n<p style=\"margin-left:23%;\">the one used by the\n<small>GNU</small> Java compiler (gcj)</p>\n\n<p style=\"margin-left:17%;\">&quot;gnat&quot;</p>\n\n<p style=\"margin-left:23%;\">the one used by the\n<small>GNU</small> Ada compiler ( <small>GNAT</small> ).</p>\n\n<p style=\"margin-left:11%;\"><b>--help</b></p>\n\n<p style=\"margin-left:17%;\">Print a summary of the options\nto <b>c++filt</b> and exit.</p>\n\n<p style=\"margin-left:11%;\"><b>--version</b></p>\n\n<p style=\"margin-left:17%;\">Print the version number of\n<b>c++filt</b> and exit.</p>\n\n<p style=\"margin-left:11%;\"><b>@</b><i>file</i></p>\n\n<p style=\"margin-left:17%;\">Read command-line options from\n<i>file</i>. The options read are inserted in place of the\noriginal @<i>file</i> option. If <i>file</i> does not exist,\nor cannot be read, then the option will be treated\nliterally, and not removed.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Options in\n<i>file</i> are separated by whitespace. A whitespace\ncharacter may be included in an option by surrounding the\nentire option in either single or double quotes. Any\ncharacter (including a backslash) may be included by\nprefixing the character to be included with a backslash. The\n<i>file</i> may itself contain additional @<i>file</i>\noptions; any such options will be processed recursively.</p>\n\n<h2>FOOTNOTES\n<a name=\"FOOTNOTES\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\">1.</p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">MS-DOS does not allow\n&quot;+&quot; characters in file names, so on MS-DOS this\nprogram is named <b><small>CXXFILT</small></b> .</p></td></tr>\n</table>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">the Info\nentries for <i>binutils</i>.</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright (c)\n1991-2022 Free Software Foundation, Inc.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Permission is\ngranted to copy, distribute and/or modify this document\nunder the terms of the <small>GNU</small> Free Documentation\nLicense, Version 1.3 or any later version published by the\nFree Software Foundation; with no Invariant Sections, with\nno Front-Cover Texts, and with no Back-Cover Texts. A copy\nof the license is included in the section entitled &quot;\n<small>GNU</small> Free Documentation License&quot;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#FOOTNOTES\">FOOTNOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"]}