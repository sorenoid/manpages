{"name":"git-replace","body":"\n\n<h1 align=\"center\">GIT-REPLACE</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">git-replace -\nCreate, list, delete refs to replace objects</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>git\nreplace</i> [-f] &lt;object&gt; &lt;replacement&gt; <i><br>\ngit replace</i> [-f] --edit &lt;object&gt; <i><br>\ngit replace</i> [-f] --graft &lt;commit&gt;\n[&lt;parent&gt;...] <i><br>\ngit replace</i> [-f] --convert-graft-file <i><br>\ngit replace</i> -d &lt;object&gt;... <i><br>\ngit replace</i> [--format=&lt;format&gt;] [-l\n[&lt;pattern&gt;]]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Adds a\n<i>replace</i> reference in <b>refs/replace/</b>\nnamespace.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The name of the\n<i>replace</i> reference is the SHA-1 of the object that is\nreplaced. The content of the <i>replace</i> reference is the\nSHA-1 of the replacement object.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The replaced\nobject and the replacement object must be of the same type.\nThis restriction can be bypassed using <b>-f</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Unless\n<b>-f</b> is given, the <i>replace</i> reference must not\nyet exist.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">There is no\nother restriction on the replaced and replacement objects.\nMerge commits can be replaced by non-merge commits and vice\nversa.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Replacement\nreferences will be used by default by all Git commands\nexcept those doing reachability traversal (prune, pack\ntransfer and fsck).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It is possible\nto disable use of replacement references for any command\nusing the <b>--no-replace-objects</b> option just after\n<i>git</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For example if\ncommit <i>foo</i> has been replaced by commit\n<i>bar</i>:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git\n--no-replace-objects cat-file commit foo</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">shows\ninformation about commit <i>foo</i>, while:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git cat-file\ncommit foo</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">shows\ninformation about commit <i>bar</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>GIT_NO_REPLACE_OBJECTS</b> environment variable can be\nset to achieve the same effect as the\n<b>--no-replace-objects</b> option.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">-f, --force</p>\n\n<p style=\"margin-left:17%;\">If an existing replace ref for\nthe same object exists, it will be overwritten (instead of\nfailing).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-d,\n--delete</p>\n\n<p style=\"margin-left:17%;\">Delete existing replace refs\nfor the given objects.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--edit\n&lt;object&gt;</p>\n\n<p style=\"margin-left:17%;\">Edit an object&rsquo;s content\ninteractively. The existing content for &lt;object&gt; is\npretty-printed into a temporary file, an editor is launched\non the file, and the result is parsed to create a new object\nof the same type as &lt;object&gt;. A replacement ref is\nthen created to replace &lt;object&gt; with the newly\ncreated object. See <a href=\"https://man.page/1/git-var\">git-var(1)</a> for details about how\nthe editor will be chosen.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--raw</p>\n\n<p style=\"margin-left:17%;\">When editing, provide the raw\nobject contents rather than pretty-printed ones. Currently\nthis only affects trees, which will be shown in their binary\nform. This is harder to work with, but can help when\nrepairing a tree that is so corrupted it cannot be\npretty-printed. Note that you may need to configure your\neditor to cleanly read and write binary data.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--graft\n&lt;commit&gt; [&lt;parent&gt;...]</p>\n\n<p style=\"margin-left:17%;\">Create a graft commit. A new\ncommit is created with the same content as &lt;commit&gt;\nexcept that its parents will be [&lt;parent&gt;...] instead\nof &lt;commit&gt;'s parents. A replacement ref is then\ncreated to replace &lt;commit&gt; with the newly created\ncommit. Use <b>--convert-graft-file</b> to convert a\n<b>$GIT_DIR/info/grafts</b> file and use replace refs\ninstead.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--convert-graft-file</p>\n\n<p style=\"margin-left:17%;\">Creates graft commits for all\nentries in <b>$GIT_DIR/info/grafts</b> and deletes that file\nupon success. The purpose is to help users with\ntransitioning off of the now-deprecated graft file.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-l\n&lt;pattern&gt;, --list &lt;pattern&gt;</p>\n\n<p style=\"margin-left:17%;\">List replace refs for objects\nthat match the given pattern (or all if no pattern is\ngiven). Typing &quot;git replace&quot; without arguments,\nalso lists all replace refs.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--format=&lt;format&gt;</p>\n\n<p style=\"margin-left:17%;\">When listing, use the specified\n&lt;format&gt;, which can be one of <i>short</i>,\n<i>medium</i> and <i>long</i>. When omitted, the format\ndefaults to <i>short</i>.</p>\n\n<h2>FORMATS\n<a name=\"FORMATS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nformat are available:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<i>short</i>: &lt;replaced sha1&gt;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<i>medium</i>: &lt;replaced sha1&gt; &rarr; &lt;replacement\nsha1&gt;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<i>long</i>: &lt;replaced sha1&gt; (&lt;replaced type&gt;)\n&rarr; &lt;replacement sha1&gt; (&lt;replacement\ntype&gt;)</p>\n\n<h2>CREATING REPLACEMENT OBJECTS\n<a name=\"CREATING REPLACEMENT OBJECTS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/git-hash-object\">git-hash-object(1)</a>,\n<a href=\"https://man.page/1/git-rebase\">git-rebase(1)</a>, and\n<b><font color=\"#0000FF\">git-filter-repo</font></b>\n<small><font color=\"#000000\">[1]</font></small>\n<font color=\"#000000\">, among other git commands, can be\nused to create replacement objects from existing objects.\nThe <b>--edit</b> option can also be used with <i>git\nreplace</i> to create a replacement object by editing an\nexisting object.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">If\nyou want to replace many blobs, trees or commits that are\npart of a string of commits, you may just want to create a\nreplacement string of commits and then only replace the\ncommit at the tip of the target string of commits with the\ncommit at the tip of the replacement string of\ncommits.</font></p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">Comparing\nblobs or trees that have been replaced with those that\nreplace them will not work properly. And using <b>git reset\n--hard</b> to go back to a replaced commit will move the\nbranch to the replacement commit instead of the replaced\ncommit.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">There\nmay be other problems when using <i>git rev-list</i> related\nto pending objects.</font></p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><a href=\"https://man.page/1/git-hash-object\">git-hash-object(1)</a>\n<a href=\"https://man.page/1/git-rebase\">git-rebase(1)</a> <a href=\"https://man.page/1/git-tag\">git-tag(1)</a> <a href=\"https://man.page/1/git-branch\">git-branch(1)</a>\n<a href=\"https://man.page/1/git-commit\">git-commit(1)</a> <a href=\"https://man.page/1/git-var\">git-var(1)</a> <a href=\"https://man.page/1/git\">git(1)</a></font>\n<b><font color=\"#0000FF\">git-filter-repo</font></b>\n<small><font color=\"#000000\">[1]</font></small></p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">Part\nof the <a href=\"https://man.page/1/git\">git(1)</a> suite</font></p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"12%\"></td>\n<td width=\"3%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">1.</font></p> </td>\n<td width=\"2%\"></td>\n<td width=\"23%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">git-filter-repo</font></p> </td>\n<td width=\"60%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">https://github.com/newren/git-filter-repo</font></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#FORMATS\">FORMATS</a>","<a href=\"#CREATING REPLACEMENT OBJECTS\">CREATING REPLACEMENT OBJECTS</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#GIT\">GIT</a>","<a href=\"#NOTES\">NOTES</a>"]}