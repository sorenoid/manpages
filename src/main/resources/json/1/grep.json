{"name":"grep","body":"\n\n<h1 align=\"center\">GREP</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">grep, egrep,\nfgrep, rgrep - print lines that match patterns</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>grep</b>\n[<i>OPTION</i>...] <i>PATTERNS</i> [<i>FILE</i>...] <b><br>\ngrep</b> [<i>OPTION</i>...] <b>-e</b> <i>PATTERNS</i> ...\n[<i>FILE</i>...] <b><br>\ngrep</b> [<i>OPTION</i>...] <b>-f</b> <i>PATTERN_FILE</i>\n... [<i>FILE</i>...]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>grep</b>\nsearches for <i>PATTERNS</i> in each <i>FILE</i>.\n<i>PATTERNS</i> is one or more patterns separated by newline\ncharacters, and <b>grep</b> prints each line that matches a\npattern. Typically <i>PATTERNS</i> should be quoted when\n<b>grep</b> is used in a shell command.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A <i>FILE</i>\nof &ldquo;<b>-</b>&rdquo; stands for standard input. If no\n<i>FILE</i> is given, recursive searches examine the working\ndirectory, and nonrecursive searches read standard\ninput.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In addition,\nthe variant programs <b>egrep</b>, <b>fgrep</b> and\n<b>rgrep</b> are the same as <b>grep&nbsp;-E</b>,\n<b>grep&nbsp;-F</b>, and <b>grep&nbsp;-r</b>, respectively.\nThese variants are deprecated, but are provided for backward\ncompatibility.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Generic\nProgram Information</b></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>--help</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"49%\">\n\n\n<p>Output a usage message and exit.</p></td>\n<td width=\"29%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-V</b>, <b>--version</b></p>\n\n<p style=\"margin-left:22%;\">Output the version number of\n<b>grep</b> and exit.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Pattern\nSyntax <br>\n-E</b>, <b>--extended-regexp</b></p>\n\n<p style=\"margin-left:22%;\">Interpret <i>PATTERNS</i> as\nextended regular expressions (EREs, see below).</p>\n\n<p style=\"margin-left:11%;\"><b>-F</b>,\n<b>--fixed-strings</b></p>\n\n<p style=\"margin-left:22%;\">Interpret <i>PATTERNS</i> as\nfixed strings, not regular expressions.</p>\n\n<p style=\"margin-left:11%;\"><b>-G</b>,\n<b>--basic-regexp</b></p>\n\n<p style=\"margin-left:22%;\">Interpret <i>PATTERNS</i> as\nbasic regular expressions (BREs, see below). This is the\ndefault.</p>\n\n<p style=\"margin-left:11%;\"><b>-P</b>,\n<b>--perl-regexp</b></p>\n\n<p style=\"margin-left:22%;\">Interpret I&lt;PATTERNS&gt; as\nPerl-compatible regular expressions (PCREs). This option is\nexperimental when combined with the <b>-z</b>\n(<b>--null-data</b>) option, and <b>grep -P</b> may warn of\nunimplemented features.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Matching\nControl <br>\n-e</b> <i>PATTERNS</i>, <b>--regexp=</b><i>PATTERNS</i></p>\n\n<p style=\"margin-left:22%;\">Use <i>PATTERNS</i> as the\npatterns. If this option is used multiple times or is\ncombined with the <b>-f</b> (<b>--file</b>) option, search\nfor all patterns given. This option can be used to protect a\npattern beginning with &ldquo;-&rdquo;.</p>\n\n<p style=\"margin-left:11%;\"><b>-f</b> <i>FILE</i>,\n<b>--file=</b><i>FILE</i></p>\n\n<p style=\"margin-left:22%;\">Obtain patterns from\n<i>FILE</i>, one per line. If this option is used multiple\ntimes or is combined with the <b>-e</b> (<b>--regexp</b>)\noption, search for all patterns given. The empty file\ncontains zero patterns, and therefore matches nothing.</p>\n\n<p style=\"margin-left:11%;\"><b>-i</b>,\n<b>--ignore-case</b></p>\n\n<p style=\"margin-left:22%;\">Ignore case distinctions in\npatterns and input data, so that characters that differ only\nin case match each other.</p>\n\n<p style=\"margin-left:11%;\"><b>--no-ignore-case</b></p>\n\n<p style=\"margin-left:22%;\">Do not ignore case distinctions\nin patterns and input data. This is the default. This option\nis useful for passing to shell scripts that already use\n<b>-i</b>, to cancel its effects because the two options\noverride each other.</p>\n\n<p style=\"margin-left:11%;\"><b>-v</b>,\n<b>--invert-match</b></p>\n\n<p style=\"margin-left:22%;\">Invert the sense of matching,\nto select non-matching lines.</p>\n\n<p style=\"margin-left:11%;\"><b>-w</b>,\n<b>--word-regexp</b></p>\n\n<p style=\"margin-left:22%;\">Select only those lines\ncontaining matches that form whole words. The test is that\nthe matching substring must either be at the beginning of\nthe line, or preceded by a non-word constituent character.\nSimilarly, it must be either at the end of the line or\nfollowed by a non-word constituent character.\nWord-constituent characters are letters, digits, and the\nunderscore. This option has no effect if <b>-x</b> is also\nspecified.</p>\n\n<p style=\"margin-left:11%;\"><b>-x</b>,\n<b>--line-regexp</b></p>\n\n<p style=\"margin-left:22%;\">Select only those matches that\nexactly match the whole line. For a regular expression\npattern, this is like parenthesizing the pattern and then\nsurrounding it with <b>^</b> and <b>$</b>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-y</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"36%\">\n\n\n<p>Obsolete synonym for <b>-i</b>.</p></td>\n<td width=\"42%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>General\nOutput Control <br>\n-c</b>, <b>--count</b></p>\n\n<p style=\"margin-left:22%;\">Suppress normal output; instead\nprint a count of matching lines for each input file. With\nthe <b>-v</b>, <b>--invert-match</b> option (see below),\ncount non-matching lines.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--color</b>[<b>=</b><i>WHEN</i>],\n<b>--colour</b>[<b>=</b><i>WHEN</i>]</p>\n\n<p style=\"margin-left:22%;\">Surround the matched\n(non-empty) strings, matching lines, context lines, file\nnames, line numbers, byte offsets, and separators (for\nfields and groups of context lines) with escape sequences to\ndisplay them in color on the terminal. The colors are\ndefined by the environment variable <b>GREP_COLORS</b>. The\ndeprecated environment variable <b>GREP_COLOR</b> is still\nsupported, but its setting does not have priority.\n<i>WHEN</i> is <b>never</b>, <b>always</b>, or\n<b>auto</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>-L</b>,\n<b>--files-without-match</b></p>\n\n<p style=\"margin-left:22%;\">Suppress normal output; instead\nprint the name of each input file from which no output would\nnormally have been printed.</p>\n\n<p style=\"margin-left:11%;\"><b>-l</b>,\n<b>--files-with-matches</b></p>\n\n<p style=\"margin-left:22%;\">Suppress normal output; instead\nprint the name of each input file from which output would\nnormally have been printed. Scanning each input file stops\nupon first match.</p>\n\n<p style=\"margin-left:11%;\"><b>-m</b> <i>NUM</i>,\n<b>--max-count=</b><i>NUM</i></p>\n\n<p style=\"margin-left:22%;\">Stop reading a file after\n<i>NUM</i> matching lines. If the input is standard input\nfrom a regular file, and <i>NUM</i> matching lines are\noutput, <b>grep</b> ensures that the standard input is\npositioned to just after the last matching line before\nexiting, regardless of the presence of trailing context\nlines. This enables a calling process to resume a search.\nWhen <b>grep</b> stops after <i>NUM</i> matching lines, it\noutputs any trailing context lines. When the <b>-c</b> or\n<b>--count</b> option is also used, <b>grep</b> does not\noutput a count greater than <i>NUM</i>. When the <b>-v</b>\nor <b>--invert-match</b> option is also used, <b>grep</b>\nstops after outputting <i>NUM</i> non-matching lines.</p>\n\n<p style=\"margin-left:11%;\"><b>-o</b>,\n<b>--only-matching</b></p>\n\n<p style=\"margin-left:22%;\">Print only the matched\n(non-empty) parts of a matching line, with each such part on\na separate output line.</p>\n\n<p style=\"margin-left:11%;\"><b>-q</b>, <b>--quiet</b>,\n<b>--silent</b></p>\n\n<p style=\"margin-left:22%;\">Quiet; do not write anything to\nstandard output. Exit immediately with zero status if any\nmatch is found, even if an error was detected. Also see the\n<b>-s</b> or <b>--no-messages</b> option.</p>\n\n<p style=\"margin-left:11%;\"><b>-s</b>,\n<b>--no-messages</b></p>\n\n<p style=\"margin-left:22%;\">Suppress error messages about\nnonexistent or unreadable files.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Output Line\nPrefix Control <br>\n-b</b>, <b>--byte-offset</b></p>\n\n<p style=\"margin-left:22%;\">Print the 0-based byte offset\nwithin the input file before each line of output. If\n<b>-o</b> (<b>--only-matching</b>) is specified, print the\noffset of the matching part itself.</p>\n\n<p style=\"margin-left:11%;\"><b>-H</b>,\n<b>--with-filename</b></p>\n\n<p style=\"margin-left:22%;\">Print the file name for each\nmatch. This is the default when there is more than one file\nto search. This is a GNU extension.</p>\n\n<p style=\"margin-left:11%;\"><b>-h</b>,\n<b>--no-filename</b></p>\n\n<p style=\"margin-left:22%;\">Suppress the prefixing of file\nnames on output. This is the default when there is only one\nfile (or only standard input) to search.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--label=</b><i>LABEL</i></p>\n\n<p style=\"margin-left:22%;\">Display input actually coming\nfrom standard input as input coming from file <i>LABEL</i>.\nThis can be useful for commands that transform a\nfile&rsquo;s contents before searching, e.g., <b>gzip -cd\nfoo.gz | grep --label=foo -H &rsquo;some pattern&rsquo;</b>.\nSee also the <b>-H</b> option.</p>\n\n<p style=\"margin-left:11%;\"><b>-n</b>,\n<b>--line-number</b></p>\n\n<p style=\"margin-left:22%;\">Prefix each line of output with\nthe 1-based line number within its input file.</p>\n\n<p style=\"margin-left:11%;\"><b>-T</b>,\n<b>--initial-tab</b></p>\n\n<p style=\"margin-left:22%;\">Make sure that the first\ncharacter of actual line content lies on a tab stop, so that\nthe alignment of tabs looks normal. This is useful with\noptions that prefix their output to the actual content:\n<b>-H</b>,<b>-n</b>, and <b>-b</b>. In order to improve the\nprobability that lines from a single file will all start at\nthe same column, this also causes the line number and byte\noffset (if present) to be printed in a minimum size field\nwidth.</p>\n\n<p style=\"margin-left:11%;\"><b>-Z</b>, <b>--null</b></p>\n\n<p style=\"margin-left:22%;\">Output a zero byte (the ASCII\n<b>NUL</b> character) instead of the character that normally\nfollows a file name. For example, <b>grep -lZ</b> outputs a\nzero byte after each file name instead of the usual newline.\nThis option makes the output unambiguous, even in the\npresence of file names containing unusual characters like\nnewlines. This option can be used with commands like <b>find\n-print0</b>, <b>perl -0</b>, <b>sort -z</b>, and <b>xargs\n-0</b> to process arbitrary file names, even those that\ncontain newline characters.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Context Line\nControl <br>\n-A</b> <i>NUM</i>, <b>--after-context=</b><i>NUM</i></p>\n\n<p style=\"margin-left:22%;\">Print <i>NUM</i> lines of\ntrailing context after matching lines. Places a line\ncontaining a group separator (<b>--</b>) between contiguous\ngroups of matches. With the <b>-o</b> or\n<b>--only-matching</b> option, this has no effect and a\nwarning is given.</p>\n\n<p style=\"margin-left:11%;\"><b>-B</b> <i>NUM</i>,\n<b>--before-context=</b><i>NUM</i></p>\n\n<p style=\"margin-left:22%;\">Print <i>NUM</i> lines of\nleading context before matching lines. Places a line\ncontaining a group separator (<b>--</b>) between contiguous\ngroups of matches. With the <b>-o</b> or\n<b>--only-matching</b> option, this has no effect and a\nwarning is given.</p>\n\n<p style=\"margin-left:11%;\"><b>-C</b> <i>NUM</i>,\n<b>-</b><i>NUM</i>, <b>--context=</b><i>NUM</i></p>\n\n<p style=\"margin-left:22%;\">Print <i>NUM</i> lines of\noutput context. Places a line containing a group separator\n(<b>--</b>) between contiguous groups of matches. With the\n<b>-o</b> or <b>--only-matching</b> option, this has no\neffect and a warning is given.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--group-separator=</b><i>SEP</i></p>\n\n<p style=\"margin-left:22%;\">When <b>-A</b>, <b>-B</b>, or\n<b>-C</b> are in use, print <i>SEP</i> instead of <b>--</b>\nbetween groups of lines.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--no-group-separator</b></p>\n\n<p style=\"margin-left:22%;\">When <b>-A</b>, <b>-B</b>, or\n<b>-C</b> are in use, do not print a separator between\ngroups of lines.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>File and\nDirectory Selection <br>\n-a</b>, <b>--text</b></p>\n\n<p style=\"margin-left:22%;\">Process a binary file as if it\nwere text; this is equivalent to the\n<b>--binary-files=text</b> option.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--binary-files=</b><i>TYPE</i></p>\n\n<p style=\"margin-left:22%;\">If a file&rsquo;s data or\nmetadata indicate that the file contains binary data, assume\nthat the file is of type <i>TYPE</i>. Non-text bytes\nindicate binary data; these are either output bytes that are\nimproperly encoded for the current locale, or null input\nbytes when the <b>-z</b> option is not given.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">By default,\n<i>TYPE</i> is <b>binary</b>, and <b>grep</b> suppresses\noutput after null input binary data is discovered, and\nsuppresses output lines that contain improperly encoded\ndata. When some output is suppressed, <b>grep</b> follows\nany output with a one-line message saying that a binary file\nmatches.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">If <i>TYPE</i>\nis <b>without-match</b>, when <b>grep</b> discovers null\ninput binary data it assumes that the rest of the file does\nnot match; this is equivalent to the <b>-I</b> option.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">If <i>TYPE</i>\nis <b>text</b>, <b>grep</b> processes a binary file as if it\nwere text; this is equivalent to the <b>-a</b> option.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">When\n<i>type</i> is <b>binary</b>, <b>grep</b> may treat non-text\nbytes as line terminators even without the <b>-z</b> option.\nThis means choosing <b>binary</b> versus <b>text</b> can\naffect whether a pattern matches a file. For example, when\n<i>type</i> is <b>binary</b> the pattern <b>q$ might</b>\nmatch <b>q</b> immediately followed by a null byte, even\nthough this is not matched when <i>type</i> is <b>text</b>.\nConversely, when <i>type</i> is <b>binary</b> the pattern\n<b>.</b> (period) might not match a null byte.</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><i>Warning:</i>\nThe <b>-a</b> option might output binary garbage, which can\nhave nasty side effects if the output is a terminal and if\nthe terminal driver interprets some of it as commands. On\nthe other hand, when reading files whose text encodings are\nunknown, it can be helpful to use <b>-a</b> or to set\n<b>LC_ALL=&rsquo;C&rsquo;</b> in the environment, in order\nto find more matches even if the matches are unsafe for\ndirect display.</p>\n\n<p style=\"margin-left:11%;\"><b>-D</b> <i>ACTION</i>,\n<b>--devices=</b><i>ACTION</i></p>\n\n<p style=\"margin-left:22%;\">If an input file is a device,\nFIFO or socket, use <i>ACTION</i> to process it. By default,\n<i>ACTION</i> is <b>read</b>, which means that devices are\nread just as if they were ordinary files. If <i>ACTION</i>\nis <b>skip</b>, devices are silently skipped.</p>\n\n<p style=\"margin-left:11%;\"><b>-d</b> <i>ACTION</i>,\n<b>--directories=</b><i>ACTION</i></p>\n\n<p style=\"margin-left:22%;\">If an input file is a\ndirectory, use <i>ACTION</i> to process it. By default,\n<i>ACTION</i> is <b>read</b>, i.e., read directories just as\nif they were ordinary files. If <i>ACTION</i> is\n<b>skip</b>, silently skip directories. If <i>ACTION</i> is\n<b>recurse</b>, read all files under each directory,\nrecursively, following symbolic links only if they are on\nthe command line. This is equivalent to the <b>-r</b>\noption.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--exclude=</b><i>GLOB</i></p>\n\n<p style=\"margin-left:22%;\">Skip any command-line file with\na name suffix that matches the pattern <i>GLOB</i>, using\nwildcard matching; a name suffix is either the whole name,\nor a trailing part that starts with a non-slash character\nimmediately after a slash (<b>/</b>) in the name. When\nsearching recursively, skip any subfile whose base name\nmatches <i>GLOB</i>; the base name is the part after the\nlast slash. A pattern can use <b>*</b>, <b>?</b>, and\n<b>[</b>...<b>]</b> as wildcards, and <b>\\</b> to quote a\nwildcard or backslash character literally.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--exclude-from=</b><i>FILE</i></p>\n\n<p style=\"margin-left:22%;\">Skip files whose base name\nmatches any of the file-name globs read from <i>FILE</i>\n(using wildcard matching as described under\n<b>--exclude</b>).</p>\n\n\n<p style=\"margin-left:11%;\"><b>--exclude-dir=</b><i>GLOB</i></p>\n\n<p style=\"margin-left:22%;\">Skip any command-line directory\nwith a name suffix that matches the pattern <i>GLOB</i>.\nWhen searching recursively, skip any subdirectory whose base\nname matches <i>GLOB</i>. Ignore any redundant trailing\nslashes in <i>GLOB</i>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-I</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>Process a binary file as if it did not contain matching\ndata; this is equivalent to the\n<b>--binary-files=without-match</b> option.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>--include=</b><i>GLOB</i></p>\n\n<p style=\"margin-left:22%;\">Search only files whose base\nname matches <i>GLOB</i> (using wildcard matching as\ndescribed under <b>--exclude</b>). If contradictory\n<b>--include</b> and <b>--exclude</b> options are given, the\nlast matching one wins. If no <b>--include</b> or\n<b>--exclude</b> options match, a file is included unless\nthe first such option is <b>--include</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>-r</b>,\n<b>--recursive</b></p>\n\n<p style=\"margin-left:22%;\">Read all files under each\ndirectory, recursively, following symbolic links only if\nthey are on the command line. Note that if no file operand\nis given, B&lt;grep&gt; searches the working directory. This\nis equivalent to the <b>-d recurse</b> option.</p>\n\n<p style=\"margin-left:11%;\"><b>-R</b>,\n<b>--dereference-recursive</b></p>\n\n<p style=\"margin-left:22%;\">Read all files under each\ndirectory, recursively. Follow all symbolic links, unlike\n<b>-r</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Other\nOptions <br>\n--line-buffered</b></p>\n\n<p style=\"margin-left:22%;\">Use line buffering on output.\nThis can cause a performance penalty.</p>\n\n<p style=\"margin-left:11%;\"><b>-U</b>, <b>--binary</b></p>\n\n<p style=\"margin-left:22%;\">Treat the file(s) as binary. By\ndefault, under MS-DOS and MS-Windows, <b>grep</b> guesses\nwhether a file is text or binary as described for the\n<b>--binary-files</b> option. If <b>grep</b> decides the\nfile is a text file, it strips the CR characters from the\noriginal file contents (to make regular expressions with\n<b>^</b> and <b>$</b> work correctly). Specifying <b>-U</b>\noverrules this guesswork, causing all files to be read and\npassed to the matching mechanism verbatim; if the file is a\ntext file with CR/LF pairs at the end of each line, this\nwill cause some regular expressions to fail. This option has\nno effect on platforms other than MS-DOS and MS-Windows.</p>\n\n<p style=\"margin-left:11%;\"><b>-z</b>,\n<b>--null-data</b></p>\n\n<p style=\"margin-left:22%;\">Treat input and output data as\nsequences of lines, each terminated by a zero byte (the\nASCII NUL character) instead of a newline. Like the\n<b>-Z</b> or <b>--null</b> option, this option can be used\nwith commands like <b>sort -z</b> to process arbitrary file\nnames.</p>\n\n<h2>REGULAR EXPRESSIONS\n<a name=\"REGULAR EXPRESSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">A regular\nexpression is a pattern that describes a set of strings.\nRegular expressions are constructed analogously to\narithmetic expressions, by using various operators to\ncombine smaller expressions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>grep</b>\nunderstands three different versions of regular expression\nsyntax: &ldquo;basic&rdquo; (BRE), &ldquo;extended&rdquo;\n(ERE) and &ldquo;perl&rdquo; (PCRE). In GNU <b>grep</b>\nthere is no difference in available functionality between\nbasic and extended syntaxes. In other implementations, basic\nregular expressions are less powerful. The following\ndescription applies to extended regular expressions;\ndifferences for basic regular expressions are summarized\nafterwards. Perl-compatible regular expressions give\nadditional functionality, and are documented in\nB&lt;pcresyntax&gt;(3) and B&lt;pcrepattern&gt;(3), but work\nonly if PCRE support is enabled.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The fundamental\nbuilding blocks are the regular expressions that match a\nsingle character. Most characters, including all letters and\ndigits, are regular expressions that match themselves. Any\nmeta-character with special meaning may be quoted by\npreceding it with a backslash.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The period\n<b>.</b> matches any single character. It is unspecified\nwhether it matches an encoding error.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Character\nClasses and Bracket Expressions</b> <br>\nA <i>bracket expression</i> is a list of characters enclosed\nby <b>[</b> and <b>]</b>. It matches any single character in\nthat list. If the first character of the list is the caret\n<b>^</b> then it matches any character <i>not</i> in the\nlist; it is unspecified whether it matches an encoding\nerror. For example, the regular expression\n<b>[0123456789]</b> matches any single digit.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Within a\nbracket expression, a <i>range expression</i> consists of\ntwo characters separated by a hyphen. It matches any single\ncharacter that sorts between the two characters, inclusive,\nusing the locale&rsquo;s collating sequence and character\nset. For example, in the default C locale, <b>[a-d]</b> is\nequivalent to <b>[abcd]</b>. Many locales sort characters in\ndictionary order, and in these locales <b>[a-d]</b> is\ntypically not equivalent to <b>[abcd]</b>; it might be\nequivalent to <b>[aBbCcDd]</b>, for example. To obtain the\ntraditional interpretation of bracket expressions, you can\nuse the C locale by setting the <b>LC_ALL</b> environment\nvariable to the value <b>C</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Finally,\ncertain named classes of characters are predefined within\nbracket expressions, as follows. Their names are self\nexplanatory, and they are <b>[:alnum:]</b>,\n<b>[:alpha:]</b>, <b>[:blank:]</b>, <b>[:cntrl:]</b>,\n<b>[:digit:]</b>, <b>[:graph:]</b>, <b>[:lower:]</b>,\n<b>[:print:]</b>, <b>[:punct:]</b>, <b>[:space:]</b>,\n<b>[:upper:]</b>, and <b>[:xdigit:]</b>. For example,\n<b>[[:alnum:]]</b> means the character class of numbers and\nletters in the current locale. In the C locale and ASCII\ncharacter set encoding, this is the same as\n<b>[0-9A-Za-z]</b>. (Note that the brackets in these class\nnames are part of the symbolic names, and must be included\nin addition to the brackets delimiting the bracket\nexpression.) Most meta-characters lose their special meaning\ninside bracket expressions. To include a literal <b>]</b>\nplace it first in the list. Similarly, to include a literal\n<b>^</b> place it anywhere but first. Finally, to include a\nliteral <b>-</b> place it last.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Anchoring</b>\n<br>\nThe caret <b>^</b> and the dollar sign <b>$</b> are\nmeta-characters that respectively match the empty string at\nthe beginning and end of a line.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The\nBackslash Character and Special Expressions</b> <br>\nThe symbols <b>\\&lt;</b> and <b>\\&gt;</b> respectively match\nthe empty string at the beginning and end of a word. The\nsymbol <b>\\b</b> matches the empty string at the edge of a\nword, and <b>\\B</b> matches the empty string provided\nit&rsquo;s <i>not</i> at the edge of a word. The symbol\n<b>\\w</b> is a synonym for <b>[_[:alnum:]]</b> and <b>\\W</b>\nis a synonym for <b>[^_[:alnum:]]</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Repetition</b>\n<br>\nA regular expression may be followed by one of several\nrepetition operators:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>?</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>The preceding item is optional and matched at most\nonce.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>*</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>The preceding item will be matched zero or more\ntimes.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>+</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>The preceding item will be matched one or more\ntimes.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>{</b><i>n</i><b>}</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>The preceding item is matched exactly <i>n</i>\ntimes.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>{</b><i>n</i><b>,}</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>The preceding item is matched <i>n</i> or more\ntimes.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>{,</b><i>m</i><b>}</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>The preceding item is matched at most <i>m</i> times.\nThis is a GNU extension.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>{</b><i>n</i><b>,</b><i>m</i><b>}</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>The preceding item is matched at least <i>n</i> times,\nbut not more than <i>m</i> times.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Concatenation</b>\n<br>\nTwo regular expressions may be concatenated; the resulting\nregular expression matches any string formed by\nconcatenating two substrings that respectively match the\nconcatenated expressions.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Alternation</b>\n<br>\nTwo regular expressions may be joined by the infix operator\n<b>|</b>; the resulting regular expression matches any\nstring matching either alternate expression.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Precedence</b>\n<br>\nRepetition takes precedence over concatenation, which in\nturn takes precedence over alternation. A whole expression\nmay be enclosed in parentheses to override these precedence\nrules and form a subexpression.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Back-references\nand Subexpressions</b> <br>\nThe back-reference <b>\\</b><i>n</i>, where <i>n</i> is a\nsingle digit, matches the substring previously matched by\nthe <i>n</i>th parenthesized subexpression of the regular\nexpression.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Basic vs\nExtended Regular Expressions</b> <br>\nIn basic regular expressions the meta-characters <b>?</b>,\n<b>+</b>, <b>{</b>, <b>|</b>, <b>(</b>, and <b>)</b> lose\ntheir special meaning; instead use the backslashed versions\n<b>\\?</b>, <b>\\+</b>, <b>\\{</b>, <b>\\|</b>, <b>\\(</b>, and\n<b>\\)</b>.</p>\n\n<h2>EXIT STATUS\n<a name=\"EXIT STATUS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Normally the\nexit status is 0 if a line is selected, 1 if no lines were\nselected, and 2 if an error occurred. However, if the\n<b>-q</b> or <b>--quiet</b> or <b>--silent</b> is used and a\nline is selected, the exit status is 0 even if an error\noccurred.</p>\n\n<h2>ENVIRONMENT\n<a name=\"ENVIRONMENT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The behavior of\n<b>grep</b> is affected by the following environment\nvariables.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The locale for\ncategory <b>LC_</b><i>foo</i> is specified by examining the\nthree environment variables <b>LC_ALL</b>,\n<b>LC_</b><i>foo</i>, <b>LANG</b>, in that order. The first\nof these variables that is set specifies the locale. For\nexample, if <b>LC_ALL</b> is not set, but <b>LC_MESSAGES</b>\nis set to <b>pt_BR</b>, then the Brazilian Portuguese locale\nis used for the <b>LC_MESSAGES</b> category. The C locale is\nused if none of these environment variables are set, if the\nlocale catalog is not installed, or if <b>grep</b> was not\ncompiled with national language support (NLS). The shell\ncommand <b>locale -a</b> lists locales that are currently\navailable. <b><br>\nGREP_COLOR</b></p>\n\n<p style=\"margin-left:22%;\">This variable specifies the\ncolor used to highlight matched (non-empty) text. It is\ndeprecated in favor of <b>GREP_COLORS</b>, but still\nsupported. The <b>mt</b>, <b>ms</b>, and <b>mc</b>\ncapabilities of <b>GREP_COLORS</b> have priority over it. It\ncan only specify the color used to highlight the matching\nnon-empty text in any matching line (a selected line when\nthe <b>-v</b> command-line option is omitted, or a context\nline when <b>-v</b> is specified). The default is\n<b>01;31</b>, which means a bold red foreground text on the\nterminal&rsquo;s default background.</p>\n\n<p style=\"margin-left:11%;\"><b>GREP_COLORS</b></p>\n\n<p style=\"margin-left:22%;\">Specifies the colors and other\nattributes used to highlight various parts of the output.\nIts value is a colon-separated list of capabilities that\ndefaults to\n<b>ms=01;31:mc=01;31:sl=:cx=:fn=35:ln=32:bn=32:se=36</b>\nwith the <b>rv</b> and <b>ne</b> boolean capabilities\nomitted (i.e., false). Supported capabilities are as\nfollows.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p><b>sl=</b></p></td>\n<td width=\"6%\"></td>\n<td width=\"68%\">\n\n\n<p>SGR substring for whole selected lines (i.e., matching\nlines when the <b>-v</b> command-line option is omitted, or\nnon-matching lines when <b>-v</b> is specified). If however\nthe boolean <b>rv</b> capability and the <b>-v</b>\ncommand-line option are both specified, it applies to\ncontext matching lines instead. The default is empty (i.e.,\nthe terminal&rsquo;s default color pair).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p><b>cx=</b></p></td>\n<td width=\"6%\"></td>\n<td width=\"68%\">\n\n\n<p>SGR substring for whole context lines (i.e.,\nnon-matching lines when the <b>-v</b> command-line option is\nomitted, or matching lines when <b>-v</b> is specified). If\nhowever the boolean <b>rv</b> capability and the <b>-v</b>\ncommand-line option are both specified, it applies to\nselected non-matching lines instead. The default is empty\n(i.e., the terminal&rsquo;s default color pair).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p><b>rv</b></p></td>\n<td width=\"6%\"></td>\n<td width=\"68%\">\n\n\n<p>Boolean value that reverses (swaps) the meanings of the\n<b>sl=</b> and <b>cx=</b> capabilities when the <b>-v</b>\ncommand-line option is specified. The default is false\n(i.e., the capability is omitted).</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%;\"><b>mt=01;31</b></p>\n\n<p style=\"margin-left:32%;\">SGR substring for matching\nnon-empty text in any matching line (i.e., a selected line\nwhen the <b>-v</b> command-line option is omitted, or a\ncontext line when <b>-v</b> is specified). Setting this is\nequivalent to setting both <b>ms=</b> and <b>mc=</b> at once\nto the same value. The default is a bold red text foreground\nover the current line background.</p>\n\n<p style=\"margin-left:22%;\"><b>ms=01;31</b></p>\n\n<p style=\"margin-left:32%;\">SGR substring for matching\nnon-empty text in a selected line. (This is only used when\nthe <b>-v</b> command-line option is omitted.) The effect of\nthe <b>sl=</b> (or <b>cx=</b> if <b>rv</b>) capability\nremains active when this kicks in. The default is a bold red\ntext foreground over the current line background.</p>\n\n<p style=\"margin-left:22%;\"><b>mc=01;31</b></p>\n\n<p style=\"margin-left:32%;\">SGR substring for matching\nnon-empty text in a context line. (This is only used when\nthe <b>-v</b> command-line option is specified.) The effect\nof the <b>cx=</b> (or <b>sl=</b> if <b>rv</b>) capability\nremains active when this kicks in. The default is a bold red\ntext foreground over the current line background.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n\n\n<p><b>fn=35</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>SGR substring for file names prefixing any content line.\nThe default is a magenta text foreground over the\nterminal&rsquo;s default background.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n\n\n<p><b>ln=32</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>SGR substring for line numbers prefixing any content\nline. The default is a green text foreground over the\nterminal&rsquo;s default background.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n\n\n<p><b>bn=32</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>SGR substring for byte offsets prefixing any content\nline. The default is a green text foreground over the\nterminal&rsquo;s default background.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n\n\n<p><b>se=36</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>SGR substring for separators that are inserted between\nselected line fields (<b>:</b>), between context line\nfields, (<b>-</b>), and between groups of adjacent lines\nwhen nonzero context is specified (<b>--</b>). The default\nis a cyan text foreground over the terminal&rsquo;s default\nbackground.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n\n\n<p><b>ne</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>Boolean value that prevents clearing to the end of line\nusing Erase in Line (EL) to Right (<b>\\33[K</b>) each time a\ncolorized item ends. This is needed on terminals on which EL\nis not supported. It is otherwise useful on terminals for\nwhich the <b>back_color_erase</b> (<b>bce</b>) boolean\nterminfo capability does not apply, when the chosen\nhighlight colors do not affect the background, or when EL is\ntoo slow or causes too much flicker. The default is false\n(i.e., the capability is omitted).</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Note that\nboolean capabilities have no <b>=</b>... part. They are\nomitted (i.e., false) by default and become true when\nspecified.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">See the Select\nGraphic Rendition (SGR) section in the documentation of the\ntext terminal that is used for permitted values and their\nmeaning as character attributes. These substring values are\nintegers in decimal representation and can be concatenated\nwith semicolons. <b>grep</b> takes care of assembling the\nresult into a complete SGR sequence\n(<b>\\33[</b>...<b>m</b>). Common values to concatenate\ninclude <b>1</b> for bold, <b>4</b> for underline, <b>5</b>\nfor blink, <b>7</b> for inverse, <b>39</b> for default\nforeground color, <b>30</b> to <b>37</b> for foreground\ncolors, <b>90</b> to <b>97</b> for 16-color mode foreground\ncolors, <b>38;5;0</b> to <b>38;5;255</b> for 88-color and\n256-color modes foreground colors, <b>49</b> for default\nbackground color, <b>40</b> to <b>47</b> for background\ncolors, <b>100</b> to <b>107</b> for 16-color mode\nbackground colors, and <b>48;5;0</b> to <b>48;5;255</b> for\n88-color and 256-color modes background colors.</p>\n\n<p style=\"margin-left:11%;\"><b>LC_ALL</b>,\n<b>LC_COLLATE</b>, <b>LANG</b></p>\n\n<p style=\"margin-left:22%;\">These variables specify the\nlocale for the <b>LC_COLLATE</b> category, which determines\nthe collating sequence used to interpret range expressions\nlike <b>[a-z]</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>LC_ALL</b>, <b>LC_CTYPE</b>,\n<b>LANG</b></p>\n\n<p style=\"margin-left:22%;\">These variables specify the\nlocale for the <b>LC_CTYPE</b> category, which determines\nthe type of characters, e.g., which characters are\nwhitespace. This category also determines the character\nencoding, that is, whether text is encoded in UTF-8, ASCII,\nor some other encoding. In the C or POSIX locale, all\ncharacters are encoded as a single byte and every byte is a\nvalid character.</p>\n\n<p style=\"margin-left:11%;\"><b>LC_ALL</b>,\n<b>LC_MESSAGES</b>, <b>LANG</b></p>\n\n<p style=\"margin-left:22%;\">These variables specify the\nlocale for the <b>LC_MESSAGES</b> category, which determines\nthe language that <b>grep</b> uses for messages. The default\nC locale uses American English messages.</p>\n\n<p style=\"margin-left:11%;\"><b>POSIXLY_CORRECT</b></p>\n\n<p style=\"margin-left:22%;\">If set, <b>grep</b> behaves as\nPOSIX requires; otherwise, <b>grep</b> behaves more like\nother GNU programs. POSIX requires that options that follow\nfile names must be treated as file names; by default, such\noptions are permuted to the front of the operand list and\nare treated as options. Also, POSIX requires that\nunrecognized options be diagnosed as &ldquo;illegal&rdquo;,\nbut since they are not really against the law the default is\nto diagnose them as &ldquo;invalid&rdquo;.\n<b>POSIXLY_CORRECT</b> also disables\n<b>_</b><i>N</i><b>_GNU_nonoption_argv_flags_</b>, described\nbelow.</p>\n\n\n<p style=\"margin-left:11%;\"><b>_</b><i>N</i><b>_GNU_nonoption_argv_flags_</b></p>\n\n<p style=\"margin-left:22%;\">(Here <i>N</i> is\n<b>grep</b>&rsquo;s numeric process ID.) If the <i>i</i>th\ncharacter of this environment variable&rsquo;s value is\n<b>1</b>, do not consider the <i>i</i>th operand of\n<b>grep</b> to be an option, even if it appears to be one. A\nshell can put this variable in the environment for each\ncommand it runs, specifying which operands are the results\nof file name wildcard expansion and therefore should not be\ntreated as options. This behavior is available only with the\nGNU C library, and only when <b>POSIXLY_CORRECT</b> is not\nset.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This man page\nis maintained only fitfully; the full documentation is often\nmore up-to-date.</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright\n1998-2000, 2002, 2005-2021 Free Software Foundation,\nInc.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This is free\nsoftware; see the source for copying conditions. There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Reporting\nBugs</b> <br>\nEmail bug reports to <a href=\"mailto:bug-grep@gnu.org\">the\nbug-reporting address</a>. An\n<a href=\"https://lists.gnu.org/mailman/listinfo/bug-grep\">email\narchive</a> and a\n<a href=\"https://debbugs.gnu.org/cgi/pkgreport.cgi?package=grep\">bug\ntracker</a> are available.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Known\nBugs</b> <br>\nLarge repetition counts in the\n<b>{</b><i>n</i><b>,</b><i>m</i><b>}</b> construct may cause\n<b>grep</b> to use lots of memory. In addition, certain\nother obscure regular expressions require exponential time\nand space, and may cause <b>grep</b> to run out of\nmemory.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Back-references\nare very slow, and may require exponential time.</p>\n\n<h2>EXAMPLE\n<a name=\"EXAMPLE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nexample outputs the location and contents of any line\ncontaining &ldquo;f&rdquo; and ending in &ldquo;.c&rdquo;,\nwithin all files in the current directory whose names\ncontain &ldquo;g&rdquo; and end in &ldquo;.h&rdquo;. The\n<b>-n</b> option outputs line numbers, the <b>--</b>\nargument treats expansions of &ldquo;*g*.h&rdquo; starting\nwith &ldquo;-&rdquo; as file names not options, and the\nempty file /dev/null causes file names to be output even if\nonly one file name happens to be of the form\n&ldquo;*g*.h&rdquo;.</p>\n\n<p style=\"margin-left:14%; margin-top: 1em\">$ <b>grep</b>\n-n -- &rsquo;f.*\\.c$&rsquo; *g*.h /dev/null <br>\nargmatch.h:1:/* definitions and prototypes for\nargmatch.c</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The only line\nthat matches is line 1 of argmatch.h. Note that the regular\nexpression syntax used in the pattern differs from the\nglobbing syntax that the shell uses to match file names.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Regular\nManual Pages <br>\nawk</b>(1), <a href=\"https://man.page/1/cmp\">cmp(1)</a>, <a href=\"https://man.page/1/diff\">diff(1)</a>, <a href=\"https://man.page/1/find\">find(1)</a>,\n<a href=\"https://man.page/1/perl\">perl(1)</a>, <a href=\"https://man.page/1/sed\">sed(1)</a>, <a href=\"https://man.page/1/sort\">sort(1)</a>,\n<a href=\"https://man.page/1/xargs\">xargs(1)</a>, <a href=\"https://man.page/2/read\">read(2)</a>, <a href=\"https://man.page/3/pcre\">pcre(3)</a>,\n<a href=\"https://man.page/3/pcresyntax\">pcresyntax(3)</a>, <a href=\"https://man.page/3/pcrepattern\">pcrepattern(3)</a>,\n<a href=\"https://man.page/5/terminfo\">terminfo(5)</a>, <a href=\"https://man.page/7/glob\">glob(7)</a>, <a href=\"https://man.page/7/regex\">regex(7)</a></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Full\nDocumentation</b> <br>\nA\n<a href=\"https://www.gnu.org/software/grep/manual/\">complete\nmanual</a> is available. If the <b>info</b> and <b>grep</b>\nprograms are properly installed at your site, the\ncommand</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>info\ngrep</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">should give you\naccess to the complete manual.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#REGULAR EXPRESSIONS\">REGULAR EXPRESSIONS</a>","<a href=\"#EXIT STATUS\">EXIT STATUS</a>","<a href=\"#ENVIRONMENT\">ENVIRONMENT</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#EXAMPLE\">EXAMPLE</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"]}