{"name":"boltctl","description":"boltctl - control the thunderbolt device manager","body":"\n\n<h1 align=\"center\">BOLTCTL</h1>\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">boltctl -\ncontrol the thunderbolt device manager</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>boltctl</b>\n<i>authorize DEVICE</i> <b><br>\nboltctl</b> <i>config</i> <b><br>\nboltctl</b> <i>domains</i> <b><br>\nboltctl</b> <i>enroll DEVICE</i> <b><br>\nboltctl</b> <i>forget DEVICE</i> <b><br>\nboltctl</b> <i>info DEVICE</i> <b><br>\nboltctl</b> <i>list</i> <b><br>\nboltctl</b> <i>monitor</i> <b><br>\nboltctl</b> <i>power</i></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>boltctl</i>\nis the command line interface to interact with <i>boltd</i>,\nthe system daemon that manages Thunderbolt 3(TM) devices. It\ncan be used to query the state of devices as well as manage\nthem.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Devices can be\nglobally identified via their unique identifier (uuid). All\ncommands that take a <i>DEVICE</i> identifier expect this\nunique id.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If no command\nis given, it is equivalent to <i>boltctl list</i>.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--version</b></p>\n\n<p style=\"margin-left:17%;\">Print version information and\nexit.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-U | --uuid\n{</b><i>full</i> <b>|</b> <i>short</i> <b>|</b> <i>alias</i>\n<b>| N}</b></p>\n\n<p style=\"margin-left:17%;\">Control how UUIDs are printed.\nSince they are somewhat sensitive data it is not advisable\nto share them publicly in full length. Instead <i>short</i>\nor <i>alias</i> can and should be used when sharing the\noutput of <i>boltctl</i>.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><i>full</i></p>\n\n<p style=\"margin-left:23%;\">Print all UUIDs in full\nlength.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><i>short</i></p>\n\n<p style=\"margin-left:23%;\">Truncate all UUIDs so only the\nfirst 13 characters are printed.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><i>alias</i></p>\n\n<p style=\"margin-left:23%;\">All UUIDs are replaced by a\nrandom string that is derived from the UUID, therefore the\ndevices can be uniquely identified without revealing the\noriginal UUID.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">N</p>\n\n<p style=\"margin-left:23%;\">If a integer <i>N</i> is\nspecified, all UUIDs are truncated to only show up to\n<i>N</i>.</p>\n\n<h2>COMMANDS\n<a name=\"COMMANDS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>authorize\n[-F | --first-time]</b> <i>DEVICE</i> <br>\nAuthorize a currently unauthorized device identified via its\nunique id (uuid) <i>DEVICE</i>. If a key is stored in the\ndatabase it will be used, given the security level of the\ndomain supports secure device connection. Use <i>boltctl\nlist</i> to find out the uuid of a device.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-F |\n--first-time</b></p>\n\n<p style=\"margin-left:17%;\">Normally, when attempting to\nauthorize an already authorized device <b>boltctl</b> will\ndo nothing and return a successful status code. When using\nthis option, the attempt will fail and result in a negative\nexit code if the device is already authorized.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>config\n--describe [global|domain|device]</b> <br>\nList global, domain, or all (if nothing is specified)\nproperties. The format is 3 columns: permission, name,\ndescription. Permission indicates if the property is only\nreadable or can also be written.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>config</b>\n<i>KEY</i> [<i>VALUE</i>] <br>\nGet or set, if <i>VALUE</i> is specified, a global\nproperty.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>config</b>\n<i>&lt;domain|device&gt;.KEY TARGET</i> [<i>VALUE</i>] <br>\nGet or set, if <i>VALUE</i> is specified, a domain or device\nproperty, where <i>TARGET</i> is the unique id of the domain\nor the device.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>domains [-v\n| --verbose]</b> <br>\nList all currently active Thunderbolt domains. A Thunderbolt\ndomain represents the Thunderbolt controller hardware. There\nwill be one domain (and host device) for each Thunderbolt\ncontroller present in the system. The <i>security</i>\nproperty shows the security level of the controller. If\n<i>iommu</i> support is active (see the <b>boltd</b> man\npage) it will be indicated by a <i>+iommu</i> suffix for\n&quot;secure&quot; or &quot;user&quot; mode, or just plain\n<i>iommu</i> in case the security level is &quot;none&quot;\n(sl0). <i>bootacl</i> shows the used and total slots of the\nboot access control list (BootACL) and the content of all\nnon-empty entries. NB: if BootACL is unsupported it will\nshow 0 for both (0/0). The <i>online</i> property shows if\nthe thunderbolt controller is currently powered by the\nfirmware. <b>NB</b>: if the controller is currently offline\nthe BootACL list will reflect what <i>boltd</i> estimates\nthe list will look like once the controller is back online\nand local changes have been synchronized to the controller.\nThis might not be accurate if the list was modified in the\nmeantime, e.g. from a different installation or OS.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>enroll\n[--policy</b> <i>policy</i>] <i>DEVICE</i> <br>\nAuthorize and record the device with the unique id\n<i>DEVICE</i> in the database. If the domain supports secure\nconnection a new key will be generated and stored in the\ndatabase alongside the device name and vendor name. The key,\nif created, will be used in the future to securely authorize\nthe device.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--policy\n{</b><i>default</i> <b>|</b> <i>auto</i> <b>|</b>\n<i>manual</i><b>}</b></p>\n\n<p style=\"margin-left:17%;\">Specify the policy to be used\nfor the newly enrolled device.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><i>default</i></p>\n\n<p style=\"margin-left:23%;\">Use the global default policy\nof the daemon; this can be changed, but is normally also\n<i>auto</i>.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><i>auto</i></p>\n\n<p style=\"margin-left:23%;\">Automatically authorize this\ndevice whenever it is connected.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><i>manual</i></p>\n\n<p style=\"margin-left:23%;\">Do <b>not</b> automatically\nauthorize the device; instead require manual authorization\nvia <b>boltctl authorize</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>forget</b>\n<i>DEVICE</i> <br>\nRemove the information about the device with the unique id\n<i>DEVICE</i> from the database. This includes the key, if\none was previously generated. If you pass <i>--all</i>\ninstead of the <i>DEVICE</i> all devices are removed instead\nof just one.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>info</b>\n<i>DEVICE</i> <br>\nDisplay information about the device with the unique id\n<i>DEVICE</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>list [-a |\n--all]</b> <br>\nList and print information about all connected and stored\ndevices.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-a |\n--all</b></p>\n\n<p style=\"margin-left:17%;\">Normally, the only the device\ntype that will be shown is peripherals. Therefore the device\nthat represents the host itself will be omitted. Using this\noption will instead include all device types in the\nlist.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>monitor</b>\n<br>\nListen for and show changes in connected devices.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>power [-t |\n--timeout</b> <i>seconds</i>] [-q | --query] <br>\nPower up the Thunderbolt controller. If the Thunderbolt\ncontroller is not in &quot;native enumeration mode&quot; it\ncan be completely powered down by the host firmware/BIOS. On\nsupported systems there is an interface to &quot;force&quot;\npower the thunderbolt controller. If supported this command\nwill request the daemon to do so. The daemon will keep track\nof all client requests and will release the force power\noverride when the last request is released.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-t |\n--timeout</b> <i>seconds</i></p>\n\n<p style=\"margin-left:17%;\">Release the force power request\nafter the specified amount of <i>seconds</i> and exit.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-q |\n--query</b></p>\n\n<p style=\"margin-left:17%;\">Query the current force power\nstatus of the daemon.</p>\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Written by\nChristian Kellner &lt;ckellner@redhat.com&gt;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#COMMANDS\">COMMANDS</a>","<a href=\"#AUTHOR\">AUTHOR</a>"]}