{"name":"memusage","description":"memusage - profile memory usage of a program","body":"\n\n<h1 align=\"center\">MEMUSAGE</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">memusage -\nprofile memory usage of a program</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>memusage</b>\n[<i>option</i>]... <i>program</i>\n[<i>programoption</i>]...</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>memusage</b>\nis a bash script which profiles memory usage of the program,\n<i>program</i>. It preloads the <b>libmemusage.so</b>\nlibrary into the caller&rsquo;s environment (via the\n<b>LD_PRELOAD</b> environment variable; see\n<b>ld.so</b>(8)). The <b>libmemusage.so</b> library traces\nmemory allocation by intercepting calls to <a href=\"https://man.page/3/malloc\">malloc(3)</a>,\n<a href=\"https://man.page/3/calloc\">calloc(3)</a>, <a href=\"https://man.page/3/free\">free(3)</a>, and <a href=\"https://man.page/3/realloc\">realloc(3)</a>;\noptionally, calls to <a href=\"https://man.page/2/mmap\">mmap(2)</a>, <a href=\"https://man.page/2/mremap\">mremap(2)</a>, and\n<a href=\"https://man.page/2/munmap\">munmap(2)</a> can also be intercepted.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>memusage</b>\ncan output the collected data in textual form, or it can use\n<a href=\"https://man.page/1/memusagestat\">memusagestat(1)</a> (see the <b>-p</b> option, below) to\ncreate a PNG file containing graphical representation of the\ncollected data.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Memory usage\nsummary</b> <br>\nThe &quot;Memory usage summary&quot; line output by\n<b>memusage</b> contains three fields:</p>\n\n<p style=\"margin-left:17%;\"><b>heap total</b></p>\n\n<p style=\"margin-left:28%;\">Sum of <i>size</i> arguments of\nall <a href=\"https://man.page/3/malloc\">malloc(3)</a> calls, products of arguments\n(<i>nmemb</i>*<i>size</i>) of all <a href=\"https://man.page/3/calloc\">calloc(3)</a> calls,\nand sum of <i>length</i> arguments of all <a href=\"https://man.page/2/mmap\">mmap(2)</a>\ncalls. In the case of <a href=\"https://man.page/3/realloc\">realloc(3)</a> and\n<a href=\"https://man.page/2/mremap\">mremap(2)</a>, if the new size of an allocation is larger\nthan the previous size, the sum of all such differences (new\nsize minus old size) is added.</p>\n\n<p style=\"margin-left:17%;\"><b>heap peak</b></p>\n\n<p style=\"margin-left:28%;\">Maximum of all <i>size</i>\narguments of <a href=\"https://man.page/3/malloc\">malloc(3)</a>, all products of\n<i>nmemb</i>*<i>size</i> of <a href=\"https://man.page/3/calloc\">calloc(3)</a>, all\n<i>size</i> arguments of <a href=\"https://man.page/3/realloc\">realloc(3)</a>, <i>length</i>\narguments of <a href=\"https://man.page/2/mmap\">mmap(2)</a>, and <i>new_size</i> arguments\nof <a href=\"https://man.page/2/mremap\">mremap(2)</a>.</p>\n\n<p style=\"margin-left:17%;\"><b>stack peak</b></p>\n\n<p style=\"margin-left:28%;\">Before the first call to any\nmonitored function, the stack pointer address (base stack\npointer) is saved. After each function call, the actual\nstack pointer address is read and the difference from the\nbase stack pointer computed. The maximum of these\ndifferences is then the stack peak.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Immediately\nfollowing this summary line, a table shows the number calls,\ntotal memory allocated or deallocated, and number of failed\ncalls for each intercepted function. For <a href=\"https://man.page/3/realloc\">realloc(3)</a>\nand <a href=\"https://man.page/2/mremap\">mremap(2)</a>, the additional field\n&quot;nomove&quot; shows reallocations that changed the\naddress of a block, and the additional &quot;dec&quot; field\nshows reallocations that decreased the size of the block.\nFor <a href=\"https://man.page/3/realloc\">realloc(3)</a>, the additional field &quot;free&quot;\nshows reallocations that caused a block to be freed (i.e.,\nthe reallocated size was 0).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n&quot;realloc/total memory&quot; of the table output by\n<b>memusage</b> does not reflect cases where\n<a href=\"https://man.page/3/realloc\">realloc(3)</a> is used to reallocate a block of memory to\nhave a smaller size than previously. This can cause sum of\nall &quot;total memory&quot; cells (excluding\n&quot;free&quot;) to be larger than the &quot;free/total\nmemory&quot; cell.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Histogram\nfor block sizes</b> <br>\nThe &quot;Histogram for block sizes&quot; provides a\nbreakdown of memory allocations into various bucket\nsizes.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-n&nbsp;</b><i>name</i>,&nbsp;<b>--progname=</b><i>name</i></p>\n\n<p style=\"margin-left:22%;\">Name of the program file to\nprofile.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-p&nbsp;</b><i>file</i>,&nbsp;<b>--png=</b><i>file</i></p>\n\n<p style=\"margin-left:22%;\">Generate PNG graphic and store\nit in <i>file</i>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-d&nbsp;</b><i>file</i>,&nbsp;<b>--data=</b><i>file</i></p>\n\n<p style=\"margin-left:22%;\">Generate binary data file and\nstore it in <i>file</i>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-u</b>,&nbsp;<b>--unbuffered</b></p>\n\n<p style=\"margin-left:22%;\">Do not buffer output.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-b&nbsp;</b><i>size</i>,&nbsp;<b>--buffer=</b><i>size</i></p>\n\n<p style=\"margin-left:22%;\">Collect <i>size</i> entries\nbefore writing them out.</p>\n\n<p style=\"margin-left:11%;\"><b>--no-timer</b></p>\n\n<p style=\"margin-left:22%;\">Disable timer-based\n(<b>SIGPROF</b>) sampling of stack pointer value.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-m</b>,&nbsp;<b>--mmap</b></p>\n\n<p style=\"margin-left:22%;\">Also trace <a href=\"https://man.page/2/mmap\">mmap(2)</a>,\n<a href=\"https://man.page/2/mremap\">mremap(2)</a>, and <a href=\"https://man.page/2/munmap\">munmap(2)</a>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-?</b>,&nbsp;<b>--help</b></p>\n\n<p style=\"margin-left:22%;\">Print help and exit.</p>\n\n<p style=\"margin-left:11%;\"><b>--usage</b></p>\n\n<p style=\"margin-left:22%;\">Print a short usage message and\nexit.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-V</b>,&nbsp;<b>--version</b></p>\n\n<p style=\"margin-left:22%;\">Print version information and\nexit.</p>\n\n<p style=\"margin-left:11%;\">The following options apply\nonly when generating graphical output: <b><br>\n-t</b>,&nbsp;<b>--time-based</b></p>\n\n<p style=\"margin-left:22%;\">Use time (rather than number of\nfunction calls) as the scale for the X axis.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-T</b>,&nbsp;<b>--total</b></p>\n\n<p style=\"margin-left:22%;\">Also draw a graph of total\nmemory use.</p>\n\n<p style=\"margin-left:11%;\"><b>--title=</b><i>name</i></p>\n\n<p style=\"margin-left:22%;\">Use <i>name</i> as the title of\nthe graph.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-x&nbsp;</b><i>size</i>,&nbsp;<b>--x-size=</b><i>size</i></p>\n\n<p style=\"margin-left:22%;\">Make the graph <i>size</i>\npixels wide.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-y&nbsp;</b><i>size</i>,&nbsp;<b>--y-size=</b><i>size</i></p>\n\n<p style=\"margin-left:22%;\">Make the graph <i>size</i>\npixels high.</p>\n\n<h2>EXIT STATUS\n<a name=\"EXIT STATUS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Exit status is\nequal to the exit status of profiled program.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">To report bugs,\nsee\n<a href=\"http://www.gnu.org/software/libc/bugs.html\">http://www.gnu.org/software/libc/bugs.html</a></p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Below is a\nsimple program that reallocates a block of memory in cycles\nthat rise to a peak before then cyclically reallocating the\nmemory in smaller blocks that return to zero. After\ncompiling the program and running the following commands, a\ngraph of the memory usage of the program can be found in the\nfile <i>memusage.png</i>:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ <b>memusage\n--data=memusage.dat ./a.out</b> <br>\n... <br>\nMemory usage summary: heap total: 45200, heap peak: 6440,\nstack peak: 224 <br>\ntotal calls total memory failed calls <br>\nmalloc| 1 400 0 <br>\nrealloc| 40 44800 0 (nomove:40, dec:19, free:0) <br>\ncalloc| 0 0 0 <br>\nfree| 1 440 <br>\nHistogram for block sizes: <br>\n192-207 1 2% ================ <br>\n... <br>\n2192-2207 1 2% ================ <br>\n2240-2255 2 4% ================================= <br>\n2832-2847 2 4% ================================= <br>\n3440-3455 2 4% ================================= <br>\n4032-4047 2 4% ================================= <br>\n4640-4655 2 4% ================================= <br>\n5232-5247 2 4% ================================= <br>\n5840-5855 2 4% ================================= <br>\n6432-6447 1 2% ================ <br>\n$ <b>memusagestat memusage.dat memusage.png</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Program\nsource</b> <br>\n#include &lt;stdio.h&gt; <br>\n#include &lt;stdlib.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#define CYCLES\n20</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(int argc, char *argv[]) <br>\n{ <br>\nint i, j; <br>\nsize_t size; <br>\nint *p;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">size =\nsizeof(*p) * 100; <br>\nprintf(&quot;malloc: %zu\\n&quot;, size); <br>\np = malloc(size);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">for (i = 0; i\n&lt; CYCLES; i++) { <br>\nif (i &lt; CYCLES / 2) <br>\nj = i; <br>\nelse <br>\nj--;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">size =\nsizeof(*p) * (j * 50 + 110); <br>\nprintf(&quot;realloc: %zu\\n&quot;, size); <br>\np = realloc(p, size);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">size =\nsizeof(*p) * ((j + 1) * 150 + 110); <br>\nprintf(&quot;realloc: %zu\\n&quot;, size); <br>\np = realloc(p, size); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">free(p); <br>\nexit(EXIT_SUCCESS); <br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/memusagestat\">memusagestat(1)</a>,\n<a href=\"https://man.page/1/mtrace\">mtrace(1)</a>, <b>ld.so</b>(8)</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#EXIT STATUS\">EXIT STATUS</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"]}