{"name":"xsubpp","body":"\n\n<h1 align=\"center\">XSUBPP</h1>\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">xsubpp -\ncompiler to convert Perl XS code into C code</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>xsubpp</b>\n[<b>-v</b>] [<b>-except</b>] [<b>-s pattern</b>]\n[<b>-prototypes</b>] [<b>-noversioncheck</b>]\n[<b>-nolinenumbers</b>] [<b>-nooptimize</b>] [<b>-typemap\ntypemap</b>] [<b>-output filename</b>]... file.xs</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This compiler\nis typically run by the makefiles created by\nExtUtils::MakeMaker or by Module::Build or other Perl module\nbuild tools.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>xsubpp</i>\nwill compile <small>XS</small> code into C code by embedding\nthe constructs necessary to let C functions manipulate Perl\nvalues and creates the glue necessary to let Perl access\nthose functions. The compiler uses typemaps to determine how\nto map C function parameters and variables to Perl\nvalues.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The compiler\nwill search for typemap files called <i>typemap</i>. It will\nuse the following search path to find default typemaps, with\nthe rightmost typemap taking precedence.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">../../../typemap:../../typemap:../typemap:typemap</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It will also\nuse a default typemap installed as\n&quot;ExtUtils::typemap&quot;.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that the\n&quot;XSOPT&quot; MakeMaker option may be used to add these\noptions to any makefiles generated by MakeMaker. <b><br>\n-hiertype</b></p>\n\n<p style=\"margin-left:18%;\">Retains &rsquo;::&rsquo; in\ntype names so that C <small>++</small> hierarchical types\ncan be mapped.</p>\n\n<p style=\"margin-left:11%;\"><b>-except</b></p>\n\n<p style=\"margin-left:18%;\">Adds exception handling stubs\nto the C code.</p>\n\n<p style=\"margin-left:11%;\"><b>-typemap typemap</b></p>\n\n<p style=\"margin-left:18%;\">Indicates that a user-supplied\ntypemap should take precedence over the default typemaps.\nThis option may be used multiple times, with the last\ntypemap having the highest precedence.</p>\n\n<p style=\"margin-left:11%;\"><b>-output filename</b></p>\n\n<p style=\"margin-left:18%;\">Specifies the name of the\noutput file to generate. If no file is specified, output\nwill be written to standard output.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-v</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"82%\">\n\n\n<p>Prints the <i>xsubpp</i> version number to standard\noutput, then exits.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-prototypes</b></p>\n\n<p style=\"margin-left:18%;\">By default <i>xsubpp</i> will\nnot automatically generate prototype code for all xsubs.\nThis flag will enable prototypes.</p>\n\n<p style=\"margin-left:11%;\"><b>-noversioncheck</b></p>\n\n<p style=\"margin-left:18%;\">Disables the run time test that\ndetermines if the object file (derived from the\n&quot;.xs&quot; file) and the &quot;.pm&quot; files have the\nsame version number.</p>\n\n<p style=\"margin-left:11%;\"><b>-nolinenumbers</b></p>\n\n<p style=\"margin-left:18%;\">Prevents the inclusion of\n&rsquo;#line&rsquo; directives in the output.</p>\n\n<p style=\"margin-left:11%;\"><b>-nooptimize</b></p>\n\n<p style=\"margin-left:18%;\">Disables certain optimizations.\nThe only optimization that is currently affected is the use\nof <i>target</i>s by the output C code (see perlguts). This\nmay significantly slow down the generated code, but this is\nthe way <b>xsubpp</b> of 5.005 and earlier operated.</p>\n\n<p style=\"margin-left:11%;\"><b>-noinout</b></p>\n\n<p style=\"margin-left:18%;\">Disable recognition of\n&quot;IN&quot;, &quot;OUT_LIST&quot; and\n&quot;INOUT_LIST&quot; declarations.</p>\n\n<p style=\"margin-left:11%;\"><b>-noargtypes</b></p>\n\n<p style=\"margin-left:18%;\">Disable recognition of\nANSI-like descriptions of function signature.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"6%\">\n\n\n<p><b>-C <small>++</small></b></p></td>\n<td width=\"1%\"></td>\n<td width=\"82%\">\n\n\n<p>Currently doesn&rsquo;t do anything at all. This flag\nhas been a no-op for many versions of perl, at least as far\nback as perl5.003_07. It&rsquo;s allowed here for backwards\ncompatibility.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-s=...</b> or\n<b>-strip=...</b></p>\n\n<p style=\"margin-left:18%;\"><i>This option is obscure and\ndiscouraged.</i></p>\n\n<p style=\"margin-left:18%; margin-top: 1em\">If specified,\nthe given string will be stripped off from the beginning of\nthe C function name in the generated <small>XS</small>\nfunctions (if it starts with that prefix). This only applies\nto XSUBs without &quot;CODE&quot; or &quot;PPCODE&quot;\nblocks. For example, the <small>XS:</small></p>\n\n<p style=\"margin-left:18%; margin-top: 1em\">void\nfoo_bar(int i);</p>\n\n<p style=\"margin-left:18%; margin-top: 1em\">when\n&quot;xsubpp&quot; is invoked with &quot;-s foo_&quot; will\ninstall a &quot;foo_bar&quot; function in Perl, but really\ncall bar(i) in C. Most of the time, this is the opposite of\nwhat you want and failure modes are somewhat obscure, so\nplease avoid this option where possible.</p>\n\n<h2>ENVIRONMENT\n<a name=\"ENVIRONMENT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">No environment\nvariables are used.</p>\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Originally by\nLarry Wall. Turned into the &quot;ExtUtils::ParseXS&quot;\nmodule by Ken Williams.</p>\n\n<h2>MODIFICATION HISTORY\n<a name=\"MODIFICATION HISTORY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">See the file\n<i>Changes</i>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/perl\">perl(1)</a>,\n<a href=\"https://man.page/1/perlxs\">perlxs(1)</a>, <a href=\"https://man.page/1/perlxstut\">perlxstut(1)</a>, ExtUtils::ParseXS</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#ENVIRONMENT\">ENVIRONMENT</a>","<a href=\"#AUTHOR\">AUTHOR</a>","<a href=\"#MODIFICATION HISTORY\">MODIFICATION HISTORY</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"]}