{"name":"git-mergetool","description":"git-mergetool -\nRun merge conflict resolution tools to resolve merge\nconflicts","body":"\n\n<h1 align=\"center\">GIT-MERGETOOL</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">git-mergetool -\nRun merge conflict resolution tools to resolve merge\nconflicts</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>git\nmergetool</i> [--tool=&lt;tool&gt;] [-y | --[no-]prompt]\n[&lt;file&gt;...]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Use <b>git\nmergetool</b> to run one of several merge utilities to\nresolve merge conflicts. It is typically run after <i>git\nmerge</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If one or more\n&lt;file&gt; parameters are given, the merge tool program\nwill be run to resolve differences on each file (skipping\nthose without conflicts). Specifying a directory will\ninclude all unresolved files in that path. If no\n&lt;file&gt; names are specified, <i>git mergetool</i> will\nrun the merge tool program on every file with merge\nconflicts.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">-t\n&lt;tool&gt;, --tool=&lt;tool&gt;</p>\n\n<p style=\"margin-left:17%;\">Use the merge resolution\nprogram specified by &lt;tool&gt;. Valid values include\nemerge, gvimdiff, kdiff3, meld, vimdiff, and tortoisemerge.\nRun <b>git mergetool --tool-help</b> for the list of valid\n&lt;tool&gt; settings.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If a merge\nresolution program is not specified, <i>git mergetool</i>\nwill use the configuration variable <b>merge.tool</b>. If\nthe configuration variable <b>merge.tool</b> is not set,\n<i>git mergetool</i> will pick a suitable default.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">You can\nexplicitly provide a full path to the tool by setting the\nconfiguration variable <b>mergetool.&lt;tool&gt;.path</b>.\nFor example, you can configure the absolute path to kdiff3\nby setting <b>mergetool.kdiff3.path</b>. Otherwise, <i>git\nmergetool</i> assumes the tool is available in PATH.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Instead of\nrunning one of the known merge tool programs, <i>git\nmergetool</i> can be customized to run an alternative\nprogram by specifying the command line to invoke in a\nconfiguration variable\n<b>mergetool.&lt;tool&gt;.cmd</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When <i>git\nmergetool</i> is invoked with this tool (either through the\n<b>-t</b> or <b>--tool</b> option or the <b>merge.tool</b>\nconfiguration variable) the configured command line will be\ninvoked with <b>$BASE</b> set to the name of a temporary\nfile containing the common base for the merge, if available;\n<b>$LOCAL</b> set to the name of a temporary file containing\nthe contents of the file on the current branch;\n<b>$REMOTE</b> set to the name of a temporary file\ncontaining the contents of the file to be merged, and\n<b>$MERGED</b> set to the name of the file to which the\nmerge tool should write the result of the merge\nresolution.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If the custom\nmerge tool correctly indicates the success of a merge\nresolution with its exit code, then the configuration\nvariable <b>mergetool.&lt;tool&gt;.trustExitCode</b> can be\nset to <b>true</b>. Otherwise, <i>git mergetool</i> will\nprompt the user to indicate the success of the resolution\nafter the custom tool has exited.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--tool-help</p>\n\n<p style=\"margin-left:17%;\">Print a list of merge tools\nthat may be used with <b>--tool</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-y,\n--no-prompt</p>\n\n<p style=\"margin-left:17%;\">Don&rsquo;t prompt before each\ninvocation of the merge resolution program. This is the\ndefault if the merge resolution program is explicitly\nspecified with the <b>--tool</b> option or with the\n<b>merge.tool</b> configuration variable.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--prompt</p>\n\n<p style=\"margin-left:17%;\">Prompt before each invocation\nof the merge resolution program to give the user a chance to\nskip the path.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-g, --gui</p>\n\n<p style=\"margin-left:17%;\">When <i>git-mergetool</i> is\ninvoked with the <b>-g</b> or <b>--gui</b> option the\ndefault merge tool will be read from the configured\n<b>merge.guitool</b> variable instead of <b>merge.tool</b>.\nIf <b>merge.guitool</b> is not set, we will fallback to the\ntool configured under <b>merge.tool</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--no-gui</p>\n\n<p style=\"margin-left:17%;\">This overrides a previous\n<b>-g</b> or <b>--gui</b> setting and reads the default\nmerge tool will be read from the configured\n<b>merge.tool</b> variable.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">-O&lt;orderfile&gt;</p>\n\n<p style=\"margin-left:17%;\">Process files in the order\nspecified in the &lt;orderfile&gt;, which has one shell glob\npattern per line. This overrides the <b>diff.orderFile</b>\nconfiguration variable (see <a href=\"https://man.page/1/git-config\">git-config(1)</a>). To cancel\n<b>diff.orderFile</b>, use <b>-O/dev/null</b>.</p>\n\n<h2>CONFIGURATION\n<a name=\"CONFIGURATION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">mergetool.&lt;tool&gt;.path</p>\n\n<p style=\"margin-left:17%;\">Override the path for the given\ntool. This is useful in case your tool is not in the\nPATH.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">mergetool.&lt;tool&gt;.cmd</p>\n\n<p style=\"margin-left:17%;\">Specify the command to invoke\nthe specified merge tool. The specified command is evaluated\nin shell with the following variables available: <i>BASE</i>\nis the name of a temporary file containing the common base\nof the files to be merged, if available; <i>LOCAL</i> is the\nname of a temporary file containing the contents of the file\non the current branch; <i>REMOTE</i> is the name of a\ntemporary file containing the contents of the file from the\nbranch being merged; <i>MERGED</i> contains the name of the\nfile to which the merge tool should write the results of a\nsuccessful merge.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">mergetool.&lt;tool&gt;.hideResolved</p>\n\n<p style=\"margin-left:17%;\">Allows the user to override the\nglobal <b>mergetool.hideResolved</b> value for a specific\ntool. See <b>mergetool.hideResolved</b> for the full\ndescription.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">mergetool.&lt;tool&gt;.trustExitCode</p>\n\n<p style=\"margin-left:17%;\">For a custom merge command,\nspecify whether the exit code of the merge command can be\nused to determine whether the merge was successful. If this\nis not set to true then the merge target file timestamp is\nchecked and the merge assumed to have been successful if the\nfile has been updated, otherwise the user is prompted to\nindicate the success of the merge.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">mergetool.meld.hasOutput</p>\n\n<p style=\"margin-left:17%;\">Older versions of <b>meld</b>\ndo not support the <b>--output</b> option. Git will attempt\nto detect whether <b>meld</b> supports <b>--output</b> by\ninspecting the output of <b>meld --help</b>. Configuring\n<b>mergetool.meld.hasOutput</b> will make Git skip these\nchecks and use the configured value instead. Setting\n<b>mergetool.meld.hasOutput</b> to <b>true</b> tells Git to\nunconditionally use the <b>--output</b> option, and\n<b>false</b> avoids using <b>--output</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">mergetool.meld.useAutoMerge</p>\n\n<p style=\"margin-left:17%;\">When the <b>--auto-merge</b> is\ngiven, meld will merge all non-conflicting parts\nautomatically, highlight the conflicting parts and wait for\nuser decision. Setting <b>mergetool.meld.useAutoMerge</b> to\n<b>true</b> tells Git to unconditionally use the\n<b>--auto-merge</b> option with <b>meld</b>. Setting this\nvalue to <b>auto</b> makes git detect whether\n<b>--auto-merge</b> is supported and will only use\n<b>--auto-merge</b> when available. A value of <b>false</b>\navoids using <b>--auto-merge</b> altogether, and is the\ndefault value.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">mergetool.hideResolved</p>\n\n<p style=\"margin-left:17%;\">During a merge Git will\nautomatically resolve as many conflicts as possible and\nwrite the <i>MERGED</i> file containing conflict markers\naround any conflicts that it cannot resolve; <i>LOCAL</i>\nand <i>REMOTE</i> normally represent the versions of the\nfile from before Git&rsquo;s conflict resolution. This flag\ncauses <i>LOCAL</i> and <i>REMOTE</i> to be overwriten so\nthat only the unresolved conflicts are presented to the\nmerge tool. Can be configured per-tool via the\n<b>mergetool.&lt;tool&gt;.hideResolved</b> configuration\nvariable. Defaults to <b>false</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">mergetool.keepBackup</p>\n\n<p style=\"margin-left:17%;\">After performing a merge, the\noriginal file with conflict markers can be saved as a file\nwith a <b>.orig</b> extension. If this variable is set to\n<b>false</b> then this file is not preserved. Defaults to\n<b>true</b> (i.e. keep the backup files).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">mergetool.keepTemporaries</p>\n\n<p style=\"margin-left:17%;\">When invoking a custom merge\ntool, Git uses a set of temporary files to pass to the tool.\nIf the tool returns an error and this variable is set to\n<b>true</b>, then these temporary files will be preserved,\notherwise they will be removed after the tool has exited.\nDefaults to <b>false</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">mergetool.writeToTemp</p>\n\n<p style=\"margin-left:17%;\">Git writes temporary\n<i>BASE</i>, <i>LOCAL</i>, and <i>REMOTE</i> versions of\nconflicting files in the worktree by default. Git will\nattempt to use a temporary directory for these files when\nset <b>true</b>. Defaults to <b>false</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">mergetool.prompt</p>\n\n<p style=\"margin-left:17%;\">Prompt before each invocation\nof the merge resolution program.</p>\n\n<h2>TEMPORARY FILES\n<a name=\"TEMPORARY FILES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>git\nmergetool</b> creates <b>*.orig</b> backup files while\nresolving merges. These are safe to remove once a file has\nbeen merged and its <b>git mergetool</b> session has\ncompleted.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Setting the\n<b>mergetool.keepBackup</b> configuration variable to\n<b>false</b> causes <b>git mergetool</b> to automatically\nremove the backup as files are successfully merged.</p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Part of the\n<a href=\"https://man.page/1/git\">git(1)</a> suite</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#CONFIGURATION\">CONFIGURATION</a>","<a href=\"#TEMPORARY FILES\">TEMPORARY FILES</a>","<a href=\"#GIT\">GIT</a>"]}