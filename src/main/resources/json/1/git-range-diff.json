{"name":"git-range-diff","body":"\n\n<h1 align=\"center\">GIT-RANGE-DIFF</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">git-range-diff\n- Compare two commit ranges (e.g. two versions of a\nbranch)</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>git\nrange-diff</i> [--color=[&lt;when&gt;]] [--no-color]\n[&lt;diff-options&gt;] <br>\n[--no-dual-color] [--creation-factor=&lt;factor&gt;] <br>\n[--left-only | --right-only] <br>\n( &lt;range1&gt; &lt;range2&gt; |\n&lt;rev1&gt;...&lt;rev2&gt; | &lt;base&gt; &lt;rev1&gt;\n&lt;rev2&gt; )</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This command\nshows the differences between two versions of a patch\nseries, or more generally, two commit ranges (ignoring merge\ncommits).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To that end, it\nfirst finds pairs of commits from both commit ranges that\ncorrespond with each other. Two commits are said to\ncorrespond when the diff between their patches (i.e. the\nauthor information, the commit message and the commit diff)\nis reasonably small compared to the patches' size. See\n&rsquo;&rsquo;Algorithm&rsquo;&rsquo; below for details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Finally, the\nlist of matching commits is shown in the order of the second\ncommit range, with unmatched commits being inserted just\nafter all of their ancestors have been shown.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">There are three\nways to specify the commit ranges:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<b>&lt;range1&gt; &lt;range2&gt;</b>: Either commit range\ncan be of the form <b>&lt;base&gt;..&lt;rev&gt;</b>,\n<b>&lt;rev&gt;^!</b> or <b>&lt;rev&gt;^-&lt;n&gt;</b>. See\n<b>SPECIFYING RANGES</b> in <a href=\"https://man.page/7/gitrevisions\">gitrevisions(7)</a> for more\ndetails.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<b>&lt;rev1&gt;...&lt;rev2&gt;</b>. This is equivalent to\n<b>&lt;rev2&gt;..&lt;rev1&gt;\n&lt;rev1&gt;..&lt;rev2&gt;</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<b>&lt;base&gt; &lt;rev1&gt; &lt;rev2&gt;</b>: This is\nequivalent to <b>&lt;base&gt;..&lt;rev1&gt;\n&lt;base&gt;..&lt;rev2&gt;</b>.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--no-dual-color</p>\n\n<p style=\"margin-left:17%;\">When the commit diffs differ,\n&rsquo;git range-diff&rsquo; recreates the original\ndiffs&rsquo; coloring, and adds outer -/+ diff markers with\nthe <b>background</b> being red/green to make it easier to\nsee e.g. when there was a change in what exact lines were\nadded.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Additionally,\nthe commit diff lines that are only present in the first\ncommit range are shown &quot;dimmed&quot; (this can be\noverridden using the <b>color.diff.&lt;slot&gt;</b> config\nsetting where <b>&lt;slot&gt;</b> is one of\n<b>contextDimmed</b>, <b>oldDimmed</b> and\n<b>newDimmed</b>), and the commit diff lines that are only\npresent in the second commit range are shown in bold (which\ncan be overridden using the config settings\n<b>color.diff.&lt;slot&gt;</b> with <b>&lt;slot&gt;</b>\nbeing one of <b>contextBold</b>, <b>oldBold</b> or\n<b>newBold</b>).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This is known\nto <b>range-diff</b> as &quot;dual coloring&quot;. Use\n<b>--no-dual-color</b> to revert to color all lines\naccording to the outer diff markers (and completely ignore\nthe inner diff when it comes to color).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--creation-factor=&lt;percent&gt;</p>\n\n<p style=\"margin-left:17%;\">Set the creation/deletion cost\nfudge factor to <b>&lt;percent&gt;</b>. Defaults to 60. Try\na larger value if <b>git range-diff</b> erroneously\nconsiders a large change a total rewrite (deletion of one\ncommit and addition of another), and a smaller one in the\nreverse case. See the &rsquo;&rsquo;Algorithm&rsquo;&rsquo;\nsection below for an explanation why this is needed.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--left-only</p>\n\n<p style=\"margin-left:17%;\">Suppress commits that are\nmissing from the first specified range (or the &quot;left\nrange&quot; when using the\n<b>&lt;rev1&gt;...&lt;rev2&gt;</b> format).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--right-only</p>\n\n<p style=\"margin-left:17%;\">Suppress commits that are\nmissing from the second specified range (or the &quot;right\nrange&quot; when using the\n<b>&lt;rev1&gt;...&lt;rev2&gt;</b> format).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--[no-]notes[=&lt;ref&gt;]</p>\n\n<p style=\"margin-left:17%;\">This flag is passed to the\n<b>git log</b> program (see <a href=\"https://man.page/1/git-log\">git-log(1)</a>) that\ngenerates the patches.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;range1&gt;\n&lt;range2&gt;</p>\n\n<p style=\"margin-left:17%;\">Compare the commits specified\nby the two ranges, where <b>&lt;range1&gt;</b> is considered\nan older version of <b>&lt;range2&gt;</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;rev1&gt;...&lt;rev2&gt;</p>\n\n<p style=\"margin-left:17%;\">Equivalent to passing\n<b>&lt;rev2&gt;..&lt;rev1&gt;</b> and\n<b>&lt;rev1&gt;..&lt;rev2&gt;</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;base&gt;\n&lt;rev1&gt; &lt;rev2&gt;</p>\n\n<p style=\"margin-left:17%;\">Equivalent to passing\n<b>&lt;base&gt;..&lt;rev1&gt;</b> and\n<b>&lt;base&gt;..&lt;rev2&gt;</b>. Note that\n<b>&lt;base&gt;</b> does not need to be the exact branch\npoint of the branches. Example: after rebasing a branch\n<b>my-topic</b>, <b>git range-diff my-topic@{u} my-topic@{1}\nmy-topic</b> would show the differences introduced by the\nrebase.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>git\nrange-diff</b> also accepts the regular diff options (see\n<a href=\"https://man.page/1/git-diff\">git-diff(1)</a>), most notably the\n<b>--color=[&lt;when&gt;]</b> and <b>--no-color</b> options.\nThese options are used when generating the &quot;diff\nbetween patches&quot;, i.e. to compare the author, commit\nmessage and diff of corresponding old/new commits. There is\ncurrently no means to tweak most of the diff options passed\nto <b>git log</b> when generating those patches.</p>\n\n<h2>OUTPUT STABILITY\n<a name=\"OUTPUT STABILITY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The output of\nthe <b>range-diff</b> command is subject to change. It is\nintended to be human-readable porcelain output, not\nsomething that can be used across versions of Git to get a\ntextually stable <b>range-diff</b> (as opposed to something\nlike the <b>--stable</b> option to <a href=\"https://man.page/1/git-patch-id\">git-patch-id(1)</a>).\nThere&rsquo;s also no equivalent of <a href=\"https://man.page/1/git-apply\">git-apply(1)</a> for\n<b>range-diff</b>, the output is not intended to be\nmachine-readable.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This is\nparticularly true when passing in diff options. Currently\nsome options like <b>--stat</b> can, as an emergent effect,\nproduce output that&rsquo;s quite useless in the context of\n<b>range-diff</b>. Future versions of <b>range-diff</b> may\nlearn to interpret such options in a manner specific to\n<b>range-diff</b> (e.g. for <b>--stat</b> producing\nhuman-readable output which summarizes how the diffstat\nchanged).</p>\n\n<h2>CONFIGURATION\n<a name=\"CONFIGURATION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This command\nuses the <b>diff.color.*</b> and <b>pager.range-diff</b>\nsettings (the latter is on by default). See\n<a href=\"https://man.page/1/git-config\">git-config(1)</a>.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">When a rebase\nrequired merge conflicts to be resolved, compare the changes\nintroduced by the rebase directly afterwards using:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git\nrange-diff @{u} @{1} @</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A typical\noutput of <b>git range-diff</b> would look like this:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">-: ------- &gt;\n1: 0ddba11 Prepare for the inevitable! <br>\n1: c0debee = 2: cab005e Add a helpful message at the start\n<br>\n2: f00dbal ! 3: decafe1 Describe a bug <br>\n@@ -1,3 +1,3 @@ <br>\nAuthor: A U Thor &lt;author@example.com&gt;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">-TODO: Describe\na bug <br>\n+Describe a bug <br>\n@@ -324,5 +324,6 <br>\nThis is expected.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">-+What is\nunexpected is that it will also crash. <br>\n++Unexpectedly, it also crashes. This is a bug, and the jury\nis <br>\n++still out there how to fix it best. See ticket #314 for\ndetails.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Contact <br>\n3: bedead &lt; -: ------- TO-UNDO</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In this\nexample, there are 3 old and 3 new commits, where the\ndeveloper removed the 3rd, added a new one before the first\ntwo, and modified the commit message of the 2nd commit as\nwell its diff.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When the output\ngoes to a terminal, it is color-coded by default, just like\nregular <b>git diff</b>'s output. In addition, the first\nline (adding a commit) is green, the last line (deleting a\ncommit) is red, the second line (with a perfect match) is\nyellow like the commit header of <b>git show</b>'s output,\nand the third line colors the old commit red, the new one\ngreen and the rest like <b>git show</b>'s commit header.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A naive\ncolor-coded diff of diffs is actually a bit hard to read,\nthough, as it colors the entire lines red or green. The line\nthat added &quot;What is unexpected&quot; in the old commit,\nfor example, is completely red, even if the intent of the\nold commit was to add something.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To help with\nthat, <b>range</b> uses the <b>--dual-color</b> mode by\ndefault. In this mode, the diff of diffs will retain the\noriginal diff colors, and prefix the lines with -/+ markers\nthat have their <b>background</b> red or green, to make it\nmore obvious that they describe how the diff itself\nchanged.</p>\n\n<h2>ALGORITHM\n<a name=\"ALGORITHM\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The general\nidea is this: we generate a cost matrix between the commits\nin both commit ranges, then solve the least-cost\nassignment.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The cost matrix\nis populated thusly: for each pair of commits, both diffs\nare generated and the &quot;diff of diffs&quot; is\ngenerated, with 3 context lines, then the number of lines in\nthat diff is used as cost.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To avoid false\npositives (e.g. when a patch has been removed, and an\nunrelated patch has been added between two iterations of the\nsame patch series), the cost matrix is extended to allow for\nthat, by adding fixed-cost entries for wholesale\ndeletes/adds.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Example: Let\ncommits <b>1--2</b> be the first iteration of a patch series\nand <b>A--C</b> the second iteration. Let&rsquo;s assume\nthat <b>A</b> is a cherry-pick of <b>2,</b> and <b>C</b> is\na cherry-pick of <b>1</b> but with a small modification\n(say, a fixed typo). Visualize the commits as a bipartite\ngraph:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">1 A</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">2 B</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">C</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">We are looking\nfor a &quot;best&quot; explanation of the new series in\nterms of the old one. We can represent an\n&quot;explanation&quot; as an edge in the graph:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">1 A <br>\n/ <br>\n2 --------' B</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">C</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This\nexplanation comes for &quot;free&quot; because there was no\nchange. Similarly <b>C</b> could be explained using\n<b>1</b>, but that comes at some cost c&gt;0 because of the\nmodification:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">1 ----. A <br>\n| / <br>\n2 ----+---' B <br>\n| <br>\n&rsquo;----- C <br>\nc&gt;0</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In mathematical\nterms, what we are looking for is some sort of a minimum\ncost bipartite matching; &rsquo;1&rsquo; is matched to\n<b>C</b> at some cost, etc. The underlying graph is in fact\na complete bipartite graph; the cost we associate with every\nedge is the size of the diff between the two commits&rsquo;\npatches. To explain also new commits, we introduce dummy\nnodes on both sides:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">1 ----. A <br>\n| / <br>\n2 ----+---' B <br>\n| <br>\no &rsquo;----- C <br>\nc&gt;0 <br>\no o</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">o o</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The cost of an\nedge <b>o--C</b> is the size of <b>C</b>'s diff, modified by\na fudge factor that should be smaller than 100%. The cost of\nan edge <b>o--o</b> is free. The fudge factor is necessary\nbecause even if <b>1</b> and <b>C</b> have nothing in\ncommon, they may still share a few empty lines and such,\npossibly making the assignment <b>1--C</b>, <b>o--o</b>\nslightly cheaper than <b>1--o</b>, <b>o--C</b> even if\n<b>1</b> and <b>C</b> have nothing in common. With the fudge\nfactor we require a much larger common part to consider\npatches as corresponding.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The overall\ntime needed to compute this algorithm is the time needed to\ncompute n+m commit diffs and then n*m diffs of patches, plus\nthe time needed to compute the least-cost assignment between\nn and m diffs. Git uses an implementation of the\nJonker-Volgenant algorithm to solve the assignment problem,\nwhich has cubic runtime complexity. The matching found in\nthis case will look like this:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">1 ----. A <br>\n| / <br>\n2 ----+---' B <br>\n.--+-----' <br>\no -' &rsquo;----- C <br>\nc&gt;0 <br>\no ---------- o</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">o ----------\no</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/git-log\">git-log(1)</a></p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Part of the\n<a href=\"https://man.page/1/git\">git(1)</a> suite</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#OUTPUT STABILITY\">OUTPUT STABILITY</a>","<a href=\"#CONFIGURATION\">CONFIGURATION</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#ALGORITHM\">ALGORITHM</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#GIT\">GIT</a>"]}