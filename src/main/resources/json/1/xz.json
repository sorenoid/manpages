{"name":"xz","description":"xz, unxz, xzcat, lzma, unlzma, lzcat - Compress or decompress .xz and .lzma files","body":"\n\n<h1 align=\"center\">XZ</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">xz, unxz,\nxzcat, lzma, unlzma, lzcat - Compress or decompress .xz and\n.lzma files</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>xz</b>\n[<i>option...</i>] [<i>file...</i>]</p>\n\n<h2>COMMAND ALIASES\n<a name=\"COMMAND ALIASES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>unxz</b> is\nequivalent to <b>xz --decompress</b>. <b><br>\nxzcat</b> is equivalent to <b>xz --decompress --stdout</b>.\n<b><br>\nlzma</b> is equivalent to <b>xz --format=lzma</b>. <b><br>\nunlzma</b> is equivalent to <b>xz --format=lzma\n--decompress</b>. <b><br>\nlzcat</b> is equivalent to <b>xz --format=lzma --decompress\n--stdout</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When writing\nscripts that need to decompress files, it is recommended to\nalways use the name <b>xz</b> with appropriate arguments\n(<b>xz -d</b> or <b>xz -dc</b>) instead of the names\n<b>unxz</b> and <b>xzcat</b>.</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>xz</b> is a\ngeneral-purpose data compression tool with command line\nsyntax similar to <a href=\"https://man.page/1/gzip\">gzip(1)</a> and <a href=\"https://man.page/1/bzip2\">bzip2(1)</a>. The\nnative file format is the <b>.xz</b> format, but the legacy\n<b>.lzma</b> format used by LZMA Utils and raw compressed\nstreams with no container format headers are also\nsupported.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>xz</b>\ncompresses or decompresses each <i>file</i> according to the\nselected operation mode. If no <i>files</i> are given or\n<i>file</i> is <b>-</b>, <b>xz</b> reads from standard input\nand writes the processed data to standard output. <b>xz</b>\nwill refuse (display an error and skip the <i>file</i>) to\nwrite compressed data to standard output if it is a\nterminal. Similarly, <b>xz</b> will refuse to read\ncompressed data from standard input if it is a terminal.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Unless\n<b>--stdout</b> is specified, <i>files</i> other than\n<b>-</b> are written to a new file whose name is derived\nfrom the source <i>file</i> name:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>When compressing, the suffix of the target file format\n(<b>.xz</b> or <b>.lzma</b>) is appended to the source\nfilename to get the target filename.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>When decompressing, the <b>.xz</b> or <b>.lzma</b>\nsuffix is removed from the filename to get the target\nfilename. <b>xz</b> also recognizes the suffixes <b>.txz</b>\nand <b>.tlz</b>, and replaces them with the <b>.tar</b>\nsuffix.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the target\nfile already exists, an error is displayed and the\n<i>file</i> is skipped.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Unless writing\nto standard output, <b>xz</b> will display a warning and\nskip the <i>file</i> if any of the following applies:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p style=\"margin-top: 1em\"><i>File</i> is not a regular\nfile. Symbolic links are not followed, and thus they are not\nconsidered to be regular files.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p><i>File</i> has more than one hard link.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p><i>File</i> has setuid, setgid, or sticky bit set.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>The operation mode is set to compress and the\n<i>file</i> already has a suffix of the target file format\n(<b>.xz</b> or <b>.txz</b> when compressing to the\n<b>.xz</b> format, and <b>.lzma</b> or <b>.tlz</b> when\ncompressing to the <b>.lzma</b> format).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>The operation mode is set to decompress and the\n<i>file</i> doesn&rsquo;t have a suffix of any of the\nsupported file formats (<b>.xz</b>, <b>.txz</b>,\n<b>.lzma</b>, or <b>.tlz</b>).</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">After\nsuccessfully compressing or decompressing the <i>file</i>,\n<b>xz</b> copies the owner, group, permissions, access time,\nand modification time from the source <i>file</i> to the\ntarget file. If copying the group fails, the permissions are\nmodified so that the target file doesn&rsquo;t become\naccessible to users who didn&rsquo;t have permission to\naccess the source <i>file</i>. <b>xz</b> doesn&rsquo;t\nsupport copying other metadata like access control lists or\nextended attributes yet.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Once the target\nfile has been successfully closed, the source <i>file</i> is\nremoved unless <b>--keep</b> was specified. The source\n<i>file</i> is never removed if the output is written to\nstandard output.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Sending\n<b>SIGINFO</b> or <b>SIGUSR1</b> to the <b>xz</b> process\nmakes it print progress information to standard error. This\nhas only limited use since when standard error is a\nterminal, using <b>--verbose</b> will display an\nautomatically updating progress indicator.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Memory\nusage</b> <br>\nThe memory usage of <b>xz</b> varies from a few hundred\nkilobytes to several gigabytes depending on the compression\nsettings. The settings used when compressing a file\ndetermine the memory requirements of the decompressor.\nTypically the decompressor needs 5&nbsp;% to 20&nbsp;% of\nthe amount of memory that the compressor needed when\ncreating the file. For example, decompressing a file created\nwith <b>xz -9</b> currently requires 65&nbsp;MiB of memory.\nStill, it is possible to have <b>.xz</b> files that require\nseveral gigabytes of memory to decompress.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Especially\nusers of older systems may find the possibility of very\nlarge memory usage annoying. To prevent uncomfortable\nsurprises, <b>xz</b> has a built-in memory usage limiter,\nwhich is disabled by default. While some operating systems\nprovide ways to limit the memory usage of processes, relying\non it wasn&rsquo;t deemed to be flexible enough (for\nexample, using <a href=\"https://man.page/1/ulimit\">ulimit(1)</a> to limit virtual memory\ntends to cripple <a href=\"https://man.page/2/mmap\">mmap(2)</a>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The memory\nusage limiter can be enabled with the command line option\n<b>--memlimit=</b><i>limit</i>. Often it is more convenient\nto enable the limiter by default by setting the environment\nvariable <b>XZ_DEFAULTS</b>, for example,\n<b>XZ_DEFAULTS=--memlimit=150MiB</b>. It is possible to set\nthe limits separately for compression and decompression by\nusing <b>--memlimit-compress=</b><i>limit</i> and\n<b>--memlimit-decompress=</b><i>limit</i>. Using these two\noptions outside <b>XZ_DEFAULTS</b> is rarely useful because\na single run of <b>xz</b> cannot do both compression and\ndecompression and <b>--memlimit=</b><i>limit</i> (or\n<b>-M</b> <i>limit</i>) is shorter to type on the command\nline.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\nspecified memory usage limit is exceeded when decompressing,\n<b>xz</b> will display an error and decompressing the file\nwill fail. If the limit is exceeded when compressing,\n<b>xz</b> will try to scale the settings down so that the\nlimit is no longer exceeded (except when using\n<b>--format=raw</b> or <b>--no-adjust</b>). This way the\noperation won&rsquo;t fail unless the limit is very small.\nThe scaling of the settings is done in steps that\ndon&rsquo;t match the compression level presets, for\nexample, if the limit is only slightly less than the amount\nrequired for <b>xz -9</b>, the settings will be scaled down\nonly a little, not all the way down to <b>xz -8</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Concatenation\nand padding with .xz files</b> <br>\nIt is possible to concatenate <b>.xz</b> files as is.\n<b>xz</b> will decompress such files as if they were a\nsingle <b>.xz</b> file.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It is possible\nto insert padding between the concatenated parts or after\nthe last part. The padding must consist of null bytes and\nthe size of the padding must be a multiple of four bytes.\nThis can be useful, for example, if the <b>.xz</b> file is\nstored on a medium that measures file sizes in 512-byte\nblocks.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Concatenation\nand padding are not allowed with <b>.lzma</b> files or raw\nstreams.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Integer\nsuffixes and special values</b> <br>\nIn most places where an integer argument is expected, an\noptional suffix is supported to easily indicate large\nintegers. There must be no space between the integer and the\nsuffix.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p style=\"margin-top: 1em\"><b>KiB</b></p></td>\n<td width=\"7%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">Multiply the integer by 1,024\n(2^10). <b>Ki</b>, <b>k</b>, <b>kB</b>, <b>K</b>, and\n<b>KB</b> are accepted as synonyms for <b>KiB</b>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>MiB</b></p></td>\n<td width=\"7%\"></td>\n<td width=\"78%\">\n\n\n<p>Multiply the integer by 1,048,576 (2^20). <b>Mi</b>,\n<b>m</b>, <b>M</b>, and <b>MB</b> are accepted as synonyms\nfor <b>MiB</b>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>GiB</b></p></td>\n<td width=\"7%\"></td>\n<td width=\"78%\">\n\n\n<p>Multiply the integer by 1,073,741,824 (2^30). <b>Gi</b>,\n<b>g</b>, <b>G</b>, and <b>GB</b> are accepted as synonyms\nfor <b>GiB</b>.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The special\nvalue <b>max</b> can be used to indicate the maximum integer\nvalue supported by the option.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Operation\nmode</b> <br>\nIf multiple operation mode options are given, the last one\ntakes effect. <b><br>\n-z</b>, <b>--compress</b></p>\n\n<p style=\"margin-left:22%;\">Compress. This is the default\noperation mode when no operation mode option is specified\nand no other operation mode is implied from the command name\n(for example, <b>unxz</b> implies <b>--decompress</b>).</p>\n\n<p style=\"margin-left:11%;\"><b>-d</b>, <b>--decompress</b>,\n<b>--uncompress</b></p>\n\n<p style=\"margin-left:22%;\">Decompress.</p>\n\n<p style=\"margin-left:11%;\"><b>-t</b>, <b>--test</b></p>\n\n<p style=\"margin-left:22%;\">Test the integrity of\ncompressed <i>files</i>. This option is equivalent to\n<b>--decompress --stdout</b> except that the decompressed\ndata is discarded instead of being written to standard\noutput. No files are created or removed.</p>\n\n<p style=\"margin-left:11%;\"><b>-l</b>, <b>--list</b></p>\n\n<p style=\"margin-left:22%;\">Print information about\ncompressed <i>files</i>. No uncompressed output is produced,\nand no files are created or removed. In list mode, the\nprogram cannot read the compressed data from standard input\nor from other unseekable sources.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>The default listing shows basic information about\n<i>files</i>, one file per line. To get more detailed\ninformation, use also the <b>--verbose</b> option. For even\nmore information, use <b>--verbose</b> twice, but note that\nthis may be slow, because getting all the extra information\nrequires many seeks. The width of verbose output exceeds 80\ncharacters, so piping the output to, for example,\n<b>less&nbsp;-S</b> may be convenient if the terminal\nisn&rsquo;t wide enough.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>The exact output may vary between <b>xz</b> versions and\ndifferent locales. For machine-readable output, <b>--robot\n--list</b> should be used.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Operation\nmodifiers <br>\n-k</b>, <b>--keep</b></p>\n\n<p style=\"margin-left:22%;\">Don&rsquo;t delete the input\nfiles.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>Since <b>xz</b> 5.4.0, this option also makes <b>xz</b>\ncompress or decompress even if the input is a symbolic link\nto a regular file, has more than one hard link, or has the\nsetuid, setgid, or sticky bit set. The setuid, setgid, and\nsticky bits are not copied to the target file. In earlier\nversions this was only done with <b>--force</b>.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-f</b>, <b>--force</b></p>\n\n<p style=\"margin-left:22%;\">This option has several\neffects:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>If the target file already exists, delete it before\ncompressing or decompressing.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>Compress or decompress even if the input is a symbolic\nlink to a regular file, has more than one hard link, or has\nthe setuid, setgid, or sticky bit set. The setuid, setgid,\nand sticky bits are not copied to the target file.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>When used with <b>--decompress --stdout</b> and\n<b>xz</b> cannot recognize the type of the source file, copy\nthe source file as is to standard output. This allows\n<b>xzcat --force</b> to be used like <a href=\"https://man.page/1/cat\">cat(1)</a> for files\nthat have not been compressed with <b>xz</b>. Note that in\nfuture, <b>xz</b> might support new compressed file formats,\nwhich may make <b>xz</b> decompress more types of files\ninstead of copying them as is to standard output.\n<b>--format=</b><i>format</i> can be used to restrict\n<b>xz</b> to decompress only a single file format.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-c</b>, <b>--stdout</b>,\n<b>--to-stdout</b></p>\n\n<p style=\"margin-left:22%;\">Write the compressed or\ndecompressed data to standard output instead of a file. This\nimplies <b>--keep</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>--single-stream</b></p>\n\n<p style=\"margin-left:22%;\">Decompress only the first\n<b>.xz</b> stream, and silently ignore possible remaining\ninput data following the stream. Normally such trailing\ngarbage makes <b>xz</b> display an error.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p><b>xz</b> never decompresses more than one stream from\n<b>.lzma</b> files or raw streams, but this option still\nmakes <b>xz</b> ignore the possible trailing data after the\n<b>.lzma</b> file or raw stream.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>This option has no effect if the operation mode is not\n<b>--decompress</b> or <b>--test</b>.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--no-sparse</b></p>\n\n<p style=\"margin-left:22%;\">Disable creation of sparse\nfiles. By default, if decompressing into a regular file,\n<b>xz</b> tries to make the file sparse if the decompressed\ndata contains long sequences of binary zeros. It also works\nwhen writing to standard output as long as standard output\nis connected to a regular file and certain additional\nconditions are met to make it safe. Creating sparse files\nmay save disk space and speed up the decompression by\nreducing the amount of disk I/O.</p>\n\n<p style=\"margin-left:11%;\"><b>-S</b> <i>.suf</i>,\n<b>--suffix=</b><i>.suf</i></p>\n\n<p style=\"margin-left:22%;\">When compressing, use\n<i>.suf</i> as the suffix for the target file instead of\n<b>.xz</b> or <b>.lzma</b>. If not writing to standard\noutput and the source file already has the suffix\n<i>.suf</i>, a warning is displayed and the file is\nskipped.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>When decompressing, recognize files with the suffix\n<i>.suf</i> in addition to files with the <b>.xz</b>,\n<b>.txz</b>, <b>.lzma</b>, or <b>.tlz</b> suffix. If the\nsource file has the suffix <i>.suf</i>, the suffix is\nremoved to get the target filename.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>When compressing or decompressing raw streams\n(<b>--format=raw</b>), the suffix must always be specified\nunless writing to standard output, because there is no\ndefault suffix for raw streams.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>--files</b>[<b>=</b><i>file</i>]</p>\n\n<p style=\"margin-left:22%;\">Read the filenames to process\nfrom <i>file</i>; if <i>file</i> is omitted, filenames are\nread from standard input. Filenames must be terminated with\nthe newline character. A dash (<b>-</b>) is taken as a\nregular filename; it doesn&rsquo;t mean standard input. If\nfilenames are given also as command line arguments, they are\nprocessed before the filenames read from <i>file</i>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--files0</b>[<b>=</b><i>file</i>]</p>\n\n<p style=\"margin-left:22%;\">This is identical to\n<b>--files</b>[<b>=</b><i>file</i>] except that each\nfilename must be terminated with the null character.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Basic file\nformat and compression options <br>\n-F</b> <i>format</i>, <b>--format=</b><i>format</i></p>\n\n<p style=\"margin-left:22%;\">Specify the file <i>format</i>\nto compress or decompress:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"6%\">\n\n\n<p><b>auto</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"68%\">\n\n\n<p>This is the default. When compressing, <b>auto</b> is\nequivalent to <b>xz</b>. When decompressing, the format of\nthe input file is automatically detected. Note that raw\nstreams (created with <b>--format=raw</b>) cannot be\nauto-detected.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"6%\">\n\n\n<p><b>xz</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"68%\">\n\n\n<p>Compress to the <b>.xz</b> file format, or accept only\n<b>.xz</b> files when decompressing.</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%;\"><b>lzma</b>, <b>alone</b></p>\n\n<p style=\"margin-left:32%;\">Compress to the legacy\n<b>.lzma</b> file format, or accept only <b>.lzma</b> files\nwhen decompressing. The alternative name <b>alone</b> is\nprovided for backwards compatibility with LZMA Utils.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p><b>raw</b></p></td>\n<td width=\"6%\"></td>\n<td width=\"68%\">\n\n\n<p>Compress or uncompress a raw stream (no headers). This\nis meant for advanced users only. To decode raw streams, you\nneed use <b>--format=raw</b> and explicitly specify the\nfilter chain, which normally would have been stored in the\ncontainer headers.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-C</b> <i>check</i>,\n<b>--check=</b><i>check</i></p>\n\n<p style=\"margin-left:22%;\">Specify the type of the\nintegrity check. The check is calculated from the\nuncompressed data and stored in the <b>.xz</b> file. This\noption has an effect only when compressing into the\n<b>.xz</b> format; the <b>.lzma</b> format doesn&rsquo;t\nsupport integrity checks. The integrity check (if any) is\nverified when the <b>.xz</b> file is decompressed.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"33%\">\n\n\n<p>Supported <i>check</i> types:</p></td>\n<td width=\"45%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:22%;\"><b>none</b></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"9%\"></td>\n<td width=\"1%\"></td>\n<td width=\"68%\">\n\n\n<p style=\"margin-top: 1em\">Don&rsquo;t calculate an\nintegrity check at all. This is usually a bad idea. This can\nbe useful when integrity of the data is verified by other\nmeans anyway.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"9%\">\n\n\n<p><b>crc32</b></p></td>\n<td width=\"1%\"></td>\n<td width=\"68%\">\n\n\n<p>Calculate CRC32 using the polynomial from IEEE-802.3\n(Ethernet).</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"9%\">\n\n\n<p><b>crc64</b></p></td>\n<td width=\"1%\"></td>\n<td width=\"68%\">\n\n\n<p>Calculate CRC64 using the polynomial from ECMA-182. This\nis the default, since it is slightly better than CRC32 at\ndetecting damaged files and the speed difference is\nnegligible.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"9%\">\n\n\n<p><b>sha256</b></p></td>\n<td width=\"1%\"></td>\n<td width=\"68%\">\n\n\n<p>Calculate SHA-256. This is somewhat slower than CRC32\nand CRC64.</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Integrity of\nthe <b>.xz</b> headers is always verified with CRC32. It is\nnot possible to change or disable it.</p>\n\n<p style=\"margin-left:11%;\"><b>--ignore-check</b></p>\n\n<p style=\"margin-left:22%;\">Don&rsquo;t verify the\nintegrity check of the compressed data when decompressing.\nThe CRC32 values in the <b>.xz</b> headers will still be\nverified normally.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p><b>Do not use this option unless you know what you are\ndoing.</b> Possible reasons to use this option:</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%;\">&bull;</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\"></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p style=\"margin-top: 1em\">Trying to recover data from a\ncorrupt .xz file.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>Speeding up decompression. This matters mostly with\nSHA-256 or with files that have compressed extremely well.\nIt&rsquo;s recommended to not use this option for this\npurpose unless the file integrity is verified externally in\nsome other way.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-0</b> ... <b>-9</b></p>\n\n<p style=\"margin-left:22%;\">Select a compression preset\nlevel. The default is <b>-6</b>. If multiple preset levels\nare specified, the last one takes effect. If a custom filter\nchain was already specified, setting a compression preset\nlevel clears the custom filter chain.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>The differences between the presets are more significant\nthan with <a href=\"https://man.page/1/gzip\">gzip(1)</a> and <a href=\"https://man.page/1/bzip2\">bzip2(1)</a>. The selected\ncompression settings determine the memory requirements of\nthe decompressor, thus using a too high preset level might\nmake it painful to decompress the file on an old system with\nlittle RAM. Specifically, <b>it&rsquo;s not a good idea to\nblindly use -9 for everything</b> like it often is with\n<a href=\"https://man.page/1/gzip\">gzip(1)</a> and <a href=\"https://man.page/1/bzip2\">bzip2(1)</a>.</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%;\"><b>-0</b> ... <b>-3</b></p>\n\n<p style=\"margin-left:32%;\">These are somewhat fast\npresets. <b>-0</b> is sometimes faster than <b>gzip -9</b>\nwhile compressing much better. The higher ones often have\nspeed comparable to <a href=\"https://man.page/1/bzip2\">bzip2(1)</a> with comparable or\nbetter compression ratio, although the results depend a lot\non the type of data being compressed.</p>\n\n<p style=\"margin-left:22%;\"><b>-4</b> ... <b>-6</b></p>\n\n<p style=\"margin-left:32%;\">Good to very good compression\nwhile keeping decompressor memory usage reasonable even for\nold systems. <b>-6</b> is the default, which is usually a\ngood choice for distributing files that need to be\ndecompressible even on systems with only 16&nbsp;MiB RAM.\n(<b>-5e</b> or <b>-6e</b> may be worth considering too. See\n<b>--extreme</b>.)</p>\n\n<p style=\"margin-left:22%;\"><b>-7 ... -9</b></p>\n\n<p style=\"margin-left:32%;\">These are like <b>-6</b> but\nwith higher compressor and decompressor memory requirements.\nThese are useful only when compressing files bigger than\n8&nbsp;MiB, 16&nbsp;MiB, and 32&nbsp;MiB, respectively.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>On the same hardware, the decompression speed is\napproximately a constant number of bytes of compressed data\nper second. In other words, the better the compression, the\nfaster the decompression will usually be. This also means\nthat the amount of uncompressed output produced per second\ncan vary a lot.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>The following table summarises the features of the\npresets:</p> </td></tr>\n</table>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-1383801.png\" alt=\"Image grohtml-1383801.png\"></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"30%\">\n\n\n<p style=\"margin-top: 1em\">Column descriptions:</p></td>\n<td width=\"48%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:22%;\">&bull;</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\"></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p style=\"margin-top: 1em\">DictSize is the LZMA2 dictionary\nsize. It is waste of memory to use a dictionary bigger than\nthe size of the uncompressed file. This is why it is good to\navoid using the presets <b>-7</b> ... <b>-9</b> when\nthere&rsquo;s no real need for them. At <b>-6</b> and lower,\nthe amount of memory wasted is usually low enough to not\nmatter.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>CompCPU is a simplified representation of the LZMA2\nsettings that affect compression speed. The dictionary size\naffects speed too, so while CompCPU is the same for levels\n<b>-6</b> ... <b>-9</b>, higher levels still tend to be a\nlittle slower. To get even slower and thus possibly better\ncompression, see <b>--extreme</b>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>CompMem contains the compressor memory requirements in\nthe single-threaded mode. It may vary slightly between\n<b>xz</b> versions. Memory requirements of some of the\nfuture multithreaded modes may be dramatically higher than\nthat of the single-threaded mode.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>DecMem contains the decompressor memory requirements.\nThat is, the compression settings determine the memory\nrequirements of the decompressor. The exact decompressor\nmemory usage is slightly more than the LZMA2 dictionary\nsize, but the values in the table have been rounded up to\nthe next full MiB.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-e</b>, <b>--extreme</b></p>\n\n<p style=\"margin-left:22%;\">Use a slower variant of the\nselected compression preset level (<b>-0</b> ... <b>-9</b>)\nto hopefully get a little bit better compression ratio, but\nwith bad luck this can also make it worse. Decompressor\nmemory usage is not affected, but compressor memory usage\nincreases a little at preset levels <b>-0</b> ...\n<b>-3</b>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>Since there are two presets with dictionary sizes\n4&nbsp;MiB and 8&nbsp;MiB, the presets <b>-3e</b> and\n<b>-5e</b> use slightly faster settings (lower CompCPU) than\n<b>-4e</b> and <b>-6e</b>, respectively. That way no two\npresets are identical.</p></td></tr>\n</table>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-1383802.png\" alt=\"Image grohtml-1383802.png\"></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n</td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">For example, there are a total\nof four presets that use 8&nbsp;MiB dictionary, whose order\nfrom the fastest to the slowest is <b>-5</b>, <b>-6</b>,\n<b>-5e</b>, and <b>-6e</b>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>--fast</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>--best</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>These are somewhat misleading aliases for <b>-0</b> and\n<b>-9</b>, respectively. These are provided only for\nbackwards compatibility with LZMA Utils. Avoid using these\noptions.</p> </td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>--block-size=</b><i>size</i></p>\n\n<p style=\"margin-left:22%;\">When compressing to the\n<b>.xz</b> format, split the input data into blocks of\n<i>size</i> bytes. The blocks are compressed independently\nfrom each other, which helps with multi-threading and makes\nlimited random-access decompression possible. This option is\ntypically used to override the default block size in\nmulti-threaded mode, but this option can be used in\nsingle-threaded mode too.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>In multi-threaded mode about three times <i>size</i>\nbytes will be allocated in each thread for buffering input\nand output. The default <i>size</i> is three times the LZMA2\ndictionary size or 1 MiB, whichever is more. Typically a\ngood value is 2-4 times the size of the LZMA2 dictionary or\nat least 1 MiB. Using <i>size</i> less than the LZMA2\ndictionary size is waste of RAM because then the LZMA2\ndictionary buffer will never get fully used. The sizes of\nthe blocks are stored in the block headers, which a future\nversion of <b>xz</b> will use for multi-threaded\ndecompression.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>In single-threaded mode no block splitting is done by\ndefault. Setting this option doesn&rsquo;t affect memory\nusage. No size information is stored in block headers, thus\nfiles created in single-threaded mode won&rsquo;t be\nidentical to files created in multi-threaded mode. The lack\nof size information also means that a future version of\n<b>xz</b> won&rsquo;t be able decompress the files in\nmulti-threaded mode.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>--block-list=</b><i>sizes</i></p>\n\n<p style=\"margin-left:22%;\">When compressing to the\n<b>.xz</b> format, start a new block after the given\nintervals of uncompressed data.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>The uncompressed <i>sizes</i> of the blocks are\nspecified as a comma-separated list. Omitting a size (two or\nmore consecutive commas) is a shorthand to use the size of\nthe previous block.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>If the input file is bigger than the sum of\n<i>sizes</i>, the last value in <i>sizes</i> is repeated\nuntil the end of the file. A special value of <b>0</b> may\nbe used as the last value to indicate that the rest of the\nfile should be encoded as a single block.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>If one specifies <i>sizes</i> that exceed the\nencoder&rsquo;s block size (either the default value in\nthreaded mode or the value specified with\n<b>--block-size=</b><i>size</i>), the encoder will create\nadditional blocks while keeping the boundaries specified in\n<i>sizes</i>. For example, if one specifies\n<b>--block-size=10MiB\n--block-list=5MiB,10MiB,8MiB,12MiB,24MiB</b> and the input\nfile is 80 MiB, one will get 11 blocks: 5, 10, 8, 10, 2, 10,\n10, 4, 10, 10, and 1 MiB.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>In multi-threaded mode the sizes of the blocks are\nstored in the block headers. This isn&rsquo;t done in\nsingle-threaded mode, so the encoded output won&rsquo;t be\nidentical to that of the multi-threaded mode.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>--flush-timeout=</b><i>timeout</i></p>\n\n<p style=\"margin-left:22%;\">When compressing, if more than\n<i>timeout</i> milliseconds (a positive integer) has passed\nsince the previous flush and reading more input would block,\nall the pending input data is flushed from the encoder and\nmade available in the output stream. This can be useful if\n<b>xz</b> is used to compress data that is streamed over a\nnetwork. Small <i>timeout</i> values make the data available\nat the receiving end with a small delay, but large\n<i>timeout</i> values give better compression ratio.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>This feature is disabled by default. If this option is\nspecified more than once, the last one takes effect. The\nspecial <i>timeout</i> value of <b>0</b> can be used to\nexplicitly disable this feature.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>This feature is not available on non-POSIX systems.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p><b>This feature is still experimental.</b> Currently\n<b>xz</b> is unsuitable for decompressing the stream in real\ntime due to how <b>xz</b> does buffering.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>--memlimit-compress=</b><i>limit</i></p>\n\n<p style=\"margin-left:22%;\">Set a memory usage limit for\ncompression. If this option is specified multiple times, the\nlast one takes effect.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>If the compression settings exceed the <i>limit</i>,\n<b>xz</b> will adjust the settings downwards so that the\nlimit is no longer exceeded and display a notice that\nautomatic adjustment was done. Such adjustments are not made\nwhen compressing with <b>--format=raw</b> or if\n<b>--no-adjust</b> has been specified. In those cases, an\nerror is displayed and <b>xz</b> will exit with exit status\n1.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>The <i>limit</i> can be specified in multiple ways:</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%;\">&bull;</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\"></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p style=\"margin-top: 1em\">The <i>limit</i> can be an\nabsolute value in bytes. Using an integer suffix like\n<b>MiB</b> can be useful. Example:\n<b>--memlimit-compress=80MiB</b></p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>The <i>limit</i> can be specified as a percentage of\ntotal physical memory (RAM). This can be useful especially\nwhen setting the <b>XZ_DEFAULTS</b> environment variable in\na shell initialization script that is shared between\ndifferent computers. That way the limit is automatically\nbigger on systems with more memory. Example:\n<b>--memlimit-compress=70%</b></p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>The <i>limit</i> can be reset back to its default value\nby setting it to <b>0</b>. This is currently equivalent to\nsetting the <i>limit</i> to <b>max</b> (no memory usage\nlimit). Once multithreading support has been implemented,\nthere may be a difference between <b>0</b> and <b>max</b>\nfor the multithreaded case, so it is recommended to use\n<b>0</b> instead of <b>max</b> until the details have been\ndecided.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">For 32-bit\n<b>xz</b> there is a special case: if the <i>limit</i> would\nbe over <b>4020&nbsp;MiB</b>, the <i>limit</i> is set to\n<b>4020&nbsp;MiB</b>. (The values <b>0</b> and <b>max</b>\naren&rsquo;t affected by this. A similar feature\ndoesn&rsquo;t exist for decompression.) This can be helpful\nwhen a 32-bit executable has access to 4&nbsp;GiB address\nspace while hopefully doing no harm in other situations.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"52%\">\n\n\n<p style=\"margin-top: 1em\">See also the section <b>Memory\nusage</b>.</p> </td>\n<td width=\"26%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>--memlimit-decompress=</b><i>limit</i></p>\n\n<p style=\"margin-left:22%;\">Set a memory usage limit for\ndecompression. This also affects the <b>--list</b> mode. If\nthe operation is not possible without exceeding the\n<i>limit</i>, <b>xz</b> will display an error and\ndecompressing the file will fail. See\n<b>--memlimit-compress=</b><i>limit</i> for possible ways to\nspecify the <i>limit</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>-M</b> <i>limit</i>,\n<b>--memlimit=</b><i>limit</i>,\n<b>--memory=</b><i>limit</i></p>\n\n<p style=\"margin-left:22%;\">This is equivalent to\nspecifying <b>--memlimit-compress=</b><i>limit</i>\n<b>--memlimit-decompress=</b><i>limit</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>--no-adjust</b></p>\n\n<p style=\"margin-left:22%;\">Display an error and exit if\nthe compression settings exceed the memory usage limit. The\ndefault is to adjust the settings downwards so that the\nmemory usage limit is not exceeded. Automatic adjusting is\nalways disabled when creating raw streams\n(<b>--format=raw</b>).</p>\n\n<p style=\"margin-left:11%;\"><b>-T</b> <i>threads</i>,\n<b>--threads=</b><i>threads</i></p>\n\n<p style=\"margin-left:22%;\">Specify the number of worker\nthreads to use. Setting <i>threads</i> to a special value\n<b>0</b> makes <b>xz</b> use as many threads as there are\nCPU cores on the system. The actual number of threads can be\nless than <i>threads</i> if the input file is not big enough\nfor threading with the given settings or if using more\nthreads would exceed the memory usage limit.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>Currently the only threading method is to split the\ninput into blocks and compress them independently from each\nother. The default block size depends on the compression\nlevel and can be overridden with the\n<b>--block-size=</b><i>size</i> option.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>Threaded decompression hasn&rsquo;t been implemented\nyet. It will only work on files that contain multiple blocks\nwith size information in block headers. All files compressed\nin multi-threaded mode meet this condition, but files\ncompressed in single-threaded mode don&rsquo;t even if\n<b>--block-size=</b><i>size</i> is used.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Custom\ncompressor filter chains</b> <br>\nA custom filter chain allows specifying the compression\nsettings in detail instead of relying on the settings\nassociated to the presets. When a custom filter chain is\nspecified, preset options (<b>-0</b> ... <b>-9</b> and\n<b>--extreme</b>) earlier on the command line are forgotten.\nIf a preset option is specified after one or more custom\nfilter chain options, the new preset takes effect and the\ncustom filter chain options specified earlier are\nforgotten.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A filter chain\nis comparable to piping on the command line. When\ncompressing, the uncompressed input goes to the first\nfilter, whose output goes to the next filter (if any). The\noutput of the last filter gets written to the compressed\nfile. The maximum number of filters in the chain is four,\nbut typically a filter chain has only one or two\nfilters.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Many filters\nhave limitations on where they can be in the filter chain:\nsome filters can work only as the last filter in the chain,\nsome only as a non-last filter, and some work in any\nposition in the chain. Depending on the filter, this\nlimitation is either inherent to the filter design or exists\nto prevent security issues.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A custom filter\nchain is specified by using one or more filter options in\nthe order they are wanted in the filter chain. That is, the\norder of filter options is significant! When decoding raw\nstreams (<b>--format=raw</b>), the filter chain is specified\nin the same order as it was specified when compressing.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Filters take\nfilter-specific <i>options</i> as a comma-separated list.\nExtra commas in <i>options</i> are ignored. Every option has\na default value, so you need to specify only those you want\nto change.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To see the\nwhole filter chain and <i>options</i>, use <b>xz -vv</b>\n(that is, use <b>--verbose</b> twice). This works also for\nviewing the filter chain options used by presets. <b><br>\n--lzma1</b>[<b>=</b><i>options</i>] <b><br>\n--lzma2</b>[<b>=</b><i>options</i>]</p>\n\n<p style=\"margin-left:22%;\">Add LZMA1 or LZMA2 filter to\nthe filter chain. These filters can be used only as the last\nfilter in the chain.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>LZMA1 is a legacy filter, which is supported almost\nsolely due to the legacy <b>.lzma</b> file format, which\nsupports only LZMA1. LZMA2 is an updated version of LZMA1 to\nfix some practical issues of LZMA1. The <b>.xz</b> format\nuses LZMA2 and doesn&rsquo;t support LZMA1 at all.\nCompression speed and ratios of LZMA1 and LZMA2 are\npractically the same.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>LZMA1 and LZMA2 share the same set of\n<i>options</i>:</p> </td></tr>\n</table>\n\n\n<p style=\"margin-left:22%;\"><b>preset=</b><i>preset</i></p>\n\n<p style=\"margin-left:32%;\">Reset all LZMA1 or LZMA2\n<i>options</i> to <i>preset</i>. <i>Preset</i> consist of an\ninteger, which may be followed by single-letter preset\nmodifiers. The integer can be from <b>0</b> to <b>9</b>,\nmatching the command line options <b>-0</b> ... <b>-9</b>.\nThe only supported modifier is currently <b>e</b>, which\nmatches <b>--extreme</b>. If no <b>preset</b> is specified,\nthe default values of LZMA1 or LZMA2 <i>options</i> are\ntaken from the preset <b>6</b>.</p>\n\n<p style=\"margin-left:22%;\"><b>dict=</b><i>size</i></p>\n\n<p style=\"margin-left:32%;\">Dictionary (history buffer)\n<i>size</i> indicates how many bytes of the recently\nprocessed uncompressed data is kept in memory. The algorithm\ntries to find repeating byte sequences (matches) in the\nuncompressed data, and replace them with references to the\ndata currently in the dictionary. The bigger the dictionary,\nthe higher is the chance to find a match. Thus, increasing\ndictionary <i>size</i> usually improves compression ratio,\nbut a dictionary bigger than the uncompressed file is waste\nof memory.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>Typical dictionary <i>size</i> is from 64&nbsp;KiB to\n64&nbsp;MiB. The minimum is 4&nbsp;KiB. The maximum for\ncompression is currently 1.5&nbsp;GiB (1536&nbsp;MiB). The\ndecompressor already supports dictionaries up to one byte\nless than 4&nbsp;GiB, which is the maximum for the LZMA1 and\nLZMA2 stream formats.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>Dictionary <i>size</i> and match finder (<i>mf</i>)\ntogether determine the memory usage of the LZMA1 or LZMA2\nencoder. The same (or bigger) dictionary <i>size</i> is\nrequired for decompressing that was used when compressing,\nthus the memory usage of the decoder is determined by the\ndictionary size used when compressing. The <b>.xz</b>\nheaders store the dictionary <i>size</i> either as\n2^<i>n</i> or 2^<i>n</i> + 2^(<i>n</i>-1), so these\n<i>sizes</i> are somewhat preferred for compression. Other\n<i>sizes</i> will get rounded up when stored in the\n<b>.xz</b> headers.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n\n\n<p><b>lc=</b><i>lc</i></p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>Specify the number of literal context bits. The minimum\nis 0 and the maximum is 4; the default is 3. In addition,\nthe sum of <i>lc</i> and <i>lp</i> must not exceed 4.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>All bytes that cannot be encoded as matches are encoded\nas literals. That is, literals are simply 8-bit bytes that\nare encoded one at a time.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>The literal coding makes an assumption that the highest\n<i>lc</i> bits of the previous uncompressed byte correlate\nwith the next byte. For example, in typical English text, an\nupper-case letter is often followed by a lower-case letter,\nand a lower-case letter is usually followed by another\nlower-case letter. In the US-ASCII character set, the\nhighest three bits are 010 for upper-case letters and 011\nfor lower-case letters. When <i>lc</i> is at least 3, the\nliteral coding can take advantage of this property in the\nuncompressed data.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>The default value (3) is usually good. If you want\nmaximum compression, test <b>lc=4</b>. Sometimes it helps a\nlittle, and sometimes it makes compression worse. If it\nmakes it worse, test <b>lc=2</b> too.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n\n\n<p><b>lp=</b><i>lp</i></p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>Specify the number of literal position bits. The minimum\nis 0 and the maximum is 4; the default is 0.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p><i>Lp</i> affects what kind of alignment in the\nuncompressed data is assumed when encoding literals. See\n<i>pb</i> below for more information about alignment.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n\n\n<p><b>pb=</b><i>pb</i></p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>Specify the number of position bits. The minimum is 0\nand the maximum is 4; the default is 2.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p><i>Pb</i> affects what kind of alignment in the\nuncompressed data is assumed in general. The default means\nfour-byte alignment (2^<i>pb</i>=2^2=4), which is often a\ngood choice when there&rsquo;s no better guess.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>When the aligment is known, setting <i>pb</i>\naccordingly may reduce the file size a little. For example,\nwith text files having one-byte alignment (US-ASCII,\nISO-8859-*, UTF-8), setting <b>pb=0</b> can improve\ncompression slightly. For UTF-16 text, <b>pb=1</b> is a good\nchoice. If the alignment is an odd number like 3 bytes,\n<b>pb=0</b> might be the best choice.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>Even though the assumed alignment can be adjusted with\n<i>pb</i> and <i>lp</i>, LZMA1 and LZMA2 still slightly\nfavor 16-byte alignment. It might be worth taking into\naccount when designing file formats that are likely to be\noften compressed with LZMA1 or LZMA2.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n\n\n<p><b>mf=</b><i>mf</i></p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>Match finder has a major effect on encoder speed, memory\nusage, and compression ratio. Usually Hash Chain match\nfinders are faster than Binary Tree match finders. The\ndefault depends on the <i>preset</i>: 0 uses <b>hc3</b>, 1-3\nuse <b>hc4</b>, and the rest use <b>bt4</b>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>The following match finders are supported. The memory\nusage formulas below are rough approximations, which are\nclosest to the reality when <i>dict</i> is a power of\ntwo.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:32%;\"><b>hc3</b></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"43%\"></td>\n<td width=\"57%\">\n\n\n<p style=\"margin-top: 1em\">Hash Chain with 2- and 3-byte\nhashing</p> </td></tr>\n</table>\n\n<p style=\"margin-left:43%;\">Minimum value for <i>nice</i>:\n3 <br>\nMemory usage: <i><br>\ndict</i> * 7.5 (if <i>dict</i> &lt;= 16 MiB); <i><br>\ndict</i> * 5.5 + 64 MiB (if <i>dict</i> &gt; 16 MiB)</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"32%\"></td>\n<td width=\"5%\">\n\n\n<p style=\"margin-top: 1em\"><b>hc4</b></p></td>\n<td width=\"6%\"></td>\n<td width=\"57%\">\n\n\n<p style=\"margin-top: 1em\">Hash Chain with 2-, 3-, and\n4-byte hashing</p></td></tr>\n</table>\n\n<p style=\"margin-left:43%;\">Minimum value for <i>nice</i>:\n4 <br>\nMemory usage: <i><br>\ndict</i> * 7.5 (if <i>dict</i> &lt;= 32 MiB); <i><br>\ndict</i> * 6.5 (if <i>dict</i> &gt; 32 MiB)</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"32%\"></td>\n<td width=\"5%\">\n\n\n<p style=\"margin-top: 1em\"><b>bt2</b></p></td>\n<td width=\"6%\"></td>\n<td width=\"48%\">\n\n\n<p style=\"margin-top: 1em\">Binary Tree with 2-byte\nhashing</p> </td>\n<td width=\"9%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:43%;\">Minimum value for <i>nice</i>:\n2 <br>\nMemory usage: <i>dict</i> * 9.5</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"32%\"></td>\n<td width=\"5%\">\n\n\n<p style=\"margin-top: 1em\"><b>bt3</b></p></td>\n<td width=\"6%\"></td>\n<td width=\"57%\">\n\n\n<p style=\"margin-top: 1em\">Binary Tree with 2- and 3-byte\nhashing</p> </td></tr>\n</table>\n\n<p style=\"margin-left:43%;\">Minimum value for <i>nice</i>:\n3 <br>\nMemory usage: <i><br>\ndict</i> * 11.5 (if <i>dict</i> &lt;= 16 MiB); <i><br>\ndict</i> * 9.5 + 64 MiB (if <i>dict</i> &gt; 16 MiB)</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"32%\"></td>\n<td width=\"5%\">\n\n\n<p style=\"margin-top: 1em\"><b>bt4</b></p></td>\n<td width=\"6%\"></td>\n<td width=\"57%\">\n\n\n<p style=\"margin-top: 1em\">Binary Tree with 2-, 3-, and\n4-byte hashing</p></td></tr>\n</table>\n\n<p style=\"margin-left:43%;\">Minimum value for <i>nice</i>:\n4 <br>\nMemory usage: <i><br>\ndict</i> * 11.5 (if <i>dict</i> &lt;= 32 MiB); <i><br>\ndict</i> * 10.5 (if <i>dict</i> &gt; 32 MiB)</p>\n\n<p style=\"margin-left:22%;\"><b>mode=</b><i>mode</i></p>\n\n<p style=\"margin-left:32%;\">Compression <i>mode</i>\nspecifies the method to analyze the data produced by the\nmatch finder. Supported <i>modes</i> are <b>fast</b> and\n<b>normal</b>. The default is <b>fast</b> for <i>presets</i>\n0-3 and <b>normal</b> for <i>presets</i> 4-9.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"32%\"></td>\n<td width=\"68%\">\n\n\n<p>Usually <b>fast</b> is used with Hash Chain match\nfinders and <b>normal</b> with Binary Tree match finders.\nThis is also what the <i>presets</i> do.</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%;\"><b>nice=</b><i>nice</i></p>\n\n<p style=\"margin-left:32%;\">Specify what is considered to\nbe a nice length for a match. Once a match of at least\n<i>nice</i> bytes is found, the algorithm stops looking for\npossibly better matches.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"32%\"></td>\n<td width=\"68%\">\n\n\n<p><i>Nice</i> can be 2-273 bytes. Higher values tend to\ngive better compression ratio at the expense of speed. The\ndefault depends on the <i>preset</i>.</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%;\"><b>depth=</b><i>depth</i></p>\n\n<p style=\"margin-left:32%;\">Specify the maximum search\ndepth in the match finder. The default is the special value\nof 0, which makes the compressor determine a reasonable\n<i>depth</i> from <i>mf</i> and <i>nice</i>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>Reasonable <i>depth</i> for Hash Chains is 4-100 and\n16-1000 for Binary Trees. Using very high values for\n<i>depth</i> can make the encoder extremely slow with some\nfiles. Avoid setting the <i>depth</i> over 1000 unless you\nare prepared to interrupt the compression in case it is\ntaking far too long.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>When decoding raw streams (<b>--format=raw</b>), LZMA2\nneeds only the dictionary <i>size</i>. LZMA1 needs also\n<i>lc</i>, <i>lp</i>, and <i>pb</i>.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>--x86</b>[<b>=</b><i>options</i>]\n<b><br>\n--powerpc</b>[<b>=</b><i>options</i>] <b><br>\n--ia64</b>[<b>=</b><i>options</i>] <b><br>\n--arm</b>[<b>=</b><i>options</i>] <b><br>\n--armthumb</b>[<b>=</b><i>options</i>] <b><br>\n--sparc</b>[<b>=</b><i>options</i>]</p>\n\n<p style=\"margin-left:22%;\">Add a branch/call/jump (BCJ)\nfilter to the filter chain. These filters can be used only\nas a non-last filter in the filter chain.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>A BCJ filter converts relative addresses in the machine\ncode to their absolute counterparts. This doesn&rsquo;t\nchange the size of the data, but it increases redundancy,\nwhich can help LZMA2 to produce 0-15&nbsp;% smaller\n<b>.xz</b> file. The BCJ filters are always reversible, so\nusing a BCJ filter for wrong type of data doesn&rsquo;t\ncause any data loss, although it may make the compression\nratio slightly worse.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>It is fine to apply a BCJ filter on a whole executable;\nthere&rsquo;s no need to apply it only on the executable\nsection. Applying a BCJ filter on an archive that contains\nboth executable and non-executable files may or may not give\ngood results, so it generally isn&rsquo;t good to blindly\napply a BCJ filter when compressing binary packages for\ndistribution.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>These BCJ filters are very fast and use insignificant\namount of memory. If a BCJ filter improves compression ratio\nof a file, it can improve decompression speed at the same\ntime. This is because, on the same hardware, the\ndecompression speed of LZMA2 is roughly a fixed number of\nbytes of compressed data per second.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>These BCJ filters have known problems related to the\ncompression ratio:</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%;\">&bull;</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\"></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p style=\"margin-top: 1em\">Some types of files containing\nexecutable code (for example, object files, static\nlibraries, and Linux kernel modules) have the addresses in\nthe instructions filled with filler values. These BCJ\nfilters will still do the address conversion, which will\nmake the compression worse with these files.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>Applying a BCJ filter on an archive containing multiple\nsimilar executables can make the compression ratio worse\nthan not using a BCJ filter. This is because the BCJ filter\ndoesn&rsquo;t detect the boundaries of the executable files,\nand doesn&rsquo;t reset the address conversion counter for\neach executable.</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Both of the\nabove problems will be fixed in the future in a new filter.\nThe old BCJ filters will still be useful in embedded\nsystems, because the decoder of the new filter will be\nbigger and use more memory.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">Different instruction sets have\ndifferent alignment:</p></td></tr>\n</table>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-1383803.png\" alt=\"Image grohtml-1383803.png\"></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">Since the BCJ-filtered data is\nusually compressed with LZMA2, the compression ratio may be\nimproved slightly if the LZMA2 options are set to match the\nalignment of the selected BCJ filter. For example, with the\nIA-64 filter, it&rsquo;s good to set <b>pb=4</b> with LZMA2\n(2^4=16). The x86 filter is an exception; it&rsquo;s usually\ngood to stick to LZMA2&rsquo;s default four-byte alignment\nwhen compressing x86 executables.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>All BCJ filters support the same <i>options</i>:</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%;\"><b>start=</b><i>offset</i></p>\n\n<p style=\"margin-left:32%;\">Specify the start <i>offset</i>\nthat is used when converting between relative and absolute\naddresses. The <i>offset</i> must be a multiple of the\nalignment of the filter (see the table above). The default\nis zero. In practice, the default is good; specifying a\ncustom <i>offset</i> is almost never useful.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--delta</b>[<b>=</b><i>options</i>]</p>\n\n<p style=\"margin-left:22%;\">Add the Delta filter to the\nfilter chain. The Delta filter can be only used as a\nnon-last filter in the filter chain.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>Currently only simple byte-wise delta calculation is\nsupported. It can be useful when compressing, for example,\nuncompressed bitmap images or uncompressed PCM audio.\nHowever, special purpose algorithms may give significantly\nbetter results than Delta + LZMA2. This is true especially\nwith audio, which compresses faster and better, for example,\nwith <a href=\"https://man.page/1/flac\">flac(1)</a>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>Supported <i>options</i>:</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:22%;\"><b>dist=</b><i>distance</i></p>\n\n<p style=\"margin-left:32%;\">Specify the <i>distance</i> of\nthe delta calculation in bytes. <i>distance</i> must be\n1-256. The default is 1.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"32%\"></td>\n<td width=\"68%\">\n\n\n<p>For example, with <b>dist=2</b> and eight-byte input A1\nB1 A2 B3 A3 B5 A4 B7, the output will be A1 B1 01 02 01 02\n01 02.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Other\noptions <br>\n-q</b>, <b>--quiet</b></p>\n\n<p style=\"margin-left:22%;\">Suppress warnings and notices.\nSpecify this twice to suppress errors too. This option has\nno effect on the exit status. That is, even if a warning was\nsuppressed, the exit status to indicate a warning is still\nused.</p>\n\n<p style=\"margin-left:11%;\"><b>-v</b>, <b>--verbose</b></p>\n\n<p style=\"margin-left:22%;\">Be verbose. If standard error\nis connected to a terminal, <b>xz</b> will display a\nprogress indicator. Specifying <b>--verbose</b> twice will\ngive even more verbose output.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p>The progress indicator shows the following\ninformation:</p> </td></tr>\n</table>\n\n<p style=\"margin-left:22%;\">&bull;</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\"></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p style=\"margin-top: 1em\">Completion percentage is shown\nif the size of the input file is known. That is, the\npercentage cannot be shown in pipes.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>Amount of compressed data produced (compressing) or\nconsumed (decompressing).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>Amount of uncompressed data consumed (compressing) or\nproduced (decompressing).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>Compression ratio, which is calculated by dividing the\namount of compressed data processed so far by the amount of\nuncompressed data processed so far.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>Compression or decompression speed. This is measured as\nthe amount of uncompressed data consumed (compression) or\nproduced (decompression) per second. It is shown after a few\nseconds have passed since <b>xz</b> started processing the\nfile.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>Elapsed time in the format M:SS or H:MM:SS.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>Estimated remaining time is shown only when the size of\nthe input file is known and a couple of seconds have already\npassed since <b>xz</b> started processing the file. The time\nis shown in a less precise format which never has any\ncolons, for example, 2 min 30 s.</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">When standard\nerror is not a terminal, <b>--verbose</b> will make\n<b>xz</b> print the filename, compressed size, uncompressed\nsize, compression ratio, and possibly also the speed and\nelapsed time on a single line to standard error after\ncompressing or decompressing the file. The speed and elapsed\ntime are included only when the operation took at least a\nfew seconds. If the operation didn&rsquo;t finish, for\nexample, due to user interruption, also the completion\npercentage is printed if the size of the input file is\nknown.</p>\n\n<p style=\"margin-left:11%;\"><b>-Q</b>, <b>--no-warn</b></p>\n\n<p style=\"margin-left:22%;\">Don&rsquo;t set the exit status\nto 2 even if a condition worth a warning was detected. This\noption doesn&rsquo;t affect the verbosity level, thus both\n<b>--quiet</b> and <b>--no-warn</b> have to be used to not\ndisplay warnings and to not alter the exit status.</p>\n\n<p style=\"margin-left:11%;\"><b>--robot</b></p>\n\n<p style=\"margin-left:22%;\">Print messages in a\nmachine-parsable format. This is intended to ease writing\nfrontends that want to use <b>xz</b> instead of liblzma,\nwhich may be the case with various scripts. The output with\nthis option enabled is meant to be stable across <b>xz</b>\nreleases. See the section <b>ROBOT MODE</b> for details.</p>\n\n<p style=\"margin-left:11%;\"><b>--info-memory</b></p>\n\n<p style=\"margin-left:22%;\">Display, in human-readable\nformat, how much physical memory (RAM) <b>xz</b> thinks the\nsystem has and the memory usage limits for compression and\ndecompression, and exit successfully.</p>\n\n<p style=\"margin-left:11%;\"><b>-h</b>, <b>--help</b></p>\n\n<p style=\"margin-left:22%;\">Display a help message\ndescribing the most commonly used options, and exit\nsuccessfully.</p>\n\n<p style=\"margin-left:11%;\"><b>-H</b>,\n<b>--long-help</b></p>\n\n<p style=\"margin-left:22%;\">Display a help message\ndescribing all features of <b>xz</b>, and exit\nsuccessfully</p>\n\n<p style=\"margin-left:11%;\"><b>-V</b>, <b>--version</b></p>\n\n<p style=\"margin-left:22%;\">Display the version number of\n<b>xz</b> and liblzma in human readable format. To get\nmachine-parsable output, specify <b>--robot</b> before\n<b>--version</b>.</p>\n\n<h2>ROBOT MODE\n<a name=\"ROBOT MODE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The robot mode\nis activated with the <b>--robot</b> option. It makes the\noutput of <b>xz</b> easier to parse by other programs.\nCurrently <b>--robot</b> is supported only together with\n<b>--version</b>, <b>--info-memory</b>, and <b>--list</b>.\nIt will be supported for compression and decompression in\nthe future.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version <br>\nxz --robot --version</b> will print the version number of\n<b>xz</b> and liblzma in the following format:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>XZ_VERSION=</b><i>XYYYZZZS</i>\n<b><br>\nLIBLZMA_VERSION=</b><i>XYYYZZZS</i></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><i>X</i></p></td>\n<td width=\"7%\"></td>\n<td width=\"78%\">\n\n\n<p>Major version.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><i>YYY</i></p></td>\n<td width=\"7%\"></td>\n<td width=\"78%\">\n\n\n<p>Minor version. Even numbers are stable. Odd numbers are\nalpha or beta versions.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><i>ZZZ</i></p></td>\n<td width=\"7%\"></td>\n<td width=\"78%\">\n\n\n<p>Patch level for stable releases or just a counter for\ndevelopment releases.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><i>S</i></p></td>\n<td width=\"7%\"></td>\n<td width=\"78%\">\n\n\n<p>Stability. 0 is alpha, 1 is beta, and 2 is stable.\n<i>S</i> should be always 2 when <i>YYY</i> is even.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>XYYYZZZS</i>\nare the same on both lines if <b>xz</b> and liblzma are from\nthe same XZ Utils release.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Examples:\n4.999.9beta is <b>49990091</b> and 5.0.0 is\n<b>50000002</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Memory limit\ninformation <br>\nxz --robot --info-memory</b> prints a single line with three\ntab-separated columns:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\">1.</p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">Total amount of physical memory\n(RAM) in bytes</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>2.</p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>Memory usage limit for compression in bytes. A special\nvalue of zero indicates the default setting, which for\nsingle-threaded mode is the same as no limit.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>3.</p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>Memory usage limit for decompression in bytes. A special\nvalue of zero indicates the default setting, which for\nsingle-threaded mode is the same as no limit.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the future,\nthe output of <b>xz --robot --info-memory</b> may have more\ncolumns, but never more than a single line.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>List mode\n<br>\nxz --robot --list</b> uses tab-separated output. The first\ncolumn of every line has a string that indicates the type of\nthe information found on that line:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>name</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">This is always the first line\nwhen starting to list a file. The second column on the line\nis the filename.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>file</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>This line contains overall information about the\n<b>.xz</b> file. This line is always printed after the\n<b>name</b> line.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>stream</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>This line type is used only when <b>--verbose</b> was\nspecified. There are as many <b>stream</b> lines as there\nare streams in the <b>.xz</b> file.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>block</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>This line type is used only when <b>--verbose</b> was\nspecified. There are as many <b>block</b> lines as there are\nblocks in the <b>.xz</b> file. The <b>block</b> lines are\nshown after all the <b>stream</b> lines; different line\ntypes are not interleaved.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>summary</b></p>\n\n<p style=\"margin-left:22%;\">This line type is used only\nwhen <b>--verbose</b> was specified twice. This line is\nprinted after all <b>block</b> lines. Like the <b>file</b>\nline, the <b>summary</b> line contains overall information\nabout the <b>.xz</b> file.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>totals</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>This line is always the very last line of the list\noutput. It shows the total counts and sizes.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The columns of\nthe <b>file</b> lines:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\">2.</p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p style=\"margin-top: 1em\">Number of streams in the\nfile</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>3.</p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p>Total number of blocks in the stream(s)</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>4.</p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p>Compressed size of the file</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>5.</p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p>Uncompressed size of the file</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>6.</p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p>Compression ratio, for example, <b>0.123</b>. If ratio\nis over 9.999, three dashes (<b>---</b>) are displayed\ninstead of the ratio.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>7.</p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p>Comma-separated list of integrity check names. The\nfollowing strings are used for the known check types:\n<b>None</b>, <b>CRC32</b>, <b>CRC64</b>, and <b>SHA-256</b>.\nFor unknown check types, <b>Unknown-</b><i>N</i> is used,\nwhere <i>N</i> is the Check ID as a decimal number (one or\ntwo digits).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>8.</p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p>Total size of stream padding in the file</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The columns of\nthe <b>stream</b> lines:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p style=\"margin-top: 1em\">2.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p style=\"margin-top: 1em\">Stream number (the first stream\nis 1)</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>3.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Number of blocks in the stream</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>4.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Compressed start offset</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>5.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Uncompressed start offset</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>6.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Compressed size (does not include stream padding)</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>7.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Uncompressed size</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>8.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Compression ratio</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>9.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Name of the integrity check</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>10.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Size of stream padding</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The columns of\nthe <b>block</b> lines:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p style=\"margin-top: 1em\">2.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p style=\"margin-top: 1em\">Number of the stream containing\nthis block</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>3.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Block number relative to the beginning of the stream\n(the first block is 1)</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>4.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Block number relative to the beginning of the file</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>5.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Compressed start offset relative to the beginning of the\nfile</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>6.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Uncompressed start offset relative to the beginning of\nthe file</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>7.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Total compressed size of the block (includes\nheaders)</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>8.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Uncompressed size</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>9.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Compression ratio</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>10.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Name of the integrity check</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<b>--verbose</b> was specified twice, additional columns are\nincluded on the <b>block</b> lines. These are not displayed\nwith a single <b>--verbose</b>, because getting this\ninformation requires many seeks and can thus be slow:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p style=\"margin-top: 1em\">11.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p style=\"margin-top: 1em\">Value of the integrity check in\nhexadecimal</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>12.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Block header size</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>13.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Block flags: <b>c</b> indicates that compressed size is\npresent, and <b>u</b> indicates that uncompressed size is\npresent. If the flag is not set, a dash (<b>-</b>) is shown\ninstead to keep the string length fixed. New flags may be\nadded to the end of the string in the future.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>14.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Size of the actual compressed data in the block (this\nexcludes the block header, block padding, and check\nfields)</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>15.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Amount of memory (in bytes) required to decompress this\nblock with this <b>xz</b> version</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>16.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Filter chain. Note that most of the options used at\ncompression time cannot be known, because only the options\nthat are needed for decompression are stored in the\n<b>.xz</b> headers.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The columns of\nthe <b>summary</b> lines:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\">2.</p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p style=\"margin-top: 1em\">Amount of memory (in bytes)\nrequired to decompress this file with this <b>xz</b>\nversion</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>3.</p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p><b>yes</b> or <b>no</b> indicating if all block headers\nhave both compressed size and uncompressed size stored in\nthem</p> </td></tr>\n</table>\n\n<p style=\"margin-left:22%;\"><i>Since</i> <b>xz</b>\n<i>5.1.2alpha:</i></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\">4.</p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p style=\"margin-top: 1em\">Minimum <b>xz</b> version\nrequired to decompress the file</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The columns of\nthe <b>totals</b> line:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\">2.</p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p style=\"margin-top: 1em\">Number of streams</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>3.</p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p>Number of blocks</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>4.</p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p>Compressed size</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>5.</p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p>Uncompressed size</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>6.</p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p>Average compression ratio</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>7.</p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p>Comma-separated list of integrity check names that were\npresent in the files</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>8.</p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p>Stream padding size</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>9.</p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p>Number of files. This is here to keep the order of the\nearlier columns the same as on <b>file</b> lines.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<b>--verbose</b> was specified twice, additional columns are\nincluded on the <b>totals</b> line:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p style=\"margin-top: 1em\">10.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p style=\"margin-top: 1em\">Maximum amount of memory (in\nbytes) required to decompress the files with this <b>xz</b>\nversion</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>11.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p><b>yes</b> or <b>no</b> indicating if all block headers\nhave both compressed size and uncompressed size stored in\nthem</p> </td></tr>\n</table>\n\n<p style=\"margin-left:22%;\"><i>Since</i> <b>xz</b>\n<i>5.1.2alpha:</i></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p style=\"margin-top: 1em\">12.</p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p style=\"margin-top: 1em\">Minimum <b>xz</b> version\nrequired to decompress the file</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Future versions\nmay add new line types and new columns can be added to the\nexisting line types, but the existing columns won&rsquo;t be\nchanged.</p>\n\n<h2>EXIT STATUS\n<a name=\"EXIT STATUS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\"><b>0</b></p></td>\n<td width=\"10%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">All is good.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p><b>1</b></p></td>\n<td width=\"10%\"></td>\n<td width=\"78%\">\n\n\n<p>An error occurred.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p><b>2</b></p></td>\n<td width=\"10%\"></td>\n<td width=\"78%\">\n\n\n<p>Something worth a warning occurred, but no actual errors\noccurred.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Notices (not\nwarnings or errors) printed on standard error don&rsquo;t\naffect the exit status.</p>\n\n<h2>ENVIRONMENT\n<a name=\"ENVIRONMENT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>xz</b>\nparses space-separated lists of options from the environment\nvariables <b>XZ_DEFAULTS</b> and <b>XZ_OPT</b>, in this\norder, before parsing the options from the command line.\nNote that only options are parsed from the environment\nvariables; all non-options are silently ignored. Parsing is\ndone with <a href=\"https://man.page/3/getopt_long\">getopt_long(3)</a> which is used also for the\ncommand line arguments. <b><br>\nXZ_DEFAULTS</b></p>\n\n<p style=\"margin-left:22%;\">User-specific or system-wide\ndefault options. Typically this is set in a shell\ninitialization script to enable <b>xz</b>&rsquo;s memory\nusage limiter by default. Excluding shell initialization\nscripts and similar special cases, scripts must never set or\nunset <b>XZ_DEFAULTS</b>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>XZ_OPT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>This is for passing options to <b>xz</b> when it is not\npossible to set the options directly on the <b>xz</b>\ncommand line. This is the case when <b>xz</b> is run by a\nscript or tool, for example, GNU <a href=\"https://man.page/1/tar\">tar(1)</a>:</p></td></tr>\n</table>\n\n<p style=\"margin-left:32%; margin-top: 1em\">XZ_OPT=-2v tar\ncaf foo.tar.xz foo</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">Scripts may use <b>XZ_OPT</b>,\nfor example, to set script-specific default compression\noptions. It is still recommended to allow users to override\n<b>XZ_OPT</b> if that is reasonable. For example, in\n<a href=\"https://man.page/1/sh\">sh(1)</a> scripts one may use something like this:</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:32%; margin-top: 1em\">XZ_OPT=${XZ_OPT-&quot;-7e&quot;}\n<br>\nexport XZ_OPT</p>\n\n<h2>LZMA UTILS COMPATIBILITY\n<a name=\"LZMA UTILS COMPATIBILITY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The command\nline syntax of <b>xz</b> is practically a superset of\n<b>lzma</b>, <b>unlzma</b>, and <b>lzcat</b> as found from\nLZMA Utils 4.32.x. In most cases, it is possible to replace\nLZMA Utils with XZ Utils without breaking existing scripts.\nThere are some incompatibilities though, which may sometimes\ncause problems.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Compression\npreset levels</b> <br>\nThe numbering of the compression level presets is not\nidentical in <b>xz</b> and LZMA Utils. The most important\ndifference is how dictionary sizes are mapped to different\npresets. Dictionary size is roughly equal to the\ndecompressor memory usage.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-1383804.png\" alt=\"Image grohtml-1383804.png\"></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The dictionary\nsize differences affect the compressor memory usage too, but\nthere are some other differences between LZMA Utils and XZ\nUtils, which make the difference even bigger:</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-1383805.png\" alt=\"Image grohtml-1383805.png\"></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The default\npreset level in LZMA Utils is <b>-7</b> while in XZ Utils it\nis <b>-6</b>, so both use an 8 MiB dictionary by\ndefault.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Streamed vs.\nnon-streamed .lzma files</b> <br>\nThe uncompressed size of the file can be stored in the\n<b>.lzma</b> header. LZMA Utils does that when compressing\nregular files. The alternative is to mark that uncompressed\nsize is unknown and use end-of-payload marker to indicate\nwhere the decompressor should stop. LZMA Utils uses this\nmethod when uncompressed size isn&rsquo;t known, which is\nthe case, for example, in pipes.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>xz</b>\nsupports decompressing <b>.lzma</b> files with or without\nend-of-payload marker, but all <b>.lzma</b> files created by\n<b>xz</b> will use end-of-payload marker and have\nuncompressed size marked as unknown in the <b>.lzma</b>\nheader. This may be a problem in some uncommon situations.\nFor example, a <b>.lzma</b> decompressor in an embedded\ndevice might work only with files that have known\nuncompressed size. If you hit this problem, you need to use\nLZMA Utils or LZMA SDK to create <b>.lzma</b> files with\nknown uncompressed size.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Unsupported\n.lzma files</b> <br>\nThe <b>.lzma</b> format allows <i>lc</i> values up to 8, and\n<i>lp</i> values up to 4. LZMA Utils can decompress files\nwith any <i>lc</i> and <i>lp</i>, but always creates files\nwith <b>lc=3</b> and <b>lp=0</b>. Creating files with other\n<i>lc</i> and <i>lp</i> is possible with <b>xz</b> and with\nLZMA SDK.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nimplementation of the LZMA1 filter in liblzma requires that\nthe sum of <i>lc</i> and <i>lp</i> must not exceed 4. Thus,\n<b>.lzma</b> files, which exceed this limitation, cannot be\ndecompressed with <b>xz</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">LZMA Utils\ncreates only <b>.lzma</b> files which have a dictionary size\nof 2^<i>n</i> (a power of 2) but accepts files with any\ndictionary size. liblzma accepts only <b>.lzma</b> files\nwhich have a dictionary size of 2^<i>n</i> or 2^<i>n</i> +\n2^(<i>n</i>-1). This is to decrease false positives when\ndetecting <b>.lzma</b> files.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">These\nlimitations shouldn&rsquo;t be a problem in practice, since\npractically all <b>.lzma</b> files have been compressed with\nsettings that liblzma will accept.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Trailing\ngarbage</b> <br>\nWhen decompressing, LZMA Utils silently ignore everything\nafter the first <b>.lzma</b> stream. In most situations,\nthis is a bug. This also means that LZMA Utils don&rsquo;t\nsupport decompressing concatenated <b>.lzma</b> files.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If there is\ndata left after the first <b>.lzma</b> stream, <b>xz</b>\nconsiders the file to be corrupt unless\n<b>--single-stream</b> was used. This may break obscure\nscripts which have assumed that trailing garbage is\nignored.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Compressed\noutput may vary</b> <br>\nThe exact compressed output produced from the same\nuncompressed input file may vary between XZ Utils versions\neven if compression options are identical. This is because\nthe encoder can be improved (faster or better compression)\nwithout affecting the file format. The output can vary even\nbetween different builds of the same XZ Utils version, if\ndifferent build options are used.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The above means\nthat once <b>--rsyncable</b> has been implemented, the\nresulting files won&rsquo;t necessarily be rsyncable unless\nboth old and new files have been compressed with the same xz\nversion. This problem can be fixed if a part of the encoder\nimplementation is frozen to keep rsyncable output stable\nacross xz versions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Embedded .xz\ndecompressors</b> <br>\nEmbedded <b>.xz</b> decompressor implementations like XZ\nEmbedded don&rsquo;t necessarily support files created with\nintegrity <i>check</i> types other than <b>none</b> and\n<b>crc32</b>. Since the default is <b>--check=crc64</b>, you\nmust use <b>--check=none</b> or <b>--check=crc32</b> when\ncreating files for embedded systems.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Outside\nembedded systems, all <b>.xz</b> format decompressors\nsupport all the <i>check</i> types, or at least are able to\ndecompress the file without verifying the integrity check if\nthe particular <i>check</i> is not supported.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">XZ Embedded\nsupports BCJ filters, but only with the default start\noffset.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Basics</b>\n<br>\nCompress the file <i>foo</i> into <i>foo.xz</i> using the\ndefault compression level (<b>-6</b>), and remove <i>foo</i>\nif compression is successful:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">xz foo</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Decompress\n<i>bar.xz</i> into <i>bar</i> and don&rsquo;t remove\n<i>bar.xz</i> even if decompression is successful:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">xz -dk\nbar.xz</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Create\n<i>baz.tar.xz</i> with the preset <b>-4e</b> (<b>-4\n--extreme</b>), which is slower than the default <b>-6</b>,\nbut needs less memory for compression and decompression\n(48&nbsp;MiB and 5&nbsp;MiB, respectively):</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">tar cf - baz |\nxz -4e &gt; baz.tar.xz</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A mix of\ncompressed and uncompressed files can be decompressed to\nstandard output with a single command:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">xz -dcf a.txt\nb.txt.xz c.txt d.txt.lzma &gt; abcd.txt</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Parallel\ncompression of many files</b> <br>\nOn GNU and *BSD, <a href=\"https://man.page/1/find\">find(1)</a> and <a href=\"https://man.page/1/xargs\">xargs(1)</a> can be\nused to parallelize compression of many files:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">find . -type f\n\\! -name &rsquo;*.xz&rsquo; -print0 \\ <br>\n| xargs -0r -P4 -n16 xz -T1</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <b>-P</b>\noption to <a href=\"https://man.page/1/xargs\">xargs(1)</a> sets the number of parallel\n<b>xz</b> processes. The best value for the <b>-n</b> option\ndepends on how many files there are to be compressed. If\nthere are only a couple of files, the value should probably\nbe 1; with tens of thousands of files, 100 or even more may\nbe appropriate to reduce the number of <b>xz</b> processes\nthat <a href=\"https://man.page/1/xargs\">xargs(1)</a> will eventually create.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The option\n<b>-T1</b> for <b>xz</b> is there to force it to\nsingle-threaded mode, because <a href=\"https://man.page/1/xargs\">xargs(1)</a> is used to\ncontrol the amount of parallelization.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Robot\nmode</b> <br>\nCalculate how many bytes have been saved in total after\ncompressing multiple files:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">xz --robot\n--list *.xz | awk &rsquo;/^totals/{print $5-$4}&rsquo;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A script may\nwant to know that it is using new enough <b>xz</b>. The\nfollowing <a href=\"https://man.page/1/sh\">sh(1)</a> script checks that the version number\nof the <b>xz</b> tool is at least 5.0.0. This method is\ncompatible with old beta versions, which didn&rsquo;t\nsupport the <b>--robot</b> option:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">if ! eval\n&quot;$(xz --robot --version 2&gt; /dev/null)&quot; || <br>\n[ &quot;$XZ_VERSION&quot; -lt 50000002 ]; then <br>\necho &quot;Your xz is too old.&quot; <br>\nfi <br>\nunset XZ_VERSION LIBLZMA_VERSION</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Set a memory\nusage limit for decompression using <b>XZ_OPT</b>, but if a\nlimit has already been set, don&rsquo;t increase it:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">NEWLIM=$((123\n&lt;&lt; 20))&nbsp;&nbsp;# 123 MiB <br>\nOLDLIM=$(xz --robot --info-memory | cut -f3) <br>\nif [ $OLDLIM -eq 0 -o $OLDLIM -gt $NEWLIM ]; then <br>\nXZ_OPT=&quot;$XZ_OPT --memlimit-decompress=$NEWLIM&quot;\n<br>\nexport XZ_OPT <br>\nfi</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Custom\ncompressor filter chains</b> <br>\nThe simplest use for custom filter chains is customizing a\nLZMA2 preset. This can be useful, because the presets cover\nonly a subset of the potentially useful combinations of\ncompression settings.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The CompCPU\ncolumns of the tables from the descriptions of the options\n<b>-0</b> ... <b>-9</b> and <b>--extreme</b> are useful when\ncustomizing LZMA2 presets. Here are the relevant parts\ncollected from those two tables:</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-1383806.png\" alt=\"Image grohtml-1383806.png\"></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If you know\nthat a file requires somewhat big dictionary (for example,\n32&nbsp;MiB) to compress well, but you want to compress it\nquicker than <b>xz -8</b> would do, a preset with a low\nCompCPU value (for example, 1) can be modified to use a\nbigger dictionary:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">xz\n--lzma2=preset=1,dict=32MiB foo.tar</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">With certain\nfiles, the above command may be faster than <b>xz -6</b>\nwhile compressing significantly better. However, it must be\nemphasized that only some files benefit from a big\ndictionary while keeping the CompCPU value low. The most\nobvious situation, where a big dictionary can help a lot, is\nan archive containing very similar files of at least a few\nmegabytes each. The dictionary size has to be significantly\nbigger than any individual file to allow LZMA2 to take full\nadvantage of the similarities between consecutive files.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If very high\ncompressor and decompressor memory usage is fine, and the\nfile being compressed is at least several hundred megabytes,\nit may be useful to use an even bigger dictionary than the\n64 MiB that <b>xz -9</b> would use:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">xz -vv\n--lzma2=dict=192MiB big_foo.tar</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Using\n<b>-vv</b> (<b>--verbose --verbose</b>) like in the above\nexample can be useful to see the memory requirements of the\ncompressor and decompressor. Remember that using a\ndictionary bigger than the size of the uncompressed file is\nwaste of memory, so the above command isn&rsquo;t useful for\nsmall files.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Sometimes the\ncompression time doesn&rsquo;t matter, but the decompressor\nmemory usage has to be kept low, for example, to make it\npossible to decompress the file on an embedded system. The\nfollowing command uses <b>-6e</b> (<b>-6 --extreme</b>) as a\nbase and sets the dictionary to only 64&nbsp;KiB. The\nresulting file can be decompressed with XZ Embedded\n(that&rsquo;s why there is <b>--check=crc32</b>) using about\n100&nbsp;KiB of memory.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">xz\n--check=crc32 --lzma2=preset=6e,dict=64KiB foo</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If you want to\nsqueeze out as many bytes as possible, adjusting the number\nof literal context bits (<i>lc</i>) and number of position\nbits (<i>pb</i>) can sometimes help. Adjusting the number of\nliteral position bits (<i>lp</i>) might help too, but\nusually <i>lc</i> and <i>pb</i> are more important. For\nexample, a source code archive contains mostly US-ASCII\ntext, so something like the following might give slightly\n(like 0.1&nbsp;%) smaller file than <b>xz -6e</b> (try also\nwithout <b>lc=4</b>):</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">xz\n--lzma2=preset=6e,pb=0,lc=4 source_code.tar</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Using another\nfilter together with LZMA2 can improve compression with\ncertain file types. For example, to compress a x86-32 or\nx86-64 shared library using the x86 BCJ filter:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">xz --x86\n--lzma2 libfoo.so</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that the\norder of the filter options is significant. If <b>--x86</b>\nis specified after <b>--lzma2</b>, <b>xz</b> will give an\nerror, because there cannot be any filter after LZMA2, and\nalso because the x86 BCJ filter cannot be used as the last\nfilter in the chain.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The Delta\nfilter together with LZMA2 can give good results with bitmap\nimages. It should usually beat PNG, which has a few more\nadvanced filters than simple delta but uses Deflate for the\nactual compression.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The image has\nto be saved in uncompressed format, for example, as\nuncompressed TIFF. The distance parameter of the Delta\nfilter is set to match the number of bytes per pixel in the\nimage. For example, 24-bit RGB bitmap needs <b>dist=3</b>,\nand it is also good to pass <b>pb=0</b> to LZMA2 to\naccommodate the three-byte alignment:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">xz\n--delta=dist=3 --lzma2=pb=0 foo.tiff</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If multiple\nimages have been put into a single archive (for example,\n<b>.tar</b>), the Delta filter will work on that too as long\nas all images have the same number of bytes per pixel.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/xzdec\">xzdec(1)</a>,\n<a href=\"https://man.page/1/xzdiff\">xzdiff(1)</a>, <a href=\"https://man.page/1/xzgrep\">xzgrep(1)</a>, <a href=\"https://man.page/1/xzless\">xzless(1)</a>,\n<a href=\"https://man.page/1/xzmore\">xzmore(1)</a>, <a href=\"https://man.page/1/gzip\">gzip(1)</a>, <a href=\"https://man.page/1/bzip2\">bzip2(1)</a>,\n<a href=\"https://man.page/1/7z\">7z(1)</a></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">XZ Utils:\n&lt;https://tukaani.org/xz/&gt; <br>\nXZ Embedded: &lt;https://tukaani.org/xz/embedded.html&gt;\n<br>\nLZMA SDK: &lt;http://7-zip.org/sdk.html&gt;</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#COMMAND ALIASES\">COMMAND ALIASES</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#ROBOT MODE\">ROBOT MODE</a>","<a href=\"#EXIT STATUS\">EXIT STATUS</a>","<a href=\"#ENVIRONMENT\">ENVIRONMENT</a>","<a href=\"#LZMA UTILS COMPATIBILITY\">LZMA UTILS COMPATIBILITY</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"]}