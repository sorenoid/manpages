{"name":"git-log","description":"git-log - Show\ncommit logs","body":"\n\n<h1 align=\"center\">GIT-LOG</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">git-log - Show\ncommit logs</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>git log</i>\n[&lt;options&gt;] [&lt;revision range&gt;] [[--]\n&lt;path&gt;...]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Shows the\ncommit logs.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">List commits\nthat are reachable by following the <b>parent</b> links from\nthe given commit(s), but exclude commits that are reachable\nfrom the one(s) given with a <i>^</i> in front of them. The\noutput is given in reverse chronological order by\ndefault.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">You can think\nof this as a set operation. Commits reachable from any of\nthe commits given on the command line form a set, and then\ncommits reachable from any of the ones given with <i>^</i>\nin front are subtracted from that set. The remaining commits\nare what comes out in the command&rsquo;s output. Various\nother options and paths parameters can be used to further\nlimit the result.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Thus, the\nfollowing command:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git log foo\nbar ^baz</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">means\n&quot;list all the commits which are reachable from\n<i>foo</i> or <i>bar</i>, but not from <i>baz</i>&quot;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A special\nnotation\n&quot;<i>&lt;commit1&gt;</i>..<i>&lt;commit2&gt;</i>&quot;\ncan be used as a short-hand for &quot;^<i>&lt;commit1&gt;\n&lt;commit2&gt;</i>&quot;. For example, either of the\nfollowing may be used interchangeably:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git log\norigin..HEAD <br>\n$ git log HEAD ^origin</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Another special\nnotation is\n&quot;<i>&lt;commit1&gt;</i>...<i>&lt;commit2&gt;</i>&quot;\nwhich is useful for merges. The resulting set of commits is\nthe symmetric difference between the two operands. The\nfollowing two commands are equivalent:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git log A B\n--not $(git merge-base --all A B) <br>\n$ git log A...B</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The command\ntakes options applicable to the <a href=\"https://man.page/1/git-rev-list\">git-rev-list(1)</a>\ncommand to control what is shown and how, and options\napplicable to the <a href=\"https://man.page/1/git-diff\">git-diff(1)</a> command to control how\nthe changes each commit introduces are shown.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--follow</p>\n\n<p style=\"margin-left:17%;\">Continue listing the history of\na file beyond renames (works only for a single file).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--no-decorate,\n--decorate[=short|full|auto|no]</p>\n\n<p style=\"margin-left:17%;\">Print out the ref names of any\ncommits that are shown. If <i>short</i> is specified, the\nref name prefixes <i>refs/heads/</i>, <i>refs/tags/</i> and\n<i>refs/remotes/</i> will not be printed. If <i>full</i> is\nspecified, the full ref name (including prefix) will be\nprinted. If <i>auto</i> is specified, then if the output is\ngoing to a terminal, the ref names are shown as if\n<i>short</i> were given, otherwise no ref names are shown.\nThe option <b>--decorate</b> is short-hand for\n<b>--decorate=short</b>. Default to configuration value of\n<b>log.decorate</b> if configured, otherwise,\n<b>auto</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--decorate-refs=&lt;pattern&gt;,\n--decorate-refs-exclude=&lt;pattern&gt;</p>\n\n<p style=\"margin-left:17%;\">If no <b>--decorate-refs</b> is\ngiven, pretend as if all refs were included. For each\ncandidate, do not use it for decoration if it matches any\npatterns given to <b>--decorate-refs-exclude</b> or if it\ndoesn&rsquo;t match any of the patterns given to\n<b>--decorate-refs</b>. The <b>log.excludeDecoration</b>\nconfig option allows excluding refs from the decorations,\nbut an explicit <b>--decorate-refs</b> pattern will override\na match in <b>log.excludeDecoration</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--source</p>\n\n<p style=\"margin-left:17%;\">Print out the ref name given on\nthe command line by which each commit was reached.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--[no-]mailmap,\n--[no-]use-mailmap</p>\n\n<p style=\"margin-left:17%;\">Use mailmap file to map author\nand committer names and email addresses to canonical real\nnames and email addresses. See <a href=\"https://man.page/1/git-shortlog\">git-shortlog(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--full-diff</p>\n\n<p style=\"margin-left:17%;\">Without this flag, <b>git log\n-p &lt;path&gt;...</b> shows commits that touch the\nspecified paths, and diffs about the same specified paths.\nWith this, the full diff is shown for commits that touch the\nspecified paths; this means that &quot;&lt;path&gt;...&quot;\nlimits only commits, and doesn&rsquo;t limit diff for those\ncommits.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that this\naffects all diff-based output types, e.g. those produced by\n<b>--stat</b>, etc.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--log-size</p>\n\n<p style=\"margin-left:17%;\">Include a line &ldquo;log size\n&lt;number&gt;&rdquo; in the output for each commit, where\n&lt;number&gt; is the length of that commit&rsquo;s message\nin bytes. Intended to speed up tools that read log messages\nfrom <b>git log</b> output by allowing them to allocate\nspace in advance.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">-L&lt;start&gt;,&lt;end&gt;:&lt;file&gt;,\n-L:&lt;funcname&gt;:&lt;file&gt;</p>\n\n<p style=\"margin-left:17%;\">Trace the evolution of the line\nrange given by <i>&lt;start&gt;,&lt;end&gt;</i>, or by the\nfunction name regex <i>&lt;funcname&gt;</i>, within the\n<i>&lt;file&gt;</i>. You may not give any pathspec limiters.\nThis is currently limited to a walk starting from a single\nrevision, i.e., you may only give zero or one positive\nrevision arguments, and <i>&lt;start&gt;</i> and\n<i>&lt;end&gt;</i> (or <i>&lt;funcname&gt;</i>) must exist\nin the starting revision. You can specify this option more\nthan once. Implies <b>--patch</b>. Patch output can be\nsuppressed using <b>--no-patch</b>, but other diff formats\n(namely <b>--raw</b>, <b>--numstat</b>, <b>--shortstat</b>,\n<b>--dirstat</b>, <b>--summary</b>, <b>--name-only</b>,\n<b>--name-status</b>, <b>--check</b>) are not currently\nimplemented.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><i>&lt;start&gt;</i>\nand <i>&lt;end&gt;</i> can take one of these forms:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nnumber</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">If\n<i>&lt;start&gt;</i> or <i>&lt;end&gt;</i> is a number, it\nspecifies an absolute line number (lines count from 1).</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<b>/regex/</b></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">This form will\nuse the first line matching the given POSIX regex. If\n<i>&lt;start&gt;</i> is a regex, it will search from the end\nof the previous <b>-L</b> range, if any, otherwise from the\nstart of file. If <i>&lt;start&gt;</i> is <b>^/regex/</b>,\nit will search from the start of file. If <i>&lt;end&gt;</i>\nis a regex, it will search starting at the line given by\n<i>&lt;start&gt;</i>.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull; +offset\nor -offset</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">This is only\nvalid for <i>&lt;end&gt;</i> and will specify a number of\nlines before or after the line given by\n<i>&lt;start&gt;</i>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If\n<b>:&lt;funcname&gt;</b> is given in place of\n<i>&lt;start&gt;</i> and <i>&lt;end&gt;</i>, it is a regular\nexpression that denotes the range from the first funcname\nline that matches <i>&lt;funcname&gt;</i>, up to the next\nfuncname line. <b>:&lt;funcname&gt;</b> searches from the\nend of the previous <b>-L</b> range, if any, otherwise from\nthe start of file. <b>^:&lt;funcname&gt;</b> searches from\nthe start of file. The function names are determined in the\nsame way as <b>git diff</b> works out patch hunk headers\n(see <i>Defining a custom hunk-header</i> in\n<a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;revision\nrange&gt;</p>\n\n<p style=\"margin-left:17%;\">Show only commits in the\nspecified revision range. When no &lt;revision range&gt; is\nspecified, it defaults to <b>HEAD</b> (i.e. the whole\nhistory leading to the current commit). <b>origin..HEAD</b>\nspecifies all the commits reachable from the current commit\n(i.e. <b>HEAD</b>), but not from <b>origin</b>. For a\ncomplete list of ways to spell &lt;revision range&gt;, see\nthe <i>Specifying Ranges</i> section of\n<a href=\"https://man.page/7/gitrevisions\">gitrevisions(7)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">[--]\n&lt;path&gt;...</p>\n\n<p style=\"margin-left:17%;\">Show only commits that are\nenough to explain how the files that match the specified\npaths came to be. See <i>History Simplification</i> below\nfor details and other simplification modes.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Paths may need\nto be prefixed with <b>--</b> to separate them from options\nor the revision range, when confusion arises.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Commit\nLimiting</b> <br>\nBesides specifying a range of commits that should be listed\nusing the special notations explained in the description,\nadditional commit limiting may be applied.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Using more\noptions generally further limits the output (e.g.\n<b>--since=&lt;date1&gt;</b> limits to commits newer than\n<b>&lt;date1&gt;</b>, and using it with\n<b>--grep=&lt;pattern&gt;</b> further limits to commits\nwhose log message has a line that matches\n<b>&lt;pattern&gt;</b>), unless otherwise noted.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that these\nare applied before commit ordering and formatting options,\nsuch as <b>--reverse</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">-&lt;number&gt;,\n-n &lt;number&gt;, --max-count=&lt;number&gt;</p>\n\n<p style=\"margin-left:17%;\">Limit the number of commits to\noutput.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--skip=&lt;number&gt;</p>\n\n<p style=\"margin-left:17%;\">Skip <i>number</i> commits\nbefore starting to show the commit output.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--since=&lt;date&gt;,\n--after=&lt;date&gt;</p>\n\n<p style=\"margin-left:17%;\">Show commits more recent than a\nspecific date.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--until=&lt;date&gt;,\n--before=&lt;date&gt;</p>\n\n<p style=\"margin-left:17%;\">Show commits older than a\nspecific date.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--author=&lt;pattern&gt;,\n--committer=&lt;pattern&gt;</p>\n\n<p style=\"margin-left:17%;\">Limit the commits output to\nones with author/committer header lines that match the\nspecified pattern (regular expression). With more than one\n<b>--author=&lt;pattern&gt;</b>, commits whose author\nmatches any of the given patterns are chosen (similarly for\nmultiple <b>--committer=&lt;pattern&gt;</b>).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--grep-reflog=&lt;pattern&gt;</p>\n\n<p style=\"margin-left:17%;\">Limit the commits output to\nones with reflog entries that match the specified pattern\n(regular expression). With more than one\n<b>--grep-reflog</b>, commits whose reflog message matches\nany of the given patterns are chosen. It is an error to use\nthis option unless <b>--walk-reflogs</b> is in use.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--grep=&lt;pattern&gt;</p>\n\n<p style=\"margin-left:17%;\">Limit the commits output to\nones with log message that matches the specified pattern\n(regular expression). With more than one\n<b>--grep=&lt;pattern&gt;</b>, commits whose message matches\nany of the given patterns are chosen (but see\n<b>--all-match</b>).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When\n<b>--notes</b> is in effect, the message from the notes is\nmatched as if it were part of the log message.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--all-match</p>\n\n<p style=\"margin-left:17%;\">Limit the commits output to\nones that match all given <b>--grep</b>, instead of ones\nthat match at least one.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--invert-grep</p>\n\n<p style=\"margin-left:17%;\">Limit the commits output to\nones with log message that do not match the pattern\nspecified with <b>--grep=&lt;pattern&gt;</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-i,\n--regexp-ignore-case</p>\n\n<p style=\"margin-left:17%;\">Match the regular expression\nlimiting patterns without regard to letter case.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--basic-regexp</p>\n\n<p style=\"margin-left:17%;\">Consider the limiting patterns\nto be basic regular expressions; this is the default.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-E,\n--extended-regexp</p>\n\n<p style=\"margin-left:17%;\">Consider the limiting patterns\nto be extended regular expressions instead of the default\nbasic regular expressions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-F,\n--fixed-strings</p>\n\n<p style=\"margin-left:17%;\">Consider the limiting patterns\nto be fixed strings (don&rsquo;t interpret pattern as a\nregular expression).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-P,\n--perl-regexp</p>\n\n<p style=\"margin-left:17%;\">Consider the limiting patterns\nto be Perl-compatible regular expressions.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Support for\nthese types of regular expressions is an optional\ncompile-time dependency. If Git wasn&rsquo;t compiled with\nsupport for them providing this option will cause it to\ndie.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--remove-empty</p>\n\n<p style=\"margin-left:17%;\">Stop when a given path\ndisappears from the tree.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--merges</p>\n\n<p style=\"margin-left:17%;\">Print only merge commits. This\nis exactly the same as <b>--min-parents=2</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--no-merges</p>\n\n<p style=\"margin-left:17%;\">Do not print commits with more\nthan one parent. This is exactly the same as\n<b>--max-parents=1</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--min-parents=&lt;number&gt;,\n--max-parents=&lt;number&gt;, --no-min-parents,\n--no-max-parents</p>\n\n<p style=\"margin-left:17%;\">Show only commits which have at\nleast (or at most) that many parent commits. In particular,\n<b>--max-parents=1</b> is the same as <b>--no-merges</b>,\n<b>--min-parents=2</b> is the same as <b>--merges</b>.\n<b>--max-parents=0</b> gives all root commits and\n<b>--min-parents=3</b> all octopus merges.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>--no-min-parents</b>\nand <b>--no-max-parents</b> reset these limits (to no limit)\nagain. Equivalent forms are <b>--min-parents=0</b> (any\ncommit has 0 or more parents) and <b>--max-parents=-1</b>\n(negative numbers denote no upper limit).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--first-parent</p>\n\n<p style=\"margin-left:17%;\">Follow only the first parent\ncommit upon seeing a merge commit. This option can give a\nbetter overview when viewing the evolution of a particular\ntopic branch, because merges into a topic branch tend to be\nonly about adjusting to updated upstream from time to time,\nand this option allows you to ignore the individual commits\nbrought in to your history by such a merge.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This option\nalso changes default diff format for merge commits to\n<b>first-parent</b>, see <b>--diff-merges=first-parent</b>\nfor details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--not</p>\n\n<p style=\"margin-left:17%;\">Reverses the meaning of the\n<i>^</i> prefix (or lack thereof) for all following revision\nspecifiers, up to the next <b>--not</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--all</p>\n\n<p style=\"margin-left:17%;\">Pretend as if all the refs in\n<b>refs/</b>, along with <b>HEAD</b>, are listed on the\ncommand line as <i>&lt;commit&gt;</i>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--branches[=&lt;pattern&gt;]</p>\n\n<p style=\"margin-left:17%;\">Pretend as if all the refs in\n<b>refs/heads</b> are listed on the command line as\n<i>&lt;commit&gt;</i>. If <i>&lt;pattern&gt;</i> is given,\nlimit branches to ones matching given shell glob. If pattern\nlacks <i>?</i>, <i>*</i>, or <i>[</i>, <i>/*</i> at the end\nis implied.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--tags[=&lt;pattern&gt;]</p>\n\n<p style=\"margin-left:17%;\">Pretend as if all the refs in\n<b>refs/tags</b> are listed on the command line as\n<i>&lt;commit&gt;</i>. If <i>&lt;pattern&gt;</i> is given,\nlimit tags to ones matching given shell glob. If pattern\nlacks <i>?</i>, <i>*</i>, or <i>[</i>, <i>/*</i> at the end\nis implied.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--remotes[=&lt;pattern&gt;]</p>\n\n<p style=\"margin-left:17%;\">Pretend as if all the refs in\n<b>refs/remotes</b> are listed on the command line as\n<i>&lt;commit&gt;</i>. If <i>&lt;pattern&gt;</i> is given,\nlimit remote-tracking branches to ones matching given shell\nglob. If pattern lacks <i>?</i>, <i>*</i>, or <i>[</i>,\n<i>/*</i> at the end is implied.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--glob=&lt;glob-pattern&gt;</p>\n\n<p style=\"margin-left:17%;\">Pretend as if all the refs\nmatching shell glob <i>&lt;glob-pattern&gt;</i> are listed\non the command line as <i>&lt;commit&gt;</i>. Leading\n<i>refs/</i>, is automatically prepended if missing. If\npattern lacks <i>?</i>, <i>*</i>, or <i>[</i>, <i>/*</i> at\nthe end is implied.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--exclude=&lt;glob-pattern&gt;</p>\n\n<p style=\"margin-left:17%;\">Do not include refs matching\n<i>&lt;glob-pattern&gt;</i> that the next <b>--all</b>,\n<b>--branches</b>, <b>--tags</b>, <b>--remotes</b>, or\n<b>--glob</b> would otherwise consider. Repetitions of this\noption accumulate exclusion patterns up to the next\n<b>--all</b>, <b>--branches</b>, <b>--tags</b>,\n<b>--remotes</b>, or <b>--glob</b> option (other options or\narguments do not clear accumulated patterns).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The patterns\ngiven should not begin with <b>refs/heads</b>,\n<b>refs/tags</b>, or <b>refs/remotes</b> when applied to\n<b>--branches</b>, <b>--tags</b>, or <b>--remotes</b>,\nrespectively, and they must begin with <b>refs/</b> when\napplied to <b>--glob</b> or <b>--all</b>. If a trailing\n<i>/*</i> is intended, it must be given explicitly.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--reflog</p>\n\n<p style=\"margin-left:17%;\">Pretend as if all objects\nmentioned by reflogs are listed on the command line as\n<b>&lt;commit&gt;</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--alternate-refs</p>\n\n<p style=\"margin-left:17%;\">Pretend as if all objects\nmentioned as ref tips of alternate repositories were listed\non the command line. An alternate repository is any\nrepository whose object directory is specified in\n<b>objects/info/alternates</b>. The set of included objects\nmay be modified by <b>core.alternateRefsCommand</b>, etc.\nSee <a href=\"https://man.page/1/git-config\">git-config(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--single-worktree</p>\n\n<p style=\"margin-left:17%;\">By default, all working trees\nwill be examined by the following options when there are\nmore than one (see <a href=\"https://man.page/1/git-worktree\">git-worktree(1)</a>): <b>--all</b>,\n<b>--reflog</b> and <b>--indexed-objects</b>. This option\nforces them to examine the current working tree only.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--ignore-missing</p>\n\n<p style=\"margin-left:17%;\">Upon seeing an invalid object\nname in the input, pretend as if the bad input was not\ngiven.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--bisect</p>\n\n<p style=\"margin-left:17%;\">Pretend as if the bad bisection\nref <b>refs/bisect/bad</b> was listed and as if it was\nfollowed by <b>--not</b> and the good bisection refs\n<b>refs/bisect/good-*</b> on the command line.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--stdin</p>\n\n<p style=\"margin-left:17%;\">In addition to the\n<i>&lt;commit&gt;</i> listed on the command line, read them\nfrom the standard input. If a <b>--</b> separator is seen,\nstop reading commits and start reading paths to limit the\nresult.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--cherry-mark</p>\n\n<p style=\"margin-left:17%;\">Like <b>--cherry-pick</b> (see\nbelow) but mark equivalent commits with <b>=</b> rather than\nomitting them, and inequivalent ones with <b>+</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--cherry-pick</p>\n\n<p style=\"margin-left:17%;\">Omit any commit that introduces\nthe same change as another commit on the &ldquo;other\nside&rdquo; when the set of commits are limited with\nsymmetric difference.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For example, if\nyou have two branches, <b>A</b> and <b>B</b>, a usual way to\nlist all commits on only one side of them is with\n<b>--left-right</b> (see the example below in the\ndescription of the <b>--left-right</b> option). However, it\nshows the commits that were cherry-picked from the other\nbranch (for example, &ldquo;3rd on b&rdquo; may be\ncherry-picked from branch A). With this option, such pairs\nof commits are excluded from the output.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--left-only,\n--right-only</p>\n\n<p style=\"margin-left:17%;\">List only commits on the\nrespective side of a symmetric difference, i.e. only those\nwhich would be marked <b>&lt;</b> resp. <b>&gt;</b> by\n<b>--left-right</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For example,\n<b>--cherry-pick --right-only A...B</b> omits those commits\nfrom <b>B</b> which are in <b>A</b> or are patch-equivalent\nto a commit in <b>A</b>. In other words, this lists the\n<b>+</b> commits from <b>git cherry A B</b>. More precisely,\n<b>--cherry-pick --right-only --no-merges</b> gives the\nexact list.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--cherry</p>\n\n<p style=\"margin-left:17%;\">A synonym for <b>--right-only\n--cherry-mark --no-merges</b>; useful to limit the output to\nthe commits on our side and mark those that have been\napplied to the other side of a forked history with <b>git\nlog --cherry upstream...mybranch</b>, similar to <b>git\ncherry upstream mybranch</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-g,\n--walk-reflogs</p>\n\n<p style=\"margin-left:17%;\">Instead of walking the commit\nancestry chain, walk reflog entries from the most recent one\nto older ones. When this option is used you cannot specify\ncommits to exclude (that is, <i>^commit</i>,\n<i>commit1..commit2</i>, and <i>commit1...commit2</i>\nnotations cannot be used).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">With\n<b>--pretty</b> format other than <b>oneline</b> and\n<b>reference</b> (for obvious reasons), this causes the\noutput to have two extra lines of information taken from the\nreflog. The reflog designator in the output may be shown as\n<b>ref@{Nth}</b> (where <b>Nth</b> is the\nreverse-chronological index in the reflog) or as\n<b>ref@{timestamp}</b> (with the timestamp for that entry),\ndepending on a few rules:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">1. If the\nstarting point is specified as <b>ref@{Nth}</b>, show the\nindex format.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">2. If the\nstarting point was specified as <b>ref@{now}</b>, show the\ntimestamp format.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">3. If neither\nwas used, but <b>--date</b> was given on the command line,\nshow the timestamp in the format requested by\n<b>--date</b>.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">4. Otherwise,\nshow the index format.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Under\n<b>--pretty=oneline</b>, the commit message is prefixed with\nthis information on the same line. This option cannot be\ncombined with <b>--reverse</b>. See also\n<a href=\"https://man.page/1/git-reflog\">git-reflog(1)</a>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Under\n<b>--pretty=reference</b>, this information will not be\nshown at all.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--merge</p>\n\n<p style=\"margin-left:17%;\">After a failed merge, show refs\nthat touch files having a conflict and don&rsquo;t exist on\nall heads to merge.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--boundary</p>\n\n<p style=\"margin-left:17%;\">Output excluded boundary\ncommits. Boundary commits are prefixed with <b>-</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>History\nSimplification</b> <br>\nSometimes you are only interested in parts of the history,\nfor example the commits modifying a particular &lt;path&gt;.\nBut there are two parts of <i>History Simplification</i>,\none part is selecting the commits and the other is how to do\nit, as there are various strategies to simplify the\nhistory.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions select the commits to be shown:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;paths&gt;</p>\n\n<p style=\"margin-left:17%;\">Commits modifying the given\n&lt;paths&gt; are selected.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--simplify-by-decoration</p>\n\n<p style=\"margin-left:17%;\">Commits that are referred by\nsome branch or tag are selected.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that extra\ncommits can be shown to give a meaningful history.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions affect the way the simplification is performed:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Default\nmode</p>\n\n<p style=\"margin-left:17%;\">Simplifies the history to the\nsimplest history explaining the final state of the tree.\nSimplest because it prunes some side branches if the end\nresult is the same (i.e. merging branches with the same\ncontent)</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--show-pulls</p>\n\n<p style=\"margin-left:17%;\">Include all commits from the\ndefault mode, but also any merge commits that are not\nTREESAME to the first parent but are TREESAME to a later\nparent. This mode is helpful for showing the merge commits\nthat &quot;first introduced&quot; a change to a branch.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--full-history</p>\n\n<p style=\"margin-left:17%;\">Same as the default mode, but\ndoes not prune some history.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--dense</p>\n\n<p style=\"margin-left:17%;\">Only the selected commits are\nshown, plus some to have a meaningful history.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--sparse</p>\n\n<p style=\"margin-left:17%;\">All commits in the simplified\nhistory are shown.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--simplify-merges</p>\n\n<p style=\"margin-left:17%;\">Additional option to\n<b>--full-history</b> to remove some needless merges from\nthe resulting history, as there are no selected commits\ncontributing to this merge.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--ancestry-path</p>\n\n<p style=\"margin-left:17%;\">When given a range of commits\nto display (e.g. <i>commit1..commit2</i> or <i>commit2\n^commit1</i>), only display commits that exist directly on\nthe ancestry chain between the <i>commit1</i> and\n<i>commit2</i>, i.e. commits that are both descendants of\n<i>commit1</i>, and ancestors of <i>commit2</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A more detailed\nexplanation follows.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Suppose you\nspecified <b>foo</b> as the &lt;paths&gt;. We shall call\ncommits that modify <b>foo</b> !TREESAME, and the rest\nTREESAME. (In a diff filtered for <b>foo</b>, they look\ndifferent and equal, respectively.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the\nfollowing, we will always refer to the same example history\nto illustrate the differences between simplification\nsettings. We assume that you are filtering for a file\n<b>foo</b> in this commit graph:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">.-A---M---N---O---P---Q\n<br>\n/ / / / / / <br>\nI B C D E Y <br>\n\\ / / / / / <br>\n&rsquo;-------------' X</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The horizontal\nline of history A---Q is taken to be the first parent of\neach merge. The commits are:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; <b>I</b>\nis the initial commit, in which <b>foo</b> exists with\ncontents &ldquo;asdf&rdquo;, and a file <b>quux</b> exists\nwith contents &ldquo;quux&rdquo;. Initial commits are\ncompared to an empty tree, so <b>I</b> is !TREESAME.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; In\n<b>A</b>, <b>foo</b> contains just &ldquo;foo&rdquo;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; <b>B</b>\ncontains the same change as <b>A</b>. Its merge <b>M</b> is\ntrivial and hence TREESAME to all parents.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; <b>C</b>\ndoes not change <b>foo</b>, but its merge <b>N</b> changes\nit to &ldquo;foobar&rdquo;, so it is not TREESAME to any\nparent.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; <b>D</b>\nsets <b>foo</b> to &ldquo;baz&rdquo;. Its merge <b>O</b>\ncombines the strings from <b>N</b> and <b>D</b> to\n&ldquo;foobarbaz&rdquo;; i.e., it is not TREESAME to any\nparent.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; <b>E</b>\nchanges <b>quux</b> to &ldquo;xyzzy&rdquo;, and its merge\n<b>P</b> combines the strings to &ldquo;quux xyzzy&rdquo;.\n<b>P</b> is TREESAME to <b>O</b>, but not to <b>E</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; <b>X</b>\nis an independent root commit that added a new file\n<b>side</b>, and <b>Y</b> modified it. <b>Y</b> is TREESAME\nto <b>X</b>. Its merge <b>Q</b> added <b>side</b> to\n<b>P</b>, and <b>Q</b> is TREESAME to <b>P</b>, but not to\n<b>Y</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>rev-list</b>\nwalks backwards through history, including or excluding\ncommits based on whether <b>--full-history</b> and/or parent\nrewriting (via <b>--parents</b> or <b>--children</b>) are\nused. The following settings are available.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Default\nmode</p>\n\n<p style=\"margin-left:17%;\">Commits are included if they\nare not TREESAME to any parent (though this can be changed,\nsee <b>--sparse</b> below). If the commit was a merge, and\nit was TREESAME to one parent, follow only that parent.\n(Even if there are several TREESAME parents, follow only one\nof them.) Otherwise, follow all parents.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This results\nin:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">.-A---N---O\n<br>\n/ / / <br>\nI---------D</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note how the\nrule to only follow the TREESAME parent, if one is\navailable, removed <b>B</b> from consideration entirely.\n<b>C</b> was considered via <b>N</b>, but is TREESAME. Root\ncommits are compared to an empty tree, so <b>I</b> is\n!TREESAME.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Parent/child\nrelations are only visible with <b>--parents</b>, but that\ndoes not affect the commits selected in default mode, so we\nhave shown the parent lines.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--full-history\nwithout parent rewriting</p>\n\n<p style=\"margin-left:17%;\">This mode differs from the\ndefault in one point: always follow all parents of a merge,\neven if it is TREESAME to one of them. Even if more than one\nside of the merge has commits that are included, this does\nnot imply that the merge itself is! In the example, we\nget</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">I A B N D O P\nQ</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>M</b> was\nexcluded because it is TREESAME to both parents. <b>E</b>,\n<b>C</b> and <b>B</b> were all walked, but only <b>B</b> was\n!TREESAME, so the others do not appear.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that\nwithout parent rewriting, it is not really possible to talk\nabout the parent/child relationships between the commits, so\nwe show them disconnected.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--full-history\nwith parent rewriting</p>\n\n<p style=\"margin-left:17%;\">Ordinary commits are only\nincluded if they are !TREESAME (though this can be changed,\nsee <b>--sparse</b> below).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Merges are\nalways included. However, their parent list is rewritten:\nAlong each parent, prune away commits that are not included\nthemselves. This results in</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\">.-A---M---N---O---P---Q\n<br>\n/ / / / / <br>\nI B / D / <br>\n\\ / / / / <br>\n&rsquo;-------------'</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Compare to\n<b>--full-history</b> without rewriting above. Note that\n<b>E</b> was pruned away because it is TREESAME, but the\nparent list of P was rewritten to contain <b>E</b>'s parent\n<b>I</b>. The same happened for <b>C</b> and <b>N</b>, and\n<b>X</b>, <b>Y</b> and <b>Q</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In addition to\nthe above settings, you can change whether TREESAME affects\ninclusion:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--dense</p>\n\n<p style=\"margin-left:17%;\">Commits that are walked are\nincluded if they are not TREESAME to any parent.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--sparse</p>\n\n<p style=\"margin-left:17%;\">All commits that are walked are\nincluded.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that\nwithout <b>--full-history</b>, this still simplifies merges:\nif one of the parents is TREESAME, we follow only that one,\nso the other sides of the merge are never walked.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--simplify-merges</p>\n\n<p style=\"margin-left:17%;\">First, build a history graph in\nthe same way that <b>--full-history</b> with parent\nrewriting does (see above).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Then simplify\neach commit <b>C</b> to its replacement <b>C'</b> in the\nfinal history according to the following rules:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull; Set\n<b>C'</b> to <b>C</b>.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull; Replace\neach parent <b>P</b> of <b>C'</b> with its simplification\n<b>P'</b>. In the process, drop parents that are ancestors\nof other parents or that are root commits TREESAME to an\nempty tree, and remove duplicates, but take care to never\ndrop all parents that we are TREESAME to.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull; If after\nthis parent rewriting, <b>C'</b> is a root or merge commit\n(has zero or &gt;1 parents), a boundary commit, or\n!TREESAME, it remains. Otherwise, it is replaced with its\nonly parent.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The effect of\nthis is best shown by way of comparing to\n<b>--full-history</b> with parent rewriting. The example\nturns into:</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\">.-A---M---N---O\n<br>\n/ / / <br>\nI B D <br>\n\\ / / <br>\n&rsquo;---------'</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note the major\ndifferences in <b>N</b>, <b>P</b>, and <b>Q</b> over\n<b>--full-history</b>:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<b>N</b>'s parent list had <b>I</b> removed, because it is\nan ancestor of the other parent <b>M</b>. Still, <b>N</b>\nremained because it is !TREESAME.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<b>P</b>'s parent list similarly had <b>I</b> removed.\n<b>P</b> was then removed completely, because it had one\nparent and is TREESAME.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<b>Q</b>'s parent list had <b>Y</b> simplified to <b>X</b>.\n<b>X</b> was then removed, because it was a TREESAME root.\n<b>Q</b> was then removed completely, because it had one\nparent and is TREESAME.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">There is\nanother simplification mode available:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--ancestry-path</p>\n\n<p style=\"margin-left:17%;\">Limit the displayed commits to\nthose directly on the ancestry chain between the\n&ldquo;from&rdquo; and &ldquo;to&rdquo; commits in the given\ncommit range. I.e. only display commits that are ancestor of\nthe &ldquo;to&rdquo; commit and descendants of the\n&ldquo;from&rdquo; commit.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">As an example\nuse case, consider the following commit history:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">D---E-------F\n<br>\n/ \\ \\ <br>\nB---C---G---H---I---J <br>\n/ \\ <br>\nA-------K---------------L--M</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">A regular\n<i>D..M</i> computes the set of commits that are ancestors\nof <b>M</b>, but excludes the ones that are ancestors of\n<b>D</b>. This is useful to see what happened to the history\nleading to <b>M</b> since <b>D</b>, in the sense that\n&ldquo;what does <b>M</b> have that did not exist in\n<b>D</b>&rdquo;. The result in this example would be all the\ncommits, except <b>A</b> and <b>B</b> (and <b>D</b> itself,\nof course).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When we want to\nfind out what commits in <b>M</b> are contaminated with the\nbug introduced by <b>D</b> and need fixing, however, we\nmight want to view only the subset of <i>D..M</i> that are\nactually descendants of <b>D</b>, i.e. excluding <b>C</b>\nand <b>K</b>. This is exactly what the\n<b>--ancestry-path</b> option does. Applied to the\n<i>D..M</i> range, it results in:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">E-------F <br>\n\\ \\ <br>\nG---H---I---J <br>\n\\ <br>\nL--M</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Before\ndiscussing another option, <b>--show-pulls</b>, we need to\ncreate a new example history.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A common\nproblem users face when looking at simplified history is\nthat a commit they know changed a file somehow does not\nappear in the file&rsquo;s simplified history. Let&rsquo;s\ndemonstrate a new example and show how options such as\n<b>--full-history</b> and <b>--simplify-merges</b> works in\nthat case:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">.-A---M-----C--N---O---P\n<br>\n/ / \\ \\ \\/ / / <br>\nI B \\ R-'&rsquo;-Z' / <br>\n\\ / \\/ / <br>\n\\ / /\\ / <br>\n&rsquo;---X--' &rsquo;---Y--'</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For this\nexample, suppose <b>I</b> created <b>file.txt</b> which was\nmodified by <b>A</b>, <b>B</b>, and <b>X</b> in different\nways. The single-parent commits <b>C</b>, <b>Z</b>, and\n<b>Y</b> do not change <b>file.txt</b>. The merge commit\n<b>M</b> was created by resolving the merge conflict to\ninclude both changes from <b>A</b> and <b>B</b> and hence is\nnot TREESAME to either. The merge commit <b>R</b>, however,\nwas created by ignoring the contents of <b>file.txt</b> at\n<b>M</b> and taking only the contents of <b>file.txt</b> at\n<b>X</b>. Hence, <b>R</b> is TREESAME to <b>X</b> but not\n<b>M</b>. Finally, the natural merge resolution to create\n<b>N</b> is to take the contents of <b>file.txt</b> at\n<b>R</b>, so <b>N</b> is TREESAME to <b>R</b> but not\n<b>C</b>. The merge commits <b>O</b> and <b>P</b> are\nTREESAME to their first parents, but not to their second\nparents, <b>Z</b> and <b>Y</b> respectively.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When using the\ndefault mode, <b>N</b> and <b>R</b> both have a TREESAME\nparent, so those edges are walked and the others are\nignored. The resulting history graph is:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">I---X</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When using\n<b>--full-history</b>, Git walks every edge. This will\ndiscover the commits <b>A</b> and <b>B</b> and the merge\n<b>M</b>, but also will reveal the merge commits <b>O</b>\nand <b>P</b>. With parent rewriting, the resulting graph\nis:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">.-A---M--------N---O---P\n<br>\n/ / \\ \\ \\/ / / <br>\nI B \\ R-'&rsquo;--' / <br>\n\\ / \\/ / <br>\n\\ / /\\ / <br>\n&rsquo;---X--' &rsquo;------'</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Here, the merge\ncommits <b>O</b> and <b>P</b> contribute extra noise, as\nthey did not actually contribute a change to\n<b>file.txt</b>. They only merged a topic that was based on\nan older version of <b>file.txt</b>. This is a common issue\nin repositories using a workflow where many contributors\nwork in parallel and merge their topic branches along a\nsingle trunk: manu unrelated merges appear in the\n<b>--full-history</b> results.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When using the\n<b>--simplify-merges</b> option, the commits <b>O</b> and\n<b>P</b> disappear from the results. This is because the\nrewritten second parents of <b>O</b> and <b>P</b> are\nreachable from their first parents. Those edges are removed\nand then the commits look like single-parent commits that\nare TREESAME to their parent. This also happens to the\ncommit <b>N</b>, resulting in a history view as follows:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">.-A---M--. <br>\n/ / \\ <br>\nI B R <br>\n\\ / / <br>\n\\ / / <br>\n&rsquo;---X--'</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In this view,\nwe see all of the important single-parent changes from\n<b>A</b>, <b>B</b>, and <b>X</b>. We also see the\ncarefully-resolved merge <b>M</b> and the\nnot-so-carefully-resolved merge <b>R</b>. This is usually\nenough information to determine why the commits <b>A</b> and\n<b>B</b> &quot;disappeared&quot; from history in the default\nview. However, there are a few issues with this\napproach.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The first issue\nis performance. Unlike any previous option, the\n<b>--simplify-merges</b> option requires walking the entire\ncommit history before returning a single result. This can\nmake the option difficult to use for very large\nrepositories.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The second\nissue is one of auditing. When many contributors are working\non the same repository, it is important which merge commits\nintroduced a change into an important branch. The\nproblematic merge <b>R</b> above is not likely to be the\nmerge commit that was used to merge into an important\nbranch. Instead, the merge <b>N</b> was used to merge\n<b>R</b> and <b>X</b> into the important branch. This commit\nmay have information about why the change <b>X</b> came to\noverride the changes from <b>A</b> and <b>B</b> in its\ncommit message.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--show-pulls</p>\n\n<p style=\"margin-left:17%;\">In addition to the commits\nshown in the default history, show each merge commit that is\nnot TREESAME to its first parent but is TREESAME to a later\nparent.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When a merge\ncommit is included by <b>--show-pulls</b>, the merge is\ntreated as if it &quot;pulled&quot; the change from another\nbranch. When using <b>--show-pulls</b> on this example (and\nno other options) the resulting graph is:</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\">I---X---R---N</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Here, the merge\ncommits <b>R</b> and <b>N</b> are included because they\npulled the commits <b>X</b> and <b>R</b> into the base\nbranch, respectively. These merges are the reason the\ncommits <b>A</b> and <b>B</b> do not appear in the default\nhistory.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When\n<b>--show-pulls</b> is paired with <b>--simplify-merges</b>,\nthe graph includes all of the necessary information:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">.-A---M--. N\n<br>\n/ / \\ / <br>\nI B R <br>\n\\ / / <br>\n\\ / / <br>\n&rsquo;---X--'</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Notice that\nsince <b>M</b> is reachable from <b>R</b>, the edge from\n<b>N</b> to <b>M</b> was simplified away. However, <b>N</b>\nstill appears in the history as an important commit because\nit &quot;pulled&quot; the change <b>R</b> into the main\nbranch.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>--simplify-by-decoration</b> option allows you to view\nonly the big picture of the topology of the history, by\nomitting commits that are not referenced by tags. Commits\nare marked as !TREESAME (in other words, kept after history\nsimplification rules described above) if (1) they are\nreferenced by tags, or (2) they change the contents of the\npaths given on the command line. All other commits are\nmarked as TREESAME (subject to be simplified away).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Commit\nOrdering</b> <br>\nBy default, the commits are shown in reverse chronological\norder.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--date-order</p>\n\n<p style=\"margin-left:17%;\">Show no parents before all of\nits children are shown, but otherwise show commits in the\ncommit timestamp order.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--author-date-order</p>\n\n<p style=\"margin-left:17%;\">Show no parents before all of\nits children are shown, but otherwise show commits in the\nauthor timestamp order.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--topo-order</p>\n\n<p style=\"margin-left:17%;\">Show no parents before all of\nits children are shown, and avoid showing commits on\nmultiple lines of history intermixed.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For example, in\na commit history like this:</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\">---1----2----4----7\n<br>\n\\ \\ <br>\n3----5----6----8---</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">where the\nnumbers denote the order of commit timestamps, <b>git\nrev-list</b> and friends with <b>--date-order</b> show the\ncommits in the timestamp order: 8 7 6 5 4 3 2 1.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">With\n<b>--topo-order</b>, they would show 8 6 5 3 7 4 2 1 (or 8 7\n4 2 6 5 3 1); some older commits are shown before newer ones\nin order to avoid showing the commits from two parallel\ndevelopment track mixed together.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--reverse</p>\n\n<p style=\"margin-left:17%;\">Output the commits chosen to be\nshown (see Commit Limiting section above) in reverse order.\nCannot be combined with <b>--walk-reflogs</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Object\nTraversal</b> <br>\nThese options are mostly targeted for packing of Git\nrepositories.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--no-walk[=(sorted|unsorted)]</p>\n\n<p style=\"margin-left:17%;\">Only show the given commits,\nbut do not traverse their ancestors. This has no effect if a\nrange is specified. If the argument <b>unsorted</b> is\ngiven, the commits are shown in the order they were given on\nthe command line. Otherwise (if <b>sorted</b> or no argument\nwas given), the commits are shown in reverse chronological\norder by commit time. Cannot be combined with\n<b>--graph</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--do-walk</p>\n\n<p style=\"margin-left:17%;\">Overrides a previous\n<b>--no-walk</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Commit\nFormatting</b> <br>\n--pretty[=&lt;format&gt;], --format=&lt;format&gt;</p>\n\n<p style=\"margin-left:17%;\">Pretty-print the contents of\nthe commit logs in a given format, where\n<i>&lt;format&gt;</i> can be one of <i>oneline</i>,\n<i>short</i>, <i>medium</i>, <i>full</i>, <i>fuller</i>,\n<i>reference</i>, <i>email</i>, <i>raw</i>,\n<i>format:&lt;string&gt;</i> and\n<i>tformat:&lt;string&gt;</i>. When <i>&lt;format&gt;</i> is\nnone of the above, and has <i>%placeholder</i> in it, it\nacts as if <i>--pretty=tformat:&lt;format&gt;</i> were\ngiven.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">See the\n&quot;PRETTY FORMATS&quot; section for some additional\ndetails for each format. When <i>=&lt;format&gt;</i> part is\nomitted, it defaults to <i>medium</i>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note: you can\nspecify the default pretty format in the repository\nconfiguration (see <a href=\"https://man.page/1/git-config\">git-config(1)</a>).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--abbrev-commit</p>\n\n<p style=\"margin-left:17%;\">Instead of showing the full\n40-byte hexadecimal commit object name, show a prefix that\nnames the object uniquely. &quot;--abbrev=&lt;n&gt;&quot;\n(which also modifies diff output, if it is displayed) option\ncan be used to specify the minimum length of the prefix.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This should\nmake &quot;--pretty=oneline&quot; a whole lot more readable\nfor people using 80-column terminals.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--no-abbrev-commit</p>\n\n<p style=\"margin-left:17%;\">Show the full 40-byte\nhexadecimal commit object name. This negates\n<b>--abbrev-commit</b>, either explicit or implied by other\noptions such as &quot;--oneline&quot;. It also overrides the\n<b>log.abbrevCommit</b> variable.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--oneline</p>\n\n<p style=\"margin-left:17%;\">This is a shorthand for\n&quot;--pretty=oneline --abbrev-commit&quot; used\ntogether.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--encoding=&lt;encoding&gt;</p>\n\n<p style=\"margin-left:17%;\">Commit objects record the\ncharacter encoding used for the log message in their\nencoding header; this option can be used to tell the command\nto re-code the commit log message in the encoding preferred\nby the user. For non plumbing commands this defaults to\nUTF-8. Note that if an object claims to be encoded in\n<b>X</b> and we are outputting in <b>X</b>, we will output\nthe object verbatim; this means that invalid sequences in\nthe original commit may be copied to the output. Likewise,\nif iconv(3) fails to convert the commit, we will quietly\noutput the original object verbatim.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--expand-tabs=&lt;n&gt;,\n--expand-tabs, --no-expand-tabs</p>\n\n<p style=\"margin-left:17%;\">Perform a tab expansion\n(replace each tab with enough spaces to fill to the next\ndisplay column that is multiple of <i>&lt;n&gt;</i>) in the\nlog message before showing it in the output.\n<b>--expand-tabs</b> is a short-hand for\n<b>--expand-tabs=8</b>, and <b>--no-expand-tabs</b> is a\nshort-hand for <b>--expand-tabs=0</b>, which disables tab\nexpansion.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">By default,\ntabs are expanded in pretty formats that indent the log\nmessage by 4 spaces (i.e. <i>medium</i>, which is the\ndefault, <i>full</i>, and <i>fuller</i>).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--notes[=&lt;ref&gt;]</p>\n\n<p style=\"margin-left:17%;\">Show the notes (see\n<a href=\"https://man.page/1/git-notes\">git-notes(1)</a>) that annotate the commit, when showing\nthe commit log message. This is the default for <b>git\nlog</b>, <b>git show</b> and <b>git whatchanged</b> commands\nwhen there is no <b>--pretty</b>, <b>--format</b>, or\n<b>--oneline</b> option given on the command line.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">By default, the\nnotes shown are from the notes refs listed in the\n<b>core.notesRef</b> and <b>notes.displayRef</b> variables\n(or corresponding environment overrides). See\n<a href=\"https://man.page/1/git-config\">git-config(1)</a> for more details.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">With an\noptional <i>&lt;ref&gt;</i> argument, use the ref to find\nthe notes to display. The ref can specify the full refname\nwhen it begins with <b>refs/notes/</b>; when it begins with\n<b>notes/</b>, <b>refs/</b> and otherwise <b>refs/notes/</b>\nis prefixed to form a full name of the ref.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Multiple\n--notes options can be combined to control which notes are\nbeing displayed. Examples: &quot;--notes=foo&quot; will show\nonly notes from &quot;refs/notes/foo&quot;;\n&quot;--notes=foo --notes&quot; will show both notes from\n&quot;refs/notes/foo&quot; and from the default notes\nref(s).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--no-notes</p>\n\n<p style=\"margin-left:17%;\">Do not show notes. This negates\nthe above <b>--notes</b> option, by resetting the list of\nnotes refs from which notes are shown. Options are parsed in\nthe order given on the command line, so e.g. &quot;--notes\n--notes=foo --no-notes --notes=bar&quot; will only show\nnotes from &quot;refs/notes/bar&quot;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--show-notes[=&lt;ref&gt;],\n--[no-]standard-notes</p>\n\n<p style=\"margin-left:17%;\">These options are deprecated.\nUse the above --notes/--no-notes options instead.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--show-signature</p>\n\n<p style=\"margin-left:17%;\">Check the validity of a signed\ncommit object by passing the signature to <b>gpg\n--verify</b> and show the output.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--relative-date</p>\n\n<p style=\"margin-left:17%;\">Synonym for\n<b>--date=relative</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--date=&lt;format&gt;</p>\n\n<p style=\"margin-left:17%;\">Only takes effect for dates\nshown in human-readable format, such as when using\n<b>--pretty</b>. <b>log.date</b> config variable sets a\ndefault value for the log command&rsquo;s <b>--date</b>\noption. By default, dates are shown in the original time\nzone (either committer&rsquo;s or author&rsquo;s). If\n<b>-local</b> is appended to the format (e.g.,\n<b>iso-local</b>), the user&rsquo;s local time zone is used\ninstead.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>--date=relative</b>\nshows dates relative to the current time, e.g. &ldquo;2\nhours ago&rdquo;. The <b>-local</b> option has no effect for\n<b>--date=relative</b>.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>--date=local</b>\nis an alias for <b>--date=default-local</b>.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>--date=iso</b>\n(or <b>--date=iso8601</b>) shows timestamps in a ISO\n8601-like format. The differences to the strict ISO 8601\nformat are:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull; a space\ninstead of the <b>T</b> date/time delimiter</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull; a space\nbetween time and time zone</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull; no colon\nbetween hours and minutes of the time zone</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>--date=iso-strict</b>\n(or <b>--date=iso8601-strict</b>) shows timestamps in strict\nISO 8601 format.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>--date=rfc</b>\n(or <b>--date=rfc2822</b>) shows timestamps in RFC 2822\nformat, often found in email messages.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>--date=short</b>\nshows only the date, but not the time, in <b>YYYY-MM-DD</b>\nformat.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>--date=raw</b>\nshows the date as seconds since the epoch (1970-01-01\n00:00:00 UTC), followed by a space, and then the timezone as\nan offset from UTC (a <b>+</b> or <b>-</b> with four digits;\nthe first two are hours, and the second two are minutes).\nI.e., as if the timestamp were formatted with\n<b>strftime(&quot;%s %z&quot;)</b>). Note that the\n<b>-local</b> option does not affect the seconds-since-epoch\nvalue (which is always measured in UTC), but does switch the\naccompanying timezone value.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>--date=human</b>\nshows the timezone if the timezone does not match the\ncurrent time-zone, and doesn&rsquo;t print the whole date if\nthat matches (ie skip printing year for dates that are\n&quot;this year&quot;, but also skip the whole date itself\nif it&rsquo;s in the last few days and we can just say what\nweekday it was). For older dates the hour and minute is also\nomitted.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>--date=unix</b>\nshows the date as a Unix epoch timestamp (seconds since\n1970). As with <b>--raw</b>, this is always in UTC and\ntherefore <b>-local</b> has no effect.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>--date=format:...</b>\nfeeds the format <b>...</b> to your system <b>strftime</b>,\nexcept for %z and %Z, which are handled internally. Use\n<b>--date=format:%c</b> to show the date in your system\nlocale&rsquo;s preferred format. See the <b>strftime</b>\nmanual for a complete list of format placeholders. When\nusing <b>-local</b>, the correct syntax is\n<b>--date=format-local:...</b>.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>--date=default</b>\nis the default format, and is similar to\n<b>--date=rfc2822</b>, with a few exceptions:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull; there is\nno comma after the day-of-week</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull; the time\nzone is omitted when the local time zone is used</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--parents</p>\n\n<p style=\"margin-left:17%;\">Print also the parents of the\ncommit (in the form &quot;commit parent...&quot;). Also\nenables parent rewriting, see <i>History Simplification</i>\nabove.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--children</p>\n\n<p style=\"margin-left:17%;\">Print also the children of the\ncommit (in the form &quot;commit child...&quot;). Also\nenables parent rewriting, see <i>History Simplification</i>\nabove.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--left-right</p>\n\n<p style=\"margin-left:17%;\">Mark which side of a symmetric\ndifference a commit is reachable from. Commits from the left\nside are prefixed with <b>&lt;</b> and those from the right\nwith <b>&gt;</b>. If combined with <b>--boundary</b>, those\ncommits are prefixed with <b>-</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For example, if\nyou have this topology:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">y---b---b\nbranch B <br>\n/ \\ / <br>\n/ . <br>\n/ / \\ <br>\no---x---a---a branch A</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">you would get\nan output like this:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ git rev-list\n--left-right --boundary --pretty=oneline A...B</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&gt;bbbbbbb...\n3rd on b <br>\n&gt;bbbbbbb... 2nd on b <br>\n&lt;aaaaaaa... 3rd on a <br>\n&lt;aaaaaaa... 2nd on a <br>\n-yyyyyyy... 1st on b <br>\n-xxxxxxx... 1st on a</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--graph</p>\n\n<p style=\"margin-left:17%;\">Draw a text-based graphical\nrepresentation of the commit history on the left hand side\nof the output. This may cause extra lines to be printed in\nbetween commits, in order for the graph history to be drawn\nproperly. Cannot be combined with <b>--no-walk</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This enables\nparent rewriting, see <i>History Simplification</i>\nabove.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This implies\nthe <b>--topo-order</b> option by default, but the\n<b>--date-order</b> option may also be specified.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--show-linear-break[=&lt;barrier&gt;]</p>\n\n<p style=\"margin-left:17%;\">When --graph is not used, all\nhistory branches are flattened which can make it hard to see\nthat the two consecutive commits do not belong to a linear\nbranch. This option puts a barrier in between them in that\ncase. If <b>&lt;barrier&gt;</b> is specified, it is the\nstring that will be shown instead of the default one.</p>\n\n<h2>PRETTY FORMATS\n<a name=\"PRETTY FORMATS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the commit\nis a merge, and if the pretty-format is not <i>oneline</i>,\n<i>email</i> or <i>raw</i>, an additional line is inserted\nbefore the <i>Author:</i> line. This line begins with\n&quot;Merge: &quot; and the hashes of ancestral commits are\nprinted, separated by spaces. Note that the listed commits\nmay not necessarily be the list of the <b>direct</b> parent\ncommits if you have limited your view of history: for\nexample, if you are only interested in changes related to a\ncertain directory or file.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">There are\nseveral built-in formats, and you can define additional\nformats by setting a pretty.&lt;name&gt; config option to\neither another format name, or a <i>format:</i> string, as\ndescribed below (see <a href=\"https://man.page/1/git-config\">git-config(1)</a>). Here are the\ndetails of the built-in formats:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<i>oneline</i></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&lt;hash&gt;\n&lt;title line&gt;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This is\ndesigned to be as compact as possible.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<i>short</i></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">commit\n&lt;hash&gt; <br>\nAuthor: &lt;author&gt;</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&lt;title\nline&gt;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<i>medium</i></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">commit\n&lt;hash&gt; <br>\nAuthor: &lt;author&gt; <br>\nDate: &lt;author date&gt;</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&lt;title\nline&gt;</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&lt;full commit\nmessage&gt;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<i>full</i></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">commit\n&lt;hash&gt; <br>\nAuthor: &lt;author&gt; <br>\nCommit: &lt;committer&gt;</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&lt;title\nline&gt;</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&lt;full commit\nmessage&gt;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<i>fuller</i></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">commit\n&lt;hash&gt; <br>\nAuthor: &lt;author&gt; <br>\nAuthorDate: &lt;author date&gt; <br>\nCommit: &lt;committer&gt; <br>\nCommitDate: &lt;committer date&gt;</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&lt;title\nline&gt;</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&lt;full commit\nmessage&gt;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<i>reference</i></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&lt;abbrev\nhash&gt; (&lt;title line&gt;, &lt;short author date&gt;)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This format is\nused to refer to another commit in a commit message and is\nthe same as <b>--pretty='format:%C(auto)%h (%s, %ad)'</b>.\nBy default, the date is formatted with <b>--date=short</b>\nunless another <b>--date</b> option is explicitly specified.\nAs with any <b>format:</b> with format placeholders, its\noutput is not affected by other options like\n<b>--decorate</b> and <b>--walk-reflogs</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<i>email</i></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">From\n&lt;hash&gt; &lt;date&gt; <br>\nFrom: &lt;author&gt; <br>\nDate: &lt;author date&gt; <br>\nSubject: [PATCH] &lt;title line&gt;</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&lt;full commit\nmessage&gt;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<i>mboxrd</i></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Like\n<i>email</i>, but lines in the commit message starting with\n&quot;From &quot; (preceded by zero or more\n&quot;&gt;&quot;) are quoted with &quot;&gt;&quot; so they\naren&rsquo;t confused as starting a new commit.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<i>raw</i></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The <i>raw</i>\nformat shows the entire commit exactly as stored in the\ncommit object. Notably, the hashes are displayed in full,\nregardless of whether --abbrev or --no-abbrev are used, and\n<i>parents</i> information show the true parent commits,\nwithout taking grafts or history simplification into\naccount. Note that this format affects the way commits are\ndisplayed, but not the way the diff is shown e.g. with\n<b>git log --raw</b>. To get full object names in a raw diff\nformat, use <b>--no-abbrev</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<i>format:&lt;string&gt;</i></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\n<i>format:&lt;string&gt;</i> format allows you to specify\nwhich information you want to show. It works a little bit\nlike printf format, with the notable exception that you get\na newline with <i>%n</i> instead of <i>\\n</i>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">E.g,\n<i>format:&quot;The author of %h was %an, %ar%nThe title was\n&gt;&gt;%s&lt;&lt;%n&quot;</i> would show something like\nthis:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">The author of\nfe6e0ee was Junio C Hamano, 23 hours ago <br>\nThe title was &gt;&gt;t4119: test autocomputing -p&lt;n&gt;\nfor traditional diff input.&lt;&lt;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\nplaceholders are:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nPlaceholders that expand to a single literal character:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%n</i></p>\n\n<p style=\"margin-left:29%;\">newline</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%%</i></p>\n\n<p style=\"margin-left:29%;\">a raw <i>%</i></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%x00</i></p>\n\n<p style=\"margin-left:29%;\">print a byte from a hex\ncode</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nPlaceholders that affect formatting of later\nplaceholders:</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%Cred</i></p>\n\n<p style=\"margin-left:29%;\">switch color to red</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%Cgreen</i></p>\n\n<p style=\"margin-left:29%;\">switch color to green</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%Cblue</i></p>\n\n<p style=\"margin-left:29%;\">switch color to blue</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%Creset</i></p>\n\n<p style=\"margin-left:29%;\">reset color</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%C(...)</i></p>\n\n<p style=\"margin-left:29%;\">color specification, as\ndescribed under Values in the &quot;CONFIGURATION FILE&quot;\nsection of <a href=\"https://man.page/1/git-config\">git-config(1)</a>. By default, colors are\nshown only when enabled for log output (by\n<b>color.diff</b>, <b>color.ui</b>, or <b>--color</b>, and\nrespecting the <b>auto</b> settings of the former if we are\ngoing to a terminal). <b>%C(auto,...)</b> is accepted as a\nhistorical synonym for the default (e.g.,\n<b>%C(auto,red)</b>). Specifying <b>%C(always,...)</b> will\nshow the colors even when color is not otherwise enabled\n(though consider just using <b>--color=always</b> to enable\ncolor for the whole output, including this format and\nanything else git might color). <b>auto</b> alone (i.e.\n<b>%C(auto)</b>) will turn on auto coloring on the next\nplaceholders until the color is switched again.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%m</i></p>\n\n<p style=\"margin-left:29%;\">left (<b>&lt;</b>), right\n(<b>&gt;</b>) or boundary (<b>-</b>) mark</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%w([&lt;w&gt;[,&lt;i1&gt;[,&lt;i2&gt;]]])</i></p>\n\n<p style=\"margin-left:29%;\">switch line wrapping, like the\n-w option of <a href=\"https://man.page/1/git-shortlog\">git-shortlog(1)</a>.</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%&lt;(&lt;N&gt;[,trunc|ltrunc|mtrunc])</i></p>\n\n<p style=\"margin-left:29%;\">make the next placeholder take\nat least N columns, padding spaces on the right if\nnecessary. Optionally truncate at the beginning (ltrunc),\nthe middle (mtrunc) or the end (trunc) if the output is\nlonger than N columns. Note that truncating only works\ncorrectly with N &gt;= 2.</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%&lt;|(&lt;N&gt;)</i></p>\n\n<p style=\"margin-left:29%;\">make the next placeholder take\nat least until Nth columns, padding spaces on the right if\nnecessary</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%&gt;(&lt;N&gt;)</i>,\n<i>%&gt;|(&lt;N&gt;)</i></p>\n\n<p style=\"margin-left:29%;\">similar to\n<i>%&lt;(&lt;N&gt;)</i>, <i>%&lt;|(&lt;N&gt;)</i>\nrespectively, but padding spaces on the left</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%&gt;&gt;(&lt;N&gt;)</i>,\n<i>%&gt;&gt;|(&lt;N&gt;)</i></p>\n\n<p style=\"margin-left:29%;\">similar to\n<i>%&gt;(&lt;N&gt;)</i>, <i>%&gt;|(&lt;N&gt;)</i>\nrespectively, except that if the next placeholder takes more\nspaces than given and there are spaces on its left, use\nthose spaces</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%&gt;&lt;(&lt;N&gt;)</i>,\n<i>%&gt;&lt;|(&lt;N&gt;)</i></p>\n\n<p style=\"margin-left:29%;\">similar to\n<i>%&lt;(&lt;N&gt;)</i>, <i>%&lt;|(&lt;N&gt;)</i>\nrespectively, but padding both sides (i.e. the text is\ncentered)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nPlaceholders that expand to information extracted from the\ncommit:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%H</i></p>\n\n<p style=\"margin-left:29%;\">commit hash</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%h</i></p>\n\n<p style=\"margin-left:29%;\">abbreviated commit hash</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%T</i></p>\n\n<p style=\"margin-left:29%;\">tree hash</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%t</i></p>\n\n<p style=\"margin-left:29%;\">abbreviated tree hash</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%P</i></p>\n\n<p style=\"margin-left:29%;\">parent hashes</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%p</i></p>\n\n<p style=\"margin-left:29%;\">abbreviated parent hashes</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%an</i></p>\n\n<p style=\"margin-left:29%;\">author name</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%aN</i></p>\n\n<p style=\"margin-left:29%;\">author name (respecting\n.mailmap, see <a href=\"https://man.page/1/git-shortlog\">git-shortlog(1)</a> or\n<a href=\"https://man.page/1/git-blame\">git-blame(1)</a>)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%ae</i></p>\n\n<p style=\"margin-left:29%;\">author email</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%aE</i></p>\n\n<p style=\"margin-left:29%;\">author email (respecting\n.mailmap, see <a href=\"https://man.page/1/git-shortlog\">git-shortlog(1)</a> or\n<a href=\"https://man.page/1/git-blame\">git-blame(1)</a>)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%al</i></p>\n\n<p style=\"margin-left:29%;\">author email local-part (the\npart before the <i>@</i> sign)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%aL</i></p>\n\n<p style=\"margin-left:29%;\">author local-part (see\n<i>%al</i>) respecting .mailmap, see <a href=\"https://man.page/1/git-shortlog\">git-shortlog(1)</a>\nor <a href=\"https://man.page/1/git-blame\">git-blame(1)</a>)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%ad</i></p>\n\n<p style=\"margin-left:29%;\">author date (format respects\n--date= option)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%aD</i></p>\n\n<p style=\"margin-left:29%;\">author date, RFC2822 style</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%ar</i></p>\n\n<p style=\"margin-left:29%;\">author date, relative</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%at</i></p>\n\n<p style=\"margin-left:29%;\">author date, UNIX timestamp</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%ai</i></p>\n\n<p style=\"margin-left:29%;\">author date, ISO 8601-like\nformat</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%aI</i></p>\n\n<p style=\"margin-left:29%;\">author date, strict ISO 8601\nformat</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%as</i></p>\n\n<p style=\"margin-left:29%;\">author date, short format\n(<b>YYYY-MM-DD</b>)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%ah</i></p>\n\n<p style=\"margin-left:29%;\">author date, human style (like\nthe <b>--date=human</b> option of\n<a href=\"https://man.page/1/git-rev-list\">git-rev-list(1)</a>)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%cn</i></p>\n\n<p style=\"margin-left:29%;\">committer name</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%cN</i></p>\n\n<p style=\"margin-left:29%;\">committer name (respecting\n.mailmap, see <a href=\"https://man.page/1/git-shortlog\">git-shortlog(1)</a> or\n<a href=\"https://man.page/1/git-blame\">git-blame(1)</a>)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%ce</i></p>\n\n<p style=\"margin-left:29%;\">committer email</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%cE</i></p>\n\n<p style=\"margin-left:29%;\">committer email (respecting\n.mailmap, see <a href=\"https://man.page/1/git-shortlog\">git-shortlog(1)</a> or\n<a href=\"https://man.page/1/git-blame\">git-blame(1)</a>)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%cl</i></p>\n\n<p style=\"margin-left:29%;\">committer email local-part (the\npart before the <i>@</i> sign)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%cL</i></p>\n\n<p style=\"margin-left:29%;\">committer local-part (see\n<i>%cl</i>) respecting .mailmap, see <a href=\"https://man.page/1/git-shortlog\">git-shortlog(1)</a>\nor <a href=\"https://man.page/1/git-blame\">git-blame(1)</a>)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%cd</i></p>\n\n<p style=\"margin-left:29%;\">committer date (format respects\n--date= option)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%cD</i></p>\n\n<p style=\"margin-left:29%;\">committer date, RFC2822\nstyle</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%cr</i></p>\n\n<p style=\"margin-left:29%;\">committer date, relative</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%ct</i></p>\n\n<p style=\"margin-left:29%;\">committer date, UNIX\ntimestamp</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%ci</i></p>\n\n<p style=\"margin-left:29%;\">committer date, ISO 8601-like\nformat</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%cI</i></p>\n\n<p style=\"margin-left:29%;\">committer date, strict ISO 8601\nformat</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%cs</i></p>\n\n<p style=\"margin-left:29%;\">committer date, short format\n(<b>YYYY-MM-DD</b>)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%ch</i></p>\n\n<p style=\"margin-left:29%;\">committer date, human style\n(like the <b>--date=human</b> option of\n<a href=\"https://man.page/1/git-rev-list\">git-rev-list(1)</a>)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%d</i></p>\n\n<p style=\"margin-left:29%;\">ref names, like the --decorate\noption of <a href=\"https://man.page/1/git-log\">git-log(1)</a></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%D</i></p>\n\n<p style=\"margin-left:29%;\">ref names without the &quot;\n(&quot;, &quot;)&quot; wrapping.</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%(describe[:options])</i></p>\n\n<p style=\"margin-left:29%;\">human-readable name, like\n<a href=\"https://man.page/1/git-describe\">git-describe(1)</a>; empty string for undescribable\ncommits. The <b>describe</b> string may be followed by a\ncolon and zero or more comma-separated options. Descriptions\ncan be inconsistent when tags are added or removed at the\nsame time.</p>\n\n<p style=\"margin-left:35%; margin-top: 1em\">&bull;\n<i>match=&lt;pattern&gt;</i>: Only consider tags matching\nthe given <b>glob(7)</b> pattern, excluding the\n&quot;refs/tags/&quot; prefix.</p>\n\n<p style=\"margin-left:35%; margin-top: 1em\">&bull;\n<i>exclude=&lt;pattern&gt;</i>: Do not consider tags\nmatching the given <b>glob(7)</b> pattern, excluding the\n&quot;refs/tags/&quot; prefix.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%S</i></p>\n\n<p style=\"margin-left:29%;\">ref name given on the command\nline by which the commit was reached (like <b>git log\n--source</b>), only works with <b>git log</b></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%e</i></p>\n\n<p style=\"margin-left:29%;\">encoding</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%s</i></p>\n\n<p style=\"margin-left:29%;\">subject</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%f</i></p>\n\n<p style=\"margin-left:29%;\">sanitized subject line,\nsuitable for a filename</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%b</i></p>\n\n<p style=\"margin-left:29%;\">body</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%B</i></p>\n\n<p style=\"margin-left:29%;\">raw body (unwrapped subject and\nbody)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%N</i></p>\n\n<p style=\"margin-left:29%;\">commit notes</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%GG</i></p>\n\n<p style=\"margin-left:29%;\">raw verification message from\nGPG for a signed commit</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%G?</i></p>\n\n<p style=\"margin-left:29%;\">show &quot;G&quot; for a good\n(valid) signature, &quot;B&quot; for a bad signature,\n&quot;U&quot; for a good signature with unknown validity,\n&quot;X&quot; for a good signature that has expired,\n&quot;Y&quot; for a good signature made by an expired key,\n&quot;R&quot; for a good signature made by a revoked key,\n&quot;E&quot; if the signature cannot be checked (e.g.\nmissing key) and &quot;N&quot; for no signature</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%GS</i></p>\n\n<p style=\"margin-left:29%;\">show the name of the signer for\na signed commit</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%GK</i></p>\n\n<p style=\"margin-left:29%;\">show the key used to sign a\nsigned commit</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%GF</i></p>\n\n<p style=\"margin-left:29%;\">show the fingerprint of the key\nused to sign a signed commit</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%GP</i></p>\n\n<p style=\"margin-left:29%;\">show the fingerprint of the\nprimary key whose subkey was used to sign a signed\ncommit</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%GT</i></p>\n\n<p style=\"margin-left:29%;\">show the trust level for the\nkey used to sign a signed commit</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%gD</i></p>\n\n<p style=\"margin-left:29%;\">reflog selector, e.g.,\n<b>refs/stash@{1}</b> or <b>refs/stash@{2 minutes ago}</b>;\nthe format follows the rules described for the <b>-g</b>\noption. The portion before the <b>@</b> is the refname as\ngiven on the command line (so <b>git log -g\nrefs/heads/master</b> would yield\n<b>refs/heads/master@{0}</b>).</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%gd</i></p>\n\n<p style=\"margin-left:29%;\">shortened reflog selector; same\nas <b>%gD</b>, but the refname portion is shortened for\nhuman readability (so <b>refs/heads/master</b> becomes just\n<b>master</b>).</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%gn</i></p>\n\n<p style=\"margin-left:29%;\">reflog identity name</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%gN</i></p>\n\n<p style=\"margin-left:29%;\">reflog identity name\n(respecting .mailmap, see <a href=\"https://man.page/1/git-shortlog\">git-shortlog(1)</a> or\n<a href=\"https://man.page/1/git-blame\">git-blame(1)</a>)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%ge</i></p>\n\n<p style=\"margin-left:29%;\">reflog identity email</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%gE</i></p>\n\n<p style=\"margin-left:29%;\">reflog identity email\n(respecting .mailmap, see <a href=\"https://man.page/1/git-shortlog\">git-shortlog(1)</a> or\n<a href=\"https://man.page/1/git-blame\">git-blame(1)</a>)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%gs</i></p>\n\n<p style=\"margin-left:29%;\">reflog subject</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><i>%(trailers[:options])</i></p>\n\n<p style=\"margin-left:29%;\">display the trailers of the\nbody as interpreted by <a href=\"https://man.page/1/git-interpret-trailers\">git-interpret-trailers(1)</a>. The\n<b>trailers</b> string may be followed by a colon and zero\nor more comma-separated options. If any option is provided\nmultiple times the last occurrence wins.</p>\n\n<p style=\"margin-left:29%; margin-top: 1em\">The boolean\noptions accept an optional value <b>[=&lt;BOOL&gt;]</b>. The\nvalues <b>true</b>, <b>false</b>, <b>on</b>, <b>off</b> etc.\nare all accepted. See the &quot;boolean&quot; sub-section in\n&quot;EXAMPLES&quot; in <a href=\"https://man.page/1/git-config\">git-config(1)</a>. If a boolean\noption is given with no value, it&rsquo;s enabled.</p>\n\n<p style=\"margin-left:35%; margin-top: 1em\">&bull;\n<i>key=&lt;K&gt;</i>: only show trailers with specified key.\nMatching is done case-insensitively and trailing colon is\noptional. If option is given multiple times trailer lines\nmatching any of the keys are shown. This option\nautomatically enables the <b>only</b> option so that\nnon-trailer lines in the trailer block are hidden. If that\nis not desired it can be disabled with <b>only=false</b>.\nE.g., <b>%(trailers:key=Reviewed-by)</b> shows trailer lines\nwith key <b>Reviewed-by</b>.</p>\n\n<p style=\"margin-left:35%; margin-top: 1em\">&bull;\n<i>only[=&lt;BOOL&gt;]</i>: select whether non-trailer lines\nfrom the trailer block should be included.</p>\n\n<p style=\"margin-left:35%; margin-top: 1em\">&bull;\n<i>separator=&lt;SEP&gt;</i>: specify a separator inserted\nbetween trailer lines. When this option is not given each\ntrailer line is terminated with a line feed character. The\nstring SEP may contain the literal formatting codes\ndescribed above. To use comma as separator one must use\n<b>%x2C</b> as it would otherwise be parsed as next option.\nE.g., <b>%(trailers:key=Ticket,separator=%x2C )</b> shows\nall trailer lines whose key is &quot;Ticket&quot; separated\nby a comma and a space.</p>\n\n<p style=\"margin-left:35%; margin-top: 1em\">&bull;\n<i>unfold[=&lt;BOOL&gt;]</i>: make it behave as if\ninterpret-trailer&rsquo;s <b>--unfold</b> option was given.\nE.g., <b>%(trailers:only,unfold=true)</b> unfolds and shows\nall trailer lines.</p>\n\n<p style=\"margin-left:35%; margin-top: 1em\">&bull;\n<i>keyonly[=&lt;BOOL&gt;]</i>: only show the key part of the\ntrailer.</p>\n\n<p style=\"margin-left:35%; margin-top: 1em\">&bull;\n<i>valueonly[=&lt;BOOL&gt;]</i>: only show the value part of\nthe trailer.</p>\n\n<p style=\"margin-left:35%; margin-top: 1em\">&bull;\n<i>key_value_separator=&lt;SEP&gt;</i>: specify a separator\ninserted between trailer lines. When this option is not\ngiven each trailer key-value pair is separated by &quot;:\n&quot;. Otherwise it shares the same semantics as\n<i>separator=&lt;SEP&gt;</i> above.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><big>Note</big></b>\n<br>\nSome placeholders may depend on other options given to the\nrevision traversal engine. For example, the <b>%g*</b>\nreflog options will insert an empty string unless we are\ntraversing reflog entries (e.g., by <b>git log -g</b>). The\n<b>%d</b> and <b>%D</b> placeholders will use the\n&quot;short&quot; decoration format if <b>--decorate</b> was\nnot already provided on the command line.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If you add a\n<b>+</b> (plus sign) after <i>%</i> of a placeholder, a\nline-feed is inserted immediately before the expansion if\nand only if the placeholder expands to a non-empty\nstring.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If you add a\n<b>-</b> (minus sign) after <i>%</i> of a placeholder, all\nconsecutive line-feeds immediately preceding the expansion\nare deleted if and only if the placeholder expands to an\nempty string.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If you add a\n&rsquo; &rsquo; (space) after <i>%</i> of a placeholder, a\nspace is inserted immediately before the expansion if and\nonly if the placeholder expands to a non-empty string.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<i>tformat:</i></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\n<i>tformat:</i> format works exactly like <i>format:</i>,\nexcept that it provides &quot;terminator&quot; semantics\ninstead of &quot;separator&quot; semantics. In other words,\neach commit has the message terminator character (usually a\nnewline) appended, rather than a separator placed between\nentries. This means that the final entry of a single-line\nformat will be properly terminated with a new line, just as\nthe &quot;oneline&quot; format does. For example:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ git log -2\n--pretty=format:%h 4da45bef \\ <br>\n| perl -pe '$_ .= &quot; -- NO NEWLINE\\n&quot; unless /\\n/'\n<br>\n4da45be <br>\n7134973 -- NO NEWLINE</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ git log -2\n--pretty=tformat:%h 4da45bef \\ <br>\n| perl -pe '$_ .= &quot; -- NO NEWLINE\\n&quot; unless /\\n/'\n<br>\n4da45be <br>\n7134973</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">In addition,\nany unrecognized string that has a <b>%</b> in it is\ninterpreted as if it has <b>tformat:</b> in front of it. For\nexample, these two are equivalent:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ git log -2\n--pretty=tformat:%h 4da45bef <br>\n$ git log -2 --pretty=%h 4da45bef</p>\n\n<h2>DIFF FORMATTING\n<a name=\"DIFF FORMATTING\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>By\ndefault, <b>git log</b> does not generate any diff output.\nThe options below can be used to show the changes made by\neach commit.</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>Note that\nunless one of <b>--diff-merges</b> variants (including short\n<b>-m</b>, <b>-c</b>, and <b>--cc</b> options) is explicitly\ngiven, merge commits will not show a diff, even if a diff\nformat like <b>--patch</b> is selected, nor will they match\nsearch options like <b>-S</b>. The exception is when\n<b>--first-parent</b> is in use, in which case\n<b>first-parent</b> is the default format.</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>-p, -u,\n--patch</big></p>\n\n<p style=\"margin-left:17%;\"><big>Generate patch (see\nsection on generating patches).</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>-s,\n--no-patch</big></p>\n\n<p style=\"margin-left:17%;\"><big>Suppress diff output.\nUseful for commands like <b>git show</b> that show the patch\nby default, or to cancel the effect of\n<b>--patch</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--diff-merges=(off|none|on|first-parent|1|separate|m|combined|c|dense-combined|cc),\n--no-diff-merges</big></p>\n\n<p style=\"margin-left:17%;\"><big>Specify diff format to be\nused for merge commits. Default is <b>off</b> unless\n<b>--first-parent</b> is in use, in which case\n<b>first-parent</b> is the default.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>--diff-merges=(off|none),\n--no-diff-merges</big></p>\n\n<p style=\"margin-left:23%;\"><big>Disable output of diffs\nfor merge commits. Useful to override implied\nvalue.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>--diff-merges=on,\n--diff-merges=m, -m</big></p>\n\n<p style=\"margin-left:23%;\"><big>This option makes diff\noutput for merge commits to be shown in the default format.\n<b>-m</b> will produce the output only if <b>-p</b> is given\nas well. The default format could be changed using\n<b>log.diffMerges</b> configuration parameter, which default\nvalue is <b>separate</b>.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>--diff-merges=first-parent,\n--diff-merges=1</big></p>\n\n<p style=\"margin-left:23%;\"><big>This option makes merge\ncommits show the full diff with respect to the first parent\nonly.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>--diff-merges=separate</big></p>\n\n<p style=\"margin-left:23%;\"><big>This makes merge commits\nshow the full diff with respect to each of the parents.\nSeparate log entry and diff is generated for each\nparent.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>--diff-merges=combined,\n--diff-merges=c, -c</big></p>\n\n<p style=\"margin-left:23%;\"><big>With this option, diff\noutput for a merge commit shows the differences from each of\nthe parents to the merge result simultaneously instead of\nshowing pairwise diff between a parent and the result one at\na time. Furthermore, it lists only files which were modified\nfrom all parents. <b>-c</b> implies <b>-p</b>.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>--diff-merges=dense-combined,\n--diff-merges=cc, --cc</big></p>\n\n<p style=\"margin-left:23%;\"><big>With this option the\noutput produced by <b>--diff-merges=combined</b> is further\ncompressed by omitting uninteresting hunks whose contents in\nthe parents have only two variants and the merge result\npicks one of them without modification. <b>--cc</b> implies\n<b>-p</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--combined-all-paths</big></p>\n\n<p style=\"margin-left:17%;\"><big>This flag causes combined\ndiffs (used for merge commits) to list the name of the file\nfrom all parents. It thus only has effect when\n<b>--diff-merges=[dense-]combined</b> is in use, and is\nlikely only useful if filename changes are detected (i.e.\nwhen either rename or copy detection have been\nrequested).</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>-U&lt;n&gt;,\n--unified=&lt;n&gt;</big></p>\n\n<p style=\"margin-left:17%;\"><big>Generate diffs with\n&lt;n&gt; lines of context instead of the usual three.\nImplies <b>--patch</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--output=&lt;file&gt;</big></p>\n\n<p style=\"margin-left:17%;\"><big>Output to a specific file\ninstead of stdout.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--output-indicator-new=&lt;char&gt;,\n--output-indicator-old=&lt;char&gt;,\n--output-indicator-context=&lt;char&gt;</big></p>\n\n<p style=\"margin-left:17%;\"><big>Specify the character used\nto indicate new, old or context lines in the generated\npatch. Normally they are <i>+</i>, <i>-</i> and ' '\nrespectively.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--raw</big></p>\n\n<p style=\"margin-left:17%;\"><big>For each commit, show a\nsummary of changes using the raw diff format. See the\n&quot;RAW OUTPUT FORMAT&quot; section of <a href=\"https://man.page/1/git-diff\">git-diff(1)</a>.\nThis is different from showing the log itself in raw format,\nwhich you can achieve with <b>--format=raw</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--patch-with-raw</big></p>\n\n<p style=\"margin-left:17%;\"><big>Synonym for <b>-p\n--raw</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>-t</big></p>\n\n<p style=\"margin-left:17%;\"><big>Show the tree objects in\nthe diff output.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--indent-heuristic</big></p>\n\n<p style=\"margin-left:17%;\"><big>Enable the heuristic that\nshifts diff hunk boundaries to make patches easier to read.\nThis is the default.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--no-indent-heuristic</big></p>\n\n<p style=\"margin-left:17%;\"><big>Disable the indent\nheuristic.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--minimal</big></p>\n\n<p style=\"margin-left:17%;\"><big>Spend extra time to make\nsure the smallest possible diff is produced.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--patience</big></p>\n\n<p style=\"margin-left:17%;\"><big>Generate a diff using the\n&quot;patience diff&quot; algorithm.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--histogram</big></p>\n\n<p style=\"margin-left:17%;\"><big>Generate a diff using the\n&quot;histogram diff&quot; algorithm.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--anchored=&lt;text&gt;</big></p>\n\n<p style=\"margin-left:17%;\"><big>Generate a diff using the\n&quot;anchored diff&quot; algorithm.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>This\noption may be specified more than once.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>If a line\nexists in both the source and destination, exists only once,\nand starts with this text, this algorithm attempts to\nprevent it from appearing as a deletion or addition in the\noutput. It uses the &quot;patience diff&quot; algorithm\ninternally.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--diff-algorithm={patience|minimal|histogram|myers}</big></p>\n\n<p style=\"margin-left:17%;\"><big>Choose a diff algorithm.\nThe variants are as follows:</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big><b>default</b>,\n<b>myers</b></big></p>\n\n<p style=\"margin-left:23%;\"><big>The basic greedy diff\nalgorithm. Currently, this is the default.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big><b>minimal</b></big></p>\n\n<p style=\"margin-left:23%;\"><big>Spend extra time to make\nsure the smallest possible diff is produced.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big><b>patience</b></big></p>\n\n<p style=\"margin-left:23%;\"><big>Use &quot;patience\ndiff&quot; algorithm when generating patches.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big><b>histogram</b></big></p>\n\n<p style=\"margin-left:23%;\"><big>This algorithm extends the\npatience algorithm to &quot;support low-occurrence common\nelements&quot;.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>For\ninstance, if you configured the <b>diff.algorithm</b>\nvariable to a non-default value and want to use the default\none, then you have to use <b>--diff-algorithm=default</b>\noption.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--stat[=&lt;width&gt;[,&lt;name-width&gt;[,&lt;count&gt;]]]</big></p>\n\n<p style=\"margin-left:17%;\"><big>Generate a diffstat. By\ndefault, as much space as necessary will be used for the\nfilename part, and the rest for the graph part. Maximum\nwidth defaults to terminal width, or 80 columns if not\nconnected to a terminal, and can be overridden by\n<b>&lt;width&gt;</b>. The width of the filename part can be\nlimited by giving another width <b>&lt;name-width&gt;</b>\nafter a comma. The width of the graph part can be limited by\nusing <b>--stat-graph-width=&lt;width&gt;</b> (affects all\ncommands generating a stat graph) or by setting\n<b>diff.statGraphWidth=&lt;width&gt;</b> (does not affect\n<b>git format-patch</b>). By giving a third parameter\n<b>&lt;count&gt;</b>, you can limit the output to the first\n<b>&lt;count&gt;</b> lines, followed by <b>...</b> if there\nare more.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>These\nparameters can also be set individually with\n<b>--stat-width=&lt;width&gt;</b>,\n<b>--stat-name-width=&lt;name-width&gt;</b> and\n<b>--stat-count=&lt;count&gt;</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--compact-summary</big></p>\n\n<p style=\"margin-left:17%;\"><big>Output a condensed summary\nof extended header information such as file creations or\ndeletions (&quot;new&quot; or &quot;gone&quot;, optionally\n&quot;+l&quot; if it&rsquo;s a symlink) and mode changes\n(&quot;+x&quot; or &quot;-x&quot; for adding or removing\nexecutable bit respectively) in diffstat. The information is\nput between the filename part and the graph part. Implies\n<b>--stat</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--numstat</big></p>\n\n<p style=\"margin-left:17%;\"><big>Similar to <b>--stat</b>,\nbut shows number of added and deleted lines in decimal\nnotation and pathname without abbreviation, to make it more\nmachine friendly. For binary files, outputs two <b>-</b>\ninstead of saying <b>0 0</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--shortstat</big></p>\n\n<p style=\"margin-left:17%;\"><big>Output only the last line\nof the <b>--stat</b> format containing total number of\nmodified files, as well as number of added and deleted\nlines.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>-X[&lt;param1,param2,...&gt;],\n--dirstat[=&lt;param1,param2,...&gt;]</big></p>\n\n<p style=\"margin-left:17%;\"><big>Output the distribution of\nrelative amount of changes for each sub-directory. The\nbehavior of <b>--dirstat</b> can be customized by passing it\na comma separated list of parameters. The defaults are\ncontrolled by the <b>diff.dirstat</b> configuration variable\n(see <a href=\"https://man.page/1/git-config\">git-config(1)</a>). The following parameters are\navailable:</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big><b>changes</b></big></p>\n\n<p style=\"margin-left:23%;\"><big>Compute the dirstat\nnumbers by counting the lines that have been removed from\nthe source, or added to the destination. This ignores the\namount of pure code movements within a file. In other words,\nrearranging lines in a file is not counted as much as other\nchanges. This is the default behavior when no parameter is\ngiven.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big><b>lines</b></big></p>\n\n<p style=\"margin-left:23%;\"><big>Compute the dirstat\nnumbers by doing the regular line-based diff analysis, and\nsumming the removed/added line counts. (For binary files,\ncount 64-byte chunks instead, since binary files have no\nnatural concept of lines). This is a more expensive\n<b>--dirstat</b> behavior than the <b>changes</b> behavior,\nbut it does count rearranged lines within a file as much as\nother changes. The resulting output is consistent with what\nyou get from the other <b>--*stat</b> options.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big><b>files</b></big></p>\n\n<p style=\"margin-left:23%;\"><big>Compute the dirstat\nnumbers by counting the number of files changed. Each\nchanged file counts equally in the dirstat analysis. This is\nthe computationally cheapest <b>--dirstat</b> behavior,\nsince it does not have to look at the file contents at\nall.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big><b>cumulative</b></big></p>\n\n<p style=\"margin-left:23%;\"><big>Count changes in a child\ndirectory for the parent directory as well. Note that when\nusing <b>cumulative</b>, the sum of the percentages reported\nmay exceed 100%. The default (non-cumulative) behavior can\nbe specified with the <b>noncumulative</b>\nparameter.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>&lt;limit&gt;</big></p>\n\n<p style=\"margin-left:23%;\"><big>An integer parameter\nspecifies a cut-off percent (3% by default). Directories\ncontributing less than this percentage of the changes are\nnot shown in the output.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>Example:\nThe following will count changed files, while ignoring\ndirectories with less than 10% of the total amount of\nchanged files, and accumulating child directory counts in\nthe parent directories:\n<b>--dirstat=files,10,cumulative</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--cumulative</big></p>\n\n<p style=\"margin-left:17%;\"><big>Synonym for\n--dirstat=cumulative</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--dirstat-by-file[=&lt;param1,param2&gt;...]</big></p>\n\n<p style=\"margin-left:17%;\"><big>Synonym for\n--dirstat=files,param1,param2...</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--summary</big></p>\n\n<p style=\"margin-left:17%;\"><big>Output a condensed summary\nof extended header information such as creations, renames\nand mode changes.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--patch-with-stat</big></p>\n\n<p style=\"margin-left:17%;\"><big>Synonym for <b>-p\n--stat</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>-z</big></p>\n\n<p style=\"margin-left:17%;\"><big>Separate the commits with\nNULs instead of with new newlines.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>Also, when\n<b>--raw</b> or <b>--numstat</b> has been given, do not\nmunge pathnames and use NULs as output field\nterminators.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>Without\nthis option, pathnames with &quot;unusual&quot; characters\nare quoted as explained for the configuration variable\n<b>core.quotePath</b> (see <a href=\"https://man.page/1/git-config\">git-config(1)</a>).</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--name-only</big></p>\n\n<p style=\"margin-left:17%;\"><big>Show only names of changed\nfiles. The file names are often encoded in UTF-8. For more\ninformation see the discussion about encoding in the\n<a href=\"https://man.page/1/git-log\">git-log(1)</a> manual page.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--name-status</big></p>\n\n<p style=\"margin-left:17%;\"><big>Show only names and status\nof changed files. See the description of the\n<b>--diff-filter</b> option on what the status letters mean.\nJust like <b>--name-only</b> the file names are often\nencoded in UTF-8.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--submodule[=&lt;format&gt;]</big></p>\n\n<p style=\"margin-left:17%;\"><big>Specify how differences in\nsubmodules are shown. When specifying\n<b>--submodule=short</b> the <i>short</i> format is used.\nThis format just shows the names of the commits at the\nbeginning and end of the range. When <b>--submodule</b> or\n<b>--submodule=log</b> is specified, the <i>log</i> format\nis used. This format lists the commits in the range like\n<a href=\"https://man.page/1/git-submodule\">git-submodule(1)</a> <b>summary</b> does. When\n<b>--submodule=diff</b> is specified, the <i>diff</i> format\nis used. This format shows an inline diff of the changes in\nthe submodule contents between the commit range. Defaults to\n<b>diff.submodule</b> or the <i>short</i> format if the\nconfig option is unset.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--color[=&lt;when&gt;]</big></p>\n\n<p style=\"margin-left:17%;\"><big>Show colored diff.\n<b>--color</b> (i.e. without <i>=&lt;when&gt;</i>) is the\nsame as <b>--color=always</b>. <i>&lt;when&gt;</i> can be\none of <b>always</b>, <b>never</b>, or\n<b>auto</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--no-color</big></p>\n\n<p style=\"margin-left:17%;\"><big>Turn off colored diff. It\nis the same as <b>--color=never</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--color-moved[=&lt;mode&gt;]</big></p>\n\n<p style=\"margin-left:17%;\"><big>Moved lines of code are\ncolored differently. The &lt;mode&gt; defaults to <i>no</i>\nif the option is not given and to <i>zebra</i> if the option\nwith no mode is given. The mode must be one of:</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>no</big></p>\n\n<p style=\"margin-left:23%;\"><big>Moved lines are not\nhighlighted.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>default</big></p>\n\n<p style=\"margin-left:23%;\"><big>Is a synonym for\n<b>zebra</b>. This may change to a more sensible mode in the\nfuture.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>plain</big></p>\n\n<p style=\"margin-left:23%;\"><big>Any line that is added in\none location and was removed in another location will be\ncolored with <i>color.diff.newMoved</i>. Similarly\n<i>color.diff.oldMoved</i> will be used for removed lines\nthat are added somewhere else in the diff. This mode picks\nup any moved line, but it is not very useful in a review to\ndetermine if a block of code was moved without\npermutation.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>blocks</big></p>\n\n<p style=\"margin-left:23%;\"><big>Blocks of moved text of at\nleast 20 alphanumeric characters are detected greedily. The\ndetected blocks are painted using either the\n<i>color.diff.{old,new}Moved</i> color. Adjacent blocks\ncannot be told apart.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>zebra</big></p>\n\n<p style=\"margin-left:23%;\"><big>Blocks of moved text are\ndetected as in <i>blocks</i> mode. The blocks are painted\nusing either the <i>color.diff.{old,new}Moved</i> color or\n<i>color.diff.{old,new}MovedAlternative</i>. The change\nbetween the two colors indicates that a new block was\ndetected.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>dimmed-zebra</big></p>\n\n<p style=\"margin-left:23%;\"><big>Similar to <i>zebra</i>,\nbut additional dimming of uninteresting parts of moved code\nis performed. The bordering lines of two adjacent blocks are\nconsidered interesting, the rest is uninteresting.\n<b>dimmed_zebra</b> is a deprecated synonym.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--no-color-moved</big></p>\n\n<p style=\"margin-left:17%;\"><big>Turn off move detection.\nThis can be used to override configuration settings. It is\nthe same as <b>--color-moved=no</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--color-moved-ws=&lt;modes&gt;</big></p>\n\n<p style=\"margin-left:17%;\"><big>This configures how\nwhitespace is ignored when performing the move detection for\n<b>--color-moved</b>. These modes can be given as a comma\nseparated list:</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>no</big></p>\n\n<p style=\"margin-left:23%;\"><big>Do not ignore whitespace\nwhen performing move detection.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>ignore-space-at-eol</big></p>\n\n<p style=\"margin-left:23%;\"><big>Ignore changes in\nwhitespace at EOL.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>ignore-space-change</big></p>\n\n<p style=\"margin-left:23%;\"><big>Ignore changes in amount\nof whitespace. This ignores whitespace at line end, and\nconsiders all other sequences of one or more whitespace\ncharacters to be equivalent.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>ignore-all-space</big></p>\n\n<p style=\"margin-left:23%;\"><big>Ignore whitespace when\ncomparing lines. This ignores differences even if one line\nhas whitespace where the other line has none.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>allow-indentation-change</big></p>\n\n<p style=\"margin-left:23%;\"><big>Initially ignore any\nwhitespace in the move detection, then group the moved code\nblocks only into a block if the change in whitespace is the\nsame per line. This is incompatible with the other\nmodes.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--no-color-moved-ws</big></p>\n\n<p style=\"margin-left:17%;\"><big>Do not ignore whitespace\nwhen performing move detection. This can be used to override\nconfiguration settings. It is the same as\n<b>--color-moved-ws=no</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--word-diff[=&lt;mode&gt;]</big></p>\n\n<p style=\"margin-left:17%;\"><big>Show a word diff, using\nthe &lt;mode&gt; to delimit changed words. By default, words\nare delimited by whitespace; see <b>--word-diff-regex</b>\nbelow. The &lt;mode&gt; defaults to <i>plain</i>, and must\nbe one of:</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>color</big></p>\n\n<p style=\"margin-left:23%;\"><big>Highlight changed words\nusing only colors. Implies <b>--color</b>.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>plain</big></p>\n\n<p style=\"margin-left:23%;\"><big>Show words as\n<b>[-removed-]</b> and <b>{+added+}</b>. Makes no attempts\nto escape the delimiters if they appear in the input, so the\noutput may be ambiguous.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>porcelain</big></p>\n\n<p style=\"margin-left:23%;\"><big>Use a special line-based\nformat intended for script consumption.\nAdded/removed/unchanged runs are printed in the usual\nunified diff format, starting with a\n<b>+</b>/<b>-</b>/&rsquo; &rsquo; character at the beginning\nof the line and extending to the end of the line. Newlines\nin the input are represented by a tilde <b>~</b> on a line\nof its own.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>none</big></p>\n\n<p style=\"margin-left:23%;\"><big>Disable word diff\nagain.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>Note that\ndespite the name of the first mode, color is used to\nhighlight the changed parts in all modes if\nenabled.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--word-diff-regex=&lt;regex&gt;</big></p>\n\n<p style=\"margin-left:17%;\"><big>Use &lt;regex&gt; to\ndecide what a word is, instead of considering runs of\nnon-whitespace to be a word. Also implies <b>--word-diff</b>\nunless it was already enabled.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>Every\nnon-overlapping match of the &lt;regex&gt; is considered a\nword. Anything between these matches is considered\nwhitespace and ignored(!) for the purposes of finding\ndifferences. You may want to append <b>|[^[:space:]]</b> to\nyour regular expression to make sure that it matches all\nnon-whitespace characters. A match that contains a newline\nis silently truncated(!) at the newline.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>For\nexample, <b>--word-diff-regex=.</b> will treat each\ncharacter as a word and, correspondingly, show differences\ncharacter by character.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>The regex\ncan also be set via a diff driver or configuration option,\nsee <a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a> or <a href=\"https://man.page/1/git-config\">git-config(1)</a>. Giving\nit explicitly overrides any diff driver or configuration\nsetting. Diff drivers override configuration\nsettings.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--color-words[=&lt;regex&gt;]</big></p>\n\n<p style=\"margin-left:17%;\"><big>Equivalent to\n<b>--word-diff=color</b> plus (if a regex was specified)\n<b>--word-diff-regex=&lt;regex&gt;</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--no-renames</big></p>\n\n<p style=\"margin-left:17%;\"><big>Turn off rename detection,\neven when the configuration file gives the default to do\nso.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--[no-]rename-empty</big></p>\n\n<p style=\"margin-left:17%;\"><big>Whether to use empty blobs\nas rename source.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--check</big></p>\n\n<p style=\"margin-left:17%;\"><big>Warn if changes introduce\nconflict markers or whitespace errors. What are considered\nwhitespace errors is controlled by <b>core.whitespace</b>\nconfiguration. By default, trailing whitespaces (including\nlines that consist solely of whitespaces) and a space\ncharacter that is immediately followed by a tab character\ninside the initial indent of the line are considered\nwhitespace errors. Exits with non-zero status if problems\nare found. Not compatible with --exit-code.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--ws-error-highlight=&lt;kind&gt;</big></p>\n\n<p style=\"margin-left:17%;\"><big>Highlight whitespace\nerrors in the <b>context</b>, <b>old</b> or <b>new</b> lines\nof the diff. Multiple values are separated by comma,\n<b>none</b> resets previous values, <b>default</b> reset the\nlist to <b>new</b> and <b>all</b> is a shorthand for\n<b>old,new,context</b>. When this option is not given, and\nthe configuration variable <b>diff.wsErrorHighlight</b> is\nnot set, only whitespace errors in <b>new</b> lines are\nhighlighted. The whitespace errors are colored with\n<b>color.diff.whitespace</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--full-index</big></p>\n\n<p style=\"margin-left:17%;\"><big>Instead of the first\nhandful of characters, show the full pre- and post-image\nblob object names on the &quot;index&quot; line when\ngenerating patch format output.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--binary</big></p>\n\n<p style=\"margin-left:17%;\"><big>In addition to\n<b>--full-index</b>, output a binary diff that can be\napplied with <b>git-apply</b>. Implies\n<b>--patch</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--abbrev[=&lt;n&gt;]</big></p>\n\n<p style=\"margin-left:17%;\"><big>Instead of showing the\nfull 40-byte hexadecimal object name in diff-raw format\noutput and diff-tree header lines, show the shortest prefix\nthat is at least <i>&lt;n&gt;</i> hexdigits long that\nuniquely refers the object. In diff-patch output format,\n<b>--full-index</b> takes higher precedence, i.e. if\n<b>--full-index</b> is specified, full blob names will be\nshown regardless of <b>--abbrev</b>. Non default number of\ndigits can be specified with\n<b>--abbrev=&lt;n&gt;</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>-B[&lt;n&gt;][/&lt;m&gt;],\n--break-rewrites[=[&lt;n&gt;][/&lt;m&gt;]]</big></p>\n\n<p style=\"margin-left:17%;\"><big>Break complete rewrite\nchanges into pairs of delete and create. This serves two\npurposes:</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>It affects\nthe way a change that amounts to a total rewrite of a file\nnot as a series of deletion and insertion mixed together\nwith a very few lines that happen to match textually as the\ncontext, but as a single deletion of everything old followed\nby a single insertion of everything new, and the number\n<b>m</b> controls this aspect of the -B option (defaults to\n60%). <b>-B/70%</b> specifies that less than 30% of the\noriginal should remain in the result for Git to consider it\na total rewrite (i.e. otherwise the resulting patch will be\na series of deletion and insertion mixed together with\ncontext lines).</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>When used\nwith -M, a totally-rewritten file is also considered as the\nsource of a rename (usually -M only considers a file that\ndisappeared as the source of a rename), and the number\n<b>n</b> controls this aspect of the -B option (defaults to\n50%). <b>-B20%</b> specifies that a change with addition and\ndeletion compared to 20% or more of the file&rsquo;s size\nare eligible for being picked up as a possible source of a\nrename to another file.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>-M[&lt;n&gt;],\n--find-renames[=&lt;n&gt;]</big></p>\n\n<p style=\"margin-left:17%;\"><big>If generating diffs,\ndetect and report renames for each commit. For following\nfiles across renames while traversing history, see\n<b>--follow</b>. If <b>n</b> is specified, it is a threshold\non the similarity index (i.e. amount of addition/deletions\ncompared to the file&rsquo;s size). For example,\n<b>-M90%</b> means Git should consider a delete/add pair to\nbe a rename if more than 90% of the file hasn&rsquo;t\nchanged. Without a <b>%</b> sign, the number is to be read\nas a fraction, with a decimal point before it. I.e.,\n<b>-M5</b> becomes 0.5, and is thus the same as\n<b>-M50%</b>. Similarly, <b>-M05</b> is the same as\n<b>-M5%</b>. To limit detection to exact renames, use\n<b>-M100%</b>. The default similarity index is\n50%.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>-C[&lt;n&gt;],\n--find-copies[=&lt;n&gt;]</big></p>\n\n<p style=\"margin-left:17%;\"><big>Detect copies as well as\nrenames. See also <b>--find-copies-harder</b>. If <b>n</b>\nis specified, it has the same meaning as for\n<b>-M&lt;n&gt;</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--find-copies-harder</big></p>\n\n<p style=\"margin-left:17%;\"><big>For performance reasons,\nby default, <b>-C</b> option finds copies only if the\noriginal file of the copy was modified in the same\nchangeset. This flag makes the command inspect unmodified\nfiles as candidates for the source of copy. This is a very\nexpensive operation for large projects, so use it with\ncaution. Giving more than one <b>-C</b> option has the same\neffect.</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>-D,\n--irreversible-delete</big></p>\n\n<p style=\"margin-left:17%;\"><big>Omit the preimage for\ndeletes, i.e. print only the header but not the diff between\nthe preimage and <b>/dev/null</b>. The resulting patch is\nnot meant to be applied with <b>patch</b> or <b>git\napply</b>; this is solely for people who want to just\nconcentrate on reviewing the text after the change. In\naddition, the output obviously lacks enough information to\napply such a patch in reverse, even manually, hence the name\nof the option.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>When used\ntogether with <b>-B</b>, omit also the preimage in the\ndeletion part of a delete/create pair.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>-l&lt;num&gt;</big></p>\n\n<p style=\"margin-left:17%;\"><big>The <b>-M</b> and\n<b>-C</b> options involve some preliminary steps that can\ndetect subsets of renames/copies cheaply, followed by an\nexhaustive fallback portion that compares all remaining\nunpaired destinations to all relevant sources. (For renames,\nonly remaining unpaired sources are relevant; for copies,\nall original sources are relevant.) For N sources and\ndestinations, this exhaustive check is O(N^2). This option\nprevents the exhaustive portion of rename/copy detection\nfrom running if the number of source/destination files\ninvolved exceeds the specified number. Defaults to\ndiff.renameLimit. Note that a value of 0 is treated as\nunlimited.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--diff-filter=[(A|C|D|M|R|T|U|X|B)...[*]]</big></p>\n\n<p style=\"margin-left:17%;\"><big>Select only files that are\nAdded (<b>A</b>), Copied (<b>C</b>), Deleted (<b>D</b>),\nModified (<b>M</b>), Renamed (<b>R</b>), have their type\n(i.e. regular file, symlink, submodule, ...) changed\n(<b>T</b>), are Unmerged (<b>U</b>), are Unknown (<b>X</b>),\nor have had their pairing Broken (<b>B</b>). Any combination\nof the filter characters (including none) can be used. When\n<b>*</b> (All-or-none) is added to the combination, all\npaths are selected if there is any file that matches other\ncriteria in the comparison; if there is no file that matches\nother criteria, nothing is selected.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>Also,\nthese upper-case letters can be downcased to exclude. E.g.\n<b>--diff-filter=ad</b> excludes added and deleted\npaths.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>Note that\nnot all diffs can feature all types. For instance, diffs\nfrom the index to the working tree can never have Added\nentries (because the set of paths included in the diff is\nlimited by what is in the index). Similarly, copied and\nrenamed entries cannot appear if detection for those types\nis disabled.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>-S&lt;string&gt;</big></p>\n\n<p style=\"margin-left:17%;\"><big>Look for differences that\nchange the number of occurrences of the specified string\n(i.e. addition/deletion) in a file. Intended for the\nscripter&rsquo;s use.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>It is\nuseful when you&rsquo;re looking for an exact block of code\n(like a struct), and want to know the history of that block\nsince it first came into being: use the feature iteratively\nto feed the interesting block in the preimage back into\n<b>-S</b>, and keep going until you get the very first\nversion of the block.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>Binary\nfiles are searched as well.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>-G&lt;regex&gt;</big></p>\n\n<p style=\"margin-left:17%;\"><big>Look for differences whose\npatch text contains added/removed lines that match\n&lt;regex&gt;.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>To\nillustrate the difference between <b>-S&lt;regex&gt;\n--pickaxe-regex</b> and <b>-G&lt;regex&gt;</b>, consider a\ncommit with the following diff in the same file:</big></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><big>+ return\nfrotz(nitfol, two-&gt;ptr, 1, 0); <br>\n... <br>\n- hit = frotz(nitfol, mf2.ptr, 1, 0);</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>While\n<b>git log -G&quot;frotz\\(nitfol&quot;</b> will show this\ncommit, <b>git log -S&quot;frotz\\(nitfol&quot;\n--pickaxe-regex</b> will not (because the number of\noccurrences of that string did not change).</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>Unless\n<b>--text</b> is supplied patches of binary files without a\ntextconv filter will be ignored.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>See the\n<i>pickaxe</i> entry in <a href=\"https://man.page/7/gitdiffcore\">gitdiffcore(7)</a> for more\ninformation.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--find-object=&lt;object-id&gt;</big></p>\n\n<p style=\"margin-left:17%;\"><big>Look for differences that\nchange the number of occurrences of the specified object.\nSimilar to <b>-S</b>, just the argument is different in that\nit doesn&rsquo;t search for a specific string but for a\nspecific object id.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>The object\ncan be a blob or a submodule commit. It implies the\n<b>-t</b> option in <b>git-log</b> to also find\ntrees.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--pickaxe-all</big></p>\n\n<p style=\"margin-left:17%;\"><big>When <b>-S</b> or\n<b>-G</b> finds a change, show all the changes in that\nchangeset, not just the files that contain the change in\n&lt;string&gt;.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--pickaxe-regex</big></p>\n\n<p style=\"margin-left:17%;\"><big>Treat the &lt;string&gt;\ngiven to <b>-S</b> as an extended POSIX regular expression\nto match.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>-O&lt;orderfile&gt;</big></p>\n\n<p style=\"margin-left:17%;\"><big>Control the order in which\nfiles appear in the output. This overrides the\n<b>diff.orderFile</b> configuration variable (see\n<a href=\"https://man.page/1/git-config\">git-config(1)</a>). To cancel <b>diff.orderFile</b>, use\n<b>-O/dev/null</b>.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>The output\norder is determined by the order of glob patterns in\n&lt;orderfile&gt;. All files with pathnames that match the\nfirst pattern are output first, all files with pathnames\nthat match the second pattern (but not the first) are output\nnext, and so on. All files with pathnames that do not match\nany pattern are output last, as if there was an implicit\nmatch-all pattern at the end of the file. If multiple\npathnames have the same rank (they match the same pattern\nbut no earlier patterns), their output order relative to\neach other is the normal order.</big></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>&lt;orderfile&gt;\nis parsed as follows:</big></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><big>&bull;\nBlank lines are ignored, so they can be used as separators\nfor readability.</big></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><big>&bull;\nLines starting with a hash (&quot;<b>#</b>&quot;) are\nignored, so they can be used for comments. Add a backslash\n(&quot;<b>\\</b>&quot;) to the beginning of the pattern if it\nstarts with a hash.</big></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><big>&bull;\nEach other line contains a single pattern.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>Patterns\nhave the same syntax and semantics as patterns used for\nfnmatch(3) without the FNM_PATHNAME flag, except a pathname\nalso matches a pattern if removing any number of the final\npathname components matches the pattern. For example, the\npattern &quot;<b>foo*bar</b>&quot; matches\n&quot;<b>fooasdfbar</b>&quot; and\n&quot;<b>foo/bar/baz/asdf</b>&quot; but not\n&quot;<b>foobarx</b>&quot;.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--skip-to=&lt;file&gt;,\n--rotate-to=&lt;file&gt;</big></p>\n\n<p style=\"margin-left:17%;\"><big>Discard the files before\nthe named &lt;file&gt; from the output (i.e. <i>skip\nto</i>), or move them to the end of the output (i.e.\n<i>rotate to</i>). These were invented primarily for use of\nthe <b>git difftool</b> command, and may not be very useful\notherwise.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>-R</big></p>\n\n<p style=\"margin-left:17%;\"><big>Swap two inputs; that is,\nshow differences from index or on-disk file to tree\ncontents.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--relative[=&lt;path&gt;],\n--no-relative</big></p>\n\n<p style=\"margin-left:17%;\"><big>When run from a\nsubdirectory of the project, it can be told to exclude\nchanges outside the directory and show pathnames relative to\nit with this option. When you are not in a subdirectory\n(e.g. in a bare repository), you can name which subdirectory\nto make the output relative to by giving a &lt;path&gt; as\nan argument. <b>--no-relative</b> can be used to countermand\nboth <b>diff.relative</b> config option and previous\n<b>--relative</b>.</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>-a,\n--text</big></p>\n\n<p style=\"margin-left:17%;\"><big>Treat all files as\ntext.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--ignore-cr-at-eol</big></p>\n\n<p style=\"margin-left:17%;\"><big>Ignore carriage-return at\nthe end of line when doing a comparison.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--ignore-space-at-eol</big></p>\n\n<p style=\"margin-left:17%;\"><big>Ignore changes in\nwhitespace at EOL.</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>-b,\n--ignore-space-change</big></p>\n\n<p style=\"margin-left:17%;\"><big>Ignore changes in amount\nof whitespace. This ignores whitespace at line end, and\nconsiders all other sequences of one or more whitespace\ncharacters to be equivalent.</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>-w,\n--ignore-all-space</big></p>\n\n<p style=\"margin-left:17%;\"><big>Ignore whitespace when\ncomparing lines. This ignores differences even if one line\nhas whitespace where the other line has none.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--ignore-blank-lines</big></p>\n\n<p style=\"margin-left:17%;\"><big>Ignore changes whose lines\nare all blank.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>-I&lt;regex&gt;,\n--ignore-matching-lines=&lt;regex&gt;</big></p>\n\n<p style=\"margin-left:17%;\"><big>Ignore changes whose all\nlines match &lt;regex&gt;. This option may be specified more\nthan once.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--inter-hunk-context=&lt;lines&gt;</big></p>\n\n<p style=\"margin-left:17%;\"><big>Show the context between\ndiff hunks, up to the specified number of lines, thereby\nfusing hunks that are close to each other. Defaults to\n<b>diff.interHunkContext</b> or 0 if the config option is\nunset.</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>-W,\n--function-context</big></p>\n\n<p style=\"margin-left:17%;\"><big>Show whole function as\ncontext lines for each change. The function names are\ndetermined in the same way as <b>git diff</b> works out\npatch hunk headers (see <i>Defining a custom hunk-header</i>\nin <a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a>).</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--ext-diff</big></p>\n\n<p style=\"margin-left:17%;\"><big>Allow an external diff\nhelper to be executed. If you set an external diff driver\nwith <a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a>, you need to use this option\nwith <a href=\"https://man.page/1/git-log\">git-log(1)</a> and friends.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--no-ext-diff</big></p>\n\n<p style=\"margin-left:17%;\"><big>Disallow external diff\ndrivers.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--textconv,\n--no-textconv</big></p>\n\n<p style=\"margin-left:17%;\"><big>Allow (or disallow)\nexternal text conversion filters to be run when comparing\nbinary files. See <a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a> for details.\nBecause textconv filters are typically a one-way conversion,\nthe resulting diff is suitable for human consumption, but\ncannot be applied. For this reason, textconv filters are\nenabled by default only for <a href=\"https://man.page/1/git-diff\">git-diff(1)</a> and\n<a href=\"https://man.page/1/git-log\">git-log(1)</a>, but not for <a href=\"https://man.page/1/git-format-patch\">git-format-patch(1)</a> or\ndiff plumbing commands.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--ignore-submodules[=&lt;when&gt;]</big></p>\n\n<p style=\"margin-left:17%;\"><big>Ignore changes to\nsubmodules in the diff generation. &lt;when&gt; can be\neither &quot;none&quot;, &quot;untracked&quot;,\n&quot;dirty&quot; or &quot;all&quot;, which is the default.\nUsing &quot;none&quot; will consider the submodule modified\nwhen it either contains untracked or modified files or its\nHEAD differs from the commit recorded in the superproject\nand can be used to override any settings of the\n<i>ignore</i> option in <a href=\"https://man.page/1/git-config\">git-config(1)</a> or\n<a href=\"https://man.page/5/gitmodules\">gitmodules(5)</a>. When &quot;untracked&quot; is used\nsubmodules are not considered dirty when they only contain\nuntracked content (but they are still scanned for modified\ncontent). Using &quot;dirty&quot; ignores all changes to the\nwork tree of submodules, only changes to the commits stored\nin the superproject are shown (this was the behavior until\n1.7.0). Using &quot;all&quot; hides all changes to\nsubmodules.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--src-prefix=&lt;prefix&gt;</big></p>\n\n<p style=\"margin-left:17%;\"><big>Show the given source\nprefix instead of &quot;a/&quot;.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--dst-prefix=&lt;prefix&gt;</big></p>\n\n<p style=\"margin-left:17%;\"><big>Show the given destination\nprefix instead of &quot;b/&quot;.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--no-prefix</big></p>\n\n<p style=\"margin-left:17%;\"><big>Do not show any source or\ndestination prefix.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--line-prefix=&lt;prefix&gt;</big></p>\n\n<p style=\"margin-left:17%;\"><big>Prepend an additional\nprefix to every line of output.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>--ita-invisible-in-index</big></p>\n\n<p style=\"margin-left:17%;\"><big>By default entries added\nby &quot;git add -N&quot; appear as an existing empty file\nin &quot;git diff&quot; and a new file in &quot;git diff\n--cached&quot;. This option makes the entry appear as a new\nfile in &quot;git diff&quot; and non-existent in &quot;git\ndiff --cached&quot;. This option could be reverted with\n<b>--ita-visible-in-index</b>. Both options are experimental\nand could be removed in future.</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>For more\ndetailed explanation on these common options, see also\n<a href=\"https://man.page/7/gitdiffcore\">gitdiffcore(7)</a>.</big></p>\n\n<h2>GENERATING PATCH TEXT WITH -P\n<a name=\"GENERATING PATCH TEXT WITH -P\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>Running\n<a href=\"https://man.page/1/git-diff\">git-diff(1)</a>, <a href=\"https://man.page/1/git-log\">git-log(1)</a>, <a href=\"https://man.page/1/git-show\">git-show(1)</a>,\n<a href=\"https://man.page/1/git-diff-index\">git-diff-index(1)</a>, <a href=\"https://man.page/1/git-diff-tree\">git-diff-tree(1)</a>, or\n<a href=\"https://man.page/1/git-diff-files\">git-diff-files(1)</a> with the <b>-p</b> option produces\npatch text. You can customize the creation of patch text via\nthe <b>GIT_EXTERNAL_DIFF</b> and the <b>GIT_DIFF_OPTS</b>\nenvironment variables (see <a href=\"https://man.page/1/git\">git(1)</a>), and the\n<b>diff</b> attribute (see\n<a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a>).</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>What the\n-p option produces is slightly different from the\ntraditional diff format:</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>1. It is\npreceded with a &quot;git diff&quot; header that looks like\nthis:</big></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><big>diff --git\na/file1 b/file2</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>The\n<b>a/</b> and <b>b/</b> filenames are the same unless\nrename/copy is involved. Especially, even for a creation or\na deletion, <b>/dev/null</b> is <i>not</i> used in place of\nthe <b>a/</b> or <b>b/</b> filenames.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>When\nrename/copy is involved, <b>file1</b> and <b>file2</b> show\nthe name of the source file of the rename/copy and the name\nof the file that rename/copy produces,\nrespectively.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>2. It is\nfollowed by one or more extended header lines:</big></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><big>old mode\n&lt;mode&gt; <br>\nnew mode &lt;mode&gt; <br>\ndeleted file mode &lt;mode&gt; <br>\nnew file mode &lt;mode&gt; <br>\ncopy from &lt;path&gt; <br>\ncopy to &lt;path&gt; <br>\nrename from &lt;path&gt; <br>\nrename to &lt;path&gt; <br>\nsimilarity index &lt;number&gt; <br>\ndissimilarity index &lt;number&gt; <br>\nindex &lt;hash&gt;..&lt;hash&gt; &lt;mode&gt;</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>File modes\nare printed as 6-digit octal numbers including the file type\nand file permission bits.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>Path names\nin extended headers do not include the <b>a/</b> and\n<b>b/</b> prefixes.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>The\nsimilarity index is the percentage of unchanged lines, and\nthe dissimilarity index is the percentage of changed lines.\nIt is a rounded down integer, followed by a percent sign.\nThe similarity index value of 100% is thus reserved for two\nequal files, while 100% dissimilarity means that no line\nfrom the old file made it into the new one.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>The index\nline includes the blob object names before and after the\nchange. The &lt;mode&gt; is included if the file mode does\nnot change; otherwise, separate lines indicate the old and\nthe new mode.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>3.\nPathnames with &quot;unusual&quot; characters are quoted as\nexplained for the configuration variable\n<b>core.quotePath</b> (see <a href=\"https://man.page/1/git-config\">git-config(1)</a>).</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>4. All the\n<b>file1</b> files in the output refer to files before the\ncommit, and all the <b>file2</b> files refer to files after\nthe commit. It is incorrect to apply each change to each\nfile sequentially. For example, this patch will swap a and\nb:</big></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><big>diff --git\na/a b/b <br>\nrename from a <br>\nrename to b <br>\ndiff --git a/b b/a <br>\nrename from b <br>\nrename to a</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>5. Hunk\nheaders mention the name of the function to which the hunk\napplies. See &quot;Defining a custom hunk-header&quot; in\n<a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a> for details of how to tailor to this\nto specific languages.</big></p>\n\n<h2>COMBINED DIFF FORMAT\n<a name=\"COMBINED DIFF FORMAT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>Any\ndiff-generating command can take the <b>-c</b> or\n<b>--cc</b> option to produce a <i>combined diff</i> when\nshowing a merge. This is the default format when showing\nmerges with <a href=\"https://man.page/1/git-diff\">git-diff(1)</a> or <a href=\"https://man.page/1/git-show\">git-show(1)</a>. Note\nalso that you can give suitable <b>--diff-merges</b> option\nto any of these commands to force generation of diffs in\nspecific format.</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>A\n&quot;combined diff&quot; format looks like this:</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>diff\n--combined describe.c <br>\nindex fabadb8,cc95eb0..4866510 <br>\n--- a/describe.c <br>\n+++ b/describe.c <br>\n@@@ -98,20 -98,12 +98,20 @@@ <br>\nreturn (a_date &gt; b_date) ? -1 : (a_date == b_date) ? 0 :\n1; <br>\n}</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>- static\nvoid describe(char *arg) <br>\n-static void describe(struct commit *cmit, int last_one)\n<br>\n++static void describe(char *arg, int last_one) <br>\n{ <br>\n+ unsigned char sha1[20]; <br>\n+ struct commit *cmit; <br>\nstruct commit_list *list; <br>\nstatic int initialized = 0; <br>\nstruct commit_name *n;</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>+ if\n(get_sha1(arg, sha1) &lt; 0) <br>\n+ usage(describe_usage); <br>\n+ cmit = lookup_commit_reference(sha1); <br>\n+ if (!cmit) <br>\n+ usage(describe_usage); <br>\n+ <br>\nif (!initialized) { <br>\ninitialized = 1; <br>\nfor_each_ref(get_name);</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>1. It is\npreceded with a &quot;git diff&quot; header, that looks like\nthis (when the <b>-c</b> option is used):</big></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><big>diff\n--combined file</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>or like\nthis (when the <b>--cc</b> option is used):</big></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><big>diff --cc\nfile</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>2. It is\nfollowed by one or more extended header lines (this example\nshows a merge with two parents):</big></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><big>index\n&lt;hash&gt;,&lt;hash&gt;..&lt;hash&gt; <br>\nmode &lt;mode&gt;,&lt;mode&gt;..&lt;mode&gt; <br>\nnew file mode &lt;mode&gt; <br>\ndeleted file mode &lt;mode&gt;,&lt;mode&gt;</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>The\n<b>mode &lt;mode&gt;,&lt;mode&gt;..&lt;mode&gt;</b> line\nappears only if at least one of the &lt;mode&gt; is\ndifferent from the rest. Extended headers with information\nabout detected contents movement (renames and copying\ndetection) are designed to work with diff of two\n&lt;tree-ish&gt; and are not used by combined diff\nformat.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>3. It is\nfollowed by two-line from-file/to-file header</big></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><big>--- a/file\n<br>\n+++ b/file</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>Similar to\ntwo-line header for traditional <i>unified</i> diff format,\n<b>/dev/null</b> is used to signal created or deleted\nfiles.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>However,\nif the --combined-all-paths option is provided, instead of a\ntwo-line from-file/to-file you get a N+1 line\nfrom-file/to-file header, where N is the number of parents\nin the merge commit</big></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><big>--- a/file\n<br>\n--- a/file <br>\n--- a/file <br>\n+++ b/file</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>This\nextended format can be useful if rename or copy detection is\nactive, to allow you to see the original name of the file in\ndifferent parents.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>4. Chunk\nheader format is modified to prevent people from\naccidentally feeding it to <b>patch -p1</b>. Combined diff\nformat was created for review of merge commit changes, and\nwas not meant to be applied. The change is similar to the\nchange in the extended <i>index</i> header:</big></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><big>@@@\n&lt;from-file-range&gt; &lt;from-file-range&gt;\n&lt;to-file-range&gt; @@@</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>There are\n(number of parents + 1) <b>@</b> characters in the chunk\nheader for combined diff format.</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>Unlike the\ntraditional <i>unified</i> diff format, which shows two\nfiles A and B with a single column that has <b>-</b> (minus\n&mdash; appears in A but removed in B), <b>+</b> (plus\n&mdash; missing in A but added to B), or <b>&quot;\n&quot;</b> (space &mdash; unchanged) prefix, this format\ncompares two or more files file1, file2,... with one file X,\nand shows how X differs from each of fileN. One column for\neach of fileN is prepended to the output line to note how\nX&rsquo;s line is different from it.</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>A <b>-</b>\ncharacter in the column N means that the line appears in\nfileN but it does not appear in the result. A <b>+</b>\ncharacter in the column N means that the line appears in the\nresult, and fileN does not have that line (in other words,\nthe line was added, from the point of view of that\nparent).</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>In the\nabove example output, the function signature was changed\nfrom both files (hence two <b>-</b> removals from both file1\nand file2, plus <b>++</b> to mean one line that was added\ndoes not appear in either file1 or file2). Also eight other\nlines are the same from file1 but do not appear in file2\n(hence prefixed with <b>+</b>).</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>When shown\nby <b>git diff-tree -c</b>, it compares the parents of a\nmerge commit with the merge result (i.e. file1..fileN are\nthe parents). When shown by <b>git diff-files -c</b>, it\ncompares the two unresolved merge parents with the working\ntree file (i.e. file1 is stage 2 aka &quot;our\nversion&quot;, file2 is stage 3 aka &quot;their\nversion&quot;).</big></p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big><b>git log\n--no-merges</b></big></p>\n\n<p style=\"margin-left:17%;\"><big>Show the whole commit\nhistory, but skip any merges</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big><b>git log\nv2.6.12.. include/scsi drivers/scsi</b></big></p>\n\n<p style=\"margin-left:17%;\"><big>Show all commits since\nversion <i>v2.6.12</i> that changed any file in the\n<b>include/scsi</b> or <b>drivers/scsi</b>\nsubdirectories</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big><b>git log\n--since=&quot;2 weeks ago&quot; -- gitk</b></big></p>\n\n<p style=\"margin-left:17%;\"><big>Show the changes during\nthe last two weeks to the file <i>gitk</i>. The <b>--</b> is\nnecessary to avoid confusion with the <b>branch</b> named\n<i>gitk</i></big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big><b>git log\n--name-status release..test</b></big></p>\n\n<p style=\"margin-left:17%;\"><big>Show the commits that are\nin the &quot;test&quot; branch but not yet in the\n&quot;release&quot; branch, along with the list of paths\neach commit modifies.</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big><b>git log\n--follow builtin/rev-list.c</b></big></p>\n\n<p style=\"margin-left:17%;\"><big>Shows the commits that\nchanged <b>builtin/rev-list.c</b>, including those commits\nthat occurred before the file was given its present\nname.</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big><b>git log\n--branches --not --remotes=origin</b></big></p>\n\n<p style=\"margin-left:17%;\"><big>Shows all commits that are\nin any of local branches but not in any of remote-tracking\nbranches for <i>origin</i> (what you have that origin\ndoesn&rsquo;t).</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big><b>git log\nmaster --not --remotes=*/master</b></big></p>\n\n<p style=\"margin-left:17%;\"><big>Shows all commits that are\nin local master but not in any remote repository master\nbranches.</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big><b>git log\n-p -m --first-parent</b></big></p>\n\n<p style=\"margin-left:17%;\"><big>Shows the history\nincluding change diffs, but only from the &ldquo;main\nbranch&rdquo; perspective, skipping commits that come from\nmerged branches, and showing full diffs of changes\nintroduced by the merges. This makes sense only when\nfollowing a strict policy of merging all topic branches when\nstaying on a single integration branch.</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big><b>git log\n-L '/int main/',/^}/:main.c</b></big></p>\n\n<p style=\"margin-left:17%;\"><big>Shows how the function\n<b>main()</b> in the file <b>main.c</b> evolved over\ntime.</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big><b>git log\n-3</b></big></p>\n\n<p style=\"margin-left:17%;\"><big>Limits the number of\ncommits to show to 3.</big></p>\n\n<h2>DISCUSSION\n<a name=\"DISCUSSION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>Git is to\nsome extent character encoding agnostic.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>&bull; The\ncontents of the blob objects are uninterpreted sequences of\nbytes. There is no encoding translation at the core\nlevel.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>&bull;\nPath names are encoded in UTF-8 normalization form C. This\napplies to tree objects, the index file, ref names, as well\nas path names in command line arguments, environment\nvariables and config files (<b>.git/config</b> (see\n<a href=\"https://man.page/1/git-config\">git-config(1)</a>), <a href=\"https://man.page/5/gitignore\">gitignore(5)</a>,\n<a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a> and <a href=\"https://man.page/5/gitmodules\">gitmodules(5)</a>).</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>Note that\nGit at the core level treats path names simply as sequences\nof non-NUL bytes, there are no path name encoding\nconversions (except on Mac and Windows). Therefore, using\nnon-ASCII path names will mostly work even on platforms and\nfile systems that use legacy extended ASCII encodings.\nHowever, repositories created on such systems will not work\nproperly on UTF-8-based systems (e.g. Linux, Mac, Windows)\nand vice versa. Additionally, many Git-based tools simply\nassume path names to be UTF-8 and will fail to display other\nencodings correctly.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>&bull;\nCommit log messages are typically encoded in UTF-8, but\nother extended ASCII encodings are also supported. This\nincludes ISO-8859-x, CP125x and many others, but <i>not</i>\nUTF-16/32, EBCDIC and CJK multi-byte encodings (GBK,\nShift-JIS, Big5, EUC-x, CP9xx etc.).</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>Although\nwe encourage that the commit log messages are encoded in\nUTF-8, both the core and Git Porcelain are designed not to\nforce UTF-8 on projects. If all participants of a particular\nproject find it more convenient to use legacy encodings, Git\ndoes not forbid it. However, there are a few things to keep\nin mind.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>1. <i>git\ncommit</i> and <i>git commit-tree</i> issues a warning if\nthe commit log message given to it does not look like a\nvalid UTF-8 string, unless you explicitly say your project\nuses a legacy encoding. The way to say this is to have\n<b>i18n.commitEncoding</b> in <b>.git/config</b> file, like\nthis:</big></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><big>[i18n]\n<br>\ncommitEncoding = ISO-8859-1</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>Commit\nobjects created with the above setting record the value of\n<b>i18n.commitEncoding</b> in its <b>encoding</b> header.\nThis is to help other people who look at them later. Lack of\nthis header implies that the commit log message is encoded\nin UTF-8.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>2. <i>git\nlog</i>, <i>git show</i>, <i>git blame</i> and friends look\nat the <b>encoding</b> header of a commit object, and try to\nre-code the log message into UTF-8 unless otherwise\nspecified. You can specify the desired output encoding with\n<b>i18n.logOutputEncoding</b> in <b>.git/config</b> file,\nlike this:</big></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><big>[i18n]\n<br>\nlogOutputEncoding = ISO-8859-1</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>If you do\nnot have this configuration variable, the value of\n<b>i18n.commitEncoding</b> is used instead.</big></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>Note that\nwe deliberately chose not to re-code the commit log message\nwhen a commit is made to force UTF-8 at the commit object\nlevel, because re-coding to UTF-8 is not necessarily a\nreversible operation.</big></p>\n\n<h2>CONFIGURATION\n<a name=\"CONFIGURATION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>See\n<a href=\"https://man.page/1/git-config\">git-config(1)</a> for core variables and\n<a href=\"https://man.page/1/git-diff\">git-diff(1)</a> for settings related to diff\ngeneration.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>format.pretty</big></p>\n\n<p style=\"margin-left:17%;\"><big>Default for the\n<b>--format</b> option. (See <i>Pretty Formats</i> above.)\nDefaults to <b>medium</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>i18n.logOutputEncoding</big></p>\n\n<p style=\"margin-left:17%;\"><big>Encoding to use when\ndisplaying logs. (See <i>Discussion</i> above.) Defaults to\nthe value of <b>i18n.commitEncoding</b> if set, and UTF-8\notherwise.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>log.date</big></p>\n\n<p style=\"margin-left:17%;\"><big>Default format for\nhuman-readable dates. (Compare the <b>--date</b> option.)\nDefaults to &quot;default&quot;, which means to write dates\nlike <b>Sat May 8 19:35:34 2010 -0500</b>.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>If the\nformat is set to &quot;auto:foo&quot; and the pager is in\nuse, format &quot;foo&quot; will be the used for the date\nformat. Otherwise &quot;default&quot; will be\nused.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>log.follow</big></p>\n\n<p style=\"margin-left:17%;\"><big>If <b>true</b>, <b>git\nlog</b> will act as if the <b>--follow</b> option was used\nwhen a single &lt;path&gt; is given. This has the same\nlimitations as <b>--follow</b>, i.e. it cannot be used to\nfollow multiple files and does not work well on non-linear\nhistory.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>log.showRoot</big></p>\n\n<p style=\"margin-left:17%;\"><big>If <b>false</b>, <b>git\nlog</b> and related commands will not treat the initial\ncommit as a big creation event. Any root commits in <b>git\nlog -p</b> output would be shown without a diff attached.\nThe default is <b>true</b>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>log.showSignature</big></p>\n\n<p style=\"margin-left:17%;\"><big>If <b>true</b>, <b>git\nlog</b> and related commands will act as if the\n<b>--show-signature</b> option was passed to them.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>mailmap.*</big></p>\n\n<p style=\"margin-left:17%;\"><big>See\n<a href=\"https://man.page/1/git-shortlog\">git-shortlog(1)</a>.</big></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>notes.displayRef</big></p>\n\n<p style=\"margin-left:17%;\"><big>Which refs, in addition to\nthe default set by <b>core.notesRef</b> or\n<b>GIT_NOTES_REF</b>, to read notes from when showing commit\nmessages with the <b>log</b> family of commands. See\n<a href=\"https://man.page/1/git-notes\">git-notes(1)</a>.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>May be an\nunabbreviated ref name or a glob and may be specified\nmultiple times. A warning will be issued for refs that do\nnot exist, but a glob that does not match any refs is\nsilently ignored.</big></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><big>This\nsetting can be disabled by the <b>--no-notes</b> option,\noverridden by the <b>GIT_NOTES_DISPLAY_REF</b> environment\nvariable, and overridden by the <b>--notes=&lt;ref&gt;</b>\noption.</big></p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><big>Part of\nthe <a href=\"https://man.page/1/git\">git(1)</a> suite</big></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#PRETTY FORMATS\">PRETTY FORMATS</a>","<a href=\"#DIFF FORMATTING\">DIFF FORMATTING</a>","<a href=\"#GENERATING PATCH TEXT WITH -P\">GENERATING PATCH TEXT WITH -P</a>","<a href=\"#COMBINED DIFF FORMAT\">COMBINED DIFF FORMAT</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#DISCUSSION\">DISCUSSION</a>","<a href=\"#CONFIGURATION\">CONFIGURATION</a>","<a href=\"#GIT\">GIT</a>"]}