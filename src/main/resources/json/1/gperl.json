{"name":"gperl","description":"gperl - groff preprocessor for Perl parts in roff files","body":"\n\n<h1 align=\"center\">GPERL</h1>\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gperl - groff\npreprocessor for Perl parts in roff files</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p style=\"margin-top: 1em\"><b>gperl</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"22%\">\n\n\n<p style=\"margin-top: 1em\">[<i>filespec</i> ...]</p></td>\n<td width=\"58%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p style=\"margin-top: 1em\"><b>gperl</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"22%\">\n\n\n<p style=\"margin-top: 1em\"><b>-h</b></p></td>\n<td width=\"58%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>gperl</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"22%\">\n\n\n<p><b>--help</b></p></td>\n<td width=\"58%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p style=\"margin-top: 1em\"><b>gperl</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"22%\">\n\n\n<p style=\"margin-top: 1em\"><b>-v</b></p></td>\n<td width=\"58%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>gperl</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"22%\">\n\n\n<p><b>--version</b></p></td>\n<td width=\"58%\">\n</td></tr>\n</table>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This is a\npreprocessor for <a href=\"https://man.page/1/groff\">groff(1)</a>. It allows the use of\n<a href=\"https://man.page/7/perl\">perl(7)</a> code in <a href=\"https://man.page/7/groff\">groff(7)</a> files. The result of\na <i>Perl part</i> can be stored in groff <i>strings</i> or\n<i>numerical registers</i> based on the arguments at a final\nline of a <i>Perl part</i>.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">So far, there\nare only <i>filespec</i> or <i>breaking</i> options.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>filespec</i>\nare file names or the minus character <b>-</b> character for\nstandard input. As usual, the argument <b>--</b> can be used\nin order to let all following arguments mean file names,\neven if the names begin with a minus character <b>-</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">An option is\n<i>breaking</i>, when the program just writes the\ninformation that was asked for and then stops. All other\narguments will be ignored by that. These <i>breaking</i>\noptions are here <b><br>\n-h&nbsp;</b>|&nbsp;<b>--help</b></p>\n\n<p style=\"margin-left:22%;\">Print help information with a\nshort explanation of options to standard output.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-v&nbsp;</b>|&nbsp;<b>--version</b></p>\n\n<p style=\"margin-left:22%;\">Print version information to\nstandard output.</p>\n\n<h2>PERL PARTS\n<a name=\"PERL PARTS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Perl</i>\nparts in <i>groff files</i> are enclosed by two <b>.Perl</b>\nrequests with different arguments, a <i>starting</i> and an\n<i>ending</i> command.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Starting\nPerl Mode</b> <br>\nThe starting <i>Perl request</i> can either be without\narguments, or by a request that has the term <b>start</b> as\nits only argument.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"2%\"></td>\n<td width=\"17%\">\n\n\n<p><b>.Perl</b></p></td>\n<td width=\"58%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"2%\"></td>\n<td width=\"17%\">\n\n\n<p><b>.Perl start</b></p></td>\n<td width=\"58%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Ending Perl\nMode without Storage</b> <br>\nA <b>.Perl</b> command line with an argument different from\n<b>start</b> finishes a running <i>Perl part</i>. Of course,\nit would be reasonable to add the argument <b>stop</b>;\nthat&rsquo;s possible, but not necessary.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</p></td>\n<td width=\"2%\"></td>\n<td width=\"33%\">\n\n\n<p style=\"margin-top: 1em\"><b>.Perl stop</b></p></td>\n<td width=\"42%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"2%\"></td>\n<td width=\"33%\">\n\n\n<p><b>.Perl</b> <i>other_than_start</i></p></td>\n<td width=\"42%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\">The argument\n<i>other_than_start</i> can additionally be used as a\n<i>groff</i> string variable name for storage &mdash; see\nnext section.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Ending Perl\nMode with Storage</b> <br>\nA useful feature of <b>gperl</b> is to store one or more\nresults from the <i>Perl mode</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The output of a\n<i>Perl part</i> can be got with backticks <b>`...`</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This program\ncollects all printing to STDOUT (normal standard output) by\nthe Perl <b>print</b> program. This pseudo-printing output\ncan have several lines, due to printed line breaks with\n<b>\\n</b>. By that, the output of a Perl run should be\nstored into a Perl array, with a single line for each array\nmember.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This Perl array\noutput can be stored by <b>gperl</b> in either <i><br>\ngroff strings</i></p>\n\n<p style=\"margin-left:22%;\">by creating a groff command\n<b>.ds</b></p>\n\n<p style=\"margin-left:11%;\"><i>groff number\nregister</i></p>\n\n<p style=\"margin-left:22%;\">by creating a groff command\n<b>.rn</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The storage\nmodes can be determined by arguments of a final stopping\n<b>.Perl</b> command. Each argument <b>.ds</b> changes the\nmode into <i>groff string</i> and <b>.nr</b> changes the\nmode into <i>groff number register</i> for all following\noutput parts.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">By default, all\noutput is saved as strings, so <b>.ds</b> is not really\nneeded before the first <b>.nr</b> command. That suits to\n<a href=\"https://man.page/7/groff\">groff(7)</a>, because every output can be saved as\n<i>groff</i> string, but the number registers can be very\nrestrictive.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In <i>string\nmode</i>, <b>gperl</b> generates a <i>groff string</i>\nstorage line</p>\n\n<p style=\"margin-left:22%;\"><b>.ds</b> <i>var_name\ncontent</i></p>\n\n<p style=\"margin-left:11%;\">In <i>number register mode</i>\nthe following groff command is generated</p>\n\n<p style=\"margin-left:22%;\"><b>.nr</b> <i>var_name\ncontent</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">We present\nargument collections in the following. You can add as first\nargument for all <b>stop</b>. We omit this additional\nelement. <b><br>\n.Perl .ds</b> <i>var_name</i></p>\n\n<p style=\"margin-left:22%;\">This will store 1 output line\ninto the groff string named <i>var_name</i> by the\nautomatically created command</p>\n\n<p style=\"margin-left:32%;\"><b>.ds</b> <i>var_name\noutput</i></p>\n\n<p style=\"margin-left:11%;\"><b>.Perl</b>\n<i>var_name</i></p>\n\n<p style=\"margin-left:22%;\">If <i>var_name</i> is different\nfrom <b>start</b> this is equivalent to the former command,\nbecause the string mode is string with <b>.ds</b> command.\ndefault.</p>\n\n<p style=\"margin-left:11%;\"><b>.Perl</b> <i>var_name1\nvar_name2</i></p>\n\n<p style=\"margin-left:22%;\">This will store 2 output lines\ninto groff string names <i>var_name1</i> and\n<i>var_name2</i>, because the default mode <b>.ds</b> is\nactive, such that no <b>.ds</b> argument is needed. Of\ncourse, this is equivalent to</p>\n\n<p style=\"margin-left:32%;\"><b>.Perl .ds</b> <i>var_name1\nvar_name2</i></p>\n\n<p style=\"margin-left:22%;\">and</p>\n\n<p style=\"margin-left:32%;\"><b>.Perl .ds</b>\n<i>var_name1</i> <b>.ds</b> <i>var_name2</i></p>\n\n<p style=\"margin-left:11%;\"><b>.Perl .nr</b> <i>var_name1\nvarname2</i></p>\n\n<p style=\"margin-left:22%;\">stores both variables as number\nregister variables. <b>gperl</b> generates <b><br>\n.nr</b> <i>var_name1 output_line1</i> <b><br>\n.nr</b> <i>var_name2 output_line2</i></p>\n\n<p style=\"margin-left:11%;\"><b>.Perl .nr</b>\n<i>var_name1</i> <b>.ds</b> <i>var_name2</i></p>\n\n<p style=\"margin-left:22%;\">stores the 1st argument as\n<i>number register</i> and the second as <i>string</i> by\n<b><br>\n.nr</b> <i>var_name1 output_line1</i> <b><br>\n.ds</b> <i>var_name2 output_line2</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Printing\ntowards STDERR is without Storage</b> <br>\nThe printing towards <i>STDERR</i>, (standard error) works\nas usual. All error information goes to the real normal\n<i>standard error</i>, without other automatic storage.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">A possible\n<i>Perl part</i> in a <i>roff file</i> could look like\nthat:</p>\n\n<p style=\"margin-left:22%;\">before <br>\n.Perl start <br>\nmy $result = &rsquo;some data&rsquo;; <br>\nprint $result; <br>\n.Perl stop .ds string_var <br>\nafter</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This stores the\nresult <b>&rdquo;some data&rdquo;</b> into the <i>roff\nstring</i> called <b>string_var</b>, such that the following\nline is printed:</p>\n\n<p style=\"margin-left:22%;\">.ds string_var some data</p>\n\n<p style=\"margin-left:11%;\">by <b>gperl</b> as food for the\ncoming <b>groff</b> run.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A <i>Perl\npart</i> with several outputs is:</p>\n\n<p style=\"margin-left:22%;\">.Perl start <br>\nprint &rdquo;first\\n&rdquo;; <br>\nprint &rdquo;second line\\n&rdquo;; <br>\nprint &rdquo;3\\n&rdquo;; <br>\n.Perl var1 var2 .nr var3</p>\n\n<p style=\"margin-left:11%;\">This stores 3 printed lines\ninto 3 <i>groff</i> strings.\n<b>var1</b>,<b>var2</b>,<b>var3</b>. So the following\n<i>groff</i> command lines are created:</p>\n\n<p style=\"margin-left:22%;\">.ds var1 first <br>\n.ds var2 second line <br>\n.nr var3 3</p>\n\n<h2>AUTHORS\n<a name=\"AUTHORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>gperl</b>\nwas written by\n<a href=\"mailto:groff-bernd.warken-72@web.de\">Bernd\nWarken</a>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Man pages\nrelated to <i>groff</i> are <a href=\"https://man.page/1/groff\">groff(1)</a>,\n<a href=\"https://man.page/7/groff\">groff(7)</a>, <a href=\"https://man.page/1/grog\">grog(1)</a>, and <a href=\"https://man.page/1/groffer\">groffer(1)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Documents\nrelated to <i>Perl</i> are <a href=\"https://man.page/1/perl\">perl(1)</a>,\n<a href=\"https://man.page/7/perl\">perl(7)</a>.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#PERL PARTS\">PERL PARTS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#AUTHORS\">AUTHORS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"]}