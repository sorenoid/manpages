{"name":"git-reflog","description":"git-reflog - Manage reflog information","body":"\n\n<h1 align=\"center\">GIT-REFLOG</h1>\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">git-reflog -\nManage reflog information</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>git\nreflog</i> &lt;subcommand&gt; &lt;options&gt;</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The command\ntakes various subcommands, and different options depending\non the subcommand:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><i>git\nreflog</i> [<i>show</i>] [log-options] [&lt;ref&gt;] <i><br>\ngit reflog expire</i> [--expire=&lt;time&gt;]\n[--expire-unreachable=&lt;time&gt;] <br>\n[--rewrite] [--updateref] [--stale-fix] <br>\n[--dry-run | -n] [--verbose] [--all [--single-worktree] |\n&lt;refs&gt;...] <i><br>\ngit reflog delete</i> [--rewrite] [--updateref] <br>\n[--dry-run | -n] [--verbose] ref@{specifier}... <i><br>\ngit reflog exists</i> &lt;ref&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Reference logs,\nor &quot;reflogs&quot;, record when the tips of branches and\nother references were updated in the local repository.\nReflogs are useful in various Git commands, to specify the\nold value of a reference. For example, <b>HEAD@{2}</b> means\n&quot;where HEAD used to be two moves ago&quot;,\n<b>master@{one.week.ago}</b> means &quot;where master used\nto point to one week ago in this local repository&quot;, and\nso on. See <a href=\"https://man.page/7/gitrevisions\">gitrevisions(7)</a> for more details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This command\nmanages the information recorded in the reflogs.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n&quot;show&quot; subcommand (which is also the default, in\nthe absence of any subcommands) shows the log of the\nreference provided in the command-line (or <b>HEAD</b>, by\ndefault). The reflog covers all recent actions, and in\naddition the <b>HEAD</b> reflog records branch switching.\n<b>git reflog show</b> is an alias for <b>git log -g\n--abbrev-commit --pretty=oneline</b>; see <a href=\"https://man.page/1/git-log\">git-log(1)</a>\nfor more information.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n&quot;expire&quot; subcommand prunes older reflog entries.\nEntries older than <b>expire</b> time, or entries older than\n<b>expire-unreachable</b> time and not reachable from the\ncurrent tip, are removed from the reflog. This is typically\nnot used directly by end users &mdash; instead, see\n<a href=\"https://man.page/1/git-gc\">git-gc(1)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n&quot;delete&quot; subcommand deletes single entries from\nthe reflog. Its argument must be an <i>exact</i> entry (e.g.\n&quot;<b>git reflog delete master@{2}</b>&quot;). This\nsubcommand is also typically not used directly by end\nusers.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n&quot;exists&quot; subcommand checks whether a ref has a\nreflog. It exits with zero status if the reflog exists, and\nnon-zero status if it does not.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Options for\nshow <br>\ngit reflog show</b> accepts any of the options accepted by\n<b>git log</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Options for\nexpire</b> <br>\n--all</p>\n\n<p style=\"margin-left:17%;\">Process the reflogs of all\nreferences.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--single-worktree</p>\n\n<p style=\"margin-left:17%;\">By default when <b>--all</b> is\nspecified, reflogs from all working trees are processed.\nThis option limits the processing to reflogs from the\ncurrent working tree only.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--expire=&lt;time&gt;</p>\n\n<p style=\"margin-left:17%;\">Prune entries older than the\nspecified time. If this option is not specified, the\nexpiration time is taken from the configuration setting\n<b>gc.reflogExpire</b>, which in turn defaults to 90 days.\n<b>--expire=all</b> prunes entries regardless of their age;\n<b>--expire=never</b> turns off pruning of reachable entries\n(but see <b>--expire-unreachable</b>).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--expire-unreachable=&lt;time&gt;</p>\n\n<p style=\"margin-left:17%;\">Prune entries older than\n<b>&lt;time&gt;</b> that are not reachable from the current\ntip of the branch. If this option is not specified, the\nexpiration time is taken from the configuration setting\n<b>gc.reflogExpireUnreachable</b>, which in turn defaults to\n30 days. <b>--expire-unreachable=all</b> prunes unreachable\nentries regardless of their age;\n<b>--expire-unreachable=never</b> turns off early pruning of\nunreachable entries (but see <b>--expire</b>).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--updateref</p>\n\n<p style=\"margin-left:17%;\">Update the reference to the\nvalue of the top reflog entry (i.e. &lt;ref&gt;@{0}) if the\nprevious top entry was pruned. (This option is ignored for\nsymbolic references.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--rewrite</p>\n\n<p style=\"margin-left:17%;\">If a reflog entry&rsquo;s\npredecessor is pruned, adjust its &quot;old&quot; SHA-1 to\nbe equal to the &quot;new&quot; SHA-1 field of the entry\nthat now precedes it.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--stale-fix</p>\n\n<p style=\"margin-left:17%;\">Prune any reflog entries that\npoint to &quot;broken commits&quot;. A broken commit is a\ncommit that is not reachable from any of the reference tips\nand that refers, directly or indirectly, to a missing\ncommit, tree, or blob object.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This\ncomputation involves traversing all the reachable objects,\ni.e. it has the same cost as <i>git prune</i>. It is\nprimarily intended to fix corruption caused by garbage\ncollecting using older versions of Git, which didn&rsquo;t\nprotect objects referred to by reflogs.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-n,\n--dry-run</p>\n\n<p style=\"margin-left:17%;\">Do not actually prune any\nentries; just show what would have been pruned.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--verbose</p>\n\n<p style=\"margin-left:17%;\">Print extra information on\nscreen.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Options for\ndelete <br>\ngit reflog delete</b> accepts options <b>--updateref</b>,\n<b>--rewrite</b>, <b>-n</b>, <b>--dry-run</b>, and\n<b>--verbose</b>, with the same meanings as when they are\nused with <b>expire</b>.</p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Part of the\n<a href=\"https://man.page/1/git\">git(1)</a> suite</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#GIT\">GIT</a>"]}