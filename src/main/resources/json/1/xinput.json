{"name":"xinput","description":"xinput - utility to configure and test X input devices","body":"\n\n<h1 align=\"center\">xinput</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">xinput -\nutility to configure and test X input devices</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>xinput\n[OPTIONS] [DEVICE]</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">xinput is a\nutility to list available input devices, query information\nabout a device and change input device settings.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--version</b></p>\n\n<p style=\"margin-left:23%;\">Test if the X Input extension\nis available and return the version number of the program\nand the version supported by the server. This option does\nnot require a device name.</p>\n\n<p style=\"margin-left:11%;\"><b>--list [--short || --long ||\n--name-only || --id-only] [</b><i>device</i><b>]</b></p>\n\n<p style=\"margin-left:23%;\">If no argument is given list\nall the input devices. If an argument is given, show all the\nfeatures of <i>device</i>. If --long is provided, the output\nincludes detailed information about the capabilities of each\ndevices. Otherwise, or if --short is provided, only the\ndevice names and some minimal information is listed. If\n--name-only is provided, the output is limited to the device\nnames. One device name is listed per line. Note that the\norder the devices are listed is undefined. If --id-only is\nprovided, the output is limited to the device IDs. One\ndevice ID is listed per line. Note that the order the\ndevices are listed is undefined.</p>\n\n<p style=\"margin-left:11%;\"><b>--get-feedbacks</b>\n<i>device</i></p>\n\n<p style=\"margin-left:23%;\">Display the feedbacks of\n<i>device</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>--set-pointer</b>\n<i>device</i></p>\n\n<p style=\"margin-left:23%;\">Switch <i>device</i> in core\npointer. This option does nothing on X servers 1.5 and\nlater.</p>\n\n<p style=\"margin-left:11%;\"><b>--set-mode</b> <i>device\nABSOLUTE|RELATIVE</i></p>\n\n<p style=\"margin-left:23%;\">Change the mode of\n<i>device</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>--set-ptr-feedback</b>\n<i>device threshold num denom</i></p>\n\n<p style=\"margin-left:23%;\">Change the pointer acceleration\n(or feedback) parameters of <i>device</i>. The xset(1) man\npage has more details. For X.Org Server 1.7 and above, there\nare additional device properties pertaining to pointer\nacceleration. These do not replace, but complement the\npointer feedback setting.</p>\n\n<p style=\"margin-left:11%;\"><b>--set-integer-feedback</b>\n<i>device index value</i></p>\n\n<p style=\"margin-left:23%;\">Change the value of an integer\nfeedback of <i>device</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>--set-button-map</b>\n<i>device map_button_1</i> <b>[</b><i>map_button_2</i>\n<b>[</b><i>...</i><b>]]</b></p>\n\n<p style=\"margin-left:23%;\">Change the button mapping of\n<i>device</i>. The buttons are specified in physical order\n(starting with button 1) and are mapped to the logical\nbutton provided. 0 disables a button. The default button\nmapping for a device is 1 2 3 4 5 6 etc.</p>\n\n<p style=\"margin-left:11%;\"><b>--query-state</b>\n<i>device</i></p>\n\n<p style=\"margin-left:23%;\">Query the device state.</p>\n\n<p style=\"margin-left:11%;\"><b>--list-props</b>\n<i>device</i> <b>[</b><i>device</i>\n<b>[</b><i>...</i><b>]]</b></p>\n\n<p style=\"margin-left:23%;\">Lists properties that can be\nset for the given device(s).</p>\n\n<p style=\"margin-left:11%;\"><b>--set-int-prop</b> <i>device\nproperty format value</i></p>\n\n<p style=\"margin-left:23%;\">Sets an integer property for\nthe device. Appropriate values for <i>format</i> are 8, 16,\nor 32, depending on the property. Deprecated, use\n<b>--set-prop</b> instead.</p>\n\n<p style=\"margin-left:11%;\"><b>--set-float-prop</b>\n<i>device property value</i></p>\n\n<p style=\"margin-left:23%;\">Sets a float property for the\ndevice. Deprecated, use <b>--set-prop</b> instead.</p>\n\n<p style=\"margin-left:11%;\"><b>--set-prop\n[--type=</b><i>atom|float|int</i><b>]\n[--format=</b><i>8|16|32</i><b>]</b> <i>device property <br>\nvalue</i> <b>[...]</b></p>\n\n<p style=\"margin-left:23%;\">Set the property to the given\nvalue(s). If not specified, the format and type of the\nproperty are left as-is. The arguments are interpreted\naccording to the property type. See Section <i>CHANGING\nPROPERTIES</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>--watch-props</b>\n<i>device</i></p>\n\n<p style=\"margin-left:23%;\">Prints to standard out when\nproperty changes occur.</p>\n\n<p style=\"margin-left:11%;\"><b>--delete-prop</b> <i>device\nproperty</i></p>\n\n<p style=\"margin-left:23%;\">Delete the property from the\ndevice.</p>\n\n<p style=\"margin-left:11%;\"><b>--test [-proximity]</b>\n<i>device</i></p>\n\n<p style=\"margin-left:23%;\">Register all extended events\nfrom <i>device</i> and enter an endless loop displaying\nevents received. If the -proximity is given, ProximityIn and\nProximityOut are registered.</p>\n\n<p style=\"margin-left:11%;\"><b>--test-xi2 [--root]\n[</b><i>device</i><b>]</b></p>\n\n<p style=\"margin-left:23%;\">Register for a number of XI2\nevents and display them. If a device is given, only events\non this device are displayed. If --root is given, events are\nselected on the root window only. Otherwise, a new client\nwindow is created (similar to xev).</p>\n\n<p style=\"margin-left:11%;\"><b>--create-master</b>\n<i>prefix</i> <b>[sendCore] [enable]</b></p>\n\n<p style=\"margin-left:23%;\">Create a new pair of master\ndevices on an XI2-enabled server with the given\n<i>prefix</i>. The server will create one master pointer\nnamed &quot;<i>prefix</i> pointer&quot; and one master\nkeyboard named &quot;<i>prefix</i> keyboard&quot;. If\n<i>sendCore</i> is 1, this pair of master devices is set to\nsend core events (default). If <i>enable</i> is 1, this\nmaster device pair will be enabled immediately\n(default).</p>\n\n<p style=\"margin-left:11%;\"><b>--remove-master</b>\n<i>master</i> <b>[Floating|AttachToMaster] [returnPointer]\n<br>\n[returnKeyboard]</b></p>\n\n<p style=\"margin-left:23%;\">Remove <i>master</i> and its\npaired master device. Attached slave devices are set\nfloating if <i>Floating</i> is specified or the argument is\nomitted. If the second argument is <i>AttachToMaster</i>,\n<i>returnPointer</i> specifies the master pointer to attach\nall slave pointers to and <i>returnKeyboard</i> specifies\nthe master keyboard to attach all slave keyboards to.</p>\n\n<p style=\"margin-left:11%;\"><b>--reattach</b> <i>slave\nmaster</i></p>\n\n<p style=\"margin-left:23%;\">Reattach <i>slave</i> to\n<i>master</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>--float</b> <i>slave</i></p>\n\n<p style=\"margin-left:23%;\">Remove <i>slave</i> from its\ncurrent master device.</p>\n\n<p style=\"margin-left:11%;\"><b>--set-cp</b> <i>window\nmaster</i></p>\n\n<p style=\"margin-left:23%;\">Set the ClientPointer for the\nclient owning <i>window</i> to <i>master</i>. <i>master</i>\nmust specify a master pointer.</p>\n\n<p style=\"margin-left:11%;\"><b>--map-to-output</b>\n<i>device crtc</i></p>\n\n<p style=\"margin-left:23%;\">Restricts the movements of the\nabsolute <i>device</i> to the RandR <i>crtc</i>. The output\nname must match a currently connected output (see\n<i>xrandr(1)</i>). If the NVIDIA binary driver is detected\nor RandR 1.2 or later is not available, a Xinerama output\nmay be specified as &quot;HEAD-N&quot;, with N being the\nXinerama screen number. This option has no effect on\nrelative devices.</p>\n\n<p style=\"margin-left:11%;\"><b>--enable</b>\n<i>device</i></p>\n\n<p style=\"margin-left:23%;\">Enable the <i>device</i>. This\ncall is equivalent to <b>xinput --set-prop device</b>\n<i>&quot;Device Enabled&quot;</i> <b>1</b></p>\n\n<p style=\"margin-left:11%;\"><b>--disable</b>\n<i>device</i></p>\n\n<p style=\"margin-left:23%;\">Disable the <i>device</i>. This\ncall is equivalent to <b>xinput --set-prop device</b>\n<i>&quot;Device Enabled&quot;</i> <b>0</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>device</i>\ncan be the device name as a string or the XID of the\ndevice.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>slave</i>\ncan be the device name as a string or the XID of a slave\ndevice.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>master</i>\ncan be the device name as a string or the XID of a master\ndevice.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>property</i>\ncan be the property as a string or the Atom value.</p>\n\n<h2>CHANGING PROPERTIES\n<a name=\"CHANGING PROPERTIES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">When xinput\nshould modify an existing driver property value, it is\nsufficient to provide the device name and property name as\nstring, followed by the new value(s) of the property. For\nexample:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>xinput\nset-prop &quot;my device&quot; &quot;my prop&quot; 1 2\n3</b></p>\n\n<h2>XWAYLAND\n<a name=\"XWAYLAND\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Xwayland is an\nX server that uses a Wayland Compositor as backend. Xwayland\nacts as translation layer between the X protocol and the\nWayland protocol but does not have direct access to the\nhardware. The X Input Extension devices created by Xwayland\n(&quot;xwayland-pointer&quot;,\n&quot;xwayland-keyboard&quot;, etc.) map to the Wayland\nprotocol devices, not to physical devices.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">These X Input\nExtension devices are only visible to other X clients\nconnected to the same Xwayland process. Changing properties\non Xwayland devices only affects the behavior of those\nclients. For example, disabling an Xwayland device with\nxinput does not disable the device in Wayland-native\napplications. Other changes may not have any effect at\nall.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In most\ninstances, using xinput with an Xwayland device is\nindicative of a bug in a shell script and xinput will print\na warning. Use the Wayland Compositor&rsquo;s native device\nconfiguration methods instead.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">X(7), xset(1),\nxrandr(1)</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright\n1996,1997, Frederic Lepied.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright 2007,\nPeter Hutterer.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright 2008,\nPhilip Langdale.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright\n2009-2011, Red Hat, Inc.</p>\n\n<h2>AUTHORS\n<a name=\"AUTHORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Peter Hutterer\n&lt;peter.hutterer@who-t.net&gt; <br>\nPhilip Langdale, &lt;philipl@alumni.utexas.net&gt; <br>\nFrederic Lepied, France\n&lt;Frederic.Lepied@sugix.frmug.org&gt; <br>\nJulien Cristau &lt;jcristau@debian.org&gt; <br>\nThomas Jaeger &lt;ThJaeger@gmail.com&gt; <br>\nand more.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#CHANGING PROPERTIES\">CHANGING PROPERTIES</a>","<a href=\"#XWAYLAND\">XWAYLAND</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>","<a href=\"#AUTHORS\">AUTHORS</a>"]}