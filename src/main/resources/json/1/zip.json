{"name":"zip","description":"zip - package\nand compress (archive) files","body":"\n\n<h1 align=\"center\">ZIP</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">zip - package\nand compress (archive) files</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>zip</b>\n[-<b>aABcdDeEfFghjklLmoqrRSTuvVwXyz!@$</b>] [--longoption\n...] [-<b>b</b> path] [-<b>n</b> suffixes] [-<b>t</b> date]\n[-<b>tt</b> date] [<i>zipfile</i> [<i>file</i> ...]]\n[<b>-xi</b> list]</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>zipcloak</b>\n(see separate man page)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>zipnote</b>\n(see separate man page)</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>zipsplit</b>\n(see separate man page)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note: Command\nline processing in <i>zip</i> has been changed to support\nlong options and handle all options and arguments more\nconsistently. Some old command lines that depend on command\nline inconsistencies may no longer work.</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>zip</i> is a\ncompression and file packaging utility for Unix, VMS, MSDOS,\nOS/2, Windows 9x/NT/XP, Minix, Atari, Macintosh, Amiga, and\nAcorn RISC OS. It is analogous to a combination of the Unix\ncommands <i>tar</i>(1) and <i>compress</i>(1) and is\ncompatible with PKZIP (Phil Katz&rsquo;s ZIP for MSDOS\nsystems).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A companion\nprogram (<i>unzip</i>(1)) unpacks <i>zip</i> archives. The\n<i>zip</i> and <i>unzip</i>(1) programs can work with\narchives produced by PKZIP (supporting most PKZIP features\nup to PKZIP version 4.6), and PKZIP and PKUNZIP can work\nwith archives produced by <i>zip</i> (with some exceptions,\nnotably streamed archives, but recent changes in the zip\nfile standard may facilitate better compatibility).\n<i>zip</i> version 3.0 is compatible with PKZIP 2.04 and\nalso supports the Zip64 extensions of PKZIP 4.5 which allow\narchives as well as files to exceed the previous 2 GB limit\n(4 GB in some cases). <i>zip</i> also now supports\n<b>bzip2</b> compression if the <b>bzip2</b> library is\nincluded when <i>zip</i> is compiled. Note that PKUNZIP 1.10\ncannot extract files produced by PKZIP 2.04 or\n<i>zip&nbsp;3.0</i>. You must use PKUNZIP 2.04g or\n<i>unzip&nbsp;5.0p1</i> (or later versions) to extract\nthem.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See the\n<b>EXAMPLES</b> section at the bottom of this page for\nexamples of some typical uses of <i>zip</i>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Large&nbsp;Archives&nbsp;and&nbsp;Zip64.</b>\n<i>zip</i> automatically uses the Zip64 extensions when\nfiles larger than 4 GB are added to an archive, an archive\ncontaining Zip64 entries is updated (if the resulting\narchive still needs Zip64), the size of the archive will\nexceed 4 GB, or when the number of entries in the archive\nwill exceed about 64K. Zip64 is also used for archives\nstreamed from standard input as the size of such archives\nare not known in advance, but the option <b>-fz-</b> can be\nused to force <i>zip</i> to create PKZIP 2 compatible\narchives (as long as Zip64 extensions are not needed). You\nmust use a PKZIP 4.5 compatible unzip, such as\n<i>unzip&nbsp;6.0</i> or later, to extract files using the\nZip64 extensions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In addition,\nstreamed archives, entries encrypted with standard\nencryption, or split archives created with the pause option\nmay not be compatible with PKZIP as data descriptors are\nused and PKZIP at the time of this writing does not support\ndata descriptors (but recent changes in the PKWare published\nzip standard now include some support for the data\ndescriptor format <i>zip</i> uses).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Mac OS\nX.</b> Though previous Mac versions had their own <i>zip</i>\nport, <i>zip</i> supports Mac OS X as part of the Unix port\nand most Unix features apply. References to\n&quot;MacOS&quot; below generally refer to MacOS versions\nolder than OS X. Support for some Mac OS features in the\nUnix Mac OS X port, such as resource forks, is expected in\nthe next <i>zip</i> release.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For a brief\nhelp on <i>zip</i> and <i>unzip</i>, run each without\nspecifying any parameters on the command line.</p>\n\n<h2>USE\n<a name=\"USE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The program is\nuseful for packaging a set of files for distribution; for\narchiving files; and for saving disk space by temporarily\ncompressing unused files or directories.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <i>zip</i>\nprogram puts one or more compressed files into a single\n<i>zip</i> archive, along with information about the files\n(name, path, date, time of last modification, protection,\nand check information to verify file integrity). An entire\ndirectory structure can be packed into a <i>zip</i> archive\nwith a single command. Compression ratios of 2:1 to 3:1 are\ncommon for text files. <i>zip</i> has one compression method\n(deflation) and can also store files without compression.\n(If <b>bzip2</b> support is added, <i>zip</i> can also\ncompress using <b>bzip2</b> compression, but such entries\nrequire a reasonably modern unzip to decompress. When\n<b>bzip2</b> compression is selected, it replaces deflation\nas the default method.) <i>zip</i> automatically chooses the\nbetter of the two (deflation or store or, if <b>bzip2</b> is\nselected, <b>bzip2</b> or store) for each file to be\ncompressed.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Command&nbsp;format.</b>\nThe basic command format is</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>zip</b>\noptions archive inpath inpath ...</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">where\n<b>archive</b> is a new or existing <i>zip</i> archive and\n<b>inpath</b> is a directory or file path optionally\nincluding wildcards. When given the name of an existing\n<i>zip</i> archive, <i>zip</i> will replace identically\nnamed entries in the <i>zip</i> archive (matching the\nrelative names as stored in the archive) or add entries for\nnew names. For example, if <i>foo.zip</i> exists and\ncontains <i>foo/file1</i> and <i>foo/file2</i>, and the\ndirectory <i>foo</i> contains the files <i>foo/file1</i> and\n<i>foo/file3</i>, then:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>zip -r\nfoo.zip foo</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">or more\nconcisely</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>zip -r foo\nfoo</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">will replace\n<i>foo/file1</i> in <i>foo.zip</i> and add <i>foo/file3</i>\nto <i>foo.zip</i>. After this, <i>foo.zip</i> contains\n<i>foo/file1</i>, <i>foo/file2</i>, and <i>foo/file3</i>,\nwith <i>foo/file2</i> unchanged from before.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">So if before\nthe zip command is executed <i>foo.zip</i> has:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>foo/file1\nfoo/file2</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">and directory\nfoo has:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>file1\nfile3</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">then\n<i>foo.zip</i> will have:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>foo/file1\nfoo/file2 foo/file3</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">where\n<i>foo/file1</i> is replaced and <i>foo/file3</i> is\nnew.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-@&nbsp;file&nbsp;lists.</b>\nIf a file list is specified as <b>-@</b> [Not on MacOS],\n<i>zip</i> takes the list of input files from standard input\ninstead of from the command line. For example,</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>zip -@\nfoo</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">will store the\nfiles listed one per line on stdin in <i>foo.zip</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Under Unix,\nthis option can be used to powerful effect in conjunction\nwith the <i>find&nbsp;</i>(1) command. For example, to\narchive all the C source files in the current directory and\nits subdirectories:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>find .\n-name &quot;*.[ch]&quot; -print | zip source -@</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">(note that the\npattern must be quoted to keep the shell from expanding\nit).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Streaming&nbsp;input&nbsp;and&nbsp;output.</b>\n<i>zip</i> will also accept a single dash (&quot;-&quot;) as\nthe zip file name, in which case it will write the zip file\nto standard output, allowing the output to be piped to\nanother program. For example:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>zip -r - .\n| dd of=/dev/nrst0 obs=16k</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">would write the\nzip output directly to a tape with the specified block size\nfor the purpose of backing up the current directory.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>zip</i> also\naccepts a single dash (&quot;-&quot;) as the name of a file\nto be compressed, in which case it will read the file from\nstandard input, allowing zip to take input from another\nprogram. For example:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>tar cf - .\n| zip backup -</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">would compress\nthe output of the tar command for the purpose of backing up\nthe current directory. This generally produces better\ncompression than the previous example using the -r option\nbecause <i>zip</i> can take advantage of redundancy between\nfiles. The backup can be restored using the command</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>unzip -p\nbackup | tar xf -</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When no zip\nfile name is given and stdout is not a terminal, <i>zip</i>\nacts as a filter, compressing standard input to standard\noutput. For example,</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>tar cf - .\n| zip | dd of=/dev/nrst0 obs=16k</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">is equivalent\nto</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>tar cf - .\n| zip - - | dd of=/dev/nrst0 obs=16k</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>zip</i>\narchives created in this manner can be extracted with the\nprogram <i>funzip</i> which is provided in the <i>unzip</i>\npackage, or by <i>gunzip</i> which is provided in the\n<i>gzip</i> package (but some <i>gunzip</i> may not support\nthis if <i>zip</i> used the Zip64 extensions). For\nexample:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">dd\nif=/dev/nrst0 ibs=16k | funzip | tar xvf -</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The stream can\nalso be saved to a file and <i>unzip</i> used.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If Zip64\nsupport for large files and archives is enabled and\n<i>zip</i> is used as a filter, <i>zip</i> creates a Zip64\narchive that requires a PKZIP 4.5 or later compatible unzip\nto read it. This is to avoid ambiguities in the zip file\nstructure as defined in the current zip standard (PKWARE\nAppNote) where the decision to use Zip64 needs to be made\nbefore data is written for the entry, but for a stream the\nsize of the data is not known at that point. If the data is\nknown to be smaller than 4 GB, the option <b>-fz-</b> can be\nused to prevent use of Zip64, but <i>zip</i> will exit with\nan error if Zip64 was in fact needed. <i>zip&nbsp;3</i> and\n<i>unzip&nbsp;6</i> and later can read archives with Zip64\nentries. Also, <i>zip</i> removes the Zip64 extensions if\nnot needed when archive entries are copied (see the\n<b>-U</b> (<b>--copy</b>) option).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When directing\nthe output to another file, note that all options should be\nbefore the redirection including <b>-x</b>. For example:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">zip archive\n&quot;*.h&quot; &quot;*.c&quot; -x donotinclude.h orthis.h\n&gt; tofile</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Zip&nbsp;files.</b>\nWhen changing an existing <i>zip</i> archive, <i>zip</i>\nwill write a temporary file with the new contents, and only\nreplace the old one when the process of creating the new\nversion has been completed without error.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the name of\nthe <i>zip</i> archive does not contain an extension, the\nextension <b>.zip</b> is added. If the name already contains\nan extension other than <b>.zip</b>, the existing extension\nis kept unchanged. However, split archives (archives split\nover multiple files) require the <b>.zip</b> extension on\nthe last split.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Scanning&nbsp;and&nbsp;reading&nbsp;files.</b>\nWhen <i>zip</i> starts, it scans for files to process (if\nneeded). If this scan takes longer than about 5 seconds,\n<i>zip</i> will display a &quot;Scanning files&quot; message\nand start displaying progress dots every 2 seconds or every\nso many entries processed, whichever takes longer. If there\nis more than 2 seconds between dots it could indicate that\nfinding each file is taking time and could mean a slow\nnetwork connection for example. (Actually the initial file\nscan is a two-step process where the directory scan is\nfollowed by a sort and these two steps are separated with a\nspace in the dots. If updating an existing archive, a space\nalso appears between the existing file scan and the new file\nscan.) The scanning files dots are not controlled by the\n<b>-ds</b> dot size option, but the dots are turned off by\nthe <b>-q</b> quiet option. The <b>-sf</b> show files option\ncan be used to scan for files and get the list of files\nscanned without actually processing them.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If <i>zip</i>\nis not able to read a file, it issues a warning but\ncontinues. See the <b>-MM</b> option below for more on how\n<i>zip</i> handles patterns that are not matched and files\nthat are not readable. If some files were skipped, a warning\nis issued at the end of the zip operation noting how many\nfiles were read and how many skipped.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Command&nbsp;modes.</b>\n<i>zip</i> now supports two distinct types of command modes,\n<b>external</b> and <b>internal</b>. The <b>external</b>\nmodes (add, update, and freshen) read files from the file\nsystem (as well as from an existing archive) while the\n<b>internal</b> modes (delete and copy) operate exclusively\non entries in an existing archive. <b><br>\nadd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></p>\n\n<p style=\"margin-left:22%;\">Update existing entries and add\nnew files. If the archive does not exist create it. This is\nthe default mode.</p>\n\n\n<p style=\"margin-left:11%;\"><b>update&nbsp;</b>(<b>-u</b>)</p>\n\n<p style=\"margin-left:22%;\">Update existing entries if\nnewer on the file system and add new files. If the archive\ndoes not exist issue warning then create a new archive.</p>\n\n\n<p style=\"margin-left:11%;\"><b>freshen&nbsp;</b>(<b>-f</b>)</p>\n\n<p style=\"margin-left:22%;\">Update existing entries of an\narchive if newer on the file system. Does not add new files\nto the archive.</p>\n\n\n<p style=\"margin-left:11%;\"><b>delete&nbsp;</b>(<b>-d</b>)</p>\n\n<p style=\"margin-left:22%;\">Select entries in an existing\narchive and delete them.</p>\n\n\n<p style=\"margin-left:11%;\"><b>copy&nbsp;</b>(<b>-U</b>)</p>\n\n<p style=\"margin-left:22%;\">Select entries in an existing\narchive and copy them to a new archive. This new mode is\nsimilar to <b>update</b> but command line patterns select\nentries in the existing archive rather than files from the\nfile system and it uses the <b>--out</b> option to write the\nresulting archive to a new file rather than update the\nexisting archive, leaving the original archive\nunchanged.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The new File\nSync option (<b>-FS</b>) is also considered a new mode,\nthough it is similar to <b>update</b>. This mode\nsynchronizes the archive with the files on the OS, only\nreplacing files in the archive if the file time or size of\nthe OS file is different, adding new files, and deleting\nentries from the archive where there is no matching file. As\nthis mode can delete entries from the archive, consider\nmaking a backup copy of the archive.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Also see\n<b>-DF</b> for creating difference archives.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See each option\ndescription below for details and the <b>EXAMPLES</b>\nsection below for examples.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Split&nbsp;archives.</b>\n<i>zip</i> version 3.0 and later can create split archives.\nA <b>split archive</b> is a standard zip archive split over\nmultiple files. (Note that split archives are not just\narchives split in to pieces, as the offsets of entries are\nnow based on the start of each split. Concatenating the\npieces together will invalidate these offsets, but\n<i>unzip</i> can usually deal with it. <i>zip</i> will\nusually refuse to process such a spliced archive unless the\n<b>-FF</b> fix option is used to fix the offsets.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">One use of\nsplit archives is storing a large archive on multiple\nremovable media. For a split archive with 20 split files the\nfiles are typically named (replace ARCHIVE with the name of\nyour archive) ARCHIVE.z01, ARCHIVE.z02, ..., ARCHIVE.z19,\nARCHIVE.zip. Note that the last file is the <b>.zip</b>\nfile. In contrast, <b>spanned archives</b> are the original\nmulti-disk archive generally requiring floppy disks and\nusing volume labels to store disk numbers. <i>zip</i>\nsupports split archives but not spanned archives, though a\nprocedure exists for converting split archives of the right\nsize to spanned archives. The reverse is also true, where\neach file of a spanned archive can be copied in order to\nfiles with the above names to create a split archive.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Use <b>-s</b>\nto set the split size and create a split archive. The size\nis given as a number followed optionally by one of k (kB), m\n(MB), g (GB), or t (TB) (the default is m). The <b>-sp</b>\noption can be used to pause <i>zip</i> between splits to\nallow changing removable media, for example, but read the\ndescriptions and warnings for both <b>-s</b> and <b>-sp</b>\nbelow.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Though\n<i>zip</i> does not update split archives, <i>zip</i>\nprovides the new option <b>-O</b> (<b>--output-file</b> or\n<b>--out</b>) to allow split archives to be updated and\nsaved in a new archive. For example,</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>zip\ninarchive.zip foo.c bar.c --out outarchive.zip</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">reads archive\n<b>inarchive.zip</b>, even if split, adds the files\n<b>foo.c</b> and <b>bar.c</b>, and writes the resulting\narchive to <b>outarchive.zip</b>. If <b>inarchive.zip</b> is\nsplit then <b>outarchive.zip</b> defaults to the same split\nsize. Be aware that if <b>outarchive.zip</b> and any split\nfiles that are created with it already exist, these are\nalways overwritten as needed without warning. This may be\nchanged in the future.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Unicode.</b>\nThough the zip standard requires storing paths in an archive\nusing a specific character set, in practice zips have stored\npaths in archives in whatever the local character set is.\nThis creates problems when an archive is created or updated\non a system using one character set and then extracted on\nanother system using a different character set. When\ncompiled with Unicode support enabled on platforms that\nsupport wide characters, <i>zip</i> now stores, in addition\nto the standard local path for backward compatibility, the\nUTF-8 translation of the path. This provides a common\nuniversal character set for storing paths that allows these\npaths to be fully extracted on other systems that support\nUnicode and to match as close as possible on systems that\ndon&rsquo;t.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On Win32\nsystems where paths are internally stored as Unicode but\nrepresented in the local character set, it&rsquo;s possible\nthat some paths will be skipped during a local character set\ndirectory scan. <i>zip</i> with Unicode support now can read\nand store these paths. Note that Win 9x systems and FAT file\nsystems don&rsquo;t fully support Unicode.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Be aware that\nconsole windows on Win32 and Unix, for example, sometimes\ndon&rsquo;t accurately show all characters due to how each\noperating system switches in character sets for display.\nHowever, directory navigation tools should show the correct\npaths if the needed fonts are loaded.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Command line\nformat.</b> This version of <i>zip</i> has updated command\nline processing and support for long options.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Short options\ntake the form</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>-s[-][s[-]...][value][=value][&nbsp;value]</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">where s is a\none or two character short option. A short option that takes\na value is last in an argument and anything after it is\ntaken as the value. If the option can be negated and\n&quot;-&quot; immediately follows the option, the option is\nnegated. Short options can also be given as separate\narguments</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>-s[-][value][=value][&nbsp;value]&nbsp;-s[-][value][=value][&nbsp;value]&nbsp;...</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Short options\nin general take values either as part of the same argument\nor as the following argument. An optional = is also\nsupported. So</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>-ttmmddyyyy</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">and</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>-tt=mmddyyyy</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">and</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>-tt\nmmddyyyy</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">all work. The\n<b>-x</b> and <b>-i</b> options accept lists of values and\nuse a slightly different format described below. See the\n<b>-x</b> and <b>-i</b> options.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Long options\ntake the form</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>--longoption[-][=value][\nvalue]</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">where the\noption starts with --, has a multicharacter name, can\ninclude a trailing dash to negate the option (if the option\nsupports it), and can have a value (option argument)\nspecified by preceding it with = (no spaces). Values can\nalso follow the argument. So</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>--before-date=mmddyyyy</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">and</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>--before-date\nmmddyyyy</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">both work.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Long option\nnames can be shortened to the shortest unique abbreviation.\nSee the option descriptions below for which support long\noptions. To avoid confusion, avoid abbreviating a negatable\noption with an embedded dash (&quot;-&quot;) at the dash if\nyou plan to negate it (the parser would consider a trailing\ndash, such as for the option <b>--some-option</b> using\n<b>--some-</b> as the option, as part of the name rather\nthan a negating dash). This may be changed to force the last\ndash in <b>--some-</b> to be negating in the future.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\"><b>-a</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--ascii</b></p>\n\n<p style=\"margin-left:22%;\">[Systems using EBCDIC]\nTranslate file to ASCII format.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-A</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--adjust-sfx</b></p>\n\n<p style=\"margin-left:22%;\">Adjust self-extracting\nexecutable archive. A self-extracting executable archive is\ncreated by prepending the SFX stub to an existing archive.\nThe <b>-A</b> option tells <i>zip</i> to adjust the entry\noffsets stored in the archive to take into account this\n&quot;preamble&quot; data.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note:\nself-extracting archives for the Amiga are a special case.\nAt present, only the Amiga port of <i>zip</i> is capable of\nadjusting or updating these without corrupting them. -J can\nbe used to remove the SFX stub if other updates need to be\nmade.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-AC</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--archive-clear</b></p>\n\n<p style=\"margin-left:22%;\">[WIN32] Once archive is created\n(and tested if <b>-T</b> is used, which is recommended),\nclear the archive bits of files processed. WARNING: Once the\nbits are cleared they are cleared. You may want to use the\n<b>-sf</b> show files option to store the list of files\nprocessed in case the archive operation must be repeated.\nAlso consider using the <b>-MM</b> must match option. Be\nsure to check out <b>-DF</b> as a possibly better way to do\nincremental backups.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-AS</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--archive-set</b></p>\n\n<p style=\"margin-left:22%;\">[WIN32] Only include files that\nhave the archive bit set. Directories are not stored when\n<b>-AS</b> is used, though by default the paths of entries,\nincluding directories, are stored as usual and can be used\nby most unzips to recreate directories.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The archive bit\nis set by the operating system when a file is modified and,\nif used with <b>-AC</b>, <b>-AS</b> can provide an\nincremental backup capability. However, other applications\ncan modify the archive bit and it may not be a reliable\nindicator of which files have changed since the last archive\noperation. Alternative ways to create incremental backups\nare using <b>-t</b> to use file dates, though this\nwon&rsquo;t catch old files copied to directories being\narchived, and <b>-DF</b> to create a differential\narchive.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-B</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--binary</b></p>\n\n<p style=\"margin-left:22%;\">[VM/CMS and MVS] force file to\nbe read binary (default is text).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-B</b>n</p></td>\n<td width=\"7%\"></td>\n<td width=\"78%\">\n\n\n<p>[TANDEM] set Edit/Enscribe formatting options with n\ndefined as</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%;\">bit 0: Don&rsquo;t add\ndelimiter (Edit/Enscribe) <br>\nbit 1: Use LF rather than CR/LF as delimiter (Edit/Enscribe)\n<br>\nbit 2: Space fill record to maximum record length (Enscribe)\n<br>\nbit 3: Trim trailing space (Enscribe) <br>\nbit 8: Force 30K (Expand) large read for unstructured\nfiles</p>\n\n<p style=\"margin-left:11%;\"><b>-b&nbsp;</b>path <b><br>\n--temp-path&nbsp;</b>path</p>\n\n<p style=\"margin-left:22%;\">Use the specified <i>path</i>\nfor the temporary <i>zip</i> archive. For example:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -b /tmp\nstuff *</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">will put the\ntemporary <i>zip</i> archive in the directory <i>/tmp</i>,\ncopying over <i>stuff.zip</i> to the current directory when\ndone. This option is useful when updating an existing\narchive and the file system containing this old archive does\nnot have enough space to hold both old and new archives at\nthe same time. It may also be useful when streaming in some\ncases to avoid the need for data descriptors. Note that\nusing this option may require <i>zip</i> take additional\ntime to copy the archive file when done to the destination\nfile system.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-c</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--entry-comments</b></p>\n\n<p style=\"margin-left:22%;\">Add one-line comments for each\nfile. File operations (adding, updating) are done first, and\nthe user is then prompted for a one-line comment for each\nfile. Enter the comment followed by return, or just return\nfor no comment.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-C</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--preserve-case</b></p>\n\n<p style=\"margin-left:22%;\">[VMS] Preserve case all on VMS.\nNegating this option (<b>-C-</b>) downcases.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-C2</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--preserve-case-2</b></p>\n\n<p style=\"margin-left:22%;\">[VMS] Preserve case ODS2 on\nVMS. Negating this option (<b>-C2-</b>) downcases.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-C5</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--preserve-case-5</b></p>\n\n<p style=\"margin-left:22%;\">[VMS] Preserve case ODS5 on\nVMS. Negating this option (<b>-C5-</b>) downcases.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-d</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--delete</b></p>\n\n<p style=\"margin-left:22%;\">Remove (delete) entries from a\n<i>zip</i> archive. For example:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -d foo\nfoo/tom/junk foo/harry/\\* \\*.o</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">will remove the\nentry <i>foo/tom/junk</i>, all of the files that start with\n<i>foo/harry/</i>, and all of the files that end with\n<b>.o</b> (in any path). Note that shell pathname expansion\nhas been inhibited with backslashes, so that <i>zip</i> can\nsee the asterisks, enabling <i>zip</i> to match on the\ncontents of the <i>zip</i> archive instead of the contents\nof the current directory. (The backslashes are not used on\nMSDOS-based platforms.) Can also use quotes to escape the\nasterisks as in</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -d foo\nfoo/tom/junk &quot;foo/harry/*&quot;\n&quot;*.o&quot;</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Not escaping\nthe asterisks on a system where the shell expands wildcards\ncould result in the asterisks being converted to a list of\nfiles in the current directory and that list used to delete\nentries from the archive.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Under MSDOS,\n<b>-d</b> is case sensitive when it matches names in the\n<i>zip</i> archive. This requires that file names be entered\nin upper case if they were zipped by PKZIP on an MSDOS\nsystem. (We considered making this case insensitive on\nsystems where paths were case insensitive, but it is\npossible the archive came from a system where case does\nmatter and the archive could include both <b>Bar</b> and\n<b>bar</b> as separate files in the archive.) But see the\nnew option <b>-ic</b> to ignore case in the archive.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-db</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--display-bytes</b></p>\n\n<p style=\"margin-left:22%;\">Display running byte counts\nshowing the bytes zipped and the bytes to go.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-dc</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--display-counts</b></p>\n\n<p style=\"margin-left:22%;\">Display running count of\nentries zipped and entries to go.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-dd</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--display-dots</b></p>\n\n<p style=\"margin-left:22%;\">Display dots while each entry\nis zipped (except on ports that have their own progress\nindicator). See <b>-ds</b> below for setting dot size. The\ndefault is a dot every 10 MB of input file processed. The\n<b>-v</b> option also displays dots (previously at a much\nhigher rate than this but now <b>-v</b> also defaults to 10\nMB) and this rate is also controlled by <b>-ds</b>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-df</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--datafork</b></p>\n\n<p style=\"margin-left:22%;\">[MacOS] Include only data-fork\nof files zipped into the archive. Good for exporting files\nto foreign operating-systems. Resource-forks will be ignored\nat all.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-dg</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>--display-globaldots</b></p>\n\n<p style=\"margin-left:22%;\">Display progress dots for the\narchive instead of for each file. The command</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">zip -qdgds\n10m</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">will turn off\nmost output except dots every 10 MB.</p>\n\n<p style=\"margin-left:11%;\"><b>-ds&nbsp;</b>size <b><br>\n--dot-size&nbsp;</b>size</p>\n\n<p style=\"margin-left:22%;\">Set amount of input file\nprocessed for each dot displayed. See <b>-dd</b> to enable\ndisplaying dots. Setting this option implies <b>-dd</b>.\nSize is in the format nm where n is a number and m is a\nmultiplier. Currently m can be k (KB), m (MB), g (GB), or t\n(TB), so if n is 100 and m is k, size would be 100k which is\n100 KB. The default is 10 MB.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The <b>-v</b>\noption also displays dots and now defaults to 10 MB also.\nThis rate is also controlled by this option. A size of 0\nturns dots off.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">This option\ndoes not control the dots from the &quot;Scanning\nfiles&quot; message as <i>zip</i> scans for input files. The\ndot size for that is fixed at 2 seconds or a fixed number of\nentries, whichever is longer.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-du</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--display-usize</b></p>\n\n<p style=\"margin-left:22%;\">Display the uncompressed size\nof each entry.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-dv</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--display-volume</b></p>\n\n<p style=\"margin-left:22%;\">Display the volume (disk)\nnumber each entry is being read from, if reading an existing\narchive, and being written to.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-D</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--no-dir-entries</b></p>\n\n<p style=\"margin-left:22%;\">Do not create entries in the\n<i>zip</i> archive for directories. Directory entries are\ncreated by default so that their attributes can be saved in\nthe zip archive. The environment variable ZIPOPT can be used\nto change the default options. For example under Unix with\nsh:</p>\n\n\n<p style=\"margin-left:32%; margin-top: 1em\">ZIPOPT=&quot;-D&quot;;\nexport ZIPOPT</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">(The variable\nZIPOPT can be used for any option, including <b>-i</b> and\n<b>-x</b> using a new option format detailed below, and can\ninclude several options.) The option <b>-D</b> is a\nshorthand for <b>-x</b> &quot;*/&quot; but the latter\npreviously could not be set as default in the ZIPOPT\nenvironment variable as the contents of ZIPOPT gets inserted\nnear the beginning of the command line and the file list had\nto end at the end of the line.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">This version of\n<i>zip</i> does allow <b>-x</b> and <b>-i</b> options in\nZIPOPT if the form</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>-x&nbsp;</b>file&nbsp;file&nbsp;...&nbsp;<b>@</b></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">is used, where\nthe @ (an argument that is just @) terminates the list.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-DF</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>--difference-archive</b></p>\n\n<p style=\"margin-left:22%;\">Create an archive that contains\nall new and changed files since the original archive was\ncreated. For this to work, the input file list and current\ndirectory must be the same as during the original <i>zip</i>\noperation.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">For example, if\nthe existing archive was created using</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -r\nfoofull .</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">from the\n<i>bar</i> directory, then the command</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -r\nfoofull . -DF --out foonew</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">also from the\n<i>bar</i> directory creates the archive <i>foonew</i> with\njust the files not in <i>foofull</i> and the files where the\nsize or file time of the files do not match those in\n<i>foofull</i>.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Note that the\ntimezone environment variable TZ should be set according to\nthe local timezone in order for this option to work\ncorrectly. A change in timezone since the original archive\nwas created could result in no times matching and all files\nbeing included.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">A possible\napproach to backing up a directory might be to create a\nnormal archive of the contents of the directory as a full\nbackup, then use this option to create incremental\nbackups.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-e</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--encrypt</b></p>\n\n<p style=\"margin-left:22%;\">Encrypt the contents of the\n<i>zip</i> archive using a password which is entered on the\nterminal in response to a prompt (this will not be echoed;\nif standard error is not a tty, <i>zip</i> will exit with an\nerror). The password prompt is repeated to save the user\nfrom typing errors.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-E</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--longnames</b></p>\n\n<p style=\"margin-left:22%;\">[OS/2] Use the .LONGNAME\nExtended Attribute (if found) as filename.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-f</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--freshen</b></p>\n\n<p style=\"margin-left:22%;\">Replace (freshen) an existing\nentry in the <i>zip</i> archive only if it has been modified\nmore recently than the version already in the <i>zip</i>\narchive; unlike the update option (<b>-u</b>) this will not\nadd files that are not already in the <i>zip</i> archive.\nFor example:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -f\nfoo</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">This command\nshould be run from the same directory from which the\noriginal <i>zip</i> command was run, since paths stored in\n<i>zip</i> archives are always relative.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Note that the\ntimezone environment variable TZ should be set according to\nthe local timezone in order for the <b>-f</b>, <b>-u</b> and\n<b>-o</b> options to work correctly.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The reasons\nbehind this are somewhat subtle but have to do with the\ndifferences between the Unix-format file times (always in\nGMT) and most of the other operating systems (always local\ntime) and the necessity to compare the two. A typical TZ\nvalue is &rsquo;&rsquo;MET-1MEST&rsquo;&rsquo; (Middle\nEuropean time with automatic adjustment for\n&rsquo;&rsquo;summertime&rsquo;&rsquo; or Daylight Savings\nTime).</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The format is\nTTThhDDD, where TTT is the time zone such as MET, hh is the\ndifference between GMT and local time such as -1 above, and\nDDD is the time zone when daylight savings time is in\neffect. Leave off the DDD if there is no daylight savings\ntime. For the US Eastern time zone EST5EDT.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-F</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>--fix&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-FF</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>--fixfix&nbsp;&nbsp;</b></p>\n\n<p style=\"margin-left:22%;\">Fix the <i>zip</i> archive. The\n<b>-F</b> option can be used if some portions of the archive\nare missing, but requires a reasonably intact central\ndirectory. The input archive is scanned as usual, but\n<i>zip</i> will ignore some problems. The resulting archive\nshould be valid, but any inconsistent entries will be left\nout.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">When doubled as\nin <b>-FF</b>, the archive is scanned from the beginning and\n<i>zip</i> scans for special signatures to identify the\nlimits between the archive members. The single <b>-F</b> is\nmore reliable if the archive is not too much damaged, so try\nthis option first.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">If the archive\nis too damaged or the end has been truncated, you must use\n<b>-FF</b>. This is a change from <i>zip&nbsp;2.32</i>,\nwhere the <b>-F</b> option is able to read a truncated\narchive. The <b>-F</b> option now more reliably fixes\narchives with minor damage and the <b>-FF</b> option is\nneeded to fix archives where <b>-F</b> might have been\nsufficient before.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Neither option\nwill recover archives that have been incorrectly transferred\nin ascii mode instead of binary. After the repair, the\n<b>-t</b> option of <i>unzip</i> may show that some files\nhave a bad CRC. Such files cannot be recovered; you can\nremove them from the archive using the <b>-d</b> option of\n<i>zip</i>.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Note that\n<b>-FF</b> may have trouble fixing archives that include an\nembedded zip archive that was stored (without compression)\nin the archive and, depending on the damage, it may find the\nentries in the embedded archive rather than the archive\nitself. Try <b>-F</b> first as it does not have this\nproblem.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The format of\nthe fix commands have changed. For example, to fix the\ndamaged archive <i>foo.zip</i>,</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -F foo\n--out foofix</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">tries to read\nthe entries normally, copying good entries to the new\narchive <i>foofix.zip</i>. If this doesn&rsquo;t work, as\nwhen the archive is truncated, or if some entries you know\nare in the archive are missed, then try</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -FF foo\n--out foofixfix</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">and compare the\nresulting archive to the archive created by <b>-F</b>. The\n<b>-FF</b> option may create an inconsistent archive.\nDepending on what is damaged, you can then use the <b>-F</b>\noption to fix that archive.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">A split archive\nwith missing split files can be fixed using <b>-F</b> if you\nhave the last split of the archive (the <b>.zip</b> file).\nIf this file is missing, you must use <b>-FF</b> to fix the\narchive, which will prompt you for the splits you have.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Currently the\nfix options can&rsquo;t recover entries that have a bad\nchecksum or are otherwise damaged.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>-FI</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>--fifo</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>[Unix] Normally <i>zip</i> skips reading any FIFOs\n(named pipes) encountered, as <i>zip</i> can hang if the\nFIFO is not being fed. This option tells <i>zip</i> to read\nthe contents of any FIFO it finds.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>-FS</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--filesync</b></p>\n\n<p style=\"margin-left:22%;\">Synchronize the contents of an\narchive with the files on the OS. Normally when an archive\nis updated, new files are added and changed files are\nupdated but files that no longer exist on the OS are not\ndeleted from the archive. This option enables a new mode\nthat checks entries in the archive against the file system.\nIf the file time and file size of the entry matches that of\nthe OS file, the entry is copied from the old archive\ninstead of being read from the file system and compressed.\nIf the OS file has changed, the entry is read and compressed\nas usual. If the entry in the archive does not match a file\non the OS, the entry is deleted. Enabling this option should\ncreate archives that are the same as new archives, but since\nexisting entries are copied instead of compressed, updating\nan existing archive with <b>-FS</b> can be much faster than\ncreating a new archive. Also consider using <b>-u</b> for\nupdating an archive.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">For this option\nto work, the archive should be updated from the same\ndirectory it was created in so the relative paths match. If\nfew files are being copied from the old archive, it may be\nfaster to create a new archive instead.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Note that the\ntimezone environment variable TZ should be set according to\nthe local timezone in order for this option to work\ncorrectly. A change in timezone since the original archive\nwas created could result in no times matching and\nrecompression of all files.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">This option\ndeletes files from the archive. If you need to preserve the\noriginal archive, make a copy of the archive first or use\nthe <b>--out</b> option to output the updated archive to a\nnew file. Even though it may be slower, creating a new\narchive with a new archive name is safer, avoids mismatches\nbetween archive and OS paths, and is preferred.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-g</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--grow\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></p>\n\n<p style=\"margin-left:22%;\">Grow (append to) the specified\n<i>zip</i> archive, instead of creating a new one. If this\noperation fails, <i>zip</i> attempts to restore the archive\nto its original state. If the restoration fails, the archive\nmight become corrupted. This option is ignored when\nthere&rsquo;s no existing archive or when at least one\narchive member must be updated or deleted.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-h</b></p></td>\n<td width=\"86%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-?</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--help\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></p>\n\n<p style=\"margin-left:22%;\">Display the <i>zip</i> help\ninformation (this also appears if <i>zip</i> is run with no\narguments).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-h2</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--more-help</b></p>\n\n<p style=\"margin-left:22%;\">Display extended help including\nmore on command line format, pattern matching, and more\nobscure options.</p>\n\n<p style=\"margin-left:11%;\"><b>-i&nbsp;</b>files <b><br>\n--include&nbsp;</b>files</p>\n\n<p style=\"margin-left:22%;\">Include only the specified\nfiles, as in:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -r foo\n. -i \\*.c</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">which will\ninclude only the files that end in .c in the current\ndirectory and its subdirectories. (Note for PKZIP users: the\nequivalent command is</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>pkzip -rP\nfoo *.c</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">PKZIP does not\nallow recursion in directories other than the current one.)\nThe backslash avoids the shell filename substitution, so\nthat the name matching is performed by <i>zip</i> at all\ndirectory levels. [This is for Unix and other systems where\n\\ escapes the next character. For other systems where the\nshell does not process * do not use \\ and the above is</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -r foo\n. -i *.c</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Examples are\nfor Unix unless otherwise specified.] So to include dir, a\ndirectory directly under the current directory, use</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -r foo\n. -i dir/\\*</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">or</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -r foo\n. -i &quot;dir/*&quot;</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">to match paths\nsuch as dir/a and dir/b/file.c [on ports without wildcard\nexpansion in the shell such as MSDOS and Windows</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -r foo\n. -i dir/*</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">is used.] Note\nthat currently the trailing / is needed for directories (as\nin</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -r foo\n. -i dir/</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">to include\ndirectory dir).</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The long option\nform of the first example is</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -r foo\n. --include \\*.c</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">and does the\nsame thing as the short option form.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Though the\ncommand syntax used to require <b>-i</b> at the end of the\ncommand line, this version actually allows <b>-i</b> (or\n<b>--include</b>) anywhere. The list of files terminates at\nthe next argument starting with <b>-</b>, the end of the\ncommand line, or the list terminator <b>@</b> (an argument\nthat is just @). So the above can be given as</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">zip -i \\*.c @\n-r foo .</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">for example.\nThere must be a space between the option and the first file\nof a list. For just one file you can use the single value\nform</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -i\\*.c\n-r foo .</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">(no space\nbetween option and value) or</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip\n--include=\\*.c -r foo .</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">as additional\nexamples. The single value forms are not recommended because\nthey can be confusing and, in particular, the <b>-ifile</b>\nformat can cause problems if the first letter of <b>file</b>\ncombines with <b>i</b> to form a two-letter option starting\nwith <b>i</b>. Use <b>-sc</b> to see how your command line\nwill be parsed.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Also\npossible:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -r foo\n. -i@include.lst</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">which will only\ninclude the files in the current directory and its\nsubdirectories that match the patterns in the file\ninclude.lst.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Files to\n<b>-i</b> and <b>-x</b> are patterns matching internal\narchive paths. See <b>-R</b> for more on patterns.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-I</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--no-image</b></p>\n\n<p style=\"margin-left:22%;\">[Acorn RISC OS] Don&rsquo;t\nscan through Image files. When used, <i>zip</i> will not\nconsider Image files (eg. DOS partitions or Spark archives\nwhen SparkFS is loaded) as directories but will store them\nas single files.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">For example, if\nyou have SparkFS loaded, zipping a Spark archive will result\nin a zipfile containing a directory (and its content) while\nusing the &rsquo;I&rsquo; option will result in a zipfile\ncontaining a Spark archive. Obviously this second case will\nalso be obtained (without the &rsquo;I&rsquo; option) if\nSparkFS isn&rsquo;t loaded.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-ic</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--ignore-case</b></p>\n\n<p style=\"margin-left:22%;\">[VMS, WIN32] Ignore case when\nmatching archive entries. This option is only available on\nsystems where the case of files is ignored. On systems with\ncase-insensitive file systems, case is normally ignored when\nmatching files on the file system but is not ignored for -f\n(freshen), -d (delete), -U (copy), and similar modes when\nmatching against archive entries (currently -f ignores case\non VMS) because archive entries can be from systems where\ncase does matter and names that are the same except for case\ncan exist in an archive. The <b>-ic</b> option makes all\nmatching case insensitive. This can result in multiple\narchive entries matching a command line pattern.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-j</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--junk-paths</b></p>\n\n<p style=\"margin-left:22%;\">Store just the name of a saved\nfile (junk the path), and do not store directory names. By\ndefault, <i>zip</i> will store the full path (relative to\nthe current directory).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-jj</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--absolute-path</b></p>\n\n<p style=\"margin-left:22%;\">[MacOS] record Fullpath (+\nVolname). The complete path including volume will be stored.\nBy default the relative path will be stored.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-J</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--junk-sfx</b></p>\n\n<p style=\"margin-left:22%;\">Strip any prepended data (e.g.\na SFX stub) from the archive.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-k</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--DOS-names</b></p>\n\n<p style=\"margin-left:22%;\">Attempt to convert the names\nand paths to conform to MSDOS, store only the MSDOS\nattribute (just the user write attribute from Unix), and\nmark the entry as made under MSDOS (even though it was not);\nfor compatibility with PKUNZIP under MSDOS which cannot\nhandle certain names such as those with two dots.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-l</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--to-crlf</b></p>\n\n<p style=\"margin-left:22%;\">Translate the Unix end-of-line\ncharacter LF into the MSDOS convention CR LF. This option\nshould not be used on binary files. This option can be used\non Unix if the zip file is intended for PKUNZIP under MSDOS.\nIf the input files already contain CR LF, this option adds\nan extra CR. This is to ensure that <b>unzip -a</b> on Unix\nwill get back an exact copy of the original file, to undo\nthe effect of <b>zip -l</b>. See <b>-ll</b> for how binary\nfiles are handled.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-la</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--log-append</b></p>\n\n<p style=\"margin-left:22%;\">Append to existing logfile.\nDefault is to overwrite.</p>\n\n<p style=\"margin-left:11%;\"><b>-lf&nbsp;</b>logfilepath\n<b><br>\n--logfile-path&nbsp;</b>logfilepath</p>\n\n<p style=\"margin-left:22%;\">Open a logfile at the given\npath. By default any existing file at that location is\noverwritten, but the <b>-la</b> option will result in an\nexisting file being opened and the new log information\nappended to any existing information. Only warnings and\nerrors are written to the log unless the <b>-li</b> option\nis also given, then all information messages are also\nwritten to the log.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-li</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--log-info</b></p>\n\n<p style=\"margin-left:22%;\">Include information messages,\nsuch as file names being zipped, in the log. The default is\nto only include the command line, any warnings and errors,\nand the final status.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-ll</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--from-crlf</b></p>\n\n<p style=\"margin-left:22%;\">Translate the MSDOS end-of-line\nCR LF into Unix LF. This option should not be used on binary\nfiles. This option can be used on MSDOS if the zip file is\nintended for unzip under Unix. If the file is converted and\nthe file is later determined to be binary a warning is\nissued and the file is probably corrupted. In this release\nif <b>-ll</b> detects binary in the first buffer read from a\nfile, <i>zip</i> now issues a warning and skips line end\nconversion on the file. This check seems to catch all binary\nfiles tested, but the original check remains and if a\nconverted file is later determined to be binary that warning\nis still issued. A new algorithm is now being used for\nbinary detection that should allow line end conversion of\ntext files in <b>UTF-8</b> and similar encodings.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-L</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--license</b></p>\n\n<p style=\"margin-left:22%;\">Display the <i>zip</i>\nlicense.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-m</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--move\n&nbsp;&nbsp;&nbsp;</b></p>\n\n<p style=\"margin-left:22%;\">Move the specified files into\nthe <i>zip</i> archive; actually, this deletes the target\ndirectories/files after making the specified <i>zip</i>\narchive. If a directory becomes empty after removal of the\nfiles, the directory is also removed. No deletions are done\nuntil <i>zip</i> has created the archive without error. This\nis useful for conserving disk space, but is potentially\ndangerous so it is recommended to use it in combination with\n<b>-T</b> to test the archive before removing all input\nfiles.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-MM</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--must-match</b></p>\n\n<p style=\"margin-left:22%;\">All input patterns must match\nat least one file and all input files found must be\nreadable. Normally when an input pattern does not match a\nfile the &quot;name not matched&quot; warning is issued and\nwhen an input file has been found but later is missing or\nnot readable a missing or not readable warning is issued. In\neither case <i>zip</i> continues creating the archive, with\nmissing or unreadable new files being skipped and files\nalready in the archive remaining unchanged. After the\narchive is created, if any files were not readable\n<i>zip</i> returns the OPEN error code (18 on most systems)\ninstead of the normal success return (0 on most systems).\nWith <b>-MM</b> set, <i>zip</i> exits as soon as an input\npattern is not matched (whenever the &quot;name not\nmatched&quot; warning would be issued) or when an input file\nis not readable. In either case <i>zip</i> exits with an\nOPEN error and no archive is created.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">This option is\nuseful when a known list of files is to be zipped so any\nmissing or unreadable files will result in an error. It is\nless useful when used with wildcards, but <i>zip</i> will\nstill exit with an error if any input pattern doesn&rsquo;t\nmatch at least one file and if any matched files are\nunreadable. If you want to create the archive anyway and\nonly need to know if files were skipped, don&rsquo;t use\n<b>-MM</b> and just check the return code. Also <b>-lf</b>\ncould be useful.</p>\n\n<p style=\"margin-left:11%;\"><b>-n&nbsp;</b>suffixes <b><br>\n--suffixes&nbsp;</b>suffixes</p>\n\n<p style=\"margin-left:22%;\">Do not attempt to compress\nfiles named with the given <b>suffixes</b>. Such files are\nsimply stored (0% compression) in the output zip file, so\nthat <i>zip</i> doesn&rsquo;t waste its time trying to\ncompress them. The suffixes are separated by either colons\nor semicolons. For example:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -rn\n.Z:.zip:.tiff:.gif:.snd foo foo</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">will copy\neverything from <i>foo</i> into <i>foo.zip</i>, but will\nstore any files that end in <i>.Z</i>, <i>.zip</i>,\n<i>.tiff</i>, <i>.gif</i>, or <i>.snd</i> without trying to\ncompress them (image and sound files often have their own\nspecialized compression methods). By default, <i>zip</i>\ndoes not compress files with extensions in the list\n<i>.Z:.zip:.zoo:.arc:.lzh:.arj.</i> Such files are stored\ndirectly in the output archive. The environment variable\nZIPOPT can be used to change the default options. For\nexample under Unix with csh:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">setenv ZIPOPT\n&quot;-n .gif:.zip&quot;</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">To attempt\ncompression on all files, use:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">zip -n :\nfoo</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The maximum\ncompression option <b>-9</b> also attempts compression on\nall files regardless of extension.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">On Acorn RISC\nOS systems the suffixes are actually filetypes (3 hex digit\nformat). By default, <i>zip</i> does not compress files with\nfiletypes in the list DDC:D96:68E (i.e. Archives, CFS files\nand PackDir files).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-nw</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--no-wild</b></p>\n\n<p style=\"margin-left:22%;\">Do not perform internal\nwildcard processing (shell processing of wildcards is still\ndone by the shell unless the arguments are escaped). Useful\nif a list of paths is being read and no wildcard\nsubstitution is desired.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-N</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--notes</b></p>\n\n<p style=\"margin-left:22%;\">[Amiga, MacOS] Save Amiga or\nMacOS filenotes as zipfile comments. They can be restored by\nusing the -N option of <i>unzip</i>. If -c is used also, you\nare prompted for comments only for those files that do not\nhave filenotes.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-o</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--latest-time</b></p>\n\n<p style=\"margin-left:22%;\">Set the &quot;last\nmodified&quot; time of the <i>zip</i> archive to the latest\n(oldest) &quot;last modified&quot; time found among the\nentries in the <i>zip</i> archive. This can be used without\nany other operations, if desired. For example:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>zip -o\nfoo</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">will change the\nlast modified time of <b>foo.zip</b> to the latest time of\nthe entries in <b>foo.zip</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>-O</b> output-file <b><br>\n--output-file</b> output-file</p>\n\n<p style=\"margin-left:22%;\">Process the archive changes as\nusual, but instead of updating the existing archive, output\nthe new archive to output-file. Useful for updating an\narchive without changing the existing archive and the input\narchive must be a different file than the output\narchive.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">This option can\nbe used to create updated split archives. It can also be\nused with <b>-U</b> to copy entries from an existing archive\nto a new archive. See the <b>EXAMPLES</b> section below.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Another use is\nconverting <i>zip</i> files from one split size to another.\nFor instance, to convert an archive with 700 MB CD splits to\none with 2 GB DVD splits, can use:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">zip -s 2g\ncd-split.zip --out dvd-split.zip</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">which uses copy\nmode. See <b>-U</b> below. Also:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">zip -s 0\nsplit.zip --out unsplit.zip</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">will convert a\nsplit archive to a single-file archive.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Copy mode will\nconvert stream entries (using data descriptors and which\nshould be compatible with most unzips) to normal entries\n(which should be compatible with all unzips), except if\nstandard encryption was used. For archives with encrypted\nentries, <i>zipcloak</i> will decrypt the entries and\nconvert them to normal entries.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-p</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--paths</b></p>\n\n<p style=\"margin-left:22%;\">Include relative file paths as\npart of the names of files stored in the archive. This is\nthe default. The <b>-j</b> option junks the paths and just\nstores the names of the files.</p>\n\n<p style=\"margin-left:11%;\"><b>-P&nbsp;</b>password <b><br>\n--password&nbsp;</b>password</p>\n\n<p style=\"margin-left:22%;\">Use <i>password</i> to encrypt\nzipfile entries (if any). <b>THIS IS INSECURE!</b> Many\nmulti-user operating systems provide ways for any user to\nsee the current command line of any other user; even on\nstand-alone systems there is always the threat of\nover-the-shoulder peeking. Storing the plaintext password as\npart of a command line in an automated script is even worse.\nWhenever possible, use the non-echoing, interactive prompt\nto enter passwords. (And where security is truly important,\nuse strong encryption such as Pretty Good Privacy instead of\nthe relatively weak standard encryption provided by zipfile\nutilities.)</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-q</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--quiet</b></p>\n\n<p style=\"margin-left:22%;\">Quiet mode; eliminate\ninformational messages and comment prompts. (Useful, for\nexample, in shell scripts and background tasks).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-Q</b>n</p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--Q-flag&nbsp;</b>n</p>\n\n<p style=\"margin-left:22%;\">[QDOS] store information about\nthe file in the file header with n defined as <br>\nbit 0: Don&rsquo;t add headers for any file <br>\nbit 1: Add headers for all files <br>\nbit 2: Don&rsquo;t wait for interactive key press on\nexit</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-r</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--recurse-paths</b></p>\n\n<p style=\"margin-left:22%;\">Travel the directory structure\nrecursively; for example:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">zip -r foo.zip\nfoo</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">or more\nconcisely</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">zip -r foo\nfoo</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">In this case,\nall the files and directories in <b>foo</b> are saved in a\n<i>zip</i> archive named <b>foo.zip</b>, including files\nwith names starting with <b>&quot;.&quot;</b>, since the\nrecursion does not use the shell&rsquo;s file-name\nsubstitution mechanism. If you wish to include only a\nspecific subset of the files in directory <b>foo</b> and its\nsubdirectories, use the <b>-i</b> option to specify the\npattern of files to be included. You should not use\n<b>-r</b> with the name <b>&quot;.*&quot;</b>, since that\nmatches <b>&quot;..&quot;</b> which will attempt to zip up\nthe parent directory (probably not what was intended).</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Multiple source\ndirectories are allowed as in</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -r foo\nfoo1 foo2</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">which first\nzips up <b>foo1</b> and then <b>foo2</b>, going down each\ndirectory.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Note that while\nwildcards to <b>-r</b> are typically resolved while\nrecursing down directories in the file system, any <b>-R,\n-x</b>, and <b>-i</b> wildcards are applied to internal\narchive pathnames once the directories are scanned. To have\nwildcards apply to files in subdirectories when recursing on\nUnix and similar systems where the shell does wildcard\nsubstitution, either escape all wildcards or put all\narguments with wildcards in quotes. This lets <i>zip</i> see\nthe wildcards and match files in subdirectories using them\nas it recurses.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-R</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--recurse-patterns</b></p>\n\n<p style=\"margin-left:22%;\">Travel the directory structure\nrecursively starting at the current directory; for\nexample:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -R foo\n&quot;*.c&quot;</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">In this case,\nall the files matching <b>*.c</b> in the tree starting at\nthe current directory are stored into a <i>zip</i> archive\nnamed <b>foo.zip</b>. Note that <b>*.c</b> will match\n<b>file.c</b>, <b>a/file.c</b> and <b>a/b/.c</b>. More than\none pattern can be listed as separate arguments. Note for\nPKZIP users: the equivalent command is</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>pkzip -rP\nfoo *.c</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Patterns are\nrelative file paths as they appear in the archive, or will\nafter zipping, and can have optional wildcards in them. For\nexample, given the current directory is <b>foo</b> and under\nit are directories <b>foo1</b> and <b>foo2</b> and in\n<b>foo1</b> is the file <b>bar.c</b>,</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -R\nfoo/*</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">will zip up\n<b>foo</b>, <b>foo/foo1</b>, <b>foo/foo1/bar.c</b>, and\n<b>foo/foo2</b>.</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -R\n*/bar.c</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">will zip up\n<b>foo/foo1/bar.c</b>. See the note for <b>-r</b> on\nescaping wildcards.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-RE</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--regex</b></p>\n\n<p style=\"margin-left:22%;\">[WIN32] Before <i>zip 3.0</i>,\nregular expression list matching was enabled by default on\nWindows platforms. Because of confusion resulting from the\nneed to escape &quot;[&quot; and &quot;]&quot; in names, it\nis now off by default for Windows so &quot;[&quot; and\n&quot;]&quot; are just normal characters in names. This\noption enables [] matching again.</p>\n\n<p style=\"margin-left:11%;\"><b>-s&nbsp;</b>splitsize\n<b><br>\n--split-size&nbsp;</b>splitsize</p>\n\n<p style=\"margin-left:22%;\">Enable creating a split archive\nand set the split size. A split archive is an archive that\ncould be split over many files. As the archive is created,\nif the size of the archive reaches the specified split size,\nthat split is closed and the next split opened. In general\nall splits but the last will be the split size and the last\nwill be whatever is left. If the entire archive is smaller\nthan the split size a single-file archive is created.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Split archives\nare stored in numbered files. For example, if the output\narchive is named <b>archive</b> and three splits are\nrequired, the resulting archive will be in the three files\n<b>archive.z01</b>, <b>archive.z02</b>, and\n<b>archive.zip</b>. Do not change the numbering of these\nfiles or the archive will not be readable as these are used\nto determine the order the splits are read.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Split size is a\nnumber optionally followed by a multiplier. Currently the\nnumber must be an integer. The multiplier can currently be\none of <b>k</b> (kilobytes), <b>m</b> (megabytes), <b>g</b>\n(gigabytes), or <b>t</b> (terabytes). As 64k is the minimum\nsplit size, numbers without multipliers default to\nmegabytes. For example, to create a split archive called\n<b>foo</b> with the contents of the <b>bar</b> directory\nwith splits of 670 MB that might be useful for burning on\nCDs, the command:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">zip -s 670m -r\nfoo bar</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">could be\nused.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Currently the\nold splits of a split archive are not excluded from a new\narchive, but they can be specifically excluded. If possible,\nkeep the input and output archives out of the path being\nzipped when creating split archives.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Using <b>-s</b>\nwithout <b>-sp</b> as above creates all the splits where\n<b>foo</b> is being written, in this case the current\ndirectory. This split mode updates the splits as the archive\nis being created, requiring all splits to remain writable,\nbut creates split archives that are readable by any unzip\nthat supports split archives. See <b>-sp</b> below for\nenabling split pause mode which allows splits to be written\ndirectly to removable media.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The option\n<b>-sv</b> can be used to enable verbose splitting and\nprovide details of how the splitting is being done. The\n<b>-sb</b> option can be used to ring the bell when\n<i>zip</i> pauses for the next split destination.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Split archives\ncannot be updated, but see the <b>-O</b> (<b>--out</b>)\noption for how a split archive can be updated as it is\ncopied to a new archive. A split archive can also be\nconverted into a single-file archive using a split size of 0\nor negating the <b>-s</b> option:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">zip -s 0\nsplit.zip --out single.zip</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Also see\n<b>-U</b> (<b>--copy</b>) for more on using copy mode.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-sb</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--split-bell</b></p>\n\n<p style=\"margin-left:22%;\">If splitting and using split\npause mode, ring the bell when <i>zip</i> pauses for each\nsplit destination.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-sc</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--show-command</b></p>\n\n<p style=\"margin-left:22%;\">Show the command line starting\n<i>zip</i> as processed and exit. The new command parser\npermutes the arguments, putting all options and any values\nassociated with them before any non-option arguments. This\nallows an option to appear anywhere in the command line as\nlong as any values that go with the option go with it. This\noption displays the command line as <i>zip</i> sees it,\nincluding any arguments from the environment such as from\nthe <b>ZIPOPT</b> variable. Where allowed, options later in\nthe command line can override options earlier in the command\nline.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-sf</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--show-files</b></p>\n\n<p style=\"margin-left:22%;\">Show the files that would be\noperated on, then exit. For instance, if creating a new\narchive, this will list the files that would be added. If\nthe option is negated, <b>-sf-</b>, output only to an open\nlog file. Screen display is not recommended for large\nlists.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-so</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--show-options</b></p>\n\n<p style=\"margin-left:22%;\">Show all available options\nsupported by <i>zip</i> as compiled on the current system.\nAs this command reads the option table, it should include\nall options. Each line includes the short option (if\ndefined), the long option (if defined), the format of any\nvalue that goes with the option, if the option can be\nnegated, and a small description. The value format can be no\nvalue, required value, optional value, single character\nvalue, number value, or a list of values. The output of this\noption is not intended to show how to use any option but\nonly show what options are available.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-sp</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--split-pause</b></p>\n\n<p style=\"margin-left:22%;\">If splitting is enabled with\n<b>-s</b>, enable split pause mode. This creates split\narchives as <b>-s</b> does, but stream writing is used so\neach split can be closed as soon as it is written and\n<i>zip</i> will pause between each split to allow changing\nsplit destination or media.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Though this\nsplit mode allows writing splits directly to removable\nmedia, it uses stream archive format that may not be\nreadable by some unzips. Before relying on splits created\nwith <b>-sp</b>, test a split archive with the unzip you\nwill be using.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">To convert a\nstream split archive (created with <b>-sp</b>) to a standard\narchive see the <b>--out</b> option.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-su</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--show-unicode</b></p>\n\n<p style=\"margin-left:22%;\">As <b>-sf</b>, but also show\nUnicode version of the path if exists.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-sU</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--show-just-unicode</b></p>\n\n<p style=\"margin-left:22%;\">As <b>-sf</b>, but only show\nUnicode version of the path if exists, otherwise show the\nstandard version of the path.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-sv</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--split-verbose</b></p>\n\n<p style=\"margin-left:22%;\">Enable various verbose messages\nwhile splitting, showing how the splitting is being\ndone.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-S</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--system-hidden</b></p>\n\n<p style=\"margin-left:22%;\">[MSDOS, OS/2, WIN32 and ATARI]\nInclude system and hidden files. <br>\n[MacOS] Includes finder invisible files, which are ignored\notherwise.</p>\n\n<p style=\"margin-left:11%;\"><b>-t&nbsp;</b>mmddyyyy <b><br>\n--from-date&nbsp;</b>mmddyyyy</p>\n\n<p style=\"margin-left:22%;\">Do not operate on files\nmodified prior to the specified date, where <b>mm</b> is the\nmonth (00-12), <b>dd</b> is the day of the month (01-31),\nand <b>yyyy</b> is the year. The <i>ISO&nbsp;8601</i> date\nformat <b>yyyy-mm-dd</b> is also accepted. For example:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -rt\n12071991 infamy foo</tt></p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -rt\n1991-12-07 infamy foo</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">will add all\nthe files in <b>foo</b> and its subdirectories that were\nlast modified on or after 7 December 1991, to the <i>zip</i>\narchive <b>infamy.zip</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>-tt&nbsp;</b>mmddyyyy\n<b><br>\n--before-date&nbsp;</b>mmddyyyy</p>\n\n<p style=\"margin-left:22%;\">Do not operate on files\nmodified after or at the specified date, where <b>mm</b> is\nthe month (00-12), <b>dd</b> is the day of the month\n(01-31), and <b>yyyy</b> is the year. The\n<i>ISO&nbsp;8601</i> date format <b>yyyy-mm-dd</b> is also\naccepted. For example:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -rtt\n11301995 infamy foo</tt></p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -rtt\n1995-11-30 infamy foo</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">will add all\nthe files in <b>foo</b> and its subdirectories that were\nlast modified before 30 November 1995, to the <i>zip</i>\narchive <b>infamy.zip</b>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-T</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>--test&nbsp;&nbsp;&nbsp;&nbsp;</b></p>\n\n<p style=\"margin-left:22%;\">Test the integrity of the new\nzip file. If the check fails, the old zip file is unchanged\nand (with the <b>-m</b> option) no input files are\nremoved.</p>\n\n<p style=\"margin-left:11%;\"><b>-TT&nbsp;</b>cmd <b><br>\n--unzip-command&nbsp;</b>cmd</p>\n\n<p style=\"margin-left:22%;\">Use command cmd instead of\n&rsquo;unzip -tqq&rsquo; to test an archive when the\n<b>-T</b> option is used. On Unix, to use a copy of unzip in\nthe current directory instead of the standard system unzip,\ncould use:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>zip archive\nfile1 file2 -T -TT &quot;./unzip -tqq&quot;</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">In cmd, {} is\nreplaced by the name of the temporary archive, otherwise the\nname of the archive is appended to the end of the command.\nThe return code is checked for success (0 on Unix).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-u</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--update</b></p>\n\n<p style=\"margin-left:22%;\">Replace (update) an existing\nentry in the <i>zip</i> archive only if it has been modified\nmore recently than the version already in the <i>zip</i>\narchive. For example:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -u\nstuff *</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">will add any\nnew files in the current directory, and update any files\nwhich have been modified since the <i>zip</i> archive\n<i>stuff.zip</i> was last created/modified (note that\n<i>zip</i> will not try to pack <i>stuff.zip</i> into itself\nwhen you do this).</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Note that the\n<b>-u</b> option with no input file arguments acts like the\n<b>-f</b> (freshen) option.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-U</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--copy-entries</b></p>\n\n<p style=\"margin-left:22%;\">Copy entries from one archive\nto another. Requires the <b>--out</b> option to specify a\ndifferent output file than the input archive. Copy mode is\nthe reverse of <b>-d</b> delete. When delete is being used\nwith <b>--out</b>, the selected entries are deleted from the\narchive and all other entries are copied to the new archive,\nwhile copy mode selects the files to include in the new\narchive. Unlike <b>-u</b> update, input patterns on the\ncommand line are matched against archive entries only and\nnot the file system files. For instance,</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip\ninarchive &quot;*.c&quot; --copy --out outarchive</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">copies entries\nwith names ending in <b>.c</b> from <b>inarchive</b> to\n<b>outarchive</b>. The wildcard must be escaped on some\nsystems to prevent the shell from substituting names of\nfiles from the file system which may have no relevance to\nthe entries in the archive.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">If no input\nfiles appear on the command line and <b>--out</b> is used,\ncopy mode is assumed:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip\ninarchive --out outarchive</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">This is useful\nfor changing split size for instance. Encrypting and\ndecrypting entries is not yet supported using copy mode. Use\n<i>zipcloak</i> for that.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>-UN&nbsp;</b>v</p></td>\n<td width=\"82%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--unicode&nbsp;</b>v</p>\n\n<p style=\"margin-left:22%;\">Determine what <i>zip</i>\nshould do with Unicode file names. <i>zip&nbsp;3.0</i>, in\naddition to the standard file path, now includes the UTF-8\ntranslation of the path if the entry path is not entirely\n7-bit ASCII. When an entry is missing the Unicode path,\n<i>zip</i> reverts back to the standard file path. The\nproblem with using the standard path is this path is in the\nlocal character set of the zip that created the entry, which\nmay contain characters that are not valid in the character\nset being used by the unzip. When <i>zip</i> is reading an\narchive, if an entry also has a Unicode path, <i>zip</i> now\ndefaults to using the Unicode path to recreate the standard\npath using the current local character set.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">This option can\nbe used to determine what <i>zip</i> should do with this\npath if there is a mismatch between the stored standard path\nand the stored UTF-8 path (which can happen if the standard\npath was updated). In all cases, if there is a mismatch it\nis assumed that the standard path is more current and\n<i>zip</i> uses that. Values for <b>v</b> are</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">q - quit if\npaths do not match</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">w - warn,\ncontinue with standard path</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">i - ignore,\ncontinue with standard path</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">n - no Unicode,\ndo not use Unicode paths</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The default is\nto warn and continue.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Characters that\nare not valid in the current character set are escaped as\n<b>#Uxxxx</b> and <b>#Lxxxxxx</b>, where x is an ASCII\ncharacter for a hex digit. The first is used if a 16-bit\ncharacter number is sufficient to represent the Unicode\ncharacter and the second if the character needs more than 16\nbits to represent it&rsquo;s Unicode character code. Setting\n<b>-UN</b> to</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">e - escape</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">as in</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip archive\n-sU -UN=e</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">forces\n<i>zip</i> to escape all characters that are not printable\n7-bit ASCII.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Normally\n<i>zip</i> stores UTF-8 directly in the standard path field\non systems where UTF-8 is the current character set and\nstores the UTF-8 in the new extra fields otherwise. The\noption</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">u - UTF-8</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">as in</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip archive\ndir -r -UN=UTF8</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">forces\n<i>zip</i> to store UTF-8 as native in the archive. Note\nthat storing UTF-8 directly is the default on Unix systems\nthat support it. This option could be useful on Windows\nsystems where the escaped path is too large to be a valid\npath and the UTF-8 version of the path is smaller, but\nnative UTF-8 is not backward compatible on Windows\nsystems.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-v</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--verbose</b></p>\n\n<p style=\"margin-left:22%;\">Verbose mode or print\ndiagnostic version info.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Normally, when\napplied to real operations, this option enables the display\nof a progress indicator during compression (see <b>-dd</b>\nfor more on dots) and requests verbose diagnostic info about\nzipfile structure oddities.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">However, when\n<b>-v</b> is the only command line argument a diagnostic\nscreen is printed instead. This should now work even if\nstdout is redirected to a file, allowing easy saving of the\ninformation for sending with bug reports to Info-ZIP. The\nversion screen provides the help screen header with program\nname, version, and release date, some pointers to the\nInfo-ZIP home and distribution sites, and shows information\nabout the target environment (compiler type and version, OS\nversion, compilation date and the enabled optional features\nused to create the <i>zip</i> executable).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-V</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--VMS-portable</b></p>\n\n<p style=\"margin-left:22%;\">[VMS] Save VMS file attributes.\n(Files are truncated at EOF.) When a -V archive is unpacked\non a non-VMS system, some file types (notably Stream_LF text\nfiles and pure binary files like fixed-512) should be\nextracted intact. Indexed files and file types with embedded\nrecord sizes (notably variable-length record types) will\nprobably be seen as corrupt elsewhere.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-VV</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--VMS-specific</b></p>\n\n<p style=\"margin-left:22%;\">[VMS] Save VMS file attributes,\nand all allocated blocks in a file, including any data\nbeyond EOF. Useful for moving ill-formed files among VMS\nsystems. When a -VV archive is unpacked on a non-VMS system,\nalmost all files will appear corrupt.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-w</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--VMS-versions</b></p>\n\n<p style=\"margin-left:22%;\">[VMS] Append the version number\nof the files to the name, including multiple versions of\nfiles. Default is to use only the most recent version of a\nspecified file.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-ww</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--VMS-dot-versions</b></p>\n\n<p style=\"margin-left:22%;\">[VMS] Append the version number\nof the files to the name, including multiple versions of\nfiles, using the .nnn format. Default is to use only the\nmost recent version of a specified file.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-ws</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--wild-stop-dirs</b></p>\n\n<p style=\"margin-left:22%;\">Wildcards match only at a\ndirectory level. Normally <i>zip</i> handles paths as\nstrings and given the paths</p>\n\n\n<p style=\"margin-left:32%; margin-top: 1em\">/foo/bar/dir/file1.c</p>\n\n\n<p style=\"margin-left:32%; margin-top: 1em\">/foo/bar/file2.c</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">an input\npattern such as</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">/foo/bar/*</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">normally would\nmatch both paths, the * matching <b>dir/file1.c</b> and\n<b>file2.c</b>. Note that in the first case a directory\nboundary (/) was crossed in the match. With <b>-ws</b> no\ndirectory bounds will be included in the match, making\nwildcards local to a specific directory level. So, with\n<b>-ws</b> enabled, only the second path would be\nmatched.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">When using\n<b>-ws</b>, use ** to match across directory boundaries as *\ndoes normally.</p>\n\n<p style=\"margin-left:11%;\"><b>-x&nbsp;</b>files <b><br>\n--exclude&nbsp;</b>files</p>\n\n<p style=\"margin-left:22%;\">Explicitly exclude the\nspecified files, as in:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -r foo\nfoo -x \\*.o</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">which will\ninclude the contents of <b>foo</b> in <b>foo.zip</b> while\nexcluding all the files that end in <b>.o</b>. The backslash\navoids the shell filename substitution, so that the name\nmatching is performed by <i>zip</i> at all directory\nlevels.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Also\npossible:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -r foo\nfoo -x@exclude.lst</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">which will\ninclude the contents of <b>foo</b> in <b>foo.zip</b> while\nexcluding all the files that match the patterns in the file\n<b>exclude.lst</b>.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The long option\nforms of the above are</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -r foo\nfoo --exclude \\*.o</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">and</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -r foo\nfoo --exclude @exclude.lst</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Multiple\npatterns can be specified, as in:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -r foo\nfoo -x \\*.o \\*.c</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">If there is no\nspace between <b>-x</b> and the pattern, just one value is\nassumed (no list):</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -r foo\nfoo -x\\*.o</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">See <b>-i</b>\nfor more on include and exclude.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-X</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--no-extra</b></p>\n\n<p style=\"margin-left:22%;\">Do not save extra file\nattributes (Extended Attributes on OS/2, uid/gid and file\ntimes on Unix). The zip format uses extra fields to include\nadditional information for each entry. Some extra fields are\nspecific to particular systems while others are applicable\nto all systems. Normally when <i>zip</i> reads entries from\nan existing archive, it reads the extra fields it knows,\nstrips the rest, and adds the extra fields applicable to\nthat system. With <b>-X</b>, <i>zip</i> strips all old\nfields and only includes the Unicode and Zip64 extra fields\n(currently these two extra fields cannot be disabled).</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Negating this\noption, <b>-X-</b>, includes all the default extra fields,\nbut also copies over any unrecognized extra fields.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-y</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--symlinks</b></p>\n\n<p style=\"margin-left:22%;\">For UNIX and VMS (V8.3 and\nlater), store symbolic links as such in the <i>zip</i>\narchive, instead of compressing and storing the file\nreferred to by the link. This can avoid multiple copies of\nfiles being included in the archive as <i>zip</i> recurses\nthe directory trees and accesses files directly and by\nlinks.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-z</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--archive-comment</b></p>\n\n<p style=\"margin-left:22%;\">Prompt for a multi-line comment\nfor the entire <i>zip</i> archive. The comment is ended by a\nline containing just a period, or an end of file condition\n(^D on Unix, ^Z on MSDOS, OS/2, and VMS). The comment can be\ntaken from a file:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -z foo\n&lt; foowhat</tt></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>-Z&nbsp;</b>cm</p></td>\n<td width=\"82%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>--compression-method&nbsp;</b>cm</p>\n\n<p style=\"margin-left:22%;\">Set the default compression\nmethod. Currently the main methods supported by <i>zip</i>\nare <b>store</b> and <b>deflate</b>. Compression method can\nbe set to:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>store</b> -\nSetting the compression method to <b>store</b> forces\n<i>zip</i> to store entries with no compression. This is\ngenerally faster than compressing entries, but results in no\nspace savings. This is the same as using <b>-0</b>\n(compression level zero).</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>deflate</b>\n- This is the default method for <i>zip</i>. If <i>zip</i>\ndetermines that storing is better than deflation, the entry\nwill be stored instead.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>bzip2</b> -\nIf <b>bzip2</b> support is compiled in, this compression\nmethod also becomes available. Only some modern unzips\ncurrently support the <b>bzip2</b> compression method, so\ntest the unzip you will be using before relying on archives\nusing this method (compression method 12).</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">For example, to\nadd <b>bar.c</b> to archive <b>foo</b> using <b>bzip2</b>\ncompression:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">zip -Z bzip2\nfoo bar.c</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The compression\nmethod can be abbreviated:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">zip -Zb foo\nbar.c</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-#</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>(-0, -1, -2, -3, -4, -5, -6,\n-7, -8, -9)</b></p>\n\n<p style=\"margin-left:22%;\">Regulate the speed of\ncompression using the specified digit <b>#</b>, where\n<b>-0</b> indicates no compression (store all files),\n<b>-1</b> indicates the fastest compression speed (less\ncompression) and <b>-9</b> indicates the slowest compression\nspeed (optimal compression, ignores the suffix list). The\ndefault compression level is <b>-6.</b></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Though still\nbeing worked, the intention is this setting will control\ncompression speed for all compression methods. Currently\nonly deflation is controlled.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-!</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--use-privileges</b></p>\n\n<p style=\"margin-left:22%;\">[WIN32] Use privileges (if\ngranted) to obtain all aspects of WinNT security.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-@</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--names-stdin</b></p>\n\n<p style=\"margin-left:22%;\">Take the list of input files\nfrom standard input. Only one filename per line.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-$</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--volume-label</b></p>\n\n<p style=\"margin-left:22%;\">[MSDOS, OS/2, WIN32] Include\nthe volume label for the drive holding the first file to be\ncompressed. If you want to include only the volume label or\nto force a specific drive, use the drive name as first file\nname, as in:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip -$ foo\na: c:bar</tt></p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The simplest\nexample:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>zip stuff\n*</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">creates the\narchive <i>stuff.zip</i> (assuming it does not exist) and\nputs all the files in the current directory in it, in\ncompressed form (the <b>.zip</b> suffix is added\nautomatically, unless the archive name contains a dot\nalready; this allows the explicit specification of other\nsuffixes).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Because of the\nway the shell on Unix does filename substitution, files\nstarting with &quot;.&quot; are not included; to include\nthese as well:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>zip stuff\n.* *</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Even this will\nnot include any subdirectories from the current\ndirectory.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To zip up an\nentire directory, the command:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>zip -r foo\nfoo</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">creates the\narchive <i>foo.zip</i>, containing all the files and\ndirectories in the directory <i>foo</i> that is contained\nwithin the current directory.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">You may want to\nmake a <i>zip</i> archive that contains the files in\n<i>foo</i>, without recording the directory name,\n<i>foo</i>. You can use the <b>-j</b> option to leave off\nthe paths, as in:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>zip -j foo\nfoo/*</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If you are\nshort on disk space, you might not have enough room to hold\nboth the original directory and the corresponding compressed\n<i>zip</i> archive. In this case, you can create the archive\nin steps using the <b>-m</b> option. If <i>foo</i> contains\nthe subdirectories <i>tom</i>, <i>dick</i>, and\n<i>harry</i>, you can:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>zip -rm foo\nfoo/tom <br>\nzip -rm foo foo/dick <br>\nzip -rm foo foo/harry</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">where the first\ncommand creates <i>foo.zip</i>, and the next two add to it.\nAt the completion of each <i>zip</i> command, the last\ncreated archive is deleted, making room for the next\n<i>zip</i> command to function.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Use <b>-s</b>\nto set the split size and create a split archive. The size\nis given as a number followed optionally by one of k (kB), m\n(MB), g (GB), or t (TB). The command</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>zip -s 2g\n-r split.zip foo</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">creates a split\narchive of the directory foo with splits no bigger than\n2&nbsp;GB each. If foo contained 5&nbsp;GB of contents and\nthe contents were stored in the split archive without\ncompression (to make this example simple), this would create\nthree splits, split.z01 at 2&nbsp;GB, split.z02 at\n2&nbsp;GB, and split.zip at a little over 1&nbsp;GB.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <b>-sp</b>\noption can be used to pause <i>zip</i> between splits to\nallow changing removable media, for example, but read the\ndescriptions and warnings for both <b>-s</b> and <b>-sp</b>\nbelow.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Though\n<i>zip</i> does not update split archives, <i>zip</i>\nprovides the new option <b>-O</b> (<b>--output-file</b>) to\nallow split archives to be updated and saved in a new\narchive. For example,</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><tt>zip\ninarchive.zip foo.c bar.c --out outarchive.zip</tt></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">reads archive\n<b>inarchive.zip</b>, even if split, adds the files\n<b>foo.c</b> and <b>bar.c</b>, and writes the resulting\narchive to <b>outarchive.zip</b>. If <b>inarchive.zip</b> is\nsplit then <b>outarchive.zip</b> defaults to the same split\nsize. Be aware that <b>outarchive.zip</b> and any split\nfiles that are created with it are always overwritten\nwithout warning. This may be changed in the future.</p>\n\n<h2>PATTERN MATCHING\n<a name=\"PATTERN MATCHING\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This section\napplies only to Unix. Watch this space for details on MSDOS\nand VMS operation. However, the special wildcard characters\n<b>*</b> and <b>[]</b> below apply to at least MSDOS\nalso.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The Unix shells\n(<i>sh</i>, <i>csh</i>, <i>bash</i>, and others) normally do\nfilename substitution (also called &quot;globbing&quot;) on\ncommand arguments. Generally the special characters are:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>?</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>match any single character</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>*</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>match any number of characters (including none)</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>[]</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>match any character in the range indicated within the\nbrackets (example: [a-f], [0-9]). This form of wildcard\nmatching allows a user to specify a list of characters\nbetween square brackets and if any of the characters match\nthe expression matches. For example:</p></td></tr>\n</table>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip archive\n&quot;*.[hc]&quot;</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">would archive\nall files in the current directory that end in <b>.h</b> or\n<b>.c</b>.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Ranges of\ncharacters are supported:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip archive\n&quot;[a-f]*&quot;</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">would add to\nthe archive all files starting with &quot;a&quot; through\n&quot;f&quot;.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Negation is\nalso supported, where any character in that position not in\nthe list matches. Negation is supported by adding <b>!</b>\nor <b>^</b> to the beginning of the list:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><tt>zip archive\n&quot;*.[!o]&quot;</tt></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">matches files\nthat don&rsquo;t end in &quot;.o&quot;.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">On WIN32, []\nmatching needs to be turned on with the -RE option to avoid\nthe confusion that names with [ or ] have caused.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When these\ncharacters are encountered (without being escaped with a\nbackslash or quotes), the shell will look for files relative\nto the current path that match the pattern, and replace the\nargument with a list of the names that matched.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <i>zip</i>\nprogram can do the same matching on names that are in the\n<i>zip</i> archive being modified or, in the case of the\n<b>-x</b> (exclude) or <b>-i</b> (include) options, on the\nlist of files to be operated on, by using backslashes or\nquotes to tell the shell not to do the name expansion. In\ngeneral, when <i>zip</i> encounters a name in the list of\nfiles to do, it first looks for the name in the file system.\nIf it finds it, it then adds it to the list of files to do.\nIf it does not find it, it looks for the name in the\n<i>zip</i> archive being modified (if it exists), using the\npattern matching characters described above, if present. For\neach match, it will add that name to the list of files to be\nprocessed, unless this name matches one given with the\n<b>-x</b> option, or does not match any name given with the\n<b>-i</b> option.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The pattern\nmatching includes the path, and so patterns like \\*.o match\nnames that end in &quot;.o&quot;, no matter what the path\nprefix is. Note that the backslash must precede every\nspecial character (i.e. ?*[]), or the entire argument must\nbe enclosed in double quotes (&quot;&quot;).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In general, use\nbackslashes or double quotes for paths that have wildcards\nto make <i>zip</i> do the pattern matching for file paths,\nand always for paths and strings that have spaces or\nwildcards for <b>-i</b>, <b>-x</b>, <b>-R</b>, <b>-d</b>,\nand <b>-U</b> and anywhere <i>zip</i> needs to process the\nwildcards.</p>\n\n<h2>ENVIRONMENT\n<a name=\"ENVIRONMENT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nenvironment variables are read and used by <i>zip</i> as\ndescribed. <b><br>\nZIPOPT&nbsp;&nbsp;</b></p>\n\n<p style=\"margin-left:22%;\">contains default options that\nwill be used when running <i>zip</i>. The contents of this\nenvironment variable will get added to the command line just\nafter the <b>zip</b> command.</p>\n\n\n<p style=\"margin-left:11%;\"><b>ZIP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></p>\n\n<p style=\"margin-left:22%;\">[Not on RISC OS and VMS] see\nZIPOPT</p>\n\n<p style=\"margin-left:11%;\"><b>Zip$Options</b></p>\n\n<p style=\"margin-left:22%;\">[RISC OS] see ZIPOPT</p>\n\n<p style=\"margin-left:11%;\"><b>Zip$Exts</b></p>\n\n<p style=\"margin-left:22%;\">[RISC OS] contains extensions\nseparated by a : that will cause native filenames with one\nof the specified extensions to be added to the zip file with\nbasename and extension swapped.</p>\n\n<p style=\"margin-left:11%;\"><b>ZIP_OPTS</b></p>\n\n<p style=\"margin-left:22%;\">[VMS] see ZIPOPT</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">compress(1),\nshar(1), tar(1), unzip(1), gzip(1)</p>\n\n<h2>DIAGNOSTICS\n<a name=\"DIAGNOSTICS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The exit status\n(or error level) approximates the exit codes defined by\nPKWARE and takes on the following values, except under\nVMS:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>0</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>normal; no errors or warnings detected.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>2</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>unexpected end of zip file.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>3</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>a generic error in the zipfile format was detected.\nProcessing may have completed successfully anyway; some\nbroken zipfiles created by other archivers have simple\nwork-arounds.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>4</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p><i>zip</i> was unable to allocate memory for one or more\nbuffers during program initialization.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>5</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>a severe error in the zipfile format was detected.\nProcessing probably failed immediately.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>6</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>entry too large to be processed (such as input files\nlarger than 2 GB when not using Zip64 or trying to read an\nexisting archive that is too large) or entry too large to be\nsplit with <i>zipsplit</i></p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>7</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>invalid comment format</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>8</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p><i>zip</i> -T failed or out of memory</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>9</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>the user aborted <i>zip</i> prematurely with control-C\n(or similar)</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>10</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p><i>zip</i> encountered an error while using a temp\nfile</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>11</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>read or seek error</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>12</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p><i>zip</i> has nothing to do</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>13</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>missing or empty zip file</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>14</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>error writing to a file</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>15</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p><i>zip</i> was unable to create a file to write to</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>16</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p>bad command line parameters</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>18</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p><i>zip</i> could not open a specified file to read</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>19</p></td>\n<td width=\"7%\"></td>\n<td width=\"68%\">\n\n\n<p><i>zip</i> was compiled with options not supported on\nthis system</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">VMS interprets\nstandard Unix (or PC) return values as other,\nscarier-looking things, so <i>zip</i> instead maps them into\nVMS-style status codes. In general, <i>zip</i> sets VMS\nFacility = 1955 (0x07A3), Code = 2* Unix_status, and an\nappropriate Severity (as specified in ziperr.h). More\ndetails are included in the VMS-specific documentation. See\n[.vms]NOTES.TXT and [.vms]vms_msg_gen.c.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>zip</i> 3.0\nis not compatible with PKUNZIP 1.10. Use <i>zip</i> 1.1 to\nproduce <i>zip</i> files which can be extracted by PKUNZIP\n1.10.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>zip</i>\nfiles produced by <i>zip</i> 3.0 must not be <i>updated</i>\nby <i>zip</i> 1.1 or PKZIP 1.10, if they contain encrypted\nmembers or if they have been produced in a pipe or on a\nnon-seekable device. The old versions of <i>zip</i> or PKZIP\nwould create an archive with an incorrect format. The old\nversions can list the contents of the zip file but cannot\nextract it anyway (because of the new compression\nalgorithm). If you do not use encryption and use regular\ndisk files, you do not have to care about this problem.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Under VMS, not\nall of the odd file formats are treated properly. Only\nstream-LF format <i>zip</i> files are expected to work with\n<i>zip</i>. Others can be converted using Rahul\nDhesi&rsquo;s BILF program. This version of <i>zip</i>\nhandles some of the conversion internally. When using Kermit\nto transfer zip files from VMS to MSDOS, type &quot;set file\ntype block&quot; on VMS. When transferring from MSDOS to\nVMS, type &quot;set file type fixed&quot; on VMS. In both\ncases, type &quot;set file type binary&quot; on MSDOS.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Under some\nolder VMS versions, <i>zip</i> may hang for file\nspecifications that use DECnet syntax <i>foo::*.*.</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On OS/2, zip\ncannot match some names, such as those including an\nexclamation mark or a hash sign. This is a bug in OS/2\nitself: the 32-bit DosFindFirst/Next don&rsquo;t find such\nnames. Other programs such as GNU tar are also affected by\nthis bug.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Under OS/2, the\namount of Extended Attributes displayed by DIR is (for\ncompatibility) the amount returned by the 16-bit version of\nDosQueryPathInfo(). Otherwise OS/2 1.3 and 2.0 would report\ndifferent EA sizes when DIRing a file. However, the\nstructure layout returned by the 32-bit DosQueryPathInfo()\nis a bit different, it uses extra padding bytes and link\npointers (it&rsquo;s a linked list) to have all fields on\n4-byte boundaries for portability to future RISC OS/2\nversions. Therefore the value reported by <i>zip</i> (which\nuses this 32-bit-mode size) differs from that reported by\nDIR. <i>zip</i> stores the 32-bit format for portability,\neven the 16-bit MS-C-compiled version running on OS/2 1.3,\nso even this one shows the 32-bit-mode size.</p>\n\n<h2>AUTHORS\n<a name=\"AUTHORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright (C)\n1997-2008 Info-ZIP.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Currently\ndistributed under the Info-ZIP license.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright (C)\n1990-1997 Mark Adler, Richard B. Wales, Jean-loup Gailly,\nOnno van der Linden, Kai Uwe Rommel, Igor Mandrichenko, John\nBush and Paul Kienitz.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Original\ncopyright:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Permission is\ngranted to any individual or institution to use, copy, or\nredistribute this software so long as all of the original\nfiles are included, that it is not sold for profit, and that\nthis copyright notice is retained.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">LIKE ANYTHING\nELSE THAT&rsquo;S FREE, ZIP AND ITS ASSOCIATED UTILITIES ARE\nPROVIDED AS IS AND COME WITH NO WARRANTY OF ANY KIND, EITHER\nEXPRESSED OR IMPLIED. IN NO EVENT WILL THE COPYRIGHT HOLDERS\nBE LIABLE FOR ANY DAMAGES RESULTING FROM THE USE OF THIS\nSOFTWARE.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Please send bug\nreports and comments using the web page at:\n<i>www.info-zip.org</i>. For bug reports, please include the\nversion of <i>zip</i> (see <i>zip&nbsp;-h</i>), the make\noptions used to compile it (see <i>zip&nbsp;-v</i>), the\nmachine and operating system in use, and as much additional\ninformation as possible.</p>\n\n<h2>ACKNOWLEDGEMENTS\n<a name=\"ACKNOWLEDGEMENTS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Thanks to R. P.\nByrne for his <i>Shrink.Pas</i> program, which inspired this\nproject, and from which the shrink algorithm was stolen; to\nPhil Katz for placing in the public domain the <i>zip</i>\nfile format, compression format, and .ZIP filename\nextension, and for accepting minor changes to the file\nformat; to Steve Burg for clarifications on the deflate\nformat; to Haruhiko Okumura and Leonid Broukhis for\nproviding some useful ideas for the compression algorithm;\nto Keith Petersen, Rich Wales, Hunter Goatley and Mark Adler\nfor providing a mailing list and <i>ftp</i> site for the\nInfo-ZIP group to use; and most importantly, to the Info-ZIP\ngroup itself (listed in the file <i>infozip.who</i>) without\nwhose tireless testing and bug-fixing efforts a portable\n<i>zip</i> would not have been possible. Finally we should\nthank (blame) the first Info-ZIP moderator, David\nKirschbaum, for getting us into this mess in the first\nplace. The manual page was rewritten for Unix by R. P. C.\nRodgers and updated by E. Gordon for <i>zip</i> 3.0.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#USE\">USE</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#PATTERN MATCHING\">PATTERN MATCHING</a>","<a href=\"#ENVIRONMENT\">ENVIRONMENT</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#DIAGNOSTICS\">DIAGNOSTICS</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#AUTHORS\">AUTHORS</a>","<a href=\"#ACKNOWLEDGEMENTS\">ACKNOWLEDGEMENTS</a>"]}