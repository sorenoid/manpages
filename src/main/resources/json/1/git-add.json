{"name":"git-add","description":"git-add - Add\nfile contents to the index","body":"\n\n<h1 align=\"center\">GIT-ADD</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">git-add - Add\nfile contents to the index</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>git add</i>\n[--verbose | -v] [--dry-run | -n] [--force | -f]\n[--interactive | -i] [--patch | -p] <br>\n[--edit | -e] [--[no-]all | --[no-]ignore-removal |\n[--update | -u]] [--sparse] <br>\n[--intent-to-add | -N] [--refresh] [--ignore-errors]\n[--ignore-missing] [--renormalize] <br>\n[--chmod=(+|-)x] [--pathspec-from-file=&lt;file&gt;\n[--pathspec-file-nul]] <br>\n[--] [&lt;pathspec&gt;...]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This command\nupdates the index using the current content found in the\nworking tree, to prepare the content staged for the next\ncommit. It typically adds the current content of existing\npaths as a whole, but with some options it can also be used\nto add content with only part of the changes made to the\nworking tree files applied, or remove paths that do not\nexist in the working tree anymore.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n&quot;index&quot; holds a snapshot of the content of the\nworking tree, and it is this snapshot that is taken as the\ncontents of the next commit. Thus after making any changes\nto the working tree, and before running the commit command,\nyou must use the <b>add</b> command to add any new or\nmodified files to the index.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This command\ncan be performed multiple times before a commit. It only\nadds the content of the specified file(s) at the time the\nadd command is run; if you want subsequent changes included\nin the next commit, then you must run <b>git add</b> again\nto add the new content to the index.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <b>git\nstatus</b> command can be used to obtain a summary of which\nfiles have changes that are staged for the next commit.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <b>git\nadd</b> command will not add ignored files by default. If\nany ignored files were explicitly specified on the command\nline, <b>git add</b> will fail with a list of ignored files.\nIgnored files reached by directory recursion or filename\nglobbing performed by Git (quote your globs before the\nshell) will be silently ignored. The <i>git add</i> command\ncan be used to add ignored files with the <b>-f</b> (force)\noption.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Please see\n<a href=\"https://man.page/1/git-commit\">git-commit(1)</a> for alternative ways to add content to\na commit.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;pathspec&gt;...</p>\n\n<p style=\"margin-left:17%;\">Files to add content from.\nFileglobs (e.g. <b>*.c</b>) can be given to add all matching\nfiles. Also a leading directory name (e.g. <b>dir</b> to add\n<b>dir/file1</b> and <b>dir/file2</b>) can be given to\nupdate the index to match the current state of the directory\nas a whole (e.g. specifying <b>dir</b> will record not just\na file <b>dir/file1</b> modified in the working tree, a file\n<b>dir/file2</b> added to the working tree, but also a file\n<b>dir/file3</b> removed from the working tree). Note that\nolder versions of Git used to ignore removed files; use\n<b>--no-all</b> option if you want to add modified or new\nfiles but ignore removed ones.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For more\ndetails about the &lt;pathspec&gt; syntax, see the\n<i>pathspec</i> entry in <a href=\"https://man.page/7/gitglossary\">gitglossary(7)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-n,\n--dry-run</p>\n\n<p style=\"margin-left:17%;\">Don&rsquo;t actually add the\nfile(s), just show if they exist and/or will be ignored.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-v,\n--verbose</p>\n\n<p style=\"margin-left:17%;\">Be verbose.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-f, --force</p>\n\n<p style=\"margin-left:17%;\">Allow adding otherwise ignored\nfiles.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--sparse</p>\n\n<p style=\"margin-left:17%;\">Allow updating index entries\noutside of the sparse-checkout cone. Normally, <b>git\nadd</b> refuses to update index entries whose paths do not\nfit within the sparse-checkout cone, since those files might\nbe removed from the working tree without warning. See\n<a href=\"https://man.page/1/git-sparse-checkout\">git-sparse-checkout(1)</a> for more details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-i,\n--interactive</p>\n\n<p style=\"margin-left:17%;\">Add modified contents in the\nworking tree interactively to the index. Optional path\narguments may be supplied to limit operation to a subset of\nthe working tree. See &ldquo;Interactive mode&rdquo; for\ndetails.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-p, --patch</p>\n\n<p style=\"margin-left:17%;\">Interactively choose hunks of\npatch between the index and the work tree and add them to\nthe index. This gives the user a chance to review the\ndifference before adding modified contents to the index.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This\neffectively runs <b>add --interactive</b>, but bypasses the\ninitial command menu and directly jumps to the <b>patch</b>\nsubcommand. See &ldquo;Interactive mode&rdquo; for\ndetails.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-e, --edit</p>\n\n<p style=\"margin-left:17%;\">Open the diff vs. the index in\nan editor and let the user edit it. After the editor was\nclosed, adjust the hunk headers and apply the patch to the\nindex.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The intent of\nthis option is to pick and choose lines of the patch to\napply, or even to modify the contents of lines to be staged.\nThis can be quicker and more flexible than using the\ninteractive hunk selector. However, it is easy to confuse\noneself and create a patch that does not apply to the index.\nSee EDITING PATCHES below.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-u,\n--update</p>\n\n<p style=\"margin-left:17%;\">Update the index just where it\nalready has an entry matching &lt;pathspec&gt;. This removes\nas well as modifies index entries to match the working tree,\nbut adds no new files.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If no\n&lt;pathspec&gt; is given when <b>-u</b> option is used, all\ntracked files in the entire working tree are updated (old\nversions of Git used to limit the update to the current\ndirectory and its subdirectories).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-A, --all,\n--no-ignore-removal</p>\n\n<p style=\"margin-left:17%;\">Update the index not only where\nthe working tree has a file matching &lt;pathspec&gt; but\nalso where the index already has an entry. This adds,\nmodifies, and removes index entries to match the working\ntree.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If no\n&lt;pathspec&gt; is given when <b>-A</b> option is used, all\nfiles in the entire working tree are updated (old versions\nof Git used to limit the update to the current directory and\nits subdirectories).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--no-all,\n--ignore-removal</p>\n\n<p style=\"margin-left:17%;\">Update the index by adding new\nfiles that are unknown to the index and files modified in\nthe working tree, but ignore files that have been removed\nfrom the working tree. This option is a no-op when no\n&lt;pathspec&gt; is used.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This option is\nprimarily to help users who are used to older versions of\nGit, whose &quot;git add &lt;pathspec&gt;...&quot; was a\nsynonym for &quot;git add --no-all\n&lt;pathspec&gt;...&quot;, i.e. ignored removed files.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-N,\n--intent-to-add</p>\n\n<p style=\"margin-left:17%;\">Record only the fact that the\npath will be added later. An entry for the path is placed in\nthe index with no content. This is useful for, among other\nthings, showing the unstaged content of such files with\n<b>git diff</b> and committing them with <b>git commit\n-a</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--refresh</p>\n\n<p style=\"margin-left:17%;\">Don&rsquo;t add the file(s),\nbut only refresh their stat() information in the index.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--ignore-errors</p>\n\n<p style=\"margin-left:17%;\">If some files could not be\nadded because of errors indexing them, do not abort the\noperation, but continue adding the others. The command shall\nstill exit with non-zero status. The configuration variable\n<b>add.ignoreErrors</b> can be set to true to make this the\ndefault behaviour.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--ignore-missing</p>\n\n<p style=\"margin-left:17%;\">This option can only be used\ntogether with --dry-run. By using this option the user can\ncheck if any of the given files would be ignored, no matter\nif they are already present in the work tree or not.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--no-warn-embedded-repo</p>\n\n<p style=\"margin-left:17%;\">By default, <b>git add</b> will\nwarn when adding an embedded repository to the index without\nusing <b>git submodule add</b> to create an entry in\n<b>.gitmodules</b>. This option will suppress the warning\n(e.g., if you are manually performing operations on\nsubmodules).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--renormalize</p>\n\n<p style=\"margin-left:17%;\">Apply the &quot;clean&quot;\nprocess freshly to all tracked files to forcibly add them\nagain to the index. This is useful after changing\n<b>core.autocrlf</b> configuration or the <b>text</b>\nattribute in order to correct files added with wrong CRLF/LF\nline endings. This option implies <b>-u</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--chmod=(+|-)x</p>\n\n<p style=\"margin-left:17%;\">Override the executable bit of\nthe added files. The executable bit is only changed in the\nindex, the files on disk are left unchanged.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--pathspec-from-file=&lt;file&gt;</p>\n\n<p style=\"margin-left:17%;\">Pathspec is passed in\n<b>&lt;file&gt;</b> instead of commandline args. If\n<b>&lt;file&gt;</b> is exactly <b>-</b> then standard input\nis used. Pathspec elements are separated by LF or CR/LF.\nPathspec elements can be quoted as explained for the\nconfiguration variable <b>core.quotePath</b> (see\n<a href=\"https://man.page/1/git-config\">git-config(1)</a>). See also <b>--pathspec-file-nul</b>\nand global <b>--literal-pathspecs</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--pathspec-file-nul</p>\n\n<p style=\"margin-left:17%;\">Only meaningful with\n<b>--pathspec-from-file</b>. Pathspec elements are separated\nwith NUL character and all other characters are taken\nliterally (including newlines and quotes).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--</p>\n\n<p style=\"margin-left:17%;\">This option can be used to\nseparate command-line options from the list of files,\n(useful when filenames might be mistaken for command-line\noptions).</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Adds\ncontent from all <b>*.txt</b> files under\n<b>Documentation</b> directory and its subdirectories:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ git add\nDocumentation/\\*.txt</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that the\nasterisk <b>*</b> is quoted from the shell in this example;\nthis lets the command include the files from subdirectories\nof <b>Documentation/</b> directory.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nConsiders adding content from all git-*.sh scripts:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ git add\ngit-*.sh</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Because this\nexample lets the shell expand the asterisk (i.e. you are\nlisting the files explicitly), it does not consider\n<b>subdir/git-foo.sh</b>.</p>\n\n<h2>INTERACTIVE MODE\n<a name=\"INTERACTIVE MODE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">When the\ncommand enters the interactive mode, it shows the output of\nthe <i>status</i> subcommand, and then goes into its\ninteractive command loop.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The command\nloop shows the list of subcommands available, and gives a\nprompt &quot;What now&gt; &quot;. In general, when the\nprompt ends with a single <i>&gt;</i>, you can pick only one\nof the choices given and type return, like this:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">*** Commands\n*** <br>\n1: status 2: update 3: revert 4: add untracked <br>\n5: patch 6: diff 7: quit 8: help <br>\nWhat now&gt; 1</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">You also could\nsay <b>s</b> or <b>sta</b> or <b>status</b> above as long as\nthe choice is unique.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The main\ncommand loop has 6 subcommands (plus help and quit).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">status</p>\n\n<p style=\"margin-left:17%;\">This shows the change between\nHEAD and index (i.e. what will be committed if you say\n<b>git commit</b>), and between index and working tree files\n(i.e. what you could stage further before <b>git commit</b>\nusing <b>git add</b>) for each path. A sample output looks\nlike this:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">staged unstaged\npath <br>\n1: binary nothing foo.png <br>\n2: +403/-35 +1/-1 git-add--interactive.perl</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">It shows that\nfoo.png has differences from HEAD (but that is binary so\nline count cannot be shown) and there is no difference\nbetween indexed copy and the working tree version (if the\nworking tree version were also different, <i>binary</i>\nwould have been shown in place of <i>nothing</i>). The other\nfile, git-add--interactive.perl, has 403 lines added and 35\nlines deleted if you commit what is in the index, but\nworking tree file has further modifications (one addition\nand one deletion).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">update</p>\n\n<p style=\"margin-left:17%;\">This shows the status\ninformation and issues an &quot;Update&gt;&gt;&quot; prompt.\nWhen the prompt ends with double <i>&gt;&gt;</i>, you can\nmake more than one selection, concatenated with whitespace\nor comma. Also you can say ranges. E.g. &quot;2-5 7,9&quot;\nto choose 2,3,4,5,7,9 from the list. If the second number in\na range is omitted, all remaining patches are taken. E.g.\n&quot;7-&quot; to choose 7,8,9 from the list. You can say\n<i>*</i> to choose everything.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">What you chose\nare then highlighted with <i>*</i>, like this:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">staged unstaged\npath <br>\n1: binary nothing foo.png <br>\n* 2: +403/-35 +1/-1 git-add--interactive.perl</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">To remove\nselection, prefix the input with <b>-</b> like this:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Update&gt;&gt;\n-2</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">After making\nthe selection, answer with an empty line to stage the\ncontents of working tree files for selected paths in the\nindex.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">revert</p>\n\n<p style=\"margin-left:17%;\">This has a very similar UI to\n<i>update</i>, and the staged information for selected paths\nare reverted to that of the HEAD version. Reverting new\npaths makes them untracked.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">add\nuntracked</p>\n\n<p style=\"margin-left:17%;\">This has a very similar UI to\n<i>update</i> and <i>revert</i>, and lets you add untracked\npaths to the index.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">patch</p>\n\n<p style=\"margin-left:17%;\">This lets you choose one path\nout of a <i>status</i> like selection. After choosing the\npath, it presents the diff between the index and the working\ntree file and asks you if you want to stage the change of\neach hunk. You can select one of the following options and\ntype return:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">y - stage this\nhunk <br>\nn - do not stage this hunk <br>\nq - quit; do not stage this hunk or any of the remaining\nones <br>\na - stage this hunk and all later hunks in the file <br>\nd - do not stage this hunk or any of the later hunks in the\nfile <br>\ng - select a hunk to go to <br>\n/ - search for a hunk matching the given regex <br>\nj - leave this hunk undecided, see next undecided hunk <br>\nJ - leave this hunk undecided, see next hunk <br>\nk - leave this hunk undecided, see previous undecided hunk\n<br>\nK - leave this hunk undecided, see previous hunk <br>\ns - split the current hunk into smaller hunks <br>\ne - manually edit the current hunk <br>\n? - print help</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">After deciding\nthe fate for all hunks, if there is any hunk that was\nchosen, the index is updated with the selected hunks.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">You can omit\nhaving to type return here, by setting the configuration\nvariable <b>interactive.singleKey</b> to <b>true</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff</p>\n\n<p style=\"margin-left:17%;\">This lets you review what will\nbe committed (i.e. between HEAD and index).</p>\n\n<h2>EDITING PATCHES\n<a name=\"EDITING PATCHES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Invoking <b>git\nadd -e</b> or selecting <b>e</b> from the interactive hunk\nselector will open a patch in your editor; after the editor\nexits, the result is applied to the index. You are free to\nmake arbitrary changes to the patch, but note that some\nchanges may have confusing results, or even result in a\npatch that cannot be applied. If you want to abort the\noperation entirely (i.e., stage nothing new in the index),\nsimply delete all lines of the patch. The list below\ndescribes some common things you may see in a patch, and\nwhich editing operations make sense on them.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">added\ncontent</p>\n\n<p style=\"margin-left:17%;\">Added content is represented by\nlines beginning with &quot;+&quot;. You can prevent staging\nany addition lines by deleting them.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">removed\ncontent</p>\n\n<p style=\"margin-left:17%;\">Removed content is represented\nby lines beginning with &quot;-&quot;. You can prevent\nstaging their removal by converting the &quot;-&quot; to a\n&quot; &quot; (space).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">modified\ncontent</p>\n\n<p style=\"margin-left:17%;\">Modified content is represented\nby &quot;-&quot; lines (removing the old content) followed\nby &quot;+&quot; lines (adding the replacement content). You\ncan prevent staging the modification by converting\n&quot;-&quot; lines to &quot; &quot;, and removing\n&quot;+&quot; lines. Beware that modifying only half of the\npair is likely to introduce confusing changes to the\nindex.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">There are also\nmore complex operations that can be performed. But beware\nthat because the patch is applied only to the index and not\nthe working tree, the working tree will appear to\n&quot;undo&quot; the change in the index. For example,\nintroducing a new line into the index that is in neither the\nHEAD nor the working tree will stage the new line for\ncommit, but the line will appear to be reverted in the\nworking tree.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Avoid using\nthese constructs, or do so with extreme caution.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">removing\nuntouched content</p>\n\n<p style=\"margin-left:17%;\">Content which does not differ\nbetween the index and working tree may be shown on context\nlines, beginning with a &quot; &quot; (space). You can stage\ncontext lines for removal by converting the space to a\n&quot;-&quot;. The resulting working tree file will appear\nto re-add the content.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">modifying\nexisting content</p>\n\n<p style=\"margin-left:17%;\">One can also modify context\nlines by staging them for removal (by converting &quot;\n&quot; to &quot;-&quot;) and adding a &quot;+&quot; line\nwith the new content. Similarly, one can modify\n&quot;+&quot; lines for existing additions or modifications.\nIn all cases, the new modification will appear reverted in\nthe working tree.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">new content</p>\n\n<p style=\"margin-left:17%;\">You may also add new content\nthat does not exist in the patch; simply add new lines, each\nstarting with &quot;+&quot;. The addition will appear\nreverted in the working tree.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">There are also\nseveral operations which should be avoided entirely, as they\nwill make the patch impossible to apply:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; adding\ncontext (&quot; &quot;) or removal (&quot;-&quot;) lines</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; deleting\ncontext or removal lines</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nmodifying the contents of context or removal lines</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/git-status\">git-status(1)</a>\n<a href=\"https://man.page/1/git-rm\">git-rm(1)</a> <a href=\"https://man.page/1/git-reset\">git-reset(1)</a> <a href=\"https://man.page/1/git-mv\">git-mv(1)</a>\n<a href=\"https://man.page/1/git-commit\">git-commit(1)</a> <a href=\"https://man.page/1/git-update-index\">git-update-index(1)</a></p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Part of the\n<a href=\"https://man.page/1/git\">git(1)</a> suite</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#INTERACTIVE MODE\">INTERACTIVE MODE</a>","<a href=\"#EDITING PATCHES\">EDITING PATCHES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#GIT\">GIT</a>"]}