{"name":"dpkg-source","body":"\n\n<h1 align=\"center\">dpkg-source</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">dpkg-source -\nDebian source package (.dsc) manipulation tool</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>dpkg-source</b>\n[<i>option</i>...] <i>command</i></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i><b>dpkg-source</b></i>\npacks and unpacks Debian source archives.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">None of these\ncommands allow multiple options to be combined into one, and\nthey do not allow the value for an option to be specified in\na separate argument.</p>\n\n<h2>COMMANDS\n<a name=\"COMMANDS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-x</b>,\n<b>--extract</b> <i>filename</i>.dsc\n[<i>output-directory</i>]</p>\n\n<p style=\"margin-left:17%;\">Extract a source package\n(<b>--extract</b> since dpkg 1.17.14). One non-option\nargument must be supplied, the name of the Debian source\ncontrol file (<b>.dsc</b>). An optional second non-option\nargument may be supplied to specify the directory to extract\nthe source package to, this must not exist. If no output\ndirectory is specified, the source package is extracted into\na directory named <i>source</i>-<i>version</i> under the\ncurrent working directory.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>dpkg-source</b>\nwill read the names of the other file(s) making up the\nsource package from the control file; they are assumed to be\nin the same directory as the <b>.dsc</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The files in\nthe extracted package will have their permissions and\nownerships set to those which would have been expected if\nthe files and directories had simply been created -\ndirectories and executable files will be 0777 and plain\nfiles will be 0666, both modified by the extractors&rsquo;\numask; if the parent directory is setgid then the extracted\ndirectories will be too, and all the files and directories\nwill inherit its group ownership.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If the source\npackage uses a non-standard format (currently this means all\nformats except &ldquo;1.0&rdquo;), its name will be stored\nin <b>debian/source/format</b> so that the following builds\nof the source package use the same format by default.</p>\n\n<p style=\"margin-left:11%;\"><b>-b</b>, <b>--build</b>\n<i>directory</i> [<i>format-specific-parameters</i>]</p>\n\n<p style=\"margin-left:17%;\">Build a source package\n(<b>--build</b> since dpkg 1.17.14). The first non-option\nargument is taken as the name of the directory containing\nthe debianized source tree (i.e. with a debian sub-directory\nand maybe changes to the original files). Depending on the\nsource package format used to build the package, additional\nparameters might be accepted.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>dpkg-source</b>\nwill build the source package with the first format found in\nthis ordered list: the format indicated with the\n<i>--format</i> command line option, the format indicated in\n<b>debian/source/format</b>, &ldquo;1.0&rdquo;. The fallback\nto &ldquo;1.0&rdquo; is deprecated and will be removed at\nsome point in the future, you should always document the\ndesired source format in <b>debian/source/format</b>. See\nsection <b><small>SOURCE PACKAGE FORMATS</small></b> for an\nextensive description of the various source package\nformats.</p>\n\n<p style=\"margin-left:11%;\"><b>--print-format</b>\n<i>directory</i></p>\n\n<p style=\"margin-left:17%;\">Print the source format that\nwould be used to build the source package if <b>dpkg-source\n--build</b> <i>directory</i> was called (in the same\nconditions and with the same parameters; since dpkg\n1.15.5).</p>\n\n<p style=\"margin-left:11%;\"><b>--before-build</b>\n<i>directory</i></p>\n\n<p style=\"margin-left:17%;\">Run the corresponding hook of\nthe source package format (since dpkg 1.15.8). This hook is\ncalled before any build of the package\n(<b>dpkg-buildpackage</b> calls it very early even before\n<b>debian/rules clean</b>). This command is idempotent and\ncan be called multiple times. Not all source formats\nimplement something in this hook, and those that do usually\nprepare the source tree for the build for example by\nensuring that the Debian patches are applied.</p>\n\n<p style=\"margin-left:11%;\"><b>--after-build</b>\n<i>directory</i></p>\n\n<p style=\"margin-left:17%;\">Run the corresponding hook of\nthe source package format (since dpkg 1.15.8). This hook is\ncalled after any build of the package\n(<b>dpkg-buildpackage</b> calls it last). This command is\nidempotent and can be called multiple times. Not all source\nformats implement something in this hook, and those that do\nusually use it to undo what <b>--before-build</b> has\ndone.</p>\n\n<p style=\"margin-left:11%;\"><b>--commit</b>\n[<i>directory</i>] ...</p>\n\n<p style=\"margin-left:17%;\">Record changes in the source\ntree unpacked in <i>directory</i> (since dpkg 1.16.1). This\ncommand can take supplementary parameters depending on the\nsource format. It will error out for formats where this\noperation doesn&rsquo;t mean anything.</p>\n\n<p style=\"margin-left:11%;\"><b>-?</b>, <b>--help</b></p>\n\n<p style=\"margin-left:17%;\">Show the usage message and\nexit. The format specific build and extract options can be\nshown by using the <b>--format</b> option.</p>\n\n<p style=\"margin-left:11%;\"><b>--version</b></p>\n\n<p style=\"margin-left:17%;\">Show the version and exit.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Generic\nbuild options <br>\n-c</b><i>control-file</i></p>\n\n<p style=\"margin-left:17%;\">Specifies the main source\ncontrol file to read information from. The default is\n<b>debian/control</b>. If given with relative pathname this\nis interpreted starting at the source tree&rsquo;s top level\ndirectory.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-l</b><i>changelog-file</i></p>\n\n<p style=\"margin-left:17%;\">Specifies the changelog file to\nread information from. The default is\n<b>debian/changelog</b>. If given with relative pathname\nthis is interpreted starting at the source tree&rsquo;s top\nlevel directory.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-F</b><i>changelog-format</i></p>\n\n<p style=\"margin-left:17%;\">Specifies the format of the\nchangelog. See <a href=\"https://man.page/1/dpkg-parsechangelog\">dpkg-parsechangelog(1)</a> for information\nabout alternative formats.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--format=</b><i>value</i></p>\n\n<p style=\"margin-left:17%;\">Use the given format for\nbuilding the source package (since dpkg 1.14.17). It does\noverride any format given in\n<b>debian/source/format</b>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-V</b><i>name</i><b>=</b><i>value</i></p>\n\n<p style=\"margin-left:17%;\">Set an output substitution\nvariable. See <a href=\"https://man.page/5/deb-substvars\">deb-substvars(5)</a> for a discussion of\noutput substitution.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-T</b><i>substvars-file</i></p>\n\n<p style=\"margin-left:17%;\">Read substitution variables in\n<i>substvars-file</i>; the default is to not read any file.\nThis option can be used multiple times to read substitution\nvariables from multiple files (since dpkg 1.15.6).</p>\n\n\n<p style=\"margin-left:11%;\"><b>-D</b><i>field</i><b>=</b><i>value</i></p>\n\n<p style=\"margin-left:17%;\">Override or add an output\ncontrol file field.</p>\n\n<p style=\"margin-left:11%;\"><b>-U</b><i>field</i></p>\n\n<p style=\"margin-left:17%;\">Remove an output control file\nfield.</p>\n\n<p style=\"margin-left:11%;\"><b>-Z</b><i>compression</i>,\n<b>--compression</b>=<i>compression</i></p>\n\n<p style=\"margin-left:17%;\">Specify the compression to use\nfor created tarballs and diff files (<b>--compression</b>\nsince dpkg 1.15.5). Note that this option will not cause\nexisting tarballs to be recompressed, it only affects new\nfiles. Supported values are: <i>gzip</i>, <i>bzip2</i>,\n<i>lzma</i> and <i>xz</i>. The default is <i>xz</i> for\nformats 2.0 and newer, and <i>gzip</i> for format 1.0.\n<i>xz</i> is only supported since dpkg 1.15.5.</p>\n\n<p style=\"margin-left:11%;\"><b>-z</b><i>level</i>,\n<b>--compression-level</b>=<i>level</i></p>\n\n<p style=\"margin-left:17%;\">Compression level to use\n(<b>--compression-level</b> since dpkg 1.15.5). As with\n<b>-Z</b> it only affects newly created files. Supported\nvalues are: <i>1</i> to <i>9</i>, <i>best</i>, and\n<i>fast</i>. The default is <i>9</i> for gzip and bzip2,\n<i>6</i> for xz and lzma.</p>\n\n<p style=\"margin-left:11%;\"><b>-i</b>[<i>regex</i>],\n<b>--diff-ignore</b>[=<i>regex</i>]</p>\n\n<p style=\"margin-left:17%;\">You may specify a perl regular\nexpression to match files you want filtered out of the list\nof files for the diff (<b>--diff-ignore</b> since dpkg\n1.15.6). (This list is generated by a find command.) (If the\nsource package is being built as a version 3 source package\nusing a <small>VCS,</small> this can be used to ignore\nuncommitted changes on specific files. Using -i.* will\nignore all of them.)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The <b>-i</b>\noption by itself enables this setting with a default regex\n(preserving any modification to the default regex done by a\nprevious use of <b>--extend-diff-ignore</b>) that will\nfilter out control files and directories of the most common\nrevision control systems, backup and swap files and Libtool\nbuild output directories. There can only be one active\nregex, of multiple <b>-i</b> options only the last one will\ntake effect.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This is very\nhelpful in cutting out extraneous files that get included in\nthe diff, e.g. if you maintain your source in a revision\ncontrol system and want to use a checkout to build a source\npackage without including the additional files and\ndirectories that it will usually contain (e.g.\n<small>CVS/,</small> .cvsignore, .svn/). The default regex\nis already very exhaustive, but if you need to replace it,\nplease note that by default it can match any part of a path,\nso if you want to match the begin of a filename or only full\nfilenames, you will need to provide the necessary anchors\n(e.g. &rsquo;(^|/)&rsquo;, &rsquo;($|/)&rsquo;)\nyourself.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--extend-diff-ignore</b>=<i>regex</i></p>\n\n<p style=\"margin-left:17%;\">The perl regular expression\nspecified will extend the default value used by\n<b>--diff-ignore</b> and its current value, if set (since\ndpkg 1.15.6). It does this by concatenating\n&ldquo;<b>|</b><i>regex</i>&rdquo; to the existing value.\nThis option is convenient to use in\n<b>debian/source/options</b> to exclude some auto-generated\nfiles from the automatic patch generation.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-I</b>[<i>file-pattern</i>],\n<b>--tar-ignore</b>[=<i>file-pattern</i>]</p>\n\n<p style=\"margin-left:17%;\">If this option is specified,\nthe pattern will be passed to <a href=\"https://man.page/1/tar\">tar(1)</a>&rsquo;s\n<b>--exclude</b> option when it is called to generate a\n.orig.tar or .tar file (<b>--tar-ignore</b> since dpkg\n1.15.6). For example, <b>-I</b> <small>CVS</small> will make\ntar skip over <small>CVS</small> directories when generating\na .tar.gz file. The option may be repeated multiple times to\nlist multiple patterns to exclude.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>-I</b> by\nitself adds default <b>--exclude</b> options that will\nfilter out control files and directories of the most common\nrevision control systems, backup and swap files and Libtool\nbuild output directories.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Note:</b>\nWhile they have similar purposes, <b>-i</b> and <b>-I</b>\nhave very different syntax and semantics. <b>-i</b> can only\nbe specified once and takes a perl compatible regular\nexpression which is matched against the full relative path\nof each file. <b>-I</b> can specified multiple times and\ntakes a filename pattern with shell wildcards. The pattern\nis applied to the full relative path but also to each part\nof the path individually. The exact semantic of tar&rsquo;s\n<b>--exclude</b> option is somewhat complicated, see\n&lt;https://www.gnu.org/software/tar/manual/tar.html#wildcards&gt;\nfor a full documentation.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The default\nregex and patterns for both options can be seen in the\noutput of the <b>--help</b> command.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Generic\nextract options <br>\n--no-copy</b></p>\n\n<p style=\"margin-left:17%;\">Do not copy original tarballs\nnear the extracted source package (since dpkg 1.14.17).</p>\n\n<p style=\"margin-left:11%;\"><b>--no-check</b></p>\n\n<p style=\"margin-left:17%;\">Do not check signatures and\nchecksums before unpacking (since dpkg 1.14.17).</p>\n\n<p style=\"margin-left:11%;\"><b>--no-overwrite-dir</b></p>\n\n<p style=\"margin-left:17%;\">Do not overwrite the extraction\ndirectory if it already exists (since dpkg 1.18.8).</p>\n\n\n<p style=\"margin-left:11%;\"><b>--require-valid-signature</b></p>\n\n<p style=\"margin-left:17%;\">Refuse to unpack the source\npackage if it doesn&rsquo;t contain an OpenPGP signature\nthat can be verified (since dpkg 1.15.0) either with the\nuser&rsquo;s <i>trustedkeys.gpg</i> keyring, one of the\nvendor-specific keyrings, or one of the official Debian\nkeyrings (<i>/usr/share/keyrings/debian-keyring.gpg</i>,\n<i>/usr/share/keyrings/debian-nonupload.gpg</i> and\n<i>/usr/share/keyrings/debian-maintainers.gpg</i>).</p>\n\n\n<p style=\"margin-left:11%;\"><b>--require-strong-checksums</b></p>\n\n<p style=\"margin-left:17%;\">Refuse to unpack the source\npackage if it does not contain any strong checksums (since\ndpkg 1.18.7). Currently the only known checksum considered\nstrong is <b><small>SHA-256</small></b> .</p>\n\n\n<p style=\"margin-left:11%;\"><b>--ignore-bad-version</b></p>\n\n<p style=\"margin-left:17%;\">Turns the bad source package\nversion check into a non-fatal warning (since dpkg 1.17.7).\nThis option should only be necessary when extracting ancient\nsource packages with broken versions, just for backwards\ncompatibility.</p>\n\n<h2>SOURCE PACKAGE FORMATS\n<a name=\"SOURCE PACKAGE FORMATS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">If you\ndon&rsquo;t know what source format to use, you should\nprobably pick either &ldquo;3.0 (quilt)&rdquo; or &ldquo;3.0\n(native)&rdquo;. See\n&lt;https://wiki.debian.org/Projects/DebSrc3.0&gt; for\ninformation on the deployment of those formats within\nDebian.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Format:\n1.0</b> <br>\nA source package in this format consists either of a\n<b>.orig.tar.gz</b> associated to a <b>.diff.gz</b> or a\nsingle <b>.tar.gz</b> (in that case the package is said to\nbe <i>native</i>). Optionally the original tarball might be\naccompanied by a detached upstream signature\n<b>.orig.tar.gz.asc</b>, extraction supported since dpkg\n1.18.5.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Extracting</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Extracting a\nnative package is a simple extraction of the single tarball\nin the target directory. Extracting a non-native package is\ndone by first unpacking the <b>.orig.tar.gz</b> and then\napplying the patch contained in the <b>.diff.gz</b> file.\nThe timestamp of all patched files is reset to the\nextraction time of the source package (this avoids timestamp\nskews leading to problems when autogenerated files are\npatched). The diff can create new files (the whole debian\ndirectory is created that way) but cannot remove files\n(empty files will be left over) and cannot create or change\nsymlinks.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Building</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Building a\nnative package is just creating a single tarball with the\nsource directory. Building a non-native package involves\nextracting the original tarball in a separate\n&ldquo;.orig&rdquo; directory and regenerating the\n<b>.diff.gz</b> by comparing the source package\n<i>directory</i> with the .orig directory.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Build\noptions (with --build):</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If a second\nnon-option argument is supplied it should be the name of the\noriginal source directory or tarfile or the empty string if\nthe package is a Debian-specific one and so has no\ndebianization diffs. If no second argument is supplied then\n<b>dpkg-source</b> will look for the original source tarfile\n<i>package</i><b>_</b><i>upstream-version</i><b>.orig.tar.gz</b>\nor the original source directory\n<i>directory</i><b>.orig</b> depending on the <b>-sX</b>\narguments.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-sa</b>,\n<b>-sp</b>, <b>-sk</b>, <b>-su</b> and <b>-sr</b> will not\noverwrite existing tarfiles or directories. If this is\ndesired then <b>-sA</b>, <b>-sP</b>, <b>-sK</b>, <b>-sU</b>\nand <b>-sR</b> should be used instead.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-sk</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"83%\">\n\n\n<p>Specifies to expect the original source as a tarfile, by\ndefault\n<i>package</i><b>_</b><i>upstream-version</i><b>.orig.tar.</b><i>extension</i>.\nIt will leave this original source in place as a tarfile, or\ncopy it to the current directory if it isn&rsquo;t already\nthere. The tarball will be unpacked into\n<i>directory</i><b>.orig</b> for the generation of the\ndiff.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-sp</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"83%\">\n\n\n<p>Like <b>-sk</b> but will remove the directory again\nafterwards.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-su</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"83%\">\n\n\n<p>Specifies that the original source is expected as a\ndirectory, by default\n<i>package</i><b>-</b><i>upstream-version</i><b>.orig</b>\nand <b>dpkg-source</b> will create a new original source\narchive from it.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-sr</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"83%\">\n\n\n<p>Like <b>-su</b> but will remove that directory after it\nhas been used.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-ss</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"83%\">\n\n\n<p>Specifies that the original source is available both as\na directory and as a tarfile. <b>dpkg-source</b> will use\nthe directory to create the diff, but the tarfile to create\nthe <b>.dsc</b>. This option must be used with care - if the\ndirectory and tarfile do not match a bad source archive will\nbe generated.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-sn</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"83%\">\n\n\n<p>Specifies to not look for any original source, and to\nnot generate a diff. The second argument, if supplied, must\nbe the empty string. This is used for Debian-specific\npackages which do not have a separate upstream source and\ntherefore have no debianization diffs.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-sa</b> or <b>-sA</b></p>\n\n<p style=\"margin-left:17%;\">Specifies to look for the\noriginal source archive as a tarfile or as a directory - the\nsecond argument, if any, may be either, or the empty string\n(this is equivalent to using <b>-sn</b>). If a tarfile is\nfound it will unpack it to create the diff and remove it\nafterwards (this is equivalent to <b>-sp</b>); if a\ndirectory is found it will pack it to create the original\nsource and remove it afterwards (this is equivalent to\n<b>-sr</b>); if neither is found it will assume that the\npackage has no debianization diffs, only a straightforward\nsource archive (this is equivalent to <b>-sn</b>). If both\nare found then <b>dpkg-source</b> will ignore the directory,\noverwriting it, if <b>-sA</b> was specified (this is\nequivalent to <b>-sP</b>) or raise an error if <b>-sa</b>\nwas specified. <b>-sa</b> is the default.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--abort-on-upstream-changes</b></p>\n\n<p style=\"margin-left:17%;\">The process fails if the\ngenerated diff contains changes to files outside of the\ndebian sub-directory (since dpkg 1.15.8). This option is not\nallowed in <b>debian/source/options</b> but can be used in\n<b>debian/source/local-options</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Extract\noptions (with --extract):</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In all cases\nany existing original source tree will be removed.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-sp</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"83%\">\n\n\n<p>Used when extracting then the original source (if any)\nwill be left as a tarfile. If it is not already located in\nthe current directory or if an existing but different file\nis there it will be copied there. (<b>This is the\ndefault</b>).</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-su</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"83%\">\n\n\n<p>Unpacks the original source tree.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-sn</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"83%\">\n\n\n<p>Ensures that the original source is neither copied to\nthe current directory nor unpacked. Any original source tree\nthat was in the current directory is still removed.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All the\n<b>-s</b><i>X</i> options are mutually exclusive. If you\nspecify more than one only the last one will be used.\n<b><br>\n--skip-debianization</b></p>\n\n<p style=\"margin-left:17%;\">Skips application of the debian\ndiff on top of the upstream sources (since dpkg 1.15.1).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Format:\n2.0</b> <br>\nExtraction supported since dpkg 1.13.9, building supported\nsince dpkg 1.14.8. Also known as wig&amp;pen. This format is\nnot recommended for wide-spread usage, the format &ldquo;3.0\n(quilt)&rdquo; replaces it. Wig&amp;pen was the first\nspecification of a new-generation source package format.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The behaviour\nof this format is the same as the &ldquo;3.0 (quilt)&rdquo;\nformat except that it doesn&rsquo;t use an explicit list of\npatches. All files in <b>debian/patches/</b> matching the\nperl regular expression <b>[\\w-]+</b> must be valid patches:\nthey are applied at extraction time.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When building a\nnew source package, any change to the upstream source is\nstored in a patch named <b>zz_debian-diff-auto</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Format: 3.0\n(native)</b> <br>\nSupported since dpkg 1.14.17. This format is an extension of\nthe native package format as defined in the 1.0 format. It\nsupports all compression methods and will ignore by default\nany <small>VCS</small> specific files and directories as\nwell as many temporary files (see default value associated\nto <b>-I</b> option in the <b>--help</b> output).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Format: 3.0\n(quilt)</b> <br>\nSupported since dpkg 1.14.17. A source package in this\nformat contains at least an original tarball\n(<b>.orig.tar.</b><i>ext</i> where <i>ext</i> can be\n<b>gz</b>, <b>bz2</b>, <b>lzma</b> and <b>xz</b>) and a\ndebian tarball (<b>.debian.tar.</b><i>ext</i>). It can also\ncontain additional original tarballs\n(<b>.orig-</b><i>component</i><b>.tar.</b><i>ext</i>).\n<i>component</i> can only contain alphanumeric\n(&rsquo;a-zA-Z0-9&rsquo;) characters and hyphens\n(&rsquo;-&rsquo;). Optionally each original tarball can be\naccompanied by a detached upstream signature\n(<b>.orig.tar.</b><i>ext</i><b>.asc</b> and\n<b>.orig-</b><i>component</i><b>.tar.</b><i>ext</i><b>.asc</b>),\nextraction supported since dpkg 1.17.20, building supported\nsince dpkg 1.18.5.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Extracting</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The main\noriginal tarball is extracted first, then all additional\noriginal tarballs are extracted in subdirectories named\nafter the <i>component</i> part of their filename (any\npre-existing directory is replaced). The debian tarball is\nextracted on top of the source directory after prior removal\nof any pre-existing <b>debian</b> directory. Note that the\ndebian tarball must contain a <b>debian</b> sub-directory\nbut it can also contain binary files outside of that\ndirectory (see <b>--include-binaries</b> option).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All patches\nlisted in <b>debian/patches/</b><i>vendor</i><b>.series</b>\nor <b>debian/patches/series</b> are then applied, where\n<i>vendor</i> will be the lowercase name of the current\nvendor, or <b>debian</b> if there is no vendor defined. If\nthe former file is used and the latter one doesn&rsquo;t\nexist (or is a symlink), then the latter is replaced with a\nsymlink to the former. This is meant to simplify usage of\n<b>quilt</b> to manage the set of patches. Vendor-specific\nseries files are intended to make it possible to serialize\nmultiple development branches based on the vendor, in a\ndeclarative way, in preference to open-coding this handling\nin <b>debian/rules</b>. This is particularly useful when the\nsource would need to be patched conditionally because the\naffected files do not have built-in conditional occlusion\nsupport. Note however that while <b>dpkg-source</b> parses\ncorrectly series files with explicit options used for patch\napplication (stored on each line after the patch filename\nand one or more spaces), it does ignore those options and\nalways expects patches that can be applied with the\n<b>-p1</b> option of <b>patch</b>. It will thus emit a\nwarning when it encounters such options, and the build is\nlikely to fail.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that\n<a href=\"https://man.page/1/lintian\">lintian(1)</a> will emit unconditional warnings when\nusing vendor series due to a controversial Debian specific\nruling, which should not affect any external usage; to\nsilence these, the dpkg lintian profile can be used by\npassing &laquo;<b>--profile dpkg</b>&raquo; to\n<a href=\"https://man.page/1/lintian\">lintian(1)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The timestamp\nof all patched files is reset to the extraction time of the\nsource package (this avoids timestamp skews leading to\nproblems when autogenerated files are patched).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Contrary to\n<b>quilt</b>&rsquo;s default behaviour, patches are expected\nto apply without any fuzz. When that is not the case, you\nshould refresh such patches with <b>quilt</b>, or\n<b>dpkg-source</b> will error out while trying to apply\nthem.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Similarly to\n<b>quilt</b>&rsquo;s default behaviour, the patches can\nremove files too.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The file\n<b>.pc/applied-patches</b> is created if some patches have\nbeen applied during the extraction.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Building</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All original\ntarballs found in the current directory are extracted in a\ntemporary directory by following the same logic as for the\nunpack, the debian directory is copied over in the temporary\ndirectory, and all patches except the automatic patch\n(<b>debian-changes-</b><i>version</i> or\n<b>debian-changes</b>, depending on\n<b>--single-debian-patch</b>) are applied. The temporary\ndirectory is compared to the source package directory. When\nthe diff is non-empty, the build fails unless\n<b>--single-debian-patch</b> or <b>--auto-commit</b> has\nbeen used, in which case the diff is stored in the automatic\npatch. If the automatic patch is created/deleted, it&rsquo;s\nadded/removed from the series file and from the <b>quilt</b>\nmetadata.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Any change on a\nbinary file is not representable in a diff and will thus\nlead to a failure unless the maintainer deliberately decided\nto include that modified binary file in the debian tarball\n(by listing it in <b>debian/source/include-binaries</b>).\nThe build will also fail if it finds binary files in the\ndebian sub-directory unless they have been allowed through\n<b>debian/source/include-binaries</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The updated\ndebian directory and the list of modified binaries is then\nused to generate the debian tarball.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nautomatically generated diff doesn&rsquo;t include changes\non <small>VCS</small> specific files as well as many\ntemporary files (see default value associated to <b>-i</b>\noption in the <b>--help</b> output). In particular, the\n<b>.pc</b> directory used by <b>quilt</b> is ignored during\ngeneration of the automatic patch.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Note:\ndpkg-source --before-build</b> (and <b>--build</b>) will\nensure that all patches listed in the series file are\napplied so that a package build always has all patches\napplied. It does this by finding unapplied patches (they are\nlisted in the <b>series</b> file but not in\n<b>.pc/applied-patches</b>), and if the first patch in that\nset can be applied without errors, it will apply them all.\nThe option <b>--no-preparation</b> can be used to disable\nthis behavior.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Recording\nchanges <br>\n--commit</b> [<i>directory</i>] [<i>patch-name</i>]\n[<i>patch-file</i>]</p>\n\n<p style=\"margin-left:17%;\">Generates a patch corresponding\nto the local changes that are not managed by the\n<b>quilt</b> patch system and integrates it in the patch\nsystem under the name <i>patch-name</i>. If the name is\nmissing, it will be asked interactively. If\n<i>patch-file</i> is given, it is used as the patch\ncorresponding to the local changes to integrate. Once\nintegrated, an editor is launched so that you can edit the\nmeta-information in the patch header.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Passing\n<i>patch-file</i> is mainly useful after a build failure\nthat pre-generated this file, and on this ground the given\nfile is removed after integration. Note also that the\nchanges contained in the patch file must already be applied\non the tree and that the files modified by the patch must\nnot have supplementary unrecorded changes.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If the patch\ngeneration detects modified binary files, they will be\nautomatically added to <b>debian/source/include-binaries</b>\nso that they end up in the debian tarball (exactly like\n<b>dpkg-source --include-binaries --build</b> would do).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Build\noptions <br>\n--allow-version-of-quilt-db=</b><i>version</i></p>\n\n<p style=\"margin-left:17%;\">Allow <b>dpkg-source</b> to\nbuild the source package if the version of the <b>quilt</b>\nmetadata is the one specified, even if <b>dpkg-source</b>\ndoesn&rsquo;t know about it (since dpkg 1.15.5.4).\nEffectively this says that the given version of the\n<b>quilt</b> metadata is compatible with the version 2 that\n<b>dpkg-source</b> currently supports. The version of the\n<b>quilt</b> metadata is stored in <b>.pc/.version</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>--include-removal</b></p>\n\n<p style=\"margin-left:17%;\">Do not ignore removed files and\ninclude them in the automatically generated patch.</p>\n\n<p style=\"margin-left:11%;\"><b>--include-timestamp</b></p>\n\n<p style=\"margin-left:17%;\">Include timestamp in the\nautomatically generated patch.</p>\n\n<p style=\"margin-left:11%;\"><b>--include-binaries</b></p>\n\n<p style=\"margin-left:17%;\">Add all modified binaries in\nthe debian tarball. Also add them to\n<b>debian/source/include-binaries</b>: they will be added by\ndefault in subsequent builds and this option is thus no more\nneeded.</p>\n\n<p style=\"margin-left:11%;\"><b>--no-preparation</b></p>\n\n<p style=\"margin-left:17%;\">Do not try to prepare the build\ntree by applying patches which are apparently unapplied\n(since dpkg 1.14.18).</p>\n\n\n<p style=\"margin-left:11%;\"><b>--single-debian-patch</b></p>\n\n<p style=\"margin-left:17%;\">Use\n<b>debian/patches/debian-changes</b> instead of\n<b>debian/patches/debian-changes-</b><i>version</i> for the\nname of the automatic patch generated during build (since\ndpkg 1.15.5.4). This option is particularly useful when the\npackage is maintained in a <small>VCS</small> and a patch\nset can&rsquo;t reliably be generated. Instead the current\ndiff with upstream should be stored in a single patch. The\noption would be put in <b>debian/source/local-options</b>\nand would be accompanied by a\n<b>debian/source/local-patch-header</b> file explaining how\nthe Debian changes can be best reviewed, for example in the\n<small>VCS</small> that is used.</p>\n\n<p style=\"margin-left:11%;\"><b>--create-empty-orig</b></p>\n\n<p style=\"margin-left:17%;\">Automatically create the main\noriginal tarball as empty if it&rsquo;s missing and if there\nare supplementary original tarballs (since dpkg 1.15.6).\nThis option is meant to be used when the source package is\njust a bundle of multiple upstream software and where\nthere&rsquo;s no &ldquo;main&rdquo; software.</p>\n\n<p style=\"margin-left:11%;\"><b>--no-unapply-patches,\n--unapply-patches</b></p>\n\n<p style=\"margin-left:17%;\">By default, <b>dpkg-source</b>\nwill automatically unapply the patches in the\n<b>--after-build</b> hook if it did apply them during\n<b>--before-build</b> (<b>--unapply-patches</b> since dpkg\n1.15.8, <b>--no-unapply-patches</b> since dpkg 1.16.5).\nThose options allow you to forcefully disable or enable the\npatch unapplication process. Those options are only allowed\nin <b>debian/source/local-options</b> so that all generated\nsource packages have the same behavior by default.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--abort-on-upstream-changes</b></p>\n\n<p style=\"margin-left:17%;\">The process fails if an\nautomatic patch has been generated (since dpkg 1.15.8). This\noption can be used to ensure that all changes were properly\nrecorded in separate <b>quilt</b> patches prior to the\nsource package build. This option is not allowed in\n<b>debian/source/options</b> but can be used in\n<b>debian/source/local-options</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>--auto-commit</b></p>\n\n<p style=\"margin-left:17%;\">The process doesn&rsquo;t fail\nif an automatic patch has been generated, instead it&rsquo;s\nimmediately recorded in the <b>quilt</b> series.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Extract\noptions <br>\n--skip-debianization</b></p>\n\n<p style=\"margin-left:17%;\">Skips extraction of the debian\ntarball on top of the upstream sources (since dpkg\n1.15.1).</p>\n\n<p style=\"margin-left:11%;\"><b>--skip-patches</b></p>\n\n<p style=\"margin-left:17%;\">Do not apply patches at the end\nof the extraction (since dpkg 1.14.18).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Format: 3.0\n(custom)</b> <br>\nSupported since dpkg 1.14.17. This format is special. It\ndoesn&rsquo;t represent a real source package format but can\nbe used to create source packages with arbitrary files.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Build\noptions</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All non-option\narguments are taken as files to integrate in the generated\nsource package. They must exist and are preferably in the\ncurrent directory. At least one file must be given. <b><br>\n--target-format=</b><i>value</i></p>\n\n<p style=\"margin-left:17%;\"><b>Required</b>. Defines the\nreal format of the generated source package. The generated\n.dsc file will contain this value in its <b>Format</b> field\nand not &ldquo;3.0 (custom)&rdquo;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Format: 3.0\n(git)</b> <br>\nSupported since dpkg 1.14.17. This format is\nexperimental.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A source\npackage in this format consists of a single bundle of a git\nrepository <b>.git</b> to hold the source of a package.\nThere may also be a <b>.gitshallow</b> file listing\nrevisions for a shallow git clone.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Extracting</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The bundle is\ncloned as a git repository to the target directory. If there\nis a gitshallow file, it is installed as <i>.git/shallow</i>\ninside the cloned git repository.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that by\ndefault the new repository will have the same branch checked\nout that was checked out in the original source. (Typically\n&ldquo;master&rdquo;, but it could be anything.) Any other\nbranches will be available under <i>remotes/origin/</i>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Building</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Before going\nany further, some checks are done to ensure that we\ndon&rsquo;t have any non-ignored uncommitted changes.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/git-bundle\">git-bundle(1)</a>\nis used to generate a bundle of the git repository. By\ndefault, all branches and tags in the repository are\nincluded in the bundle.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Build\noptions <br>\n--git-ref=</b><i>ref</i></p>\n\n<p style=\"margin-left:17%;\">Allows specifying a git ref to\ninclude in the git bundle. Use disables the default behavior\nof including all branches and tags. May be specified\nmultiple times. The <i>ref</i> can be the name of a branch\nor tag to include. It may also be any parameter that can be\npassed to <a href=\"https://man.page/1/git-rev-list\">git-rev-list(1)</a>. For example, to include\nonly the master branch, use <b>--git-ref=</b>master. To\ninclude all tags and branches, except for the private\nbranch, use <b>--git-ref=</b>--all\n<b>--git-ref=</b>^private</p>\n\n\n<p style=\"margin-left:11%;\"><b>--git-depth=</b><i>number</i></p>\n\n<p style=\"margin-left:17%;\">Creates a shallow clone with a\nhistory truncated to the specified number of revisions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Format: 3.0\n(bzr)</b> <br>\nSupported since dpkg 1.14.17. This format is experimental.\nIt generates a single tarball containing the bzr\nrepository.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Extracting</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The tarball is\nunpacked and then bzr is used to checkout the current\nbranch.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Building</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Before going\nany further, some checks are done to ensure that we\ndon&rsquo;t have any non-ignored uncommitted changes.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Then the\n<small>VCS</small> specific part of the source directory is\ncopied over to a temporary directory. Before this temporary\ndirectory is packed in a tarball, various cleanup are done\nto save space.</p>\n\n<h2>DIAGNOSTICS\n<a name=\"DIAGNOSTICS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>no source\nformat specified in debian/source/format</b> <br>\nThe file <b>debian/source/format</b> should always exist and\nindicate the desired source format. For backwards\ncompatibility, format &ldquo;1.0&rdquo; is assumed when the\nfile doesn&rsquo;t exist but you should not rely on this: at\nsome point in the future <b>dpkg-source</b> will be modified\nto fail when that file doesn&rsquo;t exist.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The rationale\nis that format &ldquo;1.0&rdquo; is no longer the\nrecommended format, you should usually pick one of the newer\nformats (&ldquo;3.0 (quilt)&rdquo;, &ldquo;3.0\n(native)&rdquo;) but <b>dpkg-source</b> will not do this\nautomatically for you. If you want to continue using the old\nformat, you should be explicit about it and put\n&ldquo;1.0&rdquo; in <b>debian/source/format</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>the diff\nmodifies the following upstream files</b> <br>\nWhen using source format &ldquo;1.0&rdquo; it is usually a\nbad idea to modify upstream files directly as the changes\nend up hidden and mostly undocumented in the .diff.gz file.\nInstead you should store your changes as patches in the\ndebian directory and apply them at build-time. To avoid this\ncomplexity you can also use the format &ldquo;3.0\n(quilt)&rdquo; that offers this natively.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>cannot\nrepresent change to</b> <i>file</i> <br>\nChanges to upstream sources are usually stored with patch\nfiles, but not all changes can be represented with patches:\nthey can only alter the content of plain text files. If you\ntry replacing a file with something of a different type (for\nexample replacing a plain file with a symlink or a\ndirectory), you will get this error message.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>newly\ncreated empty file</b> <i>file</i> <b>will not be\nrepresented in diff</b> <br>\nEmpty files can&rsquo;t be created with patch files. Thus\nthis change is not recorded in the source package and you\nare warned about it.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>executable\nmode</b> <i>perms</i> <b>of</b> <i>file</i> <b>will not be\nrepresented in diff</b> <br>\nPatch files do not record permissions of files and thus\nexecutable permissions are not stored in the source package.\nThis warning reminds you of that fact.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>special\nmode</b> <i>perms</i> <b>of</b> <i>file</i> <b>will not be\nrepresented in diff</b> <br>\nPatch files do not record permissions of files and thus\nmodified permissions are not stored in the source package.\nThis warning reminds you of that fact.</p>\n\n<h2>ENVIRONMENT\n<a name=\"ENVIRONMENT\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><small>DPKG_COLORS</small></b></p>\n\n<p style=\"margin-left:17%;\">Sets the color mode (since dpkg\n1.18.5). The currently accepted values are: <b>auto</b>\n(default), <b>always</b> and <b>never</b>.</p>\n\n\n<p style=\"margin-left:11%;\"><b><small>DPKG_NLS</small></b></p>\n\n<p style=\"margin-left:17%;\">If set, it will be used to\ndecide whether to activate Native Language Support, also\nknown as internationalization (or i18n) support (since dpkg\n1.19.0). The accepted values are: <b>0</b> and <b>1</b>\n(default).</p>\n\n\n<p style=\"margin-left:11%;\"><b><small>SOURCE_DATE_EPOCH</small></b></p>\n\n<p style=\"margin-left:17%;\">If set, it will be used as the\ntimestamp (as seconds since the epoch) to clamp the mtime in\nthe <a href=\"https://man.page/5/tar\">tar(5)</a> file entries.</p>\n\n<p style=\"margin-left:11%;\"><b><small>VISUAL <br>\nEDITOR</small></b></p>\n\n<p style=\"margin-left:17%;\">Used by the &ldquo;2.0&rdquo;\nand &ldquo;3.0 (quilt)&rdquo; source format modules.</p>\n\n<p style=\"margin-left:11%;\"><b><small>GIT_DIR <br>\nGIT_INDEX_FILE <br>\nGIT_OBJECT_DIRECTORY <br>\nGIT_ALTERNATE_OBJECT_DIRECTORIES <br>\nGIT_WORK_TREE</small></b></p>\n\n<p style=\"margin-left:17%;\">Used by the &ldquo;3.0\n(git)&rdquo; source format modules.</p>\n\n<h2>FILES\n<a name=\"FILES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>debian/source/format</b>\n<br>\nThis file contains on a single line the format that should\nbe used to build the source package (possible formats are\ndescribed above). No leading or trailing spaces are\nallowed.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>debian/source/include-binaries</b>\n<br>\nThis file contains a list of pathnames of binary files (one\nper line) relative to the source root directory that should\nbe included in the debian tarball. Leading and trailing\nspaces are stripped. Lines starting with\n&rsquo;<b>#</b>&rsquo; are comments and are skipped. Empty\nlines are ignored.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>debian/source/options</b>\n<br>\nThis file contains a list of long options that should be\nautomatically prepended to the set of command line options\nof a <b>dpkg-source --build</b> or <b>dpkg-source\n--print-format</b> call. Options like <b>--compression</b>\nand <b>--compression-level</b> are well suited for this\nfile.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Each option\nshould be put on a separate line. Empty lines and lines\nstarting with &rsquo;<b>#</b>&rsquo; are ignored. The\nleading &rsquo;<b>--</b>&rsquo; should be stripped and short\noptions are not allowed. Optional spaces are allowed around\nthe &rsquo;<b>=</b>&rsquo; symbol and optional quotes are\nallowed around the value. Here&rsquo;s an example of such a\nfile:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"># let\ndpkg-source create a debian.tar.bz2 with maximal compression\n<br>\ncompression = &quot;bzip2&quot; <br>\ncompression-level = 9 <br>\n# use debian/patches/debian-changes as automatic patch <br>\nsingle-debian-patch <br>\n# ignore changes on config.{sub,guess} <br>\nextend-diff-ignore =\n&quot;(^|/)(config.sub|config.guess)$&quot;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Note:\nformat</b> options are not accepted in this file, you should\nuse <b>debian/source/format</b> instead.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>debian/source/local-options</b>\n<br>\nExactly like <b>debian/source/options</b> except that the\nfile is not included in the generated source package. It can\nbe useful to store a preference tied to the maintainer or to\nthe <small>VCS</small> repository where the source package\nis maintained.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>debian/source/local-patch-header\n<br>\ndebian/source/patch-header</b> <br>\nFree form text that is put on top of the automatic patch\ngenerated in formats &ldquo;2.0&rdquo; or &ldquo;3.0\n(quilt)&rdquo;. <b>local-patch-header</b> is not included in\nthe generated source package while <b>patch-header</b>\nis.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>debian/patches/</b><i>vendor</i><b>.series\n<br>\ndebian/patches/series</b> <br>\nThis file lists all patches that have to be applied (in the\ngiven order) on top of the upstream source package. Leading\nand trailing spaces are stripped. The <i>vendor</i> will be\nthe lowercase name of the current vendor, or <b>debian</b>\nif there is no vendor defined. If the vendor-specific series\nfile does not exist, the vendor-less series file will be\nused. Lines starting with &rsquo;<b>#</b>&rsquo; are\ncomments and are skipped. Empty lines are ignored. Remaining\nlines start with a patch filename (relative to the\n<b>debian/patches/</b> directory) up to the first space\ncharacter or the end of line. Optional <b>quilt</b> options\ncan follow up to the end of line or the first\n&rsquo;<b>#</b>&rsquo; preceded by one or more spaces (which\nmarks the start of a comment up to the end of line).</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The point at\nwhich field overriding occurs compared to certain standard\noutput field settings is rather confused.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/5/deb-src-control\">deb-src-control(5)</a>,\n<a href=\"https://man.page/5/deb-changelog\">deb-changelog(5)</a>, <a href=\"https://man.page/5/dsc\">dsc(5)</a>.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#COMMANDS\">COMMANDS</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#SOURCE PACKAGE FORMATS\">SOURCE PACKAGE FORMATS</a>","<a href=\"#DIAGNOSTICS\">DIAGNOSTICS</a>","<a href=\"#ENVIRONMENT\">ENVIRONMENT</a>","<a href=\"#FILES\">FILES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"]}