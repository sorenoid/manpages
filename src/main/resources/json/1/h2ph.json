{"name":"h2ph","description":"h2ph - convert\n.h C header files to .ph Perl header files","body":"\n\n<h1 align=\"center\">H2PH</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">h2ph - convert\n.h C header files to .ph Perl header files</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>h2ph [-d\ndestination directory] [-r | -a] [-l] [-h] [-e] [-D] [-Q]\n[headerfiles]</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><i>h2ph</i></b>\nconverts any C header files specified to the corresponding\nPerl header file format. It is most easily run while in\n/usr/include:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">cd\n/usr/include; h2ph * sys/*</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">or</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">cd\n/usr/include; h2ph * sys/* arpa/* netinet/*</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">or</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">cd\n/usr/include; h2ph -r -l .</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The output\nfiles are placed in the hierarchy rooted at Perl&rsquo;s\narchitecture dependent library directory. You can specify a\ndifferent hierarchy with a <b>-d</b> switch.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If run with no\narguments, filters standard input to standard output.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">-d\ndestination_dir</p>\n\n<p style=\"margin-left:17%;\">Put the resulting <b>.ph</b>\nfiles beneath <b>destination_dir</b>, instead of beneath the\ndefault Perl library location\n($Config{'installsitearch'}).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>-r</p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>Run recursively; if any of <b>headerfiles</b> are\ndirectories, then run <i>h2ph</i> on all files in those\ndirectories (and their subdirectories, etc.). <b>-r</b> and\n<b>-a</b> are mutually exclusive.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>-a</p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>Run automagically; convert <b>headerfiles</b>, as well\nas any <b>.h</b> files which they include. This option will\nsearch for <b>.h</b> files in all directories which your C\ncompiler ordinarily uses. <b>-a</b> and <b>-r</b> are\nmutually exclusive.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>-l</p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>Symbolic links will be replicated in the destination\ndirectory. If <b>-l</b> is not specified, then links are\nskipped over.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>-h</p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>Put &rsquo;hints&rsquo; in the .ph files which will help\nin locating problems with <i>h2ph</i>. In those cases when\nyou <b>require</b> a <b>.ph</b> file containing syntax\nerrors, instead of the cryptic</p></td></tr>\n</table>\n\n<p style=\"margin-left:17%; margin-top: 1em\">[ some error\ncondition ] at (eval mmm) line nnn</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">you will see\nthe slightly more helpful</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">[ some error\ncondition ] at filename.ph line nnn</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">However, the\n<b>.ph</b> files almost double in size when built using\n<b>-h</b>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\">-e</p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">If an error is encountered\nduring conversion, output file will be removed and a warning\nemitted instead of terminating the conversion\nimmediately.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>-D</p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>Include the code from the <b>.h</b> file as a comment in\nthe <b>.ph</b> file. This is primarily used for debugging\n<i>h2ph</i>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>-Q</p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>&rsquo;Quiet&rsquo; mode; don&rsquo;t print out the\nnames of the files being converted.</p></td></tr>\n</table>\n\n<h2>ENVIRONMENT\n<a name=\"ENVIRONMENT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">No environment\nvariables are used.</p>\n\n<h2>FILES\n<a name=\"FILES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">/usr/include/*.h\n<br>\n/usr/include/sys/*.h</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">etc.</p>\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Larry Wall</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/perl\">perl(1)</a></p>\n\n<h2>DIAGNOSTICS\n<a name=\"DIAGNOSTICS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The usual\nwarnings if it can&rsquo;t read or write the files\ninvolved.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Doesn&rsquo;t\nconstruct the %sizeof array for you.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It\ndoesn&rsquo;t handle all C constructs, but it does attempt\nto isolate definitions inside evals so that you can get at\nthe definitions that it can translate.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It&rsquo;s only\nintended as a rough tool. You may need to dicker with the\nfiles produced.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">You have to run\nthis program by hand; it&rsquo;s not run as part of the Perl\ninstallation.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Doesn&rsquo;t\nhandle complicated expressions built piecemeal, a la:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">enum { <br>\nFIRST_VALUE, <br>\nSECOND_VALUE, <br>\n#ifdef ABC <br>\nTHIRD_VALUE <br>\n#endif <br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Doesn&rsquo;t\nnecessarily locate all of your C compiler&rsquo;s\ninternally-defined symbols.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#ENVIRONMENT\">ENVIRONMENT</a>","<a href=\"#FILES\">FILES</a>","<a href=\"#AUTHOR\">AUTHOR</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#DIAGNOSTICS\">DIAGNOSTICS</a>","<a href=\"#BUGS\">BUGS</a>"]}