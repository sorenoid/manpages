{"name":"gpg-wks-server","description":"<b>gpg-wks-server</b>\n- Server providing the Web Key Service","body":"\n\n<h1 align=\"center\">GPG-WKS-SERVER</h1>\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>gpg-wks-server</b>\n- Server providing the Web Key Service</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>gpg-wks-server</b>\n[<i>options</i>] <b>--receive <br>\ngpg-wks-server</b> [<i>options</i>] <b>--cron <br>\ngpg-wks-server</b> [<i>options</i>] <b>--list-domains <br>\ngpg-wks-server</b> [<i>options</i>] <b>--check-key</b>\n<i>user-id</i> <b><br>\ngpg-wks-server</b> [<i>options</i>] <b>--install-key</b>\n<i>file user-id</i> <b><br>\ngpg-wks-server</b> [<i>options</i>] <b>--remove-key</b>\n<i>user-id</i> <b><br>\ngpg-wks-server</b> [<i>options</i>] <b>--revoke-key</b>\n<i>user-id</i></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>gpg-wks-server</b> is a server site implementation of the\nWeb Key Service. It receives requests for publication, sends\nconfirmation requests, receives confirmations, and published\nthe key. It also has features to ease the setup and\nmaintenance of a Web Key Directory.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When used with\nthe command <b>--receive</b> a single Web Key Service mail\nis processed. Commonly this command is used with the option\n<b>--send</b> to directly send the crerated mails back. See\nbelow for an installation example.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The command\n<b>--cron</b> is used for regualr cleanup tasks. For example\nnon-confirmed requested should be removed after their expire\ntime. It is best to run this command once a day from a\ncronjob.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The command\n<b>--list-domains</b> prints all configured domains. Further\nit creates missing directories for the configuration and\nprints warnings pertaining to problems in the\nconfiguration.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The command\n<b>--check-key</b> (or just <b>--check</b>) checks whether a\nkey with the given user-id is installed. The process returns\nsuccess in this case; to also print a diagnostic use the\noption <b>-v</b>. If the key is not installed a diagnostic\nis printed and the process returns failure; to suppress the\ndiagnostic, use option <b>-q</b>. More than one user-id can\nbe given; see also option <b>with-file</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The command\n<b>--install-key</b> manually installs a key into the WKD.\nThe arguments are a file with the keyblock and the user-id\nto install. If the first argument resembles a fingerprint\nthe key is taken from the current keyring; to force the use\nof a file, prefix the first argument with &quot;./&quot;. If\nno arguments are given the parameters are read from stdin;\nthe expected format are lines with the fingerprint and the\nmailbox separated by a space.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The command\n<b>--remove-key</b> uninstalls a key from the WKD. The\nprocess returns success in this case; to also print a\ndiagnostic, use option <b>-v</b>. If the key is not\ninstalled a diagnostic is printed and the process returns\nfailure; to suppress the diagnostic, use option\n<b>-q</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The command\n<b>--revoke-key</b> is not yet functional.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>gpg-wks-server</b>\nunderstands these options:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>-C</b> <i>dir</i></p></td>\n<td width=\"80%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--directory</b>\n<i>dir</i></p>\n\n<p style=\"margin-left:22%;\">Use <i>dir</i> as top level\ndirectory for domains. The default is\n&rsquo;<i>/var/lib/gnupg/wks</i>&rsquo;.</p>\n\n<p style=\"margin-left:11%;\"><b>--from</b>\n<i>mailaddr</i></p>\n\n<p style=\"margin-left:22%;\">Use <i>mailaddr</i> as the\ndefault sender address.</p>\n\n<p style=\"margin-left:11%;\"><b>--header</b>\n<i>name</i>=<i>value</i></p>\n\n<p style=\"margin-left:22%;\">Add the mail header\n&quot;<i>name</i>: <i>value</i>&quot; to all outgoing\nmails.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>--send</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Directly send created mails using the <b>sendmail</b>\ncommand. Requires installation of that command.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-o</b> <i>file</i> <b><br>\n--output</b> <i>file</i></p>\n\n<p style=\"margin-left:22%;\">Write the created mail also to\n<i>file</i>. Note that the value <b>-</b> for <i>file</i>\nwould write it to stdout.</p>\n\n<p style=\"margin-left:11%;\"><b>--with-dir</b></p>\n\n<p style=\"margin-left:22%;\">When used with the command\n<b>--list-domains</b> print for each installed domain the\ndomain name and its directory name.</p>\n\n<p style=\"margin-left:11%;\"><b>--with-file</b></p>\n\n<p style=\"margin-left:22%;\">When used with the command\n<b>--check-key</b> print for each user-id, the address,\n&rsquo;i&rsquo; for installed key or &rsquo;n&rsquo; for not\ninstalled key, and the filename.</p>\n\n<p style=\"margin-left:11%;\"><b>--verbose</b></p>\n\n<p style=\"margin-left:22%;\">Enable extra informational\noutput.</p>\n\n<p style=\"margin-left:11%;\"><b>--quiet</b></p>\n\n<p style=\"margin-left:22%;\">Disable almost all\ninformational output.</p>\n\n<p style=\"margin-left:11%;\"><b>--version</b></p>\n\n<p style=\"margin-left:22%;\">Print version of the program\nand exit.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>--help</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"53%\">\n\n\n<p>Display a brief help page and exit.</p></td>\n<td width=\"25%\">\n</td></tr>\n</table>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The Web Key\nService requires a working directory to store keys pending\nfor publication. As root create a working directory:</p>\n\n<p style=\"margin-left:14%; margin-top: 1em\"># mkdir\n/var/lib/gnupg/wks <br>\n# chown webkey:webkey /var/lib/gnupg/wks <br>\n# chmod 2750 /var/lib/gnupg/wks</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Then under your\nwebkey account create directories for all your domains. Here\nwe do it for &quot;example.net&quot;:</p>\n\n<p style=\"margin-left:14%; margin-top: 1em\">$ mkdir\n/var/lib/gnupg/wks/example.net</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Finally run</p>\n\n<p style=\"margin-left:14%; margin-top: 1em\">$\ngpg-wks-server --list-domains</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">to create the\nrequired sub-directories with the permissions set correctly.\nFor each domain a submission address needs to be configured.\nAll service mails are directed to that address. It can be\nthe same address for all configured domains, for\nexample:</p>\n\n<p style=\"margin-left:14%; margin-top: 1em\">$ cd\n/var/lib/gnupg/wks/example.net <br>\n$ echo key-submission@example.net &gt;submission-address</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The protocol\nrequires that the key to be published is send with an\nencrypted mail to the service. Thus you need to create a key\nfor the submission address:</p>\n\n<p style=\"margin-left:14%; margin-top: 1em\">$ gpg --batch\n--passphrase &rsquo;&rsquo; --quick-gen-key\nkey-submission@example.net <br>\n$ gpg -K key-submission@example.net</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The output of\nthe last command looks similar to this:</p>\n\n<p style=\"margin-left:14%; margin-top: 1em\">sec rsa3072\n2016-08-30 [SC] <br>\nC0FCF8642D830C53246211400346653590B3795B <br>\nuid [ultimate] key-submission@example.net <br>\nssb rsa3072 2016-08-30 [E]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Take the\nfingerprint from that output and manually publish the\nkey:</p>\n\n<p style=\"margin-left:14%; margin-top: 1em\">$\ngpg-wks-server --install-key\nC0FCF8642D830C53246211400346653590B3795B \\ <br>\n&gt; key-submission@example.net</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Finally that\nsubmission address needs to be redirected to a script\nrunning <b>gpg-wks-server</b>. The <b>procmail</b> command\ncan be used for this: Redirect the submission address to the\nuser &quot;webkey&quot; and put this into webkey&rsquo;s\n&rsquo;<i>.procmailrc</i>&rsquo;:</p>\n\n<p style=\"margin-left:14%; margin-top: 1em\">:0 <br>\n* !^From: webkey@example.net <br>\n* !^X-WKS-Loop: webkey.example.net <br>\n|gpg-wks-server -v --receive \\ <br>\n--header X-WKS-Loop=webkey.example.net \\ <br>\n--from webkey@example.net --send</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/gpg-wks-client\">gpg-wks-client(1)</a></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"]}