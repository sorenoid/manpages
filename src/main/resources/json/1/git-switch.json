{"name":"git-switch","description":"git-switch -\nSwitch branches","body":"\n\n<h1 align=\"center\">GIT-SWITCH</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">git-switch -\nSwitch branches</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>git\nswitch</i> [&lt;options&gt;] [--no-guess] &lt;branch&gt;\n<i><br>\ngit switch</i> [&lt;options&gt;] --detach\n[&lt;start-point&gt;] <i><br>\ngit switch</i> [&lt;options&gt;] (-c|-C) &lt;new-branch&gt;\n[&lt;start-point&gt;] <i><br>\ngit switch</i> [&lt;options&gt;] --orphan\n&lt;new-branch&gt;</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Switch to a\nspecified branch. The working tree and the index are updated\nto match the branch. All new commits will be added to the\ntip of this branch.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Optionally a\nnew branch could be created with either <b>-c</b>,\n<b>-C</b>, automatically from a remote branch of same name\n(see <b>--guess</b>), or detach the working tree from any\nbranch with <b>--detach</b>, along with switching.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Switching\nbranches does not require a clean index and working tree\n(i.e. no differences compared to <b>HEAD</b>). The operation\nis aborted however if the operation leads to loss of local\nchanges, unless told otherwise with <b>--discard-changes</b>\nor <b>--merge</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">THIS COMMAND IS\nEXPERIMENTAL. THE BEHAVIOR MAY CHANGE.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;branch&gt;</p>\n\n<p style=\"margin-left:17%;\">Branch to switch to.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;new-branch&gt;</p>\n\n<p style=\"margin-left:17%;\">Name for the new branch.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;start-point&gt;</p>\n\n<p style=\"margin-left:17%;\">The starting point for the new\nbranch. Specifying a <b>&lt;start-point&gt;</b> allows you\nto create a branch based on some other point in history than\nwhere HEAD currently points. (Or, in the case of\n<b>--detach</b>, allows you to inspect and detach from some\nother point.)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">You can use the\n<b>@{-N}</b> syntax to refer to the N-th last branch/commit\nswitched to using &quot;git switch&quot; or &quot;git\ncheckout&quot; operation. You may also specify <b>-</b>\nwhich is synonymous to <b>@{-1}</b>. This is often used to\nswitch quickly between two branches, or to undo a branch\nswitch by mistake.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">As a special\ncase, you may use <b>A...B</b> as a shortcut for the merge\nbase of <b>A</b> and <b>B</b> if there is exactly one merge\nbase. You can leave out at most one of <b>A</b> and\n<b>B</b>, in which case it defaults to <b>HEAD</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-c\n&lt;new-branch&gt;, --create &lt;new-branch&gt;</p>\n\n<p style=\"margin-left:17%;\">Create a new branch named\n<b>&lt;new-branch&gt;</b> starting at\n<b>&lt;start-point&gt;</b> before switching to the branch.\nThis is a convenient shortcut for:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ git branch\n&lt;new-branch&gt; <br>\n$ git switch &lt;new-branch&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-C\n&lt;new-branch&gt;, --force-create &lt;new-branch&gt;</p>\n\n<p style=\"margin-left:17%;\">Similar to <b>--create</b>\nexcept that if <b>&lt;new-branch&gt;</b> already exists, it\nwill be reset to <b>&lt;start-point&gt;</b>. This is a\nconvenient shortcut for:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ git branch -f\n&lt;new-branch&gt; <br>\n$ git switch &lt;new-branch&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-d,\n--detach</p>\n\n<p style=\"margin-left:17%;\">Switch to a commit for\ninspection and discardable experiments. See the\n&quot;DETACHED HEAD&quot; section in <a href=\"https://man.page/1/git-checkout\">git-checkout(1)</a>\nfor details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--guess,\n--no-guess</p>\n\n<p style=\"margin-left:17%;\">If <b>&lt;branch&gt;</b> is not\nfound but there does exist a tracking branch in exactly one\nremote (call it <b>&lt;remote&gt;</b>) with a matching name,\ntreat as equivalent to</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ git switch -c\n&lt;branch&gt; --track &lt;remote&gt;/&lt;branch&gt;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If the branch\nexists in multiple remotes and one of them is named by the\n<b>checkout.defaultRemote</b> configuration variable,\nwe&rsquo;ll use that one for the purposes of disambiguation,\neven if the <b>&lt;branch&gt;</b> isn&rsquo;t unique across\nall remotes. Set it to e.g.\n<b>checkout.defaultRemote=origin</b> to always checkout\nremote branches from there if <b>&lt;branch&gt;</b> is\nambiguous but exists on the <i>origin</i> remote. See also\n<b>checkout.defaultRemote</b> in <a href=\"https://man.page/1/git-config\">git-config(1)</a>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>--guess</b>\nis the default behavior. Use <b>--no-guess</b> to disable\nit.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The default\nbehavior can be set via the <b>checkout.guess</b>\nconfiguration variable.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-f, --force</p>\n\n<p style=\"margin-left:17%;\">An alias for\n<b>--discard-changes</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--discard-changes</p>\n\n<p style=\"margin-left:17%;\">Proceed even if the index or\nthe working tree differs from <b>HEAD</b>. Both the index\nand working tree are restored to match the switching target.\nIf <b>--recurse-submodules</b> is specified, submodule\ncontent is also restored to match the switching target. This\nis used to throw away local changes.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-m, --merge</p>\n\n<p style=\"margin-left:17%;\">If you have local modifications\nto one or more files that are different between the current\nbranch and the branch to which you are switching, the\ncommand refuses to switch branches in order to preserve your\nmodifications in context. However, with this option, a\nthree-way merge between the current branch, your working\ntree contents, and the new branch is done, and you will be\non the new branch.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When a merge\nconflict happens, the index entries for conflicting paths\nare left unmerged, and you need to resolve the conflicts and\nmark the resolved paths with <b>git add</b> (or <b>git\nrm</b> if the merge should result in deletion of the\npath).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--conflict=&lt;style&gt;</p>\n\n<p style=\"margin-left:17%;\">The same as <b>--merge</b>\noption above, but changes the way the conflicting hunks are\npresented, overriding the <b>merge.conflictStyle</b>\nconfiguration variable. Possible values are\n&quot;merge&quot; (default) and &quot;diff3&quot; (in\naddition to what is shown by &quot;merge&quot; style, shows\nthe original contents).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-q, --quiet</p>\n\n<p style=\"margin-left:17%;\">Quiet, suppress feedback\nmessages.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--progress,\n--no-progress</p>\n\n<p style=\"margin-left:17%;\">Progress status is reported on\nthe standard error stream by default when it is attached to\na terminal, unless <b>--quiet</b> is specified. This flag\nenables progress reporting even if not attached to a\nterminal, regardless of <b>--quiet</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-t, --track</p>\n\n<p style=\"margin-left:17%;\">When creating a new branch, set\nup &quot;upstream&quot; configuration. <b>-c</b> is implied.\nSee <b>--track</b> in <a href=\"https://man.page/1/git-branch\">git-branch(1)</a> for details.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If no <b>-c</b>\noption is given, the name of the new branch will be derived\nfrom the remote-tracking branch, by looking at the local\npart of the refspec configured for the corresponding remote,\nand then stripping the initial part up to the &quot;*&quot;.\nThis would tell us to use <b>hack</b> as the local branch\nwhen branching off of <b>origin/hack</b> (or\n<b>remotes/origin/hack</b>, or even\n<b>refs/remotes/origin/hack</b>). If the given name has no\nslash, or the above guessing results in an empty name, the\nguessing is aborted. You can explicitly give a name with\n<b>-c</b> in such a case.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--no-track</p>\n\n<p style=\"margin-left:17%;\">Do not set up\n&quot;upstream&quot; configuration, even if the\n<b>branch.autoSetupMerge</b> configuration variable is\ntrue.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--orphan\n&lt;new-branch&gt;</p>\n\n<p style=\"margin-left:17%;\">Create a new <i>orphan</i>\nbranch, named <b>&lt;new-branch&gt;</b>. All tracked files\nare removed.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--ignore-other-worktrees</p>\n\n<p style=\"margin-left:17%;\"><b>git switch</b> refuses when\nthe wanted ref is already checked out by another worktree.\nThis option makes it check the ref out anyway. In other\nwords, the ref can be held by more than one worktree.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--recurse-submodules,\n--no-recurse-submodules</p>\n\n<p style=\"margin-left:17%;\">Using\n<b>--recurse-submodules</b> will update the content of all\nactive submodules according to the commit recorded in the\nsuperproject. If nothing (or <b>--no-recurse-submodules</b>)\nis used, submodules working trees will not be updated. Just\nlike <a href=\"https://man.page/1/git-submodule\">git-submodule(1)</a>, this will detach <b>HEAD</b>\nof the submodules.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\ncommand switches to the &quot;master&quot; branch:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git switch\nmaster</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">After working\nin the wrong branch, switching to the correct branch would\nbe done using:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git switch\nmytopic</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">However, your\n&quot;wrong&quot; branch and correct &quot;mytopic&quot;\nbranch may differ in files that you have modified locally,\nin which case the above switch would fail like this:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git switch\nmytopic <br>\nerror: You have local changes to 'frotz'; not switching\nbranches.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">You can give\nthe <b>-m</b> flag to the command, which would try a\nthree-way merge:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git switch -m\nmytopic <br>\nAuto-merging frotz</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">After this\nthree-way merge, the local modifications are <i>not</i>\nregistered in your index file, so <b>git diff</b> would show\nyou what changes you made since the tip of the new\nbranch.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To switch back\nto the previous branch before we switched to mytopic (i.e.\n&quot;master&quot; branch):</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git switch\n-</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">You can grow a\nnew branch from any commit. For example, switch to\n&quot;HEAD~3&quot; and create branch &quot;fixup&quot;:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git switch -c\nfixup HEAD~3 <br>\nSwitched to a new branch 'fixup'</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If you want to\nstart a new branch from a remote branch of the same\nname:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git switch\nnew-topic <br>\nBranch 'new-topic' set up to track remote branch 'new-topic'\nfrom 'origin' <br>\nSwitched to a new branch 'new-topic'</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To check out\ncommit <b>HEAD~3</b> for temporary inspection or experiment\nwithout creating a new branch:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git switch\n--detach HEAD~3 <br>\nHEAD is now at 9fc9555312 Merge branch\n'cc/shared-index-permbits'</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If it turns out\nwhatever you have done is worth keeping, you can always\ncreate a new name for it (without switching away):</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git switch -c\ngood-surprises</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/git-checkout\">git-checkout(1)</a>,\n<a href=\"https://man.page/1/git-branch\">git-branch(1)</a></p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Part of the\n<a href=\"https://man.page/1/git\">git(1)</a> suite</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#GIT\">GIT</a>"]}