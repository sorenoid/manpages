{"name":"systemd-run","body":"\n\n<h1 align=\"center\">SYSTEMD-RUN</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">systemd-run -\nRun programs in transient scope units, service units, or\npath-, socket-, or timer-triggered service units</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"89%\">\n\n\n<p style=\"margin-top: 1em\"><b>systemd-run</b> [OPTIONS...]\n<i>COMMAND&nbsp;</i>[ARGS...]</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"89%\">\n\n\n<p style=\"margin-top: 1em\"><b>systemd-run</b> [OPTIONS...]\n[PATH&nbsp;OPTIONS...] {<i>COMMAND</i>} [ARGS...]</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"89%\">\n\n\n<p style=\"margin-top: 1em\"><b>systemd-run</b> [OPTIONS...]\n[SOCKET&nbsp;OPTIONS...] {<i>COMMAND</i>} [ARGS...]</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"89%\">\n\n\n<p style=\"margin-top: 1em\"><b>systemd-run</b> [OPTIONS...]\n[TIMER&nbsp;OPTIONS...] {<i>COMMAND</i>} [ARGS...]</p></td></tr>\n</table>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>systemd-run</b>\nmay be used to create and start a transient .service or\n.scope unit and run the specified <i>COMMAND</i> in it. It\nmay also be used to create and start a transient .path,\n.socket, or .timer unit, that activates a .service unit when\nelapsing.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If a command is\nrun as transient service unit, it will be started and\nmanaged by the service manager like any other service, and\nthus shows up in the output of <b>systemctl list-units</b>\nlike any other unit. It will run in a clean and detached\nexecution environment, with the service manager as its\nparent process. In this mode, <b>systemd-run</b> will start\nthe service asynchronously in the background and return\nafter the command has begun execution (unless\n<b>--no-block</b> or <b>--wait</b> are specified, see\nbelow).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If a command is\nrun as transient scope unit, it will be executed by\n<b>systemd-run</b> itself as parent process and will thus\ninherit the execution environment of the caller. However,\nthe processes of the command are managed by the service\nmanager similar to normal services, and will show up in the\noutput of <b>systemctl list-units</b>. Execution in this\ncase is synchronous, and will return only when the command\nfinishes. This mode is enabled via the <b>--scope</b> switch\n(see below).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If a command is\nrun with path, socket, or timer options such as\n<b>--on-calendar=</b> (see below), a transient path, socket,\nor timer unit is created alongside the service unit for the\nspecified command. Only the transient path, socket, or timer\nunit is started immediately, the transient service unit will\nbe triggered by the path, socket, or timer unit. If the\n<b>--unit=</b> option is specified, the <i>COMMAND</i> may\nbe omitted. In this case, <b>systemd-run</b> creates only a\n.path, .socket, or .timer unit that triggers the specified\nunit.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">By default,\nservices created with <b>systemd-run</b> default to the\n<b>simple</b> type, see the description of <i>Type=</i> in\n<b>systemd.service</b>(5) for details. Note that when this\ntype is used the service manager (and thus the\n<b>systemd-run</b> command) considers service start-up\nsuccessful as soon as the <b>fork()</b> for the main service\nprocess succeeded, i.e. before the <b>execve()</b> is\ninvoked, and thus even if the specified command cannot be\nstarted. Consider using the <b>exec</b> service type (i.e.\n<b>--property=Type=exec</b>) to ensure that\n<b>systemd-run</b> returns successfully only if the\nspecified command line has been successfully started.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are understood:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--no-ask-password</b></p>\n\n<p style=\"margin-left:17%;\">Do not query the user for\nauthentication for privileged operations.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--scope</b></p>\n\n<p style=\"margin-left:17%;\">Create a transient .scope unit\ninstead of the default transient .service unit (see\nabove).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--unit=</b>,\n<b>-u</b></p>\n\n<p style=\"margin-left:17%;\">Use this unit name instead of\nan automatically generated one.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--property=</b>,\n<b>-p</b></p>\n\n<p style=\"margin-left:17%;\">Sets a property on the scope or\nservice unit that is created. This option takes an\nassignment in the same format as <a href=\"https://man.page/1/systemctl\">systemctl(1)</a>'s\n<b>set-property</b> command.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--description=</b></p>\n\n<p style=\"margin-left:17%;\">Provide a description for the\nservice, scope, path, socket, or timer unit. If not\nspecified, the command itself will be used as a description.\nSee <i>Description=</i> in <b>systemd.unit</b>(5).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--slice=</b></p>\n\n<p style=\"margin-left:17%;\">Make the new .service or .scope\nunit part of the specified slice, instead of system.slice\n(when running in <b>--system</b> mode) or the root slice\n(when running in <b>--user</b> mode).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--slice-inherit</b></p>\n\n<p style=\"margin-left:17%;\">Make the new .service or .scope\nunit part of the inherited slice. This option can be\ncombined with <b>--slice=</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">An inherited\nslice is located within <b>systemd-run</b> slice. Example:\nif <b>systemd-run</b> slice is foo.slice, and the\n<b>--slice=</b> argument is bar, the unit will be placed\nunder the foo-bar.slice.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-r</b>,\n<b>--remain-after-exit</b></p>\n\n<p style=\"margin-left:17%;\">After the service process has\nterminated, keep the service around until it is explicitly\nstopped. This is useful to collect runtime information about\nthe service after it finished running. Also see\n<i>RemainAfterExit=</i> in <b>systemd.service</b>(5).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--send-sighup</b></p>\n\n<p style=\"margin-left:17%;\">When terminating the scope or\nservice unit, send a SIGHUP immediately after SIGTERM. This\nis useful to indicate to shells and shell-like processes\nthat the connection has been severed. Also see\n<i>SendSIGHUP=</i> in <b>systemd.kill</b>(5).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--service-type=</b></p>\n\n<p style=\"margin-left:17%;\">Sets the service type. Also see\n<i>Type=</i> in <b>systemd.service</b>(5). This option has\nno effect in conjunction with <b>--scope</b>. Defaults to\n<b>simple</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--uid=</b>,\n<b>--gid=</b></p>\n\n<p style=\"margin-left:17%;\">Runs the service process under\nthe specified UNIX user and group. Also see <i>User=</i> and\n<i>Group=</i> in <b>systemd.exec</b>(5).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--nice=</b></p>\n\n<p style=\"margin-left:17%;\">Runs the service process with\nthe specified nice level. Also see <i>Nice=</i> in\n<b>systemd.exec</b>(5).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--working-directory=</b></p>\n\n<p style=\"margin-left:17%;\">Runs the service process with\nthe specified working directory. Also see\n<i>WorkingDirectory=</i> in <b>systemd.exec</b>(5).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--same-dir</b>,\n<b>-d</b></p>\n\n<p style=\"margin-left:17%;\">Similar to\n<b>--working-directory=</b> but uses the current working\ndirectory of the caller for the service to execute.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-E</b>\n<i>NAME</i><b>=</b><i>VALUE</i>,\n<b>--setenv=</b><i>NAME</i><b>=</b><i>VALUE</i></p>\n\n<p style=\"margin-left:17%;\">Runs the service process with\nthe specified environment variable set. Also see\n<i>Environment=</i> in <b>systemd.exec</b>(5).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--pty</b>,\n<b>-t</b></p>\n\n<p style=\"margin-left:17%;\">When invoking the command, the\ntransient service connects its standard input, output and\nerror to the terminal <b>systemd-run</b> is invoked on, via\na pseudo TTY device. This allows running programs that\nexpect interactive user input/output as services, such as\ninteractive command shells.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that\n<a href=\"https://man.page/1/machinectl\">machinectl(1)</a>'s <b>shell</b> command is usually a\nbetter alternative for requesting a new, interactive login\nsession on the local host or a local container.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">See below for\ndetails on how this switch combines with <b>--pipe</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--pipe</b>,\n<b>-P</b></p>\n\n<p style=\"margin-left:17%;\">If specified, standard input,\noutput, and error of the transient service are inherited\nfrom the <b>systemd-run</b> command itself. This allows\n<b>systemd-run</b> to be used within shell pipelines. Note\nthat this mode is not suitable for interactive command\nshells and similar, as the service process will not become a\nTTY controller when invoked on a terminal. Use <b>--pty</b>\ninstead in that case.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When both\n<b>--pipe</b> and <b>--pty</b> are used in combination the\nmore appropriate option is automatically determined and\nused. Specifically, when invoked with standard input, output\nand error connected to a TTY <b>--pty</b> is used, and\notherwise <b>--pipe</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When this\noption is used the original file descriptors\n<b>systemd-run</b> receives are passed to the service\nprocesses as-is. If the service runs with different\nprivileges than <b>systemd-run</b>, this means the service\nmight not be able to re-open the passed file descriptors,\ndue to normal file descriptor access restrictions. If the\ninvoked process is a shell script that uses the <b>echo\n&quot;hello&quot; &gt; /dev/stderr</b> construct for writing\nmessages to stderr, this might cause problems, as this only\nworks if stderr can be re-opened. To mitigate this use the\nconstruct <b>echo &quot;hello&quot; &gt;&amp;2</b> instead,\nwhich is mostly equivalent and avoids this pitfall.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--shell</b>,\n<b>-S</b></p>\n\n<p style=\"margin-left:17%;\">A shortcut for &quot;--pty\n--same-dir --wait --collect --service-type=exec\n$SHELL&quot;, i.e. requests an interactive shell in the\ncurrent working directory, running in service context,\naccessible with a single switch.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--quiet</b>,\n<b>-q</b></p>\n\n<p style=\"margin-left:17%;\">Suppresses additional\ninformational output while running. This is particularly\nuseful in combination with <b>--pty</b> when it will\nsuppress the initial message explaining how to terminate the\nTTY connection.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--on-active=</b>,\n<b>--on-boot=</b>, <b>--on-startup=</b>,\n<b>--on-unit-active=</b>, <b>--on-unit-inactive=</b></p>\n\n<p style=\"margin-left:17%;\">Defines a monotonic timer\nrelative to different starting points for starting the\nspecified command. See <i>OnActiveSec=</i>,\n<i>OnBootSec=</i>, <i>OnStartupSec=</i>,\n<i>OnUnitActiveSec=</i> and <i>OnUnitInactiveSec=</i> in\n<b>systemd.timer</b>(5) for details. These options are\nshortcuts for <b>--timer-property=</b> with the relevant\nproperties. These options may not be combined with\n<b>--scope</b> or <b>--pty</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--on-calendar=</b></p>\n\n<p style=\"margin-left:17%;\">Defines a calendar timer for\nstarting the specified command. See <i>OnCalendar=</i> in\n<b>systemd.timer</b>(5). This option is a shortcut for\n<b>--timer-property=OnCalendar=</b>. This option may not be\ncombined with <b>--scope</b> or <b>--pty</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--on-clock-change</b>,\n<b>--on-timezone-change</b></p>\n\n<p style=\"margin-left:17%;\">Defines a trigger based on\nsystem clock jumps or timezone changes for starting the\nspecified command. See <i>OnClockChange=</i> and\n<i>OnTimezoneChange=</i> in <b>systemd.timer</b>(5). These\noptions are shortcuts for\n<b>--timer-property=OnClockChange=yes</b> and\n<b>--timer-property=OnTimezoneChange=yes</b>. These options\nmay not be combined with <b>--scope</b> or <b>--pty</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--path-property=</b>,\n<b>--socket-property=</b>, <b>--timer-property=</b></p>\n\n<p style=\"margin-left:17%;\">Sets a property on the path,\nsocket, or timer unit that is created. This option is\nsimilar to <b>--property=</b> but applies to the transient\npath, socket, or timer unit rather than the transient\nservice unit created. This option takes an assignment in the\nsame format as <a href=\"https://man.page/1/systemctl\">systemctl(1)</a>'s <b>set-property</b>\ncommand. These options may not be combined with\n<b>--scope</b> or <b>--pty</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--no-block</b></p>\n\n<p style=\"margin-left:17%;\">Do not synchronously wait for\nthe unit start operation to finish. If this option is not\nspecified, the start request for the transient unit will be\nverified, enqueued and <b>systemd-run</b> will wait until\nthe unit's start-up is completed. By passing this argument,\nit is only verified and enqueued. This option may not be\ncombined with <b>--wait</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--wait</b></p>\n\n<p style=\"margin-left:17%;\">Synchronously wait for the\ntransient service to terminate. If this option is specified,\nthe start request for the transient unit is verified,\nenqueued, and waited for. Subsequently the invoked unit is\nmonitored, and it is waited until it is deactivated again\n(most likely because the specified command completed). On\nexit, terse information about the unit's runtime is shown,\nincluding total runtime (as well as CPU usage, if\n<b>--property=CPUAccounting=1</b> was set) and the exit code\nand status of the main process. This output may be\nsuppressed with <b>--quiet</b>. This option may not be\ncombined with <b>--no-block</b>, <b>--scope</b> or the\nvarious path, socket, or timer options.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-G</b>,\n<b>--collect</b></p>\n\n<p style=\"margin-left:17%;\">Unload the transient unit after\nit completed, even if it failed. Normally, without this\noption, all units that ran and failed are kept in memory\nuntil the user explicitly resets their failure state with\n<b>systemctl reset-failed</b> or an equivalent command. On\nthe other hand, units that ran successfully are unloaded\nimmediately. If this option is turned on the &quot;garbage\ncollection&quot; of units is more aggressive, and unloads\nunits regardless if they exited successfully or failed. This\noption is a shortcut for\n<b>--property=CollectMode=inactive-or-failed</b>, see the\nexplanation for <i>CollectMode=</i> in\n<b>systemd.unit</b>(5) for further information.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--user</b></p>\n\n<p style=\"margin-left:17%;\">Talk to the service manager of\nthe calling user, rather than the service manager of the\nsystem.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--system</b></p>\n\n<p style=\"margin-left:17%;\">Talk to the service manager of\nthe system. This is the implied default.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-H</b>,\n<b>--host=</b></p>\n\n<p style=\"margin-left:17%;\">Execute the operation remotely.\nSpecify a hostname, or a username and hostname separated by\n&quot;@&quot;, to connect to. The hostname may optionally be\nsuffixed by a port ssh is listening on, separated by\n&quot;:&quot;, and then a container name, separated by\n&quot;/&quot;, which connects directly to a specific\ncontainer on the specified host. This will use SSH to talk\nto the remote machine manager instance. Container names may\nbe enumerated with <b>machinectl -H</b> <i>HOST</i>. Put\nIPv6 addresses in brackets.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-M</b>,\n<b>--machine=</b></p>\n\n<p style=\"margin-left:17%;\">Execute operation on a local\ncontainer. Specify a container name to connect to,\noptionally prefixed by a user name to connect as and a\nseparating &quot;@&quot; character. If the special string\n&quot;.host&quot; is used in place of the container name, a\nconnection to the local system is made (which is useful to\nconnect to a specific user's user bus: &quot;--user\n--machine=lennart@.host&quot;). If the &quot;@&quot; syntax\nis not used, the connection is made as root user. If the\n&quot;@&quot; syntax is used either the left hand side or\nthe right hand side may be omitted (but not both) in which\ncase the local user name and &quot;.host&quot; are\nimplied.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-h</b>,\n<b>--help</b></p>\n\n<p style=\"margin-left:17%;\">Print a short help text and\nexit.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--version</b></p>\n\n<p style=\"margin-left:17%;\">Print a short version string\nand exit.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All command\nline arguments after the first non-option argument become\npart of the command line of the launched process. If a\ncommand is run as service unit, the first argument needs to\nbe an absolute program path.</p>\n\n<h2>EXIT STATUS\n<a name=\"EXIT STATUS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success, 0\nis returned. If <b>systemd-run</b> failed to start the\nservice, a non-zero return value will be returned. If\n<b>systemd-run</b> waits for the service to terminate, the\nreturn value will be propagated from the service. 0 will be\nreturned on success, including all the cases where systemd\nconsiders a service to have exited cleanly, see the\ndiscussion of <i>SuccessExitStatus=</i> in\n<b>systemd.service</b>(5).</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Example&nbsp;1.&nbsp;Logging\nenvironment variables provided by systemd to\nservices</b></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"># systemd-run\nenv <br>\nRunning as unit: run-19945.service <br>\n# journalctl -u run-19945.service <br>\nSep 08 07:37:21 bupkis systemd[1]: Starting /usr/bin/env...\n<br>\nSep 08 07:37:21 bupkis systemd[1]: Started /usr/bin/env.\n<br>\nSep 08 07:37:21 bupkis env[19948]:\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin <br>\nSep 08 07:37:21 bupkis env[19948]: LANG=en_US.UTF-8 <br>\nSep 08 07:37:21 bupkis env[19948]:\nBOOT_IMAGE=/vmlinuz-3.11.0-0.rc5.git6.2.fc20.x86_64</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Example&nbsp;2.&nbsp;Limiting\nresources available to a command</b></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"># systemd-run\n-p BlockIOWeight=10 updatedb</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This command\ninvokes the <b>updatedb</b>(8) tool, but lowers the block\nI/O weight for it to 10. See\n<b>systemd.resource-control</b>(5) for more information on\nthe <i>BlockIOWeight=</i> property.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Example&nbsp;3.&nbsp;Running\ncommands at a specified time</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\ncommand will touch a file after 30 seconds.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"># date;\nsystemd-run --on-active=30\n--timer-property=AccuracySec=100ms /bin/touch /tmp/foo <br>\nMon Dec 8 20:44:24 KST 2014 <br>\nRunning as unit: run-71.timer <br>\nWill run service as unit: run-71.service <br>\n# journalctl -b -u run-71.timer <br>\n-- Journal begins at Fri 2014-12-05 19:09:21 KST, ends at\nMon 2014-12-08 20:44:54 KST. -- <br>\nDec 08 20:44:38 container systemd[1]: Starting /bin/touch\n/tmp/foo. <br>\nDec 08 20:44:38 container systemd[1]: Started /bin/touch\n/tmp/foo. <br>\n# journalctl -b -u run-71.service <br>\n-- Journal begins at Fri 2014-12-05 19:09:21 KST, ends at\nMon 2014-12-08 20:44:54 KST. -- <br>\nDec 08 20:44:48 container systemd[1]: Starting /bin/touch\n/tmp/foo... <br>\nDec 08 20:44:48 container systemd[1]: Started /bin/touch\n/tmp/foo.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Example&nbsp;4.&nbsp;Allowing\naccess to the tty</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\ncommand invokes /bin/bash as a service passing its standard\ninput, output and error to the calling TTY.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"># systemd-run\n-t --send-sighup /bin/bash</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Example&nbsp;5.&nbsp;Start\nscreen as a user service</b></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ systemd-run\n--scope --user screen <br>\nRunning scope as unit\nrun-r14b0047ab6df45bfb45e7786cc839e76.scope.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ screen -ls\n<br>\nThere is a screen on: <br>\n492..laptop (Detached) <br>\n1 Socket in /var/run/screen/S-fatima.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This starts the\n<b>screen</b> process as a child of the <b>systemd\n--user</b> process that was started by user@.service, in a\nscope unit. A <b>systemd.scope</b>(5) unit is used instead\nof a <b>systemd.service</b>(5) unit, because <b>screen</b>\nwill exit when detaching from the terminal, and a service\nunit would be terminated. Running <b>screen</b> as a user\nunit has the advantage that it is not part of the session\nscope. If <i>KillUserProcesses=yes</i> is configured in\n<b>logind.conf</b>(5), the default, the session scope will\nbe terminated when the user logs out of that session.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nuser@.service is started automatically when the user first\nlogs in, and stays around as long as at least one login\nsession is open. After the user logs out of the last\nsession, user@.service and all services underneath it are\nterminated. This behavior is the default, when\n&quot;lingering&quot; is not enabled for that user. Enabling\nlingering means that user@.service is started automatically\nduring boot, even if the user is not logged in, and that the\nservice is not terminated when the user logs out.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Enabling\nlingering allows the user to run processes without being\nlogged in, for example to allow <b>screen</b> to persist\nafter the user logs out, even if the session scope is\nterminated. In the default configuration, users can enable\nlingering for themselves:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ loginctl\nenable-linger</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Example&nbsp;6.&nbsp;Return\nvalue</b></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ systemd-run\n--user --wait true <br>\n$ systemd-run --user --wait -p SuccessExitStatus=11 bash -c\n'exit 11' <br>\n$ systemd-run --user --wait -p SuccessExitStatus=SIGUSR1\nbash -c 'kill -SIGUSR1 $$$$'</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Those three\ninvocations will succeed, i.e. terminate with an exit code\nof 0.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/systemd\">systemd(1)</a>,\n<a href=\"https://man.page/1/systemctl\">systemctl(1)</a>, <b>systemd.unit</b>(5),\n<b>systemd.service</b>(5), <b>systemd.scope</b>(5),\n<b>systemd.slice</b>(5), <b>systemd.exec</b>(5),\n<b>systemd.resource-control</b>(5), <b>systemd.timer</b>(5),\n<a href=\"https://man.page/1/systemd-mount\">systemd-mount(1)</a>, <a href=\"https://man.page/1/machinectl\">machinectl(1)</a></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#EXIT STATUS\">EXIT STATUS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"]}