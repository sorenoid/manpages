{"name":"unzipsfx","description":"unzipsfx - self-extracting stub for prepending to ZIP archives","body":"\n\n<h1 align=\"center\">UNZIPSFX</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">unzipsfx -\nself-extracting stub for prepending to ZIP archives</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>&lt;name of\nunzipsfx+archive combo&gt;</b>\n[<b>-cfptuz</b>[<b>ajnoqsCLV$</b>]] [<i>file(s)&nbsp;</i>...\n[<b>-x&nbsp;</b><i>xfile(s)&nbsp;</i>...]]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>unzipsfx</i>\nis a modified version of <i>unzip</i>(1) designed to be\nprepended to existing ZIP archives in order to form\nself-extracting archives. Instead of taking its first\nnon-flag argument to be the zipfile(s) to be extracted,\n<i>unzipsfx</i> seeks itself under the name by which it was\ninvoked and tests or extracts the contents of the appended\narchive. Because the executable stub adds bulk to the\narchive (the whole purpose of which is to be as small as\npossible), a number of the less-vital capabilities in\nregular <i>unzip</i> have been removed. Among these are the\nusage (or help) screen, the listing and diagnostic functions\n(<b>-l</b> and <b>-v</b>), the ability to decompress older\ncompression formats (the &rsquo;&rsquo;reduce,&rsquo;&rsquo;\n&rsquo;&rsquo;shrink&rsquo;&rsquo; and\n&rsquo;&rsquo;implode&rsquo;&rsquo; methods). The ability to\nextract to a directory other than the current one can be\nselected as a compile-time option, which is now enabled by\ndefault since UnZipSFX version 5.5. Similarly, decryption is\nsupported as a compile-time option but should be avoided\nunless the attached archive contains encrypted files.\nStarting with release 5.5, another compile-time option adds\na simple &rsquo;&rsquo;run command after\nextraction&rsquo;&rsquo; feature. This feature is currently\nincompatible with the &rsquo;&rsquo;extract to different\ndirectory&rsquo;&rsquo; feature and remains disabled by\ndefault.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Note that\nself-extracting archives made with</b> <i>unzipsfx</i>\n<b>are no more (or less) portable across different operating\nsystems than is the</b> <i>unzip</i> <b>executable\nitself.</b> In general a self-extracting archive made on a\nparticular Unix system, for example, will only self-extract\nunder the same flavor of Unix. Regular <i>unzip</i> may\nstill be used to extract the embedded archive as with any\nnormal zipfile, although it will generate a harmless warning\nabout extra bytes at the beginning of the zipfile.\n<i>Despite this</i>, however, the self-extracting archive is\ntechnically <i>not</i> a valid ZIP archive, and PKUNZIP may\nbe unable to test or extract it. This limitation is due to\nthe simplistic manner in which the archive is created; the\ninternal directory structure is not updated to reflect the\nextra bytes prepended to the original zipfile.</p>\n\n<h2>ARGUMENTS\n<a name=\"ARGUMENTS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">[<i>file(s)</i>]</p>\n\n<p style=\"margin-left:22%;\">An optional list of archive\nmembers to be processed. Regular expressions (wildcards)\nsimilar to those in Unix <i>egrep</i>(1) may be used to\nmatch multiple members. These wildcards may contain:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>matches a sequence of 0 or more characters</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n\n\n<p>?</p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>matches exactly 1 character</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n\n\n<p>[...]</p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>matches any single character found inside the brackets;\nranges are specified by a beginning character, a hyphen, and\nan ending character. If an exclamation point or a caret\n(&rsquo;!&rsquo; or &rsquo;^&rsquo;) follows the left\nbracket, then the range of characters within the brackets is\ncomplemented (that is, anything <i>except</i> the characters\ninside the brackets is considered a match).</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">(Be sure to\nquote any character that might otherwise be interpreted or\nmodified by the operating system, particularly under Unix\nand VMS.)</p>\n\n\n<p style=\"margin-left:11%;\">[<b>-x&nbsp;</b><i>xfile(s)</i>]</p>\n\n<p style=\"margin-left:22%;\">An optional list of archive\nmembers to be excluded from processing. Since wildcard\ncharacters match directory separators (&rsquo;/&rsquo;),\nthis option may be used to exclude any files that are in\nsubdirectories. For example, &rsquo;&rsquo;<tt>foosfx *.[ch]\n-x */*</tt>&rsquo;&rsquo; would extract all C source files\nin the main directory, but none in any subdirectories.\nWithout the <b>-x</b> option, all C source files in all\ndirectories within the zipfile would be extracted.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>unzipsfx</i> is compiled with SFX_EXDIR defined, the\nfollowing option is also enabled: <br>\n[<b>-d&nbsp;</b><i>exdir</i>]</p>\n\n<p style=\"margin-left:22%;\">An optional directory to which\nto extract files. By default, all files and subdirectories\nare recreated in the current directory; the <b>-d</b> option\nallows extraction in an arbitrary directory (always assuming\none has permission to write to the directory). The option\nand directory may be concatenated without any white space\nbetween them, but note that this may cause normal shell\nbehavior to be suppressed. In particular,\n&rsquo;&rsquo;<tt>-d&nbsp;~</tt>&rsquo;&rsquo; (tilde) is\nexpanded by Unix C shells into the name of the user&rsquo;s\nhome directory, but &rsquo;&rsquo;<tt>-d~</tt>&rsquo;&rsquo;\nis treated as a literal subdirectory\n&rsquo;&rsquo;<b>~</b>&rsquo;&rsquo; of the current\ndirectory.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>unzipsfx</i>\nsupports the following <i>unzip</i>(1) options: <b>-c</b>\nand <b>-p</b> (extract to standard output/screen), <b>-f</b>\nand <b>-u</b> (freshen and update existing files upon\nextraction), <b>-t</b> (test archive) and <b>-z</b> (print\narchive comment). All normal listing options (<b>-l</b>,\n<b>-v</b> and <b>-Z</b>) have been removed, but the testing\noption (<b>-t</b>) may be used as a &rsquo;&rsquo;poor\nman&rsquo;s&rsquo;&rsquo; listing. Alternatively, those\ncreating self-extracting archives may wish to include a\nshort listing in the zipfile comment.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See\n<i>unzip</i>(1) for a more complete description of these\noptions.</p>\n\n<h2>MODIFIERS\n<a name=\"MODIFIERS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>unzipsfx</i>\ncurrently supports all <i>unzip</i>(1) modifiers: <b>-a</b>\n(convert text files), <b>-n</b> (never overwrite), <b>-o</b>\n(overwrite without prompting), <b>-q</b> (operate quietly),\n<b>-C</b> (match names case-insensitively), <b>-L</b>\n(convert uppercase-OS names to lowercase), <b>-j</b> (junk\npaths) and <b>-V</b> (retain version numbers); plus the\nfollowing operating-system specific options: <b>-X</b>\n(restore VMS owner/protection info), <b>-s</b> (convert\nspaces in filenames to underscores [DOS, OS/2, NT]) and\n<b>-$</b> (restore volume label [DOS, OS/2, NT, Amiga]).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">(Support for\nregular ASCII text-conversion may be removed in future\nversions, since it is simple enough for the archive&rsquo;s\ncreator to ensure that text files have the appropriate\nformat for the local OS. EBCDIC conversion will of course\ncontinue to be supported since the zipfile format implies\nASCII storage of text files.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See\n<i>unzip</i>(1) for a more complete description of these\nmodifiers.</p>\n\n<h2>ENVIRONMENT OPTIONS\n<a name=\"ENVIRONMENT OPTIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>unzipsfx</i>\nuses the same environment variables as <i>unzip</i>(1) does,\nalthough this is likely to be an issue only for the person\ncreating and testing the self-extracting archive. See\n<i>unzip</i>(1) for details.</p>\n\n<h2>DECRYPTION\n<a name=\"DECRYPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Decryption is\nsupported exactly as in <i>unzip</i>(1); that is,\ninteractively with a non-echoing prompt for the password(s).\nSee <i>unzip</i>(1) for details. Once again, note that if\nthe archive has no encrypted files there is no reason to use\na version of <i>unzipsfx</i> with decryption support; that\nonly adds to the size of the archive.</p>\n\n<h2>AUTORUN COMMAND\n<a name=\"AUTORUN COMMAND\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">When\n<i>unzipsfx</i> was compiled with CHEAP_SFX_AUTORUN defined,\na simple &rsquo;&rsquo;command autorun&rsquo;&rsquo; feature\nis supported. You may enter a command into the Zip archive\ncomment, using the following format:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$AUTORUN$&gt;[command\nline string]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When\n<i>unzipsfx</i> recognizes the\n&rsquo;&rsquo;$AUTORUN$&gt;&rsquo;&rsquo; token at the\nbeginning of the Zip archive comment, the remainder of the\nfirst line of the comment (until the first newline\ncharacter) is passed as a shell command to the operating\nsystem using the C rtl &rsquo;&rsquo;system&rsquo;&rsquo;\nfunction. Before executing the command, <i>unzipsfx</i>\ndisplays the command on the console and prompts the user for\nconfirmation. When the user has switched off prompting by\nspecifying the <b>-q</b> option, autorun commands are never\nexecuted.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In case the\narchive comment contains additional lines of text, the\nremainder of the archive comment following the first line is\ndisplayed normally, unless quiet operation was requested by\nsupplying a <b>-q</b> option.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">To create a\nself-extracting archive <i>letters</i> from a regular\nzipfile <i>letters.zip</i> and change the new\narchive&rsquo;s permissions to be world-executable under\nUnix:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">cat unzipsfx\nletters.zip &gt; letters <br>\nchmod 755 letters <br>\nzip -A letters</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To create the\nsame archive under MS-DOS, OS/2 or NT (note the use of the\n<b>/b</b> [binary] option to the <i>copy</i> command):</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">copy /b\nunzipsfx.exe+letters.zip letters.exe <br>\nzip -A letters.exe</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Under VMS:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">copy\nunzipsfx.exe,letters.zip letters.exe <br>\nletters == &quot;$currentdisk:[currentdir]letters.exe&quot;\n<br>\nzip -A letters.exe</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">(The VMS\n<i>append</i> command may also be used. The second command\ninstalls the new program as a &rsquo;&rsquo;foreign\ncommand&rsquo;&rsquo; capable of taking arguments. The third\nline assumes that Zip is already installed as a foreign\ncommand.) Under AmigaDOS:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">MakeSFX letters\nletters.zip UnZipSFX</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">(MakeSFX is\nincluded with the UnZip source distribution and with Amiga\nbinary distributions. &rsquo;&rsquo;<tt>zip\n-A</tt>&rsquo;&rsquo; doesn&rsquo;t work on Amiga\nself-extracting archives.) To test (or list) the newly\ncreated self-extracting archive:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">letters -t</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To test\n<i>letters</i> quietly, printing only a summary message\nindicating whether the archive is OK or not:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">letters\n-tqq</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To extract the\ncomplete contents into the current directory, recreating all\nfiles and subdirectories as necessary:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">letters</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To extract all\n<tt>*.txt</tt> files (in Unix quote the\n&rsquo;*&rsquo;):</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">letters\n*.txt</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To extract\neverything <i>except</i> the <tt>*.txt</tt> files:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">letters -x\n*.txt</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To extract only\nthe README file to standard output (the screen):</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">letters -c\nREADME</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To print only\nthe zipfile comment:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">letters -z</p>\n\n<h2>LIMITATIONS\n<a name=\"LIMITATIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The principle\nand fundamental limitation of <i>unzipsfx</i> is that it is\nnot portable across architectures or operating systems, and\ntherefore neither are the resulting archives. For some\narchitectures there is limited portability, however (e.g.,\nbetween some flavors of Intel-based Unix).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Another problem\nwith the current implementation is that any archive with\n&rsquo;&rsquo;junk&rsquo;&rsquo; prepended to the beginning\ntechnically is no longer a zipfile (unless <i>zip</i>(1) is\nused to adjust the zipfile offsets appropriately, as noted\nabove). <i>unzip</i>(1) takes note of the prepended bytes\nand ignores them since some file-transfer protocols, notably\nMacBinary, are also known to prepend junk. But\nPKWARE&rsquo;s archiver suite may not be able to deal with\nthe modified archive unless its offsets have been\nadjusted.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>unzipsfx</i>\nhas no knowledge of the user&rsquo;s PATH, so in general an\narchive must either be in the current directory when it is\ninvoked, or else a full or relative path must be given. If a\nuser attempts to extract the archive from a directory in the\nPATH other than the current one, <i>unzipsfx</i> will print\na warning to the effect, &rsquo;&rsquo;can&rsquo;t find\nmyself.&rsquo;&rsquo; This is always true under Unix and may\nbe true in some cases under MS-DOS, depending on the\ncompiler used (Microsoft C fully qualifies the program name,\nbut other compilers may not). Under OS/2 and NT there are\noperating-system calls available that provide the full path\nname, so the archive may be invoked from anywhere in the\nuser&rsquo;s path. The situation is not known for AmigaDOS,\nAtari TOS, MacOS, etc.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">As noted above,\na number of the normal <i>unzip</i>(1) functions have been\nremoved in order to make <i>unzipsfx</i> smaller: usage and\ndiagnostic info, listing functions and extraction to other\ndirectories. Also, only stored and deflated files are\nsupported. The latter limitation is mainly relevant to those\nwho create SFX archives, however.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">VMS users must\nknow how to set up self-extracting archives as foreign\ncommands in order to use any of <i>unzipsfx</i>&rsquo;s\noptions. This is not necessary for simple extraction, but\nthe command to do so then becomes, e.g.,\n&rsquo;&rsquo;<tt>run letters</tt>&rsquo;&rsquo; (to\ncontinue the examples given above).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>unzipsfx</i>\non the Amiga requires the use of a special program, MakeSFX,\nin order to create working self-extracting archives; simple\nconcatenation does not work. (For technically oriented\nusers, the attached archive is defined as a\n&rsquo;&rsquo;debug hunk.&rsquo;&rsquo;) There may be\ncompatibility problems between the ROM levels of older\nAmigas and newer ones.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All current\nbugs in <i>unzip</i>(1) exist in <i>unzipsfx</i> as\nwell.</p>\n\n<h2>DIAGNOSTICS\n<a name=\"DIAGNOSTICS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>unzipsfx</i>&rsquo;s\nexit status (error level) is identical to that of\n<i>unzip</i>(1); see the corresponding man page.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>funzip</i>(1),\n<i>unzip</i>(1), <i>zip</i>(1), <i>zipcloak</i>(1),\n<i>zipgrep</i>(1), <i>zipinfo</i>(1), <i>zipnote</i>(1),\n<i>zipsplit</i>(1)</p>\n\n<h2>URL\n<a name=\"URL\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The Info-ZIP\nhome page is currently at</p>\n\n<pre style=\"margin-left:11%;\">http://www.info-zip.org/pub/infozip/</pre>\n\n\n<p style=\"margin-left:11%;\">or <tt><br>\nftp://ftp.info-zip.org/pub/infozip/</tt> .</p>\n\n<h2>AUTHORS\n<a name=\"AUTHORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Greg Roelofs\nwas responsible for the basic modifications to UnZip\nnecessary to create UnZipSFX. See <i>unzip</i>(1) for the\ncurrent list of Zip-Bugs authors, or the file CONTRIBS in\nthe UnZip source distribution for the full list of Info-ZIP\ncontributors.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#ARGUMENTS\">ARGUMENTS</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#MODIFIERS\">MODIFIERS</a>","<a href=\"#ENVIRONMENT OPTIONS\">ENVIRONMENT OPTIONS</a>","<a href=\"#DECRYPTION\">DECRYPTION</a>","<a href=\"#AUTORUN COMMAND\">AUTORUN COMMAND</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#LIMITATIONS\">LIMITATIONS</a>","<a href=\"#DIAGNOSTICS\">DIAGNOSTICS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#URL\">URL</a>","<a href=\"#AUTHORS\">AUTHORS</a>"]}