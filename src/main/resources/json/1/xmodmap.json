{"name":"xmodmap","description":"xmodmap -\nutility for modifying keymaps and pointer button mappings in\nX","body":"\n\n<h1 align=\"center\">XMODMAP</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">xmodmap -\nutility for modifying keymaps and pointer button mappings in\nX</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>xmodmap</b>\n[-options ...] [filename]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>xmodmap</i> program is used to edit and display the\nkeyboard <i>modifier map</i> and <i>keymap table</i> that\nare used by client applications to convert event keycodes\ninto keysyms. It is usually run from the user&rsquo;s\nsession startup script to configure the keyboard according\nto personal tastes.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions may be used with <i>xmodmap</i>: <b><br>\n-display</b> <i>display</i></p>\n\n<p style=\"margin-left:23%;\">This option specifies the host\nand display to use.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>-help</b></p></td>\n<td width=\"5%\"></td>\n<td width=\"77%\">\n\n\n<p>This option indicates that a brief description of the\ncommand line arguments should be printed on the standard\nerror channel. This will be done whenever an unhandled\nargument is given to <i>xmodmap.</i></p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-grammar</b></p>\n\n<p style=\"margin-left:23%;\">This option indicates that a\nhelp message describing the expression grammar used in files\nand with -e expressions should be printed on the standard\nerror.</p>\n\n<p style=\"margin-left:11%;\"><b>-version</b></p>\n\n<p style=\"margin-left:23%;\">This option indicates that\n<i>xmodmap</i> should print its version information and\nexit.</p>\n\n<p style=\"margin-left:11%;\"><b>-verbose</b></p>\n\n<p style=\"margin-left:23%;\">This option indicates that\n<i>xmodmap</i> should print logging information as it parses\nits input.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>-quiet</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>This option turns off the verbose logging. This is the\ndefault.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>-n</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>This option indicates that <i>xmodmap</i> should not\nchange the mappings, but should display what it would do,\nlike <i>make(1)</i> does when given this option.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-e</b> <i>expression</i></p>\n\n<p style=\"margin-left:23%;\">This option specifies an\nexpression to be executed. Any number of expressions may be\nspecified from the command line.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"6%\">\n\n\n<p><b>-pm</b></p></td>\n<td width=\"6%\"></td>\n<td width=\"77%\">\n\n\n<p>This option indicates that the current modifier map\nshould be printed on the standard output. This is the\ndefault mode of operation if no other mode options are\nspecified.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"6%\">\n\n\n<p><b>-pk</b></p></td>\n<td width=\"6%\"></td>\n<td width=\"77%\">\n\n\n<p>This option indicates that the current keymap table\nshould be printed on the standard output.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"6%\">\n\n\n<p><b>-pke</b></p></td>\n<td width=\"6%\"></td>\n<td width=\"77%\">\n\n\n<p>This option indicates that the current keymap table\nshould be printed on the standard output in the form of\nexpressions that can be fed back to <i>xmodmap</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"6%\">\n\n\n<p><b>-pp</b></p></td>\n<td width=\"6%\"></td>\n<td width=\"77%\">\n\n\n<p>This option indicates that the current pointer map\nshould be printed on the standard output.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"6%\">\n\n\n<p><b>-</b></p></td>\n<td width=\"6%\"></td>\n<td width=\"77%\">\n\n\n<p>A lone dash means that the standard input should be used\nas the input file.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>filename</i> specifies a file containing <i>xmodmap</i>\nexpressions to be executed. This file is usually kept in the\nuser&rsquo;s home directory with a name like\n<i>.xmodmaprc</i>.</p>\n\n<h2>EXPRESSION GRAMMAR\n<a name=\"EXPRESSION GRAMMAR\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>xmodmap</i> program reads a list of expressions and\nparses them all before attempting to execute any of them.\nThis makes it possible to refer to keysyms that are being\nredefined in a natural way without having to worry as much\nabout name conflicts.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The list of\nkeysym names may be found in the header file\n<i>&lt;X11/keysymdef.h&gt;</i> (without the <i>XK_</i>\nprefix). Keysyms matching Unicode characters may be\nspecified as &quot;U0020&quot; to &quot;U007E&quot; and\n&quot;U00A0&quot; to &quot;U10FFFF&quot; for all possible\nUnicode characters. <b><br>\nkeycode</b> <i>NUMBER</i> <b>=</b> <i>KEYSYMNAME ...</i></p>\n\n<p style=\"margin-left:23%;\">The list of keysyms is assigned\nto the indicated keycode (which may be specified in decimal,\nhex or octal and can be determined by running the <i>xev</i>\nprogram). Up to eight keysyms may be attached to a key,\nhowever the last four are not used in any major X server\nimplementation. The first keysym is used when no modifier\nkey is pressed in conjunction with this key, the second with\nShift, the third when the Mode_switch key is used with this\nkey and the fourth when both the Mode_switch and Shift keys\nare used.</p>\n\n<p style=\"margin-left:11%;\"><b>keycode any =</b>\n<i>KEYSYMNAME ...</i></p>\n\n<p style=\"margin-left:23%;\">If no existing key has the\nspecified list of keysyms assigned to it, a spare key on the\nkeyboard is selected and the keysyms are assigned to it. The\nlist of keysyms may be specified in decimal, hex or\noctal.</p>\n\n<p style=\"margin-left:11%;\"><b>keysym</b> <i>KEYSYMNAME</i>\n<b>=</b> <i>KEYSYMNAME ...</i></p>\n\n<p style=\"margin-left:23%;\">The <i>KEYSYMNAME</i> on the\nleft hand side is translated into matching keycodes used to\nperform the corresponding set of <b>keycode</b> expressions.\nNote that if the same keysym is bound to multiple keys, the\nexpression is executed for each matching keycode.</p>\n\n<p style=\"margin-left:11%;\"><b>clear</b>\n<i>MODIFIERNAME</i></p>\n\n<p style=\"margin-left:23%;\">This removes all entries in the\nmodifier map for the given modifier, where valid name are:\n<b>Shift</b>, <b>Lock</b>, <b>Control</b>, <b>Mod1</b>,\n<b>Mod2</b>, <b>Mod3</b>, <b>Mod4</b>, and <b>Mod5</b> (case\ndoes not matter in modifier names, although it does matter\nfor all other names). For example, &rsquo;&rsquo;clear\nLock&rsquo;&rsquo; will remove all any keys that were bound\nto the shift lock modifier.</p>\n\n<p style=\"margin-left:11%;\"><b>add</b> <i>MODIFIERNAME</i>\n<b>=</b> <i>KEYSYMNAME ...</i></p>\n\n<p style=\"margin-left:23%;\">This adds all keys containing\nthe given keysyms to the indicated modifier map. The keysym\nnames are evaluated after all input expressions are read to\nmake it easy to write expressions to swap keys (see the\nEXAMPLES section).</p>\n\n<p style=\"margin-left:11%;\"><b>remove</b>\n<i>MODIFIERNAME</i> <b>=</b> <i>KEYSYMNAME ...</i></p>\n\n<p style=\"margin-left:23%;\">This removes all keys\ncontaining the given keysyms from the indicated modifier\nmap. Unlike <b>add,</b> the keysym names are evaluated as\nthe line is read in. This allows you to remove keys from a\nmodifier without having to worry about whether or not they\nhave been reassigned.</p>\n\n<p style=\"margin-left:11%;\"><b>pointer = default</b></p>\n\n<p style=\"margin-left:23%;\">This sets the pointer map back\nto its default settings (button 1 generates a code of 1,\nbutton 2 generates a 2, etc.).</p>\n\n<p style=\"margin-left:11%;\"><b>pointer =</b> <i>NUMBER\n...</i></p>\n\n<p style=\"margin-left:23%;\">This sets the pointer map to\ncontain the indicated button codes. The list always starts\nwith the first physical button. Setting a button code to 0\ndisables events from that button.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Lines that\nbegin with an exclamation point (!) are taken as\ncomments.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If you want to\nchange the binding of a modifier key, you must also remove\nit from the appropriate modifier map.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Many pointers\nare designed such that the first button is pressed using the\nindex finger of the right hand. People who are left-handed\nfrequently find that it is more comfortable to reverse the\nbutton codes that get generated so that the primary button\nis pressed using the index finger of the left hand. This\ncould be done on a 3 button pointer as follows: <br>\n% xmodmap -e &quot;pointer = 3 2 1&quot;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Many\napplications support the notion of Meta keys (similar to\nControl keys except that Meta is held down instead of\nControl). However, some servers do not have a Meta keysym in\nthe default keymap table, so one needs to be added by hand.\nThe following command will attach Meta to the Multi-language\nkey (sometimes labeled Compose Character). It also takes\nadvantage of the fact that applications that need a Meta key\nsimply need to get the keycode and don&rsquo;t require the\nkeysym to be in the first column of the keymap table. This\nmeans that applications that are looking for a Multi_key\n(including the default modifier map) won&rsquo;t notice any\nchange. <br>\n% xmodmap -e &quot;keysym Multi_key = Multi_key\nMeta_L&quot;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Similarly, some\nkeyboards have an Alt key but no Meta key. In that case the\nfollowing may be useful: <br>\n% xmodmap -e &quot;keysym Alt_L = Meta_L Alt_L&quot;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">One of the more\nsimple, yet convenient, uses of <i>xmodmap</i> is to set the\nkeyboard&rsquo;s &quot;rubout&quot; key to generate an\nalternate keysym. This frequently involves exchanging\nBackspace with Delete to be more comfortable to the user. If\nthe <i>ttyModes</i> resource in <i>xterm</i> is set as well,\nall terminal emulator windows will use the same key for\nerasing characters: <br>\n% xmodmap -e &quot;keysym BackSpace = Delete&quot; <br>\n% echo &quot;XTerm*ttyModes: erase ^?&quot; | xrdb\n-merge</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Some keyboards\ndo not automatically generate less than and greater than\ncharacters when the comma and period keys are shifted. This\ncan be remedied with <i>xmodmap</i> by resetting the\nbindings for the comma and period with the following\nscripts: <br>\n! <br>\n! make shift-, be &lt; and shift-. be &gt; <br>\n! <br>\nkeysym comma = comma less <br>\nkeysym period = period greater</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">One of the more\nirritating differences between keyboards is the location of\nthe Control and CapsLock keys. A common use of\n<i>xmodmap</i> is to swap these two keys as follows: <br>\n! <br>\n! Swap Caps_Lock and Control_L <br>\n! <br>\nremove Lock = Caps_Lock <br>\nremove Control = Control_L <br>\nkeysym Control_L = Caps_Lock <br>\nkeysym Caps_Lock = Control_L <br>\nadd Lock = Caps_Lock <br>\nadd Control = Control_L</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This example\ncan be run again to swap the keys back to their previous\nassignments.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>keycode</i> command is useful for assigning the same\nkeysym to multiple keycodes. Although unportable, it also\nmakes it possible to write scripts that can reset the\nkeyboard to a known state. The following script sets the\nbackspace key to generate Delete (as shown above), flushes\nall existing caps lock bindings, makes the CapsLock key be a\ncontrol key, make F5 generate Escape, and makes Break/Reset\nbe a shift lock. <br>\n! <br>\n! On the HP, the following keycodes have key caps as listed:\n<br>\n! <br>\n! 101 Backspace <br>\n! 55 Caps <br>\n! 14 Ctrl <br>\n! 15 Break/Reset <br>\n! 86 Stop <br>\n! 89 F5 <br>\n! <br>\nkeycode 101 = Delete <br>\nkeycode 55 = Control_R <br>\nclear Lock <br>\nadd Control = Control_R <br>\nkeycode 89 = Escape <br>\nkeycode 15 = Caps_Lock <br>\nadd Lock = Caps_Lock</p>\n\n<h2>ENVIRONMENT\n<a name=\"ENVIRONMENT\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"11%\">\n\n\n<p style=\"margin-top: 1em\"><b>DISPLAY</b></p></td>\n<td width=\"1%\"></td>\n<td width=\"60%\">\n\n\n<p style=\"margin-top: 1em\">to get default host and display\nnumber.</p> </td>\n<td width=\"17%\">\n</td></tr>\n</table>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">X(7), xev(1),\nsetxkbmap(1), XStringToKeysym(3), <i>Xlib</i> documentation\non key and pointer events</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Every time a\n<b>keycode</b> expression is evaluated, the server generates\na <i>MappingNotify</i> event on every client. This can cause\nsome thrashing. All of the changes should be batched\ntogether and done at once. Clients that receive keyboard\ninput and ignore <i>MappingNotify</i> events will not notice\nany changes made to keyboard mappings.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Xmodmap</i>\nshould generate &quot;add&quot; and &quot;remove&quot;\nexpressions automatically whenever a keycode that is already\nbound to a modifier is changed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">There should be\na way to have the <i>remove</i> expression accept keycodes\nas well as keysyms for those times when you really mess up\nyour mappings.</p>\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Jim Fulton, MIT\nX Consortium, rewritten from an earlier version by David\nRosenthal of Sun Microsystems.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#EXPRESSION GRAMMAR\">EXPRESSION GRAMMAR</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#ENVIRONMENT\">ENVIRONMENT</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#AUTHOR\">AUTHOR</a>"]}