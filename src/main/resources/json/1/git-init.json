{"name":"git-init","description":"git-init -\nCreate an empty Git repository or reinitialize an existing\none","body":"\n\n<h1 align=\"center\">GIT-INIT</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">git-init -\nCreate an empty Git repository or reinitialize an existing\none</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>git init</i>\n[-q | --quiet] [--bare]\n[--template=&lt;template_directory&gt;] <br>\n[--separate-git-dir &lt;git dir&gt;]\n[--object-format=&lt;format&gt;] <br>\n[-b &lt;branch-name&gt; |\n--initial-branch=&lt;branch-name&gt;] <br>\n[--shared[=&lt;permissions&gt;]] [directory]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This command\ncreates an empty Git repository - basically a <b>.git</b>\ndirectory with subdirectories for <b>objects</b>,\n<b>refs/heads</b>, <b>refs/tags</b>, and template files. An\ninitial branch without any commits will be created (see the\n<b>--initial-branch</b> option below for its name).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\n<b>$GIT_DIR</b> environment variable is set then it\nspecifies a path to use instead of <b>./.git</b> for the\nbase of the repository.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the object\nstorage directory is specified via the\n<b>$GIT_OBJECT_DIRECTORY</b> environment variable then the\nsha1 directories are created underneath - otherwise the\ndefault <b>$GIT_DIR/objects</b> directory is used.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Running <i>git\ninit</i> in an existing repository is safe. It will not\noverwrite things that are already there. The primary reason\nfor rerunning <i>git init</i> is to pick up newly added\ntemplates (or to move the repository to another place if\n--separate-git-dir is given).</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">-q, --quiet</p>\n\n<p style=\"margin-left:17%;\">Only print error and warning\nmessages; all other output will be suppressed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--bare</p>\n\n<p style=\"margin-left:17%;\">Create a bare repository. If\n<b>GIT_DIR</b> environment is not set, it is set to the\ncurrent working directory.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--object-format=&lt;format&gt;</p>\n\n<p style=\"margin-left:17%;\">Specify the given object format\n(hash algorithm) for the repository. The valid values are\n<i>sha1</i> and (if enabled) <i>sha256</i>. <i>sha1</i> is\nthe default.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">THIS OPTION IS\nEXPERIMENTAL! SHA-256 support is experimental and still in\nan early stage. A SHA-256 repository will in general not be\nable to share work with &quot;regular&quot; SHA-1\nrepositories. It should be assumed that, e.g., Git internal\nfile formats in relation to SHA-256 repositories may change\nin backwards-incompatible ways. Only use\n<b>--object-format=sha256</b> for testing purposes.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--template=&lt;template_directory&gt;</p>\n\n<p style=\"margin-left:17%;\">Specify the directory from\nwhich templates will be used. (See the &quot;TEMPLATE\nDIRECTORY&quot; section below.)</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--separate-git-dir=&lt;git\ndir&gt;</p>\n\n<p style=\"margin-left:17%;\">Instead of initializing the\nrepository as a directory to either <b>$GIT_DIR</b> or\n<b>./.git/</b>, create a text file there containing the path\nto the actual repository. This file acts as\nfilesystem-agnostic Git symbolic link to the repository.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If this is\nreinitialization, the repository will be moved to the\nspecified path.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-b\n&lt;branch-name&gt;,\n--initial-branch=&lt;branch-name&gt;</p>\n\n<p style=\"margin-left:17%;\">Use the specified name for the\ninitial branch in the newly created repository. If not\nspecified, fall back to the default name (currently\n<b>master</b>, but this is subject to change in the future;\nthe name can be customized via the <b>init.defaultBranch</b>\nconfiguration variable).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--shared[=(false|true|umask|group|all|world|everybody|0xxx)]</p>\n\n<p style=\"margin-left:17%;\">Specify that the Git repository\nis to be shared amongst several users. This allows users\nbelonging to the same group to push into that repository.\nWhen specified, the config variable\n&quot;core.sharedRepository&quot; is set so that files and\ndirectories under <b>$GIT_DIR</b> are created with the\nrequested permissions. When not specified, Git will use\npermissions reported by umask(2).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The option can\nhave the following values, defaulting to <i>group</i> if no\nvalue is given:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><i>umask</i>\n(or <i>false</i>)</p>\n\n<p style=\"margin-left:23%;\">Use permissions reported by\numask(2). The default, when <b>--shared</b> is not\nspecified.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><i>group</i>\n(or <i>true</i>)</p>\n\n<p style=\"margin-left:23%;\">Make the repository\ngroup-writable, (and g+sx, since the git group may be not\nthe primary group of all users). This is used to loosen the\npermissions of an otherwise safe umask(2) value. Note that\nthe umask still applies to the other permission bits (e.g.\nif umask is <i>0022</i>, using <i>group</i> will not remove\nread privileges from other (non-group) users). See\n<i>0xxx</i> for how to exactly specify the repository\npermissions.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><i>all</i> (or\n<i>world</i> or <i>everybody</i>)</p>\n\n<p style=\"margin-left:23%;\">Same as <i>group</i>, but make\nthe repository readable by all users.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><i>0xxx</i></p>\n\n<p style=\"margin-left:23%;\"><i>0xxx</i> is an octal number\nand each file will have mode <i>0xxx</i>. <i>0xxx</i> will\noverride users' umask(2) value (and not only loosen\npermissions as <i>group</i> and <i>all</i> does).\n<i>0640</i> will create a repository which is\ngroup-readable, but not group-writable or accessible to\nothers. <i>0660</i> will create a repo that is readable and\nwritable to the current user and group, but inaccessible to\nothers.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">By default, the\nconfiguration flag <b>receive.denyNonFastForwards</b> is\nenabled in shared repositories, so that you cannot force a\nnon fast-forwarding push into it.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If you provide\na <i>directory</i>, the command is run inside it. If this\ndirectory does not exist, it will be created.</p>\n\n<h2>TEMPLATE DIRECTORY\n<a name=\"TEMPLATE DIRECTORY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Files and\ndirectories in the template directory whose name do not\nstart with a dot will be copied to the <b>$GIT_DIR</b> after\nit is created.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The template\ndirectory will be one of the following (in order):</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; the\nargument given with the <b>--template</b> option;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; the\ncontents of the <b>$GIT_TEMPLATE_DIR</b> environment\nvariable;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; the\n<b>init.templateDir</b> configuration variable; or</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; the\ndefault template directory:\n<b>/usr/share/git-core/templates</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The default\ntemplate directory includes some directory structure,\nsuggested &quot;exclude patterns&quot; (see\n<a href=\"https://man.page/5/gitignore\">gitignore(5)</a>), and sample hook files.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The sample\nhooks are all disabled by default. To enable one of the\nsample hooks rename it by removing its <b>.sample</b>\nsuffix.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See\n<a href=\"https://man.page/5/githooks\">githooks(5)</a> for more general info on hook\nexecution.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Start a new Git\nrepository for an existing code base</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ cd\n/path/to/my/codebase <br>\n$ git init <b>(1)</b> <br>\n$ git add . <b>(2)</b> <br>\n$ git commit <b>(3)</b></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>1.</b>\nCreate a /path/to/my/codebase/.git directory. <b><br>\n2.</b> Add all existing files to the index. <b><br>\n3.</b> Record the pristine state as the first commit in the\nhistory.</p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Part of the\n<a href=\"https://man.page/1/git\">git(1)</a> suite</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#TEMPLATE DIRECTORY\">TEMPLATE DIRECTORY</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#GIT\">GIT</a>"]}