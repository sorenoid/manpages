{"name":"ppmtompeg","body":"\n\n<h1 align=\"center\">PPMTOMPEG</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">ppmtompeg -\nencodes MPEG-1 bitstreams</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ppmtompeg</b>\n[ <i>options</i> ] <i>parameter-file</i></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i><b>ppmtompeg</b></i>\nproduces an MPEG-1 video stream. param_file is a parameter\nfile which includes a list of input files and other\nparameters. The file is described in detail below. The -gop,\n-combine_gops, -frames, and -combine_frames options are all\nexclusive. This man page is probably incomplete. For\ncomplete usage, see the User&rsquo;s Guide.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"24%\">\n\n\n<p style=\"margin-top: 1em\"><b>-stat stat_file</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"62%\">\n\n\n<p style=\"margin-top: 1em\">: causes the encoder to append\nthe statistics to the</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\">file <i>stat_file</i>. In any\ncase, the statistics are output to stdout. The statistics\nuse the following abbreviations: bits per block (bpb), bits\nper frame (bpf), seconds per frame (spf), and bits per\nsecond (bps).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"29%\">\n\n\n<p style=\"margin-top: 1em\"><b>-quiet num_seconds</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"57%\">\n\n\n<p style=\"margin-top: 1em\">: causes the program to not\nreport remaining time</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\">for at least num_seconds\nseconds. A negative values tells the program not to report\nat all. 0 is the default (reports once after each frame).\nNote that the time remaining is an estimate and does not\ntake into account time to read in frames.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"15%\">\n\n\n<p style=\"margin-top: 1em\"><b>-realquiet</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"71%\">\n\n\n<p style=\"margin-top: 1em\">: causes the encoder to run\nsilently, with the only screen</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\">output being errors.\nParticularly useful when reading input from stdin.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"26%\">\n\n\n<p style=\"margin-top: 1em\"><b>-no_frame_summary</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"60%\">\n\n\n<p style=\"margin-top: 1em\">: prevents the program from\nprinting a summary line</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\">for each frame</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"15%\">\n\n\n<p style=\"margin-top: 1em\"><b>-float_dct</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p style=\"margin-top: 1em\">: forces the encoder to use a\nmore accurate, yet more</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\">computationally expensive\nversion of the DCT.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"20%\">\n\n\n<p style=\"margin-top: 1em\"><b>-gop gop_num</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"66%\">\n\n\n<p style=\"margin-top: 1em\">: causes the encoder to only\nencode the numbered GOP</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\">(first GOP is 0). The parameter\nfile is the same as for normal usage. The output file will\nbe the normal output file with the suffix\n&quot;.gop.&lt;gop_num&gt;&quot; No sequence info is\noutput.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"20%\">\n\n\n<p style=\"margin-top: 1em\"><b>-combine_gops</b></p></td>\n<td width=\"1%\"></td>\n<td width=\"68%\">\n\n\n<p style=\"margin-top: 1em\">: causes the encoder to simply\ncombine some GOP files</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\">into a single MPEG stream. A\nsequence header/ender are inserted. In this case, the\nparameter file need only contain the YUV_SIZE value, an\noutput file, and perhaps a list of input GOP files (see\nbelow).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"46%\">\n\n\n<p style=\"margin-top: 1em\"><b>-frames first_frame\nlast_frame</b></p> </td>\n<td width=\"1%\"></td>\n<td width=\"42%\">\n\n\n<p style=\"margin-top: 1em\">: causes the encoder to only\nencode the</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\">frames from first_frame to\nlast_frame, inclusive. The parameter file is the same as for\nnormal usage. The output will be placed in separate files,\none per frame, with the file names being the normal output\nfile with the suffix &quot;.frame.&lt;frame num&gt;&quot; No\nGOP header information is output. (Thus, the parameter file\nneed not include the GOP_SIZE value)</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"23%\">\n\n\n<p style=\"margin-top: 1em\"><b>-combine_frames</b></p></td>\n<td width=\"1%\"></td>\n<td width=\"65%\">\n\n\n<p style=\"margin-top: 1em\">: causes the encoder to simply\ncombine some frames into</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\">a single MPEG stream. Sequence\nand GOP headers are inserted appropriately. In this case,\nthe parameter file need only contain the YUV_SIZE value, the\nGOP_SIZE value, an output file, and perhaps a list of frame\nfiles (see below).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p style=\"margin-top: 1em\"><b>-nice</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"80%\">\n\n\n<p style=\"margin-top: 1em\">: causes the program to run any\nremote processes &rsquo;nicely.&rsquo; This is only relevant\nif the program is using parallel encoding. (see &rsquo;man\nnice.&rsquo;)</p> </td></tr>\n</table>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"6%\">\n\n\n<p style=\"margin-top: 1em\"><b>-max_machines\nnum_machines</b></p> </td>\n<td width=\"1%\"></td>\n<td width=\"82%\">\n\n\n<p style=\"margin-top: 1em\">: causes the program to use no\nmore than num_machines machines as slaves for use in\nparallel encoding.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"6%\">\n\n\n<p style=\"margin-top: 1em\"><b>-snr</b></p></td>\n<td width=\"1%\"></td>\n<td width=\"82%\">\n\n\n<p style=\"margin-top: 1em\">: print the signal-to-noise\nratio. Prints SNR (Y U V) and peak SNR (Y U V) for each\nframe. In summary, prints averages of luminance only (Y).\nSNR is defined as 10*log(variance of original/variance of\nerror). Peak SNR is defined as 20*log(255/RMSE). Note that\nthe encoder will run a little slower if you want it to print\nthe SNR.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"6%\">\n\n\n<p style=\"margin-top: 1em\"><b>-mse</b></p></td>\n<td width=\"1%\"></td>\n<td width=\"82%\">\n\n\n<p style=\"margin-top: 1em\">: computes the mean squared\nerror per block. Also automatically computes the quality of\nthe images when set, so there is no need to specify -snr\nthen.</p> </td></tr>\n</table>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n\n\n<p style=\"margin-top: 1em\"><b>-bit_rate_info\nrate_file</b></p> <td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">: prints bit rate information\ninto the file rate_file. Bit rate info is bits per frame,\nand also bits per I-frame-to-I-frame.</p></td></tr>\n</table>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n\n\n<p style=\"margin-top: 1em\"><b>-mv-histogram</b></p><td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">: prints histogram of motion\nvectors as part of statistics. There are three histograms --\none for P, forward B, and backward B vectors. Each histogram\nis a 2-dimensional array, and there is one entry for each\nvector in the search window.</p></td></tr>\n</table>\n\n<h2>PARAMETER FILE\n<a name=\"PARAMETER FILE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The parameter\nfile MUST contain the following lines (except when using the\n-combine_gops or -combine_frames options):</p></table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">PATTERN\n&lt;pattern&gt;</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"32%\">\n\n\n<p style=\"margin-top: 1em\">OUTPUT &lt;output file&gt;</p></td>\n<td width=\"46%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"32%\">\n\n\n<p style=\"margin-top: 1em\">INPUT_DIR &lt;directory&gt;</p></td>\n<td width=\"46%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:32%;\">all input files must reside in\nthis directory. If you want to refer to the current\ndirectory, use &rsquo;.&rsquo; (an empty INPUT_DIR value\nwould refer to the root directory). If input files will be\ncoming in from standard input, use &rsquo;stdin&rsquo;.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"7%\">\n\n\n<p style=\"margin-top: 1em\">INPUT</p></td>\n<td width=\"71%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:32%;\">This line must be followed by a\nlist of the input files (in display order) and then the\nline</p>\n\n<p style=\"margin-left:43%;\">END_INPUT</p>\n\n<p style=\"margin-left:32%;\">There are three types of lines\nbetween INPUT and END_INPUT. First, a line may simply be the\nname of an input file. Secondly, the line may be of the\nform</p>\n\n<p style=\"margin-left:43%;\">&lt;single_star_expr&gt;\n[x-y]</p>\n\n<p style=\"margin-left:32%;\">single_star_expr can have a\nsingle &rsquo;*&rsquo; in it. It is replaced by all the\nnumbers between x and y inclusive. So, for example, the\nline</p>\n\n<p style=\"margin-left:43%;\">tennis*.ppm [12-15]</p>\n\n<p style=\"margin-left:32%;\">is replaced by tennis12.ppm,\ntennis13.ppm, tennis14.ppm, tennis15.ppm. Uniform\nzero-padding occurs, as well. For example, the line</p>\n\n<p style=\"margin-left:43%;\">football.*.ppm [001-130]</p>\n\n<p style=\"margin-left:32%;\">is replaced by\nfootball.001.ppm, football.002.ppm, ..., football.009.ppm,\nfootball.010.ppm, ..., football.130.ppm. The third type of\nline is:</p>\n\n<p style=\"margin-left:43%;\">&lt;single_star_expr&gt;\n[x-y+s]</p>\n\n<p style=\"margin-left:32%;\">Where the line is treated\nexactly as above, except that we skip by s. Thus, the\nline</p>\n\n<p style=\"margin-left:43%;\">football.*.ppm [001-130+4]</p>\n\n<p style=\"margin-left:32%;\">is replaced by\nfootball.001.ppm, football.005.ppm, football.009.ppm,\nfootball.013.ppm, etc.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">BASE_FILE_FORMAT &lt;YUV or PPM\nor PNM or JPEG or JMOVIE&gt;</p></td></tr>\n</table>\n\n<p style=\"margin-left:32%;\">All the input files must be\nconverted to YUV, JPEG(v4), JMOVIE, PNM, or PPM format. This\nline specifies which of the three formats (actually PPM is a\nsubset of PNM). The reason for having a separate PPM option\nis for simplicity. If your files are RAWBITS ppm files, then\nuse the PPM option rather than the PNM. Also, depending on\nthe system, file reads will go much faster with the PPM\noption (as opposed to PNM).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"52%\">\n\n\n<p style=\"margin-top: 1em\">INPUT_CONVERT &lt;conversion\ncommand&gt;</p> </td>\n<td width=\"26%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:32%;\">You must specify how to convert\na file to the base file format. In the conversion command,\neach &rsquo;*&rsquo; is replaced by the filename (the items\nlisted between INPUT and END_INPUT). If no conversion is\nnecessary, then you would just say:</p>\n\n<p style=\"margin-left:43%;\">INPUT_CONVERT *</p>\n\n<p style=\"margin-left:32%;\">If you had a bunch of gif\nfiles, you might say:</p>\n\n<p style=\"margin-left:43%;\">INPUT_CONVERT giftoppm *</p>\n\n<p style=\"margin-left:32%;\">If you have a bunch of separate\na.Y, a.U, and a.V files, then you might say:</p>\n\n<p style=\"margin-left:43%;\">INPUT_CONVERT cat *.Y *.U *.V\n<br>\nInput conversion is not allowed with input from stdin.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"32%\"></td>\n<td width=\"19%\">\n\n\n<p style=\"margin-top: 1em\">GOP_SIZE &lt;n&gt;</p></td>\n<td width=\"49%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:43%;\">n is roughly the number of\nframes in a Group of Pictures (roughly because a GOP must\nbegin with an I-frame)</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"32%\"></td>\n<td width=\"31%\">\n\n\n<p style=\"margin-top: 1em\">SLICES_PER_FRAME &lt;n&gt;</p></td>\n<td width=\"37%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:43%;\">n is roughly the number of\nslices per frame. Note, at least one MPEG player may\ncomplain if slices do not start at the left side of an\nimage. To ensure this does not happen, make sure the number\nof rows is divisible by SLICES_PER_FRAME.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"32%\"></td>\n<td width=\"31%\">\n\n\n<p style=\"margin-top: 1em\">PIXEL &lt;FULL or HALF&gt;</p></td>\n<td width=\"37%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:43%;\">use half-pixel motion vectors,\nor only full-pixel ones</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"32%\"></td>\n<td width=\"14%\">\n\n\n<p style=\"margin-top: 1em\">RANGE &lt;n&gt;</p></td>\n<td width=\"54%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:43%;\">use a search range of +/- n\npixels</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"32%\"></td>\n<td width=\"36%\">\n\n\n<p style=\"margin-top: 1em\">PSEARCH_ALG\n&lt;algorithm&gt;</p> </td>\n<td width=\"32%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:43%;\">algorithm must be one of\n{EXHAUSTIVE, TWOLEVEL, SUBSAMPLE, LOGARITHMIC}. Tells what\nkind of search procedure should be used for P-frames.\nExhaustive gives the best compression, but logarithmic is\nthe fastest. You select the desired combination of speed and\ncompression. TWOLEVEL is an exhaustive full-pixel search,\nfollowed by a local half- pixel search around the best\nfull-pixel vector (the PIXEL option is ignored for this\nsearch algorithm).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"32%\"></td>\n<td width=\"36%\">\n\n\n<p style=\"margin-top: 1em\">BSEARCH_ALG\n&lt;algorithm&gt;</p> </td>\n<td width=\"32%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:43%;\">algorithm must be one of\n{SIMPLE, CROSS2, EXHAUSTIVE}. Tells what kind of search\nprocedure should be used for B-frames. Simple means find\nbest forward and backward vectors, then interpolate. Cross2\nmeans find those two vectors, then see what backward vector\nbest matches the best forward vector, and vice versa.\nExhaustive does an n-squared search and is EXTREMELY slow in\nrelation to the others (Cross2 is about twice as slow as\nSimple).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"32%\"></td>\n<td width=\"17%\">\n\n\n<p style=\"margin-top: 1em\">IQSCALE &lt;n&gt;</p></td>\n<td width=\"51%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:43%;\">use n as the qscale for\nI-frames</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"32%\"></td>\n<td width=\"17%\">\n\n\n<p style=\"margin-top: 1em\">PQSCALE &lt;n&gt;</p></td>\n<td width=\"51%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:43%;\">use n as the qscale for\nP-frames</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"32%\"></td>\n<td width=\"17%\">\n\n\n<p style=\"margin-top: 1em\">BQSCALE &lt;n&gt;</p></td>\n<td width=\"51%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:43%;\">use n as the qscale for\nB-frames</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"32%\"></td>\n<td width=\"57%\">\n\n\n<p style=\"margin-top: 1em\">REFERENCE_FRAME &lt;ORIGINAL or\nDECODED&gt;</p> </td>\n<td width=\"11%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:43%;\">If ORIGINAL is specified, then\nthe original images are used when computing motion vectors.\nTo be more accurate, use DECODED, in which the decoded\nimages are used. This should increase the quality of the\nimage, but will take a bit longer to encode.</p>\n\n<p style=\"margin-left:32%;\">The following lines are\noptional:</p>\n\n\n<p style=\"margin-left:43%; margin-top: 1em\">FORCE_I_ALIGN</p>\n\n<p style=\"margin-left:54%;\">This option is only relevant\nfor parallel execution (see below). It forces each processor\nto encode a block of N frames, where N must be a multiple of\nthe pattern length. Since the first frame in any pattern is\nan I-frame, this forces each block encoded by a processor to\nbegin with an I-frame.</p>\n\n<p style=\"margin-left:43%;\">foo</p></table>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\nBASE_FILE_FORMAT is YUV, then the parameter file must\ncontain:</p>\n\n<p style=\"margin-left:22%;\">YUV_SIZE\n&lt;w&gt;x&lt;h&gt;</p>\n\n<p style=\"margin-left:11%;\">where w = width, h = height (in\npixels) of image, and</p>\n\n<p style=\"margin-left:22%;\">YUV_FORMAT &lt;ABEKAS or\nPHILLIPS or UCB or EYUV or pattern&gt;.</p>\n\n<p style=\"margin-left:11%;\">See the file doc/INPUT.FORMAT\nfor more information.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\n-combine-gops option is used, then only the YUV_SIZE and\nOUTPUT values need be specified in the parameter file. In\naddition, the parameter file may specify input GOP files in\nthe same manner as normal input files -- except instead of\nusing INPUT_DIR, INPUT, and END_INPUT, use GOP_INPUT_DIR,\nGOP_INPUT, and GOP_END_INPUT. If no input GOP files are\nspecified, then the default is to use the output file name\nwith suffix &quot;.gop.&lt;gop_num&gt;&quot; starting from 0\nas the input files.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\n-combine-frames option is used, then only the YUV_SIZE,\nGOP_SIZE, and OUTPUT values need be specified in the\nparameter file. In addition, the parameter file may specify\ninput frame files in the same manner as normal input files\n-- except instead of using INPUT_DIR, INPUT, and END_INPUT,\nuse FRAME_INPUT_DIR, FRAME_INPUT, and FRAME_END_INPUT. If no\ninput frame files are specified, then the default is to use\nthe output file name with suffix\n&quot;.frame.&lt;frame_num&gt;&quot; starting from 0 as the\ninput files.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Any number of\nspaces and tabs may come between each option and value.\nLines beginning with &rsquo;#&rsquo; are ignored. Any other\nlines are ignored except for those between INPUT and\nEND_INPUT. This allows you to use the same parameter file\nfor normal usage and for -combine_gops and\n-combine_frames.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The encoder is\ncase-sensitive so, except for file names and directories,\neverything should be in upper case.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The lines may\nappear in any order, except the following exceptions. INPUT\nmust appear before END_INPUT (also, GOP_INPUT before\nGOP_END_INPUT and FRAME_INPUT before FRAME_END_INPUT). All\nlines between INPUT and END_INPUT must be the frames in play\norder.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The encoder is\nprepared to handle up to 16 B frames between reference\nframes when encoding with input from stdin. To increase this\namount, change the constant B_FRAME_RUN in frame.c and\nrecompile.</p> </table>\n\n<h2>PARALLEL OPERATION\n<a name=\"PARALLEL OPERATION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The encoder may\nbe run on multiple machines at once. To do so, add a line\n&quot;PARALLEL&quot; in the parameter file, followed by a\nlisting, one machine per line, then\n&quot;END_PARALLEL&quot;. Each of the lines should be in one\nof two forms. If the machine has access to the file server,\nthen the line should be:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"92%\">\n\n\n<p>&lt;machine&gt; &lt;user&gt; &lt;executable&gt;</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The executable\nis normally ppmtompeg (you may need to give the complete\npath if you&rsquo;ve built for different architectures). If\nthe machine is a remote machine, then the line should\nbe:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"92%\">\n\n\n<p>REMOTE &lt;machine&gt; &lt;user&gt; &lt;executable&gt;\n&lt;parameter file&gt;</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Full paths\nshould generally be used when describing executables and\nparameter files. This INCLUDES the parameter file given as\nan argument to the original call to ppmtompeg. Also, .rhosts\nfiles on the appropriate machines should have the\nappropriate information.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The encoder\nwill use the original machine for the master and I/O server\nprocesses, and uses the listed machines as slaves to do the\ncomputation.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Optional lines\nare</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"40%\">\n\n\n<p style=\"margin-top: 1em\">RSH &lt;remote shell\ncommand&gt;</p> </td>\n<td width=\"49%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:22%;\">The encoder uses the remote\nshell command to start processes on other machines. The\ndefault command is &rsquo;rsh.&rsquo; If your machine\nsupports a different command, specify it here.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"37%\">\n\n\n<p style=\"margin-top: 1em\">PARALLEL_TEST_FRAMES\n&lt;n&gt;</p> </td>\n<td width=\"52%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:22%;\">n is the number of frames to\nencode initially on each processor</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"37%\">\n\n\n<p style=\"margin-top: 1em\">PARALLEL_TIME_CHUNKS\n&lt;t&gt;</p> </td>\n<td width=\"52%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:22%;\">subsequently, each slave\nprocessor will be asked to encode for approximately t\nseconds. Smaller values of &lt;t&gt; increase communication,\nbut improve load balancing.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"89%\">\n\n\n<p style=\"margin-top: 1em\">The default values for these two\noptions are n = 3 frames and t = 30 seconds.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"89%\">\n\n\n<p style=\"margin-top: 1em\">PARALLEL_PERFECT</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%;\">If this line is present, then\nscheduling is done on the assumption that work distribution\nwill be perfectly even -- meaning that each machine is about\nthe same speed. The frames will simply be divided up evenly\nbetween the processors. This has the advantage of very\nminimal scheduling overhead, but is obviously wrong if\nmachines have varying speeds, or if the network load makes\nperformance uneven.</p>\n\n<h2>VERSION\n<a name=\"VERSION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This is version\n1.5 it contins new features and bug fixes from version\n1.3.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Not really a\nbug, but at least a limitation: If writing to an output\nfile, ppmtompeg sometimes uses &lt;filename&gt;.* as\ntemporary files.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">No known bugs,\nbut if you find any, report them to\nmpeg-bugs@plateau.cs.berkeley.edu.</p> </table>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n\n\n<h2>AUTHORS\n<a name=\"AUTHORS\"></a>\n</h2>\n<td width=\"11%\"></td>\n<td width=\"89%\">\n\n\n<p>Kevin Gong - University of California, Berkeley,\nkeving@cs.berkeley.edu</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"89%\">\n\n\n<p>Ketan Patel - University of California, Berkeley,\nkpatel@cs.berkeley.edu</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"89%\">\n\n\n<p>Dan Wallach - University of California, Berkeley,\ndwallach@cs.berkeley.edu</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"89%\">\n\n\n<p>Darryl Brown - University of California, Berkeley,\ndarryl@cs.berkeley.edu</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"89%\">\n\n\n<p>Eugene Hung - University of California, Berkeley,\neyhung@cs.berkeley.edu</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"89%\">\n\n\n<p>Steve Smoot - University of California, Berkeley,\nsmoot@cs.berkeley.edu</p> </td></tr>\n </table>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#PARAMETER FILE\">PARAMETER FILE</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#PARALLEL OPERATION\">PARALLEL OPERATION</a>","<a href=\"#VERSION\">VERSION</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#AUTHORS\">AUTHORS</a>"]}