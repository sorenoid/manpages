{"name":"xsetwacom","body":"\n\n<h1 align=\"center\">xsetwacom</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">xsetwacom -\ncommandline utility to query and modify wacom driver\nsettings.</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">xsetwacom\n[options] [command [arguments]]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This program\nqueries or changes properties on the devices loaded by the\nwacom driver. The modification of properties happens at\nruntime and is not persistent through X server restarts.</p>\n\n<h2>GENERAL OPTIONS\n<a name=\"GENERAL OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-d,\n--display</b> display_name</p>\n\n<p style=\"margin-left:22%;\">Connect to the X server\nspecified in display_name; see X(7).</p>\n\n<p style=\"margin-left:11%;\"><b>-h, --help</b></p>\n\n<p style=\"margin-left:22%;\">Prints a short help.</p>\n\n<p style=\"margin-left:11%;\"><b>-v, --verbose</b></p>\n\n<p style=\"margin-left:22%;\">Enable verbose output, useful\nfor debugging.</p>\n\n<p style=\"margin-left:11%;\"><b>-V, --version</b></p>\n\n<p style=\"margin-left:22%;\">Display version number and\nexit.</p>\n\n<h2>COMMANDS\n<a name=\"COMMANDS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Allowed\ncommands are <b>list, get,</b> and <b>set.</b> The command\nmay be specified with or without one or two preceding\ndashes, i.e. <b>--list</b> is equivalent to <b>-list</b> and\n<b>list.</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>LIST\nCOMMANDS <br>\nlist</b> devices</p>\n\n<p style=\"margin-left:22%;\">List known devices. Only input\ndevices managed by the wacom driver are listed.</p>\n\n<p style=\"margin-left:11%;\"><b>list</b> parameters</p>\n\n<p style=\"margin-left:22%;\">List known parameters. List all\nparameters suitable for the <b>get</b> or the <b>set</b>\ncommand. Note that not all parameters are available on all\ndevice types.</p>\n\n<p style=\"margin-left:11%;\"><b>list</b> modifiers</p>\n\n<p style=\"margin-left:22%;\">List the aliases for modifiers\nand other keys that can be used when setting button action\nmappings.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>GET COMMANDS\n<br>\nget</b> device_name parameter</p>\n\n<p style=\"margin-left:22%;\">Get the current settings for\nthe parameter on the given device. Note that not all\nparameters are available on all device types. The special\nparameter name &quot;all&quot; may be provided to display\nall current settings on the device.</p>\n\n<p style=\"margin-left:11%;\">By default, options are printed\non the commandline in the respective <br>\nformat.</p>\n\n<p style=\"margin-left:22%;\">The output format may be\naltered with one of the following options:</p>\n\n<p style=\"margin-left:11%;\"><b>-s, --shell</b></p>\n\n<p style=\"margin-left:22%;\">Display the output in shell\nformat, i.e. as shell commands to xsetwacom to reproduce the\nsame parameter.</p>\n\n<p style=\"margin-left:11%;\"><b>-x, --xconf</b></p>\n\n<p style=\"margin-left:22%;\">Display the output in xorg.conf\nformat, i.e. as option lines that may be added to the\nInputDevice section in the xorg.conf.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>SET COMMANDS\n<br>\nset</b> device_name parameter [value]</p>\n\n<p style=\"margin-left:22%;\">Set the parameter value on the\ngiven device to the value provided. Note that not all\nparameters are writable, some are read-only and result in an\nerror when trying to be modified.</p>\n\n<h2>PARAMETERS\n<a name=\"PARAMETERS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Not all\nparameters are available on all tools. Use the get command\nwith the parameter or &quot;all&quot; parameter for specific\ninput tool applicable parameters and current settings.\n<b><br>\nArea</b> x1 y1 x2 y2</p>\n\n<p style=\"margin-left:22%;\">Set the tablet input area in\ndevice coordinates in the form top left x/y and bottom right\nx/y. Top left and bottom right are defined in the\ndevice&rsquo;s native orientation, regardless of the actual\nrotation currently applied. Input outside of these\ncoordinates will be clipped to the edges of the area\ndefined. Default: 0 0 x2 y2; with x2 and y2 tablet\nspecific.</p>\n\n<p style=\"margin-left:11%;\"><b>Button</b> button-number\n[mapping]</p>\n\n<p style=\"margin-left:22%;\">Set a mapping for the specified\nbutton-number. Mappings take the form of either a single\nnumeric button or an &rsquo;action&rsquo; to be performed.\nIf no mapping is provided, the default mapping is restored.\nIf button-number is mapped to 0, the Button event is\nignored.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Numeric button\nmappings indicate what X11 button number the given\nbutton-number should correspond to. For example, a mapping\nof &quot;3&quot; means a press of the given button-number\nwill produce a press of X11 button 3 (i.e. right click).</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Action mappings\nallow button presses to perform many events. They take the\nform of a string of keywords and arguments.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The\n&quot;key&quot; keyword is followed by a list of key names.\nThese can optionally be preceded by &quot;+&quot; for press\nand &quot;-&quot; for release. If +/- is not given,\npress-and-release is assumed, except for modifier keys which\nare left pressed. Key names can be X11 KeySyms or some\naliases such as &rsquo;shift&rsquo; or &rsquo;f1&rsquo; (the\nfull list can be seen with the <b>list modifiers</b>\ncommand).</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">To assign a key\nthat is not in the modifiers list, use the KeySym in\n/usr/include/X11/keysymdef.h with the XK_ prefix removed or\nits actual value as is. For example, XK_BackSpace should be\nspecified as &quot;BackSpace&quot;. &quot;0xff80&quot; can\nalso be used to replace &quot;BackSpace&quot; since\nit&rsquo;s the unique KeySym value of Backspace key.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Here is a\ncombined example: &quot;key +a shift b shift -a 0xff0d&quot;\nconverts the button into a series of keystrokes. In this\nexample, &quot;press a, press shift, press and release b,\nrelease shift, release a, then press and release\nenter&quot;. &quot;key +a +shift b -shift -a 0xff0d&quot;\ndoes the same thing.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The\n&quot;button&quot; keyword is similar except that its\narguments are X11 button numbers.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The\n&quot;modetoggle&quot; keyword is also recognized; it takes\nno arguments, and toggles the device mode between relative\nand absolute pointer tracking.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The\n&quot;pan&quot; keyword causes the driver to send scroll\nevents while the pen is dragged. This makes it easy to\nscroll through lists and documents, pan around 2D canvases,\nand zoom in/out of 3D scenes (exact behavior depends on\napplication interpretation of scrollwheel events). Dragging\nthe pen up/down will send scrollwheel down/up events;\ndragging it left/right will send scrollwheel right/left\nevents.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The events in\nthe action mapping are sent when the physical button is\npressed. If the action mapping leaves any buttons or keys\npressed (such as a modifier key), they will be released when\nthe physical button is released.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Multiple\nkeywords may be present in one action if desired: for\nexample &quot;key +ctrl button 5 key -ctrl&quot;. Each\nkeyword takes all arguments until the next keyword.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">A maximum of\n256 presses and/or releases can be specified in an action\nmapping.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The driver can\nonly simulate physical key events but not keysyms and\nxsetwacom translates the mapping sequence into such events.\nThus, symbols on the same physical key will generate the\nsame event. For example, &rsquo;1&rsquo; and &rsquo;!&rsquo;\nare on the same key on a US keyboard and thus have the same\nkeycode). For access to keys on a higher shift level, the\nsequence should be entered as it would be typed on a\nphysical keyboard. For example, a exclamation mark is\nentered by the sequence of &quot;key +shift 1\n-shift&quot;.</p>\n\n<p style=\"margin-left:11%;\"><b>BindToSerial</b>\n[serial|0]</p>\n\n<p style=\"margin-left:22%;\">Bind the device to the tool\nwith the specified serial number. Once bound, the device\nwill ignore events from other tools. A serial of 0 means the\ndevice is unbound and will react to any tool of the matching\ntype. Default: 0</p>\n\n<p style=\"margin-left:11%;\"><b>MapToOutput</b> [output]</p>\n\n<p style=\"margin-left:22%;\">Map the tablet&rsquo;s input\narea to a given output (e.g. &quot;VGA1&quot;). Output names\nmay either be the name of a head available through the\nXRandR extension, or an X11 geometry string of the form\nWIDTHxHEIGHT+X+Y. To switch to the next available output,\nthe &quot;next&quot; keyword is also supported. This will\ncycle between the individual monitors connected to the\nsystem, and then the entire desktop. The mapping may be\nreset to the entire desktop at any time with the output name\n&quot;desktop&quot;. Users of the NVIDIA binary driver\nshould use the output names &quot;HEAD-0&quot; and\n&quot;HEAD-1&quot; until the driver supports XRandR 1.2 or\nlater.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The output\nmapping configuration is a onetime setting and does not\ntrack output reconfigurations; the command needs to be\nre-run whenever the output configuration changes. When used\nwith tablet rotation, the tablet must be rotated before it\nis mapped to the new screen. This parameter is write-only\nand cannot be queried.</p>\n\n<p style=\"margin-left:11%;\"><b>Mode</b>\nAbsolute|Relative</p>\n\n<p style=\"margin-left:22%;\">Set the device mode as either\nRelative or Absolute. Relative means pointer tracking for\nthe device will function like a mouse, whereas Absolute\nmeans the pointer corresponds to the device&rsquo;s actual\nposition on the tablet or tablet PC screen. Default:\nAbsolute for stylus, eraser and tablet PC touch; Relative\nfor cursor and tablet touch.</p>\n\n<p style=\"margin-left:11%;\"><b>PressureCurve</b> x1 y1 x2\ny2</p>\n\n<p style=\"margin-left:22%;\">A Bezier curve of third order,\ncomposed of two anchor points (0,0 and 100,100) and two user\nmodifiable control points that define the curve&rsquo;s\nshape. Raise the curve (x1&lt;y1 x2&lt;y2) to\n&quot;soften&quot; the feel and lower the curve (x1&gt;y1\nx2&gt;y2) for a &quot;firmer&quot; feel. Sigmoid shaped\ncurves are permitted (x1&gt;y1 x2&lt;y2 or x1&lt;y1\nx2&gt;y2). Default: 0 0 100 100, a linear curve; range of 0\nto 100 for all four values.</p>\n\n<p style=\"margin-left:11%;\"><b>RawSample</b> level</p>\n\n<p style=\"margin-left:22%;\">Set the sample window size (a\nsliding average sampling window) for incoming input tool raw\ndata points. Default: 4, range of 1 to 20.</p>\n\n<p style=\"margin-left:11%;\"><b>Rotate</b>\nnone|half|cw|ccw</p>\n\n<p style=\"margin-left:22%;\">Set the tablet to the given\nrotation: <br>\nnone: the tablet is not rotated and uses its natural\nrotation <br>\nhalf: the tablet is rotated by 180 degrees (upside-down)\n<br>\ncw: the tablet is rotated 90 degrees clockwise <br>\nccw: the tablet is rotated 90 degrees counter-clockwise</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Rotation is a\ntablet-wide option: rotation of one tool affects all other\ntools associated with the same tablet. When the tablet is\nphysically rotated, rotate any tool to the corresponding\norientation. Default: none</p>\n\n<p style=\"margin-left:11%;\"><b>Suppress</b> level</p>\n\n<p style=\"margin-left:22%;\">Set the delta (difference)\ncutoff level for further processing of incoming input tool\ncoordinate values. For example a X or Y coordinate event\nwill be sent only if the change between the current X or Y\ncoordinate and the previous one is greater than the Suppress\nvalue. The same applies to pressure level (Z coordinate) and\nTilt rotation values. With a current absolute wheel\n(AbsWheel) or Tilt value the delta between it and the\nprevious value must be equal to or greater than the Suppress\nvalue in order to be sent on. Suppress is a tablet wide\nparameter. A specified delta level for one input tool is\napplied to all input tool coordinates. To disable\nsuppression use a level of 0. Default: 2, range of 0 to\n100.</p>\n\n<p style=\"margin-left:11%;\"><b>TabletDebugLevel</b>\nlevel</p>\n\n<p style=\"margin-left:22%;\">Set the debug level for this\ntablet to the given level. This only affects code paths that\nare shared between several tools on the same physical\ntablet. A higher level means more fine-grained debug\nmessages, a level of 0 turns debugging off for this tool.\nRequires the driver to be built with debugging enabled. See\nalso ToolDebugLevel. Default: 0, range of 0 to 12.</p>\n\n<p style=\"margin-left:11%;\"><b>TabletPCButton</b>\non|off</p>\n\n<p style=\"margin-left:22%;\">If on, the stylus must be in\ncontact with the screen for a stylus side button to work. If\noff, stylus buttons will work once the stylus is in\nproximity of the tablet (regardless of whether it is\ntouching the screen). Default: on for Tablet PCs; off for\nall other models.</p>\n\n<p style=\"margin-left:11%;\"><b>ToolSerialPrevious</b></p>\n\n<p style=\"margin-left:22%;\">Get the serial number of the\ntool that was last in proximity last. This serial number is\nupdated whenever the tool goes out of proximity. If the\ncurrent tool went out of proximity once, this serial number\nis the one of the current tool. This is a read-only\nparameter.</p>\n\n<p style=\"margin-left:11%;\"><b>Touch</b> on|off</p>\n\n<p style=\"margin-left:22%;\">If on, touch events are\nreported to userland, i.e., system cursor moves when user\ntouches the tablet. If off, touch events are ignored.\nDefault: on for devices that support touch; off for all\nother models.</p>\n\n<p style=\"margin-left:11%;\"><b>HWTouchSwitchState</b>\non|off</p>\n\n<p style=\"margin-left:22%;\">If on, it means touch switch is\nturned off. That is, touch events are reported to userland.\nIf off, touch switch is turned on, i.e., touch events are\nignored. This is a read-only parameter. Initial touch switch\nstate is retrieved from the kernel when X driver starts.</p>\n\n<p style=\"margin-left:11%;\"><b>CursorProximity</b>\ndistance</p>\n\n<p style=\"margin-left:22%;\">Set the distance at which a\nrelative tool is treated as being out of proximity. Beyond\nthis distance the cursor will stop responding to tool\nmotion. The default value for pucks is 10 (Intuos Pro) or 42\n(Intuos/Bamboo). The default value for pens is 30.</p>\n\n<p style=\"margin-left:11%;\"><b>Threshold</b> level</p>\n\n<p style=\"margin-left:22%;\">Set the minimum pressure\nnecessary to generate a Button event for the stylus tip,\neraser, or touch. The pressure levels of all tablets are\nnormalized to 2048 levels irregardless of the actual\nhardware supported levels. This parameter is independent of\nthe PressureCurve parameter. Default: 27, range of 0 to\n2047.</p>\n\n<p style=\"margin-left:11%;\"><b>ToolDebugLevel</b> level</p>\n\n<p style=\"margin-left:22%;\">Set the debug level for this\ntool to the given level. This only affects code paths that\nare specific to a given tool. A higher level means more\nfine-grained debug messages, a level of 0 turns debugging\noff for this tool. Requires the driver to be built with\ndebugging enabled. See also TabletDebugLevel. Default: 0,\nrange of 0 to 12.</p>\n\n<p style=\"margin-left:11%;\"><b>PressureRecalibration</b>\non|off</p>\n\n<p style=\"margin-left:22%;\">If the initial pressure of a\ndevice is != 0 the driver recalibrates the pressure range.\nThis is to account for worn out devices. The downside is\nthat when the user hits the tablet very hard the initial\npressure reading may be unequal to zero even for a perfectly\ngood pen. If the consecutive pressure readings are not\nhigher than the initial pressure by a threshold no button\nevent will be generated. This option allows to disable the\nrecalibration. Default: on</p>\n\n<p style=\"margin-left:11%;\"><b>PanScrollThreshold</b>\ndistance</p>\n\n<p style=\"margin-left:22%;\">This specifies the distance the\npen must move (in tablet units) before a scroll event is\ngenerated when using the &quot;pan&quot; action. Smaller\nvalues will require less distance and be more sensitive.\nLarger values will require more distance and be less\nsensitive. Default: 1300 or 2600 depending on tablet\nresolution (corresponds to 13 mm of distance).</p>\n\n<h2>WAYLAND SUPPORT\n<a name=\"WAYLAND SUPPORT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This tool\nprovides access to the device properties implemented in the\n<b>xf86-input-wacom</b> X server input module. It does not\nwork under a Wayland compositor as the input module is not\nactive. <br>\nSee\nhttps://github.com/linuxwacom/xf86-input-wacom/wiki/Wayland\nfor <br>\ndetails.</p>\n\n<h2>AUTHORS\n<a name=\"AUTHORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Peter Hutterer\n&lt;peter.hutterer@redhat.com&gt;</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Xorg(1),\nwacom(4), xorg.conf(5), X(7)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">More\ninformation is available at\nhttps://github.com/linuxwacom/xf86-input-wacom</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#GENERAL OPTIONS\">GENERAL OPTIONS</a>","<a href=\"#COMMANDS\">COMMANDS</a>","<a href=\"#PARAMETERS\">PARAMETERS</a>","<a href=\"#WAYLAND SUPPORT\">WAYLAND SUPPORT</a>","<a href=\"#AUTHORS\">AUTHORS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"]}