{"name":"git-restore","description":"git-restore -\nRestore working tree files","body":"\n\n<h1 align=\"center\">GIT-RESTORE</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">git-restore -\nRestore working tree files</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>git\nrestore</i> [&lt;options&gt;] [--source=&lt;tree&gt;]\n[--staged] [--worktree] [--] &lt;pathspec&gt;... <i><br>\ngit restore</i> [&lt;options&gt;] [--source=&lt;tree&gt;]\n[--staged] [--worktree] --pathspec-from-file=&lt;file&gt;\n[--pathspec-file-nul] <i><br>\ngit restore</i> (-p|--patch) [&lt;options&gt;]\n[--source=&lt;tree&gt;] [--staged] [--worktree] [--]\n[&lt;pathspec&gt;...]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Restore\nspecified paths in the working tree with some contents from\na restore source. If a path is tracked but does not exist in\nthe restore source, it will be removed to match the\nsource.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The command can\nalso be used to restore the content in the index with\n<b>--staged</b>, or restore both the working tree and the\nindex with <b>--staged --worktree</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">By default, if\n<b>--staged</b> is given, the contents are restored from\n<b>HEAD</b>, otherwise from the index. Use <b>--source</b>\nto restore from a different commit.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See\n&quot;Reset, restore and revert&quot; in <a href=\"https://man.page/1/git\">git(1)</a> for\nthe differences between the three commands.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">THIS COMMAND IS\nEXPERIMENTAL. THE BEHAVIOR MAY CHANGE.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">-s\n&lt;tree&gt;, --source=&lt;tree&gt;</p>\n\n<p style=\"margin-left:17%;\">Restore the working tree files\nwith the content from the given tree. It is common to\nspecify the source tree by naming a commit, branch or tag\nassociated with it.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If not\nspecified, the contents are restored from <b>HEAD</b> if\n<b>--staged</b> is given, otherwise from the index.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">As a special\ncase, you may use <b>&quot;A...B&quot;</b> as a shortcut for\nthe merge base of <b>A</b> and <b>B</b> if there is exactly\none merge base. You can leave out at most one of <b>A</b>\nand <b>B</b>, in which case it defaults to <b>HEAD</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-p, --patch</p>\n\n<p style=\"margin-left:17%;\">Interactively select hunks in\nthe difference between the restore source and the restore\nlocation. See the &ldquo;Interactive Mode&rdquo; section of\n<a href=\"https://man.page/1/git-add\">git-add(1)</a> to learn how to operate the <b>--patch</b>\nmode.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that\n<b>--patch</b> can accept no pathspec and will prompt to\nrestore all modified paths.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-W, --worktree,\n-S, --staged</p>\n\n<p style=\"margin-left:17%;\">Specify the restore location.\nIf neither option is specified, by default the working tree\nis restored. Specifying <b>--staged</b> will only restore\nthe index. Specifying both restores both.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-q, --quiet</p>\n\n<p style=\"margin-left:17%;\">Quiet, suppress feedback\nmessages. Implies <b>--no-progress</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--progress,\n--no-progress</p>\n\n<p style=\"margin-left:17%;\">Progress status is reported on\nthe standard error stream by default when it is attached to\na terminal, unless <b>--quiet</b> is specified. This flag\nenables progress reporting even if not attached to a\nterminal, regardless of <b>--quiet</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--ours,\n--theirs</p>\n\n<p style=\"margin-left:17%;\">When restoring files in the\nworking tree from the index, use stage #2 (<i>ours</i>) or\n#3 (<i>theirs</i>) for unmerged paths.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that\nduring <b>git rebase</b> and <b>git pull --rebase</b>,\n<i>ours</i> and <i>theirs</i> may appear swapped. See the\nexplanation of the same options in <a href=\"https://man.page/1/git-checkout\">git-checkout(1)</a>\nfor details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-m, --merge</p>\n\n<p style=\"margin-left:17%;\">When restoring files on the\nworking tree from the index, recreate the conflicted merge\nin the unmerged paths.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--conflict=&lt;style&gt;</p>\n\n<p style=\"margin-left:17%;\">The same as <b>--merge</b>\noption above, but changes the way the conflicting hunks are\npresented, overriding the <b>merge.conflictStyle</b>\nconfiguration variable. Possible values are\n&quot;merge&quot; (default) and &quot;diff3&quot; (in\naddition to what is shown by &quot;merge&quot; style, shows\nthe original contents).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--ignore-unmerged</p>\n\n<p style=\"margin-left:17%;\">When restoring files on the\nworking tree from the index, do not abort the operation if\nthere are unmerged entries and neither <b>--ours</b>,\n<b>--theirs</b>, <b>--merge</b> or <b>--conflict</b> is\nspecified. Unmerged paths on the working tree are left\nalone.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--ignore-skip-worktree-bits</p>\n\n<p style=\"margin-left:17%;\">In sparse checkout mode, by\ndefault is to only update entries matched by\n<b>&lt;pathspec&gt;</b> and sparse patterns in\n$GIT_DIR/info/sparse-checkout. This option ignores the\nsparse patterns and unconditionally restores any files in\n<b>&lt;pathspec&gt;</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--recurse-submodules,\n--no-recurse-submodules</p>\n\n<p style=\"margin-left:17%;\">If <b>&lt;pathspec&gt;</b>\nnames an active submodule and the restore location includes\nthe working tree, the submodule will only be updated if this\noption is given, in which case its working tree will be\nrestored to the commit recorded in the superproject, and any\nlocal modifications overwritten. If nothing (or\n<b>--no-recurse-submodules</b>) is used, submodules working\ntrees will not be updated. Just like <a href=\"https://man.page/1/git-checkout\">git-checkout(1)</a>,\nthis will detach <b>HEAD</b> of the submodule.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--overlay,\n--no-overlay</p>\n\n<p style=\"margin-left:17%;\">In overlay mode, the command\nnever removes files when restoring. In no-overlay mode,\ntracked files that do not appear in the <b>--source</b> tree\nare removed, to make them match <b>&lt;tree&gt;</b> exactly.\nThe default is no-overlay mode.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--pathspec-from-file=&lt;file&gt;</p>\n\n<p style=\"margin-left:17%;\">Pathspec is passed in\n<b>&lt;file&gt;</b> instead of commandline args. If\n<b>&lt;file&gt;</b> is exactly <b>-</b> then standard input\nis used. Pathspec elements are separated by LF or CR/LF.\nPathspec elements can be quoted as explained for the\nconfiguration variable <b>core.quotePath</b> (see\n<a href=\"https://man.page/1/git-config\">git-config(1)</a>). See also <b>--pathspec-file-nul</b>\nand global <b>--literal-pathspecs</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--pathspec-file-nul</p>\n\n<p style=\"margin-left:17%;\">Only meaningful with\n<b>--pathspec-from-file</b>. Pathspec elements are separated\nwith NUL character and all other characters are taken\nliterally (including newlines and quotes).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--</p>\n\n<p style=\"margin-left:17%;\">Do not interpret any more\narguments as options.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;pathspec&gt;...</p>\n\n<p style=\"margin-left:17%;\">Limits the paths affected by\nthe operation.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For more\ndetails, see the <i>pathspec</i> entry in\n<a href=\"https://man.page/7/gitglossary\">gitglossary(7)</a>.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nsequence switches to the <b>master</b> branch, reverts the\n<b>Makefile</b> to two revisions back, deletes hello.c by\nmistake, and gets it back from the index.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git switch\nmaster <br>\n$ git restore --source master~2 Makefile <b>(1)</b> <br>\n$ rm -f hello.c <br>\n$ git restore hello.c <b>(2)</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>1.</b> take\na file out of another commit <b><br>\n2.</b> restore hello.c from the index</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If you want to\nrestore <i>all</i> C source files to match the version in\nthe index, you can say</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git restore\n'*.c'</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note the quotes\naround <b>*.c</b>. The file <b>hello.c</b> will also be\nrestored, even though it is no longer in the working tree,\nbecause the file globbing is used to match entries in the\nindex (not in the working tree by the shell).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To restore all\nfiles in the current directory</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git restore\n.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">or to restore\nall working tree files with <i>top</i> pathspec magic (see\n<a href=\"https://man.page/7/gitglossary\">gitglossary(7)</a>)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git restore\n:/</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To restore a\nfile in the index to match the version in <b>HEAD</b> (this\nis the same as using <a href=\"https://man.page/1/git-reset\">git-reset(1)</a>)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git restore\n--staged hello.c</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">or you can\nrestore both the index and the working tree (this the same\nas using <a href=\"https://man.page/1/git-checkout\">git-checkout(1)</a>)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git restore\n--source=HEAD --staged --worktree hello.c</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">or the short\nform which is more practical but less readable:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git restore\n-s@ -SW hello.c</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/git-checkout\">git-checkout(1)</a>,\n<a href=\"https://man.page/1/git-reset\">git-reset(1)</a></p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Part of the\n<a href=\"https://man.page/1/git\">git(1)</a> suite</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#GIT\">GIT</a>"]}