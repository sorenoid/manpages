{"name":"git-branch","body":"\n\n<h1 align=\"center\">GIT-BRANCH</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">git-branch -\nList, create, or delete branches</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>git\nbranch</i> [--color[=&lt;when&gt;] | --no-color]\n[--show-current] <br>\n[-v [--abbrev=&lt;n&gt; | --no-abbrev]] <br>\n[--column[=&lt;options&gt;] | --no-column]\n[--sort=&lt;key&gt;] <br>\n[--merged [&lt;commit&gt;]] [--no-merged [&lt;commit&gt;]]\n<br>\n[--contains [&lt;commit&gt;]] [--no-contains\n[&lt;commit&gt;]] <br>\n[--points-at &lt;object&gt;] [--format=&lt;format&gt;] <br>\n[(-r | --remotes) | (-a | --all)] <br>\n[--list] [&lt;pattern&gt;...] <i><br>\ngit branch</i> [--track | --no-track] [-f]\n&lt;branchname&gt; [&lt;start-point&gt;] <i><br>\ngit branch</i> (--set-upstream-to=&lt;upstream&gt; | -u\n&lt;upstream&gt;) [&lt;branchname&gt;] <i><br>\ngit branch</i> --unset-upstream [&lt;branchname&gt;] <i><br>\ngit branch</i> (-m | -M) [&lt;oldbranch&gt;]\n&lt;newbranch&gt; <i><br>\ngit branch</i> (-c | -C) [&lt;oldbranch&gt;]\n&lt;newbranch&gt; <i><br>\ngit branch</i> (-d | -D) [-r] &lt;branchname&gt;... <i><br>\ngit branch</i> --edit-description [&lt;branchname&gt;]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<b>--list</b> is given, or if there are no non-option\narguments, existing branches are listed; the current branch\nwill be highlighted in green and marked with an asterisk.\nAny branches checked out in linked worktrees will be\nhighlighted in cyan and marked with a plus sign. Option\n<b>-r</b> causes the remote-tracking branches to be listed,\nand option <b>-a</b> shows both local and remote\nbranches.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If a\n<b>&lt;pattern&gt;</b> is given, it is used as a shell\nwildcard to restrict the output to matching branches. If\nmultiple patterns are given, a branch is shown if it matches\nany of the patterns.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that when\nproviding a <b>&lt;pattern&gt;</b>, you must use\n<b>--list</b>; otherwise the command may be interpreted as\nbranch creation.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">With\n<b>--contains</b>, shows only the branches that contain the\nnamed commit (in other words, the branches whose tip commits\nare descendants of the named commit), <b>--no-contains</b>\ninverts it. With <b>--merged</b>, only branches merged into\nthe named commit (i.e. the branches whose tip commits are\nreachable from the named commit) will be listed. With\n<b>--no-merged</b> only branches not merged into the named\ncommit will be listed. If the &lt;commit&gt; argument is\nmissing it defaults to <b>HEAD</b> (i.e. the tip of the\ncurrent branch).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\ncommand&rsquo;s second form creates a new branch head named\n&lt;branchname&gt; which points to the current <b>HEAD</b>,\nor &lt;start-point&gt; if given. As a special case, for\n&lt;start-point&gt;, you may use <b>&quot;A...B&quot;</b> as\na shortcut for the merge base of <b>A</b> and <b>B</b> if\nthere is exactly one merge base. You can leave out at most\none of <b>A</b> and <b>B</b>, in which case it defaults to\n<b>HEAD</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that this\nwill create the new branch, but it will not switch the\nworking tree to it; use &quot;git switch\n&lt;newbranch&gt;&quot; to switch to the new branch.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When a local\nbranch is started off a remote-tracking branch, Git sets up\nthe branch (specifically the\n<b>branch.&lt;name&gt;.remote</b> and\n<b>branch.&lt;name&gt;.merge</b> configuration entries) so\nthat <i>git pull</i> will appropriately merge from the\nremote-tracking branch. This behavior may be changed via the\nglobal <b>branch.autoSetupMerge</b> configuration flag. That\nsetting can be overridden by using the <b>--track</b> and\n<b>--no-track</b> options, and changed later using <b>git\nbranch --set-upstream-to</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">With a\n<b>-m</b> or <b>-M</b> option, &lt;oldbranch&gt; will be\nrenamed to &lt;newbranch&gt;. If &lt;oldbranch&gt; had a\ncorresponding reflog, it is renamed to match\n&lt;newbranch&gt;, and a reflog entry is created to remember\nthe branch renaming. If &lt;newbranch&gt; exists, -M must be\nused to force the rename to happen.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <b>-c</b>\nand <b>-C</b> options have the exact same semantics as\n<b>-m</b> and <b>-M</b>, except instead of the branch being\nrenamed, it will be copied to a new name, along with its\nconfig and reflog.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">With a\n<b>-d</b> or <b>-D</b> option, <b>&lt;branchname&gt;</b>\nwill be deleted. You may specify more than one branch for\ndeletion. If the branch currently has a reflog then the\nreflog will also be deleted.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Use <b>-r</b>\ntogether with <b>-d</b> to delete remote-tracking branches.\nNote, that it only makes sense to delete remote-tracking\nbranches if they no longer exist in the remote repository or\nif <i>git fetch</i> was configured not to fetch them again.\nSee also the <i>prune</i> subcommand of <a href=\"https://man.page/1/git-remote\">git-remote(1)</a>\nfor a way to clean up all obsolete remote-tracking\nbranches.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">-d,\n--delete</p>\n\n<p style=\"margin-left:17%;\">Delete a branch. The branch\nmust be fully merged in its upstream branch, or in\n<b>HEAD</b> if no upstream was set with <b>--track</b> or\n<b>--set-upstream-to</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-D</p>\n\n<p style=\"margin-left:17%;\">Shortcut for <b>--delete\n--force</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--create-reflog</p>\n\n<p style=\"margin-left:17%;\">Create the branch&rsquo;s\nreflog. This activates recording of all changes made to the\nbranch ref, enabling use of date based sha1 expressions such\nas &quot;&lt;branchname&gt;@{yesterday}&quot;. Note that in\nnon-bare repositories, reflogs are usually enabled by\ndefault by the <b>core.logAllRefUpdates</b> config option.\nThe negated form <b>--no-create-reflog</b> only overrides an\nearlier <b>--create-reflog</b>, but currently does not\nnegate the setting of <b>core.logAllRefUpdates</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-f, --force</p>\n\n<p style=\"margin-left:17%;\">Reset &lt;branchname&gt; to\n&lt;startpoint&gt;, even if &lt;branchname&gt; exists\nalready. Without <b>-f</b>, <i>git branch</i> refuses to\nchange an existing branch. In combination with <b>-d</b> (or\n<b>--delete</b>), allow deleting the branch irrespective of\nits merged status, or whether it even points to a valid\ncommit. In combination with <b>-m</b> (or <b>--move</b>),\nallow renaming the branch even if the new branch name\nalready exists, the same applies for <b>-c</b> (or\n<b>--copy</b>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-m, --move</p>\n\n<p style=\"margin-left:17%;\">Move/rename a branch, together\nwith its config and reflog.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-M</p>\n\n<p style=\"margin-left:17%;\">Shortcut for <b>--move\n--force</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-c, --copy</p>\n\n<p style=\"margin-left:17%;\">Copy a branch, together with\nits config and reflog.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-C</p>\n\n<p style=\"margin-left:17%;\">Shortcut for <b>--copy\n--force</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--color[=&lt;when&gt;]</p>\n\n<p style=\"margin-left:17%;\">Color branches to highlight\ncurrent, local, and remote-tracking branches. The value must\nbe always (the default), never, or auto.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--no-color</p>\n\n<p style=\"margin-left:17%;\">Turn off branch colors, even\nwhen the configuration file gives the default to color\noutput. Same as <b>--color=never</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-i,\n--ignore-case</p>\n\n<p style=\"margin-left:17%;\">Sorting and filtering branches\nare case insensitive.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--column[=&lt;options&gt;],\n--no-column</p>\n\n<p style=\"margin-left:17%;\">Display branch listing in\ncolumns. See configuration variable <b>column.branch</b> for\noption syntax. <b>--column</b> and <b>--no-column</b>\nwithout options are equivalent to <i>always</i> and\n<i>never</i> respectively.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This option is\nonly applicable in non-verbose mode.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-r,\n--remotes</p>\n\n<p style=\"margin-left:17%;\">List or delete (if used with\n-d) the remote-tracking branches. Combine with <b>--list</b>\nto match the optional pattern(s).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-a, --all</p>\n\n<p style=\"margin-left:17%;\">List both remote-tracking\nbranches and local branches. Combine with <b>--list</b> to\nmatch optional pattern(s).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-l, --list</p>\n\n<p style=\"margin-left:17%;\">List branches. With optional\n<b>&lt;pattern&gt;...</b>, e.g. <b>git branch --list\n'maint-*'</b>, list only the branches that match the\npattern(s).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--show-current</p>\n\n<p style=\"margin-left:17%;\">Print the name of the current\nbranch. In detached HEAD state, nothing is printed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-v, -vv,\n--verbose</p>\n\n<p style=\"margin-left:17%;\">When in list mode, show sha1\nand commit subject line for each head, along with\nrelationship to upstream branch (if any). If given twice,\nprint the path of the linked worktree (if any) and the name\nof the upstream branch, as well (see also <b>git remote show\n&lt;remote&gt;</b>). Note that the current worktree&rsquo;s\nHEAD will not have its path printed (it will always be your\ncurrent directory).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-q, --quiet</p>\n\n<p style=\"margin-left:17%;\">Be more quiet when creating or\ndeleting a branch, suppressing non-error messages.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--abbrev=&lt;n&gt;</p>\n\n<p style=\"margin-left:17%;\">In the verbose listing that\nshow the commit object name, show the shortest prefix that\nis at least <i>&lt;n&gt;</i> hexdigits long that uniquely\nrefers the object. The default value is 7 and can be\noverridden by the <b>core.abbrev</b> config option.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--no-abbrev</p>\n\n<p style=\"margin-left:17%;\">Display the full sha1s in the\noutput listing rather than abbreviating them.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-t, --track</p>\n\n<p style=\"margin-left:17%;\">When creating a new branch, set\nup <b>branch.&lt;name&gt;.remote</b> and\n<b>branch.&lt;name&gt;.merge</b> configuration entries to\nmark the start-point branch as &quot;upstream&quot; from the\nnew branch. This configuration will tell git to show the\nrelationship between the two branches in <b>git status</b>\nand <b>git branch -v</b>. Furthermore, it directs <b>git\npull</b> without arguments to pull from the upstream when\nthe new branch is checked out.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This behavior\nis the default when the start point is a remote-tracking\nbranch. Set the branch.autoSetupMerge configuration variable\nto <b>false</b> if you want <b>git switch</b>, <b>git\ncheckout</b> and <b>git branch</b> to always behave as if\n<b>--no-track</b> were given. Set it to <b>always</b> if you\nwant this behavior when the start-point is either a local or\nremote-tracking branch.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--no-track</p>\n\n<p style=\"margin-left:17%;\">Do not set up\n&quot;upstream&quot; configuration, even if the\nbranch.autoSetupMerge configuration variable is true.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--set-upstream</p>\n\n<p style=\"margin-left:17%;\">As this option had confusing\nsyntax, it is no longer supported. Please use <b>--track</b>\nor <b>--set-upstream-to</b> instead.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-u\n&lt;upstream&gt;, --set-upstream-to=&lt;upstream&gt;</p>\n\n<p style=\"margin-left:17%;\">Set up &lt;branchname&gt;'s\ntracking information so &lt;upstream&gt; is considered\n&lt;branchname&gt;'s upstream branch. If no\n&lt;branchname&gt; is specified, then it defaults to the\ncurrent branch.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--unset-upstream</p>\n\n<p style=\"margin-left:17%;\">Remove the upstream information\nfor &lt;branchname&gt;. If no branch is specified it\ndefaults to the current branch.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--edit-description</p>\n\n<p style=\"margin-left:17%;\">Open an editor and edit the\ntext to explain what the branch is for, to be used by\nvarious other commands (e.g. <b>format-patch</b>,\n<b>request-pull</b>, and <b>merge</b> (if enabled)).\nMulti-line explanations may be used.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--contains\n[&lt;commit&gt;]</p>\n\n<p style=\"margin-left:17%;\">Only list branches which\ncontain the specified commit (HEAD if not specified).\nImplies <b>--list</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--no-contains\n[&lt;commit&gt;]</p>\n\n<p style=\"margin-left:17%;\">Only list branches which\ndon&rsquo;t contain the specified commit (HEAD if not\nspecified). Implies <b>--list</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--merged\n[&lt;commit&gt;]</p>\n\n<p style=\"margin-left:17%;\">Only list branches whose tips\nare reachable from the specified commit (HEAD if not\nspecified). Implies <b>--list</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--no-merged\n[&lt;commit&gt;]</p>\n\n<p style=\"margin-left:17%;\">Only list branches whose tips\nare not reachable from the specified commit (HEAD if not\nspecified). Implies <b>--list</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;branchname&gt;</p>\n\n<p style=\"margin-left:17%;\">The name of the branch to\ncreate or delete. The new branch name must pass all checks\ndefined by <a href=\"https://man.page/1/git-check-ref-format\">git-check-ref-format(1)</a>. Some of these\nchecks may restrict the characters allowed in a branch\nname.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;start-point&gt;</p>\n\n<p style=\"margin-left:17%;\">The new branch head will point\nto this commit. It may be given as a branch name, a\ncommit-id, or a tag. If this option is omitted, the current\nHEAD will be used instead.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;oldbranch&gt;</p>\n\n<p style=\"margin-left:17%;\">The name of an existing branch\nto rename.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;newbranch&gt;</p>\n\n<p style=\"margin-left:17%;\">The new name for an existing\nbranch. The same restrictions as for &lt;branchname&gt;\napply.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--sort=&lt;key&gt;</p>\n\n<p style=\"margin-left:17%;\">Sort based on the key given.\nPrefix <b>-</b> to sort in descending order of the value.\nYou may use the --sort=&lt;key&gt; option multiple times, in\nwhich case the last key becomes the primary key. The keys\nsupported are the same as those in <b>git for-each-ref</b>.\nSort order defaults to the value configured for the\n<b>branch.sort</b> variable if exists, or to sorting based\non the full refname (including <b>refs/...</b> prefix). This\nlists detached HEAD (if present) first, then local branches\nand finally remote-tracking branches. See\n<a href=\"https://man.page/1/git-config\">git-config(1)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--points-at\n&lt;object&gt;</p>\n\n<p style=\"margin-left:17%;\">Only list branches of the given\nobject.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--format\n&lt;format&gt;</p>\n\n<p style=\"margin-left:17%;\">A string that interpolates\n<b>%(fieldname)</b> from a branch ref being shown and the\nobject it points at. The format is the same as that of\n<a href=\"https://man.page/1/git-for-each-ref\">git-for-each-ref(1)</a>.</p>\n\n<h2>CONFIGURATION\n<a name=\"CONFIGURATION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>pager.branch</b>\nis only respected when listing branches, i.e., when\n<b>--list</b> is used or implied. The default is to use a\npager. See <a href=\"https://man.page/1/git-config\">git-config(1)</a>.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Start\ndevelopment from a known tag</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ git clone\ngit://git.kernel.org/pub/scm/.../linux-2.6 my2.6 <br>\n$ cd my2.6 <br>\n$ git branch my2.6.14 v2.6.14 <b>(1)</b> <br>\n$ git switch my2.6.14</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>1.</b> This\nstep and the next one could be combined into a single step\nwith &quot;checkout -b my2.6.14 v2.6.14&quot;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Delete an\nunneeded branch</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ git clone\ngit://git.kernel.org/.../git.git my.git <br>\n$ cd my.git <br>\n$ git branch -d -r origin/todo origin/html origin/man\n<b>(1)</b> <br>\n$ git branch -D test <b>(2)</b></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>1.</b>\nDelete the remote-tracking branches &quot;todo&quot;,\n&quot;html&quot; and &quot;man&quot;. The next <i>fetch</i>\nor <i>pull</i> will create them again unless you configure\nthem not to. See <a href=\"https://man.page/1/git-fetch\">git-fetch(1)</a>. <b><br>\n2.</b> Delete the &quot;test&quot; branch even if the\n&quot;master&quot; branch (or whichever branch is currently\nchecked out) does not have all commits from the test\nbranch.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Listing\nbranches from a specific remote</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ git branch -r\n-l '&lt;remote&gt;/&lt;pattern&gt;' <b>(1)</b> <br>\n$ git for-each-ref\n'refs/remotes/&lt;remote&gt;/&lt;pattern&gt;' <b>(2)</b></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>1.</b> Using\n<b>-a</b> would conflate &lt;remote&gt; with any local\nbranches you happen to have been prefixed with the same\n&lt;remote&gt; pattern. <b><br>\n2. for-each-ref</b> can take a wide range of options. See\n<a href=\"https://man.page/1/git-for-each-ref\">git-for-each-ref(1)</a></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Patterns will\nnormally need quoting.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">If you are\ncreating a branch that you want to switch to immediately, it\nis easier to use the &quot;git switch&quot; command with its\n<b>-c</b> option to do the same thing with a single\ncommand.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The options\n<b>--contains</b>, <b>--no-contains</b>, <b>--merged</b> and\n<b>--no-merged</b> serve four related but different\npurposes:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<b>--contains &lt;commit&gt;</b> is used to find all\nbranches which will need special attention if &lt;commit&gt;\nwere to be rebased or amended, since those branches contain\nthe specified &lt;commit&gt;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<b>--no-contains &lt;commit&gt;</b> is the inverse of that,\ni.e. branches that don&rsquo;t contain the specified\n&lt;commit&gt;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<b>--merged</b> is used to find all branches which can be\nsafely deleted, since those branches are fully contained by\nHEAD.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n<b>--no-merged</b> is used to find branches which are\ncandidates for merging into HEAD, since those branches are\nnot fully contained by HEAD.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When combining\nmultiple <b>--contains</b> and <b>--no-contains</b> filters,\nonly references that contain at least one of the\n<b>--contains</b> commits and contain none of the\n<b>--no-contains</b> commits are shown.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When combining\nmultiple <b>--merged</b> and <b>--no-merged</b> filters,\nonly references that are reachable from at least one of the\n<b>--merged</b> commits and from none of the\n<b>--no-merged</b> commits are shown.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/git-check-ref-format\">git-check-ref-format(1)</a>,\n<a href=\"https://man.page/1/git-fetch\">git-fetch(1)</a>, <a href=\"https://man.page/1/git-remote\">git-remote(1)</a>,\n<b><font color=\"#0000FF\">&ldquo;Understanding history: What\nis a branch?&rdquo;</font></b>\n<small><font color=\"#000000\">[1]</font></small>\n<font color=\"#000000\">in the Git User&rsquo;s\nManual.</font></p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">Part\nof the <a href=\"https://man.page/1/git\">git(1)</a> suite</font></p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"12%\"></td>\n<td width=\"3%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">1.</font></p> </td>\n<td width=\"2%\"></td>\n<td width=\"65%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">&ldquo;Understanding\nhistory: What is a branch?&rdquo;</font></p></td>\n<td width=\"18%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">file:///usr/share/doc/git/html/user-manual.html#what-is-a-branch</font></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#CONFIGURATION\">CONFIGURATION</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#GIT\">GIT</a>","<a href=\"#NOTES\">NOTES</a>"]}