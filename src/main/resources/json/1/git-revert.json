{"name":"git-revert","body":"\n\n<h1 align=\"center\">GIT-REVERT</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">git-revert -\nRevert some existing commits</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>git\nrevert</i> [--[no-]edit] [-n] [-m parent-number] [-s]\n[-S[&lt;keyid&gt;]] &lt;commit&gt;... <i><br>\ngit revert</i> (--continue | --skip | --abort | --quit)</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Given one or\nmore existing commits, revert the changes that the related\npatches introduce, and record some new commits that record\nthem. This requires your working tree to be clean (no\nmodifications from the HEAD commit).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note: <i>git\nrevert</i> is used to record some new commits to reverse the\neffect of some earlier commits (often only a faulty one). If\nyou want to throw away all uncommitted changes in your\nworking directory, you should see <a href=\"https://man.page/1/git-reset\">git-reset(1)</a>,\nparticularly the <b>--hard</b> option. If you want to\nextract specific files as they were in another commit, you\nshould see <a href=\"https://man.page/1/git-restore\">git-restore(1)</a>, specifically the\n<b>--source</b> option. Take care with these alternatives as\nboth will discard uncommitted changes in your working\ndirectory.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See\n&quot;Reset, restore and revert&quot; in <a href=\"https://man.page/1/git\">git(1)</a> for\nthe differences between the three commands.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;commit&gt;...</p>\n\n<p style=\"margin-left:17%;\">Commits to revert. For a more\ncomplete list of ways to spell commit names, see\n<a href=\"https://man.page/7/gitrevisions\">gitrevisions(7)</a>. Sets of commits can also be given\nbut no traversal is done by default, see\n<a href=\"https://man.page/1/git-rev-list\">git-rev-list(1)</a> and its <b>--no-walk</b> option.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-e, --edit</p>\n\n<p style=\"margin-left:17%;\">With this option, <i>git\nrevert</i> will let you edit the commit message prior to\ncommitting the revert. This is the default if you run the\ncommand from a terminal.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-m\nparent-number, --mainline parent-number</p>\n\n<p style=\"margin-left:17%;\">Usually you cannot revert a\nmerge because you do not know which side of the merge should\nbe considered the mainline. This option specifies the parent\nnumber (starting from 1) of the mainline and allows revert\nto reverse the change relative to the specified parent.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Reverting a\nmerge commit declares that you will never want the tree\nchanges brought in by the merge. As a result, later merges\nwill only bring in tree changes introduced by commits that\nare not ancestors of the previously reverted merge. This may\nor may not be what you want.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">See the\n<b><font color=\"#0000FF\">revert-a-faulty-merge\nHow-To</font></b>\n<small><font color=\"#000000\">[1]</font></small>\n<font color=\"#000000\">for more details.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">--no-edit</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">With this\noption, <i>git revert</i> will not start the commit message\neditor.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">--cleanup=&lt;mode&gt;</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\noption determines how the commit message will be cleaned up\nbefore being passed on to the commit machinery. See\n<a href=\"https://man.page/1/git-commit\">git-commit(1)</a> for more details. In particular, if the\n<i>&lt;mode&gt;</i> is given a value of <b>scissors</b>,\nscissors will be appended to <b>MERGE_MSG</b> before being\npassed on in the case of a conflict.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">-n,\n--no-commit</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Usually\nthe command automatically creates some commits with commit\nlog messages stating which commits were reverted. This flag\napplies the changes necessary to revert the named commits to\nyour working tree and the index, but does not make the\ncommits. In addition, when this option is used, your index\ndoes not have to match the HEAD commit. The revert is done\nagainst the beginning state of your index.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nis useful when reverting more than one commits' effect to\nyour index in a row.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">-S[&lt;keyid&gt;],\n--gpg-sign[=&lt;keyid&gt;], --no-gpg-sign</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">GPG-sign\ncommits. The <b>keyid</b> argument is optional and defaults\nto the committer identity; if specified, it must be stuck to\nthe option without a space. <b>--no-gpg-sign</b> is useful\nto countermand both <b>commit.gpgSign</b> configuration\nvariable, and earlier <b>--gpg-sign</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">-s,\n--signoff</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Add a\n<b>Signed-off-by</b> trailer at the end of the commit\nmessage. See the signoff option in <a href=\"https://man.page/1/git-commit\">git-commit(1)</a> for\nmore information.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">--strategy=&lt;strategy&gt;</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Use the\ngiven merge strategy. Should only be used once. See the\nMERGE STRATEGIES section in <a href=\"https://man.page/1/git-merge\">git-merge(1)</a> for\ndetails.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">-X&lt;option&gt;,\n--strategy-option=&lt;option&gt;</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Pass the\nmerge strategy-specific option through to the merge\nstrategy. See <a href=\"https://man.page/1/git-merge\">git-merge(1)</a> for details.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">--rerere-autoupdate,\n--no-rerere-autoupdate</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Allow the\nrerere mechanism to update the index with the result of\nauto-conflict resolution if possible.</font></p>\n\n<h2>SEQUENCER SUBCOMMANDS\n<a name=\"SEQUENCER SUBCOMMANDS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">--continue</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Continue\nthe operation in progress using the information in\n<b>.git/sequencer</b>. Can be used to continue after\nresolving conflicts in a failed cherry-pick or\nrevert.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">--skip</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Skip the\ncurrent commit and continue with the rest of the\nsequence.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">--quit</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Forget\nabout the current operation in progress. Can be used to\nclear the sequencer state after a failed cherry-pick or\nrevert.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">--abort</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Cancel\nthe operation and return to the pre-sequence\nstate.</font></p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>git\nrevert HEAD~3</b></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Revert\nthe changes specified by the fourth last commit in HEAD and\ncreate a new commit with the reverted changes.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>git\nrevert -n master~5..master~2</b></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Revert\nthe changes done by commits from the fifth last commit in\nmaster (included) to the third last commit in master\n(included), but do not create any commit with the reverted\nchanges. The revert only modifies the working tree and the\nindex.</font></p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><a href=\"https://man.page/1/git-cherry-pick\">git-cherry-pick(1)</a></font></p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">Part\nof the <a href=\"https://man.page/1/git\">git(1)</a> suite</font></p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"12%\"></td>\n<td width=\"3%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">1.</font></p> </td>\n<td width=\"2%\"></td>\n<td width=\"43%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">revert-a-faulty-merge\nHow-To</font></p> </td>\n<td width=\"40%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">file:///usr/share/doc/git/html/howto/revert-a-faulty-merge.html</font></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#SEQUENCER SUBCOMMANDS\">SEQUENCER SUBCOMMANDS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#GIT\">GIT</a>","<a href=\"#NOTES\">NOTES</a>"]}