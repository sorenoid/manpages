{"name":"alsabat","body":"\n\n<h1 align=\"center\">ALSABAT</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">alsabat -\ncommand-line sound tester for ALSA sound card driver</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>alsabat</b>\n[<i>flags</i>]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ALSABAT(ALSA\nBasic Audio Tester)</b> is a simple command-line utility\nintended to help automate audio driver and sound server\ntesting with little human interaction. ALSABAT can be used\nto test audio quality, stress test features and test audio\nbefore and after PM state changes.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">ALSABAT&rsquo;s\ndesign is relatively simple. ALSABAT plays an audio stream\nand captures the same stream in either a digital or analog\nloop back. It then compares the captured stream using a FFT\nto the original to determine if the test case passes or\nfails.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">ALSABAT can\neither run wholly on the target machine being tested\n(standalone mode) or can run as a client/server mode where\nby alsabat client runs on the target and runs as a server on\na separate tester machine. The client/server mode still\nrequires some manual interaction for synchronization, but\nthis is actively being developed for future releases.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The hardware\ntesting configuration may require the use of an analog cable\nconnecting target to tester machines or a cable to create an\nanalog loopback if no loopback mode is available on the\nsound hardware that is being tested. An analog loopback\ncable can be used to connect the &quot;line in&quot; to\n&quot;line out&quot; jacks to create a loopback. If only\nheadphone and mic jacks (or combo jack) are available then\nthe following simple circuit can be used to create an analog\nloopback :-</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">https://source.android.com/devices/audio/loopback.html</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If tinyalsa is\ninstalled in system, user can choose tinyalsa as backend lib\nof alsabat, with configure option\n&quot;--enable-alsabat-backend-tiny&quot;.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>-h,\n--help</i></p>\n\n<p style=\"margin-left:22%;\">Help: show syntax.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><i>-D</i></p></td>\n<td width=\"8%\"></td>\n<td width=\"60%\">\n\n\n<p>Select sound card to be tested by name.</p></td>\n<td width=\"18%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><i>-P</i></p></td>\n<td width=\"8%\"></td>\n<td width=\"60%\">\n\n\n<p>Select the playback PCM device.</p></td>\n<td width=\"18%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><i>-C</i></p></td>\n<td width=\"8%\"></td>\n<td width=\"60%\">\n\n\n<p>Select the capture PCM device.</p></td>\n<td width=\"18%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><i>-f</i></p></td>\n<td width=\"8%\"></td>\n<td width=\"60%\">\n\n\n<p>Sample format</p></td>\n<td width=\"18%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:22%;\">Recognized sample formats are:\nU8 S16_LE S24_3LE S32_LE <br>\nSome of these may not be available on selected hardware <br>\nThe available format shortcuts are: <br>\n-f cd (16 bit little endian, 44100, stereo) [-f S16_LE -c2\n-r44100] <br>\n-f dat (16 bit little endian, 48000, stereo) [-f S16_LE -c2\n-r48000] <br>\nIf no format is given S16_LE is used.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\"><i>-c</i></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">The number of channels. The\ndefault is one channel. Valid values at the moment are 1 or\n2.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><i>-r</i></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>Sampling rate in Hertz. The default rate is 44100 Hertz.\nValid values depends on hardware support.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><i>-n</i></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>Duration of generated signal. The value could be either\nof the two forms:</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%;\">1. Decimal integer, means\nnumber of frames; <br>\n2. Floating point with suffix &rsquo;s&rsquo;, means number\nof seconds. <br>\nThe default is 2 seconds.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\"><i>-k</i></p></td>\n<td width=\"8%\"></td>\n<td width=\"41%\">\n\n\n<p style=\"margin-top: 1em\">Sigma k value for analysis.</p></td>\n<td width=\"37%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:22%;\">The analysis function reads\ndata from WAV file, run FFT against the data to get\nmagnitude of frequency vectors, and then calculates the\naverage value and standard deviation of frequency vectors.\nAfter that, we define a threshold: <br>\nthreshold = k * standard_deviation + mean_value <br>\nFrequencies with amplitude larger than threshold will be\nrecognized as a peak, and the frequency with largest peak\nvalue will be recognized as a detected frequency. <br>\nALSABAT then compares the detected frequency to target\nfrequency, to decide if the detecting passes or fails. <br>\nThe default value is 3.0.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\"><i>-F</i></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">Target frequency for signal\ngeneration and analysis, in Hertz. The default is 997.0\nHertz. Valid range is (DC_THRESHOLD, 40% * Sampling\nrate).</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><i>-p</i></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>Total number of periods to play or capture.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><i>--log=#</i></p>\n\n<p style=\"margin-left:22%;\">Write stderr and stdout output\nto this log file.</p>\n\n<p style=\"margin-left:11%;\"><i>--file=#</i></p>\n\n<p style=\"margin-left:22%;\">Input WAV file for\nplayback.</p>\n\n<p style=\"margin-left:11%;\"><i>--saveplay=#</i></p>\n\n<p style=\"margin-left:22%;\">Target WAV file to save capture\ntest content.</p>\n\n<p style=\"margin-left:11%;\"><i>--local</i></p>\n\n<p style=\"margin-left:22%;\">Internal loopback mode.\nPlayback, capture and analysis internal to ALSABAT only.\nThis is intended for developers to test new ALSABAT features\nas no audio is routed outside of ALSABAT.</p>\n\n<p style=\"margin-left:11%;\"><i>--standalone</i></p>\n\n<p style=\"margin-left:22%;\">Add support for standalone mode\nwhere ALSABAT will run on a different machine to the one\nbeing tested. In standalone mode, the sound data can be\ngenerated, playback and captured just like in normal mode,\nbut will not be analyzed. The ALSABAT being built without\nlibfftw3 support is always in standalone mode. The ALSABAT\nin normal mode can also bypass data analysis using option\n&quot;--standalone&quot;.</p>\n\n<p style=\"margin-left:11%;\"><i>--roundtriplatency</i></p>\n\n<p style=\"margin-left:22%;\">Round trip latency test. Audio\nlatency is the time delay as an audio signal passes through\na system. There are many kinds of audio latency metrics. One\nuseful metric is the round trip latency, which is the sum of\noutput latency and input latency.</p>\n\n<p style=\"margin-left:11%;\"><i>--snr-db=#</i></p>\n\n<p style=\"margin-left:22%;\">Noise detection threshold in\nSNR (dB). 26dB indicates 5% noise in amplitude. ALSABAT will\nreturn error if signal SNR is smaller than the\nthreshold.</p>\n\n<p style=\"margin-left:11%;\"><i>--snr-pc=#</i></p>\n\n<p style=\"margin-left:22%;\">Noise detection threshold in\npercentage of noise amplitude (%). ALSABAT will return error\nif the noise amplitude is larger than the threshold.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>alsabat -P\nplughw:0,0 -C plughw:0,0 -c 2 -f S32_LE -F 250</b></p>\n\n<p style=\"margin-left:22%;\">Generate and play a sine wave\nof 250 Hertz with 2 channel and S32_LE format, and then\ncapture and analyze.</p>\n\n<p style=\"margin-left:11%;\"><b>alsabat -P plughw:0,0 -C\nplughw:0,0 --file 500Hz.wav</b></p>\n\n<p style=\"margin-left:22%;\">Play the RIFF WAV file\n&quot;500Hz.wav&quot; which contains 500 Hertz waveform LPCM\ndata, and then capture and analyze.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\nreturns 0. <br>\nIf no peak be detected, returns -1001; <br>\nIf only DC be detected, returns -1002; <br>\nIf peak frequency does not match with the target frequency,\nreturns -1003.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>aplay(1)</b></p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Currently only\nsupport RIFF WAV format with PCM data. Please report any\nbugs to the alsa-devel mailing list.</p>\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>alsabat</b>\nis by Liam Girdwood &lt;liam.r.girdwood@linux.intel.com&gt;,\nBernard Gautier &lt;bernard.gautier@intel.com&gt; and Han Lu\n&lt;han.lu@intel.com&gt;. This document is by Liam Girdwood\n&lt;liam.r.girdwood@linux.intel.com&gt; and Han Lu\n&lt;han.lu@intel.com&gt;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#AUTHOR\">AUTHOR</a>"]}