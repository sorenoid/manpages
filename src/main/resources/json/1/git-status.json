{"name":"git-status","description":"git-status - Show the working tree status","body":"\n\n<h1 align=\"center\">GIT-STATUS</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">git-status -\nShow the working tree status</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>git\nstatus</i> [&lt;options&gt;...] [--]\n[&lt;pathspec&gt;...]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Displays paths\nthat have differences between the index file and the current\nHEAD commit, paths that have differences between the working\ntree and the index file, and paths in the working tree that\nare not tracked by Git (and are not ignored by\n<a href=\"https://man.page/5/gitignore\">gitignore(5)</a>). The first are what you <i>would</i>\ncommit by running <b>git commit</b>; the second and third\nare what you <i>could</i> commit by running <i>git add</i>\nbefore running <b>git commit</b>.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">-s, --short</p>\n\n<p style=\"margin-left:17%;\">Give the output in the\nshort-format.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-b,\n--branch</p>\n\n<p style=\"margin-left:17%;\">Show the branch and tracking\ninfo even in short-format.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--show-stash</p>\n\n<p style=\"margin-left:17%;\">Show the number of entries\ncurrently stashed away.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--porcelain[=&lt;version&gt;]</p>\n\n<p style=\"margin-left:17%;\">Give the output in an\neasy-to-parse format for scripts. This is similar to the\nshort output, but will remain stable across Git versions and\nregardless of user configuration. See below for details.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The version\nparameter is used to specify the format version. This is\noptional and defaults to the original version <i>v1</i>\nformat.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--long</p>\n\n<p style=\"margin-left:17%;\">Give the output in the\nlong-format. This is the default.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-v,\n--verbose</p>\n\n<p style=\"margin-left:17%;\">In addition to the names of\nfiles that have been changed, also show the textual changes\nthat are staged to be committed (i.e., like the output of\n<b>git diff --cached</b>). If <b>-v</b> is specified twice,\nthen also show the changes in the working tree that have not\nyet been staged (i.e., like the output of <b>git\ndiff</b>).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">-u[&lt;mode&gt;],\n--untracked-files[=&lt;mode&gt;]</p>\n\n<p style=\"margin-left:17%;\">Show untracked files.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The mode\nparameter is used to specify the handling of untracked\nfiles. It is optional: it defaults to <i>all</i>, and if\nspecified, it must be stuck to the option (e.g. <b>-uno</b>,\nbut not <b>-u no</b>).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The possible\noptions are:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<i>no</i> - Show no untracked files.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<i>normal</i> - Shows untracked files and directories.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<i>all</i> - Also shows individual files in untracked\ndirectories.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When <b>-u</b>\noption is not used, untracked files and directories are\nshown (i.e. the same as specifying <b>normal</b>), to help\nyou avoid forgetting to add newly created files. Because it\ntakes extra work to find untracked files in the filesystem,\nthis mode may take some time in a large working tree.\nConsider enabling untracked cache and split index if\nsupported (see <b>git update-index --untracked-cache</b> and\n<b>git update-index --split-index</b>), Otherwise you can\nuse <b>no</b> to have <b>git status</b> return more quickly\nwithout showing untracked files.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The default can\nbe changed using the status.showUntrackedFiles configuration\nvariable documented in <a href=\"https://man.page/1/git-config\">git-config(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--ignore-submodules[=&lt;when&gt;]</p>\n\n<p style=\"margin-left:17%;\">Ignore changes to submodules\nwhen looking for changes. &lt;when&gt; can be either\n&quot;none&quot;, &quot;untracked&quot;, &quot;dirty&quot;\nor &quot;all&quot;, which is the default. Using\n&quot;none&quot; will consider the submodule modified when\nit either contains untracked or modified files or its HEAD\ndiffers from the commit recorded in the superproject and can\nbe used to override any settings of the <i>ignore</i> option\nin <a href=\"https://man.page/1/git-config\">git-config(1)</a> or <a href=\"https://man.page/5/gitmodules\">gitmodules(5)</a>. When\n&quot;untracked&quot; is used submodules are not considered\ndirty when they only contain untracked content (but they are\nstill scanned for modified content). Using &quot;dirty&quot;\nignores all changes to the work tree of submodules, only\nchanges to the commits stored in the superproject are shown\n(this was the behavior before 1.7.0). Using &quot;all&quot;\nhides all changes to submodules (and suppresses the output\nof submodule summaries when the config option\n<b>status.submoduleSummary</b> is set).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--ignored[=&lt;mode&gt;]</p>\n\n<p style=\"margin-left:17%;\">Show ignored files as well.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The mode\nparameter is used to specify the handling of ignored files.\nIt is optional: it defaults to <i>traditional</i>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The possible\noptions are:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<i>traditional</i> - Shows ignored files and directories,\nunless --untracked-files=all is specified, in which case\nindividual files in ignored directories are displayed.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<i>no</i> - Show no ignored files.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<i>matching</i> - Shows ignored files and directories\nmatching an ignore pattern.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When\n<i>matching</i> mode is specified, paths that explicitly\nmatch an ignored pattern are shown. If a directory matches\nan ignore pattern, then it is shown, but not paths contained\nin the ignored directory. If a directory does not match an\nignore pattern, but all contents are ignored, then the\ndirectory is not shown, but all contents are shown.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-z</p>\n\n<p style=\"margin-left:17%;\">Terminate entries with NUL,\ninstead of LF. This implies the <b>--porcelain=v1</b> output\nformat if no other format is given.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--column[=&lt;options&gt;],\n--no-column</p>\n\n<p style=\"margin-left:17%;\">Display untracked files in\ncolumns. See configuration variable <b>column.status</b> for\noption syntax. <b>--column</b> and <b>--no-column</b>\nwithout options are equivalent to <i>always</i> and\n<i>never</i> respectively.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--ahead-behind,\n--no-ahead-behind</p>\n\n<p style=\"margin-left:17%;\">Display or do not display\ndetailed ahead/behind counts for the branch relative to its\nupstream branch. Defaults to true.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--renames,\n--no-renames</p>\n\n<p style=\"margin-left:17%;\">Turn on/off rename detection\nregardless of user configuration. See also\n<a href=\"https://man.page/1/git-diff\">git-diff(1)</a> <b>--no-renames</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--find-renames[=&lt;n&gt;]</p>\n\n<p style=\"margin-left:17%;\">Turn on rename detection,\noptionally setting the similarity threshold. See also\n<a href=\"https://man.page/1/git-diff\">git-diff(1)</a> <b>--find-renames</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;pathspec&gt;...</p>\n\n<p style=\"margin-left:17%;\">See the <i>pathspec</i> entry\nin <a href=\"https://man.page/7/gitglossary\">gitglossary(7)</a>.</p>\n\n<h2>OUTPUT\n<a name=\"OUTPUT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The output from\nthis command is designed to be used as a commit template\ncomment. The default, long format, is designed to be human\nreadable, verbose and descriptive. Its contents and format\nare subject to change at any time.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The paths\nmentioned in the output, unlike many other Git commands, are\nmade relative to the current directory if you are working in\na subdirectory (this is on purpose, to help cutting and\npasting). See the status.relativePaths config option\nbelow.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Short\nFormat</b> <br>\nIn the short-format, the status of each path is shown as one\nof these forms</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">XY PATH <br>\nXY ORIG_PATH -&gt; PATH</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">where\n<b>ORIG_PATH</b> is where the renamed/copied contents came\nfrom. <b>ORIG_PATH</b> is only shown when the entry is\nrenamed or copied. The <b>XY</b> is a two-letter status\ncode.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The fields\n(including the <b>-&gt;</b>) are separated from each other\nby a single space. If a filename contains whitespace or\nother nonprintable characters, that field will be quoted in\nthe manner of a C string literal: surrounded by ASCII double\nquote (34) characters, and with interior special characters\nbackslash-escaped.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">There are three\ndifferent types of states that are shown using this format,\nand each one uses the <b>XY</b> syntax differently:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; When a\nmerge is occurring and the merge was successful, or outside\nof a merge situation, <b>X</b> shows the status of the index\nand <b>Y</b> shows the status of the working tree.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; When a\nmerge conflict has occurred and has not yet been resolved,\n<b>X</b> and <b>Y</b> show the state introduced by each head\nof the merge, relative to the common ancestor. These paths\nare said to be <i>unmerged</i>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; When a\npath is untracked, <b>X</b> and <b>Y</b> are always the\nsame, since they are unknown to the index. <b>??</b> is used\nfor untracked paths. Ignored files are not listed unless\n<b>--ignored</b> is used; if it is, ignored files are\nindicated by <b>!!</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that the\nterm <i>merge</i> here also includes rebases using the\ndefault <b>--merge</b> strategy, cherry-picks, and anything\nelse using the merge machinery.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the\nfollowing table, these three classes are shown in separate\nsections, and these characters are used for <b>X</b> and\n<b>Y</b> fields for the first two sections that show tracked\npaths:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; ' ' =\nunmodified</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; <i>M</i>\n= modified</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; <i>T</i>\n= file type changed (regular file, symbolic link or\nsubmodule)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; <i>A</i>\n= added</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; <i>D</i>\n= deleted</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; <i>R</i>\n= renamed</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; <i>C</i>\n= copied (if config option status.renames is set to\n&quot;copies&quot;)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; <i>U</i>\n= updated but unmerged</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">X Y Meaning\n<br>\n------------------------------------------------- <br>\n[AMD] not updated <br>\nM [ MTD] updated in index <br>\nT [ MTD] type changed in index <br>\nA [ MTD] added to index <br>\nD deleted from index <br>\nR [ MTD] renamed in index <br>\nC [ MTD] copied in index <br>\n[MTARC] index and work tree matches <br>\n[ MTARC] M work tree changed since index <br>\n[ MTARC] T type changed in work tree since index <br>\n[ MTARC] D deleted in work tree <br>\nR renamed in work tree <br>\nC copied in work tree <br>\n------------------------------------------------- <br>\nD D unmerged, both deleted <br>\nA U unmerged, added by us <br>\nU D unmerged, deleted by them <br>\nU A unmerged, added by them <br>\nD U unmerged, deleted by us <br>\nA A unmerged, both added <br>\nU U unmerged, both modified <br>\n------------------------------------------------- <br>\n? ? untracked <br>\n! ! ignored <br>\n-------------------------------------------------</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Submodules have\nmore state and instead report M the submodule has a\ndifferent HEAD than recorded in the index m the submodule\nhas modified content ? the submodule has untracked files\nsince modified content or untracked files in a submodule\ncannot be added via <b>git add</b> in the superproject to\nprepare a commit.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>m</i> and\n<i>?</i> are applied recursively. For example if a nested\nsubmodule in a submodule contains an untracked file, this is\nreported as <i>?</i> as well.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If -b is used\nthe short-format status is preceded by a line</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">## branchname\ntracking info</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Porcelain\nFormat Version 1</b> <br>\nVersion 1 porcelain format is similar to the short format,\nbut is guaranteed not to change in a backwards-incompatible\nway between Git versions or based on user configuration.\nThis makes it ideal for parsing by scripts. The description\nof the short format above also describes the porcelain\nformat, with a few exceptions:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">1. The\nuser&rsquo;s color.status configuration is not respected;\ncolor will always be off.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">2. The\nuser&rsquo;s status.relativePaths configuration is not\nrespected; paths shown will always be relative to the\nrepository root.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">There is also\nan alternate -z format recommended for machine parsing. In\nthat format, the status field is the same, but some other\nthings change. First, the <i>-&gt;</i> is omitted from\nrename entries and the field order is reversed (e.g <i>from\n-&gt; to</i> becomes <i>to from</i>). Second, a NUL (ASCII\n0) follows each filename, replacing space as a field\nseparator and the terminating newline (but a space still\nseparates the status field from the first filename). Third,\nfilenames containing special characters are not specially\nformatted; no quoting or backslash-escaping is\nperformed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Any submodule\nchanges are reported as modified <b>M</b> instead of\n<b>m</b> or single <b>?</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Porcelain\nFormat Version 2</b> <br>\nVersion 2 format adds more detailed information about the\nstate of the worktree and changed items. Version 2 also\ndefines an extensible set of easy to parse optional\nheaders.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Header lines\nstart with &quot;#&quot; and are added in response to\nspecific command line arguments. Parsers should ignore\nheaders they don&rsquo;t recognize.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><big>Branch\nHeaders</big></b></p>\n\n<p style=\"margin-left:17%;\">If <b>--branch</b> is given, a\nseries of header lines are printed with information about\nthe current branch.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Line Notes <br>\n\n------------------------------------------------------------\n<br>\n# branch.oid &lt;commit&gt; | (initial) Current commit. <br>\n# branch.head &lt;branch&gt; | (detached) Current branch.\n<br>\n# branch.upstream &lt;upstream_branch&gt; If upstream is\nset. <br>\n# branch.ab +&lt;ahead&gt; -&lt;behind&gt; If upstream is\nset and <br>\nthe commit is present. <br>\n\n------------------------------------------------------------</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><big>Changed\nTracked Entries</big></b></p>\n\n<p style=\"margin-left:17%;\">Following the headers, a series\nof lines are printed for tracked entries. One of three\ndifferent line formats may be used to describe an entry\ndepending on the type of change. Tracked entries are printed\nin an undefined order; parsers should allow for a mixture of\nthe 3 line types in any order.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Ordinary\nchanged entries have the following format:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">1 &lt;XY&gt;\n&lt;sub&gt; &lt;mH&gt; &lt;mI&gt; &lt;mW&gt; &lt;hH&gt;\n&lt;hI&gt; &lt;path&gt;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Renamed or\ncopied entries have the following format:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">2 &lt;XY&gt;\n&lt;sub&gt; &lt;mH&gt; &lt;mI&gt; &lt;mW&gt; &lt;hH&gt;\n&lt;hI&gt; &lt;X&gt;&lt;score&gt;\n&lt;path&gt;&lt;sep&gt;&lt;origPath&gt;</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Field Meaning\n<br>\n--------------------------------------------------------\n<br>\n&lt;XY&gt; A 2 character field containing the staged and\n<br>\nunstaged XY values described in the short format, <br>\nwith unchanged indicated by a &quot;.&quot; rather than <br>\na space. <br>\n&lt;sub&gt; A 4 character field describing the submodule\nstate. <br>\n&quot;N...&quot; when the entry is not a submodule. <br>\n&quot;S&lt;c&gt;&lt;m&gt;&lt;u&gt;&quot; when the entry is a\nsubmodule. <br>\n&lt;c&gt; is &quot;C&quot; if the commit changed; otherwise\n&quot;.&quot;. <br>\n&lt;m&gt; is &quot;M&quot; if it has tracked changes;\notherwise &quot;.&quot;. <br>\n&lt;u&gt; is &quot;U&quot; if there are untracked changes;\notherwise &quot;.&quot;. <br>\n&lt;mH&gt; The octal file mode in HEAD. <br>\n&lt;mI&gt; The octal file mode in the index. <br>\n&lt;mW&gt; The octal file mode in the worktree. <br>\n&lt;hH&gt; The object name in HEAD. <br>\n&lt;hI&gt; The object name in the index. <br>\n&lt;X&gt;&lt;score&gt; The rename or copy score (denoting\nthe percentage <br>\nof similarity between the source and target of the <br>\nmove or copy). For example &quot;R100&quot; or\n&quot;C75&quot;. <br>\n&lt;path&gt; The pathname. In a renamed/copied entry, this\n<br>\nis the target path. <br>\n&lt;sep&gt; When the &rsquo;-z&rsquo; option is used, the 2\npathnames are separated <br>\nwith a NUL (ASCII 0x00) byte; otherwise, a tab (ASCII 0x09)\n<br>\nbyte separates them. <br>\n&lt;origPath&gt; The pathname in the commit at HEAD or in\nthe index. <br>\nThis is only present in a renamed/copied entry, and <br>\ntells where the renamed/copied contents came from. <br>\n\n--------------------------------------------------------</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Unmerged\nentries have the following format; the first character is a\n&quot;u&quot; to distinguish from ordinary changed\nentries.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">u &lt;XY&gt;\n&lt;sub&gt; &lt;m1&gt; &lt;m2&gt; &lt;m3&gt; &lt;mW&gt;\n&lt;h1&gt; &lt;h2&gt; &lt;h3&gt; &lt;path&gt;</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Field Meaning\n<br>\n--------------------------------------------------------\n<br>\n&lt;XY&gt; A 2 character field describing the conflict type\n<br>\nas described in the short format. <br>\n&lt;sub&gt; A 4 character field describing the submodule\nstate <br>\nas described above. <br>\n&lt;m1&gt; The octal file mode in stage 1. <br>\n&lt;m2&gt; The octal file mode in stage 2. <br>\n&lt;m3&gt; The octal file mode in stage 3. <br>\n&lt;mW&gt; The octal file mode in the worktree. <br>\n&lt;h1&gt; The object name in stage 1. <br>\n&lt;h2&gt; The object name in stage 2. <br>\n&lt;h3&gt; The object name in stage 3. <br>\n&lt;path&gt; The pathname. <br>\n\n--------------------------------------------------------</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><big>Other\nItems</big></b></p>\n\n<p style=\"margin-left:17%;\">Following the tracked entries\n(and if requested), a series of lines will be printed for\nuntracked and then ignored items found in the worktree.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Untracked items\nhave the following format:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">?\n&lt;path&gt;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Ignored items\nhave the following format:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">!\n&lt;path&gt;</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><big>Pathname\nFormat Notes and -z</big></b></p>\n\n<p style=\"margin-left:17%;\">When the <b>-z</b> option is\ngiven, pathnames are printed as is and without any quoting\nand lines are terminated with a NUL (ASCII 0x00) byte.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Without the\n<b>-z</b> option, pathnames with &quot;unusual&quot;\ncharacters are quoted as explained for the configuration\nvariable <b>core.quotePath</b> (see\n<a href=\"https://man.page/1/git-config\">git-config(1)</a>).</p>\n\n<h2>CONFIGURATION\n<a name=\"CONFIGURATION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The command\nhonors <b>color.status</b> (or <b>status.color</b> &mdash;\nthey mean the same thing and the latter is kept for backward\ncompatibility) and <b>color.status.&lt;slot&gt;</b>\nconfiguration variables to colorize its output.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the config\nvariable <b>status.relativePaths</b> is set to false, then\nall paths shown are relative to the repository root, not to\nthe current directory.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<b>status.submoduleSummary</b> is set to a non zero number\nor true (identical to -1 or an unlimited number), the\nsubmodule summary will be enabled for the long format and a\nsummary of commits for modified submodules will be shown\n(see --summary-limit option of <a href=\"https://man.page/1/git-submodule\">git-submodule(1)</a>).\nPlease note that the summary output from the status command\nwill be suppressed for all submodules when\n<b>diff.ignoreSubmodules</b> is set to <i>all</i> or only\nfor those submodules where\n<b>submodule.&lt;name&gt;.ignore=all</b>. To also view the\nsummary for ignored submodules you can either use the\n--ignore-submodules=dirty command line option or the <i>git\nsubmodule summary</i> command, which shows a similar output\nbut does not honor these settings.</p>\n\n<h2>BACKGROUND REFRESH\n<a name=\"BACKGROUND REFRESH\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">By default,\n<b>git status</b> will automatically refresh the index,\nupdating the cached stat information from the working tree\nand writing out the result. Writing out the updated index is\nan optimization that isn&rsquo;t strictly necessary\n(<b>status</b> computes the values for itself, but writing\nthem out is just to save subsequent programs from repeating\nour computation). When <b>status</b> is run in the\nbackground, the lock held during the write may conflict with\nother simultaneous processes, causing them to fail. Scripts\nrunning <b>status</b> in the background should consider\nusing <b>git --no-optional-locks status</b> (see\n<a href=\"https://man.page/1/git\">git(1)</a> for details).</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/5/gitignore\">gitignore(5)</a></p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Part of the\n<a href=\"https://man.page/1/git\">git(1)</a> suite</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#OUTPUT\">OUTPUT</a>","<a href=\"#CONFIGURATION\">CONFIGURATION</a>","<a href=\"#BACKGROUND REFRESH\">BACKGROUND REFRESH</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#GIT\">GIT</a>"]}