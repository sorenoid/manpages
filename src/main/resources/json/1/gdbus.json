{"name":"gdbus","description":"gdbus - Tool\nfor working with D-Bus objects","body":"\n\n<h1 align=\"center\">GDBUS</h1>\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gdbus - Tool\nfor working with D-Bus objects</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"89%\">\n\n\n<p style=\"margin-top: 1em\"><b>gdbus</b> introspect\n[--system | --session | --address&nbsp;<i>address</i>]\n--dest&nbsp;<i>bus_name</i>\n--object-path&nbsp;<i>/path/to/object</i> [--xml]\n[--recurse] [--only-properties]</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"89%\">\n\n\n<p style=\"margin-top: 1em\"><b>gdbus</b> monitor [--system |\n--session | --address&nbsp;<i>address</i>]\n--dest&nbsp;<i>bus_name</i>\n[--object-path&nbsp;<i>/path/to/object</i>]</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"89%\">\n\n\n<p style=\"margin-top: 1em\"><b>gdbus</b> call [--system |\n--session | --address&nbsp;<i>address</i>]\n--dest&nbsp;<i>bus_name</i>\n--object-path&nbsp;<i>/path/to/object</i>\n--method&nbsp;<i>org.project.InterfaceName.MethodName</i>\n[--timeout&nbsp;<i>seconds</i> | --interactive] ARG1\nARG2...</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"89%\">\n\n\n<p style=\"margin-top: 1em\"><b>gdbus</b> emit [--system |\n--session | --address&nbsp;<i>address</i>]\n--object-path&nbsp;<i>/path/to/object</i>\n--signal&nbsp;<i>org.project.InterfaceName.SignalName</i>\n[--dest&nbsp;<i>unique_bus_name</i>] ARG1 ARG2...</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"89%\">\n\n\n<p style=\"margin-top: 1em\"><b>gdbus</b> wait [--system |\n--session | --address&nbsp;<i>address</i>]\n--activate&nbsp;<i>bus_name</i>\n[--timeout&nbsp;<i>seconds</i>] <i>bus_name</i></p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"89%\">\n\n\n<p style=\"margin-top: 1em\"><b>gdbus</b> help</p></td></tr>\n</table>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>gdbus</b> is\na simple tool for working with D-Bus objects.</p>\n\n<h2>COMMANDS\n<a name=\"COMMANDS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>introspect</b></p>\n\n<p style=\"margin-left:17%;\">Prints out interfaces and\nproperty values for a remote object. For this to work, the\nowner of the object needs to implement the\norg.freedesktop.DBus.Introspectable interface. If the\n<b>--xml</b> option is used, the returned introspection XML\nis printed, otherwise a parsed pretty representation is\nprinted. The <b>--recurse</b> option can be used to\nintrospect children (and their children and so on) and the\n<b>--only-properties</b> option can be used to only print\nthe interfaces with properties.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>monitor</b></p>\n\n<p style=\"margin-left:17%;\">Monitors one or all objects\nowned by the owner of <i>bus_name</i>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>call</b></p>\n\n<p style=\"margin-left:17%;\">Invokes a method on a remote\nobject. Each argument to pass to the method must be\nspecified as a serialized <b>GVariant</b> except that\nstrings do not need explicit quotes. The return values are\nprinted out as serialized <b>GVariant</b> values.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>emit</b></p>\n\n<p style=\"margin-left:17%;\">Emits a signal. Each argument\nto include in the signal must be specified as a serialized\n<b>GVariant</b> except that strings do not need explicit\nquotes.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>wait</b></p>\n\n<p style=\"margin-left:17%;\">Waits until <i>bus_name</i> is\nowned by some process on the bus. If the <b>--activate</b>\nis specified, that bus name will be auto-started first. It\nmay be the same as the bus name being waited for, or\ndifferent.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>help</b></p>\n\n<p style=\"margin-left:17%;\">Prints help and exit.</p>\n\n<h2>BASH COMPLETION\n<a name=\"BASH COMPLETION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>gdbus</b>\nships with a bash completion script to complete commands,\ndestinations, bus names, object paths and interface/method\nnames.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This shows how\nto introspect an object - note that the value of each <br>\nproperty is displayed:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ gdbus\nintrospect --system \\ <br>\n--dest org.freedesktop.NetworkManager \\ <br>\n--object-path /org/freedesktop/NetworkManager/Devices/0 <br>\nnode /org/freedesktop/NetworkManager/Devices/0 { <br>\ninterface org.freedesktop.DBus.Introspectable { <br>\nmethods: <br>\nIntrospect(out s data); <br>\n}; <br>\ninterface org.freedesktop.DBus.Properties { <br>\nmethods: <br>\nGet(in s interface, <br>\nin s propname, <br>\nout v value); <br>\nSet(in s interface, <br>\nin s propname, <br>\nin v value); <br>\nGetAll(in s interface, <br>\nout a{sv} props); <br>\n}; <br>\ninterface org.freedesktop.NetworkManager.Device.Wired { <br>\nsignals: <br>\nPropertiesChanged(a{sv} arg_0); <br>\nproperties: <br>\nreadonly b Carrier = false; <br>\nreadonly u Speed = 0; <br>\nreadonly s HwAddress = '00:1D:72:88:BE:97'; <br>\n}; <br>\ninterface org.freedesktop.NetworkManager.Device { <br>\nmethods: <br>\nDisconnect(); <br>\nsignals: <br>\nStateChanged(u arg_0, <br>\nu arg_1, <br>\nu arg_2); <br>\nproperties: <br>\nreadonly u DeviceType = 1; <br>\nreadonly b Managed = true; <br>\nreadwrite o Ip6Config = '/'; <br>\nreadwrite o Dhcp4Config = '/'; <br>\nreadwrite o Ip4Config = '/'; <br>\nreadonly u State = 2; <br>\nreadwrite u Ip4Address = 0; <br>\nreadonly u Capabilities = 3; <br>\nreadonly s Driver = 'e1000e'; <br>\nreadwrite s Interface = 'eth0'; <br>\nreadonly s Udi =\n'/sys/devices/pci0000:00/0000:00:19.0/net/eth0'; <br>\n}; <br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>--recurse</b> and <b>--only-properties</b> options can be\nuseful when wanting to inspect all objects owned by a\nparticular process:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ gdbus\nintrospect --system --dest org.freedesktop.UPower\n--object-path / --recurse --only-properties <br>\nnode / { <br>\nnode /org { <br>\nnode /org/freedesktop { <br>\nnode /org/freedesktop/UPower { <br>\ninterface org.freedesktop.UPower { <br>\nproperties: <br>\nreadonly b IsDocked = true; <br>\nreadonly b LidForceSleep = false; <br>\nreadonly b LidIsPresent = false; <br>\nreadonly b LidIsClosed = false; <br>\nreadonly b OnLowBattery = false; <br>\nreadonly b OnBattery = false; <br>\nreadonly b CanHibernate = true; <br>\nreadonly b CanSuspend = true; <br>\nreadonly s DaemonVersion = '0.9.10'; <br>\n}; <br>\nnode /org/freedesktop/UPower/Policy { <br>\n}; <br>\nnode /org/freedesktop/UPower/Wakeups { <br>\ninterface org.freedesktop.UPower.Wakeups { <br>\nproperties: <br>\nreadonly b HasCapability = true; <br>\n}; <br>\n}; <br>\n}; <br>\n}; <br>\n}; <br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In a similar\nfashion, the <b>introspect</b> command can be used to learn\ndetails about the Notify method:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">[...] <br>\ninterface org.freedesktop.Notifications { <br>\nmethods: <br>\nGetServerInformation(out s return_name, <br>\nout s return_vendor, <br>\nout s return_version, <br>\nout s return_spec_version); <br>\nGetCapabilities(out as return_caps); <br>\nCloseNotification(in u id); <br>\nNotify(in s app_name, <br>\nin u id, <br>\nin s icon, <br>\nin s summary, <br>\nin s body, <br>\nin as actions, <br>\nin a{sv} hints, <br>\nin i timeout, <br>\nout u return_id); <br>\n}; <br>\n[...]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">With this\ninformation, it's easy to use the <b>call</b> command to\ndisplay a notification</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ gdbus call\n--session \\ <br>\n--dest org.freedesktop.Notifications \\ <br>\n--object-path /org/freedesktop/Notifications \\ <br>\n--method org.freedesktop.Notifications.Notify \\ <br>\nmy_app_name \\ <br>\n42 \\ <br>\ngtk-dialog-info \\ <br>\n&quot;The Summary&quot; \\ <br>\n&quot;Here's the body of the notification&quot; \\ <br>\n[] \\ <br>\n{} \\ <br>\n5000 <br>\n(uint32 12,)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Call a method\nwith file handle argument:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ gdbus call\n--session \\ <br>\n--dest org.example.foo \\ <br>\n--object-path /org/example/foo \\ <br>\n--method SendFDs \\ <br>\n1 \\ <br>\n10 \\ <br>\n10&lt;file.foo</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Monitoring all\nobjects on a service:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ gdbus monitor\n--system --dest org.freedesktop.ConsoleKit <br>\nMonitoring signals from all objects owned by\norg.freedesktop.ConsoleKit <br>\nThe name org.freedesktop.ConsoleKit is owned by :1.15 <br>\n/org/freedesktop/ConsoleKit/Session2:\norg.freedesktop.ConsoleKit.Session.ActiveChanged (false,)\n<br>\n/org/freedesktop/ConsoleKit/Seat1:\norg.freedesktop.ConsoleKit.Seat.ActiveSessionChanged ('',)\n<br>\n/org/freedesktop/ConsoleKit/Session2:\norg.freedesktop.ConsoleKit.Session.ActiveChanged (true,)\n<br>\n/org/freedesktop/ConsoleKit/Seat1:\norg.freedesktop.ConsoleKit.Seat.ActiveSessionChanged\n('/org/freedesktop/ConsoleKit/Session2',)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Monitoring a\nsingle object on a service:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ gdbus monitor\n--system --dest org.freedesktop.NetworkManager --object-path\n/org/freedesktop/NetworkManager/AccessPoint/4141 <br>\nMonitoring signals on object\n/org/freedesktop/NetworkManager/AccessPoint/4141 owned by\norg.freedesktop.NetworkManager <br>\nThe name org.freedesktop.NetworkManager is owned by :1.5\n<br>\n/org/freedesktop/NetworkManager/AccessPoint/4141:\norg.freedesktop.NetworkManager.AccessPoint.PropertiesChanged\n({'Strength': &lt;byte 0x5c&gt;},) <br>\n/org/freedesktop/NetworkManager/AccessPoint/4141:\norg.freedesktop.NetworkManager.AccessPoint.PropertiesChanged\n({'Strength': &lt;byte 0x64&gt;},) <br>\n/org/freedesktop/NetworkManager/AccessPoint/4141:\norg.freedesktop.NetworkManager.AccessPoint.PropertiesChanged\n({'Strength': &lt;byte 0x5e&gt;},) <br>\n/org/freedesktop/NetworkManager/AccessPoint/4141:\norg.freedesktop.NetworkManager.AccessPoint.PropertiesChanged\n({'Strength': &lt;byte 0x64&gt;},)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Emitting a\nsignal:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ gdbus emit\n--session --object-path /foo --signal org.bar.Foo\n&quot;['foo', 'bar', 'baz']&quot;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Emitting a\nsignal to a specific process:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ gdbus emit\n--session --object-path /bar --signal org.bar.Bar someString\n--dest :1.42</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Waiting for a\nwell-known name to be owned on the bus; this will <i>not</i>\nauto-start the service:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ gdbus wait\n--session org.bar.SomeName</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Auto-starting\nthen waiting for a well-known name to be owned on the\nbus:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ gdbus wait\n--session --activate org.bar.SomeName</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Auto-starting a\ndifferent service, then waiting for a well-known name to be\nowned on the bus. This is useful in situations where\n<i>SomeName</i> is not directly activatable:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ gdbus wait\n--session --activate org.bar.PrerequisiteName\norg.bar.SomeName</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Waiting for a\nwell-known name and giving up after 30 seconds. By default,\nthe timeout is disabled; or set <b>--timeout</b> to 0 to\ndisable it:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ gdbus wait\n--session --timeout 30 org.bar.SomeName</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Please send bug\nreports to either the distribution bug tracker or the\nupstream bug tracker at\n<b><font color=\"#0000FF\">https://gitlab.gnome.org/GNOME/glib/issues/new</font></b><font color=\"#000000\">.</font></p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><a href=\"https://man.page/1/dbus-send\">dbus-send(1)</a></font></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#COMMANDS\">COMMANDS</a>","<a href=\"#BASH COMPLETION\">BASH COMPLETION</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"]}