{"name":"piconv","description":"piconv -- iconv(1), reinvented in perl","body":"\n\n<h1 align=\"center\">PICONV</h1>\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">piconv --\niconv(1), reinvented in perl</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">piconv [-f\nfrom_encoding] [-t to_encoding] <br>\n[-p|--perlqq|--htmlcref|--xmlcref] [-C N|-c] [-D] [-S\nscheme] <br>\n[-s string|file...] <br>\npiconv -l <br>\npiconv -r encoding_alias <br>\npiconv -h</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>piconv</b>\nis perl version of <b>iconv</b>, a character encoding\nconverter widely available for various Unixen today. This\nscript was primarily a technology demonstrator for Perl\n5.8.0, but you can use piconv in the place of iconv for\nvirtually any case.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">piconv converts\nthe character encoding of either <small>STDIN</small> or\nfiles specified in the argument and prints out to\n<small>STDOUT.</small></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Here is the\nlist of options. Some options can be in short format (-f) or\nlong (--from) one. <br>\n-f,--from <i>from_encoding</i></p>\n\n<p style=\"margin-left:17%;\">Specifies the encoding you are\nconverting from. Unlike <b>iconv</b>, this option can be\nomitted. In such cases, the current locale is used.</p>\n\n<p style=\"margin-left:11%;\">-t,--to <i>to_encoding</i></p>\n\n<p style=\"margin-left:17%;\">Specifies the encoding you are\nconverting to. Unlike <b>iconv</b>, this option can be\nomitted. In such cases, the current locale is used.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Therefore, when\nboth -f and -t are omitted, <b>piconv</b> just acts like\n<b>cat</b>.</p>\n\n<p style=\"margin-left:11%;\">-s,--string <i>string</i></p>\n\n<p style=\"margin-left:17%;\">uses <i>string</i> instead of\nfile for the source of text.</p>\n\n<p style=\"margin-left:11%;\">-l,--list</p>\n\n<p style=\"margin-left:17%;\">Lists all available encodings,\none per line, in case-insensitive order. Note that only the\ncanonical names are listed; many aliases exist. For example,\nthe names are case-insensitive, and many standard and common\naliases work, such as &quot;latin1&quot; for &quot;\n<small>ISO-8859-1&quot;,</small> or &quot;ibm850&quot;\ninstead of &quot;cp850&quot;, or &quot;winlatin1&quot; for\n&quot;cp1252&quot;. See Encode::Supported for a full\ndiscussion.</p>\n\n<p style=\"margin-left:11%;\">-r,--resolve\n<i>encoding_alias</i></p>\n\n<p style=\"margin-left:17%;\">Resolve <i>encoding_alias</i>\nto Encode canonical encoding name.</p>\n\n<p style=\"margin-left:11%;\">-C,--check <i>N</i></p>\n\n<p style=\"margin-left:17%;\">Check the validity of the\nstream if <i>N</i> = 1. When <i>N</i> = -1, something\ninteresting happens when it encounters an invalid\ncharacter.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>-c</p></td>\n<td width=\"3%\"></td>\n<td width=\"23%\">\n\n\n<p>Same as &quot;-C 1&quot;.</p></td>\n<td width=\"60%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\">-p,--perlqq</p>\n\n<p style=\"margin-left:17%;\">Transliterate characters\nmissing in encoding to \\x{ <small>HHHH</small> } where\n<small>HHHH</small> is the hexadecimal Unicode code\npoint.</p>\n\n<p style=\"margin-left:11%;\">--htmlcref</p>\n\n<p style=\"margin-left:17%;\">Transliterate characters\nmissing in encoding to &amp;#NNN; where <small>NNN</small>\nis the decimal Unicode code point.</p>\n\n<p style=\"margin-left:11%;\">--xmlcref</p>\n\n<p style=\"margin-left:17%;\">Transliterate characters\nmissing in encoding to &amp;#xHHHH; where\n<small>HHHH</small> is the hexadecimal Unicode code\npoint.</p>\n\n<p style=\"margin-left:11%;\">-h,--help</p>\n\n<p style=\"margin-left:17%;\">Show usage.</p>\n\n<p style=\"margin-left:11%;\">-D,--debug</p>\n\n<p style=\"margin-left:17%;\">Invokes debugging mode.\nPrimarily for Encode hackers.</p>\n\n<p style=\"margin-left:11%;\">-S,--scheme <i>scheme</i></p>\n\n<p style=\"margin-left:17%;\">Selects which scheme is to be\nused for conversion. Available schemes are as follows: <br>\nfrom_to</p>\n\n<p style=\"margin-left:23%;\">Uses Encode::from_to for\nconversion. This is the default.</p>\n\n<p style=\"margin-left:17%;\">decode_encode</p>\n\n<p style=\"margin-left:23%;\">Input strings are\n<b>decode()</b>d then <b>encode()</b>d. A straight two-step\nimplementation.</p>\n\n<p style=\"margin-left:17%;\">perlio</p>\n\n<p style=\"margin-left:23%;\">The new perlIO layer is used.\n<small>NI-S</small> &rsquo; favorite.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">You should use\nthis option if you are using <small>UTF-16</small> and\nothers which linefeed is not $/.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Like the\n<i>-D</i> option, this is also for Encode hackers.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/iconv\">iconv(1)</a>\n<a href=\"https://man.page/3/locale\">locale(3)</a> Encode Encode::Supported Encode::Alias\nPerlIO</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"]}