{"name":"ucf","description":"ucf - Update Configuration File: preserve user changes in configuration files","body":"\n\n<h1 align=\"center\">UCF</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">ucf - Update\nConfiguration File: preserve user changes in configuration\nfiles</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ucf</b>\n[<i>options</i>] <i>&lt;New File&gt;\n&lt;Destination&gt;</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ucf</b>\n[<i>options</i>] <i>--purge &lt;Destination&gt;</i></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This utility\nprovides a means of asking the user whether or not to accept\nnew versions of configuration files provided by the package\nmaintainer, with various heuristics designed to minimize\ninteraction time. It uses debconf to interact with the user,\nas per Debian policy. In the SYNOPSIS above, <i>New file</i>\nis the configuration file as provided by the package (either\nshipped with the package, or generated by the maintainer\nscripts on the fly), and <i>Destination</i> is the location\n(usually under /etc) where the real configuration file\nlives, and is potentially modified by the end user. Since\nthe files edited would be real files, and not symbolic\nlinks, <b>ucf</b> follows and resolves symbolic links before\nacting. As far as possible, ucf attempts to preserve the\nownership and permission of the <i>New file</i> as it is\ncopied to the new location.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This script\nattempts to provide conffile like handling for files\ninstalled under <i>/etc</i> not shipped in a <b>Debian</b>\npackage, but handled by the postinst instead. <b>Debian</b>\npolicy states that files under <i>/etc</i> which are\nconfiguration files <b>must</b> preserve user changes, and\nthis applies to files handled by maintainer scripts as well.\nUsing <b>ucf,</b> one may ship a bunch of default\nconfiguration files somewhere in <i>/usr</i> (\n<i>/usr/share/&lt;pkg&gt;</i> is a good location), and\nmaintain files in <i>/etc,</i> preserving user changes and\nin general offering the same facilities while upgrading that\n<b>dpkg</b> normally provides for\n<i>&ldquo;conffiles&rdquo;</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Additionally,\nthis script provides facilities for transitioning a file\nthat had not been provided <i>conffile</i> like protection\nto come under this schema, and attempts to minimize\nquestions asked at install time. Indeed, the transitioning\nfacility is better than the one offered by <b>dpkg</b> while\ntransitioning a file from a <i>non-conffile</i> to\n<i>conffile</i> status. The second form in the SYNOPSIS\nabove is for purging information about the configuration\nfile when the package is purged; and is critical for\nallowing smooth reinstallations.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">During the\ncourse of operations, when working with configuration files,\n<b>ucf</b> optionally creates copies of versions of the\nconfiguration file in question. For example, a file with the\nsuffix <i>ucf-old</i> holds the old version of a\nconfiguration file replaced by <b>ucf.</b> Also, copies of\nthe configuration file with the suffixes <i>ucf-new</i> and\n<i>ucf-dist</i> may be created; and the maintainer scripts\nshould consider purging copies of the configuration file\nwith these extensions during purge.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-h,\n--help</b></p>\n\n<p style=\"margin-left:22%;\">Print a short usage message</p>\n\n<p style=\"margin-left:11%;\"><b>-n, --no-action</b></p>\n\n<p style=\"margin-left:22%;\">Dry run. Print the actions that\nwould be taken if the script is invoked, but take no\naction.</p>\n\n<p style=\"margin-left:11%;\"><b>-d[n], --debug=[n]</b></p>\n\n<p style=\"margin-left:22%;\">Set the debug level to the\n(optional) level <i>n</i> (n defaults to 1). Please note\nthere must be no spaces before the optional digit n. This\nturns on copious debugging information.</p>\n\n<p style=\"margin-left:11%;\"><b>-p, --purge</b></p>\n\n<p style=\"margin-left:22%;\">Removes all vestiges of the\nfile from the state hashfile. This is required to allow a\npackage to be reinstalled after it is purged; since\notherwise, the real configuration file is removed, but it\nremains in the hash file; and on reinstall no action is\ntaken, since the md5sum of the new file matches that in the\nhashfile. In short, remember to use this option in the\npostrm for every configuration file managed by ucf when the\npackage is being purged (assuming ucf itself exists).\n<i>Note:</i> ucf does not actually touch the file on disk in\nthis operation, so any file removals are still the\nresponsibility of the calling package.</p>\n\n<p style=\"margin-left:11%;\"><b>-v, --verbose</b></p>\n\n<p style=\"margin-left:22%;\">Make the script be very verbose\nabout setting internal variables.</p>\n\n<p style=\"margin-left:11%;\"><b>-P foo, --package\nfoo</b></p>\n\n<p style=\"margin-left:22%;\">Don&rsquo;t follow dpkg-divert\ndiversions by package foo when updating configuration\nfiles.</p>\n\n<p style=\"margin-left:11%;\"><b>-s foo, --src-dir\nfoo</b></p>\n\n<p style=\"margin-left:22%;\">Set the source directory\n(historical md5sums are expected to live in files and sub\ndirectories of this directory) to foo. By default, the\ndirectory the new_file lives in is assumed to be the source\ndirectory. Setting this option overrides settings in the\nenvironment variable <b>UCF_SOURCE_DIR,</b> and in the\nconfiguration file variable <b>conf_source_dir.</b></p>\n\n<p style=\"margin-left:11%;\"><b>--sum-file foo</b></p>\n\n<p style=\"margin-left:22%;\">Force the historical md5sums to\nbe read from this file, rather than defaulting to living in\nthe source directory. Setting this option overrides settings\nin the environment variable <b>UCF_OLD_MDSUM_FILE,</b> and\nin the configuration file variable\n<b>conf_old_mdsum_file.</b></p>\n\n<p style=\"margin-left:11%;\"><b>--three-way</b></p>\n\n<p style=\"margin-left:22%;\">This turns on the option,\nduring installation, for the user to be offered a chance to\nsee a merge of the changes between old maintainer version\nand the new maintainer version into the local copy of the\nconfiguration file. If the user likes what they see, they\ncan ask to have these changes merged in. This allows one to\nget new upstream changes merged in even while retaining\nlocal modifications to the configuration file. This is\naccomplished by taking the configuration file and stashing\nit in a cache area during registration, and using diff3\nduring the install (the stashed file name is a munged\nversion of the full path of the configuration file to avoid\nname space clashes).</p>\n\n<p style=\"margin-left:11%;\"><b>--debconf-ok</b></p>\n\n<p style=\"margin-left:22%;\">Indicate that it is ok for\n<i>ucf</i> to use an already running debconf instance for\nprompting (it has always been ok to use ucf when debconf is\nnot running -- it shall invoke debconf as needed).</p>\n\n<p style=\"margin-left:11%;\"><b>--debconf-template\nfoo</b></p>\n\n<p style=\"margin-left:22%;\">Instruct ucf to use the named\nmultiselect debconf template instead of the normal\nucf-provided debconf template. The caller is responsible for\nensuring that the named template exists and has a list of\nchoices matching those for the default ucf template, and\nshould set Choices-C: ${CHOICES} to ensure the returned\nvalues match those from the default template. Note that the\nchoices must be different according to whether the\n<b>--three-way</b> option is also set.</p>\n\n<p style=\"margin-left:11%;\"><b>--state-dir\n/path/to/dir</b></p>\n\n<p style=\"margin-left:22%;\">Set the state directory to\n/path/to/dir instead of the default <i>/var/lib/ucf.</i>\nUsed mostly for testing.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-Z</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>Set SELinux security context of destination file to\ndefault type.</p></td></tr>\n</table>\n\n<h2>USAGE\n<a name=\"USAGE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The most common\ncase usage is pretty simple: a single line invocation in the\npostinst on configure, and another single line in the postrm\nto tell <b>ucf</b> to forget about the configuration file on\npurge (using the --purge option) is all that is needed\n(assuming ucf is still on the system).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It is\nrecommended that you also register any file being managed by\n<b>ucf</b> with the ucf registry; this associates the\nconfiguration file with the package it belongs to. This is\ndone with a simple call to <b>ucfr.</b> Users may then query\nthe association between a configuration file and the package\nusing the tool <b>ucfq.</b> Please see the appropriate\nmanual pages for details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If a file\nmaintained by maintainer scripts is being transitioned from\nan unprotected status to the protection afforded by the\nscript, the maintainer can help ease the transition by\nreducing the questions that may be asked at installation\ntime. Specifically, questions should not be asked if the\nfile in question is an unmodified version that was one\nshipped in a previous version of this package; and the\nmaintainer can help by telling the script about the\nhistorical md5sums that published versions of this file\ncontained.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The way to do\nthis is to either create a file called <b>&lt;New\nfile&gt;.md5sum,</b> with one md5sum on each line, (the file\nnames you use are ignored, except for the entry named\ndefault), or create a directory, called <b>&lt;New\nfile&gt;.md5sum.d,</b> which should contain any number of\nfiles, each containing a single line, namely, the md5sum of\na previous version of <b>&lt;New file&gt;.</b> The names of\nthese files are not important, with one exception: The file\ncalled default is treated specially. For example, the author\npersonally uses either package version numbers or release\ncode names, like <i>7.6.3,</i> or <i>potato.</i> If none of\nthe historical md5sums match, we are almost certain that\neither the historical record of md5sums is not complete, or\nthe user has changed the configuration file.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The default\nhistorical md5sum</b> <br>\nThe exception to the rule about names mentioned earlier is\nthat if no md5sums match, and if the file <b>&lt;New\nfile&gt;.md5sum.d/default</b> exists, or if there is a line\ncorresponding to a <i>default</i> file in <b>&lt;New\nfile&gt;.md5sum,</b> it shall be used as the default md5sum\nof the <i>previous</i> version of the package assumed to\nhave been installed on this machine. As you can see, unless\nthere are limited number of previously released packages\n(like just one), the maintainer is also making an informed\nguess, but the option is provided to the maintainer.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the file\n<b>&lt;New file&gt;.md5sum,</b> or the directory <b>&lt;New\nfile&gt;.md5sum.d</b> does not exist, or none of the md5sums\nmatch, we test the installed <i>&lt;Destination&gt;</i> file\nto see whether it is the same as the <i>&lt;New\nfile&gt;.</i> If not, we ask the user whether they want us\nto replace the file.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">An additional\nfacility is also offered: optionally, ucf can store one old\nversion of the maintainers copy of the configuration file,\nand, on upgrade, calculate the changes made in the\nmaintainers version of the configuration file, and apply\nthat patch to the local version of the file (on user\nrequest, of course). There is also a preview facility where\nthe user can inspect the results of such a merge, before\nasking the action to be taken.</p>\n\n<h2>ENVIRONMENT VARIABLES\n<a name=\"ENVIRONMENT VARIABLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The variable\n<b>UCF_FORCE_CONFFNEW,</b> if set, forces the new file to\nalways overwrite the installed destination file, while the\nvariable <b>UCF_FORCE_CONFFOLD,</b> if set silently retains\nthe installed file. <b>UCF_FORCE_CONFFMISS</b> is only\napplicable when the installed destination file does not\nexist (perhaps due to user removal),and forces ucf to\nrecreate the missing file (the default behaviour is to honor\nthe users wishes and not recreate the locally deleted file).\nAdditionally, when ucf creates an inferior shell, it\npopulates the variables <b>UCF_CONFFILE_NEW</b> and\n<b>UCF_CONFFILE_OLD</b> which are useful for inspecting the\nchanges.</p>\n\n<h2>FILES\n<a name=\"FILES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This script\ncreates the file <i>new_file.md5sum,</i> and it may copy the\nfile (presumably shipped with the package) <i>&lt;New\nfile&gt;</i> to its destination,\n<i>&lt;Destination&gt;.</i></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>/var/lib/ucf/hashfile,</i>\nand <i>/var/lib/ucf/hashfile.X,</i> where <i>X</i> is a\nsmall integer, where previous versions of the hashfile are\nstored.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>/etc/ucf.conf</i></p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the package\n<i>foo</i> wants to use ucf to handle user interaction for\nconfiguration file <i>foo.conf,</i> a version of which is\nprovided in the package as\n<i>/usr/share/foo/configuration,</i> a simple invocation of\nucf in the post inst file is all that is needed:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ucf</b>\n<i>/usr/share/foo/configuration /etc/foo.conf</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On purge, one\nshould tell ucf to forget about the file (see detailed\nexamples in /usr/share/doc/ucf/examples):</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ucf</b>\n<i>--purge /etc/foo.conf</i> Please note that purge can also\nbe used to make ucf forget the previous state of the files,\nand when the package is next installed or updated, ucf will\nask the user to replace the current cofiguration file. Do\nthis if you want to change your decision to not update to a\nmaintainer provided version of the configuration file.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The motivation\nfor this script was to provide conffile like handling for\nstart files for emacs lisp packages (for example,\n<i>/etc/emacs21/site-start.d/50psgml-init.el</i> ) These\nstart files are not shipped with the package, instead, they\nare installed during the post installation configuration\nphase by the script\n<i>/usr/lib/emacsen-common/emacs-package-install\n$package_name.</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This script is\nmeant to be invoked by the packages install script at\n<i>/usr/lib/emacsen-common/packages/install/$package_name</i>\nfor each flavour of installed emacsen by calling it with the\nproper values of new file (\n<i>/usr/share/emacs/site-lisp/&lt;pkg&gt;/&lt;pkg-init.el</i>\n), and dest file (\n<i>/etc/emacs21/site-start.d/50&lt;pkg-init.el</i> ), and it\nshould do the rest.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">ucf.conf(5),\nucfr(1), ucfq(1), and diff3(1). The <b>Debian</b> Emacs\npolicy, shipped with the package <i>emacsen-common.</i></p>\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This manual\npage was written Manoj Srivastava\n&lt;srivasta@debian.org&gt;, for the Debian GNU/Linux\nsystem.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#USAGE\">USAGE</a>","<a href=\"#ENVIRONMENT VARIABLES\">ENVIRONMENT VARIABLES</a>","<a href=\"#FILES\">FILES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#AUTHOR\">AUTHOR</a>"]}