{"name":"git-for-each-ref","description":"git-for-each-ref\n- Output information on each ref","body":"\n\n<h1 align=\"center\">GIT-FOR-EACH-REF</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">git-for-each-ref\n- Output information on each ref</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>git\nfor-each-ref</i> [--count=&lt;count&gt;]\n[--shell|--perl|--python|--tcl] <br>\n[(--sort=&lt;key&gt;)...] [--format=&lt;format&gt;]\n[&lt;pattern&gt;...] <br>\n[--points-at=&lt;object&gt;] <br>\n[--merged[=&lt;object&gt;]] [--no-merged[=&lt;object&gt;]]\n<br>\n[--contains[=&lt;object&gt;]]\n[--no-contains[=&lt;object&gt;]]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Iterate over\nall refs that match <b>&lt;pattern&gt;</b> and show them\naccording to the given <b>&lt;format&gt;</b>, after sorting\nthem according to the given set of <b>&lt;key&gt;</b>. If\n<b>&lt;count&gt;</b> is given, stop after showing that many\nrefs. The interpolated values in <b>&lt;format&gt;</b> can\noptionally be quoted as string literals in the specified\nhost language allowing their direct evaluation in that\nlanguage.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;pattern&gt;...</p>\n\n<p style=\"margin-left:17%;\">If one or more patterns are\ngiven, only refs are shown that match against at least one\npattern, either using fnmatch(3) or literally, in the latter\ncase matching completely or from the beginning up to a\nslash.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--count=&lt;count&gt;</p>\n\n<p style=\"margin-left:17%;\">By default the command shows\nall refs that match <b>&lt;pattern&gt;</b>. This option\nmakes it stop after showing that many refs.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--sort=&lt;key&gt;</p>\n\n<p style=\"margin-left:17%;\">A field name to sort on. Prefix\n<b>-</b> to sort in descending order of the value. When\nunspecified, <b>refname</b> is used. You may use the\n--sort=&lt;key&gt; option multiple times, in which case the\nlast key becomes the primary key.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--format=&lt;format&gt;</p>\n\n<p style=\"margin-left:17%;\">A string that interpolates\n<b>%(fieldname)</b> from a ref being shown and the object it\npoints at. If <b>fieldname</b> is prefixed with an asterisk\n(<b>*</b>) and the ref points at a tag object, use the value\nfor the field in the object which the tag object refers to\n(instead of the field in the tag object). When unspecified,\n<b>&lt;format&gt;</b> defaults to <b>%(objectname) SPC\n%(objecttype) TAB %(refname)</b>. It also interpolates\n<b>%%</b> to <b>%</b>, and <b>%xx</b> where <b>xx</b> are\nhex digits interpolates to character with hex code\n<b>xx</b>; for example <b>%00</b> interpolates to <b>\\0</b>\n(NUL), <b>%09</b> to <b>\\t</b> (TAB) and <b>%0a</b> to\n<b>\\n</b> (LF).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--color[=&lt;when&gt;]</p>\n\n<p style=\"margin-left:17%;\">Respect any colors specified in\nthe <b>--format</b> option. The <b>&lt;when&gt;</b> field\nmust be one of <b>always</b>, <b>never</b>, or <b>auto</b>\n(if <b>&lt;when&gt;</b> is absent, behave as if\n<b>always</b> was given).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--shell,\n--perl, --python, --tcl</p>\n\n<p style=\"margin-left:17%;\">If given, strings that\nsubstitute <b>%(fieldname)</b> placeholders are quoted as\nstring literals suitable for the specified host language.\nThis is meant to produce a scriptlet that can directly be\n&rsquo;eval&rsquo;ed.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--points-at=&lt;object&gt;</p>\n\n<p style=\"margin-left:17%;\">Only list refs which points at\nthe given object.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--merged[=&lt;object&gt;]</p>\n\n<p style=\"margin-left:17%;\">Only list refs whose tips are\nreachable from the specified commit (HEAD if not\nspecified).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--no-merged[=&lt;object&gt;]</p>\n\n<p style=\"margin-left:17%;\">Only list refs whose tips are\nnot reachable from the specified commit (HEAD if not\nspecified).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--contains[=&lt;object&gt;]</p>\n\n<p style=\"margin-left:17%;\">Only list refs which contain\nthe specified commit (HEAD if not specified).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--no-contains[=&lt;object&gt;]</p>\n\n<p style=\"margin-left:17%;\">Only list refs which\ndon&rsquo;t contain the specified commit (HEAD if not\nspecified).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--ignore-case</p>\n\n<p style=\"margin-left:17%;\">Sorting and filtering refs are\ncase insensitive.</p>\n\n<h2>FIELD NAMES\n<a name=\"FIELD NAMES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Various values\nfrom structured fields in referenced objects can be used to\ninterpolate into the resulting output, or as sort keys.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For all\nobjects, the following names can be used:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">refname</p>\n\n<p style=\"margin-left:17%;\">The name of the ref (the part\nafter $GIT_DIR/). For a non-ambiguous short name of the ref\nappend <b>:short</b>. The option core.warnAmbiguousRefs is\nused to select the strict abbreviation mode. If\n<b>lstrip=&lt;N&gt;</b> (<b>rstrip=&lt;N&gt;</b>) is\nappended, strips <b>&lt;N&gt;</b> slash-separated path\ncomponents from the front (back) of the refname (e.g.\n<b>%(refname:lstrip=2)</b> turns <b>refs/tags/foo</b> into\n<b>foo</b> and <b>%(refname:rstrip=2)</b> turns\n<b>refs/tags/foo</b> into <b>refs</b>). If <b>&lt;N&gt;</b>\nis a negative number, strip as many path components as\nnecessary from the specified end to leave <b>-&lt;N&gt;</b>\npath components (e.g. <b>%(refname:lstrip=-2)</b> turns\n<b>refs/tags/foo</b> into <b>tags/foo</b> and\n<b>%(refname:rstrip=-1)</b> turns <b>refs/tags/foo</b> into\n<b>refs</b>). When the ref does not have enough components,\nthe result becomes an empty string if stripping with\npositive &lt;N&gt;, or it becomes the full refname if\nstripping with negative &lt;N&gt;. Neither is an error.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>strip</b>\ncan be used as a synonym to <b>lstrip</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">objecttype</p>\n\n<p style=\"margin-left:17%;\">The type of the object\n(<b>blob</b>, <b>tree</b>, <b>commit</b>, <b>tag</b>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">objectsize</p>\n\n<p style=\"margin-left:17%;\">The size of the object (the\nsame as <i>git cat-file -s</i> reports). Append <b>:disk</b>\nto get the size, in bytes, that the object takes up on disk.\nSee the note about on-disk sizes in the <b>CAVEATS</b>\nsection below.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">objectname</p>\n\n<p style=\"margin-left:17%;\">The object name (aka SHA-1).\nFor a non-ambiguous abbreviation of the object name append\n<b>:short</b>. For an abbreviation of the object name with\ndesired length append <b>:short=&lt;length&gt;</b>, where\nthe minimum length is MINIMUM_ABBREV. The length may be\nexceeded to ensure unique object names.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">deltabase</p>\n\n<p style=\"margin-left:17%;\">This expands to the object name\nof the delta base for the given object, if it is stored as a\ndelta. Otherwise it expands to the null object name (all\nzeroes).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">upstream</p>\n\n<p style=\"margin-left:17%;\">The name of a local ref which\ncan be considered &ldquo;upstream&rdquo; from the displayed\nref. Respects <b>:short</b>, <b>:lstrip</b> and\n<b>:rstrip</b> in the same way as <b>refname</b> above.\nAdditionally respects <b>:track</b> to show &quot;[ahead N,\nbehind M]&quot; and <b>:trackshort</b> to show the terse\nversion: &quot;&gt;&quot; (ahead), &quot;&lt;&quot;\n(behind), &quot;&lt;&gt;&quot; (ahead and behind), or\n&quot;=&quot; (in sync). <b>:track</b> also prints\n&quot;[gone]&quot; whenever unknown upstream ref is\nencountered. Append <b>:track,nobracket</b> to show tracking\ninformation without brackets (i.e &quot;ahead N, behind\nM&quot;).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For any\nremote-tracking branch <b>%(upstream)</b>,\n<b>%(upstream:remotename)</b> and\n<b>%(upstream:remoteref)</b> refer to the name of the remote\nand the name of the tracked remote ref, respectively. In\nother words, the remote-tracking branch can be updated\nexplicitly and individually by using the refspec\n<b>%(upstream:remoteref):%(upstream)</b> to fetch from\n<b>%(upstream:remotename)</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Has no effect\nif the ref does not have tracking information associated\nwith it. All the options apart from <b>nobracket</b> are\nmutually exclusive, but if used together the last option is\nselected.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">push</p>\n\n<p style=\"margin-left:17%;\">The name of a local ref which\nrepresents the <b>@{push}</b> location for the displayed\nref. Respects <b>:short</b>, <b>:lstrip</b>, <b>:rstrip</b>,\n<b>:track</b>, <b>:trackshort</b>, <b>:remotename</b>, and\n<b>:remoteref</b> options as <b>upstream</b> does. Produces\nan empty string if no <b>@{push}</b> ref is configured.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">HEAD</p>\n\n<p style=\"margin-left:17%;\"><i>*</i> if HEAD matches\ncurrent ref (the checked out branch), ' ' otherwise.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">color</p>\n\n<p style=\"margin-left:17%;\">Change output color. Followed\nby <b>:&lt;colorname&gt;</b>, where color names are\ndescribed under Values in the &quot;CONFIGURATION FILE&quot;\nsection of <a href=\"https://man.page/1/git-config\">git-config(1)</a>. For example,\n<b>%(color:bold red)</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">align</p>\n\n<p style=\"margin-left:17%;\">Left-, middle-, or right-align\nthe content between %(align:...) and %(end). The\n&quot;align:&quot; is followed by <b>width=&lt;width&gt;</b>\nand <b>position=&lt;position&gt;</b> in any order separated\nby a comma, where the <b>&lt;position&gt;</b> is either\nleft, right or middle, default being left and\n<b>&lt;width&gt;</b> is the total length of the content with\nalignment. For brevity, the &quot;width=&quot; and/or\n&quot;position=&quot; prefixes may be omitted, and bare\n&lt;width&gt; and &lt;position&gt; used instead. For\ninstance, <b>%(align:&lt;width&gt;,&lt;position&gt;)</b>. If\nthe contents length is more than the width then no alignment\nis performed. If used with <b>--quote</b> everything in\nbetween %(align:...) and %(end) is quoted, but if nested\nthen only the topmost level performs quoting.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if</p>\n\n<p style=\"margin-left:17%;\">Used as\n%(if)...%(then)...%(end) or\n%(if)...%(then)...%(else)...%(end). If there is an atom with\nvalue or string literal after the %(if) then everything\nafter the %(then) is printed, else if the %(else) atom is\nused, then everything after %(else) is printed. We ignore\nspace when evaluating the string before %(then), this is\nuseful when we use the %(HEAD) atom which prints either\n&quot;*&quot; or &quot; &quot; and we want to apply the\n<i>if</i> condition only on the <i>HEAD</i> ref. Append\n&quot;:equals=&lt;string&gt;&quot; or\n&quot;:notequals=&lt;string&gt;&quot; to compare the value\nbetween the %(if:...) and %(then) atoms with the given\nstring.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">symref</p>\n\n<p style=\"margin-left:17%;\">The ref which the given\nsymbolic ref refers to. If not a symbolic ref, nothing is\nprinted. Respects the <b>:short</b>, <b>:lstrip</b> and\n<b>:rstrip</b> options in the same way as <b>refname</b>\nabove.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">worktreepath</p>\n\n<p style=\"margin-left:17%;\">The absolute path to the\nworktree in which the ref is checked out, if it is checked\nout in any linked worktree. Empty string otherwise.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In addition to\nthe above, for commit and tag objects, the header field\nnames (<b>tree</b>, <b>parent</b>, <b>object</b>,\n<b>type</b>, and <b>tag</b>) can be used to specify the\nvalue in the header field. Fields <b>tree</b> and\n<b>parent</b> can also be used with modifier <b>:short</b>\nand <b>:short=&lt;length&gt;</b> just like\n<b>objectname</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For commit and\ntag objects, the special <b>creatordate</b> and\n<b>creator</b> fields will correspond to the appropriate\ndate or name-email-date tuple from the <b>committer</b> or\n<b>tagger</b> fields depending on the object type. These are\nintended for working on a mix of annotated and lightweight\ntags.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Fields that\nhave name-email-date tuple as its value (<b>author</b>,\n<b>committer</b>, and <b>tagger</b>) can be suffixed with\n<b>name</b>, <b>email</b>, and <b>date</b> to extract the\nnamed component. For email fields (<b>authoremail</b>,\n<b>committeremail</b> and <b>taggeremail</b>), <b>:trim</b>\ncan be appended to get the email without angle brackets, and\n<b>:localpart</b> to get the part before the <b>@</b> symbol\nout of the trimmed email.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The raw data in\nan object is <b>raw</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">raw:size</p>\n\n<p style=\"margin-left:17%;\">The raw data size of the\nobject.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that\n<b>--format=%(raw)</b> can not be used with <b>--python</b>,\n<b>--shell</b>, <b>--tcl</b>, because such language may not\nsupport arbitrary binary data in their string variable\ntype.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The message in\na commit or a tag object is <b>contents</b>, from which\n<b>contents:&lt;part&gt;</b> can be used to extract various\nparts out of:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">contents:size</p>\n\n<p style=\"margin-left:17%;\">The size in bytes of the commit\nor tag message.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">contents:subject</p>\n\n<p style=\"margin-left:17%;\">The first paragraph of the\nmessage, which typically is a single line, is taken as the\n&quot;subject&quot; of the commit or the tag message.\nInstead of <b>contents:subject</b>, field <b>subject</b> can\nalso be used to obtain same results. <b>:sanitize</b> can be\nappended to <b>subject</b> for subject line suitable for\nfilename.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">contents:body</p>\n\n<p style=\"margin-left:17%;\">The remainder of the commit or\nthe tag message that follows the &quot;subject&quot;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">contents:signature</p>\n\n<p style=\"margin-left:17%;\">The optional GPG signature of\nthe tag.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">contents:lines=N</p>\n\n<p style=\"margin-left:17%;\">The first <b>N</b> lines of the\nmessage.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Additionally,\nthe trailers as interpreted by\n<a href=\"https://man.page/1/git-interpret-trailers\">git-interpret-trailers(1)</a> are obtained as\n<b>trailers[:options]</b> (or by using the historical alias\n<b>contents:trailers[:options]</b>). For valid [:option]\nvalues see <b>trailers</b> section of <a href=\"https://man.page/1/git-log\">git-log(1)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For sorting\npurposes, fields with numeric values sort in numeric order\n(<b>objectsize</b>, <b>authordate</b>, <b>committerdate</b>,\n<b>creatordate</b>, <b>taggerdate</b>). All other fields are\nused to sort in their byte-value order.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">There is also\nan option to sort by versions, this can be done by using the\nfieldname <b>version:refname</b> or its alias\n<b>v:refname</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In any case, a\nfield name that refers to a field inapplicable to the object\nreferred by the ref does not cause an error. It returns an\nempty string instead.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">As a special\ncase for the date-type fields, you may specify a format for\nthe date by adding <b>:</b> followed by date format name\n(see the values the <b>--date</b> option to\n<a href=\"https://man.page/1/git-rev-list\">git-rev-list(1)</a> takes).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Some atoms like\n%(align) and %(if) always require a matching %(end). We call\nthem &quot;opening atoms&quot; and sometimes denote them as\n%($open).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When a\nscripting language specific quoting is in effect, everything\nbetween a top-level opening atom and its matching %(end) is\nevaluated according to the semantics of the opening atom and\nonly its result from the top-level is quoted.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">An example\ndirectly producing formatted text. Show the most recent 3\ntagged commits:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">#!/bin/sh</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">git\nfor-each-ref --count=3 --sort='-*authordate' \\ <br>\n--format='From: %(*authorname) %(*authoremail) <br>\nSubject: %(*subject) <br>\nDate: %(*authordate) <br>\nRef: %(*refname)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">%(*body) <br>\n' 'refs/tags'</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A simple\nexample showing the use of shell eval on the output,\ndemonstrating the use of --shell. List the prefixes of all\nheads:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">#!/bin/sh</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">git\nfor-each-ref --shell --format=&quot;ref=%(refname)&quot;\nrefs/heads | \\ <br>\nwhile read entry <br>\ndo <br>\neval &quot;$entry&quot; <br>\necho &rsquo;dirname $ref&rsquo; <br>\ndone</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A bit more\nelaborate report on tags, demonstrating that the format may\nbe an entire script:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">#!/bin/sh</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">fmt=' <br>\nr=%(refname) <br>\nt=%(*objecttype) <br>\nT=${r#refs/tags/}</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">o=%(*objectname)\n<br>\nn=%(*authorname) <br>\ne=%(*authoremail) <br>\ns=%(*subject) <br>\nd=%(*authordate) <br>\nb=%(*body)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">kind=Tag <br>\nif test &quot;z$t&quot; = z <br>\nthen <br>\n# could be a lightweight tag <br>\nt=%(objecttype) <br>\nkind=&quot;Lightweight tag&quot; <br>\no=%(objectname) <br>\nn=%(authorname) <br>\ne=%(authoremail) <br>\ns=%(subject) <br>\nd=%(authordate) <br>\nb=%(body) <br>\nfi <br>\necho &quot;$kind $T points at a $t object $o&quot; <br>\nif test &quot;z$t&quot; = zcommit <br>\nthen <br>\necho &quot;The commit was authored by $n $e <br>\nat $d, and titled</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$s</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Its message\nreads as: <br>\n&quot; <br>\necho &quot;$b&quot; | sed -e &quot;s/^/ /&quot; <br>\necho <br>\nfi <br>\n'</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">eval=&rsquo;git\nfor-each-ref --shell --format=&quot;$fmt&quot; \\ <br>\n--sort='*objecttype' \\ <br>\n--sort=-taggerdate \\ <br>\nrefs/tags&rsquo; <br>\neval &quot;$eval&quot;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">An example to\nshow the usage of %(if)...%(then)...%(else)...%(end). This\nprefixes the current branch with a star.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">git\nfor-each-ref --format=&quot;%(if)%(HEAD)%(then)* %(else)\n%(end)%(refname:short)&quot; refs/heads/</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">An example to\nshow the usage of %(if)...%(then)...%(end). This prints the\nauthorname, if present.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">git\nfor-each-ref\n--format=&quot;%(refname)%(if)%(authorname)%(then) Authored\nby: %(authorname)%(end)&quot;</p>\n\n<h2>CAVEATS\n<a name=\"CAVEATS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that the\nsizes of objects on disk are reported accurately, but care\nshould be taken in drawing conclusions about which refs or\nobjects are responsible for disk usage. The size of a packed\nnon-delta object may be much larger than the size of objects\nwhich delta against it, but the choice of which object is\nthe base and which is the delta is arbitrary and is subject\nto change during a repack.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note also that\nmultiple copies of an object may be present in the object\ndatabase; in this case, it is undefined which copy&rsquo;s\nsize or delta base will be reported.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">When combining\nmultiple <b>--contains</b> and <b>--no-contains</b> filters,\nonly references that contain at least one of the\n<b>--contains</b> commits and contain none of the\n<b>--no-contains</b> commits are shown.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When combining\nmultiple <b>--merged</b> and <b>--no-merged</b> filters,\nonly references that are reachable from at least one of the\n<b>--merged</b> commits and from none of the\n<b>--no-merged</b> commits are shown.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/git-show-ref\">git-show-ref(1)</a></p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Part of the\n<a href=\"https://man.page/1/git\">git(1)</a> suite</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#FIELD NAMES\">FIELD NAMES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#CAVEATS\">CAVEATS</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#GIT\">GIT</a>"]}