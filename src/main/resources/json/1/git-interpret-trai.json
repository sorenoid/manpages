{"name":"git-interpret-trai","body":"\n\n<h1 align=\"center\">GIT-INTERPRET-TRAI</h1>\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">git-interpret-trailers\n- Add or parse structured information in commit messages</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>git\ninterpret-trailers</i> [&lt;options&gt;] [(--trailer\n&lt;token&gt;[(=|:)&lt;value&gt;])...] [&lt;file&gt;...]\n<i><br>\ngit interpret-trailers</i> [&lt;options&gt;] [--parse]\n[&lt;file&gt;...]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Help parsing or\nadding <i>trailers</i> lines, that look similar to RFC 822\ne-mail headers, at the end of the otherwise free-form part\nof a commit message.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This command\nreads some patches or commit messages from either the\n&lt;file&gt; arguments or the standard input if no\n&lt;file&gt; is specified. If <b>--parse</b> is specified,\nthe output consists of the parsed trailers.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Otherwise, this\ncommand applies the arguments passed using the\n<b>--trailer</b> option, if any, to the commit message part\nof each input file. The result is emitted on the standard\noutput.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Some\nconfiguration variables control the way the <b>--trailer</b>\narguments are applied to each commit message and the way any\nexisting trailer in the commit message is changed. They also\nmake it possible to automatically add some trailers.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">By default, a\n<i>&lt;token&gt;=&lt;value&gt;</i> or\n<i>&lt;token&gt;:&lt;value&gt;</i> argument given using\n<b>--trailer</b> will be appended after the existing\ntrailers only if the last trailer has a different\n(&lt;token&gt;, &lt;value&gt;) pair (or if there is no\nexisting trailer). The &lt;token&gt; and &lt;value&gt; parts\nwill be trimmed to remove starting and trailing whitespace,\nand the resulting trimmed &lt;token&gt; and &lt;value&gt;\nwill appear in the message like this:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">token:\nvalue</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This means that\nthe trimmed &lt;token&gt; and &lt;value&gt; will be\nseparated by <b>': '</b> (one colon followed by one\nspace).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">By default the\nnew trailer will appear at the end of all the existing\ntrailers. If there is no existing trailer, the new trailer\nwill appear after the commit message part of the output,\nand, if there is no line with only spaces at the end of the\ncommit message part, one blank line will be added before the\nnew trailer.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Existing\ntrailers are extracted from the input message by looking for\na group of one or more lines that (i) is all trailers, or\n(ii) contains at least one Git-generated or user-configured\ntrailer and consists of at least 25% trailers. The group\nmust be preceded by one or more empty (or whitespace-only)\nlines. The group must either be at the end of the message or\nbe the last non-whitespace lines before a line that starts\nwith <i>---</i> (followed by a space or the end of the\nline). Such three minus signs start the patch part of the\nmessage. See also <b>--no-divider</b> below.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When reading\ntrailers, there can be whitespaces after the token, the\nseparator and the value. There can also be whitespaces\ninside the token and the value. The value may be split over\nmultiple lines with each subsequent line starting with\nwhitespace, like the &quot;folding&quot; in RFC 822.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that\n<i>trailers</i> do not follow and are not intended to follow\nmany rules for RFC 822 headers. For example they do not\nfollow the encoding rules and probably many other rules.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--in-place</p>\n\n<p style=\"margin-left:17%;\">Edit the files in place.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--trim-empty</p>\n\n<p style=\"margin-left:17%;\">If the &lt;value&gt; part of\nany trailer contains only whitespace, the whole trailer will\nbe removed from the resulting message. This applies to\nexisting trailers as well as new trailers.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--trailer\n&lt;token&gt;[(=|:)&lt;value&gt;]</p>\n\n<p style=\"margin-left:17%;\">Specify a (&lt;token&gt;,\n&lt;value&gt;) pair that should be applied as a trailer to\nthe input messages. See the description of this command.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--where\n&lt;placement&gt;, --no-where</p>\n\n<p style=\"margin-left:17%;\">Specify where all new trailers\nwill be added. A setting provided with <i>--where</i>\noverrides all configuration variables and applies to all\n<i>--trailer</i> options until the next occurrence of\n<i>--where</i> or <i>--no-where</i>. Possible values are\n<b>after</b>, <b>before</b>, <b>end</b> or <b>start</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--if-exists\n&lt;action&gt;, --no-if-exists</p>\n\n<p style=\"margin-left:17%;\">Specify what action will be\nperformed when there is already at least one trailer with\nthe same &lt;token&gt; in the message. A setting provided\nwith <i>--if-exists</i> overrides all configuration\nvariables and applies to all <i>--trailer</i> options until\nthe next occurrence of <i>--if-exists</i> or\n<i>--no-if-exists</i>. Possible actions are\n<b>addIfDifferent</b>, <b>addIfDifferentNeighbor</b>,\n<b>add</b>, <b>replace</b> and <b>doNothing</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--if-missing\n&lt;action&gt;, --no-if-missing</p>\n\n<p style=\"margin-left:17%;\">Specify what action will be\nperformed when there is no other trailer with the same\n&lt;token&gt; in the message. A setting provided with\n<i>--if-missing</i> overrides all configuration variables\nand applies to all <i>--trailer</i> options until the next\noccurrence of <i>--if-missing</i> or <i>--no-if-missing</i>.\nPossible actions are <b>doNothing</b> or <b>add</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--only-trailers</p>\n\n<p style=\"margin-left:17%;\">Output only the trailers, not\nany other parts of the input.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--only-input</p>\n\n<p style=\"margin-left:17%;\">Output only trailers that exist\nin the input; do not add any from the command-line or by\nfollowing configured <b>trailer.*</b> rules.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--unfold</p>\n\n<p style=\"margin-left:17%;\">Remove any\nwhitespace-continuation in trailers, so that each trailer\nappears on a line by itself with its full content.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--parse</p>\n\n<p style=\"margin-left:17%;\">A convenience alias for\n<b>--only-trailers --only-input --unfold</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--no-divider</p>\n\n<p style=\"margin-left:17%;\">Do not treat <b>---</b> as the\nend of the commit message. Use this when you know your input\ncontains just the commit message itself (and not an email or\nthe output of <b>git format-patch</b>).</p>\n\n<h2>CONFIGURATION VARIABLES\n<a name=\"CONFIGURATION VARIABLES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">trailer.separators</p>\n\n<p style=\"margin-left:17%;\">This option tells which\ncharacters are recognized as trailer separators. By default\nonly <i>:</i> is recognized as a trailer separator, except\nthat <i>=</i> is always accepted on the command line for\ncompatibility with other git commands.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The first\ncharacter given by this option will be the default character\nused when another separator is not specified in the config\nfor this trailer.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For example, if\nthe value for this option is &quot;%=$&quot;, then only\nlines using the format\n<i>&lt;token&gt;&lt;sep&gt;&lt;value&gt;</i> with\n&lt;sep&gt; containing <i>%</i>, <i>=</i> or <i>$</i> and\nthen spaces will be considered trailers. And <i>%</i> will\nbe the default separator used, so by default trailers will\nappear like: <i>&lt;token&gt;% &lt;value&gt;</i> (one\npercent sign and one space will appear between the token and\nthe value).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">trailer.where</p>\n\n<p style=\"margin-left:17%;\">This option tells where a new\ntrailer will be added.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This can be\n<b>end</b>, which is the default, <b>start</b>, <b>after</b>\nor <b>before</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If it is\n<b>end</b>, then each new trailer will appear at the end of\nthe existing trailers.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If it is\n<b>start</b>, then each new trailer will appear at the\nstart, instead of the end, of the existing trailers.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If it is\n<b>after</b>, then each new trailer will appear just after\nthe last trailer with the same &lt;token&gt;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If it is\n<b>before</b>, then each new trailer will appear just before\nthe first trailer with the same &lt;token&gt;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">trailer.ifexists</p>\n\n<p style=\"margin-left:17%;\">This option makes it possible\nto choose what action will be performed when there is\nalready at least one trailer with the same &lt;token&gt; in\nthe message.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The valid\nvalues for this option are: <b>addIfDifferentNeighbor</b>\n(this is the default), <b>addIfDifferent</b>, <b>add</b>,\n<b>replace</b> or <b>doNothing</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">With\n<b>addIfDifferentNeighbor</b>, a new trailer will be added\nonly if no trailer with the same (&lt;token&gt;,\n&lt;value&gt;) pair is above or below the line where the new\ntrailer will be added.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">With\n<b>addIfDifferent</b>, a new trailer will be added only if\nno trailer with the same (&lt;token&gt;, &lt;value&gt;) pair\nis already in the message.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">With\n<b>add</b>, a new trailer will be added, even if some\ntrailers with the same (&lt;token&gt;, &lt;value&gt;) pair\nare already in the message.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">With\n<b>replace</b>, an existing trailer with the same\n&lt;token&gt; will be deleted and the new trailer will be\nadded. The deleted trailer will be the closest one (with the\nsame &lt;token&gt;) to the place where the new one will be\nadded.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">With\n<b>doNothing</b>, nothing will be done; that is no new\ntrailer will be added if there is already one with the same\n&lt;token&gt; in the message.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">trailer.ifmissing</p>\n\n<p style=\"margin-left:17%;\">This option makes it possible\nto choose what action will be performed when there is not\nyet any trailer with the same &lt;token&gt; in the\nmessage.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The valid\nvalues for this option are: <b>add</b> (this is the default)\nand <b>doNothing</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">With\n<b>add</b>, a new trailer will be added.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">With\n<b>doNothing</b>, nothing will be done.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">trailer.&lt;token&gt;.key</p>\n\n<p style=\"margin-left:17%;\">This <b>key</b> will be used\ninstead of &lt;token&gt; in the trailer. At the end of this\nkey, a separator can appear and then some space characters.\nBy default the only valid separator is <i>:</i>, but this\ncan be changed using the <b>trailer.separators</b> config\nvariable.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If there is a\nseparator, then the key will be used instead of both the\n&lt;token&gt; and the default separator when adding the\ntrailer.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">trailer.&lt;token&gt;.where</p>\n\n<p style=\"margin-left:17%;\">This option takes the same\nvalues as the <i>trailer.where</i> configuration variable\nand it overrides what is specified by that option for\ntrailers with the specified &lt;token&gt;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">trailer.&lt;token&gt;.ifexists</p>\n\n<p style=\"margin-left:17%;\">This option takes the same\nvalues as the <i>trailer.ifexists</i> configuration variable\nand it overrides what is specified by that option for\ntrailers with the specified &lt;token&gt;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">trailer.&lt;token&gt;.ifmissing</p>\n\n<p style=\"margin-left:17%;\">This option takes the same\nvalues as the <i>trailer.ifmissing</i> configuration\nvariable and it overrides what is specified by that option\nfor trailers with the specified &lt;token&gt;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">trailer.&lt;token&gt;.command</p>\n\n<p style=\"margin-left:17%;\">This option behaves in the same\nway as <i>trailer.&lt;token&gt;.cmd</i>, except that it\ndoesn&rsquo;t pass anything as argument to the specified\ncommand. Instead the first occurrence of substring $ARG is\nreplaced by the value that would be passed as argument.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\n<i>trailer.&lt;token&gt;.command</i> option has been\ndeprecated in favor of <i>trailer.&lt;token&gt;.cmd</i> due\nto the fact that $ARG in the user&rsquo;s command is only\nreplaced once and that the original way of replacing $ARG is\nnot safe.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When both\n<i>trailer.&lt;token&gt;.cmd</i> and\n<i>trailer.&lt;token&gt;.command</i> are given for the same\n&lt;token&gt;, <i>trailer.&lt;token&gt;.cmd</i> is used and\n<i>trailer.&lt;token&gt;.command</i> is ignored.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">trailer.&lt;token&gt;.cmd</p>\n\n<p style=\"margin-left:17%;\">This option can be used to\nspecify a shell command that will be called: once to\nautomatically add a trailer with the specified\n&lt;token&gt;, and then each time a <i>--trailer\n&lt;token&gt;=&lt;value&gt;</i> argument to modify the\n&lt;value&gt; of the trailer that this option would\nproduce.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When the\nspecified command is first called to add a trailer with the\nspecified &lt;token&gt;, the behavior is as if a special\n<i>--trailer &lt;token&gt;=&lt;value&gt;</i> argument was\nadded at the beginning of the &quot;git\ninterpret-trailers&quot; command, where &lt;value&gt; is\ntaken to be the standard output of the command with any\nleading and trailing whitespace trimmed off.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If some\n<i>--trailer &lt;token&gt;=&lt;value&gt;</i> arguments are\nalso passed on the command line, the command is called again\nonce for each of these arguments with the same\n&lt;token&gt;. And the &lt;value&gt; part of these\narguments, if any, will be passed to the command as its\nfirst argument. This way the command can produce a\n&lt;value&gt; computed from the &lt;value&gt; passed in the\n<i>--trailer &lt;token&gt;=&lt;value&gt;</i> argument.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nConfigure a <i>sign</i> trailer with a <i>Signed-off-by</i>\nkey, and then add two of these trailers to a message:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ git config\ntrailer.sign.key &quot;Signed-off-by&quot; <br>\n$ cat msg.txt <br>\nsubject</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">message <br>\n$ cat msg.txt | git interpret-trailers --trailer 'sign:\nAlice &lt;alice@example.com&gt;' --trailer 'sign: Bob\n&lt;bob@example.com&gt;' <br>\nsubject</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">message</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Signed-off-by:\nAlice &lt;alice@example.com&gt; <br>\nSigned-off-by: Bob &lt;bob@example.com&gt;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Use the\n<b>--in-place</b> option to edit a message file in\nplace:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ cat msg.txt\n<br>\nsubject</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">message</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Signed-off-by:\nBob &lt;bob@example.com&gt; <br>\n$ git interpret-trailers --trailer 'Acked-by: Alice\n&lt;alice@example.com&gt;' --in-place msg.txt <br>\n$ cat msg.txt <br>\nsubject</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">message</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Signed-off-by:\nBob &lt;bob@example.com&gt; <br>\nAcked-by: Alice &lt;alice@example.com&gt;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Extract\nthe last commit as a patch, and add a <i>Cc</i> and a\n<i>Reviewed-by</i> trailer to it:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ git\nformat-patch -1 <br>\n0001-foo.patch <br>\n$ git interpret-trailers --trailer 'Cc: Alice\n&lt;alice@example.com&gt;' --trailer 'Reviewed-by: Bob\n&lt;bob@example.com&gt;' 0001-foo.patch\n&gt;0001-bar.patch</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nConfigure a <i>sign</i> trailer with a command to\nautomatically add a 'Signed-off-by: ' with the author\ninformation only if there is no 'Signed-off-by: ' already,\nand show how it works:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ git config\ntrailer.sign.key &quot;Signed-off-by: &quot; <br>\n$ git config trailer.sign.ifmissing add <br>\n$ git config trailer.sign.ifexists doNothing <br>\n$ git config trailer.sign.command 'echo &quot;$(git config\nuser.name) &lt;$(git config user.email)&gt;&quot;' <br>\n$ git interpret-trailers &lt;&lt;EOF <br>\n&gt; EOF</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Signed-off-by:\nBob &lt;bob@example.com&gt; <br>\n$ git interpret-trailers &lt;&lt;EOF <br>\n&gt; Signed-off-by: Alice &lt;alice@example.com&gt; <br>\n&gt; EOF</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Signed-off-by:\nAlice &lt;alice@example.com&gt;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nConfigure a <i>fix</i> trailer with a key that contains a\n<i>#</i> and no space after this character, and show how it\nworks:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ git config\ntrailer.separators &quot;:#&quot; <br>\n$ git config trailer.fix.key &quot;Fix #&quot; <br>\n$ echo &quot;subject&quot; | git interpret-trailers\n--trailer fix=42 <br>\nsubject</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Fix #42</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nConfigure a <i>help</i> trailer with a cmd use a script\n<b>glog-find-author</b> which search specified author\nidentity from git log in git repository and show how it\nworks:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ cat\n~/bin/glog-find-author <br>\n#!/bin/sh <br>\ntest -n &quot;$1&quot; &amp;&amp; git log\n--author=&quot;$1&quot; --pretty=&quot;%an &lt;%ae&gt;&quot;\n-1 || true <br>\n$ git config trailer.help.key &quot;Helped-by: &quot; <br>\n$ git config trailer.help.ifExists\n&quot;addIfDifferentNeighbor&quot; <br>\n$ git config trailer.help.cmd\n&quot;~/bin/glog-find-author&quot; <br>\n$ git interpret-trailers --trailer=&quot;help:Junio&quot;\n--trailer=&quot;help:Couder&quot; &lt;&lt;EOF <br>\n&gt; subject <br>\n&gt; <br>\n&gt; message <br>\n&gt; <br>\n&gt; EOF <br>\nsubject</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">message</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Helped-by:\nJunio C Hamano &lt;gitster@pobox.com&gt; <br>\nHelped-by: Christian Couder\n&lt;christian.couder@gmail.com&gt;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nConfigure a <i>ref</i> trailer with a cmd use a script\n<b>glog-grep</b> to grep last relevant commit from git log\nin the git repository and show how it works:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ cat\n~/bin/glog-grep <br>\n#!/bin/sh <br>\ntest -n &quot;$1&quot; &amp;&amp; git log --grep\n&quot;$1&quot; --pretty=reference -1 || true <br>\n$ git config trailer.ref.key &quot;Reference-to: &quot; <br>\n$ git config trailer.ref.ifExists &quot;replace&quot; <br>\n$ git config trailer.ref.cmd &quot;~/bin/glog-grep&quot;\n<br>\n$ git interpret-trailers --trailer=&quot;ref:Add copyright\nnotices.&quot; &lt;&lt;EOF <br>\n&gt; subject <br>\n&gt; <br>\n&gt; message <br>\n&gt; <br>\n&gt; EOF <br>\nsubject</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">message</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Reference-to:\n8bc9a0c769 (Add copyright notices., 2005-04-07)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nConfigure a <i>see</i> trailer with a command to show the\nsubject of a commit that is related, and show how it\nworks:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ git config\ntrailer.see.key &quot;See-also: &quot; <br>\n$ git config trailer.see.ifExists &quot;replace&quot; <br>\n$ git config trailer.see.ifMissing &quot;doNothing&quot;\n<br>\n$ git config trailer.see.command &quot;git log -1 --oneline\n--format=\\&quot;%h (%s)\\&quot; --abbrev-commit --abbrev=14\n\\$ARG&quot; <br>\n$ git interpret-trailers &lt;&lt;EOF <br>\n&gt; subject <br>\n&gt; <br>\n&gt; message <br>\n&gt; <br>\n&gt; see: HEAD~2 <br>\n&gt; EOF <br>\nsubject</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">message</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">See-also:\nfe3187489d69c4 (subject of related commit)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nConfigure a commit template with some trailers with empty\nvalues (using sed to show and keep the trailing spaces at\nthe end of the trailers), then configure a commit-msg hook\nthat uses <i>git interpret-trailers</i> to remove trailers\nwith empty values and to add a <i>git-version</i>\ntrailer:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ sed -e 's/\nZ$/ /' &gt;commit_template.txt &lt;&lt;EOF <br>\n&gt; ***subject*** <br>\n&gt; <br>\n&gt; ***message*** <br>\n&gt; <br>\n&gt; Fixes: Z <br>\n&gt; Cc: Z <br>\n&gt; Reviewed-by: Z <br>\n&gt; Signed-off-by: Z <br>\n&gt; EOF <br>\n$ git config commit.template commit_template.txt <br>\n$ cat &gt;.git/hooks/commit-msg &lt;&lt;EOF <br>\n&gt; #!/bin/sh <br>\n&gt; git interpret-trailers --trim-empty --trailer\n&quot;git-version: \\$(git describe)&quot; &quot;\\$1&quot;\n&gt; &quot;\\$1.new&quot; <br>\n&gt; mv &quot;\\$1.new&quot; &quot;\\$1&quot; <br>\n&gt; EOF <br>\n$ chmod +x .git/hooks/commit-msg</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/git-commit\">git-commit(1)</a>,\n<a href=\"https://man.page/1/git-format-patch\">git-format-patch(1)</a>, <a href=\"https://man.page/1/git-config\">git-config(1)</a></p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Part of the\n<a href=\"https://man.page/1/git\">git(1)</a> suite</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#CONFIGURATION VARIABLES\">CONFIGURATION VARIABLES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#GIT\">GIT</a>"]}