{"name":"addr2line","description":"addr2line - convert addresses into file names and line numbers","body":"\n\n<h1 align=\"center\">ADDR2LINE</h1>\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">addr2line -\nconvert addresses into file names and line numbers</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">addr2line\n[<b>-a</b>|<b>--addresses</b>] <br>\n[<b>-b</b> <i>bfdname</i>|<b>--target=</b><i>bfdname</i>]\n<br>\n[<b>-C</b>|<b>--demangle</b>[=<i>style</i>]] <br>\n[<b>-r</b>|<b>--no-recurse-limit</b>] <br>\n[<b>-R</b>|<b>--recurse-limit</b>] <br>\n[<b>-e</b> <i>filename</i>|<b>--exe=</b><i>filename</i>]\n<br>\n[<b>-f</b>|<b>--functions</b>] [<b>-s</b>|<b>--basename</b>]\n<br>\n[<b>-i</b>|<b>--inlines</b>] <br>\n[<b>-p</b>|<b>--pretty-print</b>] <br>\n[<b>-j</b>|<b>--section=</b><i>name</i>] <br>\n[<b>-H</b>|<b>--help</b>] [<b>-V</b>|<b>--version</b>] <br>\n[addr addr ...]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>addr2line</b>\ntranslates addresses into file names and line numbers. Given\nan address in an executable or an offset in a section of a\nrelocatable object, it uses the debugging information to\nfigure out which file name and line number are associated\nwith it.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The executable\nor relocatable object to use is specified with the <b>-e</b>\noption. The default is the file <i>a.out</i>. The section in\nthe relocatable object to use is specified with the\n<b>-j</b> option.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>addr2line</b>\nhas two modes of operation.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the first,\nhexadecimal addresses are specified on the command line, and\n<b>addr2line</b> displays the file name and line number for\neach address.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the second,\n<b>addr2line</b> reads hexadecimal addresses from standard\ninput, and prints the file name and line number for each\naddress on standard output. In this mode, <b>addr2line</b>\nmay be used in a pipe to convert dynamically chosen\naddresses.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The format of\nthe output is <b><small>FILENAME:LINENO</small></b> . By\ndefault each input address generates one line of output.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Two options can\ngenerate additional lines before each\n<b><small>FILENAME:LINENO</small></b> line (in that\norder).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\n<b>-a</b> option is used then a line with the input address\nis displayed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\n<b>-f</b> option is used, then a line with the\n<b><small>FUNCTIONNAME</small></b> is displayed. This is the\nname of the function containing the address.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">One option can\ngenerate additional lines after the\n<b><small>FILENAME:LINENO</small></b> line.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\n<b>-i</b> option is used and the code at the given address\nis present there because of inlining by the compiler then\nadditional lines are displayed afterwards. One or two extra\nlines (if the <b>-f</b> option is used) are displayed for\neach inlined function.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Alternatively\nif the <b>-p</b> option is used then each input address\ngenerates a single, long, output line containing the\naddress, the function name, the file name and the line\nnumber. If the <b>-i</b> option has also been used then any\ninlined functions will be displayed in the same manner, but\non separate lines, and prefixed by the text <b>(inlined\nby)</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the file\nname or function name can not be determined,\n<b>addr2line</b> will print two question marks in their\nplace. If the line number can not be determined,\n<b>addr2line</b> will print 0.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The long and\nshort forms of options, shown here as alternatives, are\nequivalent.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-a</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--addresses</b></p>\n\n<p style=\"margin-left:17%;\">Display the address before the\nfunction name, file and line number information. The address\nis printed with a <b>0x</b> prefix to easily identify\nit.</p>\n\n<p style=\"margin-left:11%;\"><b>-b</b> <i>bfdname</i>\n<b><br>\n--target=</b><i>bfdname</i></p>\n\n<p style=\"margin-left:17%;\">Specify that the object-code\nformat for the object files is <i>bfdname</i>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-C</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>--demangle[=</b><i>style</i><b>]</b></p>\n\n<p style=\"margin-left:17%;\">Decode (<i>demangle</i>)\nlow-level symbol names into user-level names. Besides\nremoving any initial underscore prepended by the system,\nthis makes C <small>++</small> function names readable.\nDifferent compilers have different mangling styles. The\noptional demangling style argument can be used to choose an\nappropriate demangling style for your compiler.</p>\n\n<p style=\"margin-left:11%;\"><b>-e</b> <i>filename</i>\n<b><br>\n--exe=</b><i>filename</i></p>\n\n<p style=\"margin-left:17%;\">Specify the name of the\nexecutable for which addresses should be translated. The\ndefault file is <i>a.out</i>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-f</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--functions</b></p>\n\n<p style=\"margin-left:17%;\">Display function names as well\nas file and line number information.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-s</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--basenames</b></p>\n\n<p style=\"margin-left:17%;\">Display only the base of each\nfile name.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-i</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--inlines</b></p>\n\n<p style=\"margin-left:17%;\">If the address belongs to a\nfunction that was inlined, the source information for all\nenclosing scopes back to the first non-inlined function will\nalso be printed. For example, if &quot;main&quot; inlines\n&quot;callee1&quot; which inlines &quot;callee2&quot;, and\naddress is from &quot;callee2&quot;, the source information\nfor &quot;callee1&quot; and &quot;main&quot; will also be\nprinted.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-j</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--section</b></p>\n\n<p style=\"margin-left:17%;\">Read offsets relative to the\nspecified section instead of absolute addresses.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-p</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--pretty-print</b></p>\n\n<p style=\"margin-left:17%;\">Make the output more human\nfriendly: each location are printed on one line. If option\n<b>-i</b> is specified, lines for all enclosing scopes are\nprefixed with <b>(inlined by)</b>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-r</b></p></td>\n<td width=\"86%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-R</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--recurse-limit <br>\n--no-recurse-limit <br>\n--recursion-limit <br>\n--no-recursion-limit</b></p>\n\n<p style=\"margin-left:17%;\">Enables or disables a limit on\nthe amount of recursion performed whilst demangling strings.\nSince the name mangling formats allow for an infinite level\nof recursion it is possible to create strings whose decoding\nwill exhaust the amount of stack space available on the host\nmachine, triggering a memory fault. The limit tries to\nprevent this from happening by restricting recursion to 2048\nlevels of nesting.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The default is\nfor this limit to be enabled, but disabling it may be\nnecessary in order to demangle truly complicated names. Note\nhowever that if the recursion limit is disabled then stack\nexhaustion is possible and any bug reports about such an\nevent will be rejected.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The <b>-r</b>\noption is a synonym for the <b>--no-recurse-limit</b>\noption. The <b>-R</b> option is a synonym for the\n<b>--recurse-limit</b> option.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note this\noption is only effective if the <b>-C</b> or\n<b>--demangle</b> option has been enabled.</p>\n\n<p style=\"margin-left:11%;\"><b>@</b><i>file</i></p>\n\n<p style=\"margin-left:17%;\">Read command-line options from\n<i>file</i>. The options read are inserted in place of the\noriginal @<i>file</i> option. If <i>file</i> does not exist,\nor cannot be read, then the option will be treated\nliterally, and not removed.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Options in\n<i>file</i> are separated by whitespace. A whitespace\ncharacter may be included in an option by surrounding the\nentire option in either single or double quotes. Any\ncharacter (including a backslash) may be included by\nprefixing the character to be included with a backslash. The\n<i>file</i> may itself contain additional @<i>file</i>\noptions; any such options will be processed recursively.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Info entries\nfor <i>binutils</i>.</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright (c)\n1991-2022 Free Software Foundation, Inc.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Permission is\ngranted to copy, distribute and/or modify this document\nunder the terms of the <small>GNU</small> Free Documentation\nLicense, Version 1.3 or any later version published by the\nFree Software Foundation; with no Invariant Sections, with\nno Front-Cover Texts, and with no Back-Cover Texts. A copy\nof the license is included in the section entitled &quot;\n<small>GNU</small> Free Documentation License&quot;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"]}