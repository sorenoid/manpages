{"name":"git-pack-refs","body":"\n\n<h1 align=\"center\">GIT-PACK-REFS</h1>\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">git-pack-refs -\nPack heads and tags for efficient repository access</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>git\npack-refs</i> [--all] [--no-prune]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Traditionally,\ntips of branches and tags (collectively known as\n<i>refs</i>) were stored one file per ref in a\n(sub)directory under <b>$GIT_DIR/refs</b> directory. While\nmany branch tips tend to be updated often, most tags and\nsome branch tips are never updated. When a repository has\nhundreds or thousands of tags, this one-file-per-ref format\nboth wastes storage and hurts performance.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This command is\nused to solve the storage and performance problem by storing\nthe refs in a single file, <b>$GIT_DIR/packed-refs</b>. When\na ref is missing from the traditional <b>$GIT_DIR/refs</b>\ndirectory hierarchy, it is looked up in this file and used\nif found.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Subsequent\nupdates to branches always create new files under\n<b>$GIT_DIR/refs</b> directory hierarchy.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A recommended\npractice to deal with a repository with too many refs is to\npack its refs with <b>--all</b> once, and occasionally run\n<b>git pack-refs</b>. Tags are by definition stationary and\nare not expected to change. Branch heads will be packed with\nthe initial <b>pack-refs --all</b>, but only the currently\nactive branch heads will become unpacked, and the next\n<b>pack-refs</b> (without <b>--all</b>) will leave them\nunpacked.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--all</p>\n\n<p style=\"margin-left:17%;\">The command by default packs\nall tags and refs that are already packed, and leaves other\nrefs alone. This is because branches are expected to be\nactively developed and packing their tips does not help\nperformance. This option causes branch tips to be packed as\nwell. Useful for a repository with many branches of\nhistorical interests.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--no-prune</p>\n\n<p style=\"margin-left:17%;\">The command usually removes\nloose refs under <b>$GIT_DIR/refs</b> hierarchy after\npacking them. This option tells it not to.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Older\ndocumentation written before the packed-refs mechanism was\nintroduced may still say things like\n&quot;.git/refs/heads/&lt;branch&gt; file exists&quot; when\nit means &quot;branch &lt;branch&gt; exists&quot;.</p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Part of the\n<a href=\"https://man.page/1/git\">git(1)</a> suite</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#GIT\">GIT</a>"]}