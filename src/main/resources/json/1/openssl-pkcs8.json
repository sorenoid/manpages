{"name":"openssl-pkcs8","body":"\n\n<h1 align=\"center\">OPENSSL-PKCS8</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">openssl-pkcs8 -\nPKCS#8 format private key conversion command</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>openssl\npkcs8</b> [<b>-help</b>] [<b>-topk8</b>] [<b>-inform\n<small>DER</small></b> | <b><small>PEM</small></b> ]\n[<b>-outform <small>DER</small></b> |\n<b><small>PEM</small></b> ] [<b>-in</b> <i>filename</i>]\n[<b>-passin</b> <i>arg</i>] [<b>-out</b> <i>filename</i>]\n[<b>-passout</b> <i>arg</i>] [<b>-iter</b> <i>count</i>]\n[<b>-noiter</b>] [<b>-nocrypt</b>] [<b>-traditional</b>]\n[<b>-v2</b> <i>alg</i>] [<b>-v2prf</b> <i>alg</i>]\n[<b>-v1</b> <i>alg</i>] [<b>-scrypt</b>] [<b>-scrypt_N</b>\n<i>N</i>] [<b>-scrypt_r</b> <i>r</i>] [<b>-scrypt_p</b>\n<i>p</i>] [<b>-rand</b> <i>files</i>] [<b>-writerand</b>\n<i>file</i>] [<b>-engine</b> <i>id</i>] [<b>-provider</b>\n<i>name</i>] [<b>-provider-path</b> <i>path</i>]\n[<b>-propquery</b> <i>propq</i>]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This command\nprocesses private keys in PKCS#8 format. It can handle both\nunencrypted PKCS#8 PrivateKeyInfo format and\nEncryptedPrivateKeyInfo format with a variety of PKCS#5\n(v1.5 and v2.0) and PKCS#12 algorithms.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>-help</b></p>\n\n<p style=\"margin-left:17%;\">Print out a usage message.</p>\n\n<p style=\"margin-left:11%;\"><b>-topk8</b></p>\n\n<p style=\"margin-left:17%;\">Normally a PKCS#8 private key\nis expected on input and a private key will be written to\nthe output file. With the <b>-topk8</b> option the situation\nis reversed: it reads a private key and writes a PKCS#8\nformat key.</p>\n\n<p style=\"margin-left:11%;\"><b>-inform\n<small>DER</small></b> | <b><small>PEM</small></b> ,\n<b>-outform <small>DER</small></b> |\n<b><small>PEM</small></b></p>\n\n<p style=\"margin-left:17%;\">The input and formats; the\ndefault is <b><small>PEM</small></b> . See\n<a href=\"https://man.page/1/openssl-format-options\">openssl-format-options(1)</a> for details.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If a key is\nbeing converted from PKCS#8 form (i.e. the <b>-topk8</b>\noption is not used) then the input file must be in PKCS#8\nformat. An encrypted key is expected unless <b>-nocrypt</b>\nis included.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If\n<b>-topk8</b> is not used and <b><small>PEM</small></b> mode\nis set the output file will be an unencrypted private key in\nPKCS#8 format. If the <b>-traditional</b> option is used\nthen a traditional format private key is written\ninstead.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If\n<b>-topk8</b> is not used and <b><small>DER</small></b> mode\nis set the output file will be an unencrypted private key in\ntraditional <small>DER</small> format.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If\n<b>-topk8</b> is used then any supported private key can be\nused for the input file in a format specified by\n<b>-inform</b>. The output file will be encrypted PKCS#8\nformat using the specified encryption parameters unless\n<b>-nocrypt</b> is included.</p>\n\n<p style=\"margin-left:11%;\"><b>-traditional</b></p>\n\n<p style=\"margin-left:17%;\">When this option is present and\n<b>-topk8</b> is not a traditional format private key is\nwritten.</p>\n\n<p style=\"margin-left:11%;\"><b>-in</b> <i>filename</i></p>\n\n<p style=\"margin-left:17%;\">This specifies the input\nfilename to read a key from or standard input if this option\nis not specified. If the key is encrypted a pass phrase will\nbe prompted for.</p>\n\n<p style=\"margin-left:11%;\"><b>-passin</b> <i>arg</i>,\n<b>-passout</b> <i>arg</i></p>\n\n<p style=\"margin-left:17%;\">The password source for the\ninput and output file. For more information about the format\nof <b>arg</b> see <a href=\"https://man.page/1/openssl-passphrase-options\">openssl-passphrase-options(1)</a>.</p>\n\n<p style=\"margin-left:11%;\"><b>-out</b> <i>filename</i></p>\n\n<p style=\"margin-left:17%;\">This specifies the output\nfilename to write a key to or standard output by default. If\nany encryption options are set then a pass phrase will be\nprompted for. The output filename should <b>not</b> be the\nsame as the input filename.</p>\n\n<p style=\"margin-left:11%;\"><b>-iter</b> <i>count</i></p>\n\n<p style=\"margin-left:17%;\">When creating new PKCS#8\ncontainers, use a given number of iterations on the password\nin deriving the encryption key for the PKCS#8 output. High\nvalues increase the time required to brute-force a PKCS#8\ncontainer.</p>\n\n<p style=\"margin-left:11%;\"><b>-noiter</b></p>\n\n<p style=\"margin-left:17%;\">When creating new PKCS#8\ncontainers, use 1 as iteration count.</p>\n\n<p style=\"margin-left:11%;\"><b>-nocrypt</b></p>\n\n<p style=\"margin-left:17%;\">PKCS#8 keys generated or input\nare normally PKCS#8 EncryptedPrivateKeyInfo structures using\nan appropriate password based encryption algorithm. With\nthis option an unencrypted PrivateKeyInfo structure is\nexpected or output. This option does not encrypt private\nkeys at all and should only be used when absolutely\nnecessary. Certain software such as some versions of Java\ncode signing software used unencrypted private keys.</p>\n\n<p style=\"margin-left:11%;\"><b>-v2</b> <i>alg</i></p>\n\n<p style=\"margin-left:17%;\">This option sets the PKCS#5\nv2.0 algorithm.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The <i>alg</i>\nargument is the encryption algorithm to use, valid values\ninclude <b>aes128</b>, <b>aes256</b> and <b>des3</b>. If\nthis option isn&rsquo;t specified then <b>aes256</b> is\nused.</p>\n\n<p style=\"margin-left:11%;\"><b>-v2prf</b> <i>alg</i></p>\n\n<p style=\"margin-left:17%;\">This option sets the\n<small>PRF</small> algorithm to use with PKCS#5 v2.0. A\ntypical value value would be <b>hmacWithSHA256</b>. If this\noption isn&rsquo;t set then the default for the cipher is\nused or <b>hmacWithSHA256</b> if there is no default.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Some\nimplementations may not support custom <small>PRF</small>\nalgorithms and may require the <b>hmacWithSHA1</b> option to\nwork.</p>\n\n<p style=\"margin-left:11%;\"><b>-v1</b> <i>alg</i></p>\n\n<p style=\"margin-left:17%;\">This option indicates a PKCS#5\nv1.5 or PKCS#12 algorithm should be used. Some older\nimplementations may not support PKCS#5 v2.0 and may require\nthis option. If not specified PKCS#5 v2.0 form is used.</p>\n\n<p style=\"margin-left:11%;\"><b>-scrypt</b></p>\n\n<p style=\"margin-left:17%;\">Uses the <b>scrypt</b>\nalgorithm for private key encryption using default\nparameters: currently N=16384, r=8 and p=1 and\n<small>AES</small> in <small>CBC</small> mode with a 256 bit\nkey. These parameters can be modified using the\n<b>-scrypt_N</b>, <b>-scrypt_r</b>, <b>-scrypt_p</b> and\n<b>-v2</b> options.</p>\n\n<p style=\"margin-left:11%;\"><b>-scrypt_N</b> <i>N</i>,\n<b>-scrypt_r</b> <i>r</i>, <b>-scrypt_p</b> <i>p</i></p>\n\n<p style=\"margin-left:17%;\">Sets the scrypt <i>N</i>,\n<i>r</i> or <i>p</i> parameters.</p>\n\n<p style=\"margin-left:11%;\"><b>-rand</b> <i>files</i>,\n<b>-writerand</b> <i>file</i></p>\n\n<p style=\"margin-left:17%;\">See &quot;Random State\nOptions&quot; in <a href=\"https://man.page/1/openssl\">openssl(1)</a> for details.</p>\n\n<p style=\"margin-left:11%;\"><b>-engine</b> <i>id</i></p>\n\n<p style=\"margin-left:17%;\">See &quot;Engine Options&quot;\nin <a href=\"https://man.page/1/openssl\">openssl(1)</a>. This option is deprecated.</p>\n\n<p style=\"margin-left:11%;\"><b>-provider</b> <i>name</i>\n<b><br>\n-provider-path</b> <i>path</i> <b><br>\n-propquery</b> <i>propq</i></p>\n\n<p style=\"margin-left:17%;\">See &quot;Provider\nOptions&quot; in <a href=\"https://man.page/1/openssl\">openssl(1)</a>, <a href=\"https://man.page/7/provider\">provider(7)</a>, and\n<a href=\"https://man.page/7/property\">property(7)</a>.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">By default,\nwhen converting a key to PKCS#8 format, PKCS#5 v2.0 using\n256 bit <small>AES</small> with <small>HMAC</small> and\n<small>SHA256</small> is used.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Some older\nimplementations do not support PKCS#5 v2.0 format and\nrequire the older PKCS#5 v1.5 form instead, possibly also\nrequiring insecure weak encryption algorithms such as 56 bit\n<small>DES.</small></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Private keys\nencrypted using PKCS#5 v2.0 algorithms and high iteration\ncounts are more secure that those encrypted using the\ntraditional SSLeay compatible formats. So if additional\nsecurity is considered important the keys should be\nconverted.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It is possible\nto write out <small>DER</small> encoded encrypted private\nkeys in PKCS#8 format because the encryption details are\nincluded at an <small>ASN1</small> level whereas the\ntraditional format includes them at a <small>PEM</small>\nlevel.</p>\n\n<h2>PKCS#5 V1.5 AND PKCS#12 ALGORITHMS\n<a name=\"PKCS#5 V1.5 AND PKCS#12 ALGORITHMS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Various\nalgorithms can be used with the <b>-v1</b> command line\noption, including PKCS#5 v1.5 and PKCS#12. These are\ndescribed in more detail below. <b><small><br>\nPBE-MD2-DES PBE-MD5-DES</small></b></p>\n\n<p style=\"margin-left:17%;\">These algorithms were included\nin the original PKCS#5 v1.5 specification. They only offer\n56 bits of protection since they both use\n<small>DES.</small></p>\n\n\n<p style=\"margin-left:11%;\"><small><b>PBE-SHA1-RC2-64</b></small>\n, <b><small>PBE-MD2-RC2-64</small></b> ,\n<b><small>PBE-MD5-RC2-64</small></b> ,\n<b><small>PBE-SHA1-DES</small></b></p>\n\n<p style=\"margin-left:17%;\">These algorithms are not\nmentioned in the original PKCS#5 v1.5 specification but they\nuse the same key derivation algorithm and are supported by\nsome software. They are mentioned in PKCS#5 v2.0. They use\neither 64 bit <small>RC2</small> or 56 bit\n<small>DES.</small></p>\n\n\n<p style=\"margin-left:11%;\"><small><b>PBE-SHA1-RC4-128</b></small>\n, <b><small>PBE-SHA1-RC4-40</small></b> ,\n<b><small>PBE-SHA1-3DES</small></b> ,\n<b><small>PBE-SHA1-2DES</small></b> , <b><small><br>\nPBE-SHA1-RC2-128</small></b> ,\n<b><small>PBE-SHA1-RC2-40</small></b></p>\n\n<p style=\"margin-left:17%;\">These algorithms use the\nPKCS#12 password based encryption algorithm and allow strong\nencryption algorithms like triple <small>DES</small> or 128\nbit <small>RC2</small> to be used.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Convert a\nprivate key to PKCS#8 format using default parameters (\n<small>AES</small> with 256 bit key and\n<b>hmacWithSHA256</b>):</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">openssl pkcs8\n-in key.pem -topk8 -out enckey.pem</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Convert a\nprivate key to PKCS#8 unencrypted format:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">openssl pkcs8\n-in key.pem -topk8 -nocrypt -out enckey.pem</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Convert a\nprivate key to PKCS#5 v2.0 format using triple\n<small>DES:</small></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">openssl pkcs8\n-in key.pem -topk8 -v2 des3 -out enckey.pem</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Convert a\nprivate key to PKCS#5 v2.0 format using <small>AES</small>\nwith 256 bits in <small>CBC</small> mode and\n<b>hmacWithSHA512</b> <small>PRF:</small></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">openssl pkcs8\n-in key.pem -topk8 -v2 aes-256-cbc -v2prf hmacWithSHA512\n-out enckey.pem</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Convert a\nprivate key to PKCS#8 using a PKCS#5 1.5 compatible\nalgorithm ( <small>DES</small> ):</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">openssl pkcs8\n-in key.pem -topk8 -v1 PBE-MD5-DES -out enckey.pem</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Convert a\nprivate key to PKCS#8 using a PKCS#12 compatible algorithm\n(3DES):</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">openssl pkcs8\n-in key.pem -topk8 -out enckey.pem -v1 PBE-SHA1-3DES</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Read a\n<small>DER</small> unencrypted PKCS#8 format private\nkey:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">openssl pkcs8\n-inform DER -nocrypt -in key.der -out key.pem</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Convert a\nprivate key from any PKCS#8 encrypted format to traditional\nformat:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">openssl pkcs8\n-in pk8.pem -traditional -out key.pem</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Convert a\nprivate key to PKCS#8 format, encrypting with\n<small>AES-256</small> and with one million iterations of\nthe password:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">openssl pkcs8\n-in key.pem -topk8 -v2 aes-256-cbc -iter 1000000 -out\npk8.pem</p>\n\n<h2>STANDARDS\n<a name=\"STANDARDS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Test vectors\nfrom this PKCS#5 v2.0 implementation were posted to the\npkcs-tng mailing list using triple <small>DES, DES</small>\nand <small>RC2</small> with high iteration counts, several\npeople confirmed that they could decrypt the private keys\nproduced and therefore, it can be assumed that the PKCS#5\nv2.0 implementation is reasonably accurate at least as far\nas these algorithms are concerned.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The format of\nPKCS#8 <small>DSA</small> (and other) private keys is not\nwell documented: it is hidden away in PKCS#11 v2.01, section\n11.9. OpenSSL&rsquo;s default <small>DSA</small> PKCS#8\nprivate key format complies with this standard.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">There should be\nan option that prints out the encryption algorithm in use\nand other details such as the iteration count.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/openssl\">openssl(1)</a>,\n<a href=\"https://man.page/1/openssl-dsa\">openssl-dsa(1)</a>, <a href=\"https://man.page/1/openssl-rsa\">openssl-rsa(1)</a>,\n<a href=\"https://man.page/1/openssl-genrsa\">openssl-genrsa(1)</a>, <a href=\"https://man.page/1/openssl-gendsa\">openssl-gendsa(1)</a></p>\n\n<h2>HISTORY\n<a name=\"HISTORY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>-iter</b> option was added in OpenSSL 1.1.0.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>-engine</b> option was deprecated in OpenSSL 3.0.</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright\n2000-2021 The OpenSSL Project Authors. All Rights\nReserved.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Licensed under\nthe Apache License 2.0 (the &quot;License&quot;). You may\nnot use this file except in compliance with the License. You\ncan obtain a copy in the file <small>LICENSE</small> in the\nsource distribution or at\n&lt;https://www.openssl.org/source/license.html&gt;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#PKCS#5 V1.5 AND PKCS#12 ALGORITHMS\">PKCS#5 V1.5 AND PKCS#12 ALGORITHMS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#STANDARDS\">STANDARDS</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#HISTORY\">HISTORY</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"]}