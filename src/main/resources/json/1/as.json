{"name":"as","description":"AS - the portable GNU assembler.","body":"\n\n<h1 align=\"center\">AS</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">AS - the\nportable GNU assembler.</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">as\n[<b>-a</b>[<b>cdghlns</b>][=<i>file</i>]]\n[<b>--alternate</b>] [<b>-D</b>] <br>\n[<b>--compress-debug-sections</b>]\n[<b>--nocompress-debug-sections</b>] <br>\n[<b>--debug-prefix-map</b> <i>old</i>=<i>new</i>] <br>\n[<b>--defsym</b> <i>sym</i>=<i>val</i>] [<b>-f</b>]\n[<b>-g</b>] [<b>--gstabs</b>] <br>\n[<b>--gstabs+</b>] [<b>--gdwarf-&lt;N&gt;</b>]\n[<b>--gdwarf-sections</b>] <br>\n[<b>--gdwarf-cie-version</b>= <i><small>VERSION</small></i>\n] <br>\n[<b>--help</b>] [<b>-I</b> <i>dir</i>] [<b>-J</b>] <br>\n[<b>-K</b>] [<b>-L</b>] [<b>--listing-lhs-width</b>=\n<i><small>NUM</small></i> ] <br>\n[<b>--listing-lhs-width2</b>= <i><small>NUM</small></i> ]\n[<b>--listing-rhs-width</b>= <i><small>NUM</small></i> ]\n<br>\n[<b>--listing-cont-lines</b>= <i><small>NUM</small></i> ]\n[<b>--keep-locals</b>] <br>\n[<b>--no-pad-sections</b>] <br>\n[<b>-o</b> <i>objfile</i>] [<b>-R</b>] <br>\n[<b>--statistics</b>] <br>\n[<b>-v</b>] [<b>-version</b>] [<b>--version</b>] <br>\n[<b>-W</b>] [<b>--warn</b>] [<b>--fatal-warnings</b>]\n[<b>-w</b>] [<b>-x</b>] <br>\n[<b>-Z</b>] [<b>@</b> <i><small>FILE</small></i> ] <br>\n[<b>--sectname-subst</b>]\n[<b>--size-check=[error|warning]</b>] <br>\n[<b>--elf-stt-common=[no|yes]</b>] <br>\n[<b>--generate-missing-build-notes=[no|yes]</b>] <br>\n[<b>--multibyte-handling=[allow|warn|warn-sym-only]</b>]\n<br>\n[<b>--target-help</b>] [<i>target-options</i>] <br>\n[<b>--</b>|<i>files</i> ...]</p>\n\n<h2>TARGET\n<a name=\"TARGET\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\nAArch64 options:</i> <br>\n[<b>-EB</b>|<b>-EL</b>] <br>\n[<b>-mabi</b>= <i><small>ABI</small></i> ]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target Alpha\noptions:</i> <br>\n[<b>-m</b><i>cpu</i>] <br>\n[<b>-mdebug</b> | <b>-no-mdebug</b>] <br>\n[<b>-replace</b> | <b>-noreplace</b>] <br>\n[<b>-relax</b>] [<b>-g</b>] [<b>-G</b><i>size</i>] <br>\n[<b>-F</b>] [<b>-32addr</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\n<small>ARC</small> options:</i> <br>\n[<b>-mcpu=</b><i>cpu</i>] <br>\n\n[<b>-mA6</b>|<b>-mARC600</b>|<b>-mARC601</b>|<b>-mA7</b>|<b>-mARC700</b>|<b>-mEM</b>|<b>-mHS</b>]\n<br>\n[<b>-mcode-density</b>] <br>\n[<b>-mrelax</b>] <br>\n[<b>-EB</b>|<b>-EL</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\n<small>ARM</small> options:</i> <br>\n[<b>-mcpu</b>=<i>processor</i>[+<i>extension</i>...]] <br>\n[<b>-march</b>=<i>architecture</i>[+<i>extension</i>...]]\n<br>\n[<b>-mfpu</b>=<i>floating-point-format</i>] <br>\n[<b>-mfloat-abi</b>=<i>abi</i>] <br>\n[<b>-meabi</b>=<i>ver</i>] <br>\n[<b>-mthumb</b>] <br>\n[<b>-EB</b>|<b>-EL</b>] <br>\n[<b>-mapcs-32</b>|<b>-mapcs-26</b>|<b>-mapcs-float</b>|\n<b><br>\n-mapcs-reentrant</b>] <br>\n[<b>-mthumb-interwork</b>] [<b>-k</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\nBlackfin options:</i> <br>\n[<b>-mcpu</b>=<i>processor</i>[-<i>sirevision</i>]] <br>\n[<b>-mfdpic</b>] <br>\n[<b>-mno-fdpic</b>] <br>\n[<b>-mnopic</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\n<small>BPF</small> options:</i> <br>\n[<b>-EL</b>] [<b>-EB</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\n<small>CRIS</small> options:</i> <br>\n[<b>--underscore</b> | <b>--no-underscore</b>] <br>\n[<b>--pic</b>] [<b>-N</b>] <br>\n[<b>--emulation=criself</b> | <b>--emulation=crisaout</b>]\n<br>\n[<b>--march=v0_v10</b> | <b>--march=v10</b> |\n<b>--march=v32</b> | <b>--march=common_v10_v32</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target C-SKY\noptions:</i> <br>\n[<b>-march=</b><i>arch</i>] [<b>-mcpu=</b><i>cpu</i>] <br>\n[<b>-EL</b>] [<b>-mlittle-endian</b>] [<b>-EB</b>]\n[<b>-mbig-endian</b>] <br>\n[<b>-fpic</b>] [<b>-pic</b>] <br>\n[<b>-mljump</b>] [<b>-mno-ljump</b>] <br>\n[<b>-force2bsr</b>] [<b>-mforce2bsr</b>]\n[<b>-no-force2bsr</b>] [<b>-mno-force2bsr</b>] <br>\n[<b>-jsri2bsr</b>] [<b>-mjsri2bsr</b>] [<b>-no-jsri2bsr</b>\n] [<b>-mno-jsri2bsr</b>] <br>\n[<b>-mnolrw</b> ] [<b>-mno-lrw</b>] <br>\n[<b>-melrw</b>] [<b>-mno-elrw</b>] <br>\n[<b>-mlaf</b> ] [<b>-mliterals-after-func</b>] <br>\n[<b>-mno-laf</b>] [<b>-mno-literals-after-func</b>] <br>\n[<b>-mlabr</b>] [<b>-mliterals-after-br</b>] <br>\n[<b>-mno-labr</b>] [<b>-mnoliterals-after-br</b>] <br>\n[<b>-mistack</b>] [<b>-mno-istack</b>] <br>\n[<b>-mhard-float</b>] [<b>-mmp</b>] [<b>-mcp</b>]\n[<b>-mcache</b>] <br>\n[<b>-msecurity</b>] [<b>-mtrust</b>] <br>\n[<b>-mdsp</b>] [<b>-medsp</b>] [<b>-mvdsp</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target D10V\noptions:</i> <br>\n[<b>-O</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target D30V\noptions:</i> <br>\n[<b>-O</b>|<b>-n</b>|<b>-N</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\n<small>EPIPHANY</small> options:</i> <br>\n[<b>-mepiphany</b>|<b>-mepiphany16</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\nH8/300 options:</i> <br>\n[-h-tick-hex]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target i386\noptions:</i> <br>\n[<b>--32</b>|<b>--x32</b>|<b>--64</b>] [<b>-n</b>] <br>\n[<b>-march</b>= <i><small>CPU</small></i> [+\n<i><small>EXTENSION</small></i> ...]] [<b>-mtune</b>=\n<i><small>CPU</small></i> ]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\n<small>IA-64</small> options:</i> <br>\n[<b>-mconstant-gp</b>|<b>-mauto-pic</b>] <br>\n[<b>-milp32</b>|<b>-milp64</b>|<b>-mlp64</b>|<b>-mp64</b>]\n<br>\n[<b>-mle</b>|<b>mbe</b>] <br>\n[<b>-mtune=itanium1</b>|<b>-mtune=itanium2</b>] <br>\n[<b>-munwind-check=warning</b>|<b>-munwind-check=error</b>]\n<br>\n\n[<b>-mhint.b=ok</b>|<b>-mhint.b=warning</b>|<b>-mhint.b=error</b>]\n<br>\n[<b>-x</b>|<b>-xexplicit</b>] [<b>-xauto</b>]\n[<b>-xdebug</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\n<small>IP2K</small> options:</i> <br>\n[<b>-mip2022</b>|<b>-mip2022ext</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target M32C\noptions:</i> <br>\n[<b>-m32c</b>|<b>-m16c</b>] [-relax] [-h-tick-hex]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target M32R\noptions:</i> <br>\n\n[<b>--m32rx</b>|<b>--[no-]warn-explicit-parallel-conflicts</b>|\n<b><br>\n--W[n]p</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\nM680X0 options:</i> <br>\n[<b>-l</b>]\n[<b>-m68000</b>|<b>-m68010</b>|<b>-m68020</b>|...]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\nM68HC11 options:</i> <br>\n\n[<b>-m68hc11</b>|<b>-m68hc12</b>|<b>-m68hcs12</b>|<b>-mm9s12x</b>|<b>-mm9s12xg</b>]\n<br>\n[<b>-mshort</b>|<b>-mlong</b>] <br>\n[<b>-mshort-double</b>|<b>-mlong-double</b>] <br>\n[<b>--force-long-branches</b>] [<b>--short-branches</b>]\n<br>\n[<b>--strict-direct-mode</b>] [<b>--print-insn-syntax</b>]\n<br>\n[<b>--print-opcodes</b>] [<b>--generate-example</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\n<small>MCORE</small> options:</i> <br>\n[<b>-jsri2bsr</b>] [<b>-sifilter</b>] [<b>-relax</b>] <br>\n[<b>-mcpu=[210|340]</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target Meta\noptions:</i> <br>\n[<b>-mcpu=</b><i>cpu</i>] [<b>-mfpu=</b><i>cpu</i>]\n[<b>-mdsp=</b><i>cpu</i>] <i>Target\n<small>MICROBLAZE</small> options:</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\n<small>MIPS</small> options:</i> <br>\n[<b>-nocpp</b>] [<b>-EL</b>] [<b>-EB</b>]\n[<b>-O</b>[<i>optimization level</i>]] <br>\n[<b>-g</b>[<i>debug level</i>]] [<b>-G</b> <i>num</i>]\n[<b>-KPIC</b>] [<b>-call_shared</b>] <br>\n[<b>-non_shared</b>] [<b>-xgot</b> [<b>-mvxworks-pic</b>]\n<br>\n[<b>-mabi</b>= <i><small>ABI</small></i> ] [<b>-32</b>]\n[<b>-n32</b>] [<b>-64</b>] [<b>-mfp32</b>] [<b>-mgp32</b>]\n<br>\n[<b>-mfp64</b>] [<b>-mgp64</b>] [<b>-mfpxx</b>] <br>\n[<b>-modd-spreg</b>] [<b>-mno-odd-spreg</b>] <br>\n[<b>-march</b>= <i><small>CPU</small></i> ] [<b>-mtune</b>=\n<i><small>CPU</small></i> ] [<b>-mips1</b>] [<b>-mips2</b>]\n<br>\n[<b>-mips3</b>] [<b>-mips4</b>] [<b>-mips5</b>]\n[<b>-mips32</b>] [<b>-mips32r2</b>] <br>\n[<b>-mips32r3</b>] [<b>-mips32r5</b>] [<b>-mips32r6</b>]\n[<b>-mips64</b>] [<b>-mips64r2</b>] <br>\n[<b>-mips64r3</b>] [<b>-mips64r5</b>] [<b>-mips64r6</b>]\n<br>\n[<b>-construct-floats</b>] [<b>-no-construct-floats</b>]\n<br>\n[<b>-mignore-branch-isa</b>] [<b>-mno-ignore-branch-isa</b>]\n<br>\n[<b>-mnan=</b><i>encoding</i>] <br>\n[<b>-trap</b>] [<b>-no-break</b>] [<b>-break</b>]\n[<b>-no-trap</b>] <br>\n[<b>-mips16</b>] [<b>-no-mips16</b>] <br>\n[<b>-mmips16e2</b>] [<b>-mno-mips16e2</b>] <br>\n[<b>-mmicromips</b>] [<b>-mno-micromips</b>] <br>\n[<b>-msmartmips</b>] [<b>-mno-smartmips</b>] <br>\n[<b>-mips3d</b>] [<b>-no-mips3d</b>] <br>\n[<b>-mdmx</b>] [<b>-no-mdmx</b>] <br>\n[<b>-mdsp</b>] [<b>-mno-dsp</b>] <br>\n[<b>-mdspr2</b>] [<b>-mno-dspr2</b>] <br>\n[<b>-mdspr3</b>] [<b>-mno-dspr3</b>] <br>\n[<b>-mmsa</b>] [<b>-mno-msa</b>] <br>\n[<b>-mxpa</b>] [<b>-mno-xpa</b>] <br>\n[<b>-mmt</b>] [<b>-mno-mt</b>] <br>\n[<b>-mmcu</b>] [<b>-mno-mcu</b>] <br>\n[<b>-mcrc</b>] [<b>-mno-crc</b>] <br>\n[<b>-mginv</b>] [<b>-mno-ginv</b>] <br>\n[<b>-mloongson-mmi</b>] [<b>-mno-loongson-mmi</b>] <br>\n[<b>-mloongson-cam</b>] [<b>-mno-loongson-cam</b>] <br>\n[<b>-mloongson-ext</b>] [<b>-mno-loongson-ext</b>] <br>\n[<b>-mloongson-ext2</b>] [<b>-mno-loongson-ext2</b>] <br>\n[<b>-minsn32</b>] [<b>-mno-insn32</b>] <br>\n[<b>-mfix7000</b>] [<b>-mno-fix7000</b>] <br>\n[<b>-mfix-rm7000</b>] [<b>-mno-fix-rm7000</b>] <br>\n[<b>-mfix-vr4120</b>] [<b>-mno-fix-vr4120</b>] <br>\n[<b>-mfix-vr4130</b>] [<b>-mno-fix-vr4130</b>] <br>\n[<b>-mfix-r5900</b>] [<b>-mno-fix-r5900</b>] <br>\n[<b>-mdebug</b>] [<b>-no-mdebug</b>] <br>\n[<b>-mpdr</b>] [<b>-mno-pdr</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\n<small>MMIX</small> options:</i> <br>\n[<b>--fixed-special-register-names</b>]\n[<b>--globalize-symbols</b>] <br>\n[<b>--gnu-syntax</b>] [<b>--relax</b>]\n[<b>--no-predefined-symbols</b>] <br>\n[<b>--no-expand</b>] [<b>--no-merge-gregs</b>] [<b>-x</b>]\n<br>\n[<b>--linker-allocated-gregs</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target Nios\n<small>II</small> options:</i> <br>\n[<b>-relax-all</b>] [<b>-relax-section</b>]\n[<b>-no-relax</b>] <br>\n[<b>-EB</b>] [<b>-EL</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\n<small>NDS32</small> options:</i> <br>\n[<b>-EL</b>] [<b>-EB</b>] [<b>-O</b>] [<b>-Os</b>]\n[<b>-mcpu=</b><i>cpu</i>] <br>\n[<b>-misa=</b><i>isa</i>] [<b>-mabi=</b><i>abi</i>]\n[<b>-mall-ext</b>] <br>\n[<b>-m[no-]16-bit</b>] [<b>-m[no-]perf-ext</b>]\n[<b>-m[no-]perf2-ext</b>] <br>\n[<b>-m[no-]string-ext</b>] [<b>-m[no-]dsp-ext</b>]\n[<b>-m[no-]mac</b>] [<b>-m[no-]div</b>] <br>\n[<b>-m[no-]audio-isa-ext</b>] [<b>-m[no-]fpu-sp-ext</b>]\n[<b>-m[no-]fpu-dp-ext</b>] <br>\n[<b>-m[no-]fpu-fma</b>] [<b>-mfpu-freg=</b>\n<i><small>FREG</small></i> ] [<b>-mreduced-regs</b>] <br>\n[<b>-mfull-regs</b>] [<b>-m[no-]dx-regs</b>] [<b>-mpic</b>]\n[<b>-mno-relax</b>] <br>\n[<b>-mb2bb</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\n<small>PDP11</small> options:</i> <br>\n[<b>-mpic</b>|<b>-mno-pic</b>] [<b>-mall</b>]\n[<b>-mno-extensions</b>] <br>\n[<b>-m</b><i>extension</i>|<b>-mno-</b><i>extension</i>]\n<br>\n[<b>-m</b><i>cpu</i>] [<b>-m</b><i>machine</i>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\npicoJava options:</i> <br>\n[<b>-mb</b>|<b>-me</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\nPowerPC options:</i> <br>\n[<b>-a32</b>|<b>-a64</b>] <br>\n\n[<b>-mpwrx</b>|<b>-mpwr2</b>|<b>-mpwr</b>|<b>-m601</b>|<b>-mppc</b>|<b>-mppc32</b>|<b>-m603</b>|<b>-m604</b>|<b>-m403</b>|<b>-m405</b>|\n<b><br>\n\n-m440</b>|<b>-m464</b>|<b>-m476</b>|<b>-m7400</b>|<b>-m7410</b>|<b>-m7450</b>|<b>-m7455</b>|<b>-m750cl</b>|<b>-mgekko</b>|\n<b><br>\n\n-mbroadway</b>|<b>-mppc64</b>|<b>-m620</b>|<b>-me500</b>|<b>-e500x2</b>|<b>-me500mc</b>|<b>-me500mc64</b>|<b>-me5500</b>|\n<b><br>\n\n-me6500</b>|<b>-mppc64bridge</b>|<b>-mbooke</b>|<b>-mpower4</b>|<b>-mpwr4</b>|<b>-mpower5</b>|<b>-mpwr5</b>|<b>-mpwr5x</b>|\n<b><br>\n\n-mpower6</b>|<b>-mpwr6</b>|<b>-mpower7</b>|<b>-mpwr7</b>|<b>-mpower8</b>|<b>-mpwr8</b>|<b>-mpower9</b>|<b>-mpwr9-ma2</b>|\n<b><br>\n\n-mcell</b>|<b>-mspe</b>|<b>-mspe2</b>|<b>-mtitan</b>|<b>-me300</b>|<b>-mcom</b>]\n<br>\n[<b>-many</b>]\n[<b>-maltivec</b>|<b>-mvsx</b>|<b>-mhtm</b>|<b>-mvle</b>]\n<br>\n[<b>-mregnames</b>|<b>-mno-regnames</b>] <br>\n[<b>-mrelocatable</b>|<b>-mrelocatable-lib</b>|<b>-K\n<small>PIC</small></b> ] [<b>-memb</b>] <br>\n\n[<b>-mlittle</b>|<b>-mlittle-endian</b>|<b>-le</b>|<b>-mbig</b>|<b>-mbig-endian</b>|<b>-be</b>]\n<br>\n[<b>-msolaris</b>|<b>-mno-solaris</b>] <br>\n[<b>-nops=</b><i>count</i>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\n<small>PRU</small> options:</i> <br>\n[<b>-link-relax</b>] <br>\n[<b>-mnolink-relax</b>] <br>\n[<b>-mno-warn-regname-label</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\nRISC-V options:</i> <br>\n[<b>-fpic</b>|<b>-fPIC</b>|<b>-fno-pic</b>] <br>\n[<b>-march</b>= <i><small>ISA</small></i> ] <br>\n[<b>-mabi</b>= <i><small>ABI</small></i> ] <br>\n[<b>-mlittle-endian</b>|<b>-mbig-endian</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\n<small>RL78</small> options:</i> <br>\n[<b>-mg10</b>] <br>\n[<b>-m32bit-doubles</b>|<b>-m64bit-doubles</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\n<small>RX</small> options:</i> <br>\n[<b>-mlittle-endian</b>|<b>-mbig-endian</b>] <br>\n[<b>-m32bit-doubles</b>|<b>-m64bit-doubles</b>] <br>\n[<b>-muse-conventional-section-names</b>] <br>\n[<b>-msmall-data-limit</b>] <br>\n[<b>-mpid</b>] <br>\n[<b>-mrelax</b>] <br>\n[<b>-mint-register=</b><i>number</i>] <br>\n[<b>-mgcc-abi</b>|<b>-mrx-abi</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target s390\noptions:</i> <br>\n[<b>-m31</b>|<b>-m64</b>] [<b>-mesa</b>|<b>-mzarch</b>]\n[<b>-march</b>= <i><small>CPU</small></i> ] <br>\n[<b>-mregnames</b>|<b>-mno-regnames</b>] <br>\n[<b>-mwarn-areg-zero</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\n<small>SCORE</small> options:</i> <br>\n[<b>-EB</b>][<b>-EL</b>][<b>-FIXDD</b>][<b>-NWARN</b>] <br>\n\n[<b>-SCORE5</b>][<b>-SCORE5U</b>][<b>-SCORE7</b>][<b>-SCORE3</b>]\n<br>\n[<b>-march=score7</b>][<b>-march=score3</b>] <br>\n[<b>-USE_R1</b>][<b>-KPIC</b>][<b>-O0</b>][<b>-G</b>\n<i>num</i>][<b>-V</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\n<small>SPARC</small> options:</i> <br>\n\n[<b>-Av6</b>|<b>-Av7</b>|<b>-Av8</b>|<b>-Aleon</b>|<b>-Asparclet</b>|<b>-Asparclite\n<br>\n\n-Av8plus</b>|<b>-Av8plusa</b>|<b>-Av8plusb</b>|<b>-Av8plusc</b>|<b>-Av8plusd\n<br>\n\n-Av8plusv</b>|<b>-Av8plusm</b>|<b>-Av9</b>|<b>-Av9a</b>|<b>-Av9b</b>|<b>-Av9c\n<br>\n\n-Av9d</b>|<b>-Av9e</b>|<b>-Av9v</b>|<b>-Av9m</b>|<b>-Asparc</b>|<b>-Asparcvis\n<br>\n\n-Asparcvis2</b>|<b>-Asparcfmaf</b>|<b>-Asparcima</b>|<b>-Asparcvis3\n<br>\n-Asparcvisr</b>|<b>-Asparc5</b>] <br>\n\n[<b>-xarch=v8plus</b>|<b>-xarch=v8plusa</b>]|<b>-xarch=v8plusb</b>|<b>-xarch=v8plusc\n<br>\n\n-xarch=v8plusd</b>|<b>-xarch=v8plusv</b>|<b>-xarch=v8plusm</b>|<b>-xarch=v9\n<br>\n\n-xarch=v9a</b>|<b>-xarch=v9b</b>|<b>-xarch=v9c</b>|<b>-xarch=v9d</b>|<b>-xarch=v9e\n<br>\n\n-xarch=v9v</b>|<b>-xarch=v9m</b>|<b>-xarch=sparc</b>|<b>-xarch=sparcvis\n<br>\n\n-xarch=sparcvis2</b>|<b>-xarch=sparcfmaf</b>|<b>-xarch=sparcima\n<br>\n\n-xarch=sparcvis3</b>|<b>-xarch=sparcvisr</b>|<b>-xarch=sparc5\n<br>\n-bump</b>] <br>\n[<b>-32</b>|<b>-64</b>] <br>\n\n[<b>--enforce-aligned-data</b>][<b>--dcti-couples-detect</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\n<small>TIC54X</small> options:</i> <br>\n[<b>-mcpu=54[123589]</b>|<b>-mcpu=54[56]lp</b>]\n[<b>-mfar-mode</b>|<b>-mf</b>] <br>\n[<b>-merrors-to-file</b> <i>&lt;filename&gt;</i>|<b>-me</b>\n<i>&lt;filename&gt;</i>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\n<small>TIC6X</small> options:</i> <br>\n[<b>-march=</b><i>arch</i>]\n[<b>-mbig-endian</b>|<b>-mlittle-endian</b>] <br>\n[<b>-mdsbt</b>|<b>-mno-dsbt</b>]\n[<b>-mpid=no</b>|<b>-mpid=near</b>|<b>-mpid=far</b>] <br>\n[<b>-mpic</b>|<b>-mno-pic</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\nTILE-Gx options:</i> <br>\n[<b>-m32</b>|<b>-m64</b>][<b>-EB</b>][<b>-EL</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\nVisium options:</i> <br>\n[<b>-mtune=</b><i>arch</i>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target\nXtensa options:</i> <br>\n[<b>--[no-]text-section-literals</b>]\n[<b>--[no-]auto-litpools</b>] <br>\n[<b>--[no-]absolute-literals</b>] <br>\n[<b>--[no-]target-align</b>] [<b>--[no-]longcalls</b>] <br>\n[<b>--[no-]transform</b>] <br>\n[<b>--rename-section</b> <i>oldname</i>=<i>newname</i>] <br>\n[<b>--[no-]trampolines</b>] <br>\n[<b>--abi-windowed</b>|<b>--abi-call0</b>]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Target Z80\noptions:</i> <br>\n[<b>-march=</b> <i><small>CPU</small> [-EXT][+EXT]</i>] <br>\n[<b>-local-prefix=</b> <i><small>PREFIX</small></i> ] <br>\n[<b>-colonless</b>] <br>\n[<b>-sdcc</b>] <br>\n[<b>-fp-s=</b> <i><small>FORMAT</small></i> ] <br>\n[<b>-fp-d=</b> <i><small>FORMAT</small></i> ]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><small>GNU</small>\n<b>as</b> is really a family of assemblers. If you use (or\nhave used) the <small>GNU</small> assembler on one\narchitecture, you should find a fairly similar environment\nwhen you use it on another architecture. Each version has\nmuch in common with the others, including object file\nformats, most assembler directives (often called\n<i>pseudo-ops</i>) and assembler syntax.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>as</b> is\nprimarily intended to assemble the output of the <small>GNU\nC</small> compiler &quot;gcc&quot; for use by the linker\n&quot;ld&quot;. Nevertheless, we&rsquo;ve tried to make\n<b>as</b> assemble correctly everything that other\nassemblers for the same machine would assemble. Any\nexceptions are documented explicitly. This doesn&rsquo;t\nmean <b>as</b> always uses the same syntax as another\nassembler for the same architecture; for example, we know of\nseveral incompatible versions of 680x0 assembly language\nsyntax.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Each time you\nrun <b>as</b> it assembles exactly one source program. The\nsource program is made up of one or more files. (The\nstandard input is also a file.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">You give\n<b>as</b> a command line that has zero or more input file\nnames. The input files are read (from left file name to\nright). A command-line argument (in any position) that has\nno special meaning is taken to be an input file name.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If you give\n<b>as</b> no file names it attempts to read one input file\nfrom the <b>as</b> standard input, which is normally your\nterminal. You may have to type <b>ctl-D</b> to tell\n<b>as</b> there is no more program to assemble.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Use <b>--</b>\nif you need to explicitly name the standard input file in\nyour command line.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the source\nis empty, <b>as</b> produces a small, empty object file.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>as</b> may\nwrite warnings and error messages to the standard error file\n(usually your terminal). This should not happen when a\ncompiler runs <b>as</b> automatically. Warnings report an\nassumption made so that <b>as</b> could keep assembling a\nflawed program; errors report a grave problem that stops the\nassembly.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If you are\ninvoking <b>as</b> via the <small>GNU C</small> compiler,\nyou can use the <b>-Wa</b> option to pass arguments through\nto the assembler. The assembler arguments must be separated\nfrom each other (and the <b>-Wa</b>) by commas. For\nexample:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">gcc -c -g -O\n-Wa,-alh,-L file.c</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This passes two\noptions to the assembler: <b>-alh</b> (emit a listing to\nstandard output with high-level and assembly source) and\n<b>-L</b> (retain local symbols in the symbol table).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Usually you do\nnot need to use this <b>-Wa</b> mechanism, since many\ncompiler command-line options are automatically passed to\nthe assembler by the compiler. (You can call the\n<small>GNU</small> compiler driver with the <b>-v</b> option\nto see precisely what options it passes to each compilation\npass, including the assembler.)</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>@</b><i>file</i></p>\n\n<p style=\"margin-left:17%;\">Read command-line options from\n<i>file</i>. The options read are inserted in place of the\noriginal @<i>file</i> option. If <i>file</i> does not exist,\nor cannot be read, then the option will be treated\nliterally, and not removed.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Options in\n<i>file</i> are separated by whitespace. A whitespace\ncharacter may be included in an option by surrounding the\nentire option in either single or double quotes. Any\ncharacter (including a backslash) may be included by\nprefixing the character to be included with a backslash. The\n<i>file</i> may itself contain additional @<i>file</i>\noptions; any such options will be processed recursively.</p>\n\n<p style=\"margin-left:11%;\"><b>-a[cdghlmns]</b></p>\n\n<p style=\"margin-left:17%;\">Turn on listings, in any of a\nvariety of ways:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p><b>-ac</b></p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>omit false conditionals</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p><b>-ad</b></p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>omit debugging directives</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p><b>-ag</b></p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>include general information, like as version and options\npassed</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p><b>-ah</b></p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>include high-level source</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p><b>-al</b></p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>include assembly</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p><b>-am</b></p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>include macro expansions</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p><b>-an</b></p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>omit forms processing</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"5%\">\n\n\n<p><b>-as</b></p></td>\n<td width=\"1%\"></td>\n<td width=\"77%\">\n\n\n<p>include symbols</p></td></tr>\n</table>\n\n<p style=\"margin-left:17%;\"><b>=file</b></p>\n\n<p style=\"margin-left:23%;\">set the name of the listing\nfile</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">You may combine\nthese options; for example, use <b>-aln</b> for assembly\nlisting without forms processing. The <b>=file</b> option,\nif used, must be the last one. By itself, <b>-a</b> defaults\nto <b>-ahls</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>--alternate</b></p>\n\n<p style=\"margin-left:17%;\">Begin in alternate macro\nmode.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--compress-debug-sections</b></p>\n\n<p style=\"margin-left:17%;\">Compress <small>DWARF</small>\ndebug sections using zlib with <small>SHF_COMPRESSED</small>\nfrom the <small>ELF ABI.</small> The resulting object file\nmay not be compatible with older linkers and object file\nutilities. Note if compression would make a given section\n<i>larger</i> then it is not compressed.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--compress-debug-sections=none\n<br>\n--compress-debug-sections=zlib <br>\n--compress-debug-sections=zlib-gnu <br>\n--compress-debug-sections=zlib-gabi</b></p>\n\n<p style=\"margin-left:17%;\">These options control how\n<small>DWARF</small> debug sections are compressed.\n<b>--compress-debug-sections=none</b> is equivalent to\n<b>--nocompress-debug-sections</b>.\n<b>--compress-debug-sections=zlib</b> and\n<b>--compress-debug-sections=zlib-gabi</b> are equivalent to\n<b>--compress-debug-sections</b>.\n<b>--compress-debug-sections=zlib-gnu</b> compresses\n<small>DWARF</small> debug sections using zlib. The debug\nsections are renamed to begin with <b>.zdebug</b>. Note if\ncompression would make a given section <i>larger</i> then it\nis not compressed nor renamed.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--nocompress-debug-sections</b></p>\n\n<p style=\"margin-left:17%;\">Do not compress\n<small>DWARF</small> debug sections. This is usually the\ndefault for all targets except the x86/x86_64, but a\nconfigure time option can be used to override this.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-D</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>Ignored. This option is accepted for script\ncompatibility with calls to other assemblers.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--debug-prefix-map</b>\n<i>old</i><b>=</b><i>new</i></p>\n\n<p style=\"margin-left:17%;\">When assembling files in\ndirectory <i>old</i>, record debugging information\ndescribing them as in <i>new</i> instead.</p>\n\n<p style=\"margin-left:11%;\"><b>--defsym</b>\n<i>sym</i><b>=</b><i>value</i></p>\n\n<p style=\"margin-left:17%;\">Define the symbol <i>sym</i> to\nbe <i>value</i> before assembling the input file.\n<i>value</i> must be an integer constant. As in C, a leading\n<b>0x</b> indicates a hexadecimal value, and a leading\n<b>0</b> indicates an octal value. The value of the symbol\ncan be overridden inside a source file via the use of a\n&quot;.set&quot; pseudo-op.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-f</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;fast&quot;---skip whitespace and comment\npreprocessing (assume source is compiler output).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-g</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--gen-debug</b></p>\n\n<p style=\"margin-left:17%;\">Generate debugging information\nfor each assembler source line using whichever debug format\nis preferred by the target. This currently means either\n<small>STABS, ECOFF</small> or <small>DWARF2.</small> When\nthe debug format is <small>DWARF</small> then a\n&quot;.debug_info&quot; and &quot;.debug_line&quot; section\nis only emitted when the assembly file doesn&rsquo;t\ngenerate one itself.</p>\n\n<p style=\"margin-left:11%;\"><b>--gstabs</b></p>\n\n<p style=\"margin-left:17%;\">Generate stabs debugging\ninformation for each assembler line. This may help debugging\nassembler code, if the debugger can handle it.</p>\n\n<p style=\"margin-left:11%;\"><b>--gstabs+</b></p>\n\n<p style=\"margin-left:17%;\">Generate stabs debugging\ninformation for each assembler line, with <small>GNU</small>\nextensions that probably only gdb can handle, and that could\nmake other debuggers crash or refuse to read your program.\nThis may help debugging assembler code. Currently the only\n<small>GNU</small> extension is the location of the current\nworking directory at assembling time.</p>\n\n<p style=\"margin-left:11%;\"><b>--gdwarf-2</b></p>\n\n<p style=\"margin-left:17%;\">Generate <small>DWARF2</small>\ndebugging information for each assembler line. This may help\ndebugging assembler code, if the debugger can handle it.\nNote---this option is only supported by some targets, not\nall of them.</p>\n\n<p style=\"margin-left:11%;\"><b>--gdwarf-3</b></p>\n\n<p style=\"margin-left:17%;\">This option is the same as the\n<b>--gdwarf-2</b> option, except that it allows for the\npossibility of the generation of extra debug information as\nper version 3 of the <small>DWARF</small> specification.\nNote - enabling this option does not guarantee the\ngeneration of any extra information, the choice to do so is\non a per target basis.</p>\n\n<p style=\"margin-left:11%;\"><b>--gdwarf-4</b></p>\n\n<p style=\"margin-left:17%;\">This option is the same as the\n<b>--gdwarf-2</b> option, except that it allows for the\npossibility of the generation of extra debug information as\nper version 4 of the <small>DWARF</small> specification.\nNote - enabling this option does not guarantee the\ngeneration of any extra information, the choice to do so is\non a per target basis.</p>\n\n<p style=\"margin-left:11%;\"><b>--gdwarf-5</b></p>\n\n<p style=\"margin-left:17%;\">This option is the same as the\n<b>--gdwarf-2</b> option, except that it allows for the\npossibility of the generation of extra debug information as\nper version 5 of the <small>DWARF</small> specification.\nNote - enabling this option does not guarantee the\ngeneration of any extra information, the choice to do so is\non a per target basis.</p>\n\n<p style=\"margin-left:11%;\"><b>--gdwarf-sections</b></p>\n\n<p style=\"margin-left:17%;\">Instead of creating a\n.debug_line section, create a series of\n.debug_line.<i>foo</i> sections where <i>foo</i> is the name\nof the corresponding code section. For example a code\nsection called <i>.text.func</i> will have its dwarf line\nnumber information placed into a section called\n<i>.debug_line.text.func</i>. If the code section is just\ncalled <i>.text</i> then debug line section will still be\ncalled just <i>.debug_line</i> without any suffix.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--gdwarf-cie-version=</b><i>version</i></p>\n\n<p style=\"margin-left:17%;\">Control which version of\n<small>DWARF</small> Common Information Entries (CIEs) are\nproduced. When this flag is not specificed the default is\nversion 1, though some targets can modify this default.\nOther possible values for <i>version</i> are 3 or 4.</p>\n\n<p style=\"margin-left:11%;\"><b>--size-check=error <br>\n--size-check=warning</b></p>\n\n<p style=\"margin-left:17%;\">Issue an error or warning for\ninvalid <small>ELF</small> .size directive.</p>\n\n<p style=\"margin-left:11%;\"><b>--elf-stt-common=no <br>\n--elf-stt-common=yes</b></p>\n\n<p style=\"margin-left:17%;\">These options control whether\nthe <small>ELF</small> assembler should generate common\nsymbols with the &quot;STT_COMMON&quot; type. The default\ncan be controlled by a configure option\n<b>--enable-elf-stt-common</b>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--generate-missing-build-notes=yes\n<br>\n--generate-missing-build-notes=no</b></p>\n\n<p style=\"margin-left:17%;\">These options control whether\nthe <small>ELF</small> assembler should generate\n<small>GNU</small> Build attribute notes if none are present\nin the input sources. The default can be controlled by the\n<b>--enable-generate-build-notes</b> configure option.</p>\n\n<p style=\"margin-left:11%;\"><b>--help</b></p>\n\n<p style=\"margin-left:17%;\">Print a summary of the\ncommand-line options and exit.</p>\n\n<p style=\"margin-left:11%;\"><b>--target-help</b></p>\n\n<p style=\"margin-left:17%;\">Print a summary of all target\nspecific options and exit.</p>\n\n<p style=\"margin-left:11%;\"><b>-I</b> <i>dir</i></p>\n\n<p style=\"margin-left:17%;\">Add directory <i>dir</i> to the\nsearch list for &quot;.include&quot; directives.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-J</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>Don&rsquo;t warn about signed overflow.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-K</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>Issue warnings when difference tables altered for long\ndisplacements.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-L</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--keep-locals</b></p>\n\n<p style=\"margin-left:17%;\">Keep (in the symbol table)\nlocal symbols. These symbols start with system-specific\nlocal label prefixes, typically <b>.L</b> for\n<small>ELF</small> systems or <b>L</b> for traditional a.out\nsystems.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--listing-lhs-width=</b><i>number</i></p>\n\n<p style=\"margin-left:17%;\">Set the maximum width, in\nwords, of the output data column for an assembler listing to\n<i>number</i>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--listing-lhs-width2=</b><i>number</i></p>\n\n<p style=\"margin-left:17%;\">Set the maximum width, in\nwords, of the output data column for continuation lines in\nan assembler listing to <i>number</i>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--listing-rhs-width=</b><i>number</i></p>\n\n<p style=\"margin-left:17%;\">Set the maximum width of an\ninput source line, as displayed in a listing, to\n<i>number</i> bytes.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--listing-cont-lines=</b><i>number</i></p>\n\n<p style=\"margin-left:17%;\">Set the maximum number of lines\nprinted in a listing for a single line of input to\n<i>number</i> + 1.</p>\n\n<p style=\"margin-left:11%;\"><b>--multibyte-handling=allow\n<br>\n--multibyte-handling=warn <br>\n--multibyte-handling=warn-sym-only</b></p>\n\n<p style=\"margin-left:17%;\">Controls how the assembler\nhandles multibyte characters in the input. The default\n(which can be restored by using the <b>allow</b> argument)\nis to allow such characters without complaint. Using the\n<b>warn</b> argument will make the assembler generate a\nwarning message whenever any multibyte character is\nencountered. Using the <b>warn-sym-only</b> argument will\nonly cause a warning to be generated when a symbol is\ndefined with a name that contains multibyte characters.\n(References to undefined symbols will not generate a\nwarning).</p>\n\n<p style=\"margin-left:11%;\"><b>--no-pad-sections</b></p>\n\n<p style=\"margin-left:17%;\">Stop the assembler for padding\nthe ends of output sections to the alignment of that\nsection. The default is to pad the sections, but this can\nwaste space which might be needed on targets which have\ntight memory constraints.</p>\n\n<p style=\"margin-left:11%;\"><b>-o</b> <i>objfile</i></p>\n\n<p style=\"margin-left:17%;\">Name the object-file output\nfrom <b>as</b> <i>objfile</i>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-R</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>Fold the data section into the text section.</p></td>\n<td width=\"15%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--sectname-subst</b></p>\n\n<p style=\"margin-left:17%;\">Honor substitution sequences in\nsection names.</p>\n\n<p style=\"margin-left:11%;\"><b>--statistics</b></p>\n\n<p style=\"margin-left:17%;\">Print the maximum space (in\nbytes) and total time (in seconds) used by assembly.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--strip-local-absolute</b></p>\n\n<p style=\"margin-left:17%;\">Remove local absolute symbols\nfrom the outgoing symbol table.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-v</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-version</b></p>\n\n<p style=\"margin-left:17%;\">Print the <b>as</b>\nversion.</p>\n\n<p style=\"margin-left:11%;\"><b>--version</b></p>\n\n<p style=\"margin-left:17%;\">Print the <b>as</b> version and\nexit.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-W</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--no-warn</b></p>\n\n<p style=\"margin-left:17%;\">Suppress warning messages.</p>\n\n<p style=\"margin-left:11%;\"><b>--fatal-warnings</b></p>\n\n<p style=\"margin-left:17%;\">Treat warnings as errors.</p>\n\n<p style=\"margin-left:11%;\"><b>--warn</b></p>\n\n<p style=\"margin-left:17%;\">Don&rsquo;t suppress warning\nmessages or treat them as errors.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-w</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"65%\">\n\n\n<p>Ignored.</p></td>\n<td width=\"18%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-x</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"65%\">\n\n\n<p>Ignored.</p></td>\n<td width=\"18%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-Z</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"65%\">\n\n\n<p>Generate an object file even after errors.</p></td>\n<td width=\"18%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-- |</b> <i>files</i>\n<b>...</b></p>\n\n<p style=\"margin-left:17%;\">Standard input, or source files\nto assemble.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for the 64-bit\nmode of the <small>ARM</small> Architecture (AArch64).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-EB</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"83%\">\n\n\n<p>This option specifies that the output generated by the\nassembler should be marked as being encoded for a big-endian\nprocessor.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-EL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"83%\">\n\n\n<p>This option specifies that the output generated by the\nassembler should be marked as being encoded for a\nlittle-endian processor.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-mabi=</b><i>abi</i></p>\n\n<p style=\"margin-left:17%;\">Specify which\n<small>ABI</small> the source code uses. The recognized\narguments are: &quot;ilp32&quot; and &quot;lp64&quot;, which\ndecides the generated object file in <small>ELF32</small>\nand <small>ELF64</small> format respectively. The default is\n&quot;lp64&quot;.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-mcpu=</b><i>processor</i><b>[+</b><i>extension</i><b>...]</b></p>\n\n<p style=\"margin-left:17%;\">This option specifies the\ntarget processor. The assembler will issue an error message\nif an attempt is made to assemble an instruction which will\nnot execute on the target processor. The following processor\nnames are recognized: &quot;cortex-a34&quot;,\n&quot;cortex-a35&quot;, &quot;cortex-a53&quot;,\n&quot;cortex-a55&quot;, &quot;cortex-a57&quot;,\n&quot;cortex-a65&quot;, &quot;cortex-a65ae&quot;,\n&quot;cortex-a72&quot;, &quot;cortex-a73&quot;,\n&quot;cortex-a75&quot;, &quot;cortex-a76&quot;,\n&quot;cortex-a76ae&quot;, &quot;cortex-a77&quot;,\n&quot;cortex-a78&quot;, &quot;cortex-a78ae&quot;,\n&quot;cortex-a78c&quot;, &quot;cortex-a510&quot;,\n&quot;cortex-a710&quot;, &quot;ares&quot;,\n&quot;exynos-m1&quot;, &quot;falkor&quot;,\n&quot;neoverse-n1&quot;, &quot;neoverse-n2&quot;,\n&quot;neoverse-e1&quot;, &quot;neoverse-v1&quot;,\n&quot;qdf24xx&quot;, &quot;saphira&quot;,\n&quot;thunderx&quot;, &quot;vulcan&quot;, &quot;xgene1&quot;\n&quot;xgene2&quot;, &quot;cortex-r82&quot;,\n&quot;cortex-x1&quot;, and &quot;cortex-x2&quot;. The\nspecial name &quot;all&quot; may be used to allow the\nassembler to accept instructions valid for any supported\nprocessor, including all optional extensions.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">In addition to\nthe basic instruction set, the assembler can be told to\naccept, or restrict, various extension mnemonics that extend\nthe processor.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If some\nimplementations of a particular processor can have an\nextension, then then those extensions are automatically\nenabled. Consequently, you will not normally have to specify\nany additional extensions.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-march=</b><i>architecture</i><b>[+</b><i>extension</i><b>...]</b></p>\n\n<p style=\"margin-left:17%;\">This option specifies the\ntarget architecture. The assembler will issue an error\nmessage if an attempt is made to assemble an instruction\nwhich will not execute on the target architecture. The\nfollowing architecture names are recognized:\n&quot;armv8-a&quot;, &quot;armv8.1-a&quot;,\n&quot;armv8.2-a&quot;, &quot;armv8.3-a&quot;,\n&quot;armv8.4-a&quot; &quot;armv8.5-a&quot;,\n&quot;armv8.6-a&quot;, &quot;armv8.7-a&quot;,\n&quot;armv8.8-a&quot;, &quot;armv8-r&quot;,\n&quot;armv9-a&quot;, &quot;armv9.1-a&quot;,\n&quot;armv9.2-a&quot;, and &quot;armv9.3-a&quot;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If both\n<b>-mcpu</b> and <b>-march</b> are specified, the assembler\nwill use the setting for <b>-mcpu</b>. If neither are\nspecified, the assembler will default to\n<b>-mcpu=all</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\narchitecture option can be extended with the same\ninstruction set extension options as the <b>-mcpu</b>\noption. Unlike <b>-mcpu</b>, extensions are not always\nenabled by default,</p>\n\n<p style=\"margin-left:11%;\"><b>-mverbose-error</b></p>\n\n<p style=\"margin-left:17%;\">This option enables verbose\nerror messages for AArch64 gas. This option is enabled by\ndefault.</p>\n\n<p style=\"margin-left:11%;\"><b>-mno-verbose-error</b></p>\n\n<p style=\"margin-left:17%;\">This option disables verbose\nerror messages in AArch64 gas.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for an Alpha\nprocessor. <b><br>\n-m</b><i>cpu</i></p>\n\n<p style=\"margin-left:17%;\">This option specifies the\ntarget processor. If an attempt is made to assemble an\ninstruction which will not execute on the target processor,\nthe assembler may either expand the instruction as a macro\nor issue an error message. This option is equivalent to the\n&quot;.arch&quot; directive.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The following\nprocessor names are recognized: 21064, &quot;21064a&quot;,\n21066, 21068, 21164, &quot;21164a&quot;,\n&quot;21164pc&quot;, 21264, &quot;21264a&quot;,\n&quot;21264b&quot;, &quot;ev4&quot;, &quot;ev5&quot;,\n&quot;lca45&quot;, &quot;ev5&quot;, &quot;ev56&quot;,\n&quot;pca56&quot;, &quot;ev6&quot;, &quot;ev67&quot;,\n&quot;ev68&quot;. The special name &quot;all&quot; may be\nused to allow the assembler to accept instructions valid for\nany Alpha processor.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">In order to\nsupport existing practice in <small>OSF/1</small> with\nrespect to &quot;.arch&quot;, and existing practice within\n<b><small>MILO</small></b> (the Linux <small>ARC</small>\nbootloader), the numbered processor names (e.g. 21064)\nenable the processor-specific PALcode instructions, while\nthe &quot;electro-vlasic&quot; names (e.g. &quot;ev4&quot;)\ndo not.</p>\n\n<p style=\"margin-left:11%;\"><b>-mdebug <br>\n-no-mdebug</b></p>\n\n<p style=\"margin-left:17%;\">Enables or disables the\ngeneration of &quot;.mdebug&quot; encapsulation for stabs\ndirectives and procedure descriptors. The default is to\nautomatically enable &quot;.mdebug&quot; when the first\nstabs directive is seen.</p>\n\n<p style=\"margin-left:11%;\"><b>-relax</b></p>\n\n<p style=\"margin-left:17%;\">This option forces all\nrelocations to be put into the object file, instead of\nsaving space and resolving some relocations at assembly\ntime. Note that this option does not propagate all symbol\narithmetic into the object file, because not all symbol\narithmetic can be represented. However, the option can still\nbe useful in specific applications.</p>\n\n<p style=\"margin-left:11%;\"><b>-replace <br>\n-noreplace</b></p>\n\n<p style=\"margin-left:17%;\">Enables or disables the\noptimization of procedure calls, both at assemblage and at\nlink time. These options are only available for\n<small>VMS</small> targets and &quot;-replace&quot; is the\ndefault. See section 1.4.1 of the OpenVMS Linker Utility\nManual.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-g</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>This option is used when the compiler generates debug\ninformation. When <b>gcc</b> is using <b>mips-tfile</b> to\ngenerate debug information for <small>ECOFF,</small> local\nlabels must be passed through to the object file. Otherwise\nthis option has no effect.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-G</b><i>size</i></p>\n\n<p style=\"margin-left:17%;\">A local common symbol larger\nthan <i>size</i> is placed in &quot;.bss&quot;, while\nsmaller symbols are placed in &quot;.sbss&quot;.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-F</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-32addr</b></p>\n\n<p style=\"margin-left:17%;\">These options are ignored for\nbackward compatibility.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for an\n<small>ARC</small> processor. <b><br>\n-mcpu=</b><i>cpu</i></p>\n\n<p style=\"margin-left:17%;\">This option selects the core\nprocessor variant.</p>\n\n<p style=\"margin-left:11%;\"><b>-EB | -EL</b></p>\n\n<p style=\"margin-left:17%;\">Select either big-endian (-EB)\nor little-endian (-EL) output.</p>\n\n<p style=\"margin-left:11%;\"><b>-mcode-density</b></p>\n\n<p style=\"margin-left:17%;\">Enable Code Density extension\ninstructions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for the\n<small>ARM</small> processor family. <b><br>\n\n-mcpu=</b><i>processor</i><b>[+</b><i>extension</i><b>...]</b></p>\n\n<p style=\"margin-left:17%;\">Specify which\n<small>ARM</small> processor variant is the target.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-march=</b><i>architecture</i><b>[+</b><i>extension</i><b>...]</b></p>\n\n<p style=\"margin-left:17%;\">Specify which\n<small>ARM</small> architecture variant is used by the\ntarget.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-mfpu=</b><i>floating-point-format</i></p>\n\n<p style=\"margin-left:17%;\">Select which Floating Point\narchitecture is the target.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-mfloat-abi=</b><i>abi</i></p>\n\n<p style=\"margin-left:17%;\">Select which floating point\n<small>ABI</small> is in use.</p>\n\n<p style=\"margin-left:11%;\"><b>-mthumb</b></p>\n\n<p style=\"margin-left:17%;\">Enable Thumb only instruction\ndecoding.</p>\n\n<p style=\"margin-left:11%;\"><b>-mapcs-32 | -mapcs-26 |\n-mapcs-float | -mapcs-reentrant</b></p>\n\n<p style=\"margin-left:17%;\">Select which procedure calling\nconvention is in use.</p>\n\n<p style=\"margin-left:11%;\"><b>-EB | -EL</b></p>\n\n<p style=\"margin-left:17%;\">Select either big-endian (-EB)\nor little-endian (-EL) output.</p>\n\n<p style=\"margin-left:11%;\"><b>-mthumb-interwork</b></p>\n\n<p style=\"margin-left:17%;\">Specify that the code has been\ngenerated with interworking between Thumb and\n<small>ARM</small> code in mind.</p>\n\n<p style=\"margin-left:11%;\"><b>-mccs</b></p>\n\n<p style=\"margin-left:17%;\">Turns on CodeComposer Studio\nassembly syntax compatibility mode.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-k</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"63%\">\n\n\n<p>Specify that <small>PIC</small> code has been\ngenerated.</p> </td>\n<td width=\"20%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for the Blackfin\nprocessor family. <b><br>\n-mcpu=</b><i>processor</i>[<b>-</b><i>sirevision</i>]</p>\n\n<p style=\"margin-left:17%;\">This option specifies the\ntarget processor. The optional <i>sirevision</i> is not used\nin assembler. It&rsquo;s here such that <small>GCC</small>\ncan easily pass down its &quot;-mcpu=&quot; option. The\nassembler will issue an error message if an attempt is made\nto assemble an instruction which will not execute on the\ntarget processor. The following processor names are\nrecognized: &quot;bf504&quot;, &quot;bf506&quot;,\n&quot;bf512&quot;, &quot;bf514&quot;, &quot;bf516&quot;,\n&quot;bf518&quot;, &quot;bf522&quot;, &quot;bf523&quot;,\n&quot;bf524&quot;, &quot;bf525&quot;, &quot;bf526&quot;,\n&quot;bf527&quot;, &quot;bf531&quot;, &quot;bf532&quot;,\n&quot;bf533&quot;, &quot;bf534&quot;, &quot;bf535&quot; (not\nimplemented yet), &quot;bf536&quot;, &quot;bf537&quot;,\n&quot;bf538&quot;, &quot;bf539&quot;, &quot;bf542&quot;,\n&quot;bf542m&quot;, &quot;bf544&quot;, &quot;bf544m&quot;,\n&quot;bf547&quot;, &quot;bf547m&quot;, &quot;bf548&quot;,\n&quot;bf548m&quot;, &quot;bf549&quot;, &quot;bf549m&quot;,\n&quot;bf561&quot;, and &quot;bf592&quot;.</p>\n\n<p style=\"margin-left:11%;\"><b>-mfdpic</b></p>\n\n<p style=\"margin-left:17%;\">Assemble for the <small>FDPIC\nABI.</small></p>\n\n<p style=\"margin-left:11%;\"><b>-mno-fdpic <br>\n-mnopic</b></p>\n\n<p style=\"margin-left:17%;\">Disable -mfdpic.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for the Linux\nkernel <small>BPF</small> processor family.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">@chapter\n<small>BPF</small> Dependent Features</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Options</b></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-EB</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"83%\">\n\n\n<p>This option specifies that the assembler should emit\nbig-endian eBPF.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-EL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"83%\">\n\n\n<p>This option specifies that the assembler should emit\nlittle-endian eBPF.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that if no\nendianness option is specified in the command line, the host\nendianness is used. See the info pages for documentation of\nthe CRIS-specific options.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for the C-SKY\nprocessor family. <b><br>\n-march=</b><i>archname</i></p>\n\n<p style=\"margin-left:17%;\">Assemble for architecture\n<i>archname</i>. The <b>--help</b> option lists valid values\nfor <i>archname</i>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-mcpu=</b><i>cpuname</i></p>\n\n<p style=\"margin-left:17%;\">Assemble for architecture\n<i>cpuname</i>. The <b>--help</b> option lists valid values\nfor <i>cpuname</i>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-EL</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-mlittle-endian</b></p>\n\n<p style=\"margin-left:17%;\">Generate little-endian\noutput.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-EB</b></p></td>\n<td width=\"85%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-mbig-endian</b></p>\n\n<p style=\"margin-left:17%;\">Generate big-endian output.</p>\n\n<p style=\"margin-left:11%;\"><b>-fpic <br>\n-pic</b></p>\n\n<p style=\"margin-left:17%;\">Generate position-independent\ncode.</p>\n\n<p style=\"margin-left:11%;\"><b>-mljump <br>\n-mno-ljump</b></p>\n\n<p style=\"margin-left:17%;\">Enable/disable transformation\nof the short branch instructions &quot;jbf&quot;,\n&quot;jbt&quot;, and &quot;jbr&quot; to &quot;jmpi&quot;.\nThis option is for V2 processors only. It is ignored on\n<small>CK801</small> and <small>CK802</small> targets, which\ndo not support the &quot;jmpi&quot; instruction, and is\nenabled by default for other processors.</p>\n\n<p style=\"margin-left:11%;\"><b>-mbranch-stub <br>\n-mno-branch-stub</b></p>\n\n<p style=\"margin-left:17%;\">Pass through\n&quot;R_CKCORE_PCREL_IMM26BY2&quot; relocations for\n&quot;bsr&quot; instructions to the linker.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This option is\nonly available for bare-metal C-SKY V2 <small>ELF</small>\ntargets, where it is enabled by default. It cannot be used\nin code that will be dynamically linked against shared\nlibraries.</p>\n\n<p style=\"margin-left:11%;\"><b>-force2bsr <br>\n-mforce2bsr <br>\n-no-force2bsr <br>\n-mno-force2bsr</b></p>\n\n<p style=\"margin-left:17%;\">Enable/disable transformation\nof &quot;jbsr&quot; instructions to &quot;bsr&quot;. This\noption is always enabled (and <b>-mno-force2bsr</b> is\nignored) for <small>CK801/CK802</small> targets. It is also\nalways enabled when <b>-mbranch-stub</b> is in effect.</p>\n\n<p style=\"margin-left:11%;\"><b>-jsri2bsr <br>\n-mjsri2bsr <br>\n-no-jsri2bsr <br>\n-mno-jsri2bsr</b></p>\n\n<p style=\"margin-left:17%;\">Enable/disable transformation\nof &quot;jsri&quot; instructions to &quot;bsr&quot;. This\noption is enabled by default.</p>\n\n<p style=\"margin-left:11%;\"><b>-mnolrw <br>\n-mno-lrw</b></p>\n\n<p style=\"margin-left:17%;\">Enable/disable transformation\nof &quot;lrw&quot; instructions into a\n&quot;movih&quot;/&quot;ori&quot; pair.</p>\n\n<p style=\"margin-left:11%;\"><b>-melrw <br>\n-mno-elrw</b></p>\n\n<p style=\"margin-left:17%;\">Enable/disable extended\n&quot;lrw&quot; instructions. This option is enabled by\ndefault for CK800-series processors.</p>\n\n<p style=\"margin-left:11%;\"><b>-mlaf <br>\n-mliterals-after-func <br>\n-mno-laf <br>\n-mno-literals-after-func</b></p>\n\n<p style=\"margin-left:17%;\">Enable/disable placement of\nliteral pools after each function.</p>\n\n<p style=\"margin-left:11%;\"><b>-mlabr <br>\n-mliterals-after-br <br>\n-mno-labr <br>\n-mnoliterals-after-br</b></p>\n\n<p style=\"margin-left:17%;\">Enable/disable placement of\nliteral pools after unconditional branches. This option is\nenabled by default.</p>\n\n<p style=\"margin-left:11%;\"><b>-mistack <br>\n-mno-istack</b></p>\n\n<p style=\"margin-left:17%;\">Enable/disable interrupt stack\ninstructions. This option is enabled by default on\n<small>CK801, CK802,</small> and <small>CK802</small>\nprocessors.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions explicitly enable certain optional instructions.\nThese features are also enabled implicitly by using\n&quot;-mcpu=&quot; to specify a processor that supports it.\n<b><br>\n-mhard-float</b></p>\n\n<p style=\"margin-left:17%;\">Enable hard float\ninstructions.</p>\n\n<p style=\"margin-left:11%;\"><b>-mmp</b></p>\n\n<p style=\"margin-left:17%;\">Enable multiprocessor\ninstructions.</p>\n\n<p style=\"margin-left:11%;\"><b>-mcp</b></p>\n\n<p style=\"margin-left:17%;\">Enable coprocessor\ninstructions.</p>\n\n<p style=\"margin-left:11%;\"><b>-mcache</b></p>\n\n<p style=\"margin-left:17%;\">Enable cache prefetch\ninstruction.</p>\n\n<p style=\"margin-left:11%;\"><b>-msecurity</b></p>\n\n<p style=\"margin-left:17%;\">Enable C-SKY security\ninstructions.</p>\n\n<p style=\"margin-left:11%;\"><b>-mtrust</b></p>\n\n<p style=\"margin-left:17%;\">Enable C-SKY trust\ninstructions.</p>\n\n<p style=\"margin-left:11%;\"><b>-mdsp</b></p>\n\n<p style=\"margin-left:17%;\">Enable <small>DSP</small>\ninstructions.</p>\n\n<p style=\"margin-left:11%;\"><b>-medsp</b></p>\n\n<p style=\"margin-left:17%;\">Enable enhanced\n<small>DSP</small> instructions.</p>\n\n<p style=\"margin-left:11%;\"><b>-mvdsp</b></p>\n\n<p style=\"margin-left:17%;\">Enable vector\n<small>DSP</small> instructions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for an Epiphany\nprocessor. <b><br>\n-mepiphany</b></p>\n\n<p style=\"margin-left:17%;\">Specifies that the both 32 and\n16 bit instructions are allowed. This is the default\nbehavior.</p>\n\n<p style=\"margin-left:11%;\"><b>-mepiphany16</b></p>\n\n<p style=\"margin-left:17%;\">Restricts the permitted\ninstructions to just the 16 bit set.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for an H8/300\nprocessor. @chapter H8/300 Dependent Features</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Options</b>\n<br>\nThe Renesas H8/300 version of &quot;as&quot; has one\nmachine-dependent option: <b><br>\n-h-tick-hex</b></p>\n\n<p style=\"margin-left:17%;\">Support H&rsquo;00 style hex\nconstants in addition to 0x00 style.</p>\n\n<p style=\"margin-left:11%;\"><b>-mach=</b><i>name</i></p>\n\n<p style=\"margin-left:17%;\">Sets the H8300 machine variant.\nThe following machine names are recognised:\n&quot;h8300h&quot;, &quot;h8300hn&quot;, &quot;h8300s&quot;,\n&quot;h8300sn&quot;, &quot;h8300sx&quot; and\n&quot;h8300sxn&quot;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for an i386\nprocessor. <b><br>\n--32 | --x32 | --64</b></p>\n\n<p style=\"margin-left:17%;\">Select the word size, either 32\nbits or 64 bits. <b>--32</b> implies Intel i386\narchitecture, while <b>--x32</b> and <b>--64</b> imply\n<small>AMD</small> x86-64 architecture with 32-bit or 64-bit\nword-size respectively.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">These options\nare only available with the <small>ELF</small> object file\nformat, and require that the necessary <small>BFD</small>\nsupport has been included (on a 32-bit platform you have to\nadd --enable-64-bit-bfd to configure enable 64-bit usage and\nuse x86-64 as target platform).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-n</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>By default, x86 <small>GAS</small> replaces multiple nop\ninstructions used for alignment within code sections with\nmulti-byte nop instructions such as leal 0(%esi,1),%esi.\nThis switch disables the optimization if a single byte nop\n(0x90) is explicitly specified as the fill byte for\nalignment.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>--divide</b></p>\n\n<p style=\"margin-left:17%;\">On SVR4-derived platforms, the\ncharacter <b>/</b> is treated as a comment character, which\nmeans that it cannot be used in expressions. The\n<b>--divide</b> option turns <b>/</b> into a normal\ncharacter. This does not disable <b>/</b> at the beginning\nof a line starting a comment, or affect using <b>#</b> for\nstarting a comment.</p>\n\n<p style=\"margin-left:11%;\"><b>-march=</b>\n<i><small>CPU</small></i> <b>[+</b>\n<i><small>EXTENSION</small></i> <b>...]</b></p>\n\n<p style=\"margin-left:17%;\">This option specifies the\ntarget processor. The assembler will issue an error message\nif an attempt is made to assemble an instruction which will\nnot execute on the target processor. The following processor\nnames are recognized: &quot;i8086&quot;, &quot;i186&quot;,\n&quot;i286&quot;, &quot;i386&quot;, &quot;i486&quot;,\n&quot;i586&quot;, &quot;i686&quot;, &quot;pentium&quot;,\n&quot;pentiumpro&quot;, &quot;pentiumii&quot;,\n&quot;pentiumiii&quot;, &quot;pentium4&quot;,\n&quot;prescott&quot;, &quot;nocona&quot;, &quot;core&quot;,\n&quot;core2&quot;, &quot;corei7&quot;, &quot;l1om&quot;,\n&quot;k1om&quot;, &quot;iamcu&quot;, &quot;k6&quot;,\n&quot;k6_2&quot;, &quot;athlon&quot;, &quot;opteron&quot;,\n&quot;k8&quot;, &quot;amdfam10&quot;, &quot;bdver1&quot;,\n&quot;bdver2&quot;, &quot;bdver3&quot;, &quot;bdver4&quot;,\n&quot;znver1&quot;, &quot;znver2&quot;, &quot;znver3&quot;,\n&quot;btver1&quot;, &quot;btver2&quot;,\n&quot;generic32&quot; and &quot;generic64&quot;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">In addition to\nthe basic instruction set, the assembler can be told to\naccept various extension mnemonics. For example,\n&quot;-march=i686+sse4+vmx&quot; extends <i>i686</i> with\n<i>sse4</i> and <i>vmx</i>. The following extensions are\ncurrently supported: 8087, 287, 387, 687, &quot;no87&quot;,\n&quot;no287&quot;, &quot;no387&quot;, &quot;no687&quot;,\n&quot;cmov&quot;, &quot;nocmov&quot;, &quot;fxsr&quot;,\n&quot;nofxsr&quot;, &quot;mmx&quot;, &quot;nommx&quot;,\n&quot;sse&quot;, &quot;sse2&quot;, &quot;sse3&quot;,\n&quot;sse4a&quot;, &quot;ssse3&quot;, &quot;sse4.1&quot;,\n&quot;sse4.2&quot;, &quot;sse4&quot;, &quot;nosse&quot;,\n&quot;nosse2&quot;, &quot;nosse3&quot;, &quot;nosse4a&quot;,\n&quot;nossse3&quot;, &quot;nosse4.1&quot;,\n&quot;nosse4.2&quot;, &quot;nosse4&quot;, &quot;avx&quot;,\n&quot;avx2&quot;, &quot;noavx&quot;, &quot;noavx2&quot;,\n&quot;adx&quot;, &quot;rdseed&quot;, &quot;prfchw&quot;,\n&quot;smap&quot;, &quot;mpx&quot;, &quot;sha&quot;,\n&quot;rdpid&quot;, &quot;ptwrite&quot;, &quot;cet&quot;,\n&quot;gfni&quot;, &quot;vaes&quot;, &quot;vpclmulqdq&quot;,\n&quot;prefetchwt1&quot;, &quot;clflushopt&quot;,\n&quot;se1&quot;, &quot;clwb&quot;, &quot;movdiri&quot;,\n&quot;movdir64b&quot;, &quot;enqcmd&quot;,\n&quot;serialize&quot;, &quot;tsxldtrk&quot;, &quot;kl&quot;,\n&quot;nokl&quot;, &quot;widekl&quot;, &quot;nowidekl&quot;,\n&quot;hreset&quot;, &quot;avx512f&quot;,\n&quot;avx512cd&quot;, &quot;avx512er&quot;,\n&quot;avx512pf&quot;, &quot;avx512vl&quot;,\n&quot;avx512bw&quot;, &quot;avx512dq&quot;,\n&quot;avx512ifma&quot;, &quot;avx512vbmi&quot;,\n&quot;avx512_4fmaps&quot;, &quot;avx512_4vnniw&quot;,\n&quot;avx512_vpopcntdq&quot;, &quot;avx512_vbmi2&quot;,\n&quot;avx512_vnni&quot;, &quot;avx512_bitalg&quot;,\n&quot;avx512_vp2intersect&quot;, &quot;tdx&quot;,\n&quot;avx512_bf16&quot;, &quot;avx_vnni&quot;,\n&quot;avx512_fp16&quot;, &quot;noavx512f&quot;,\n&quot;noavx512cd&quot;, &quot;noavx512er&quot;,\n&quot;noavx512pf&quot;, &quot;noavx512vl&quot;,\n&quot;noavx512bw&quot;, &quot;noavx512dq&quot;,\n&quot;noavx512ifma&quot;, &quot;noavx512vbmi&quot;,\n&quot;noavx512_4fmaps&quot;, &quot;noavx512_4vnniw&quot;,\n&quot;noavx512_vpopcntdq&quot;, &quot;noavx512_vbmi2&quot;,\n&quot;noavx512_vnni&quot;, &quot;noavx512_bitalg&quot;,\n&quot;noavx512_vp2intersect&quot;, &quot;notdx&quot;,\n&quot;noavx512_bf16&quot;, &quot;noavx_vnni&quot;,\n&quot;noavx512_fp16&quot;, &quot;noenqcmd&quot;,\n&quot;noserialize&quot;, &quot;notsxldtrk&quot;,\n&quot;amx_int8&quot;, &quot;noamx_int8&quot;,\n&quot;amx_bf16&quot;, &quot;noamx_bf16&quot;,\n&quot;amx_tile&quot;, &quot;noamx_tile&quot;,\n&quot;nouintr&quot;, &quot;nohreset&quot;, &quot;vmx&quot;,\n&quot;vmfunc&quot;, &quot;smx&quot;, &quot;xsave&quot;,\n&quot;xsaveopt&quot;, &quot;xsavec&quot;,\n&quot;xsaves&quot;, &quot;aes&quot;, &quot;pclmul&quot;,\n&quot;fsgsbase&quot;, &quot;rdrnd&quot;, &quot;f16c&quot;,\n&quot;bmi2&quot;, &quot;fma&quot;, &quot;movbe&quot;,\n&quot;ept&quot;, &quot;lzcnt&quot;, &quot;popcnt&quot;,\n&quot;hle&quot;, &quot;rtm&quot;, &quot;invpcid&quot;,\n&quot;clflush&quot;, &quot;mwaitx&quot;, &quot;clzero&quot;,\n&quot;wbnoinvd&quot;, &quot;pconfig&quot;,\n&quot;waitpkg&quot;, &quot;uintr&quot;,\n&quot;cldemote&quot;, &quot;rdpru&quot;,\n&quot;mcommit&quot;, &quot;sev_es&quot;, &quot;lwp&quot;,\n&quot;fma4&quot;, &quot;xop&quot;, &quot;cx16&quot;,\n&quot;syscall&quot;, &quot;rdtscp&quot;, &quot;3dnow&quot;,\n&quot;3dnowa&quot;, &quot;sse4a&quot;, &quot;sse5&quot;,\n&quot;snp&quot;, &quot;invlpgb&quot;, &quot;tlbsync&quot;,\n&quot;svme&quot; and &quot;padlock&quot;. Note that rather\nthan extending a basic instruction set, the extension\nmnemonics starting with &quot;no&quot; revoke the respective\nfunctionality.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When the\n&quot;.arch&quot; directive is used with <b>-march</b>, the\n&quot;.arch&quot; directive will take precedent.</p>\n\n<p style=\"margin-left:11%;\"><b>-mtune=</b>\n<i><small>CPU</small></i></p>\n\n<p style=\"margin-left:17%;\">This option specifies a\nprocessor to optimize for. When used in conjunction with the\n<b>-march</b> option, only instructions of the processor\nspecified by the <b>-march</b> option will be generated.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Valid\n<i><small>CPU</small></i> values are identical to the\nprocessor list of <b>-march=</b> <i><small>CPU</small></i>\n.</p>\n\n<p style=\"margin-left:11%;\"><b>-msse2avx</b></p>\n\n<p style=\"margin-left:17%;\">This option specifies that the\nassembler should encode <small>SSE</small> instructions with\n<small>VEX</small> prefix.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-muse-unaligned-vector-move</b></p>\n\n<p style=\"margin-left:17%;\">This option specifies that the\nassembler should encode aligned vector move as unaligned\nvector move.</p>\n\n<p style=\"margin-left:11%;\"><b>-msse-check=</b><i>none</i>\n<b><br>\n-msse-check=</b><i>warning</i> <b><br>\n-msse-check=</b><i>error</i></p>\n\n<p style=\"margin-left:17%;\">These options control if the\nassembler should check <small>SSE</small> instructions.\n<b>-msse-check=</b><i>none</i> will make the assembler not\nto check <small>SSE</small> instructions, which is the\ndefault. <b>-msse-check=</b><i>warning</i> will make the\nassembler issue a warning for any <small>SSE</small>\ninstruction. <b>-msse-check=</b><i>error</i> will make the\nassembler issue an error for any <small>SSE</small>\ninstruction.</p>\n\n<p style=\"margin-left:11%;\"><b>-mavxscalar=</b><i>128</i>\n<b><br>\n-mavxscalar=</b><i>256</i></p>\n\n<p style=\"margin-left:17%;\">These options control how the\nassembler should encode scalar <small>AVX</small>\ninstructions. <b>-mavxscalar=</b><i>128</i> will encode\nscalar <small>AVX</small> instructions with 128bit vector\nlength, which is the default. <b>-mavxscalar=</b><i>256</i>\nwill encode scalar <small>AVX</small> instructions with\n256bit vector length.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small>WARNING:</small>\nDon&rsquo;t use this for production code - due to\n<small>CPU</small> errata the resulting code may not work on\ncertain models.</p>\n\n<p style=\"margin-left:11%;\"><b>-mvexwig=</b><i>0</i>\n<b><br>\n-mvexwig=</b><i>1</i></p>\n\n<p style=\"margin-left:17%;\">These options control how the\nassembler should encode <small>VEX</small> .W-ignored (\n<small>WIG</small> ) <small>VEX</small> instructions.\n<b>-mvexwig=</b><i>0</i> will encode <small>WIG VEX</small>\ninstructions with vex.w = 0, which is the default.\n<b>-mvexwig=</b><i>1</i> will encode <small>WIG EVEX</small>\ninstructions with vex.w = 1.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small>WARNING:</small>\nDon&rsquo;t use this for production code - due to\n<small>CPU</small> errata the resulting code may not work on\ncertain models.</p>\n\n<p style=\"margin-left:11%;\"><b>-mevexlig=</b><i>128</i>\n<b><br>\n-mevexlig=</b><i>256</i> <b><br>\n-mevexlig=</b><i>512</i></p>\n\n<p style=\"margin-left:17%;\">These options control how the\nassembler should encode length-ignored ( <small>LIG</small>\n) <small>EVEX</small> instructions.\n<b>-mevexlig=</b><i>128</i> will encode <small>LIG\nEVEX</small> instructions with 128bit vector length, which\nis the default. <b>-mevexlig=</b><i>256</i> and\n<b>-mevexlig=</b><i>512</i> will encode <small>LIG\nEVEX</small> instructions with 256bit and 512bit vector\nlength, respectively.</p>\n\n<p style=\"margin-left:11%;\"><b>-mevexwig=</b><i>0</i>\n<b><br>\n-mevexwig=</b><i>1</i></p>\n\n<p style=\"margin-left:17%;\">These options control how the\nassembler should encode w-ignored ( <small>WIG</small> )\n<small>EVEX</small> instructions. <b>-mevexwig=</b><i>0</i>\nwill encode <small>WIG EVEX</small> instructions with evex.w\n= 0, which is the default. <b>-mevexwig=</b><i>1</i> will\nencode <small>WIG EVEX</small> instructions with evex.w =\n1.</p>\n\n<p style=\"margin-left:11%;\"><b>-mmnemonic=</b><i>att</i>\n<b><br>\n-mmnemonic=</b><i>intel</i></p>\n\n<p style=\"margin-left:17%;\">This option specifies\ninstruction mnemonic for matching instructions. The\n&quot;.att_mnemonic&quot; and &quot;.intel_mnemonic&quot;\ndirectives will take precedent.</p>\n\n<p style=\"margin-left:11%;\"><b>-msyntax=</b><i>att</i>\n<b><br>\n-msyntax=</b><i>intel</i></p>\n\n<p style=\"margin-left:17%;\">This option specifies\ninstruction syntax when processing instructions. The\n&quot;.att_syntax&quot; and &quot;.intel_syntax&quot;\ndirectives will take precedent.</p>\n\n<p style=\"margin-left:11%;\"><b>-mnaked-reg</b></p>\n\n<p style=\"margin-left:17%;\">This option specifies that\nregisters don&rsquo;t require a <b>%</b> prefix. The\n&quot;.att_syntax&quot; and &quot;.intel_syntax&quot;\ndirectives will take precedent.</p>\n\n<p style=\"margin-left:11%;\"><b>-madd-bnd-prefix</b></p>\n\n<p style=\"margin-left:17%;\">This option forces the\nassembler to add <small>BND</small> prefix to all branches,\neven if such prefix was not explicitly specified in the\nsource code.</p>\n\n<p style=\"margin-left:11%;\"><b>-mno-shared</b></p>\n\n<p style=\"margin-left:17%;\">On <small>ELF</small> target,\nthe assembler normally optimizes out non-PLT relocations\nagainst defined non-weak global branch targets with default\nvisibility. The <b>-mshared</b> option tells the assembler\nto generate code which may go into a shared library where\nall non-weak global branch targets with default visibility\ncan be preempted. The resulting code is slightly bigger.\nThis option only affects the handling of branch\ninstructions.</p>\n\n<p style=\"margin-left:11%;\"><b>-mbig-obj</b></p>\n\n<p style=\"margin-left:17%;\">On <small>PE/COFF</small>\ntarget this option forces the use of big object file format,\nwhich allows more than 32768 sections.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-momit-lock-prefix=</b><i>no</i>\n<b><br>\n-momit-lock-prefix=</b><i>yes</i></p>\n\n<p style=\"margin-left:17%;\">These options control how the\nassembler should encode lock prefix. This option is intended\nas a workaround for processors, that fail on lock prefix.\nThis option can only be safely used with single-core,\nsingle-thread computers <b>-momit-lock-prefix=</b><i>yes</i>\nwill omit all lock prefixes.\n<b>-momit-lock-prefix=</b><i>no</i> will encode lock prefix\nas usual, which is the default.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-mfence-as-lock-add=</b><i>no</i>\n<b><br>\n-mfence-as-lock-add=</b><i>yes</i></p>\n\n<p style=\"margin-left:17%;\">These options control how the\nassembler should encode lfence, mfence and sfence.\n<b>-mfence-as-lock-add=</b><i>yes</i> will encode lfence,\nmfence and sfence as <b>lock addl $0x0, (%rsp)</b> in 64-bit\nmode and <b>lock addl $0x0, (%esp)</b> in 32-bit mode.\n<b>-mfence-as-lock-add=</b><i>no</i> will encode lfence,\nmfence and sfence as usual, which is the default.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-mrelax-relocations=</b><i>no</i>\n<b><br>\n-mrelax-relocations=</b><i>yes</i></p>\n\n<p style=\"margin-left:17%;\">These options control whether\nthe assembler should generate relax relocations,\nR_386_GOT32X, in 32-bit mode, or R_X86_64_GOTPCRELX and\nR_X86_64_REX_GOTPCRELX, in 64-bit mode.\n<b>-mrelax-relocations=</b><i>yes</i> will generate relax\nrelocations. <b>-mrelax-relocations=</b><i>no</i> will not\ngenerate relax relocations. The default can be controlled by\na configure option\n<b>--enable-x86-relax-relocations</b>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-malign-branch-boundary=</b>\n<i><small>NUM</small></i></p>\n\n<p style=\"margin-left:17%;\">This option controls how the\nassembler should align branches with segment prefixes or\n<small>NOP. <i>NUM</i></small> must be a power of 2. It\nshould be 0 or no less than 16. Branches will be aligned\nwithin <i><small>NUM</small></i> byte boundary.\n<b>-malign-branch-boundary=0</b>, which is the default,\ndoesn&rsquo;t align branches.</p>\n\n<p style=\"margin-left:11%;\"><b>-malign-branch=</b>\n<i><small>TYPE</small></i> <b>[+</b>\n<i><small>TYPE</small></i> <b>...]</b></p>\n\n<p style=\"margin-left:17%;\">This option specifies types of\nbranches to align. <i><small>TYPE</small></i> is combination\nof <b>jcc</b>, which aligns conditional jumps, <b>fused</b>,\nwhich aligns fused conditional jumps, <b>jmp</b>, which\naligns unconditional jumps, <b>call</b> which aligns calls,\n<b>ret</b>, which aligns rets, <b>indirect</b>, which aligns\nindirect jumps and calls. The default is\n<b>-malign-branch=jcc+fused+jmp</b>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-malign-branch-prefix-size=</b>\n<i><small>NUM</small></i></p>\n\n<p style=\"margin-left:17%;\">This option specifies the\nmaximum number of prefixes on an instruction to align\nbranches. <i><small>NUM</small></i> should be between 0 and\n5. The default <i><small>NUM</small></i> is 5.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-mbranches-within-32B-boundaries</b></p>\n\n<p style=\"margin-left:17%;\">This option aligns conditional\njumps, fused conditional jumps and unconditional jumps\nwithin 32 byte boundary with up to 5 segment prefixes on an\ninstruction. It is equivalent to\n<b>-malign-branch-boundary=32 -malign-branch=jcc+fused+jmp\n-malign-branch-prefix-size=5</b>. The default doesn&rsquo;t\nalign branches.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-mlfence-after-load=</b><i>no</i>\n<b><br>\n-mlfence-after-load=</b><i>yes</i></p>\n\n<p style=\"margin-left:17%;\">These options control whether\nthe assembler should generate lfence after load\ninstructions. <b>-mlfence-after-load=</b><i>yes</i> will\ngenerate lfence. <b>-mlfence-after-load=</b><i>no</i> will\nnot generate lfence, which is the default.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-mlfence-before-indirect-branch=</b><i>none</i>\n<b><br>\n-mlfence-before-indirect-branch=</b><i>all</i> <b><br>\n-mlfence-before-indirect-branch=</b><i>register</i> <b><br>\n-mlfence-before-indirect-branch=</b><i>memory</i></p>\n\n<p style=\"margin-left:17%;\">These options control whether\nthe assembler should generate lfence before indirect near\nbranch instructions.\n<b>-mlfence-before-indirect-branch=</b><i>all</i> will\ngenerate lfence before indirect near branch via register and\nissue a warning before indirect near branch via memory. It\nalso implicitly sets <b>-mlfence-before-ret=</b><i>shl</i>\nwhen there&rsquo;s no explicit <b>-mlfence-before-ret=</b>.\n<b>-mlfence-before-indirect-branch=</b><i>register</i> will\ngenerate lfence before indirect near branch via register.\n<b>-mlfence-before-indirect-branch=</b><i>memory</i> will\nissue a warning before indirect near branch via memory.\n<b>-mlfence-before-indirect-branch=</b><i>none</i> will not\ngenerate lfence nor issue warning, which is the default.\nNote that lfence won&rsquo;t be generated before indirect\nnear branch via register with\n<b>-mlfence-after-load=</b><i>yes</i> since lfence will be\ngenerated after loading branch target register.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-mlfence-before-ret=</b><i>none</i>\n<b><br>\n-mlfence-before-ret=</b><i>shl</i> <b><br>\n-mlfence-before-ret=</b><i>or</i> <b><br>\n-mlfence-before-ret=</b><i>yes</i> <b><br>\n-mlfence-before-ret=</b><i>not</i></p>\n\n<p style=\"margin-left:17%;\">These options control whether\nthe assembler should generate lfence before ret.\n<b>-mlfence-before-ret=</b><i>or</i> will generate generate\nor instruction with lfence.\n<b>-mlfence-before-ret=</b><i>shl/yes</i> will generate shl\ninstruction with lfence.\n<b>-mlfence-before-ret=</b><i>not</i> will generate not\ninstruction with lfence.\n<b>-mlfence-before-ret=</b><i>none</i> will not generate\nlfence, which is the default.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-mx86-used-note=</b><i>no</i>\n<b><br>\n-mx86-used-note=</b><i>yes</i></p>\n\n<p style=\"margin-left:17%;\">These options control whether\nthe assembler should generate\n<small>GNU_PROPERTY_X86_ISA_1_USED</small> and\n<small>GNU_PROPERTY_X86_FEATURE_2_USED GNU</small> property\nnotes. The default can be controlled by the\n<b>--enable-x86-used-note</b> configure option.</p>\n\n<p style=\"margin-left:11%;\"><b>-mevexrcig=</b><i>rne</i>\n<b><br>\n-mevexrcig=</b><i>rd</i> <b><br>\n-mevexrcig=</b><i>ru</i> <b><br>\n-mevexrcig=</b><i>rz</i></p>\n\n<p style=\"margin-left:17%;\">These options control how the\nassembler should encode SAE-only <small>EVEX</small>\ninstructions. <b>-mevexrcig=</b><i>rne</i> will encode\n<small>RC</small> bits of <small>EVEX</small> instruction\nwith 00, which is the default. <b>-mevexrcig=</b><i>rd</i>,\n<b>-mevexrcig=</b><i>ru</i> and <b>-mevexrcig=</b><i>rz</i>\nwill encode SAE-only <small>EVEX</small> instructions with\n01, 10 and 11 <small>RC</small> bits, respectively.</p>\n\n<p style=\"margin-left:11%;\"><b>-mamd64 <br>\n-mintel64</b></p>\n\n<p style=\"margin-left:17%;\">This option specifies that the\nassembler should accept only <small>AMD64</small> or Intel64\n<small>ISA</small> in 64-bit mode. The default is to accept\ncommon, Intel64 only and <small>AMD64</small> ISAs.</p>\n\n<p style=\"margin-left:11%;\"><b>-O0 | -O | -O1 | -O2 |\n-Os</b></p>\n\n<p style=\"margin-left:17%;\">Optimize instruction encoding\nwith smaller instruction size. <b>-O</b> and <b>-O1</b>\nencode 64-bit register load instructions with 64-bit\nimmediate as 32-bit register load instructions with 31-bit\nor 32-bits immediates, encode 64-bit register clearing\ninstructions with 32-bit register clearing instructions,\nencode 256-bit/512-bit <small>VEX/EVEX</small> vector\nregister clearing instructions with 128-bit\n<small>VEX</small> vector register clearing instructions,\nencode 128-bit/256-bit <small>EVEX</small> vector register\nload/store instructions with <small>VEX</small> vector\nregister load/store instructions, and encode 128-bit/256-bit\n<small>EVEX</small> packed integer logical instructions with\n128-bit/256-bit <small>VEX</small> packed integer\nlogical.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>-O2</b>\nincludes <b>-O1</b> optimization plus encodes\n256-bit/512-bit <small>EVEX</small> vector register clearing\ninstructions with 128-bit <small>EVEX</small> vector\nregister clearing instructions. In 64-bit mode\n<small>VEX</small> encoded instructions with commutative\nsource operands will also have their source operands swapped\nif this allows using the 2-byte <small>VEX</small> prefix\nform instead of the 3-byte one. Certain forms of\n<small>AND</small> as well as <small>OR</small> with the\nsame (register) operand specified twice will also be changed\nto <small>TEST.</small></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>-Os</b>\nincludes <b>-O2</b> optimization plus encodes 16-bit, 32-bit\nand 64-bit register tests with immediate as 8-bit register\ntest with immediate. <b>-O0</b> turns off this\noptimization.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for the Ubicom\n<small>IP2K</small> series. <b><br>\n-mip2022ext</b></p>\n\n<p style=\"margin-left:17%;\">Specifies that the extended\n<small>IP2022</small> instructions are allowed.</p>\n\n<p style=\"margin-left:11%;\"><b>-mip2022</b></p>\n\n<p style=\"margin-left:17%;\">Restores the default behaviour,\nwhich restricts the permitted instructions to just the basic\n<small>IP2022</small> ones.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for the Renesas\nM32C and M16C processors. <b><br>\n-m32c</b></p>\n\n<p style=\"margin-left:17%;\">Assemble M32C instructions.</p>\n\n<p style=\"margin-left:11%;\"><b>-m16c</b></p>\n\n<p style=\"margin-left:17%;\">Assemble M16C instructions (the\ndefault).</p>\n\n<p style=\"margin-left:11%;\"><b>-relax</b></p>\n\n<p style=\"margin-left:17%;\">Enable support for link-time\nrelaxations.</p>\n\n<p style=\"margin-left:11%;\"><b>-h-tick-hex</b></p>\n\n<p style=\"margin-left:17%;\">Support H&rsquo;00 style hex\nconstants in addition to 0x00 style.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for the Renesas\nM32R (formerly Mitsubishi M32R) series. <b><br>\n--m32rx</b></p>\n\n<p style=\"margin-left:17%;\">Specify which processor in the\nM32R family is the target. The default is normally the M32R,\nbut this option changes it to the M32RX.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--warn-explicit-parallel-conflicts\nor --Wp</b></p>\n\n<p style=\"margin-left:17%;\">Produce warning messages when\nquestionable parallel constructs are encountered.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--no-warn-explicit-parallel-conflicts\nor --Wnp</b></p>\n\n<p style=\"margin-left:17%;\">Do not produce warning messages\nwhen questionable parallel constructs are encountered.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for the Motorola\n68000 series.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-l</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>Shorten references to undefined symbols, to one word\ninstead of two.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-m68000 | -m68008 | -m68010\n| -m68020 | -m68030 <br>\n| -m68040 | -m68060 | -m68302 | -m68331 | -m68332 <br>\n| -m68333 | -m68340 | -mcpu32 | -m5200</b></p>\n\n<p style=\"margin-left:17%;\">Specify what processor in the\n68000 family is the target. The default is normally the\n68020, but this can be changed at configuration time.</p>\n\n<p style=\"margin-left:11%;\"><b>-m68881 | -m68882 |\n-mno-68881 | -mno-68882</b></p>\n\n<p style=\"margin-left:17%;\">The target machine does (or\ndoes not) have a floating-point coprocessor. The default is\nto assume a coprocessor for 68020, 68030, and cpu32.\nAlthough the basic 68000 is not compatible with the 68881, a\ncombination of the two can be specified, since it&rsquo;s\npossible to do emulation of the coprocessor instructions\nwith the main processor.</p>\n\n<p style=\"margin-left:11%;\"><b>-m68851 | -mno-68851</b></p>\n\n<p style=\"margin-left:17%;\">The target machine does (or\ndoes not) have a memory-management unit coprocessor. The\ndefault is to assume an <small>MMU</small> for 68020 and\nup.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for an Altera\nNios <small>II</small> processor. <b><br>\n-relax-section</b></p>\n\n<p style=\"margin-left:17%;\">Replace identified out-of-range\nbranches with PC-relative &quot;jmp&quot; sequences when\npossible. The generated code sequences are suitable for use\nin position-independent code, but there is a practical limit\non the extended branch range because of the length of the\nsequences. This option is the default.</p>\n\n<p style=\"margin-left:11%;\"><b>-relax-all</b></p>\n\n<p style=\"margin-left:17%;\">Replace branch instructions not\ndeterminable to be in range and all call instructions with\n&quot;jmp&quot; and &quot;callr&quot; sequences\n(respectively). This option generates absolute relocations\nagainst the target symbols and is not appropriate for\nposition-independent code.</p>\n\n<p style=\"margin-left:11%;\"><b>-no-relax</b></p>\n\n<p style=\"margin-left:17%;\">Do not replace any branches or\ncalls.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-EB</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"80%\">\n\n\n<p>Generate big-endian output.</p></td>\n<td width=\"3%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-EL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"80%\">\n\n\n<p>Generate little-endian output. This is the default.</p></td>\n<td width=\"3%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>-march=</b><i>architecture</i></p>\n\n<p style=\"margin-left:17%;\">This option specifies the\ntarget architecture. The assembler issues an error message\nif an attempt is made to assemble an instruction which will\nnot execute on the target architecture. The following\narchitecture names are recognized: &quot;r1&quot;,\n&quot;r2&quot;. The default is &quot;r1&quot;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for a\n<small>PRU</small> processor. <b><br>\n-mlink-relax</b></p>\n\n<p style=\"margin-left:17%;\">Assume that <small>LD</small>\nwould optimize <small>LDI32</small> instructions by checking\nthe upper 16 bits of the <i>expression</i>. If they are all\nzeros, then <small>LD</small> would shorten the\n<small>LDI32</small> instruction to a single\n<small>LDI.</small> In such case &quot;as&quot; will output\n<small>DIFF</small> relocations for diff expressions.</p>\n\n<p style=\"margin-left:11%;\"><b>-mno-link-relax</b></p>\n\n<p style=\"margin-left:17%;\">Assume that <small>LD</small>\nwould not optimize <small>LDI32</small> instructions. As a\nconsequence, <small>DIFF</small> relocations will not be\nemitted.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-mno-warn-regname-label</b></p>\n\n<p style=\"margin-left:17%;\">Do not warn if a label name\nmatches a register name. Usually assembler programmers will\nwant this warning to be emitted. C compilers may want to\nturn this off.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for a\n<small>MIPS</small> processor. <b><br>\n-G</b> <i>num</i></p>\n\n<p style=\"margin-left:17%;\">This option sets the largest\nsize of an object that can be referenced implicitly with the\n&quot;gp&quot; register. It is only accepted for targets\nthat use <small>ECOFF</small> format, such as a DECstation\nrunning Ultrix. The default value is 8.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-EB</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"60%\">\n\n\n<p>Generate &quot;big endian&quot; format output.</p></td>\n<td width=\"23%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>-EL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"60%\">\n\n\n<p>Generate &quot;little endian&quot; format output.</p></td>\n<td width=\"23%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>-mips1 <br>\n-mips2 <br>\n-mips3 <br>\n-mips4 <br>\n-mips5 <br>\n-mips32 <br>\n-mips32r2 <br>\n-mips32r3 <br>\n-mips32r5 <br>\n-mips32r6 <br>\n-mips64 <br>\n-mips64r2 <br>\n-mips64r3 <br>\n-mips64r5 <br>\n-mips64r6</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for a particular\n<small>MIPS</small> Instruction Set Architecture level.\n<b>-mips1</b> is an alias for <b>-march=r3000</b>,\n<b>-mips2</b> is an alias for <b>-march=r6000</b>,\n<b>-mips3</b> is an alias for <b>-march=r4000</b> and\n<b>-mips4</b> is an alias for <b>-march=r8000</b>.\n<b>-mips5</b>, <b>-mips32</b>, <b>-mips32r2</b>,\n<b>-mips32r3</b>, <b>-mips32r5</b>, <b>-mips32r6</b>,\n<b>-mips64</b>, <b>-mips64r2</b>, <b>-mips64r3</b>,\n<b>-mips64r5</b>, and <b>-mips64r6</b> correspond to generic\n<small>MIPS V, MIPS32, MIPS32</small> Release 2,\n<small>MIPS32</small> Release 3, <small>MIPS32</small>\nRelease 5, <small>MIPS32</small> Release 6, <small>MIPS64,\nMIPS64</small> Release 2, <small>MIPS64</small> Release 3,\n<small>MIPS64</small> Release 5, and <small>MIPS64</small>\nRelease 6 <small>ISA</small> processors, respectively.</p>\n\n<p style=\"margin-left:11%;\"><b>-march=</b><i>cpu</i></p>\n\n<p style=\"margin-left:17%;\">Generate code for a particular\n<small>MIPS CPU.</small></p>\n\n<p style=\"margin-left:11%;\"><b>-mtune=</b><i>cpu</i></p>\n\n<p style=\"margin-left:17%;\">Schedule and tune for a\nparticular <small>MIPS CPU.</small></p>\n\n<p style=\"margin-left:11%;\"><b>-mfix7000 <br>\n-mno-fix7000</b></p>\n\n<p style=\"margin-left:17%;\">Cause nops to be inserted if\nthe read of the destination register of an mfhi or mflo\ninstruction occurs in the following two instructions.</p>\n\n<p style=\"margin-left:11%;\"><b>-mfix-rm7000 <br>\n-mno-fix-rm7000</b></p>\n\n<p style=\"margin-left:17%;\">Cause nops to be inserted if a\ndmult or dmultu instruction is followed by a load\ninstruction.</p>\n\n<p style=\"margin-left:11%;\"><b>-mfix-r5900 <br>\n-mno-fix-r5900</b></p>\n\n<p style=\"margin-left:17%;\">Do not attempt to schedule the\npreceding instruction into the delay slot of a branch\ninstruction placed at the end of a short loop of six\ninstructions or fewer and always schedule a &quot;nop&quot;\ninstruction there instead. The short loop bug under certain\nconditions causes loops to execute only once or twice, due\nto a hardware bug in the R5900 chip.</p>\n\n<p style=\"margin-left:11%;\"><b>-mdebug <br>\n-no-mdebug</b></p>\n\n<p style=\"margin-left:17%;\">Cause stabs-style debugging\noutput to go into an ECOFF-style .mdebug section instead of\nthe standard <small>ELF</small> .stabs sections.</p>\n\n<p style=\"margin-left:11%;\"><b>-mpdr <br>\n-mno-pdr</b></p>\n\n<p style=\"margin-left:17%;\">Control generation of\n&quot;.pdr&quot; sections.</p>\n\n<p style=\"margin-left:11%;\"><b>-mgp32 <br>\n-mfp32</b></p>\n\n<p style=\"margin-left:17%;\">The register sizes are normally\ninferred from the <small>ISA</small> and <small>ABI,</small>\nbut these flags force a certain group of registers to be\ntreated as 32 bits wide at all times. <b>-mgp32</b> controls\nthe size of general-purpose registers and <b>-mfp32</b>\ncontrols the size of floating-point registers.</p>\n\n<p style=\"margin-left:11%;\"><b>-mgp64 <br>\n-mfp64</b></p>\n\n<p style=\"margin-left:17%;\">The register sizes are normally\ninferred from the <small>ISA</small> and <small>ABI,</small>\nbut these flags force a certain group of registers to be\ntreated as 64 bits wide at all times. <b>-mgp64</b> controls\nthe size of general-purpose registers and <b>-mfp64</b>\ncontrols the size of floating-point registers.</p>\n\n<p style=\"margin-left:11%;\"><b>-mfpxx</b></p>\n\n<p style=\"margin-left:17%;\">The register sizes are normally\ninferred from the <small>ISA</small> and <small>ABI,</small>\nbut using this flag in combination with <b>-mabi=32</b>\nenables an <small>ABI</small> variant which will operate\ncorrectly with floating-point registers which are 32 or 64\nbits wide.</p>\n\n<p style=\"margin-left:11%;\"><b>-modd-spreg <br>\n-mno-odd-spreg</b></p>\n\n<p style=\"margin-left:17%;\">Enable use of floating-point\noperations on odd-numbered single-precision registers when\nsupported by the <small>ISA.</small> <b>-mfpxx</b> implies\n<b>-mno-odd-spreg</b>, otherwise the default is\n<b>-modd-spreg</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>-mips16 <br>\n-no-mips16</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for the\n<small>MIPS 16</small> processor. This is equivalent to\nputting &quot;.module mips16&quot; at the start of the\nassembly file. <b>-no-mips16</b> turns off this option.</p>\n\n<p style=\"margin-left:11%;\"><b>-mmips16e2 <br>\n-mno-mips16e2</b></p>\n\n<p style=\"margin-left:17%;\">Enable the use of MIPS16e2\ninstructions in <small>MIPS16</small> mode. This is\nequivalent to putting &quot;.module mips16e2&quot; at the\nstart of the assembly file. <b>-mno-mips16e2</b> turns off\nthis option.</p>\n\n<p style=\"margin-left:11%;\"><b>-mmicromips <br>\n-mno-micromips</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for the microMIPS\nprocessor. This is equivalent to putting &quot;.module\nmicromips&quot; at the start of the assembly file.\n<b>-mno-micromips</b> turns off this option. This is\nequivalent to putting &quot;.module nomicromips&quot; at the\nstart of the assembly file.</p>\n\n<p style=\"margin-left:11%;\"><b>-msmartmips <br>\n-mno-smartmips</b></p>\n\n<p style=\"margin-left:17%;\">Enables the SmartMIPS extension\nto the <small>MIPS32</small> instruction set. This is\nequivalent to putting &quot;.module smartmips&quot; at the\nstart of the assembly file. <b>-mno-smartmips</b> turns off\nthis option.</p>\n\n<p style=\"margin-left:11%;\"><b>-mips3d <br>\n-no-mips3d</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for the\n<small>MIPS-3D</small> Application Specific Extension. This\ntells the assembler to accept <small>MIPS-3D</small>\ninstructions. <b>-no-mips3d</b> turns off this option.</p>\n\n<p style=\"margin-left:11%;\"><b>-mdmx <br>\n-no-mdmx</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for the\n<small>MDMX</small> Application Specific Extension. This\ntells the assembler to accept <small>MDMX</small>\ninstructions. <b>-no-mdmx</b> turns off this option.</p>\n\n<p style=\"margin-left:11%;\"><b>-mdsp <br>\n-mno-dsp</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for the\n<small>DSP</small> Release 1 Application Specific Extension.\nThis tells the assembler to accept <small>DSP</small>\nRelease 1 instructions. <b>-mno-dsp</b> turns off this\noption.</p>\n\n<p style=\"margin-left:11%;\"><b>-mdspr2 <br>\n-mno-dspr2</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for the\n<small>DSP</small> Release 2 Application Specific Extension.\nThis option implies <b>-mdsp</b>. This tells the assembler\nto accept <small>DSP</small> Release 2 instructions.\n<b>-mno-dspr2</b> turns off this option.</p>\n\n<p style=\"margin-left:11%;\"><b>-mdspr3 <br>\n-mno-dspr3</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for the\n<small>DSP</small> Release 3 Application Specific Extension.\nThis option implies <b>-mdsp</b> and <b>-mdspr2</b>. This\ntells the assembler to accept <small>DSP</small> Release 3\ninstructions. <b>-mno-dspr3</b> turns off this option.</p>\n\n<p style=\"margin-left:11%;\"><b>-mmsa <br>\n-mno-msa</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for the\n<small>MIPS SIMD</small> Architecture Extension. This tells\nthe assembler to accept <small>MSA</small> instructions.\n<b>-mno-msa</b> turns off this option.</p>\n\n<p style=\"margin-left:11%;\"><b>-mxpa <br>\n-mno-xpa</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for the\n<small>MIPS</small> eXtended Physical Address (\n<small>XPA</small> ) Extension. This tells the assembler to\naccept <small>XPA</small> instructions. <b>-mno-xpa</b>\nturns off this option.</p>\n\n<p style=\"margin-left:11%;\"><b>-mmt <br>\n-mno-mt</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for the\n<small>MT</small> Application Specific Extension. This tells\nthe assembler to accept <small>MT</small> instructions.\n<b>-mno-mt</b> turns off this option.</p>\n\n<p style=\"margin-left:11%;\"><b>-mmcu <br>\n-mno-mcu</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for the\n<small>MCU</small> Application Specific Extension. This\ntells the assembler to accept <small>MCU</small>\ninstructions. <b>-mno-mcu</b> turns off this option.</p>\n\n<p style=\"margin-left:11%;\"><b>-mcrc <br>\n-mno-crc</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for the\n<small>MIPS</small> cyclic redundancy check (\n<small>CRC</small> ) Application Specific Extension. This\ntells the assembler to accept <small>CRC</small>\ninstructions. <b>-mno-crc</b> turns off this option.</p>\n\n<p style=\"margin-left:11%;\"><b>-mginv <br>\n-mno-ginv</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for the Global\nINValidate ( <small>GINV</small> ) Application Specific\nExtension. This tells the assembler to accept\n<small>GINV</small> instructions. <b>-mno-ginv</b> turns off\nthis option.</p>\n\n<p style=\"margin-left:11%;\"><b>-mloongson-mmi <br>\n-mno-loongson-mmi</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for the Loongson\nMultiMedia extensions Instructions ( <small>MMI</small> )\nApplication Specific Extension. This tells the assembler to\naccept <small>MMI</small> instructions.\n<b>-mno-loongson-mmi</b> turns off this option.</p>\n\n<p style=\"margin-left:11%;\"><b>-mloongson-cam <br>\n-mno-loongson-cam</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for the Loongson\nContent Address Memory ( <small>CAM</small> ) instructions.\nThis tells the assembler to accept Loongson\n<small>CAM</small> instructions. <b>-mno-loongson-cam</b>\nturns off this option.</p>\n\n<p style=\"margin-left:11%;\"><b>-mloongson-ext <br>\n-mno-loongson-ext</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for the Loongson\nEXTensions ( <small>EXT</small> ) instructions. This tells\nthe assembler to accept Loongson <small>EXT</small>\ninstructions. <b>-mno-loongson-ext</b> turns off this\noption.</p>\n\n<p style=\"margin-left:11%;\"><b>-mloongson-ext2 <br>\n-mno-loongson-ext2</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for the Loongson\nEXTensions R2 ( <small>EXT2</small> ) instructions. This\noption implies <b>-mloongson-ext</b>. This tells the\nassembler to accept Loongson <small>EXT2</small>\ninstructions. <b>-mno-loongson-ext2</b> turns off this\noption.</p>\n\n<p style=\"margin-left:11%;\"><b>-minsn32 <br>\n-mno-insn32</b></p>\n\n<p style=\"margin-left:17%;\">Only use 32-bit instruction\nencodings when generating code for the microMIPS processor.\nThis option inhibits the use of any 16-bit instructions.\nThis is equivalent to putting &quot;.set insn32&quot; at the\nstart of the assembly file. <b>-mno-insn32</b> turns off\nthis option. This is equivalent to putting &quot;.set\nnoinsn32&quot; at the start of the assembly file. By default\n<b>-mno-insn32</b> is selected, allowing all instructions to\nbe used.</p>\n\n<p style=\"margin-left:11%;\"><b>--construct-floats <br>\n--no-construct-floats</b></p>\n\n<p style=\"margin-left:17%;\">The\n<b>--no-construct-floats</b> option disables the\nconstruction of double width floating point constants by\nloading the two halves of the value into the two single\nwidth floating point registers that make up the double width\nregister. By default <b>--construct-floats</b> is selected,\nallowing construction of these floating point constants.</p>\n\n<p style=\"margin-left:11%;\"><b>--relax-branch <br>\n--no-relax-branch</b></p>\n\n<p style=\"margin-left:17%;\">The <b>--relax-branch</b>\noption enables the relaxation of out-of-range branches. By\ndefault <b>--no-relax-branch</b> is selected, causing any\nout-of-range branches to produce an error.</p>\n\n<p style=\"margin-left:11%;\"><b>-mignore-branch-isa <br>\n-mno-ignore-branch-isa</b></p>\n\n<p style=\"margin-left:17%;\">Ignore branch checks for\ninvalid transitions between <small>ISA</small> modes. The\nsemantics of branches does not provide for an\n<small>ISA</small> mode switch, so in most cases the\n<small>ISA</small> mode a branch has been encoded for has to\nbe the same as the <small>ISA</small> mode of the\nbranch&rsquo;s target label. Therefore <small>GAS</small>\nhas checks implemented that verify in branch assembly that\nthe two <small>ISA</small> modes match.\n<b>-mignore-branch-isa</b> disables these checks. By default\n<b>-mno-ignore-branch-isa</b> is selected, causing any\ninvalid branch requiring a transition between\n<small>ISA</small> modes to produce an error.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-mnan=</b><i>encoding</i></p>\n\n<p style=\"margin-left:17%;\">Select between the <small>IEEE\n754-2008</small> (<b>-mnan=2008</b>) or the legacy\n(<b>-mnan=legacy</b>) NaN encoding format. The latter is the\ndefault.</p>\n\n\n<p style=\"margin-left:11%;\"><b>--emulation=</b><i>name</i></p>\n\n<p style=\"margin-left:17%;\">This option was formerly used\nto switch between <small>ELF</small> and\n<small>ECOFF</small> output on targets like <small>IRIX\n5</small> that supported both. <small>MIPS ECOFF</small>\nsupport was removed in <small>GAS 2.24,</small> so the\noption now serves little purpose. It is retained for\nbackwards compatibility.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The available\nconfiguration names are: <b>mipself</b>, <b>mipslelf</b> and\n<b>mipsbelf</b>. Choosing <b>mipself</b> now has no effect,\nsince the output is always <small>ELF.</small>\n<b>mipslelf</b> and <b>mipsbelf</b> select little- and\nbig-endian output respectively, but <b>-EL</b> and\n<b>-EB</b> are now the preferred options instead.</p>\n\n<p style=\"margin-left:11%;\"><b>-nocpp</b></p>\n\n<p style=\"margin-left:17%;\"><b>as</b> ignores this option.\nIt is accepted for compatibility with the native tools.</p>\n\n<p style=\"margin-left:11%;\"><b>--trap <br>\n--no-trap <br>\n--break <br>\n--no-break</b></p>\n\n<p style=\"margin-left:17%;\">Control how to deal with\nmultiplication overflow and division by zero. <b>--trap</b>\nor <b>--no-break</b> (which are synonyms) take a trap\nexception (and only work for Instruction Set Architecture\nlevel 2 and higher); <b>--break</b> or <b>--no-trap</b>\n(also synonyms, and the default) take a break exception.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-n</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>When this option is used, <b>as</b> will issue a warning\nevery time it generates a nop instruction from a macro.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for a LoongArch\nprocessor. <b><br>\n-fpic <br>\n-fPIC</b></p>\n\n<p style=\"margin-left:17%;\">Generate position-independent\ncode</p>\n\n<p style=\"margin-left:11%;\"><b>-fno-pic</b></p>\n\n<p style=\"margin-left:17%;\">Don&rsquo;t generate\nposition-independent code (default)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for a Meta\nprocessor. <br>\n&quot;-mcpu=metac11&quot;</p>\n\n<p style=\"margin-left:17%;\">Generate code for Meta 1.1.</p>\n\n<p style=\"margin-left:11%;\">&quot;-mcpu=metac12&quot;</p>\n\n<p style=\"margin-left:17%;\">Generate code for Meta 1.2.</p>\n\n<p style=\"margin-left:11%;\">&quot;-mcpu=metac21&quot;</p>\n\n<p style=\"margin-left:17%;\">Generate code for Meta 2.1.</p>\n\n<p style=\"margin-left:11%;\">&quot;-mfpu=metac21&quot;</p>\n\n<p style=\"margin-left:17%;\">Allow code to use\n<small>FPU</small> hardware of Meta 2.1.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See the info\npages for documentation of the MMIX-specific options.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for a\n<small>NDS32</small> processor. <br>\n&quot;-O1&quot;</p>\n\n<p style=\"margin-left:17%;\">Optimize for performance.</p>\n\n<p style=\"margin-left:11%;\">&quot;-Os&quot;</p>\n\n<p style=\"margin-left:17%;\">Optimize for space.</p>\n\n<p style=\"margin-left:11%;\">&quot;-EL&quot;</p>\n\n<p style=\"margin-left:17%;\">Produce little endian data\noutput.</p>\n\n<p style=\"margin-left:11%;\">&quot;-EB&quot;</p>\n\n<p style=\"margin-left:17%;\">Produce little endian data\noutput.</p>\n\n<p style=\"margin-left:11%;\">&quot;-mpic&quot;</p>\n\n<p style=\"margin-left:17%;\">Generate\n<small>PIC.</small></p>\n\n\n<p style=\"margin-left:11%;\">&quot;-mno-fp-as-gp-relax&quot;</p>\n\n<p style=\"margin-left:17%;\">Suppress fp-as-gp relaxation\nfor this file.</p>\n\n<p style=\"margin-left:11%;\">&quot;-mb2bb-relax&quot;</p>\n\n<p style=\"margin-left:17%;\">Back-to-back branch\noptimization.</p>\n\n<p style=\"margin-left:11%;\">&quot;-mno-all-relax&quot;</p>\n\n<p style=\"margin-left:17%;\">Suppress all relaxation for\nthis file.</p>\n\n<p style=\"margin-left:11%;\">&quot;-march=&lt;arch\nname&gt;&quot;</p>\n\n<p style=\"margin-left:17%;\">Assemble for architecture\n&lt;arch name&gt; which could be v3, v3j, v3m, v3f, v3s, v2,\nv2j, v2f, v2s.</p>\n\n\n<p style=\"margin-left:11%;\">&quot;-mbaseline=&lt;baseline&gt;&quot;</p>\n\n<p style=\"margin-left:17%;\">Assemble for baseline\n&lt;baseline&gt; which could be v2, v3, v3m.</p>\n\n\n<p style=\"margin-left:11%;\">&quot;-mfpu-freg=<i>FREG</i>&quot;</p>\n\n<p style=\"margin-left:17%;\">Specify a <small>FPU</small>\nconfiguration. <br>\n&quot;0 8 SP / 4 DP registers&quot; <br>\n&quot;1 16 SP / 8 DP registers&quot; <br>\n&quot;2 32 SP / 16 DP registers&quot; <br>\n&quot;3 32 SP / 32 DP registers&quot;</p>\n\n\n<p style=\"margin-left:11%;\">&quot;-mabi=<i>abi</i>&quot;</p>\n\n<p style=\"margin-left:17%;\">Specify a abi version\n&lt;abi&gt; could be v1, v2, v2fp, v2fpp.</p>\n\n<p style=\"margin-left:11%;\">&quot;-m[no-]mac&quot;</p>\n\n<p style=\"margin-left:17%;\">Enable/Disable Multiply\ninstructions support.</p>\n\n<p style=\"margin-left:11%;\">&quot;-m[no-]div&quot;</p>\n\n<p style=\"margin-left:17%;\">Enable/Disable Divide\ninstructions support.</p>\n\n\n<p style=\"margin-left:11%;\">&quot;-m[no-]16bit-ext&quot;</p>\n\n<p style=\"margin-left:17%;\">Enable/Disable 16-bit\nextension</p>\n\n<p style=\"margin-left:11%;\">&quot;-m[no-]dx-regs&quot;</p>\n\n<p style=\"margin-left:17%;\">Enable/Disable d0/d1\nregisters</p>\n\n\n<p style=\"margin-left:11%;\">&quot;-m[no-]perf-ext&quot;</p>\n\n<p style=\"margin-left:17%;\">Enable/Disable Performance\nextension</p>\n\n\n<p style=\"margin-left:11%;\">&quot;-m[no-]perf2-ext&quot;</p>\n\n<p style=\"margin-left:17%;\">Enable/Disable Performance\nextension 2</p>\n\n\n<p style=\"margin-left:11%;\">&quot;-m[no-]string-ext&quot;</p>\n\n<p style=\"margin-left:17%;\">Enable/Disable String\nextension</p>\n\n\n<p style=\"margin-left:11%;\">&quot;-m[no-]reduced-regs&quot;</p>\n\n<p style=\"margin-left:17%;\">Enable/Disable Reduced Register\nconfiguration ( <small>GPR16</small> ) option</p>\n\n\n<p style=\"margin-left:11%;\">&quot;-m[no-]audio-isa-ext&quot;</p>\n\n<p style=\"margin-left:17%;\">Enable/Disable <small>AUDIO\nISA</small> extension</p>\n\n\n<p style=\"margin-left:11%;\">&quot;-m[no-]fpu-sp-ext&quot;</p>\n\n<p style=\"margin-left:17%;\">Enable/Disable <small>FPU\nSP</small> extension</p>\n\n\n<p style=\"margin-left:11%;\">&quot;-m[no-]fpu-dp-ext&quot;</p>\n\n<p style=\"margin-left:17%;\">Enable/Disable <small>FPU\nDP</small> extension</p>\n\n<p style=\"margin-left:11%;\">&quot;-m[no-]fpu-fma&quot;</p>\n\n<p style=\"margin-left:17%;\">Enable/Disable\n<small>FPU</small> fused-multiply-add instructions</p>\n\n<p style=\"margin-left:11%;\">&quot;-mall-ext&quot;</p>\n\n<p style=\"margin-left:17%;\">Turn on all extensions and\ninstructions support</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for a PowerPC\nprocessor. <b><br>\n-a32</b></p>\n\n<p style=\"margin-left:17%;\">Generate <small>ELF32</small>\nor <small>XCOFF32.</small></p>\n\n<p style=\"margin-left:11%;\"><b>-a64</b></p>\n\n<p style=\"margin-left:17%;\">Generate <small>ELF64</small>\nor <small>XCOFF64.</small></p>\n\n<p style=\"margin-left:11%;\"><b>-K\n<small>PIC</small></b></p>\n\n<p style=\"margin-left:17%;\">Set\n<small>EF_PPC_RELOCATABLE_LIB</small> in <small>ELF</small>\nflags.</p>\n\n<p style=\"margin-left:11%;\"><b>-mpwrx | -mpwr2</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for\n<small>POWER/2</small> ( <small>RIOS2</small> ).</p>\n\n<p style=\"margin-left:11%;\"><b>-mpwr</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for\n<small>POWER</small> ( <small>RIOS1</small> )</p>\n\n<p style=\"margin-left:11%;\"><b>-m601</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for PowerPC\n601.</p>\n\n<p style=\"margin-left:11%;\"><b>-mppc, -mppc32, -m603,\n-m604</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for PowerPC\n603/604.</p>\n\n<p style=\"margin-left:11%;\"><b>-m403, -m405</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for PowerPC\n403/405.</p>\n\n<p style=\"margin-left:11%;\"><b>-m440</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for PowerPC 440.\nBookE and some 405 instructions.</p>\n\n<p style=\"margin-left:11%;\"><b>-m464</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for PowerPC\n464.</p>\n\n<p style=\"margin-left:11%;\"><b>-m476</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for PowerPC\n476.</p>\n\n<p style=\"margin-left:11%;\"><b>-m7400, -m7410, -m7450,\n-m7455</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for PowerPC\n7400/7410/7450/7455.</p>\n\n<p style=\"margin-left:11%;\"><b>-m750cl, -mgekko,\n-mbroadway</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for PowerPC\n750CL/Gekko/Broadway.</p>\n\n<p style=\"margin-left:11%;\"><b>-m821, -m850, -m860</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for PowerPC\n821/850/860.</p>\n\n<p style=\"margin-left:11%;\"><b>-mppc64, -m620</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for PowerPC\n620/625/630.</p>\n\n<p style=\"margin-left:11%;\"><b>-me500, -me500x2</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for Motorola e500\ncore complex.</p>\n\n<p style=\"margin-left:11%;\"><b>-me500mc</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for Freescale\ne500mc core complex.</p>\n\n<p style=\"margin-left:11%;\"><b>-me500mc64</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for Freescale\ne500mc64 core complex.</p>\n\n<p style=\"margin-left:11%;\"><b>-me5500</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for Freescale\ne5500 core complex.</p>\n\n<p style=\"margin-left:11%;\"><b>-me6500</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for Freescale\ne6500 core complex.</p>\n\n<p style=\"margin-left:11%;\"><b>-mspe</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for Motorola\n<small>SPE</small> instructions.</p>\n\n<p style=\"margin-left:11%;\"><b>-mspe2</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for Freescale\n<small>SPE2</small> instructions.</p>\n\n<p style=\"margin-left:11%;\"><b>-mtitan</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for AppliedMicro\nTitan core complex.</p>\n\n<p style=\"margin-left:11%;\"><b>-mppc64bridge</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for PowerPC 64,\nincluding bridge insns.</p>\n\n<p style=\"margin-left:11%;\"><b>-mbooke</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for 32-bit\nBookE.</p>\n\n<p style=\"margin-left:11%;\"><b>-ma2</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for A2\narchitecture.</p>\n\n<p style=\"margin-left:11%;\"><b>-me300</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for PowerPC e300\nfamily.</p>\n\n<p style=\"margin-left:11%;\"><b>-maltivec</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for processors\nwith AltiVec instructions.</p>\n\n<p style=\"margin-left:11%;\"><b>-mvle</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for Freescale\nPowerPC <small>VLE</small> instructions.</p>\n\n<p style=\"margin-left:11%;\"><b>-mvsx</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for processors\nwith Vector-Scalar ( <small>VSX</small> ) instructions.</p>\n\n<p style=\"margin-left:11%;\"><b>-mhtm</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for processors\nwith Hardware Transactional Memory instructions.</p>\n\n<p style=\"margin-left:11%;\"><b>-mpower4, -mpwr4</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for Power4\narchitecture.</p>\n\n<p style=\"margin-left:11%;\"><b>-mpower5, -mpwr5,\n-mpwr5x</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for Power5\narchitecture.</p>\n\n<p style=\"margin-left:11%;\"><b>-mpower6, -mpwr6</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for Power6\narchitecture.</p>\n\n<p style=\"margin-left:11%;\"><b>-mpower7, -mpwr7</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for Power7\narchitecture.</p>\n\n<p style=\"margin-left:11%;\"><b>-mpower8, -mpwr8</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for Power8\narchitecture.</p>\n\n<p style=\"margin-left:11%;\"><b>-mpower9, -mpwr9</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for Power9\narchitecture.</p>\n\n<p style=\"margin-left:11%;\"><b>-mpower10, -mpwr10</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for Power10\narchitecture.</p>\n\n<p style=\"margin-left:11%;\"><b>-mcell <br>\n-mcell</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for Cell\nBroadband Engine architecture.</p>\n\n<p style=\"margin-left:11%;\"><b>-mcom</b></p>\n\n<p style=\"margin-left:17%;\">Generate code Power/PowerPC\ncommon instructions.</p>\n\n<p style=\"margin-left:11%;\"><b>-many</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for any\narchitecture ( <small>PWR/PWRX/PPC</small> ).</p>\n\n<p style=\"margin-left:11%;\"><b>-mregnames</b></p>\n\n<p style=\"margin-left:17%;\">Allow symbolic names for\nregisters.</p>\n\n<p style=\"margin-left:11%;\"><b>-mno-regnames</b></p>\n\n<p style=\"margin-left:17%;\">Do not allow symbolic names for\nregisters.</p>\n\n<p style=\"margin-left:11%;\"><b>-mrelocatable</b></p>\n\n<p style=\"margin-left:17%;\">Support for <small>GCC</small>\n&rsquo;s -mrelocatable option.</p>\n\n<p style=\"margin-left:11%;\"><b>-mrelocatable-lib</b></p>\n\n<p style=\"margin-left:17%;\">Support for <small>GCC</small>\n&rsquo;s -mrelocatable-lib option.</p>\n\n<p style=\"margin-left:11%;\"><b>-memb</b></p>\n\n<p style=\"margin-left:17%;\">Set <small>PPC_EMB</small> bit\nin <small>ELF</small> flags.</p>\n\n<p style=\"margin-left:11%;\"><b>-mlittle, -mlittle-endian,\n-le</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for a little\nendian machine.</p>\n\n<p style=\"margin-left:11%;\"><b>-mbig, -mbig-endian,\n-be</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for a big endian\nmachine.</p>\n\n<p style=\"margin-left:11%;\"><b>-msolaris</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for Solaris.</p>\n\n<p style=\"margin-left:11%;\"><b>-mno-solaris</b></p>\n\n<p style=\"margin-left:17%;\">Do not generate code for\nSolaris.</p>\n\n<p style=\"margin-left:11%;\"><b>-nops=</b><i>count</i></p>\n\n<p style=\"margin-left:17%;\">If an alignment directive\ninserts more than <i>count</i> nops, put a branch at the\nbeginning to skip execution of the nops.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for a RISC-V\nprocessor. <b><br>\n-fpic <br>\n-fPIC</b></p>\n\n<p style=\"margin-left:17%;\">Generate position-independent\ncode</p>\n\n<p style=\"margin-left:11%;\"><b>-fno-pic</b></p>\n\n<p style=\"margin-left:17%;\">Don&rsquo;t generate\nposition-independent code (default)</p>\n\n<p style=\"margin-left:11%;\"><b>-march=ISA</b></p>\n\n<p style=\"margin-left:17%;\">Select the base isa, as\nspecified by <small>ISA.</small> For example -march=rv32ima.\nIf this option and the architecture attributes aren&rsquo;t\nset, then assembler will check the default configure setting\n--with-arch=ISA.</p>\n\n<p style=\"margin-left:11%;\"><b>-misa-spec=ISAspec</b></p>\n\n<p style=\"margin-left:17%;\">Select the default isa spec\nversion. If the version of <small>ISA</small> isn&rsquo;t\nset by -march, then assembler helps to set the version\naccording to the default chosen spec. If this option\nisn&rsquo;t set, then assembler will check the default\nconfigure setting --with-isa-spec=ISAspec.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-mpriv-spec=PRIVspec</b></p>\n\n<p style=\"margin-left:17%;\">Select the privileged spec\nversion. We can decide whether the <small>CSR</small> is\nvalid or not according to the chosen spec. If this option\nand the privilege attributes aren&rsquo;t set, then\nassembler will check the default configure setting\n--with-priv-spec=PRIVspec.</p>\n\n<p style=\"margin-left:11%;\"><b>-mabi=ABI</b></p>\n\n<p style=\"margin-left:17%;\">Selects the <small>ABI,</small>\nwhich is either &quot;ilp32&quot; or &quot;lp64&quot;,\noptionally followed by &quot;f&quot;, &quot;d&quot;, or\n&quot;q&quot; to indicate single-precision,\ndouble-precision, or quad-precision floating-point calling\nconvention, or none to indicate the soft-float calling\nconvention. Also, &quot;ilp32&quot; can optionally be\nfollowed by &quot;e&quot; to indicate the <small>RVE\nABI,</small> which is always soft-float.</p>\n\n<p style=\"margin-left:11%;\"><b>-mrelax</b></p>\n\n<p style=\"margin-left:17%;\">Take advantage of linker\nrelaxations to reduce the number of instructions required to\nmaterialize symbol addresses. (default)</p>\n\n<p style=\"margin-left:11%;\"><b>-mno-relax</b></p>\n\n<p style=\"margin-left:17%;\">Don&rsquo;t do linker\nrelaxations.</p>\n\n<p style=\"margin-left:11%;\"><b>-march-attr</b></p>\n\n<p style=\"margin-left:17%;\">Generate the default contents\nfor the riscv elf attribute section if the .attribute\ndirectives are not set. This section is used to record the\ninformation that a linker or runtime loader needs to check\ncompatibility. This information includes <small>ISA</small>\nstring, stack alignment requirement, unaligned memory\naccesses, and the major, minor and revision version of\nprivileged specification.</p>\n\n<p style=\"margin-left:11%;\"><b>-mno-arch-attr</b></p>\n\n<p style=\"margin-left:17%;\">Don&rsquo;t generate the\ndefault riscv elf attribute section if the .attribute\ndirectives are not set.</p>\n\n<p style=\"margin-left:11%;\"><b>-mcsr-check</b></p>\n\n<p style=\"margin-left:17%;\">Enable the <small>CSR</small>\nchecking for the ISA-dependent <small>CRS</small> and the\nread-only <small>CSR.</small> The ISA-dependent\n<small>CSR</small> are only valid when the specific\n<small>ISA</small> is set. The read-only <small>CSR</small>\ncan not be written by the <small>CSR</small>\ninstructions.</p>\n\n<p style=\"margin-left:11%;\"><b>-mno-csr-check</b></p>\n\n<p style=\"margin-left:17%;\">Don&rsquo;t do\n<small>CSR</small> checking.</p>\n\n<p style=\"margin-left:11%;\"><b>-mlittle-endian</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for a little\nendian machine.</p>\n\n<p style=\"margin-left:11%;\"><b>-mbig-endian</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for a big endian\nmachine.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See the info\npages for documentation of the RX-specific options.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for the s390\nprocessor family. <b><br>\n-m31 <br>\n-m64</b></p>\n\n<p style=\"margin-left:17%;\">Select the word size, either\n31/32 bits or 64 bits.</p>\n\n<p style=\"margin-left:11%;\"><b>-mesa <br>\n-mzarch</b></p>\n\n<p style=\"margin-left:17%;\">Select the architecture mode,\neither the Enterprise System Architecture (esa) or the\nz/Architecture mode (zarch).</p>\n\n\n<p style=\"margin-left:11%;\"><b>-march=</b><i>processor</i></p>\n\n<p style=\"margin-left:17%;\">Specify which s390 processor\nvariant is the target, <b>g5</b> (or <b>arch3</b>),\n<b>g6</b>, <b>z900</b> (or <b>arch5</b>), <b>z990</b> (or\n<b>arch6</b>), <b>z9-109</b>, <b>z9-ec</b> (or\n<b>arch7</b>), <b>z10</b> (or <b>arch8</b>), <b>z196</b> (or\n<b>arch9</b>), <b>zEC12</b> (or <b>arch10</b>), <b>z13</b>\n(or <b>arch11</b>), <b>z14</b> (or <b>arch12</b>),\n<b>z15</b> (or <b>arch13</b>), or <b>z16</b> (or\n<b>arch14</b>).</p>\n\n<p style=\"margin-left:11%;\"><b>-mregnames <br>\n-mno-regnames</b></p>\n\n<p style=\"margin-left:17%;\">Allow or disallow symbolic\nnames for registers.</p>\n\n<p style=\"margin-left:11%;\"><b>-mwarn-areg-zero</b></p>\n\n<p style=\"margin-left:17%;\">Warn whenever the operand for a\nbase or index register has been specified but evaluates to\nzero.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for a\n<small>TMS320C6000</small> processor. <b><br>\n-march=</b><i>arch</i></p>\n\n<p style=\"margin-left:17%;\">Enable (only) instructions from\narchitecture <i>arch</i>. By default, all instructions are\npermitted.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The following\nvalues of <i>arch</i> are accepted: &quot;c62x&quot;,\n&quot;c64x&quot;, &quot;c64x+&quot;, &quot;c67x&quot;,\n&quot;c67x+&quot;, &quot;c674x&quot;.</p>\n\n<p style=\"margin-left:11%;\"><b>-mdsbt <br>\n-mno-dsbt</b></p>\n\n<p style=\"margin-left:17%;\">The <b>-mdsbt</b> option causes\nthe assembler to generate the &quot;Tag_ABI_DSBT&quot;\nattribute with a value of 1, indicating that the code is\nusing <small>DSBT</small> addressing. The <b>-mno-dsbt</b>\noption, the default, causes the tag to have a value of 0,\nindicating that the code does not use <small>DSBT</small>\naddressing. The linker will emit a warning if objects of\ndifferent type ( <small>DSBT</small> and non-DSBT) are\nlinked together.</p>\n\n<p style=\"margin-left:11%;\"><b>-mpid=no <br>\n-mpid=near <br>\n-mpid=far</b></p>\n\n<p style=\"margin-left:17%;\">The <b>-mpid=</b> option causes\nthe assembler to generate the &quot;Tag_ABI_PID&quot;\nattribute with a value indicating the form of data\naddressing used by the code. <b>-mpid=no</b>, the default,\nindicates position-dependent data addressing,\n<b>-mpid=near</b> indicates position-independent addressing\nwith <small>GOT</small> accesses using near\n<small>DP</small> addressing, and <b>-mpid=far</b> indicates\nposition-independent addressing with <small>GOT</small>\naccesses using far <small>DP</small> addressing. The linker\nwill emit a warning if objects built with different settings\nof this option are linked together.</p>\n\n<p style=\"margin-left:11%;\"><b>-mpic <br>\n-mno-pic</b></p>\n\n<p style=\"margin-left:17%;\">The <b>-mpic</b> option causes\nthe assembler to generate the &quot;Tag_ABI_PIC&quot;\nattribute with a value of 1, indicating that the code is\nusing position-independent code addressing, The\n&quot;-mno-pic&quot; option, the default, causes the tag to\nhave a value of 0, indicating position-dependent code\naddressing. The linker will emit a warning if objects of\ndifferent type (position-dependent and position-independent)\nare linked together.</p>\n\n<p style=\"margin-left:11%;\"><b>-mbig-endian <br>\n-mlittle-endian</b></p>\n\n<p style=\"margin-left:17%;\">Generate code for the specified\nendianness. The default is little-endian.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for a TILE-Gx\nprocessor. <b><br>\n-m32 | -m64</b></p>\n\n<p style=\"margin-left:17%;\">Select the word size, either 32\nbits or 64 bits.</p>\n\n<p style=\"margin-left:11%;\"><b>-EB | -EL</b></p>\n\n<p style=\"margin-left:17%;\">Select the endianness, either\nbig-endian (-EB) or little-endian (-EL).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noption is available when as is configured for a Visium\nprocessor. <b><br>\n-mtune=</b><i>arch</i></p>\n\n<p style=\"margin-left:17%;\">This option specifies the\ntarget architecture. If an attempt is made to assemble an\ninstruction that will not execute on the target\narchitecture, the assembler will issue an error message.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The following\nnames are recognized: &quot;mcm24&quot; &quot;mcm&quot;\n&quot;gr5&quot; &quot;gr6&quot;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for an Xtensa\nprocessor. <b><br>\n--text-section-literals | --no-text-section-literals</b></p>\n\n<p style=\"margin-left:17%;\">Control the treatment of\nliteral pools. The default is\n<b>--no-text-section-literals</b>, which places literals in\nseparate sections in the output file. This allows the\nliteral pool to be placed in a data <small>RAM/ROM.</small>\nWith <b>--text-section-literals</b>, the literals are\ninterspersed in the text section in order to keep them as\nclose as possible to their references. This may be necessary\nfor large assembly files, where the literals would otherwise\nbe out of range of the &quot;L32R&quot; instructions in the\ntext section. Literals are grouped into pools following\n&quot;.literal_position&quot; directives or preceding\n&quot;ENTRY&quot; instructions. These options only affect\nliterals referenced via PC-relative &quot;L32R&quot;\ninstructions; literals for absolute mode &quot;L32R&quot;\ninstructions are handled separately.</p>\n\n<p style=\"margin-left:11%;\"><b>--auto-litpools |\n--no-auto-litpools</b></p>\n\n<p style=\"margin-left:17%;\">Control the treatment of\nliteral pools. The default is <b>--no-auto-litpools</b>,\nwhich in the absence of <b>--text-section-literals</b>\nplaces literals in separate sections in the output file.\nThis allows the literal pool to be placed in a data\n<small>RAM/ROM.</small> With <b>--auto-litpools</b>, the\nliterals are interspersed in the text section in order to\nkeep them as close as possible to their references, explicit\n&quot;.literal_position&quot; directives are not required.\nThis may be necessary for very large functions, where single\nliteral pool at the beginning of the function may not be\nreachable by &quot;L32R&quot; instructions at the end. These\noptions only affect literals referenced via PC-relative\n&quot;L32R&quot; instructions; literals for absolute mode\n&quot;L32R&quot; instructions are handled separately. When\nused together with <b>--text-section-literals</b>,\n<b>--auto-litpools</b> takes precedence.</p>\n\n<p style=\"margin-left:11%;\"><b>--absolute-literals |\n--no-absolute-literals</b></p>\n\n<p style=\"margin-left:17%;\">Indicate to the assembler\nwhether &quot;L32R&quot; instructions use absolute or\nPC-relative addressing. If the processor includes the\nabsolute addressing option, the default is to use absolute\n&quot;L32R&quot; relocations. Otherwise, only the\nPC-relative &quot;L32R&quot; relocations can be used.</p>\n\n<p style=\"margin-left:11%;\"><b>--target-align |\n--no-target-align</b></p>\n\n<p style=\"margin-left:17%;\">Enable or disable automatic\nalignment to reduce branch penalties at some expense in code\nsize. This optimization is enabled by default. Note that the\nassembler will always align instructions like\n&quot;LOOP&quot; that have fixed alignment requirements.</p>\n\n<p style=\"margin-left:11%;\"><b>--longcalls |\n--no-longcalls</b></p>\n\n<p style=\"margin-left:17%;\">Enable or disable\ntransformation of call instructions to allow calls across a\ngreater range of addresses. This option should be used when\ncall targets can potentially be out of range. It may degrade\nboth code size and performance, but the linker can generally\noptimize away the unnecessary overhead when a call ends up\nwithin range. The default is <b>--no-longcalls</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>--transform |\n--no-transform</b></p>\n\n<p style=\"margin-left:17%;\">Enable or disable all assembler\ntransformations of Xtensa instructions, including both\nrelaxation and optimization. The default is\n<b>--transform</b>; <b>--no-transform</b> should only be\nused in the rare cases when the instructions must be exactly\nas specified in the assembly source. Using\n<b>--no-transform</b> causes out of range instruction\noperands to be errors.</p>\n\n<p style=\"margin-left:11%;\"><b>--rename-section</b>\n<i>oldname</i><b>=</b><i>newname</i></p>\n\n<p style=\"margin-left:17%;\">Rename the <i>oldname</i>\nsection to <i>newname</i>. This option can be used multiple\ntimes to rename multiple sections.</p>\n\n<p style=\"margin-left:11%;\"><b>--trampolines |\n--no-trampolines</b></p>\n\n<p style=\"margin-left:17%;\">Enable or disable\ntransformation of jump instructions to allow jumps across a\ngreater range of addresses. This option should be used when\njump targets can potentially be out of range. In the absence\nof such jumps this option does not affect code size or\nperformance. The default is <b>--trampolines</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>--abi-windowed |\n--abi-call0</b></p>\n\n<p style=\"margin-left:17%;\">Choose <small>ABI</small> tag\nwritten to the &quot;.xtensa.info&quot; section.\n<small>ABI</small> tag indicates <small>ABI</small> of the\nassembly code. A warning is issued by the linker on an\nattempt to link object files with inconsistent\n<small>ABI</small> tags. Default <small>ABI</small> is\nchosen by the Xtensa core configuration.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noptions are available when as is configured for an Z80\nprocessor.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">@chapter Z80\nDependent Features</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Command-line\nOptions <br>\n-march=</b> <i><small>CPU</small></i> <b>[-</b>\n<i><small>EXT</small></i> <b>...][+</b>\n<i><small>EXT</small></i> <b>...]</b></p>\n\n<p style=\"margin-left:17%;\">This option specifies the\ntarget processor. The assembler will issue an error message\nif an attempt is made to assemble an instruction which will\nnot execute on the target processor. The following processor\nnames are recognized: &quot;z80&quot;, &quot;z180&quot;,\n&quot;ez80&quot;, &quot;gbz80&quot;, &quot;z80n&quot;,\n&quot;r800&quot;. In addition to the basic instruction set,\nthe assembler can be told to accept some extention\nmnemonics. For example, &quot;-march=z180+sli+infc&quot;\nextends <i>z180</i> with <i><small>SLI</small></i>\ninstructions and <i><small>IN F,</small> (C)</i>. The\nfollowing extentions are currently supported:\n&quot;full&quot; (all known instructions), &quot;adl&quot; (\n<small>ADL CPU</small> mode by default, eZ80 only),\n&quot;sli&quot; (instruction known as\n<i><small>SLI</small></i> , <i><small>SLL</small></i> or\n<i><small>SL1</small></i> ), &quot;xyhl&quot; (instructions\nwith halves of index registers: <i><small>IXL</small></i> ,\n<i><small>IXH</small></i> , <i><small>IYL</small></i> ,\n<i><small>IYH</small></i> ), &quot;xdcb&quot; (instructions\nlike <i>RotOp (II+d),R</i> and <i>BitOp n,(II+d),R</i>),\n&quot;infc&quot; (instruction <i><small>IN F,</small>\n(C)</i> or <i><small>IN</small> (C)</i>), &quot;outc0&quot;\n(instruction <i><small>OUT</small> (C),0</i>). Note that\nrather than extending a basic instruction set, the extention\nmnemonics starting with &quot;-&quot; revoke the respective\nfunctionality: &quot;-march=z80-full+xyhl&quot; first\nremoves all default extentions and adds support for index\nregisters halves only.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If this option\nis not specified then &quot;-march=z80+xyhl+infc&quot; is\nassumed.</p>\n\n\n<p style=\"margin-left:11%;\"><b>-local-prefix=</b><i>prefix</i></p>\n\n<p style=\"margin-left:17%;\">Mark all labels with specified\nprefix as local. But such label can be marked global\nexplicitly in the code. This option do not change default\nlocal label prefix &quot;.L&quot;, it is just adds new\none.</p>\n\n<p style=\"margin-left:11%;\"><b>-colonless</b></p>\n\n<p style=\"margin-left:17%;\">Accept colonless labels. All\nsymbols at line begin are treated as labels.</p>\n\n<p style=\"margin-left:11%;\"><b>-sdcc</b></p>\n\n<p style=\"margin-left:17%;\">Accept assembler code produced\nby <small>SDCC.</small></p>\n\n<p style=\"margin-left:11%;\"><b>-fp-s=</b>\n<i><small>FORMAT</small></i></p>\n\n<p style=\"margin-left:17%;\">Single precision floating point\nnumbers format. Default: ieee754 (32 bit).</p>\n\n<p style=\"margin-left:11%;\"><b>-fp-d=</b>\n<i><small>FORMAT</small></i></p>\n\n<p style=\"margin-left:17%;\">Double precision floating point\nnumbers format. Default: ieee754 (64 bit).</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/gcc\">gcc(1)</a>,\n<a href=\"https://man.page/1/ld\">ld(1)</a>, and the Info entries for <i>binutils</i> and\n<i>ld</i>.</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright (c)\n1991-2022 Free Software Foundation, Inc.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Permission is\ngranted to copy, distribute and/or modify this document\nunder the terms of the <small>GNU</small> Free Documentation\nLicense, Version 1.3 or any later version published by the\nFree Software Foundation; with no Invariant Sections, with\nno Front-Cover Texts, and with no Back-Cover Texts. A copy\nof the license is included in the section entitled &quot;\n<small>GNU</small> Free Documentation License&quot;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#TARGET\">TARGET</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"]}