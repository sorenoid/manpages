{"name":"tput","description":"<b>tput</b>, <b>reset</b> - initialize a terminal or query terminfo database","body":"\n\n<h1 align=\"center\">tput</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>tput</b>,\n<b>reset</b> - initialize a terminal or query terminfo\ndatabase</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>tput</b>\n[<b>-T</b><i>type</i>] <i>capname</i> [<i>parameters</i>]\n<b><br>\ntput</b> [<b>-T</b><i>type</i>] [<b>-x</b>] <b>clear <br>\ntput</b> [<b>-T</b><i>type</i>] <b>init <br>\ntput</b> [<b>-T</b><i>type</i>] <b>reset <br>\ntput</b> [<b>-T</b><i>type</i>] <b>longname <br>\ntput -S &lt;&lt; <br>\ntput -V</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <b>tput</b>\nutility uses the <b>terminfo</b> database to make the values\nof terminal-dependent capabilities and information available\nto the shell (see <a href=\"https://man.page/1/sh\">sh(1)</a>), to initialize or reset the\nterminal, or return the long name of the requested terminal\ntype. The result depends upon the capability&rsquo;s\ntype:</p>\n\n<p style=\"margin-left:15%;\">string</p>\n\n<p style=\"margin-left:23%;\"><b>tput</b> writes the string\nto the standard output. No trailing newline is supplied.</p>\n\n<p style=\"margin-left:15%;\">integer</p>\n\n<p style=\"margin-left:23%;\"><b>tput</b> writes the decimal\nvalue to the standard output, with a trailing newline.</p>\n\n<p style=\"margin-left:15%;\">boolean</p>\n\n<p style=\"margin-left:23%;\"><b>tput</b> simply sets the\nexit code (<b>0</b> for TRUE if the terminal has the\ncapability, <b>1</b> for FALSE if it does not), and writes\nnothing to the standard output.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Before using a\nvalue returned on the standard output, the application\nshould test the exit code (e.g., <b>$?</b>, see\n<a href=\"https://man.page/1/sh\">sh(1)</a>) to be sure it is <b>0</b>. (See the <b>EXIT\nCODES</b> and <b>DIAGNOSTICS</b> sections.) For a complete\nlist of capabilities and the <i>capname</i> associated with\neach, see <a href=\"https://man.page/5/terminfo\">terminfo(5)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Options</b></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>-S</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>allows more than one capability per invocation of\n<b>tput</b>. The capabilities must be passed to <b>tput</b>\nfrom the standard input instead of from the command line\n(see example). Only one <i>capname</i> is allowed per line.\nThe <b>-S</b> option changes the meaning of the <b>0</b> and\n<b>1</b> boolean and string exit codes (see the EXIT CODES\nsection).</p> </td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Because some\ncapabilities may use <i>string</i> parameters rather than\n<i>numbers</i>, <b>tput</b> uses a table and the presence of\nparameters in its input to decide whether to use\n<b>tparm</b>(3X), and how to interpret the parameters.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>-T</b><i>type</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">indicates the <i>type</i> of\nterminal. Normally this option is unnecessary, because the\ndefault is taken from the environment variable <b>TERM</b>.\nIf <b>-T</b> is specified, then the shell variables\n<b>LINES</b> and <b>COLUMNS</b> will also be ignored.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>-V</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>reports the version of ncurses which was used in this\nprogram, and exits.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>-x</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>do not attempt to clear the terminal&rsquo;s scrollback\nbuffer using the extended &ldquo;E3&rdquo; capability.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Commands</b>\n<br>\nA few commands (<b>init</b>, <b>reset</b> and\n<b>longname</b>) are special; they are defined by the\n<b>tput</b> program. The others are the names of\n<i>capabilities</i> from the terminal database (see\n<a href=\"https://man.page/5/terminfo\">terminfo(5)</a> for a list). Although <b>init</b> and\n<b>reset</b> resemble capability names, <b>tput</b> uses\nseveral capabilities to perform these special functions.\n<i><br>\ncapname</i></p>\n\n<p style=\"margin-left:22%;\">indicates the capability from\nthe terminal database.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">If the\ncapability is a string that takes parameters, the arguments\nfollowing the capability will be used as parameters for the\nstring.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Most parameters\nare numbers. Only a few terminal capabilities require string\nparameters; <b>tput</b> uses a table to decide which to pass\nas strings. Normally <b>tput</b> uses <b>tparm</b>(3X) to\nperform the substitution. If no parameters are given for the\ncapability, <b>tput</b> writes the string without performing\nthe substitution.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"6%\">\n\n\n<p><b>init</b></p></td>\n<td width=\"5%\"></td>\n<td width=\"78%\">\n\n\n<p>If the terminal database is present and an entry for the\nuser&rsquo;s terminal exists (see <b>-T</b><i>type</i>,\nabove), the following will occur:</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%;\">(1)</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"29%\"></td>\n<td width=\"71%\">\n\n\n<p style=\"margin-top: 1em\">first, <b>tput</b> retrieves the\ncurrent terminal mode settings for your terminal. It does\nthis by successively testing</p></td></tr>\n</table>\n\n<p style=\"margin-left:29%;\">&bull;</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"29%\"></td>\n<td width=\"2%\"></td>\n<td width=\"4%\"></td>\n<td width=\"33%\">\n\n\n<p style=\"margin-top: 1em\">the standard error,</p></td>\n<td width=\"32%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"29%\"></td>\n<td width=\"2%\">\n\n\n<p>&bull;</p></td>\n<td width=\"4%\"></td>\n<td width=\"33%\">\n\n\n<p>standard output,</p></td>\n<td width=\"32%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"29%\"></td>\n<td width=\"2%\">\n\n\n<p>&bull;</p></td>\n<td width=\"4%\"></td>\n<td width=\"33%\">\n\n\n<p>standard input and</p></td>\n<td width=\"32%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"29%\"></td>\n<td width=\"2%\">\n\n\n<p>&bull;</p></td>\n<td width=\"4%\"></td>\n<td width=\"33%\">\n\n\n<p>ultimately &ldquo;/dev/tty&rdquo;</p></td>\n<td width=\"32%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:29%; margin-top: 1em\">to obtain\nterminal settings. Having retrieved these settings,\n<b>tput</b> remembers which file descriptor to use when\nupdating settings.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p style=\"margin-top: 1em\">(2)</p></td>\n<td width=\"3%\"></td>\n<td width=\"71%\">\n\n\n<p style=\"margin-top: 1em\">if the window size cannot be\nobtained from the operating system, but the terminal\ndescription (or environment, e.g., <b>LINES</b> and\n<b>COLUMNS</b> variables specify this), update the operating\nsystem&rsquo;s notion of the window size.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>(3)</p></td>\n<td width=\"3%\"></td>\n<td width=\"71%\">\n\n\n<p>the terminal modes will be updated:</p></td></tr>\n</table>\n\n<p style=\"margin-left:29%;\">&bull;</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"9%\"></td>\n<td width=\"4%\"></td>\n<td width=\"65%\">\n\n\n<p style=\"margin-top: 1em\">any delays (e.g., newline)\nspecified in the entry will be set in the tty driver,</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"9%\">\n\n\n<p>&bull;</p></td>\n<td width=\"4%\"></td>\n<td width=\"65%\">\n\n\n<p>tabs expansion will be turned on or off according to the\nspecification in the entry, and</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"9%\">\n\n\n<p>&bull;</p></td>\n<td width=\"4%\"></td>\n<td width=\"65%\">\n\n\n<p>if tabs are not expanded, standard tabs will be set\n(every 8 spaces).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"9%\">\n\n\n<p>(4)</p></td>\n<td width=\"4%\"></td>\n<td width=\"65%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:29%; margin-top: 1em\">if present, the\nterminal&rsquo;s initialization strings will be output as\ndetailed in the <a href=\"https://man.page/5/terminfo\">terminfo(5)</a> section on <i>Tabs and\nInitialization</i>,</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p style=\"margin-top: 1em\">(5)</p></td>\n<td width=\"3%\"></td>\n<td width=\"28%\">\n\n\n<p style=\"margin-top: 1em\">output is flushed.</p></td>\n<td width=\"43%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">If an entry\ndoes not contain the information needed for any of these\nactivities, that activity will silently be skipped.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p style=\"margin-top: 1em\"><b>reset</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"70%\">\n\n\n<p style=\"margin-top: 1em\">This is similar to <b>init</b>,\nwith two differences:</p></td>\n<td width=\"8%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:22%;\">(1)</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"29%\"></td>\n<td width=\"71%\">\n\n\n<p style=\"margin-top: 1em\">before any other initialization,\nthe terminal modes will be reset to a &ldquo;sane&rdquo;\nstate:</p> </td></tr>\n</table>\n\n<p style=\"margin-left:29%;\">&bull;</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"9%\"></td>\n<td width=\"4%\"></td>\n<td width=\"65%\">\n\n\n<p style=\"margin-top: 1em\">set cooked and echo modes,</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"9%\">\n\n\n<p>&bull;</p></td>\n<td width=\"4%\"></td>\n<td width=\"65%\">\n\n\n<p>turn off cbreak and raw modes,</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"9%\">\n\n\n<p>&bull;</p></td>\n<td width=\"4%\"></td>\n<td width=\"65%\">\n\n\n<p>turn on newline translation and</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"9%\">\n\n\n<p>&bull;</p></td>\n<td width=\"4%\"></td>\n<td width=\"65%\">\n\n\n<p>reset any unset special characters to their default\nvalues</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"9%\">\n\n\n<p>(2)</p></td>\n<td width=\"4%\"></td>\n<td width=\"65%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:29%; margin-top: 1em\">Instead of\nputting out <i>initialization</i> strings, the\nterminal&rsquo;s <i>reset</i> strings will be output if\npresent (<b>rs1</b>, <b>rs2</b>, <b>rs3</b>, <b>rf</b>). If\nthe <i>reset</i> strings are not present, but\n<i>initialization</i> strings are, the <i>initialization</i>\nstrings will be output.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Otherwise,\n<b>reset</b> acts identically to <b>init</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>longname</b></p>\n\n<p style=\"margin-left:22%;\">If the terminal database is\npresent and an entry for the user&rsquo;s terminal exists\n(see <b>-T</b><i>type</i> above), then the long name of the\nterminal will be put out. The long name is the last name in\nthe first line of the terminal&rsquo;s description in the\n<b>terminfo</b> database [see <a href=\"https://man.page/5/term\">term(5)</a>].</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Aliases <br>\ntput</b> handles the <b>clear</b>, <b>init</b> and\n<b>reset</b> commands specially: it allows for the\npossibility that it is invoked by a link with those\nnames.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If <b>tput</b>\nis invoked by a link named <b>reset</b>, this has the same\neffect as <b>tput reset</b>. The <a href=\"https://man.page/1/tset\">tset(1)</a> utility also\ntreats a link named <b>reset</b> specially.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Before ncurses\n6.1, the two utilities were different from each other:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p><b>tset</b> utility reset the terminal modes and special\ncharacters (not done with <b>tput</b>).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>On the other hand, <b>tset</b>&rsquo;s repertoire of\nterminal capabilities for resetting the terminal was more\nlimited, i.e., only <b>reset_1string</b>,\n<b>reset_2string</b> and <b>reset_file</b> in contrast to\nthe tab-stops and margins which are set by this utility.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The <b>reset</b> program is usually an alias for\n<b>tset</b>, because of this difference with resetting\nterminal modes and special characters.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">With the\nchanges made for ncurses 6.1, the <i>reset</i> feature of\nthe two programs is (mostly) the same. A few differences\nremain:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">The <b>tset</b> program waits\none second when resetting, in case it happens to be a\nhardware terminal.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The two programs write the terminal initialization\nstrings to different streams (i.e., the standard error for\n<b>tset</b> and the standard output for <b>tput</b>).</p></td></tr>\n</table>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>Note:</b>\nalthough these programs write to different streams,\nredirecting their output to a file will capture only part of\ntheir actions. The changes to the terminal modes are not\naffected by redirecting the output.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If <b>tput</b>\nis invoked by a link named <b>init</b>, this has the same\neffect as <b>tput init</b>. Again, you are less likely to\nuse that link because another program named <b>init</b> has\na more well-established use.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Terminal\nSize</b> <br>\nBesides the special commands (e.g., <b>clear</b>), tput\ntreats certain terminfo capabilities specially: <b>lines</b>\nand <b>cols</b>. tput calls <b>setupterm</b>(3X) to obtain\nthe terminal size:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">first, it gets the size from the\nterminal database (which generally is not provided for\nterminal emulators which do not have a fixed window\nsize)</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>then it asks the operating system for the\nterminal&rsquo;s size (which generally works, unless\nconnecting via a serial line which does not support\n<i>NAWS</i>: negotiations about window size).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>finally, it inspects the environment variables\n<b>LINES</b> and <b>COLUMNS</b> which may override the\nterminal size.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\n<b>-T</b> option is given tput ignores the environment\nvariables by calling <b>use_tioctl(TRUE)</b>, relying upon\nthe operating system (or finally, the terminal\ndatabase).</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>tput\ninit</b></p>\n\n<p style=\"margin-left:18%;\">Initialize the terminal\naccording to the type of terminal in the environmental\nvariable <b>TERM</b>. This command should be included in\neveryone&rsquo;s .profile after the environmental variable\n<b>TERM</b> has been exported, as illustrated on the\n<a href=\"https://man.page/5/profile\">profile(5)</a> manual page.</p>\n\n<p style=\"margin-left:11%;\"><b>tput -T5620 reset</b></p>\n\n<p style=\"margin-left:18%;\">Reset an AT&amp;T 5620\nterminal, overriding the type of terminal in the\nenvironmental variable <b>TERM</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>tput cup 0 0</b></p>\n\n<p style=\"margin-left:18%;\">Send the sequence to move the\ncursor to row <b>0</b>, column <b>0</b> (the upper left\ncorner of the screen, usually known as the\n&ldquo;home&rdquo; cursor position).</p>\n\n<p style=\"margin-left:11%;\"><b>tput clear</b></p>\n\n<p style=\"margin-left:18%;\">Echo the clear-screen sequence\nfor the current terminal.</p>\n\n<p style=\"margin-left:11%;\"><b>tput cols</b></p>\n\n<p style=\"margin-left:18%;\">Print the number of columns for\nthe current terminal.</p>\n\n<p style=\"margin-left:11%;\"><b>tput -T450 cols</b></p>\n\n<p style=\"margin-left:18%;\">Print the number of columns for\nthe 450 terminal.</p>\n\n<p style=\"margin-left:11%;\"><b>bold=&rsquo;tput smso&rsquo;\noffbold=&rsquo;tput rmso&rsquo;</b></p>\n\n<p style=\"margin-left:18%;\">Set the shell variables\n<b>bold</b>, to begin stand-out mode sequence, and\n<b>offbold</b>, to end standout mode sequence, for the\ncurrent terminal. This might be followed by a prompt:\n<b>echo &quot;${bold}Please type in your name:\n${offbold}\\c&quot;</b></p>\n\n<p style=\"margin-left:11%;\"><b>tput hc</b></p>\n\n<p style=\"margin-left:18%;\">Set exit code to indicate if\nthe current terminal is a hard copy terminal.</p>\n\n<p style=\"margin-left:11%;\"><b>tput cup 23 4</b></p>\n\n<p style=\"margin-left:18%;\">Send the sequence to move the\ncursor to row 23, column 4.</p>\n\n<p style=\"margin-left:11%;\"><b>tput cup</b></p>\n\n<p style=\"margin-left:18%;\">Send the terminfo string for\ncursor-movement, with no parameters substituted.</p>\n\n<p style=\"margin-left:11%;\"><b>tput longname</b></p>\n\n<p style=\"margin-left:18%;\">Print the long name from the\n<b>terminfo</b> database for the type of terminal specified\nin the environmental variable <b>TERM</b>.</p>\n\n<p style=\"margin-left:18%; margin-top: 1em\"><b>tput -S\n&lt;&lt;! <br>\n&gt; clear <br>\n&gt; cup 10 10 <br>\n&gt; bold <br>\n&gt; !</b></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"18%\"></td>\n<td width=\"82%\">\n\n\n<p>This example shows <b>tput</b> processing several\ncapabilities in one invocation. It clears the screen, moves\nthe cursor to position 10, 10 and turns on bold (extra\nbright) mode. The list is terminated by an exclamation mark\n(<b>!</b>) on a line by itself.</p></td></tr>\n</table>\n\n<h2>FILES\n<a name=\"FILES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>/etc/terminfo</b></p>\n\n<p style=\"margin-left:22%;\">compiled terminal description\ndatabase</p>\n\n<p style=\"margin-left:11%;\"><b>/usr/share/tabset/*</b></p>\n\n<p style=\"margin-left:22%;\">tab settings for some\nterminals, in a format appropriate to be output to the\nterminal (escape sequences that set margins and tabs); for\nmore information, see the <i>Tabs and Initialization</i>,\nsection of <a href=\"https://man.page/5/terminfo\">terminfo(5)</a></p>\n\n<h2>EXIT CODES\n<a name=\"EXIT CODES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\n<b>-S</b> option is used, <b>tput</b> checks for errors from\neach line, and if any errors are found, will set the exit\ncode to 4 plus the number of lines with errors. If no errors\nare found, the exit code is <b>0</b>. No indication of which\nline failed can be given so exit code <b>1</b> will never\nappear. Exit codes <b>2</b>, <b>3</b>, and <b>4</b> retain\ntheir usual interpretation. If the <b>-S</b> option is not\nused, the exit code depends on the type of\n<i>capname</i>:</p>\n\n<p style=\"margin-left:15%;\"><i>boolean</i></p>\n\n<p style=\"margin-left:26%;\">a value of <b>0</b> is set for\nTRUE and <b>1</b> for FALSE.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"10%\">\n\n\n<p><i>string</i></p></td>\n<td width=\"1%\"></td>\n<td width=\"74%\">\n\n\n<p>a value of <b>0</b> is set if the <i>capname</i> is\ndefined for this terminal <i>type</i> (the value of\n<i>capname</i> is returned on standard output); a value of\n<b>1</b> is set if <i>capname</i> is not defined for this\nterminal <i>type</i> (nothing is written to standard\noutput).</p> </td></tr>\n</table>\n\n<p style=\"margin-left:15%;\"><i>integer</i></p>\n\n<p style=\"margin-left:26%;\">a value of <b>0</b> is always\nset, whether or not <i>capname</i> is defined for this\nterminal <i>type</i>. To determine if <i>capname</i> is\ndefined for this terminal <i>type</i>, the user must test\nthe value written to standard output. A value of <b>-1</b>\nmeans that <i>capname</i> is not defined for this terminal\n<i>type</i>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"8%\">\n\n\n<p><i>other</i></p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p><b>reset</b> or <b>init</b> may fail to find their\nrespective files. In that case, the exit code is set to 4 +\n<b>errno</b>.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Any other exit\ncode indicates an error; see the DIAGNOSTICS section.</p>\n\n<h2>DIAGNOSTICS\n<a name=\"DIAGNOSTICS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>tput</b>\nprints the following error messages and sets the\ncorresponding exit codes.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-1325231.png\" alt=\"Image grohtml-1325231.png\"></p>\n\n<h2>HISTORY\n<a name=\"HISTORY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <b>tput</b>\ncommand was begun by Bill Joy in 1980. The initial version\nonly cleared the screen.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">AT&amp;T System\nV provided a different <b>tput</b> command:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">SVr2 provided a rudimentary\n<b>tput</b> which checked the parameter against each\npredefined capability and returned the corresponding value.\nThis version of <b>tput</b> did not use <b>tparm</b>(3X) for\nthe capabilities which are parameterized.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>SVr3 replaced that, a year later, by a more extensive\nprogram whose <b>init</b> and <b>reset</b> subcommands (more\nthan half the program) were incorporated from the\n<b>reset</b> feature of BSD <b>tset</b> written by Eric\nAllman.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>SVr4 added color initialization using the\n<i>orig_colors</i> and <i>orig_pairs</i> capabilities in the\n<b>init</b> subcommand.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Keith Bostic\nreplaced the BSD <b>tput</b> command in 1989 with a new\nimplementation based on the AT&amp;T System V program\n<b>tput</b>. Like the AT&amp;T program, Bostic&rsquo;s\nversion accepted some parameters named for <i>terminfo\ncapabilities</i> (<b>clear</b>, <b>init</b>, <b>longname</b>\nand <b>reset</b>). However (because he had only termcap\navailable), it accepted <i>termcap names</i> for other\ncapabilities. Also, Bostic&rsquo;s BSD <b>tput</b> did not\nmodify the terminal I/O modes as the earlier BSD <b>tset</b>\nhad done.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">At the same\ntime, Bostic added a shell script named &ldquo;clear&rdquo;,\nwhich used <b>tput</b> to clear the screen.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Both of these\nappeared in 4.4BSD, becoming the &ldquo;modern&rdquo; BSD\nimplementation of <b>tput</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This\nimplementation of <b>tput</b> began from a different source\nthan AT&amp;T or BSD: Ross Ridge&rsquo;s <i>mytinfo</i>\npackage, published on <i>comp.sources.unix</i> in December\n1992. Ridge&rsquo;s program made more sophisticated use of\nthe terminal capabilities than the BSD program. Eric Raymond\nused that <b>tput</b> program (and other parts of\n<i>mytinfo</i>) in ncurses in June 1995. Using the portions\ndealing with terminal capabilities almost without change,\nRaymond made improvements to the way the command-line\nparameters were handled.</p>\n\n<h2>PORTABILITY\n<a name=\"PORTABILITY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This\nimplementation of <b>tput</b> differs from AT&amp;T\n<b>tput</b> in two important areas:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\"><b>tput</b> <i>capname</i>\nwrites to the standard output. That need not be a regular\nterminal. However, the subcommands which manipulate terminal\nmodes may not use the standard output.</p></td></tr>\n</table>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The AT&amp;T\nimplementation&rsquo;s <b>init</b> and <b>reset</b> commands\nuse the BSD (4.1c) <b>tset</b> source, which manipulates\nterminal modes. It successively tries standard output,\nstandard error, standard input before falling back to\n&ldquo;/dev/tty&rdquo; and finally just assumes a 1200Bd\nterminal. When updating terminal modes, it ignores\nerrors.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Until changes\nmade after ncurses 6.0, <b>tput</b> did not modify terminal\nmodes. <b>tput</b> now uses a similar scheme, using\nfunctions shared with <b>tset</b> (and ultimately based on\nthe 4.4BSD <b>tset</b>). If it is not able to open a\nterminal, e.g., when running in <b>cron</b>, <b>tput</b>\nwill return an error.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">AT&amp;T <b>tput</b> guesses the\ntype of its <i>capname</i> operands by seeing if all of the\ncharacters are numeric, or not.</p></td></tr>\n</table>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Most\nimplementations which provide support for <i>capname</i>\noperands use the <i>tparm</i> function to expand parameters\nin it. That function expects a mixture of numeric and string\nparameters, requiring <b>tput</b> to know which type to\nuse.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This\nimplementation uses a table to determine the parameter types\nfor the standard <i>capname</i> operands, and an internal\nlibrary function to analyze nonstandard <i>capname</i>\noperands.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Besides\nproviding more reliable operation than AT&amp;T&rsquo;s\nutility, a portability problem is introduced by this\nanalysis: An OpenBSD developer adapted the internal library\nfunction from ncurses to port NetBSD&rsquo;s termcap-based\n<b>tput</b> to terminfo. That had been modified to interpret\nmultiple commands on a line. Portable applications should\nnot rely upon this feature; ncurses provides it to support\napplications written specifically for OpenBSD.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This\nimplementation (unlike others) can accept both\n<i>termcap</i> and <i>terminfo</i> names for the\n<i>capname</i> feature, if <i>termcap</i> support is\ncompiled in. However, the predefined <i>termcap</i> and\n<i>terminfo</i> names have two ambiguities in this case (and\nthe <i>terminfo</i> name is assumed):</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">The <i>termcap</i> name\n<b>dl</b> corresponds to the <i>terminfo</i> name <b>dl1</b>\n(delete one line).</p></td></tr>\n</table>\n\n<p style=\"margin-left:17%;\">The <i>terminfo</i> name\n<b>dl</b> corresponds to the <i>termcap</i> name <b>DL</b>\n(delete a given number of lines).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">The <i>termcap</i> name\n<b>ed</b> corresponds to the <i>terminfo</i> name\n<b>rmdc</b> (end delete mode).</p></td></tr>\n</table>\n\n<p style=\"margin-left:17%;\">The <i>terminfo</i> name\n<b>ed</b> corresponds to the <i>termcap</i> name <b>cd</b>\n(clear to end of screen).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>longname</b> and <b>-S</b> options, and the\nparameter-substitution features used in the <b>cup</b>\nexample, were not supported in BSD curses before 4.3reno\n(1989) or in AT&amp;T/USL curses before SVr4 (1988).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">IEEE Std\n1003.1/The Open Group Base Specifications Issue 7\n(POSIX.1-2008) documents only the operands for <b>clear</b>,\n<b>init</b> and <b>reset</b>. There are a few interesting\nobservations to make regarding that:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">In this implementation,\n<b>clear</b> is part of the <i>capname</i> support. The\nothers (<b>init</b> and <b>longname</b>) do not correspond\nto terminal capabilities.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Other implementations of <b>tput</b> on SVr4-based\nsystems such as Solaris, IRIX64 and HPUX as well as others\nsuch as AIX and Tru64 provide support for <i>capname</i>\noperands.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>A few platforms such as FreeBSD recognize termcap names\nrather than terminfo capability names in their respective\n<b>tput</b> commands. Since 2010, NetBSD&rsquo;s <b>tput</b>\nuses terminfo names. Before that, it (like FreeBSD)\nrecognized termcap names.</p></td></tr>\n</table>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Beginning in\n2021, FreeBSD uses the ncurses <b>tput</b>, configured for\nboth terminfo (tested first) and termcap (as a\nfallback).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Because\n(apparently) <i>all</i> of the certified Unix systems\nsupport the full set of capability names, the reasoning for\ndocumenting only a few may not be apparent.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">X/Open Curses Issue 7 documents\n<b>tput</b> differently, with <i>capname</i> and the other\nfeatures used in this implementation.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>That is, there are two standards for <b>tput</b>: POSIX\n(a subset) and X/Open Curses (the full implementation).\nPOSIX documents a subset to avoid the complication of\nincluding X/Open Curses and the terminal capabilities\ndatabase.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>While it is certainly possible to write a <b>tput</b>\nprogram without using curses, none of the systems which have\na curses implementation provide a <b>tput</b> utility which\ndoes not provide the <i>capname</i> feature.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">X/Open Curses\nIssue 7 (2009) is the first version to document utilities.\nHowever that part of X/Open Curses does not follow existing\npractice (i.e., Unix features documented in SVID 3):</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">It assigns exit code 4 to\n&ldquo;invalid operand&rdquo;, which may be the same as\n<i>unknown capability</i>. For instance, the source code for\nSolaris&rsquo; xcurses uses the term &ldquo;invalid&rdquo;\nin this case.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>It assigns exit code 255 to a numeric variable that is\nnot specified in the terminfo database. That likely is a\ndocumentation error, confusing the <b>-1</b> written to the\nstandard output for an absent or cancelled numeric value\nversus an (unsigned) exit code.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The various\nUnix systems (AIX, HPUX, Solaris) use the same exit-codes as\nncurses.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">NetBSD curses\ndocuments different exit codes which do not correspond to\neither ncurses or X/Open.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/clear\">clear(1)</a>,\n<a href=\"https://man.page/1/stty\">stty(1)</a>, <a href=\"https://man.page/1/tabs\">tabs(1)</a>, <a href=\"https://man.page/1/tset\">tset(1)</a>,\n<b>termcap</b>(3NCURSES), <a href=\"https://man.page/5/terminfo\">terminfo(5)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This describes\n<b>ncurses</b> version 6.3 (patch 20211021).</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#FILES\">FILES</a>","<a href=\"#EXIT CODES\">EXIT CODES</a>","<a href=\"#DIAGNOSTICS\">DIAGNOSTICS</a>","<a href=\"#HISTORY\">HISTORY</a>","<a href=\"#PORTABILITY\">PORTABILITY</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"]}