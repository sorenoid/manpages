{"name":"git-config","description":"git-config - Get and set repository or global options","body":"\n\n<h1 align=\"center\">GIT-CONFIG</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">git-config -\nGet and set repository or global options</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>git\nconfig</i> [&lt;file-option&gt;] [--type=&lt;type&gt;]\n[--fixed-value] [--show-origin] [--show-scope] [-z|--null]\nname [value [value-pattern]] <i><br>\ngit config</i> [&lt;file-option&gt;] [--type=&lt;type&gt;]\n--add name value <i><br>\ngit config</i> [&lt;file-option&gt;] [--type=&lt;type&gt;]\n[--fixed-value] --replace-all name value [value-pattern]\n<i><br>\ngit config</i> [&lt;file-option&gt;] [--type=&lt;type&gt;]\n[--show-origin] [--show-scope] [-z|--null] [--fixed-value]\n--get name [value-pattern] <i><br>\ngit config</i> [&lt;file-option&gt;] [--type=&lt;type&gt;]\n[--show-origin] [--show-scope] [-z|--null] [--fixed-value]\n--get-all name [value-pattern] <i><br>\ngit config</i> [&lt;file-option&gt;] [--type=&lt;type&gt;]\n[--show-origin] [--show-scope] [-z|--null] [--fixed-value]\n[--name-only] --get-regexp name_regex [value-pattern]\n<i><br>\ngit config</i> [&lt;file-option&gt;] [--type=&lt;type&gt;]\n[-z|--null] --get-urlmatch name URL <i><br>\ngit config</i> [&lt;file-option&gt;] [--fixed-value] --unset\nname [value-pattern] <i><br>\ngit config</i> [&lt;file-option&gt;] [--fixed-value]\n--unset-all name [value-pattern] <i><br>\ngit config</i> [&lt;file-option&gt;] --rename-section\nold_name new_name <i><br>\ngit config</i> [&lt;file-option&gt;] --remove-section name\n<i><br>\ngit config</i> [&lt;file-option&gt;] [--show-origin]\n[--show-scope] [-z|--null] [--name-only] -l | --list <i><br>\ngit config</i> [&lt;file-option&gt;] --get-color name\n[default] <i><br>\ngit config</i> [&lt;file-option&gt;] --get-colorbool name\n[stdout-is-tty] <i><br>\ngit config</i> [&lt;file-option&gt;] -e | --edit</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">You can\nquery/set/replace/unset options with this command. The name\nis actually the section and the key separated by a dot, and\nthe value will be escaped.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Multiple lines\ncan be added to an option by using the <b>--add</b> option.\nIf you want to update or unset an option which can occur on\nmultiple lines, a <b>value-pattern</b> (which is an extended\nregular expression, unless the <b>--fixed-value</b> option\nis given) needs to be given. Only the existing values that\nmatch the pattern are updated or unset. If you want to\nhandle the lines that do <b>not</b> match the pattern, just\nprepend a single exclamation mark in front (see also the\nsection called &ldquo;EXAMPLES&rdquo;), but note that this\nonly works when the <b>--fixed-value</b> option is not in\nuse.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>--type=&lt;type&gt;</b> option instructs <i>git\nconfig</i> to ensure that incoming and outgoing values are\ncanonicalize-able under the given &lt;type&gt;. If no\n<b>--type=&lt;type&gt;</b> is given, no canonicalization\nwill be performed. Callers may unset an existing\n<b>--type</b> specifier with <b>--no-type</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When reading,\nthe values are read from the system, global and repository\nlocal configuration files by default, and options\n<b>--system</b>, <b>--global</b>, <b>--local</b>,\n<b>--worktree</b> and <b>--file &lt;filename&gt;</b> can be\nused to tell the command to read from only that location\n(see the section called &ldquo;FILES&rdquo;).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When writing,\nthe new value is written to the repository local\nconfiguration file by default, and options <b>--system</b>,\n<b>--global</b>, <b>--worktree</b>, <b>--file\n&lt;filename&gt;</b> can be used to tell the command to\nwrite to that location (you can say <b>--local</b> but that\nis the default).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This command\nwill fail with non-zero status upon error. Some exit codes\nare:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; The\nsection or key is invalid (ret=1),</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; no\nsection or name was provided (ret=2),</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; the\nconfig file is invalid (ret=3),</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; the\nconfig file cannot be written (ret=4),</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; you try\nto unset an option which does not exist (ret=5),</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; you try\nto unset/set an option for which multiple lines match\n(ret=5), or</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; you try\nto use an invalid regexp (ret=6).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success, the\ncommand returns the exit code 0.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A list of all\navailable configuration variables can be obtained using the\n<b>git help --config</b> command.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--replace-all</p>\n\n<p style=\"margin-left:17%;\">Default behavior is to replace\nat most one line. This replaces all lines matching the key\n(and optionally the <b>value-pattern</b>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--add</p>\n\n<p style=\"margin-left:17%;\">Adds a new line to the option\nwithout altering any existing values. This is the same as\nproviding <i>^$</i> as the <b>value-pattern</b> in\n<b>--replace-all</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--get</p>\n\n<p style=\"margin-left:17%;\">Get the value for a given key\n(optionally filtered by a regex matching the value). Returns\nerror code 1 if the key was not found and the last value if\nmultiple key values were found.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--get-all</p>\n\n<p style=\"margin-left:17%;\">Like get, but returns all\nvalues for a multi-valued key.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--get-regexp</p>\n\n<p style=\"margin-left:17%;\">Like --get-all, but interprets\nthe name as a regular expression and writes out the key\nnames. Regular expression matching is currently\ncase-sensitive and done against a canonicalized version of\nthe key in which section and variable names are lowercased,\nbut subsection names are not.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--get-urlmatch\nname URL</p>\n\n<p style=\"margin-left:17%;\">When given a two-part name\nsection.key, the value for section.&lt;url&gt;.key whose\n&lt;url&gt; part matches the best to the given URL is\nreturned (if no such key exists, the value for section.key\nis used as a fallback). When given just the section as name,\ndo so for all the keys in the section and list them. Returns\nerror code 1 if no value is found.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--global</p>\n\n<p style=\"margin-left:17%;\">For writing options: write to\nglobal <b>~/.gitconfig</b> file rather than the repository\n<b>.git/config</b>, write to\n<b>$XDG_CONFIG_HOME/git/config</b> file if this file exists\nand the <b>~/.gitconfig</b> file doesn&rsquo;t.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For reading\noptions: read only from global <b>~/.gitconfig</b> and from\n<b>$XDG_CONFIG_HOME/git/config</b> rather than from all\navailable files.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">See also the\nsection called &ldquo;FILES&rdquo;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--system</p>\n\n<p style=\"margin-left:17%;\">For writing options: write to\nsystem-wide <b>$(prefix)/etc/gitconfig</b> rather than the\nrepository <b>.git/config</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For reading\noptions: read only from system-wide\n<b>$(prefix)/etc/gitconfig</b> rather than from all\navailable files.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">See also the\nsection called &ldquo;FILES&rdquo;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--local</p>\n\n<p style=\"margin-left:17%;\">For writing options: write to\nthe repository <b>.git/config</b> file. This is the default\nbehavior.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For reading\noptions: read only from the repository <b>.git/config</b>\nrather than from all available files.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">See also the\nsection called &ldquo;FILES&rdquo;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--worktree</p>\n\n<p style=\"margin-left:17%;\">Similar to <b>--local</b>\nexcept that <b>.git/config.worktree</b> is read from or\nwritten to if <b>extensions.worktreeConfig</b> is present.\nIf not it&rsquo;s the same as <b>--local</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-f config-file,\n--file config-file</p>\n\n<p style=\"margin-left:17%;\">For writing options: write to\nthe specified file rather than the repository\n<b>.git/config</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For reading\noptions: read only from the specified file rather than from\nall available files.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">See also the\nsection called &ldquo;FILES&rdquo;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--blob blob</p>\n\n<p style=\"margin-left:17%;\">Similar to <b>--file</b> but\nuse the given blob instead of a file. E.g. you can use\n<i>master:.gitmodules</i> to read values from the file\n<i>.gitmodules</i> in the master branch. See\n&quot;SPECIFYING REVISIONS&quot; section in\n<a href=\"https://man.page/7/gitrevisions\">gitrevisions(7)</a> for a more complete list of ways to\nspell blob names.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--remove-section</p>\n\n<p style=\"margin-left:17%;\">Remove the given section from\nthe configuration file.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--rename-section</p>\n\n<p style=\"margin-left:17%;\">Rename the given section to a\nnew name.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--unset</p>\n\n<p style=\"margin-left:17%;\">Remove the line matching the\nkey from config file.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--unset-all</p>\n\n<p style=\"margin-left:17%;\">Remove all lines matching the\nkey from config file.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-l, --list</p>\n\n<p style=\"margin-left:17%;\">List all variables set in\nconfig file, along with their values.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--fixed-value</p>\n\n<p style=\"margin-left:17%;\">When used with the\n<b>value-pattern</b> argument, treat <b>value-pattern</b> as\nan exact string instead of a regular expression. This will\nrestrict the name/value pairs that are matched to only those\nwhere the value is exactly equal to the\n<b>value-pattern</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--type\n&lt;type&gt;</p>\n\n<p style=\"margin-left:17%;\"><i>git config</i> will ensure\nthat any input or output is valid under the given type\nconstraint(s), and will canonicalize outgoing values in\n<b>&lt;type&gt;</b>'s canonical form.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Valid\n<b>&lt;type&gt;</b>'s include:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<i>bool</i>: canonicalize values as either &quot;true&quot;\nor &quot;false&quot;.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<i>int</i>: canonicalize values as simple decimal numbers.\nAn optional suffix of <i>k</i>, <i>m</i>, or <i>g</i> will\ncause the value to be multiplied by 1024, 1048576, or\n1073741824 upon input.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<i>bool-or-int</i>: canonicalize according to either\n<i>bool</i> or <i>int</i>, as described above.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<i>path</i>: canonicalize by adding a leading <b>~</b> to\nthe value of <b>$HOME</b> and <b>~user</b> to the home\ndirectory for the specified user. This specifier has no\neffect when setting the value (but you can use <b>git config\nsection.variable ~/</b> from the command line to let your\nshell do the expansion.)</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<i>expiry-date</i>: canonicalize by converting from a fixed\nor relative date-string to a timestamp. This specifier has\nno effect when setting the value.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<i>color</i>: When getting a value, canonicalize by\nconverting to an ANSI color escape sequence. When setting a\nvalue, a sanity-check is performed to ensure that the given\nvalue is canonicalize-able as an ANSI color, but it is\nwritten as-is.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--bool, --int,\n--bool-or-int, --path, --expiry-date</p>\n\n<p style=\"margin-left:17%;\">Historical options for\nselecting a type specifier. Prefer instead <b>--type</b>\n(see above).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--no-type</p>\n\n<p style=\"margin-left:17%;\">Un-sets the previously set type\nspecifier (if one was previously set). This option requests\nthat <i>git config</i> not canonicalize the retrieved\nvariable. <b>--no-type</b> has no effect without\n<b>--type=&lt;type&gt;</b> or <b>--&lt;type&gt;</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-z, --null</p>\n\n<p style=\"margin-left:17%;\">For all options that output\nvalues and/or keys, always end values with the null\ncharacter (instead of a newline). Use newline instead as a\ndelimiter between key and value. This allows for secure\nparsing of the output without getting confused e.g. by\nvalues that contain line breaks.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--name-only</p>\n\n<p style=\"margin-left:17%;\">Output only the names of config\nvariables for <b>--list</b> or <b>--get-regexp</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--show-origin</p>\n\n<p style=\"margin-left:17%;\">Augment the output of all\nqueried config options with the origin type (file, standard\ninput, blob, command line) and the actual origin (config\nfile path, ref, or blob id if applicable).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--show-scope</p>\n\n<p style=\"margin-left:17%;\">Similar to <b>--show-origin</b>\nin that it augments the output of all queried config options\nwith the scope of that value (local, global, system,\ncommand).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--get-colorbool\nname [stdout-is-tty]</p>\n\n<p style=\"margin-left:17%;\">Find the color setting for\n<b>name</b> (e.g. <b>color.diff</b>) and output\n&quot;true&quot; or &quot;false&quot;. <b>stdout-is-tty</b>\nshould be either &quot;true&quot; or &quot;false&quot;, and\nis taken into account when configuration says\n&quot;auto&quot;. If <b>stdout-is-tty</b> is missing, then\nchecks the standard output of the command itself, and exits\nwith status 0 if color is to be used, or exits with status 1\notherwise. When the color setting for <b>name</b> is\nundefined, the command uses <b>color.ui</b> as fallback.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--get-color\nname [default]</p>\n\n<p style=\"margin-left:17%;\">Find the color configured for\n<b>name</b> (e.g. <b>color.diff.new</b>) and output it as\nthe ANSI color escape sequence to the standard output. The\noptional <b>default</b> parameter is used instead, if there\nis no color configured for <b>name</b>.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>--type=color\n[--default=&lt;default&gt;]</b> is preferred over\n<b>--get-color</b> (but note that <b>--get-color</b> will\nomit the trailing newline printed by\n<b>--type=color</b>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-e, --edit</p>\n\n<p style=\"margin-left:17%;\">Opens an editor to modify the\nspecified config file; either <b>--system</b>,\n<b>--global</b>, or repository (default).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--[no-]includes</p>\n\n<p style=\"margin-left:17%;\">Respect <b>include.*</b>\ndirectives in config files when looking up values. Defaults\nto <b>off</b> when a specific file is given (e.g., using\n<b>--file</b>, <b>--global</b>, etc) and <b>on</b> when\nsearching all config files.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--default\n&lt;value&gt;</p>\n\n<p style=\"margin-left:17%;\">When using <b>--get</b>, and\nthe requested variable is not found, behave as if\n&lt;value&gt; were the value assigned to the that\nvariable.</p>\n\n<h2>CONFIGURATION\n<a name=\"CONFIGURATION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>pager.config</b>\nis only respected when listing configuration, i.e., when\nusing <b>--list</b> or any of the <b>--get-*</b> which may\nreturn multiple results. The default is to use a pager.</p>\n\n<h2>FILES\n<a name=\"FILES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">If not set\nexplicitly with <b>--file</b>, there are four files where\n<i>git config</i> will search for configuration options:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$(prefix)/etc/gitconfig</p>\n\n<p style=\"margin-left:17%;\">System-wide configuration\nfile.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$XDG_CONFIG_HOME/git/config</p>\n\n<p style=\"margin-left:17%;\">Second user-specific\nconfiguration file. If $XDG_CONFIG_HOME is not set or empty,\n<b>$HOME/.config/git/config</b> will be used. Any\nsingle-valued variable set in this file will be overwritten\nby whatever is in <b>~/.gitconfig</b>. It is a good idea not\nto create this file if you sometimes use older versions of\nGit, as support for this file was added fairly recently.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">~/.gitconfig</p>\n\n<p style=\"margin-left:17%;\">User-specific configuration\nfile. Also called &quot;global&quot; configuration file.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$GIT_DIR/config</p>\n\n<p style=\"margin-left:17%;\">Repository specific\nconfiguration file.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$GIT_DIR/config.worktree</p>\n\n<p style=\"margin-left:17%;\">This is optional and is only\nsearched when <b>extensions.worktreeConfig</b> is present in\n$GIT_DIR/config.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If no further\noptions are given, all reading options will read all of\nthese files that are available. If the global or the\nsystem-wide configuration file are not available they will\nbe ignored. If the repository configuration file is not\navailable or readable, <i>git config</i> will exit with a\nnon-zero error code. However, in neither case will an error\nmessage be issued.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The files are\nread in the order given above, with last value found taking\nprecedence over values read earlier. When multiple values\nare taken then all values of a key from all files will be\nused.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">You may\noverride individual configuration parameters when running\nany git command by using the <b>-c</b> option. See\n<a href=\"https://man.page/1/git\">git(1)</a> for details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All writing\noptions will per default write to the repository specific\nconfiguration file. Note that this also affects options like\n<b>--replace-all</b> and <b>--unset</b>. <i>git config</i>\n<b>will only ever change one file at a time</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">You can\noverride these rules using the <b>--global</b>,\n<b>--system</b>, <b>--local</b>, <b>--worktree</b>, and\n<b>--file</b> command-line options; see the section called\n&ldquo;OPTIONS&rdquo; above.</p>\n\n<h2>ENVIRONMENT\n<a name=\"ENVIRONMENT\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">GIT_CONFIG_GLOBAL,\nGIT_CONFIG_SYSTEM</p>\n\n<p style=\"margin-left:17%;\">Take the configuration from the\ngiven files instead from global or system-level\nconfiguration. See <a href=\"https://man.page/1/git\">git(1)</a> for details.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">GIT_CONFIG_NOSYSTEM</p>\n\n<p style=\"margin-left:17%;\">Whether to skip reading\nsettings from the system-wide $(prefix)/etc/gitconfig file.\nSee <a href=\"https://man.page/1/git\">git(1)</a> for details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See also the\nsection called &ldquo;FILES&rdquo;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">GIT_CONFIG_COUNT,\nGIT_CONFIG_KEY_&lt;n&gt;, GIT_CONFIG_VALUE_&lt;n&gt;</p>\n\n<p style=\"margin-left:17%;\">If GIT_CONFIG_COUNT is set to a\npositive number, all environment pairs\nGIT_CONFIG_KEY_&lt;n&gt; and GIT_CONFIG_VALUE_&lt;n&gt; up\nto that number will be added to the process&rsquo;s runtime\nconfiguration. The config pairs are zero-indexed. Any\nmissing key or value is treated as an error. An empty\nGIT_CONFIG_COUNT is treated the same as GIT_CONFIG_COUNT=0,\nnamely no pairs are processed. These environment variables\nwill override values in configuration files, but will be\noverridden by any explicit options passed via <b>git\n-c</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This is useful\nfor cases where you want to spawn multiple git commands with\na common configuration but cannot depend on a configuration\nfile, for example when writing scripts.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">GIT_CONFIG</p>\n\n<p style=\"margin-left:17%;\">If no <b>--file</b> option is\nprovided to <b>git config</b>, use the file given by\n<b>GIT_CONFIG</b> as if it were provided via <b>--file</b>.\nThis variable has no effect on other Git commands, and is\nmostly for historical compatibility; there is generally no\nreason to use it instead of the <b>--file</b> option.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Given a\n.git/config like this:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"># <br>\n# This is the config file, and <br>\n# a '#' or ';' character indicates <br>\n# a comment <br>\n#</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">; core\nvariables <br>\n[core] <br>\n; Don't trust file modes <br>\nfilemode = false</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">; Our diff\nalgorithm <br>\n[diff] <br>\nexternal = /usr/local/bin/diff-wrapper <br>\nrenames = true</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">; Proxy\nsettings <br>\n[core] <br>\ngitproxy=proxy-command for kernel.org <br>\ngitproxy=default-proxy ; for all the rest</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">; HTTP <br>\n[http] <br>\nsslVerify <br>\n[http &quot;https://weak.example.com&quot;] <br>\nsslVerify = false <br>\ncookieFile = /tmp/cookie.txt</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">you can set the\nfilemode to true with</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">% git config\ncore.filemode true</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nhypothetical proxy command entries actually have a postfix\nto discern what URL they apply to. Here is how to change the\nentry for kernel.org to &quot;ssh&quot;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">% git config\ncore.gitproxy '&quot;ssh&quot; for kernel.org' 'for\nkernel.org$'</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This makes sure\nthat only the key/value pair for kernel.org is replaced.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To delete the\nentry for renames, do</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">% git config\n--unset diff.renames</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If you want to\ndelete an entry for a multivar (like core.gitproxy above),\nyou have to provide a regex matching the value of exactly\none line.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To query the\nvalue for a given key, do</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">% git config\n--get core.filemode</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">or</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">% git config\ncore.filemode</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">or, to query a\nmultivar:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">% git config\n--get core.gitproxy &quot;for kernel.org$&quot;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If you want to\nknow all the values for a multivar, do:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">% git config\n--get-all core.gitproxy</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If you like to\nlive dangerously, you can replace <b>all</b> core.gitproxy\nby a new one with</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">% git config\n--replace-all core.gitproxy ssh</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">However, if you\nreally only want to replace the line for the default proxy,\ni.e. the one without a &quot;for ...&quot; postfix, do\nsomething like this:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">% git config\ncore.gitproxy ssh '! for '</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To actually\nmatch only values with an exclamation mark, you have to</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">% git config\nsection.key value '[!]'</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To add a new\nproxy, without altering any of the existing ones, use</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">% git config\n--add core.gitproxy '&quot;proxy-command&quot; for\nexample.com'</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">An example to\nuse customized color from the configuration in your\nscript:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">#!/bin/sh <br>\nWS=$(git config --get-color color.diff.whitespace &quot;blue\nreverse&quot;) <br>\nRESET=$(git config --get-color &quot;&quot;\n&quot;reset&quot;) <br>\necho &quot;${WS}your whitespace color or blue\nreverse${RESET}&quot;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For URLs in\n<b>https://weak.example.com</b>, <b>http.sslVerify</b> is\nset to false, while it is set to <b>true</b> for all\nothers:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">% git config\n--type=bool --get-urlmatch http.sslverify\nhttps://good.example.com <br>\ntrue <br>\n% git config --type=bool --get-urlmatch http.sslverify\nhttps://weak.example.com <br>\nfalse <br>\n% git config --get-urlmatch http https://weak.example.com\n<br>\nhttp.cookieFile /tmp/cookie.txt <br>\nhttp.sslverify false</p>\n\n<h2>CONFIGURATION FILE\n<a name=\"CONFIGURATION FILE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The Git\nconfiguration file contains a number of variables that\naffect the Git commands' behavior. The files\n<b>.git/config</b> and optionally <b>config.worktree</b>\n(see the &quot;CONFIGURATION FILE&quot; section of\n<a href=\"https://man.page/1/git-worktree\">git-worktree(1)</a>) in each repository are used to store\nthe configuration for that repository, and\n<b>$HOME/.gitconfig</b> is used to store a per-user\nconfiguration as fallback values for the <b>.git/config</b>\nfile. The file <b>/etc/gitconfig</b> can be used to store a\nsystem-wide default configuration.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nconfiguration variables are used by both the Git plumbing\nand the porcelains. The variables are divided into sections,\nwherein the fully qualified variable name of the variable\nitself is the last dot-separated segment and the section\nname is everything before the last dot. The variable names\nare case-insensitive, allow only alphanumeric characters and\n<b>-</b>, and must start with an alphabetic character. Some\nvariables may appear multiple times; we say then that the\nvariable is multivalued.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Syntax</b>\n<br>\nThe syntax is fairly flexible and permissive; whitespaces\nare mostly ignored. The <i>#</i> and <i>;</i> characters\nbegin comments to the end of line, blank lines are\nignored.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The file\nconsists of sections and variables. A section begins with\nthe name of the section in square brackets and continues\nuntil the next section begins. Section names are\ncase-insensitive. Only alphanumeric characters, <b>-</b> and\n<b>.</b> are allowed in section names. Each variable must\nbelong to some section, which means that there must be a\nsection header before the first setting of a variable.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Sections can be\nfurther divided into subsections. To begin a subsection put\nits name in double quotes, separated by space from the\nsection name, in the section header, like in the example\nbelow:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">[section\n&quot;subsection&quot;]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Subsection\nnames are case sensitive and can contain any characters\nexcept newline and the null byte. Doublequote <b>&quot;</b>\nand backslash can be included by escaping them as\n<b>\\&quot;</b> and <b>\\\\</b>, respectively. Backslashes\npreceding other characters are dropped when reading; for\nexample, <b>\\t</b> is read as <b>t</b> and <b>\\0</b> is read\nas <b>0</b>. Section headers cannot span multiple lines.\nVariables may belong directly to a section or to a given\nsubsection. You can have <b>[section]</b> if you have\n<b>[section &quot;subsection&quot;]</b>, but you don&rsquo;t\nneed to.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">There is also a\ndeprecated <b>[section.subsection]</b> syntax. With this\nsyntax, the subsection name is converted to lower-case and\nis also compared case sensitively. These subsection names\nfollow the same restrictions as section names.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All the other\nlines (and the remainder of the line after the section\nheader) are recognized as setting variables, in the form\n<i>name = value</i> (or just <i>name</i>, which is a\nshort-hand to say that the variable is the boolean\n&quot;true&quot;). The variable names are case-insensitive,\nallow only alphanumeric characters and <b>-</b>, and must\nstart with an alphabetic character.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A line that\ndefines a value can be continued to the next line by ending\nit with a <b>\\</b>; the backslash and the end-of-line are\nstripped. Leading whitespaces after <i>name =</i>, the\nremainder of the line after the first comment character\n<i>#</i> or <i>;</i>, and trailing whitespaces of the line\nare discarded unless they are enclosed in double quotes.\nInternal whitespaces within the value are retained\nverbatim.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Inside double\nquotes, double quote <b>&quot;</b> and backslash <b>\\</b>\ncharacters must be escaped: use <b>\\&quot;</b> for\n<b>&quot;</b> and <b>\\\\</b> for <b>\\</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nescape sequences (beside <b>\\&quot;</b> and <b>\\\\</b>) are\nrecognized: <b>\\n</b> for newline character (NL), <b>\\t</b>\nfor horizontal tabulation (HT, TAB) and <b>\\b</b> for\nbackspace (BS). Other char escape sequences (including octal\nescape sequences) are invalid.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Includes</b>\n<br>\nThe <b>include</b> and <b>includeIf</b> sections allow you\nto include config directives from another source. These\nsections behave identically to each other with the exception\nthat <b>includeIf</b> sections may be ignored if their\ncondition does not evaluate to true; see &quot;Conditional\nincludes&quot; below.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">You can include\na config file from another by setting the special\n<b>include.path</b> (or <b>includeIf.*.path</b>) variable to\nthe name of the file to be included. The variable takes a\npathname as its value, and is subject to tilde expansion.\nThese variables can be given multiple times.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The contents of\nthe included file are inserted immediately, as if they had\nbeen found at the location of the include directive. If the\nvalue of the variable is a relative path, the path is\nconsidered to be relative to the configuration file in which\nthe include directive was found. See below for examples.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Conditional\nincludes</b> <br>\nYou can include a config file from another conditionally by\nsetting a <b>includeIf.&lt;condition&gt;.path</b> variable\nto the name of the file to be included.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The condition\nstarts with a keyword followed by a colon and some data\nwhose format and meaning depends on the keyword. Supported\nkeywords are:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>gitdir</b></p>\n\n<p style=\"margin-left:17%;\">The data that follows the\nkeyword <b>gitdir:</b> is used as a glob pattern. If the\nlocation of the .git directory matches the pattern, the\ninclude condition is met.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The .git\nlocation may be auto-discovered, or come from\n<b>$GIT_DIR</b> environment variable. If the repository is\nauto discovered via a .git file (e.g. from submodules, or a\nlinked worktree), the .git location would be the final\nlocation where the .git directory is, not where the .git\nfile is.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The pattern can\ncontain standard globbing wildcards and two additional ones,\n<b>**/</b> and <b>/**</b>, that can match multiple path\ncomponents. Please refer to <a href=\"https://man.page/5/gitignore\">gitignore(5)</a> for details.\nFor convenience:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull; If the\npattern starts with <b>~/</b>, <b>~</b> will be substituted\nwith the content of the environment variable\n<b>HOME</b>.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull; If the\npattern starts with <b>./</b>, it is replaced with the\ndirectory containing the current config file.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull; If the\npattern does not start with either <b>~/</b>, <b>./</b> or\n<b>/</b>, <b>**/</b> will be automatically prepended. For\nexample, the pattern <b>foo/bar</b> becomes\n<b>**/foo/bar</b> and would match\n<b>/any/path/to/foo/bar</b>.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull; If the\npattern ends with <b>/</b>, <b>**</b> will be automatically\nadded. For example, the pattern <b>foo/</b> becomes\n<b>foo/**</b>. In other words, it matches &quot;foo&quot;\nand everything inside, recursively.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>gitdir/i</b></p>\n\n<p style=\"margin-left:17%;\">This is the same as\n<b>gitdir</b> except that matching is done\ncase-insensitively (e.g. on case-insensitive file\nsystems)</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>onbranch</b></p>\n\n<p style=\"margin-left:17%;\">The data that follows the\nkeyword <b>onbranch:</b> is taken to be a pattern with\nstandard globbing wildcards and two additional ones,\n<b>**/</b> and <b>/**</b>, that can match multiple path\ncomponents. If we are in a worktree where the name of the\nbranch that is currently checked out matches the pattern,\nthe include condition is met.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If the pattern\nends with <b>/</b>, <b>**</b> will be automatically added.\nFor example, the pattern <b>foo/</b> becomes <b>foo/**</b>.\nIn other words, it matches all branches that begin with\n<b>foo/</b>. This is useful if your branches are organized\nhierarchically and you would like to apply a configuration\nto all the branches in that hierarchy.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A few more\nnotes on matching via <b>gitdir</b> and <b>gitdir/i</b>:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Symlinks\nin <b>$GIT_DIR</b> are not resolved before matching.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Both the\nsymlink &amp; realpath versions of paths will be matched\noutside of <b>$GIT_DIR</b>. E.g. if ~/git is a symlink to\n/mnt/storage/git, both <b>gitdir:~/git</b> and\n<b>gitdir:/mnt/storage/git</b> will match.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This was not\nthe case in the initial release of this feature in v2.13.0,\nwhich only matched the realpath version. Configuration that\nwants to be compatible with the initial release of this\nfeature needs to either specify only the realpath version,\nor both versions.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Note\nthat &quot;../&quot; is not special and will match\nliterally, which is unlikely what you want.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Example</b></p>\n\n<p style=\"margin-left:17%;\"># Core variables <br>\n[core] <br>\n; Don't trust file modes <br>\nfilemode = false</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"># Our diff\nalgorithm <br>\n[diff] <br>\nexternal = /usr/local/bin/diff-wrapper <br>\nrenames = true</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">[branch\n&quot;devel&quot;] <br>\nremote = origin <br>\nmerge = refs/heads/devel</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"># Proxy\nsettings <br>\n[core] <br>\ngitProxy=&quot;ssh&quot; for &quot;kernel.org&quot; <br>\ngitProxy=default-proxy ; for the rest</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">[include] <br>\npath = /path/to/foo.inc ; include by absolute path <br>\npath = foo.inc ; find &quot;foo.inc&quot; relative to the\ncurrent file <br>\npath = ~/foo.inc ; find &quot;foo.inc&quot; in your\n&rsquo;$HOME&rsquo; directory</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">; include if\n$GIT_DIR is /path/to/foo/.git <br>\n[includeIf &quot;gitdir:/path/to/foo/.git&quot;] <br>\npath = /path/to/foo.inc</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">; include for\nall repositories inside /path/to/group <br>\n[includeIf &quot;gitdir:/path/to/group/&quot;] <br>\npath = /path/to/foo.inc</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">; include for\nall repositories inside $HOME/to/group <br>\n[includeIf &quot;gitdir:~/to/group/&quot;] <br>\npath = /path/to/foo.inc</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">; relative\npaths are always relative to the including <br>\n; file (if the condition is true); their location is not\n<br>\n; affected by the condition <br>\n[includeIf &quot;gitdir:/path/to/group/&quot;] <br>\npath = foo.inc</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">; include only\nif we are in a worktree where foo-branch is <br>\n; currently checked out <br>\n[includeIf &quot;onbranch:foo-branch&quot;] <br>\npath = foo.inc</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Values</b>\n<br>\nValues of many variables are treated as a simple string, but\nthere are variables that take values of specific types and\nthere are rules as to how to spell them.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">boolean</p>\n\n<p style=\"margin-left:17%;\">When a variable is said to take\na boolean value, many synonyms are accepted for <i>true</i>\nand <i>false</i>; these are all case-insensitive.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">true</p>\n\n<p style=\"margin-left:23%;\">Boolean true literals are\n<b>yes</b>, <b>on</b>, <b>true</b>, and <b>1</b>. Also, a\nvariable defined without <b>= &lt;value&gt;</b> is taken as\ntrue.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">false</p>\n\n<p style=\"margin-left:23%;\">Boolean false literals are\n<b>no</b>, <b>off</b>, <b>false</b>, <b>0</b> and the empty\nstring.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">When converting\na value to its canonical form using the <b>--type=bool</b>\ntype specifier, <i>git config</i> will ensure that the\noutput is &quot;true&quot; or &quot;false&quot; (spelled in\nlowercase).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">integer</p>\n\n<p style=\"margin-left:17%;\">The value for many variables\nthat specify various sizes can be suffixed with <b>k</b>,\n<b>M</b>,... to mean &quot;scale the number by 1024&quot;,\n&quot;by 1024x1024&quot;, etc.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">color</p>\n\n<p style=\"margin-left:17%;\">The value for a variable that\ntakes a color is a list of colors (at most two, one for\nforeground and one for background) and attributes (as many\nas you want), separated by spaces.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The basic\ncolors accepted are <b>normal</b>, <b>black</b>, <b>red</b>,\n<b>green</b>, <b>yellow</b>, <b>blue</b>, <b>magenta</b>,\n<b>cyan</b> and <b>white</b>. The first color given is the\nforeground; the second is the background. All the basic\ncolors except <b>normal</b> have a bright variant that can\nbe specified by prefixing the color with <b>bright</b>, like\n<b>brightred</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Colors may also\nbe given as numbers between 0 and 255; these use ANSI\n256-color mode (but note that not all terminals may support\nthis). If your terminal supports it, you may also specify\n24-bit RGB values as hex, like <b>#ff0ab3</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The accepted\nattributes are <b>bold</b>, <b>dim</b>, <b>ul</b>,\n<b>blink</b>, <b>reverse</b>, <b>italic</b>, and\n<b>strike</b> (for crossed-out or &quot;strikethrough&quot;\nletters). The position of any attributes with respect to the\ncolors (before, after, or in between), doesn&rsquo;t matter.\nSpecific attributes may be turned off by prefixing them with\n<b>no</b> or <b>no-</b> (e.g., <b>noreverse</b>,\n<b>no-ul</b>, etc).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">An empty color\nstring produces no color effect at all. This can be used to\navoid coloring specific elements without disabling color\nentirely.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For git&rsquo;s\npre-defined color slots, the attributes are meant to be\nreset at the beginning of each item in the colored output.\nSo setting <b>color.decorate.branch</b> to <b>black</b> will\npaint that branch name in a plain <b>black</b>, even if the\nprevious thing on the same output line (e.g. opening\nparenthesis before the list of branch names in <b>log\n--decorate</b> output) is set to be painted with <b>bold</b>\nor some other attribute. However, custom log formats may do\nmore complicated and layered coloring, and the negated forms\nmay be useful there.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">pathname</p>\n\n<p style=\"margin-left:17%;\">A variable that takes a\npathname value can be given a string that begins with\n&quot;<b>~/</b>&quot; or &quot;<b>~user/</b>&quot;, and the\nusual tilde expansion happens to such a string: <b>~/</b> is\nexpanded to the value of <b>$HOME</b>, and <b>~user/</b> to\nthe specified user&rsquo;s home directory.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If a path\nstarts with <b>%(prefix)/</b>, the remainder is interpreted\nas a path relative to Git&rsquo;s &quot;runtime\nprefix&quot;, i.e. relative to the location where Git itself\nwas installed. For example, <b>%(prefix)/bin/</b> refers to\nthe directory in which the Git executable itself lives. If\nGit was compiled without runtime prefix support, the\ncompiled-in prefix will be substituted instead. In the\nunlikely event that a literal path needs to be specified\nthat should <i>not</i> be expanded, it needs to be prefixed\nby <b>./</b>, like so: <b>./%(prefix)/bin</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Variables</b>\n<br>\nNote that this list is non-comprehensive and not necessarily\ncomplete. For command-specific variables, you will find a\nmore detailed description in the appropriate manual\npage.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Other\ngit-related tools may and do use their own variables. When\ninventing new variables for use in your own tool, make sure\ntheir names do not conflict with those that are used by Git\nitself and other popular tools, and describe them in your\ndocumentation.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">advice.*</p>\n\n<p style=\"margin-left:17%;\">These variables control various\noptional help messages designed to aid new users. All\n<i>advice.*</i> variables default to <i>true</i>, and you\ncan tell Git that you do not need help by setting these to\n<i>false</i>:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">fetchShowForcedUpdates</p>\n\n<p style=\"margin-left:23%;\">Advice shown when\n<a href=\"https://man.page/1/git-fetch\">git-fetch(1)</a> takes a long time to calculate forced\nupdates after ref updates, or to warn that the check is\ndisabled.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">pushUpdateRejected</p>\n\n<p style=\"margin-left:23%;\">Set this variable to\n<i>false</i> if you want to disable <i>pushNonFFCurrent</i>,\n<i>pushNonFFMatching</i>, <i>pushAlreadyExists</i>,\n<i>pushFetchFirst</i>, <i>pushNeedsForce</i>, and\n<i>pushRefNeedsUpdate</i> simultaneously.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">pushNonFFCurrent</p>\n\n<p style=\"margin-left:23%;\">Advice shown when\n<a href=\"https://man.page/1/git-push\">git-push(1)</a> fails due to a non-fast-forward update to\nthe current branch.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">pushNonFFMatching</p>\n\n<p style=\"margin-left:23%;\">Advice shown when you ran\n<a href=\"https://man.page/1/git-push\">git-push(1)</a> and pushed <i>matching refs</i>\nexplicitly (i.e. you used <i>:</i>, or specified a refspec\nthat isn&rsquo;t your current branch) and it resulted in a\nnon-fast-forward error.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">pushAlreadyExists</p>\n\n<p style=\"margin-left:23%;\">Shown when <a href=\"https://man.page/1/git-push\">git-push(1)</a>\nrejects an update that does not qualify for fast-forwarding\n(e.g., a tag.)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">pushFetchFirst</p>\n\n<p style=\"margin-left:23%;\">Shown when <a href=\"https://man.page/1/git-push\">git-push(1)</a>\nrejects an update that tries to overwrite a remote ref that\npoints at an object we do not have.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">pushNeedsForce</p>\n\n<p style=\"margin-left:23%;\">Shown when <a href=\"https://man.page/1/git-push\">git-push(1)</a>\nrejects an update that tries to overwrite a remote ref that\npoints at an object that is not a commit-ish, or make the\nremote ref point at an object that is not a commit-ish.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">pushUnqualifiedRefname</p>\n\n<p style=\"margin-left:23%;\">Shown when <a href=\"https://man.page/1/git-push\">git-push(1)</a>\ngives up trying to guess based on the source and destination\nrefs what remote ref namespace the source belongs in, but\nwhere we can still suggest that the user push to either\nrefs/heads/* or refs/tags/* based on the type of the source\nobject.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">pushRefNeedsUpdate</p>\n\n<p style=\"margin-left:23%;\">Shown when <a href=\"https://man.page/1/git-push\">git-push(1)</a>\nrejects a forced update of a branch when its remote-tracking\nref has updates that we do not have locally.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">skippedCherryPicks</p>\n\n<p style=\"margin-left:23%;\">Shown when <a href=\"https://man.page/1/git-rebase\">git-rebase(1)</a>\nskips a commit that has already been cherry-picked onto the\nupstream branch.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">statusAheadBehind</p>\n\n<p style=\"margin-left:23%;\">Shown when <a href=\"https://man.page/1/git-status\">git-status(1)</a>\ncomputes the ahead/behind counts for a local ref compared to\nits remote tracking ref, and that calculation takes longer\nthan expected. Will not appear if <b>status.aheadBehind</b>\nis false or the option <b>--no-ahead-behind</b> is\ngiven.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">statusHints</p>\n\n<p style=\"margin-left:23%;\">Show directions on how to\nproceed from the current state in the output of\n<a href=\"https://man.page/1/git-status\">git-status(1)</a>, in the template shown when writing\ncommit messages in <a href=\"https://man.page/1/git-commit\">git-commit(1)</a>, and in the help\nmessage shown by <a href=\"https://man.page/1/git-switch\">git-switch(1)</a> or\n<a href=\"https://man.page/1/git-checkout\">git-checkout(1)</a> when switching branch.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">statusUoption</p>\n\n<p style=\"margin-left:23%;\">Advise to consider using the\n<b>-u</b> option to <a href=\"https://man.page/1/git-status\">git-status(1)</a> when the command\ntakes more than 2 seconds to enumerate untracked files.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">commitBeforeMerge</p>\n\n<p style=\"margin-left:23%;\">Advice shown when\n<a href=\"https://man.page/1/git-merge\">git-merge(1)</a> refuses to merge to avoid overwriting\nlocal changes.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">resetQuiet</p>\n\n<p style=\"margin-left:23%;\">Advice to consider using the\n<b>--quiet</b> option to <a href=\"https://man.page/1/git-reset\">git-reset(1)</a> when the\ncommand takes more than 2 seconds to enumerate unstaged\nchanges after reset.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">resolveConflict</p>\n\n<p style=\"margin-left:23%;\">Advice shown by various\ncommands when conflicts prevent the operation from being\nperformed.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">sequencerInUse</p>\n\n<p style=\"margin-left:23%;\">Advice shown when a sequencer\ncommand is already in progress.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">implicitIdentity</p>\n\n<p style=\"margin-left:23%;\">Advice on how to set your\nidentity configuration when your information is guessed from\nthe system username and domain name.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">detachedHead</p>\n\n<p style=\"margin-left:23%;\">Advice shown when you used\n<a href=\"https://man.page/1/git-switch\">git-switch(1)</a> or <a href=\"https://man.page/1/git-checkout\">git-checkout(1)</a> to move to\nthe detach HEAD state, to instruct how to create a local\nbranch after the fact.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">checkoutAmbiguousRemoteBranchName</p>\n\n<p style=\"margin-left:23%;\">Advice shown when the argument\nto <a href=\"https://man.page/1/git-checkout\">git-checkout(1)</a> and <a href=\"https://man.page/1/git-switch\">git-switch(1)</a>\nambiguously resolves to a remote tracking branch on more\nthan one remote in situations where an unambiguous argument\nwould have otherwise caused a remote-tracking branch to be\nchecked out. See the <b>checkout.defaultRemote</b>\nconfiguration variable for how to set a given remote to used\nby default in some situations where this advice would be\nprinted.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">amWorkDir</p>\n\n<p style=\"margin-left:23%;\">Advice that shows the location\nof the patch file when <a href=\"https://man.page/1/git-am\">git-am(1)</a> fails to apply\nit.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">rmHints</p>\n\n<p style=\"margin-left:23%;\">In case of failure in the\noutput of <a href=\"https://man.page/1/git-rm\">git-rm(1)</a>, show directions on how to\nproceed from the current state.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">addEmbeddedRepo</p>\n\n<p style=\"margin-left:23%;\">Advice on what to do when\nyou&rsquo;ve accidentally added one git repo inside of\nanother.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">ignoredHook</p>\n\n<p style=\"margin-left:23%;\">Advice shown if a hook is\nignored because the hook is not set as executable.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">waitingForEditor</p>\n\n<p style=\"margin-left:23%;\">Print a message to the terminal\nwhenever Git is waiting for editor input from the user.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">nestedTag</p>\n\n<p style=\"margin-left:23%;\">Advice shown if a user attempts\nto recursively tag a tag object.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">submoduleAlternateErrorStrategyDie</p>\n\n<p style=\"margin-left:23%;\">Advice shown when a\nsubmodule.alternateErrorStrategy option configured to\n&quot;die&quot; causes a fatal error.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">addIgnoredFile</p>\n\n<p style=\"margin-left:23%;\">Advice shown if a user attempts\nto add an ignored file to the index.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">addEmptyPathspec</p>\n\n<p style=\"margin-left:23%;\">Advice shown if a user runs the\nadd command without providing the pathspec parameter.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">updateSparsePath</p>\n\n<p style=\"margin-left:23%;\">Advice shown when either\n<a href=\"https://man.page/1/git-add\">git-add(1)</a> or <a href=\"https://man.page/1/git-rm\">git-rm(1)</a> is asked to update\nindex entries outside the current sparse checkout.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.fileMode</p>\n\n<p style=\"margin-left:17%;\">Tells Git if the executable bit\nof files in the working tree is to be honored.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Some\nfilesystems lose the executable bit when a file that is\nmarked as executable is checked out, or checks out a\nnon-executable file with executable bit on.\n<a href=\"https://man.page/1/git-clone\">git-clone(1)</a> or <a href=\"https://man.page/1/git-init\">git-init(1)</a> probe the\nfilesystem to see if it handles the executable bit correctly\nand this variable is automatically set as necessary.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">A repository,\nhowever, may be on a filesystem that handles the filemode\ncorrectly, and this variable is set to <i>true</i> when\ncreated, but later may be made accessible from another\nenvironment that loses the filemode (e.g. exporting ext4 via\nCIFS mount, visiting a Cygwin created repository with Git\nfor Windows or Eclipse). In such a case it may be necessary\nto set this variable to <i>false</i>. See\n<a href=\"https://man.page/1/git-update-index\">git-update-index(1)</a>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The default is\ntrue (when core.filemode is not specified in the config\nfile).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.hideDotFiles</p>\n\n<p style=\"margin-left:17%;\">(Windows-only) If true, mark\nnewly-created directories and files whose name starts with a\ndot as hidden. If <i>dotGitOnly</i>, only the <b>.git/</b>\ndirectory is hidden, but no other files starting with a dot.\nThe default mode is <i>dotGitOnly</i>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.ignoreCase</p>\n\n<p style=\"margin-left:17%;\">Internal variable which enables\nvarious workarounds to enable Git to work better on\nfilesystems that are not case sensitive, like APFS, HFS+,\nFAT, NTFS, etc. For example, if a directory listing finds\n&quot;makefile&quot; when Git expects &quot;Makefile&quot;,\nGit will assume it is really the same file, and continue to\nremember it as &quot;Makefile&quot;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The default is\nfalse, except <a href=\"https://man.page/1/git-clone\">git-clone(1)</a> or <a href=\"https://man.page/1/git-init\">git-init(1)</a> will\nprobe and set core.ignoreCase true if appropriate when the\nrepository is created.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Git relies on\nthe proper configuration of this variable for your operating\nand file system. Modifying this value may result in\nunexpected behavior.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.precomposeUnicode</p>\n\n<p style=\"margin-left:17%;\">This option is only used by Mac\nOS implementation of Git. When core.precomposeUnicode=true,\nGit reverts the unicode decomposition of filenames done by\nMac OS. This is useful when sharing a repository between Mac\nOS and Linux or Windows. (Git for Windows 1.7.10 or higher\nis needed, or Git under cygwin 1.7). When false, file names\nare handled fully transparent by Git, which is backward\ncompatible with older versions of Git.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.protectHFS</p>\n\n<p style=\"margin-left:17%;\">If set to true, do not allow\ncheckout of paths that would be considered equivalent to\n<b>.git</b> on an HFS+ filesystem. Defaults to <b>true</b>\non Mac OS, and <b>false</b> elsewhere.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.protectNTFS</p>\n\n<p style=\"margin-left:17%;\">If set to true, do not allow\ncheckout of paths that would cause problems with the NTFS\nfilesystem, e.g. conflict with 8.3 &quot;short&quot; names.\nDefaults to <b>true</b> on Windows, and <b>false</b>\nelsewhere.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.fsmonitor</p>\n\n<p style=\"margin-left:17%;\">If set, the value of this\nvariable is used as a command which will identify all files\nthat may have changed since the requested date/time. This\ninformation is used to speed up git by avoiding unnecessary\nprocessing of files that have not changed. See the\n&quot;fsmonitor-watchman&quot; section of\n<a href=\"https://man.page/5/githooks\">githooks(5)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.fsmonitorHookVersion</p>\n\n<p style=\"margin-left:17%;\">Sets the version of hook that\nis to be used when calling fsmonitor. There are currently\nversions 1 and 2. When this is not set, version 2 will be\ntried first and if it fails then version 1 will be tried.\nVersion 1 uses a timestamp as input to determine which files\nhave changes since that time but some monitors like watchman\nhave race conditions when used with a timestamp. Version 2\nuses an opaque string so that the monitor can return\nsomething that can be used to determine what files have\nchanged without race conditions.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.trustctime</p>\n\n<p style=\"margin-left:17%;\">If false, the ctime differences\nbetween the index and the working tree are ignored; useful\nwhen the inode change time is regularly modified by\nsomething outside Git (file system crawlers and some backup\nsystems). See <a href=\"https://man.page/1/git-update-index\">git-update-index(1)</a>. True by\ndefault.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.splitIndex</p>\n\n<p style=\"margin-left:17%;\">If true, the split-index\nfeature of the index will be used. See\n<a href=\"https://man.page/1/git-update-index\">git-update-index(1)</a>. False by default.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.untrackedCache</p>\n\n<p style=\"margin-left:17%;\">Determines what to do about the\nuntracked cache feature of the index. It will be kept, if\nthis variable is unset or set to <b>keep</b>. It will\nautomatically be added if set to <b>true</b>. And it will\nautomatically be removed, if set to <b>false</b>. Before\nsetting it to <b>true</b>, you should check that mtime is\nworking properly on your system. See\n<a href=\"https://man.page/1/git-update-index\">git-update-index(1)</a>. <b>keep</b> by default, unless\n<b>feature.manyFiles</b> is enabled which sets this setting\nto <b>true</b> by default.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.checkStat</p>\n\n<p style=\"margin-left:17%;\">When missing or is set to\n<b>default</b>, many fields in the stat structure are\nchecked to detect if a file has been modified since Git\nlooked at it. When this configuration variable is set to\n<b>minimal</b>, sub-second part of mtime and ctime, the uid\nand gid of the owner of the file, the inode number (and the\ndevice number, if Git was compiled to use it), are excluded\nfrom the check among these fields, leaving only the\nwhole-second part of mtime (and ctime, if\n<b>core.trustCtime</b> is set) and the filesize to be\nchecked.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">There are\nimplementations of Git that do not leave usable values in\nsome fields (e.g. JGit); by excluding these fields from the\ncomparison, the <b>minimal</b> mode may help\ninteroperability when the same repository is used by these\nother systems at the same time.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.quotePath</p>\n\n<p style=\"margin-left:17%;\">Commands that output paths\n(e.g. <i>ls-files</i>, <i>diff</i>), will quote\n&quot;unusual&quot; characters in the pathname by enclosing\nthe pathname in double-quotes and escaping those characters\nwith backslashes in the same way C escapes control\ncharacters (e.g. <b>\\t</b> for TAB, <b>\\n</b> for LF,\n<b>\\\\</b> for backslash) or bytes with values larger than\n0x80 (e.g. octal <b>\\302\\265</b> for &quot;micro&quot; in\nUTF-8). If this variable is set to false, bytes higher than\n0x80 are not considered &quot;unusual&quot; any more.\nDouble-quotes, backslash and control characters are always\nescaped regardless of the setting of this variable. A simple\nspace character is not considered &quot;unusual&quot;. Many\ncommands can output pathnames completely verbatim using the\n<b>-z</b> option. The default value is true.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.eol</p>\n\n<p style=\"margin-left:17%;\">Sets the line ending type to\nuse in the working directory for files that are marked as\ntext (either by having the <b>text</b> attribute set, or by\nhaving <b>text=auto</b> and Git auto-detecting the contents\nas text). Alternatives are <i>lf</i>, <i>crlf</i> and\n<i>native</i>, which uses the platform&rsquo;s native line\nending. The default value is <b>native</b>. See\n<a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a> for more information on end-of-line\nconversion. Note that this value is ignored if\n<b>core.autocrlf</b> is set to <b>true</b> or\n<b>input</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.safecrlf</p>\n\n<p style=\"margin-left:17%;\">If true, makes Git check if\nconverting <b>CRLF</b> is reversible when end-of-line\nconversion is active. Git will verify if a command modifies\na file in the work tree either directly or indirectly. For\nexample, committing a file followed by checking out the same\nfile should yield the original file in the work tree. If\nthis is not the case for the current setting of\n<b>core.autocrlf</b>, Git will reject the file. The variable\ncan be set to &quot;warn&quot;, in which case Git will only\nwarn about an irreversible conversion but continue the\noperation.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">CRLF conversion\nbears a slight chance of corrupting data. When it is\nenabled, Git will convert CRLF to LF during commit and LF to\nCRLF during checkout. A file that contains a mixture of LF\nand CRLF before the commit cannot be recreated by Git. For\ntext files this is the right thing to do: it corrects line\nendings such that we have only LF line endings in the\nrepository. But for binary files that are accidentally\nclassified as text the conversion can corrupt data.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If you\nrecognize such corruption early you can easily fix it by\nsetting the conversion type explicitly in .gitattributes.\nRight after committing you still have the original file in\nyour work tree and this file is not yet corrupted. You can\nexplicitly tell Git that this file is binary and Git will\nhandle the file appropriately.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Unfortunately,\nthe desired effect of cleaning up text files with mixed line\nendings and the undesired effect of corrupting binary files\ncannot be distinguished. In both cases CRLFs are removed in\nan irreversible way. For text files this is the right thing\nto do because CRLFs are line endings, while for binary files\nconverting CRLFs corrupts data.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note, this\nsafety check does not mean that a checkout will generate a\nfile identical to the original file for a different setting\nof <b>core.eol</b> and <b>core.autocrlf</b>, but only for\nthe current one. For example, a text file with <b>LF</b>\nwould be accepted with <b>core.eol=lf</b> and could later be\nchecked out with <b>core.eol=crlf</b>, in which case the\nresulting file would contain <b>CRLF</b>, although the\noriginal file contained <b>LF</b>. However, in both work\ntrees the line endings would be consistent, that is either\nall <b>LF</b> or all <b>CRLF</b>, but never mixed. A file\nwith mixed line endings would be reported by the\n<b>core.safecrlf</b> mechanism.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.autocrlf</p>\n\n<p style=\"margin-left:17%;\">Setting this variable to\n&quot;true&quot; is the same as setting the <b>text</b>\nattribute to &quot;auto&quot; on all files and core.eol to\n&quot;crlf&quot;. Set to true if you want to have\n<b>CRLF</b> line endings in your working directory and the\nrepository has LF line endings. This variable can be set to\n<i>input</i>, in which case no output conversion is\nperformed.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.checkRoundtripEncoding</p>\n\n<p style=\"margin-left:17%;\">A comma and/or whitespace\nseparated list of encodings that Git performs UTF-8 round\ntrip checks on if they are used in an\n<b>working-tree-encoding</b> attribute (see\n<a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a>). The default value is\n<b>SHIFT-JIS</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.symlinks</p>\n\n<p style=\"margin-left:17%;\">If false, symbolic links are\nchecked out as small plain files that contain the link text.\n<a href=\"https://man.page/1/git-update-index\">git-update-index(1)</a> and <a href=\"https://man.page/1/git-add\">git-add(1)</a> will not\nchange the recorded type to regular file. Useful on\nfilesystems like FAT that do not support symbolic links.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The default is\ntrue, except <a href=\"https://man.page/1/git-clone\">git-clone(1)</a> or <a href=\"https://man.page/1/git-init\">git-init(1)</a> will\nprobe and set core.symlinks false if appropriate when the\nrepository is created.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.gitProxy</p>\n\n<p style=\"margin-left:17%;\">A &quot;proxy command&quot; to\nexecute (as <i>command host port</i>) instead of\nestablishing direct connection to the remote server when\nusing the Git protocol for fetching. If the variable value\nis in the &quot;COMMAND for DOMAIN&quot; format, the command\nis applied only on hostnames ending with the specified\ndomain string. This variable may be set multiple times and\nis matched in the given order; the first match wins.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Can be\noverridden by the <b>GIT_PROXY_COMMAND</b> environment\nvariable (which always applies universally, without the\nspecial &quot;for&quot; handling).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The special\nstring <b>none</b> can be used as the proxy command to\nspecify that no proxy be used for a given domain pattern.\nThis is useful for excluding servers inside a firewall from\nproxy use, while defaulting to a common proxy for external\ndomains.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.sshCommand</p>\n\n<p style=\"margin-left:17%;\">If this variable is set, <b>git\nfetch</b> and <b>git push</b> will use the specified command\ninstead of <b>ssh</b> when they need to connect to a remote\nsystem. The command is in the same form as the\n<b>GIT_SSH_COMMAND</b> environment variable and is\noverridden when the environment variable is set.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.ignoreStat</p>\n\n<p style=\"margin-left:17%;\">If true, Git will avoid using\nlstat() calls to detect if files have changed by setting the\n&quot;assume-unchanged&quot; bit for those tracked files\nwhich it has updated identically in both the index and\nworking tree.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When files are\nmodified outside of Git, the user will need to stage the\nmodified files explicitly (e.g. see <i>Examples</i> section\nin <a href=\"https://man.page/1/git-update-index\">git-update-index(1)</a>). Git will not normally detect\nchanges to those files.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This is useful\non systems where lstat() calls are very slow, such as\nCIFS/Microsoft Windows.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">False by\ndefault.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.preferSymlinkRefs</p>\n\n<p style=\"margin-left:17%;\">Instead of the default\n&quot;symref&quot; format for HEAD and other symbolic\nreference files, use symbolic links. This is sometimes\nneeded to work with old scripts that expect HEAD to be a\nsymbolic link.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.alternateRefsCommand</p>\n\n<p style=\"margin-left:17%;\">When advertising tips of\navailable history from an alternate, use the shell to\nexecute the specified command instead of\n<a href=\"https://man.page/1/git-for-each-ref\">git-for-each-ref(1)</a>. The first argument is the\nabsolute path of the alternate. Output must contain one hex\nobject id per line (i.e., the same as produced by <b>git\nfor-each-ref --format='%(objectname)'</b>).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that you\ncannot generally put <b>git for-each-ref</b> directly into\nthe config value, as it does not take a repository path as\nan argument (but you can wrap the command above in a shell\nscript).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.alternateRefsPrefixes</p>\n\n<p style=\"margin-left:17%;\">When listing references from an\nalternate, list only references that begin with the given\nprefix. Prefixes match as if they were given as arguments to\n<a href=\"https://man.page/1/git-for-each-ref\">git-for-each-ref(1)</a>. To list multiple prefixes,\nseparate them with whitespace. If\n<b>core.alternateRefsCommand</b> is set, setting\n<b>core.alternateRefsPrefixes</b> has no effect.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.bare</p>\n\n<p style=\"margin-left:17%;\">If true this repository is\nassumed to be <i>bare</i> and has no working directory\nassociated with it. If this is the case a number of commands\nthat require a working directory will be disabled, such as\n<a href=\"https://man.page/1/git-add\">git-add(1)</a> or <a href=\"https://man.page/1/git-merge\">git-merge(1)</a>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This setting is\nautomatically guessed by <a href=\"https://man.page/1/git-clone\">git-clone(1)</a> or\n<a href=\"https://man.page/1/git-init\">git-init(1)</a> when the repository was created. By\ndefault a repository that ends in &quot;/.git&quot; is\nassumed to be not bare (bare = false), while all other\nrepositories are assumed to be bare (bare = true).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.worktree</p>\n\n<p style=\"margin-left:17%;\">Set the path to the root of the\nworking tree. If <b>GIT_COMMON_DIR</b> environment variable\nis set, core.worktree is ignored and not used for\ndetermining the root of working tree. This can be overridden\nby the <b>GIT_WORK_TREE</b> environment variable and the\n<b>--work-tree</b> command-line option. The value can be an\nabsolute path or relative to the path to the .git directory,\nwhich is either specified by --git-dir or GIT_DIR, or\nautomatically discovered. If --git-dir or GIT_DIR is\nspecified but none of --work-tree, GIT_WORK_TREE and\ncore.worktree is specified, the current working directory is\nregarded as the top level of your working tree.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that this\nvariable is honored even when set in a configuration file in\na &quot;.git&quot; subdirectory of a directory and its value\ndiffers from the latter directory (e.g.\n&quot;/path/to/.git/config&quot; has core.worktree set to\n&quot;/different/path&quot;), which is most likely a\nmisconfiguration. Running Git commands in the\n&quot;/path/to&quot; directory will still use\n&quot;/different/path&quot; as the root of the work tree and\ncan cause confusion unless you know what you are doing (e.g.\nyou are creating a read-only snapshot of the same index to a\nlocation different from the repository&rsquo;s usual working\ntree).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.logAllRefUpdates</p>\n\n<p style=\"margin-left:17%;\">Enable the reflog. Updates to a\nref &lt;ref&gt; is logged to the file\n&quot;<b>$GIT_DIR/logs/&lt;ref&gt;</b>&quot;, by appending\nthe new and old SHA-1, the date/time and the reason of the\nupdate, but only when the file exists. If this configuration\nvariable is set to <b>true</b>, missing\n&quot;<b>$GIT_DIR/logs/&lt;ref&gt;</b>&quot; file is\nautomatically created for branch heads (i.e. under\n<b>refs/heads/</b>), remote refs (i.e. under\n<b>refs/remotes/</b>), note refs (i.e. under\n<b>refs/notes/</b>), and the symbolic ref <b>HEAD</b>. If it\nis set to <b>always</b>, then a missing reflog is\nautomatically created for any ref under <b>refs/</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This\ninformation can be used to determine what commit was the tip\nof a branch &quot;2 days ago&quot;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This value is\ntrue by default in a repository that has a working directory\nassociated with it, and false by default in a bare\nrepository.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.repositoryFormatVersion</p>\n\n<p style=\"margin-left:17%;\">Internal variable identifying\nthe repository format and layout version.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.sharedRepository</p>\n\n<p style=\"margin-left:17%;\">When <i>group</i> (or\n<i>true</i>), the repository is made shareable between\nseveral users in a group (making sure all the files and\nobjects are group-writable). When <i>all</i> (or\n<i>world</i> or <i>everybody</i>), the repository will be\nreadable by all users, additionally to being\ngroup-shareable. When <i>umask</i> (or <i>false</i>), Git\nwill use permissions reported by umask(2). When <i>0xxx</i>,\nwhere <i>0xxx</i> is an octal number, files in the\nrepository will have this mode value. <i>0xxx</i> will\noverride user&rsquo;s umask value (whereas the other options\nwill only override requested parts of the user&rsquo;s umask\nvalue). Examples: <i>0660</i> will make the repo\nread/write-able for the owner and group, but inaccessible to\nothers (equivalent to <i>group</i> unless umask is e.g.\n<i>0022</i>). <i>0640</i> is a repository that is\ngroup-readable but not group-writable. See\n<a href=\"https://man.page/1/git-init\">git-init(1)</a>. False by default.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.warnAmbiguousRefs</p>\n\n<p style=\"margin-left:17%;\">If true, Git will warn you if\nthe ref name you passed it is ambiguous and might match\nmultiple refs in the repository. True by default.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.compression</p>\n\n<p style=\"margin-left:17%;\">An integer -1..9, indicating a\ndefault compression level. -1 is the zlib default. 0 means\nno compression, and 1..9 are various speed/size tradeoffs, 9\nbeing slowest. If set, this provides a default to other\ncompression variables, such as <b>core.looseCompression</b>\nand <b>pack.compression</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.looseCompression</p>\n\n<p style=\"margin-left:17%;\">An integer -1..9, indicating\nthe compression level for objects that are not in a pack\nfile. -1 is the zlib default. 0 means no compression, and\n1..9 are various speed/size tradeoffs, 9 being slowest. If\nnot set, defaults to core.compression. If that is not set,\ndefaults to 1 (best speed).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.packedGitWindowSize</p>\n\n<p style=\"margin-left:17%;\">Number of bytes of a pack file\nto map into memory in a single mapping operation. Larger\nwindow sizes may allow your system to process a smaller\nnumber of large pack files more quickly. Smaller window\nsizes will negatively affect performance due to increased\ncalls to the operating system&rsquo;s memory manager, but\nmay improve performance when accessing a large number of\nlarge pack files.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Default is 1\nMiB if NO_MMAP was set at compile time, otherwise 32 MiB on\n32 bit platforms and 1 GiB on 64 bit platforms. This should\nbe reasonable for all users/operating systems. You probably\ndo not need to adjust this value.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Common unit\nsuffixes of <i>k</i>, <i>m</i>, or <i>g</i> are\nsupported.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.packedGitLimit</p>\n\n<p style=\"margin-left:17%;\">Maximum number of bytes to map\nsimultaneously into memory from pack files. If Git needs to\naccess more than this many bytes at once to complete an\noperation it will unmap existing regions to reclaim virtual\naddress space within the process.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Default is 256\nMiB on 32 bit platforms and 32 TiB (effectively unlimited)\non 64 bit platforms. This should be reasonable for all\nusers/operating systems, except on the largest projects. You\nprobably do not need to adjust this value.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Common unit\nsuffixes of <i>k</i>, <i>m</i>, or <i>g</i> are\nsupported.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.deltaBaseCacheLimit</p>\n\n<p style=\"margin-left:17%;\">Maximum number of bytes per\nthread to reserve for caching base objects that may be\nreferenced by multiple deltified objects. By storing the\nentire decompressed base objects in a cache Git is able to\navoid unpacking and decompressing frequently used base\nobjects multiple times.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Default is 96\nMiB on all platforms. This should be reasonable for all\nusers/operating systems, except on the largest projects. You\nprobably do not need to adjust this value.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Common unit\nsuffixes of <i>k</i>, <i>m</i>, or <i>g</i> are\nsupported.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.bigFileThreshold</p>\n\n<p style=\"margin-left:17%;\">Files larger than this size are\nstored deflated, without attempting delta compression.\nStoring large files without delta compression avoids\nexcessive memory usage, at the slight expense of increased\ndisk usage. Additionally files larger than this size are\nalways treated as binary.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Default is 512\nMiB on all platforms. This should be reasonable for most\nprojects as source code and other text files can still be\ndelta compressed, but larger binary media files won&rsquo;t\nbe.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Common unit\nsuffixes of <i>k</i>, <i>m</i>, or <i>g</i> are\nsupported.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.excludesFile</p>\n\n<p style=\"margin-left:17%;\">Specifies the pathname to the\nfile that contains patterns to describe paths that are not\nmeant to be tracked, in addition to <b>.gitignore</b>\n(per-directory) and <b>.git/info/exclude</b>. Defaults to\n<b>$XDG_CONFIG_HOME/git/ignore</b>. If\n<b>$XDG_CONFIG_HOME</b> is either not set or empty,\n<b>$HOME/.config/git/ignore</b> is used instead. See\n<a href=\"https://man.page/5/gitignore\">gitignore(5)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.askPass</p>\n\n<p style=\"margin-left:17%;\">Some commands (e.g. svn and\nhttp interfaces) that interactively ask for a password can\nbe told to use an external program given via the value of\nthis variable. Can be overridden by the <b>GIT_ASKPASS</b>\nenvironment variable. If not set, fall back to the value of\nthe <b>SSH_ASKPASS</b> environment variable or, failing\nthat, a simple password prompt. The external program shall\nbe given a suitable prompt as command-line argument and\nwrite the password on its STDOUT.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.attributesFile</p>\n\n<p style=\"margin-left:17%;\">In addition to\n<b>.gitattributes</b> (per-directory) and\n<b>.git/info/attributes</b>, Git looks into this file for\nattributes (see <a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a>). Path expansions\nare made the same way as for <b>core.excludesFile</b>. Its\ndefault value is <b>$XDG_CONFIG_HOME/git/attributes</b>. If\n<b>$XDG_CONFIG_HOME</b> is either not set or empty,\n<b>$HOME/.config/git/attributes</b> is used instead.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.hooksPath</p>\n\n<p style=\"margin-left:17%;\">By default Git will look for\nyour hooks in the <b>$GIT_DIR/hooks</b> directory. Set this\nto different path, e.g. <b>/etc/git/hooks</b>, and Git will\ntry to find your hooks in that directory, e.g.\n<b>/etc/git/hooks/pre-receive</b> instead of in\n<b>$GIT_DIR/hooks/pre-receive</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The path can be\neither absolute or relative. A relative path is taken as\nrelative to the directory where the hooks are run (see the\n&quot;DESCRIPTION&quot; section of <a href=\"https://man.page/5/githooks\">githooks(5)</a>).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This\nconfiguration variable is useful in cases where you&rsquo;d\nlike to centrally configure your Git hooks instead of\nconfiguring them on a per-repository basis, or as a more\nflexible and centralized alternative to having an\n<b>init.templateDir</b> where you&rsquo;ve changed default\nhooks.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.editor</p>\n\n<p style=\"margin-left:17%;\">Commands such as <b>commit</b>\nand <b>tag</b> that let you edit messages by launching an\neditor use the value of this variable when it is set, and\nthe environment variable <b>GIT_EDITOR</b> is not set. See\n<a href=\"https://man.page/1/git-var\">git-var(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.commentChar</p>\n\n<p style=\"margin-left:17%;\">Commands such as <b>commit</b>\nand <b>tag</b> that let you edit messages consider a line\nthat begins with this character commented, and removes them\nafter the editor returns (default <i>#</i>).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If set to\n&quot;auto&quot;, <b>git-commit</b> would select a character\nthat is not the beginning character of any line in existing\ncommit messages.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.filesRefLockTimeout</p>\n\n<p style=\"margin-left:17%;\">The length of time, in\nmilliseconds, to retry when trying to lock an individual\nreference. Value 0 means not to retry at all; -1 means to\ntry indefinitely. Default is 100 (i.e., retry for\n100ms).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.packedRefsTimeout</p>\n\n<p style=\"margin-left:17%;\">The length of time, in\nmilliseconds, to retry when trying to lock the\n<b>packed-refs</b> file. Value 0 means not to retry at all;\n-1 means to try indefinitely. Default is 1000 (i.e., retry\nfor 1 second).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.pager</p>\n\n<p style=\"margin-left:17%;\">Text viewer for use by Git\ncommands (e.g., <i>less</i>). The value is meant to be\ninterpreted by the shell. The order of preference is the\n<b>$GIT_PAGER</b> environment variable, then\n<b>core.pager</b> configuration, then <b>$PAGER</b>, and\nthen the default chosen at compile time (usually\n<i>less</i>).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When the\n<b>LESS</b> environment variable is unset, Git sets it to\n<b>FRX</b> (if <b>LESS</b> environment variable is set, Git\ndoes not change it at all). If you want to selectively\noverride Git&rsquo;s default setting for <b>LESS</b>, you\ncan set <b>core.pager</b> to e.g. <b>less -S</b>. This will\nbe passed to the shell by Git, which will translate the\nfinal command to <b>LESS=FRX less -S</b>. The environment\ndoes not set the <b>S</b> option but the command line does,\ninstructing less to truncate long lines. Similarly, setting\n<b>core.pager</b> to <b>less -+F</b> will deactivate the\n<b>F</b> option specified by the environment from the\ncommand-line, deactivating the &quot;quit if one\nscreen&quot; behavior of <b>less</b>. One can specifically\nactivate some flags for particular commands: for example,\nsetting <b>pager.blame</b> to <b>less -S</b> enables line\ntruncation only for <b>git blame</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Likewise, when\nthe <b>LV</b> environment variable is unset, Git sets it to\n<b>-c</b>. You can override this setting by exporting\n<b>LV</b> with another value or setting <b>core.pager</b> to\n<b>lv +c</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.whitespace</p>\n\n<p style=\"margin-left:17%;\">A comma separated list of\ncommon whitespace problems to notice. <i>git diff</i> will\nuse <b>color.diff.whitespace</b> to highlight them, and\n<i>git apply --whitespace=error</i> will consider them as\nerrors. You can prefix <b>-</b> to disable any of them (e.g.\n<b>-trailing-space</b>):</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<b>blank-at-eol</b> treats trailing whitespaces at the end\nof the line as an error (enabled by default).</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<b>space-before-tab</b> treats a space character that\nappears immediately before a tab character in the initial\nindent part of the line as an error (enabled by\ndefault).</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<b>indent-with-non-tab</b> treats a line that is indented\nwith space characters instead of the equivalent tabs as an\nerror (not enabled by default).</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<b>tab-in-indent</b> treats a tab character in the initial\nindent part of the line as an error (not enabled by\ndefault).</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<b>blank-at-eof</b> treats blank lines added at the end of\nfile as an error (enabled by default).</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<b>trailing-space</b> is a short-hand to cover both\n<b>blank-at-eol</b> and <b>blank-at-eof</b>.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<b>cr-at-eol</b> treats a carriage-return at the end of line\nas part of the line terminator, i.e. with it,\n<b>trailing-space</b> does not trigger if the character\nbefore such a carriage-return is not a whitespace (not\nenabled by default).</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<b>tabwidth=&lt;n&gt;</b> tells how many character positions\na tab occupies; this is relevant for\n<b>indent-with-non-tab</b> and when Git fixes\n<b>tab-in-indent</b> errors. The default tab width is 8.\nAllowed values are 1 to 63.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.fsyncObjectFiles</p>\n\n<p style=\"margin-left:17%;\">This boolean will enable\n<i>fsync()</i> when writing object files.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This is a total\nwaste of time and effort on a filesystem that orders data\nwrites properly, but can be useful for filesystems that do\nnot use journalling (traditional UNIX filesystems) or that\nonly journal metadata and not file contents (OS X&rsquo;s\nHFS+, or Linux ext3 with &quot;data=writeback&quot;).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.preloadIndex</p>\n\n<p style=\"margin-left:17%;\">Enable parallel index preload\nfor operations like <i>git diff</i></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This can speed\nup operations like <i>git diff</i> and <i>git status</i>\nespecially on filesystems like NFS that have weak caching\nsemantics and thus relatively high IO latencies. When\nenabled, Git will do the index comparison to the filesystem\ndata in parallel, allowing overlapping IO&rsquo;s. Defaults\nto true.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.unsetenvvars</p>\n\n<p style=\"margin-left:17%;\">Windows-only: comma-separated\nlist of environment variables' names that need to be unset\nbefore spawning any other process. Defaults to\n<b>PERL5LIB</b> to account for the fact that Git for Windows\ninsists on using its own Perl interpreter.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.restrictinheritedhandles</p>\n\n<p style=\"margin-left:17%;\">Windows-only: override whether\nspawned processes inherit only standard file handles\n(<b>stdin</b>, <b>stdout</b> and <b>stderr</b>) or all\nhandles. Can be <b>auto</b>, <b>true</b> or <b>false</b>.\nDefaults to <b>auto</b>, which means <b>true</b> on Windows\n7 and later, and <b>false</b> on older Windows versions.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.createObject</p>\n\n<p style=\"margin-left:17%;\">You can set this to\n<i>link</i>, in which case a hardlink followed by a delete\nof the source are used to make sure that object creation\nwill not overwrite existing objects.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">On some file\nsystem/operating system combinations, this is unreliable.\nSet this config setting to <i>rename</i> there; However,\nThis will remove the check that makes sure that existing\nobject files will not get overwritten.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.notesRef</p>\n\n<p style=\"margin-left:17%;\">When showing commit messages,\nalso show notes which are stored in the given ref. The ref\nmust be fully qualified. If the given ref does not exist, it\nis not an error but means that no notes should be\nprinted.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This setting\ndefaults to &quot;refs/notes/commits&quot;, and it can be\noverridden by the <b>GIT_NOTES_REF</b> environment variable.\nSee <a href=\"https://man.page/1/git-notes\">git-notes(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.commitGraph</p>\n\n<p style=\"margin-left:17%;\">If true, then git will read the\ncommit-graph file (if it exists) to parse the graph\nstructure of commits. Defaults to true. See\n<a href=\"https://man.page/1/git-commit-graph\">git-commit-graph(1)</a> for more information.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.useReplaceRefs</p>\n\n<p style=\"margin-left:17%;\">If set to <b>false</b>, behave\nas if the <b>--no-replace-objects</b> option was given on\nthe command line. See <a href=\"https://man.page/1/git\">git(1)</a> and\n<a href=\"https://man.page/1/git-replace\">git-replace(1)</a> for more information.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.multiPackIndex</p>\n\n<p style=\"margin-left:17%;\">Use the multi-pack-index file\nto track multiple packfiles using a single index. See\n<a href=\"https://man.page/1/git-multi-pack-index\">git-multi-pack-index(1)</a> for more information.\nDefaults to true.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.sparseCheckout</p>\n\n<p style=\"margin-left:17%;\">Enable &quot;sparse\ncheckout&quot; feature. See <a href=\"https://man.page/1/git-sparse-checkout\">git-sparse-checkout(1)</a>\nfor more information.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.sparseCheckoutCone</p>\n\n<p style=\"margin-left:17%;\">Enables the &quot;cone\nmode&quot; of the sparse checkout feature. When the\nsparse-checkout file contains a limited set of patterns,\nthen this mode provides significant performance advantages.\nSee <a href=\"https://man.page/1/git-sparse-checkout\">git-sparse-checkout(1)</a> for more information.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">core.abbrev</p>\n\n<p style=\"margin-left:17%;\">Set the length object names are\nabbreviated to. If unspecified or set to &quot;auto&quot;,\nan appropriate value is computed based on the approximate\nnumber of packed objects in your repository, which hopefully\nis enough for abbreviated object names to stay unique for\nsome time. If set to &quot;no&quot;, no abbreviation is made\nand the object names are shown in their full length. The\nminimum length is 4.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">add.ignoreErrors,\nadd.ignore-errors (deprecated)</p>\n\n<p style=\"margin-left:17%;\">Tells <i>git add</i> to\ncontinue adding files when some files cannot be added due to\nindexing errors. Equivalent to the <b>--ignore-errors</b>\noption of <a href=\"https://man.page/1/git-add\">git-add(1)</a>. <b>add.ignore-errors</b> is\ndeprecated, as it does not follow the usual naming\nconvention for configuration variables.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">add.interactive.useBuiltin</p>\n\n<p style=\"margin-left:17%;\">[EXPERIMENTAL] Set to\n<b>true</b> to use the experimental built-in implementation\nof the interactive version of <a href=\"https://man.page/1/git-add\">git-add(1)</a> instead of\nthe Perl script version. Is <b>false</b> by default.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">alias.*</p>\n\n<p style=\"margin-left:17%;\">Command aliases for the\n<a href=\"https://man.page/1/git\">git(1)</a> command wrapper - e.g. after defining\n<b>alias.last = cat-file commit HEAD</b>, the invocation\n<b>git last</b> is equivalent to <b>git cat-file commit\nHEAD</b>. To avoid confusion and troubles with script usage,\naliases that hide existing Git commands are ignored.\nArguments are split by spaces, the usual shell quoting and\nescaping is supported. A quote pair or a backslash can be\nused to quote them.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that the\nfirst word of an alias does not necessarily have to be a\ncommand. It can be a command-line option that will be passed\ninto the invocation of <b>git</b>. In particular, this is\nuseful when used with <b>-c</b> to pass in one-time\nconfigurations or <b>-p</b> to force pagination. For\nexample, <b>loud-rebase = -c commit.verbose=true rebase</b>\ncan be defined such that running <b>git loud-rebase</b>\nwould be equivalent to <b>git -c commit.verbose=true\nrebase</b>. Also, <b>ps = -p status</b> would be a helpful\nalias since <b>git ps</b> would paginate the output of\n<b>git status</b> where the original command does not.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If the alias\nexpansion is prefixed with an exclamation point, it will be\ntreated as a shell command. For example, defining\n<b>alias.new = !gitk --all --not ORIG_HEAD</b>, the\ninvocation <b>git new</b> is equivalent to running the shell\ncommand <b>gitk --all --not ORIG_HEAD</b>. Note that shell\ncommands will be executed from the top-level directory of a\nrepository, which may not necessarily be the current\ndirectory. <b>GIT_PREFIX</b> is set as returned by running\n<b>git rev-parse --show-prefix</b> from the original current\ndirectory. See <a href=\"https://man.page/1/git-rev-parse\">git-rev-parse(1)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">am.keepcr</p>\n\n<p style=\"margin-left:17%;\">If true, git-am will call\ngit-mailsplit for patches in mbox format with parameter\n<b>--keep-cr</b>. In this case git-mailsplit will not remove\n<b>\\r</b> from lines ending with <b>\\r\\n</b>. Can be\noverridden by giving <b>--no-keep-cr</b> from the command\nline. See <a href=\"https://man.page/1/git-am\">git-am(1)</a>, <a href=\"https://man.page/1/git-mailsplit\">git-mailsplit(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">am.threeWay</p>\n\n<p style=\"margin-left:17%;\">By default, <b>git am</b> will\nfail if the patch does not apply cleanly. When set to true,\nthis setting tells <b>git am</b> to fall back on 3-way merge\nif the patch records the identity of blobs it is supposed to\napply to and we have those blobs available locally\n(equivalent to giving the <b>--3way</b> option from the\ncommand line). Defaults to <b>false</b>. See\n<a href=\"https://man.page/1/git-am\">git-am(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">apply.ignoreWhitespace</p>\n\n<p style=\"margin-left:17%;\">When set to <i>change</i>,\ntells <i>git apply</i> to ignore changes in whitespace, in\nthe same way as the <b>--ignore-space-change</b> option.\nWhen set to one of: no, none, never, false tells <i>git\napply</i> to respect all whitespace differences. See\n<a href=\"https://man.page/1/git-apply\">git-apply(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">apply.whitespace</p>\n\n<p style=\"margin-left:17%;\">Tells <i>git apply</i> how to\nhandle whitespaces, in the same way as the\n<b>--whitespace</b> option. See <a href=\"https://man.page/1/git-apply\">git-apply(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">blame.blankBoundary</p>\n\n<p style=\"margin-left:17%;\">Show blank commit object name\nfor boundary commits in <a href=\"https://man.page/1/git-blame\">git-blame(1)</a>. This option\ndefaults to false.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">blame.coloring</p>\n\n<p style=\"margin-left:17%;\">This determines the coloring\nscheme to be applied to blame output. It can be\n<i>repeatedLines</i>, <i>highlightRecent</i>, or <i>none</i>\nwhich is the default.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">blame.date</p>\n\n<p style=\"margin-left:17%;\">Specifies the format used to\noutput dates in <a href=\"https://man.page/1/git-blame\">git-blame(1)</a>. If unset the iso format\nis used. For supported values, see the discussion of the\n<b>--date</b> option at <a href=\"https://man.page/1/git-log\">git-log(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">blame.showEmail</p>\n\n<p style=\"margin-left:17%;\">Show the author email instead\nof author name in <a href=\"https://man.page/1/git-blame\">git-blame(1)</a>. This option defaults\nto false.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">blame.showRoot</p>\n\n<p style=\"margin-left:17%;\">Do not treat root commits as\nboundaries in <a href=\"https://man.page/1/git-blame\">git-blame(1)</a>. This option defaults to\nfalse.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">blame.ignoreRevsFile</p>\n\n<p style=\"margin-left:17%;\">Ignore revisions listed in the\nfile, one unabbreviated object name per line, in\n<a href=\"https://man.page/1/git-blame\">git-blame(1)</a>. Whitespace and comments beginning with\n<b>#</b> are ignored. This option may be repeated multiple\ntimes. Empty file names will reset the list of ignored\nrevisions. This option will be handled before the command\nline option <b>--ignore-revs-file</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">blame.markUnblamableLines</p>\n\n<p style=\"margin-left:17%;\">Mark lines that were changed by\nan ignored revision that we could not attribute to another\ncommit with a <i>*</i> in the output of\n<a href=\"https://man.page/1/git-blame\">git-blame(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">blame.markIgnoredLines</p>\n\n<p style=\"margin-left:17%;\">Mark lines that were changed by\nan ignored revision that we attributed to another commit\nwith a <i>?</i> in the output of <a href=\"https://man.page/1/git-blame\">git-blame(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">branch.autoSetupMerge</p>\n\n<p style=\"margin-left:17%;\">Tells <i>git branch</i>, <i>git\nswitch</i> and <i>git checkout</i> to set up new branches so\nthat <a href=\"https://man.page/1/git-pull\">git-pull(1)</a> will appropriately merge from the\nstarting point branch. Note that even if this option is not\nset, this behavior can be chosen per-branch using the\n<b>--track</b> and <b>--no-track</b> options. The valid\nsettings are: <b>false</b> &mdash; no automatic setup is\ndone; <b>true</b> &mdash; automatic setup is done when the\nstarting point is a remote-tracking branch; <b>always</b>\n&mdash; automatic setup is done when the starting point is\neither a local branch or remote-tracking branch. This option\ndefaults to true.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">branch.autoSetupRebase</p>\n\n<p style=\"margin-left:17%;\">When a new branch is created\nwith <i>git branch</i>, <i>git switch</i> or <i>git\ncheckout</i> that tracks another branch, this variable tells\nGit to set up pull to rebase instead of merge (see\n&quot;branch.&lt;name&gt;.rebase&quot;). When <b>never</b>,\nrebase is never automatically set to true. When\n<b>local</b>, rebase is set to true for tracked branches of\nother local branches. When <b>remote</b>, rebase is set to\ntrue for tracked branches of remote-tracking branches. When\n<b>always</b>, rebase will be set to true for all tracking\nbranches. See &quot;branch.autoSetupMerge&quot; for details\non how to set up a branch to track another branch. This\noption defaults to never.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">branch.sort</p>\n\n<p style=\"margin-left:17%;\">This variable controls the sort\nordering of branches when displayed by <a href=\"https://man.page/1/git-branch\">git-branch(1)</a>.\nWithout the &quot;--sort=&lt;value&gt;&quot; option\nprovided, the value of this variable will be used as the\ndefault. See <a href=\"https://man.page/1/git-for-each-ref\">git-for-each-ref(1)</a> field names for\nvalid values.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">branch.&lt;name&gt;.remote</p>\n\n<p style=\"margin-left:17%;\">When on branch &lt;name&gt;, it\ntells <i>git fetch</i> and <i>git push</i> which remote to\nfetch from/push to. The remote to push to may be overridden\nwith <b>remote.pushDefault</b> (for all branches). The\nremote to push to, for the current branch, may be further\noverridden by <b>branch.&lt;name&gt;.pushRemote</b>. If no\nremote is configured, or if you are not on any branch, it\ndefaults to <b>origin</b> for fetching and\n<b>remote.pushDefault</b> for pushing. Additionally,\n<b>.</b> (a period) is the current local repository (a\ndot-repository), see <b>branch.&lt;name&gt;.merge</b>'s\nfinal note below.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">branch.&lt;name&gt;.pushRemote</p>\n\n<p style=\"margin-left:17%;\">When on branch &lt;name&gt;, it\noverrides <b>branch.&lt;name&gt;.remote</b> for pushing. It\nalso overrides <b>remote.pushDefault</b> for pushing from\nbranch &lt;name&gt;. When you pull from one place (e.g. your\nupstream) and push to another place (e.g. your own\npublishing repository), you would want to set\n<b>remote.pushDefault</b> to specify the remote to push to\nfor all branches, and use this option to override it for a\nspecific branch.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">branch.&lt;name&gt;.merge</p>\n\n<p style=\"margin-left:17%;\">Defines, together with\nbranch.&lt;name&gt;.remote, the upstream branch for the\ngiven branch. It tells <i>git fetch</i>/<i>git\npull</i>/<i>git rebase</i> which branch to merge and can\nalso affect <i>git push</i> (see push.default). When in\nbranch &lt;name&gt;, it tells <i>git fetch</i> the default\nrefspec to be marked for merging in FETCH_HEAD. The value is\nhandled like the remote part of a refspec, and must match a\nref which is fetched from the remote given by\n&quot;branch.&lt;name&gt;.remote&quot;. The merge\ninformation is used by <i>git pull</i> (which at first calls\n<i>git fetch</i>) to lookup the default branch for merging.\nWithout this option, <i>git pull</i> defaults to merge the\nfirst refspec fetched. Specify multiple values to get an\noctopus merge. If you wish to setup <i>git pull</i> so that\nit merges into &lt;name&gt; from another branch in the local\nrepository, you can point branch.&lt;name&gt;.merge to the\ndesired branch, and use the relative path setting <b>.</b>\n(a period) for branch.&lt;name&gt;.remote.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">branch.&lt;name&gt;.mergeOptions</p>\n\n<p style=\"margin-left:17%;\">Sets default options for\nmerging into branch &lt;name&gt;. The syntax and supported\noptions are the same as those of <a href=\"https://man.page/1/git-merge\">git-merge(1)</a>, but\noption values containing whitespace characters are currently\nnot supported.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">branch.&lt;name&gt;.rebase</p>\n\n<p style=\"margin-left:17%;\">When true, rebase the branch\n&lt;name&gt; on top of the fetched branch, instead of\nmerging the default branch from the default remote when\n&quot;git pull&quot; is run. See &quot;pull.rebase&quot; for\ndoing this in a non branch-specific manner.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When\n<b>merges</b> (or just <i>m</i>), pass the\n<b>--rebase-merges</b> option to <i>git rebase</i> so that\nthe local merge commits are included in the rebase (see\n<a href=\"https://man.page/1/git-rebase\">git-rebase(1)</a> for details).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When the value\nis <b>interactive</b> (or just <i>i</i>), the rebase is run\nin interactive mode.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>NOTE</b>:\nthis is a possibly dangerous operation; do <b>not</b> use it\nunless you understand the implications (see\n<a href=\"https://man.page/1/git-rebase\">git-rebase(1)</a> for details).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">branch.&lt;name&gt;.description</p>\n\n<p style=\"margin-left:17%;\">Branch description, can be\nedited with <b>git branch --edit-description</b>. Branch\ndescription is automatically added in the format-patch cover\nletter or request-pull summary.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">browser.&lt;tool&gt;.cmd</p>\n\n<p style=\"margin-left:17%;\">Specify the command to invoke\nthe specified browser. The specified command is evaluated in\nshell with the URLs passed as arguments. (See\n<a href=\"https://man.page/1/git-web--browse\">git-web--browse(1)</a>.)</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">browser.&lt;tool&gt;.path</p>\n\n<p style=\"margin-left:17%;\">Override the path for the given\ntool that may be used to browse HTML help (see <b>-w</b>\noption in <a href=\"https://man.page/1/git-help\">git-help(1)</a>) or a working repository in\ngitweb (see <a href=\"https://man.page/1/git-instaweb\">git-instaweb(1)</a>).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">checkout.defaultRemote</p>\n\n<p style=\"margin-left:17%;\">When you run <b>git checkout\n&lt;something&gt;</b> or <b>git switch &lt;something&gt;</b>\nand only have one remote, it may implicitly fall back on\nchecking out and tracking e.g.\n<b>origin/&lt;something&gt;</b>. This stops working as soon\nas you have more than one remote with a\n<b>&lt;something&gt;</b> reference. This setting allows for\nsetting the name of a preferred remote that should always\nwin when it comes to disambiguation. The typical use-case is\nto set this to <b>origin</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Currently this\nis used by <a href=\"https://man.page/1/git-switch\">git-switch(1)</a> and <a href=\"https://man.page/1/git-checkout\">git-checkout(1)</a>\nwhen <b>git checkout &lt;something&gt;</b> or <b>git switch\n&lt;something&gt;</b> will checkout the\n<b>&lt;something&gt;</b> branch on another remote, and by\n<a href=\"https://man.page/1/git-worktree\">git-worktree(1)</a> when <b>git worktree add</b> refers\nto a remote branch. This setting might be used for other\ncheckout-like commands or functionality in the future.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">checkout.guess</p>\n\n<p style=\"margin-left:17%;\">Provides the default value for\nthe <b>--guess</b> or <b>--no-guess</b> option in <b>git\ncheckout</b> and <b>git switch</b>. See <a href=\"https://man.page/1/git-switch\">git-switch(1)</a>\nand <a href=\"https://man.page/1/git-checkout\">git-checkout(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">checkout.workers</p>\n\n<p style=\"margin-left:17%;\">The number of parallel workers\nto use when updating the working tree. The default is one,\ni.e. sequential execution. If set to a value less than one,\nGit will use as many workers as the number of logical cores\navailable. This setting and\n<b>checkout.thresholdForParallelism</b> affect all commands\nthat perform checkout. E.g. checkout, clone, reset,\nsparse-checkout, etc.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note: parallel\ncheckout usually delivers better performance for\nrepositories located on SSDs or over NFS. For repositories\non spinning disks and/or machines with a small number of\ncores, the default sequential checkout often performs\nbetter. The size and compression level of a repository might\nalso influence how well the parallel version performs.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">checkout.thresholdForParallelism</p>\n\n<p style=\"margin-left:17%;\">When running parallel checkout\nwith a small number of files, the cost of subprocess\nspawning and inter-process communication might outweigh the\nparallelization gains. This setting allows to define the\nminimum number of files for which parallel checkout should\nbe attempted. The default is 100.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">clean.requireForce</p>\n\n<p style=\"margin-left:17%;\">A boolean to make git-clean do\nnothing unless given -f, -i or -n. Defaults to true.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">clone.defaultRemoteName</p>\n\n<p style=\"margin-left:17%;\">The name of the remote to\ncreate when cloning a repository. Defaults to <b>origin</b>,\nand can be overridden by passing the <b>--origin</b>\ncommand-line option to <a href=\"https://man.page/1/git-clone\">git-clone(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">clone.rejectShallow</p>\n\n<p style=\"margin-left:17%;\">Reject to clone a repository if\nit is a shallow one, can be overridden by passing option\n<b>--reject-shallow</b> in command line. See\n<a href=\"https://man.page/1/git-clone\">git-clone(1)</a></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.advice</p>\n\n<p style=\"margin-left:17%;\">A boolean to enable/disable\ncolor in hints (e.g. when a push failed, see <b>advice.*</b>\nfor a list). May be set to <b>always</b>, <b>false</b> (or\n<b>never</b>) or <b>auto</b> (or <b>true</b>), in which case\ncolors are used only when the error output goes to a\nterminal. If unset, then the value of <b>color.ui</b> is\nused (<b>auto</b> by default).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.advice.hint</p>\n\n<p style=\"margin-left:17%;\">Use customized color for\nhints.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.blame.highlightRecent</p>\n\n<p style=\"margin-left:17%;\">Specify the line annotation\ncolor for <b>git blame --color-by-age</b> depending upon the\nage of the line.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This setting\nshould be set to a comma-separated list of color and date\nsettings, starting and ending with a color, the dates should\nbe set from oldest to newest. The metadata will be colored\nwith the specified colors if the line was introduced before\nthe given timestamp, overwriting older timestamped\ncolors.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Instead of an\nabsolute timestamp relative timestamps work as well, e.g.\n<b>2.weeks.ago</b> is valid to address anything older than 2\nweeks.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">It defaults to\n<b>blue,12 month ago,white,1 month ago,red</b>, which colors\neverything older than one year blue, recent changes between\none month and one year old are kept white, and lines\nintroduced within the last month are colored red.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.blame.repeatedLines</p>\n\n<p style=\"margin-left:17%;\">Use the specified color to\ncolorize line annotations for <b>git blame\n--color-lines</b>, if they come from the same commit as the\npreceding line. Defaults to cyan.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.branch</p>\n\n<p style=\"margin-left:17%;\">A boolean to enable/disable\ncolor in the output of <a href=\"https://man.page/1/git-branch\">git-branch(1)</a>. May be set to\n<b>always</b>, <b>false</b> (or <b>never</b>) or <b>auto</b>\n(or <b>true</b>), in which case colors are used only when\nthe output is to a terminal. If unset, then the value of\n<b>color.ui</b> is used (<b>auto</b> by default).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.branch.&lt;slot&gt;</p>\n\n<p style=\"margin-left:17%;\">Use customized color for branch\ncoloration. <b>&lt;slot&gt;</b> is one of <b>current</b>\n(the current branch), <b>local</b> (a local branch),\n<b>remote</b> (a remote-tracking branch in refs/remotes/),\n<b>upstream</b> (upstream tracking branch), <b>plain</b>\n(other refs).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.diff</p>\n\n<p style=\"margin-left:17%;\">Whether to use ANSI escape\nsequences to add color to patches. If this is set to\n<b>always</b>, <a href=\"https://man.page/1/git-diff\">git-diff(1)</a>, <a href=\"https://man.page/1/git-log\">git-log(1)</a>, and\n<a href=\"https://man.page/1/git-show\">git-show(1)</a> will use color for all patches. If it is\nset to <b>true</b> or <b>auto</b>, those commands will only\nuse color when output is to the terminal. If unset, then the\nvalue of <b>color.ui</b> is used (<b>auto</b> by\ndefault).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This does not\naffect <a href=\"https://man.page/1/git-format-patch\">git-format-patch(1)</a> or the <i>git-diff-*</i>\nplumbing commands. Can be overridden on the command line\nwith the <b>--color[=&lt;when&gt;]</b> option.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.diff.&lt;slot&gt;</p>\n\n<p style=\"margin-left:17%;\">Use customized color for diff\ncolorization. <b>&lt;slot&gt;</b> specifies which part of\nthe patch to use the specified color, and is one of\n<b>context</b> (context text - <b>plain</b> is a historical\nsynonym), <b>meta</b> (metainformation), <b>frag</b> (hunk\nheader), <i>func</i> (function in hunk header), <b>old</b>\n(removed lines), <b>new</b> (added lines), <b>commit</b>\n(commit headers), <b>whitespace</b> (highlighting whitespace\nerrors), <b>oldMoved</b> (deleted lines), <b>newMoved</b>\n(added lines), <b>oldMovedDimmed</b>,\n<b>oldMovedAlternative</b>,\n<b>oldMovedAlternativeDimmed</b>, <b>newMovedDimmed</b>,\n<b>newMovedAlternative newMovedAlternativeDimmed</b> (See\nthe <i>&lt;mode&gt;</i> setting of <i>--color-moved</i> in\n<a href=\"https://man.page/1/git-diff\">git-diff(1)</a> for details), <b>contextDimmed</b>,\n<b>oldDimmed</b>, <b>newDimmed</b>, <b>contextBold</b>,\n<b>oldBold</b>, and <b>newBold</b> (see\n<a href=\"https://man.page/1/git-range-diff\">git-range-diff(1)</a> for details).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.decorate.&lt;slot&gt;</p>\n\n<p style=\"margin-left:17%;\">Use customized color for <i>git\nlog --decorate</i> output. <b>&lt;slot&gt;</b> is one of\n<b>branch</b>, <b>remoteBranch</b>, <b>tag</b>, <b>stash</b>\nor <b>HEAD</b> for local branches, remote-tracking branches,\ntags, stash and HEAD, respectively and <b>grafted</b> for\ngrafted commits.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.grep</p>\n\n<p style=\"margin-left:17%;\">When set to <b>always</b>,\nalways highlight matches. When <b>false</b> (or\n<b>never</b>), never. When set to <b>true</b> or\n<b>auto</b>, use color only when the output is written to\nthe terminal. If unset, then the value of <b>color.ui</b> is\nused (<b>auto</b> by default).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.grep.&lt;slot&gt;</p>\n\n<p style=\"margin-left:17%;\">Use customized color for grep\ncolorization. <b>&lt;slot&gt;</b> specifies which part of\nthe line to use the specified color, and is one of</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>context</b></p>\n\n<p style=\"margin-left:23%;\">non-matching text in context\nlines (when using <b>-A</b>, <b>-B</b>, or <b>-C</b>)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>filename</b></p>\n\n<p style=\"margin-left:23%;\">filename prefix (when not using\n<b>-h</b>)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>function</b></p>\n\n<p style=\"margin-left:23%;\">function name lines (when using\n<b>-p</b>)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>lineNumber</b></p>\n\n<p style=\"margin-left:23%;\">line number prefix (when using\n<b>-n</b>)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>column</b></p>\n\n<p style=\"margin-left:23%;\">column number prefix (when\nusing <b>--column</b>)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>match</b></p>\n\n<p style=\"margin-left:23%;\">matching text (same as setting\n<b>matchContext</b> and <b>matchSelected</b>)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>matchContext</b></p>\n\n<p style=\"margin-left:23%;\">matching text in context\nlines</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>matchSelected</b></p>\n\n<p style=\"margin-left:23%;\">matching text in selected\nlines. Also, used to customize the following\n<a href=\"https://man.page/1/git-log\">git-log(1)</a> subcommands: <b>--grep</b>,\n<b>--author</b> and <b>--committer</b>.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>selected</b></p>\n\n<p style=\"margin-left:23%;\">non-matching text in selected\nlines. Also, used to customize the following\n<a href=\"https://man.page/1/git-log\">git-log(1)</a> subcommands: <b>--grep</b>,\n<b>--author</b> and <b>--committer</b>.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>separator</b></p>\n\n<p style=\"margin-left:23%;\">separators between fields on a\nline (<b>:</b>, <b>-</b>, and <b>=</b>) and between hunks\n(<b>--</b>)</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.interactive</p>\n\n<p style=\"margin-left:17%;\">When set to <b>always</b>,\nalways use colors for interactive prompts and displays (such\nas those used by &quot;git-add --interactive&quot; and\n&quot;git-clean --interactive&quot;). When false (or\n<b>never</b>), never. When set to <b>true</b> or\n<b>auto</b>, use colors only when the output is to the\nterminal. If unset, then the value of <b>color.ui</b> is\nused (<b>auto</b> by default).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.interactive.&lt;slot&gt;</p>\n\n<p style=\"margin-left:17%;\">Use customized color for <i>git\nadd --interactive</i> and <i>git clean --interactive</i>\noutput. <b>&lt;slot&gt;</b> may be <b>prompt</b>,\n<b>header</b>, <b>help</b> or <b>error</b>, for four\ndistinct types of normal output from interactive\ncommands.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.pager</p>\n\n<p style=\"margin-left:17%;\">A boolean to specify whether\n<b>auto</b> color modes should colorize output going to the\npager. Defaults to true; set this to false if your pager\ndoes not understand ANSI color codes.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.push</p>\n\n<p style=\"margin-left:17%;\">A boolean to enable/disable\ncolor in push errors. May be set to <b>always</b>,\n<b>false</b> (or <b>never</b>) or <b>auto</b> (or\n<b>true</b>), in which case colors are used only when the\nerror output goes to a terminal. If unset, then the value of\n<b>color.ui</b> is used (<b>auto</b> by default).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.push.error</p>\n\n<p style=\"margin-left:17%;\">Use customized color for push\nerrors.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.remote</p>\n\n<p style=\"margin-left:17%;\">If set, keywords at the start\nof the line are highlighted. The keywords are\n&quot;error&quot;, &quot;warning&quot;, &quot;hint&quot; and\n&quot;success&quot;, and are matched case-insensitively. May\nbe set to <b>always</b>, <b>false</b> (or <b>never</b>) or\n<b>auto</b> (or <b>true</b>). If unset, then the value of\n<b>color.ui</b> is used (<b>auto</b> by default).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.remote.&lt;slot&gt;</p>\n\n<p style=\"margin-left:17%;\">Use customized color for each\nremote keyword. <b>&lt;slot&gt;</b> may be <b>hint</b>,\n<b>warning</b>, <b>success</b> or <b>error</b> which match\nthe corresponding keyword.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.showBranch</p>\n\n<p style=\"margin-left:17%;\">A boolean to enable/disable\ncolor in the output of <a href=\"https://man.page/1/git-show-branch\">git-show-branch(1)</a>. May be set\nto <b>always</b>, <b>false</b> (or <b>never</b>) or\n<b>auto</b> (or <b>true</b>), in which case colors are used\nonly when the output is to a terminal. If unset, then the\nvalue of <b>color.ui</b> is used (<b>auto</b> by\ndefault).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.status</p>\n\n<p style=\"margin-left:17%;\">A boolean to enable/disable\ncolor in the output of <a href=\"https://man.page/1/git-status\">git-status(1)</a>. May be set to\n<b>always</b>, <b>false</b> (or <b>never</b>) or <b>auto</b>\n(or <b>true</b>), in which case colors are used only when\nthe output is to a terminal. If unset, then the value of\n<b>color.ui</b> is used (<b>auto</b> by default).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.status.&lt;slot&gt;</p>\n\n<p style=\"margin-left:17%;\">Use customized color for status\ncolorization. <b>&lt;slot&gt;</b> is one of <b>header</b>\n(the header text of the status message), <b>added</b> or\n<b>updated</b> (files which are added but not committed),\n<b>changed</b> (files which are changed but not added in the\nindex), <b>untracked</b> (files which are not tracked by\nGit), <b>branch</b> (the current branch), <b>nobranch</b>\n(the color the <i>no branch</i> warning is shown in,\ndefaulting to red), <b>localBranch</b> or\n<b>remoteBranch</b> (the local and remote branch names,\nrespectively, when branch and tracking information is\ndisplayed in the status short-format), or <b>unmerged</b>\n(files which have unmerged changes).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.transport</p>\n\n<p style=\"margin-left:17%;\">A boolean to enable/disable\ncolor when pushes are rejected. May be set to <b>always</b>,\n<b>false</b> (or <b>never</b>) or <b>auto</b> (or\n<b>true</b>), in which case colors are used only when the\nerror output goes to a terminal. If unset, then the value of\n<b>color.ui</b> is used (<b>auto</b> by default).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.transport.rejected</p>\n\n<p style=\"margin-left:17%;\">Use customized color when a\npush was rejected.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">color.ui</p>\n\n<p style=\"margin-left:17%;\">This variable determines the\ndefault value for variables such as <b>color.diff</b> and\n<b>color.grep</b> that control the use of color per command\nfamily. Its scope will expand as more commands learn\nconfiguration to set a default for the <b>--color</b>\noption. Set it to <b>false</b> or <b>never</b> if you prefer\nGit commands not to use color unless enabled explicitly with\nsome other configuration or the <b>--color</b> option. Set\nit to <b>always</b> if you want all output not intended for\nmachine consumption to use color, to <b>true</b> or\n<b>auto</b> (this is the default since Git 1.8.4) if you\nwant such output to use color when written to the\nterminal.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">column.ui</p>\n\n<p style=\"margin-left:17%;\">Specify whether supported\ncommands should output in columns. This variable consists of\na list of tokens separated by spaces or commas:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">These options\ncontrol when the feature should be enabled (defaults to\n<i>never</i>):</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>always</b></p>\n\n<p style=\"margin-left:23%;\">always show in columns</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>never</b></p>\n\n<p style=\"margin-left:23%;\">never show in columns</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>auto</b></p>\n\n<p style=\"margin-left:23%;\">show in columns if the output\nis to the terminal</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">These options\ncontrol layout (defaults to <i>column</i>). Setting any of\nthese implies <i>always</i> if none of <i>always</i>,\n<i>never</i>, or <i>auto</i> are specified.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>column</b></p>\n\n<p style=\"margin-left:23%;\">fill columns before rows</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>row</b></p>\n\n<p style=\"margin-left:23%;\">fill rows before columns</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>plain</b></p>\n\n<p style=\"margin-left:23%;\">show in one column</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Finally, these\noptions can be combined with a layout option (defaults to\n<i>nodense</i>):</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>dense</b></p>\n\n<p style=\"margin-left:23%;\">make unequal size columns to\nutilize more space</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>nodense</b></p>\n\n<p style=\"margin-left:23%;\">make equal size columns</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">column.branch</p>\n\n<p style=\"margin-left:17%;\">Specify whether to output\nbranch listing in <b>git branch</b> in columns. See\n<b>column.ui</b> for details.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">column.clean</p>\n\n<p style=\"margin-left:17%;\">Specify the layout when list\nitems in <b>git clean -i</b>, which always shows files and\ndirectories in columns. See <b>column.ui</b> for\ndetails.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">column.status</p>\n\n<p style=\"margin-left:17%;\">Specify whether to output\nuntracked files in <b>git status</b> in columns. See\n<b>column.ui</b> for details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">column.tag</p>\n\n<p style=\"margin-left:17%;\">Specify whether to output tag\nlisting in <b>git tag</b> in columns. See <b>column.ui</b>\nfor details.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">commit.cleanup</p>\n\n<p style=\"margin-left:17%;\">This setting overrides the\ndefault of the <b>--cleanup</b> option in <b>git commit</b>.\nSee <a href=\"https://man.page/1/git-commit\">git-commit(1)</a> for details. Changing the default\ncan be useful when you always want to keep lines that begin\nwith comment character <b>#</b> in your log message, in\nwhich case you would do <b>git config commit.cleanup\nwhitespace</b> (note that you will have to remove the help\nlines that begin with <b>#</b> in the commit log template\nyourself, if you do this).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">commit.gpgSign</p>\n\n<p style=\"margin-left:17%;\">A boolean to specify whether\nall commits should be GPG signed. Use of this option when\ndoing operations such as rebase can result in a large number\nof commits being signed. It may be convenient to use an\nagent to avoid typing your GPG passphrase several times.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">commit.status</p>\n\n<p style=\"margin-left:17%;\">A boolean to enable/disable\ninclusion of status information in the commit message\ntemplate when using an editor to prepare the commit message.\nDefaults to true.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">commit.template</p>\n\n<p style=\"margin-left:17%;\">Specify the pathname of a file\nto use as the template for new commit messages.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">commit.verbose</p>\n\n<p style=\"margin-left:17%;\">A boolean or int to specify the\nlevel of verbose with <b>git commit</b>. See\n<a href=\"https://man.page/1/git-commit\">git-commit(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">commitGraph.generationVersion</p>\n\n<p style=\"margin-left:17%;\">Specifies the type of\ngeneration number version to use when writing or reading the\ncommit-graph file. If version 1 is specified, then the\ncorrected commit dates will not be written or read. Defaults\nto 2.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">commitGraph.maxNewFilters</p>\n\n<p style=\"margin-left:17%;\">Specifies the default value for\nthe <b>--max-new-filters</b> option of <b>git commit-graph\nwrite</b> (c.f., <a href=\"https://man.page/1/git-commit-graph\">git-commit-graph(1)</a>).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">commitGraph.readChangedPaths</p>\n\n<p style=\"margin-left:17%;\">If true, then git will use the\nchanged-path Bloom filters in the commit-graph file (if it\nexists, and they are present). Defaults to true. See\n<a href=\"https://man.page/1/git-commit-graph\">git-commit-graph(1)</a> for more information.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">credential.helper</p>\n\n<p style=\"margin-left:17%;\">Specify an external helper to\nbe called when a username or password credential is needed;\nthe helper may consult external storage to avoid prompting\nthe user for the credentials. This is normally the name of a\ncredential helper with possible arguments, but may also be\nan absolute path with arguments or, if preceded by <b>!</b>,\nshell commands.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that\nmultiple helpers may be defined. See\n<a href=\"https://man.page/7/gitcredentials\">gitcredentials(7)</a> for details and examples.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">credential.useHttpPath</p>\n\n<p style=\"margin-left:17%;\">When acquiring credentials,\nconsider the &quot;path&quot; component of an http or https\nURL to be important. Defaults to false. See\n<a href=\"https://man.page/7/gitcredentials\">gitcredentials(7)</a> for more information.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">credential.username</p>\n\n<p style=\"margin-left:17%;\">If no username is set for a\nnetwork authentication, use this username by default. See\ncredential.&lt;context&gt;.* below, and\n<a href=\"https://man.page/7/gitcredentials\">gitcredentials(7)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">credential.&lt;url&gt;.*</p>\n\n<p style=\"margin-left:17%;\">Any of the credential.* options\nabove can be applied selectively to some credentials. For\nexample &quot;credential.https://example.com.username&quot;\nwould set the default username only for https connections to\nexample.com. See <a href=\"https://man.page/7/gitcredentials\">gitcredentials(7)</a> for details on how\nURLs are matched.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">credentialCache.ignoreSIGHUP</p>\n\n<p style=\"margin-left:17%;\">Tell\ngit-credential-cache&mdash;daemon to ignore SIGHUP, instead\nof quitting.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">credentialStore.lockTimeoutMS</p>\n\n<p style=\"margin-left:17%;\">The length of time, in\nmilliseconds, for git-credential-store to retry when trying\nto lock the credentials file. Value 0 means not to retry at\nall; -1 means to try indefinitely. Default is 1000 (i.e.,\nretry for 1s).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">completion.commands</p>\n\n<p style=\"margin-left:17%;\">This is only used by\ngit-completion.bash to add or remove commands from the list\nof completed commands. Normally only porcelain commands and\na few select others are completed. You can add more\ncommands, separated by space, in this variable. Prefixing\nthe command with <i>-</i> will remove it from the existing\nlist.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.autoRefreshIndex</p>\n\n<p style=\"margin-left:17%;\">When using <i>git diff</i> to\ncompare with work tree files, do not consider stat-only\nchange as changed. Instead, silently run <b>git update-index\n--refresh</b> to update the cached stat information for\npaths whose contents in the work tree match the contents in\nthe index. This option defaults to true. Note that this\naffects only <i>git diff</i> Porcelain, and not lower level\n<i>diff</i> commands such as <i>git diff-files</i>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.dirstat</p>\n\n<p style=\"margin-left:17%;\">A comma separated list of\n<b>--dirstat</b> parameters specifying the default behavior\nof the <b>--dirstat</b> option to <a href=\"https://man.page/1/git-diff\">git-diff(1)</a> and\nfriends. The defaults can be overridden on the command line\n(using <b>--dirstat=&lt;param1,param2,...&gt;</b>). The\nfallback defaults (when not changed by <b>diff.dirstat</b>)\nare <b>changes,noncumulative,3</b>. The following parameters\nare available:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>changes</b></p>\n\n<p style=\"margin-left:23%;\">Compute the dirstat numbers by\ncounting the lines that have been removed from the source,\nor added to the destination. This ignores the amount of pure\ncode movements within a file. In other words, rearranging\nlines in a file is not counted as much as other changes.\nThis is the default behavior when no parameter is given.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>lines</b></p>\n\n<p style=\"margin-left:23%;\">Compute the dirstat numbers by\ndoing the regular line-based diff analysis, and summing the\nremoved/added line counts. (For binary files, count 64-byte\nchunks instead, since binary files have no natural concept\nof lines). This is a more expensive <b>--dirstat</b>\nbehavior than the <b>changes</b> behavior, but it does count\nrearranged lines within a file as much as other changes. The\nresulting output is consistent with what you get from the\nother <b>--*stat</b> options.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>files</b></p>\n\n<p style=\"margin-left:23%;\">Compute the dirstat numbers by\ncounting the number of files changed. Each changed file\ncounts equally in the dirstat analysis. This is the\ncomputationally cheapest <b>--dirstat</b> behavior, since it\ndoes not have to look at the file contents at all.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>cumulative</b></p>\n\n<p style=\"margin-left:23%;\">Count changes in a child\ndirectory for the parent directory as well. Note that when\nusing <b>cumulative</b>, the sum of the percentages reported\nmay exceed 100%. The default (non-cumulative) behavior can\nbe specified with the <b>noncumulative</b> parameter.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">&lt;limit&gt;</p>\n\n<p style=\"margin-left:23%;\">An integer parameter specifies\na cut-off percent (3% by default). Directories contributing\nless than this percentage of the changes are not shown in\nthe output.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Example: The\nfollowing will count changed files, while ignoring\ndirectories with less than 10% of the total amount of\nchanged files, and accumulating child directory counts in\nthe parent directories: <b>files,10,cumulative</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.statGraphWidth</p>\n\n<p style=\"margin-left:17%;\">Limit the width of the graph\npart in --stat output. If set, applies to all commands\ngenerating --stat output except format-patch.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.context</p>\n\n<p style=\"margin-left:17%;\">Generate diffs with &lt;n&gt;\nlines of context instead of the default of 3. This value is\noverridden by the -U option.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.interHunkContext</p>\n\n<p style=\"margin-left:17%;\">Show the context between diff\nhunks, up to the specified number of lines, thereby fusing\nthe hunks that are close to each other. This value serves as\nthe default for the <b>--inter-hunk-context</b> command line\noption.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.external</p>\n\n<p style=\"margin-left:17%;\">If this config variable is set,\ndiff generation is not performed using the internal diff\nmachinery, but using the given command. Can be overridden\nwith the &rsquo;GIT_EXTERNAL_DIFF&rsquo; environment\nvariable. The command is called with parameters as described\nunder &quot;git Diffs&quot; in <a href=\"https://man.page/1/git\">git(1)</a>. Note: if you\nwant to use an external diff program only on a subset of\nyour files, you might want to use <a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a>\ninstead.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.ignoreSubmodules</p>\n\n<p style=\"margin-left:17%;\">Sets the default value of\n--ignore-submodules. Note that this affects only <i>git\ndiff</i> Porcelain, and not lower level <i>diff</i> commands\nsuch as <i>git diff-files</i>. <i>git checkout</i> and\n<i>git switch</i> also honor this setting when reporting\nuncommitted changes. Setting it to <i>all</i> disables the\nsubmodule summary normally shown by <i>git commit</i> and\n<i>git status</i> when <b>status.submoduleSummary</b> is set\nunless it is overridden by using the --ignore-submodules\ncommand-line option. The <i>git submodule</i> commands are\nnot affected by this setting. By default this is set to\nuntracked so that any untracked submodules are ignored.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.mnemonicPrefix</p>\n\n<p style=\"margin-left:17%;\">If set, <i>git diff</i> uses a\nprefix pair that is different from the standard\n&quot;a/&quot; and &quot;b/&quot; depending on what is being\ncompared. When this configuration is in effect, reverse diff\noutput also swaps the order of the prefixes:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>git\ndiff</b></p>\n\n<p style=\"margin-left:23%;\">compares the (i)ndex and the\n(w)ork tree;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>git diff\nHEAD</b></p>\n\n<p style=\"margin-left:23%;\">compares a (c)ommit and the\n(w)ork tree;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>git diff\n--cached</b></p>\n\n<p style=\"margin-left:23%;\">compares a (c)ommit and the\n(i)ndex;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>git diff\nHEAD:file1 file2</b></p>\n\n<p style=\"margin-left:23%;\">compares an (o)bject and a\n(w)ork tree entity;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>git diff\n--no-index a b</b></p>\n\n<p style=\"margin-left:23%;\">compares two non-git things (1)\nand (2).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.noprefix</p>\n\n<p style=\"margin-left:17%;\">If set, <i>git diff</i> does\nnot show any source or destination prefix.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.relative</p>\n\n<p style=\"margin-left:17%;\">If set to <i>true</i>, <i>git\ndiff</i> does not show changes outside of the directory and\nshow pathnames relative to the current directory.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.orderFile</p>\n\n<p style=\"margin-left:17%;\">File indicating how to order\nfiles within a diff. See the <i>-O</i> option to\n<a href=\"https://man.page/1/git-diff\">git-diff(1)</a> for details. If <b>diff.orderFile</b> is\na relative pathname, it is treated as relative to the top of\nthe working tree.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.renameLimit</p>\n\n<p style=\"margin-left:17%;\">The number of files to consider\nin the exhaustive portion of copy/rename detection;\nequivalent to the <i>git diff</i> option <b>-l</b>. If not\nset, the default value is currently 1000. This setting has\nno effect if rename detection is turned off.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.renames</p>\n\n<p style=\"margin-left:17%;\">Whether and how Git detects\nrenames. If set to &quot;false&quot;, rename detection is\ndisabled. If set to &quot;true&quot;, basic rename detection\nis enabled. If set to &quot;copies&quot; or\n&quot;copy&quot;, Git will detect copies, as well. Defaults\nto true. Note that this affects only <i>git diff</i>\nPorcelain like <a href=\"https://man.page/1/git-diff\">git-diff(1)</a> and <a href=\"https://man.page/1/git-log\">git-log(1)</a>, and\nnot lower level commands such as\n<a href=\"https://man.page/1/git-diff-files\">git-diff-files(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.suppressBlankEmpty</p>\n\n<p style=\"margin-left:17%;\">A boolean to inhibit the\nstandard behavior of printing a space before each empty\noutput line. Defaults to false.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.submodule</p>\n\n<p style=\"margin-left:17%;\">Specify the format in which\ndifferences in submodules are shown. The &quot;short&quot;\nformat just shows the names of the commits at the beginning\nand end of the range. The &quot;log&quot; format lists the\ncommits in the range like <a href=\"https://man.page/1/git-submodule\">git-submodule(1)</a>\n<b>summary</b> does. The &quot;diff&quot; format shows an\ninline diff of the changed contents of the submodule.\nDefaults to &quot;short&quot;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.wordRegex</p>\n\n<p style=\"margin-left:17%;\">A POSIX Extended Regular\nExpression used to determine what is a &quot;word&quot; when\nperforming word-by-word difference calculations. Character\nsequences that match the regular expression are\n&quot;words&quot;, all other characters are <b>ignorable</b>\nwhitespace.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.&lt;driver&gt;.command</p>\n\n<p style=\"margin-left:17%;\">The custom diff driver command.\nSee <a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a> for details.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.&lt;driver&gt;.xfuncname</p>\n\n<p style=\"margin-left:17%;\">The regular expression that the\ndiff driver should use to recognize the hunk header. A\nbuilt-in pattern may also be used. See\n<a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a> for details.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.&lt;driver&gt;.binary</p>\n\n<p style=\"margin-left:17%;\">Set this option to true to make\nthe diff driver treat files as binary. See\n<a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a> for details.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.&lt;driver&gt;.textconv</p>\n\n<p style=\"margin-left:17%;\">The command that the diff\ndriver should call to generate the text-converted version of\na file. The result of the conversion is used to generate a\nhuman-readable diff. See <a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a> for\ndetails.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.&lt;driver&gt;.wordRegex</p>\n\n<p style=\"margin-left:17%;\">The regular expression that the\ndiff driver should use to split words in a line. See\n<a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a> for details.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.&lt;driver&gt;.cachetextconv</p>\n\n<p style=\"margin-left:17%;\">Set this option to true to make\nthe diff driver cache the text conversion outputs. See\n<a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a> for details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.tool</p>\n\n<p style=\"margin-left:17%;\">Controls which diff tool is\nused by <a href=\"https://man.page/1/git-difftool\">git-difftool(1)</a>. This variable overrides the\nvalue configured in <b>merge.tool</b>. The list below shows\nthe valid built-in values. Any other value is treated as a\ncustom diff tool and requires that a corresponding\ndifftool.&lt;tool&gt;.cmd variable is defined.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.guitool</p>\n\n<p style=\"margin-left:17%;\">Controls which diff tool is\nused by <a href=\"https://man.page/1/git-difftool\">git-difftool(1)</a> when the -g/--gui flag is\nspecified. This variable overrides the value configured in\n<b>merge.guitool</b>. The list below shows the valid\nbuilt-in values. Any other value is treated as a custom diff\ntool and requires that a corresponding\ndifftool.&lt;guitool&gt;.cmd variable is defined.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\naraxis</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull; bc</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull; bc3</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull; bc4</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\ncodecompare</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\ndeltawalker</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\ndiffmerge</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\ndiffuse</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\necmerge</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nemerge</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nexamdiff</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nguiffy</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\ngvimdiff</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\ngvimdiff1</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\ngvimdiff2</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\ngvimdiff3</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nkdiff3</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nkompare</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull; meld</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nnvimdiff</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nnvimdiff1</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nnvimdiff2</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nnvimdiff3</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nopendiff</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\np4merge</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nsmerge</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\ntkdiff</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nvimdiff</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nvimdiff1</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nvimdiff2</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nvimdiff3</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nwinmerge</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\nxxdiff</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.indentHeuristic</p>\n\n<p style=\"margin-left:17%;\">Set this option to <b>false</b>\nto disable the default heuristics that shift diff hunk\nboundaries to make patches easier to read.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.algorithm</p>\n\n<p style=\"margin-left:17%;\">Choose a diff algorithm. The\nvariants are as follows:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>default</b>,\n<b>myers</b></p>\n\n<p style=\"margin-left:23%;\">The basic greedy diff\nalgorithm. Currently, this is the default.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>minimal</b></p>\n\n<p style=\"margin-left:23%;\">Spend extra time to make sure\nthe smallest possible diff is produced.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>patience</b></p>\n\n<p style=\"margin-left:23%;\">Use &quot;patience diff&quot;\nalgorithm when generating patches.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>histogram</b></p>\n\n<p style=\"margin-left:23%;\">This algorithm extends the\npatience algorithm to &quot;support low-occurrence common\nelements&quot;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.wsErrorHighlight</p>\n\n<p style=\"margin-left:17%;\">Highlight whitespace errors in\nthe <b>context</b>, <b>old</b> or <b>new</b> lines of the\ndiff. Multiple values are separated by comma, <b>none</b>\nresets previous values, <b>default</b> reset the list to\n<b>new</b> and <b>all</b> is a shorthand for\n<b>old,new,context</b>. The whitespace errors are colored\nwith <b>color.diff.whitespace</b>. The command line option\n<b>--ws-error-highlight=&lt;kind&gt;</b> overrides this\nsetting.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.colorMoved</p>\n\n<p style=\"margin-left:17%;\">If set to either a valid\n<b>&lt;mode&gt;</b> or a true value, moved lines in a diff\nare colored differently, for details of valid modes see\n<i>--color-moved</i> in <a href=\"https://man.page/1/git-diff\">git-diff(1)</a>. If simply set to\ntrue the default color mode will be used. When set to false,\nmoved lines are not colored.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">diff.colorMovedWS</p>\n\n<p style=\"margin-left:17%;\">When moved lines are colored\nusing e.g. the <b>diff.colorMoved</b> setting, this option\ncontrols the <b>&lt;mode&gt;</b> how spaces are treated for\ndetails of valid modes see <i>--color-moved-ws</i> in\n<a href=\"https://man.page/1/git-diff\">git-diff(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">difftool.&lt;tool&gt;.path</p>\n\n<p style=\"margin-left:17%;\">Override the path for the given\ntool. This is useful in case your tool is not in the\nPATH.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">difftool.&lt;tool&gt;.cmd</p>\n\n<p style=\"margin-left:17%;\">Specify the command to invoke\nthe specified diff tool. The specified command is evaluated\nin shell with the following variables available:\n<i>LOCAL</i> is set to the name of the temporary file\ncontaining the contents of the diff pre-image and\n<i>REMOTE</i> is set to the name of the temporary file\ncontaining the contents of the diff post-image.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">difftool.prompt</p>\n\n<p style=\"margin-left:17%;\">Prompt before each invocation\nof the diff tool.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">extensions.objectFormat</p>\n\n<p style=\"margin-left:17%;\">Specify the hash algorithm to\nuse. The acceptable values are <b>sha1</b> and\n<b>sha256</b>. If not specified, <b>sha1</b> is assumed. It\nis an error to specify this key unless\n<b>core.repositoryFormatVersion</b> is 1.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that this\nsetting should only be set by <a href=\"https://man.page/1/git-init\">git-init(1)</a> or\n<a href=\"https://man.page/1/git-clone\">git-clone(1)</a>. Trying to change it after\ninitialization will not work and will produce\nhard-to-diagnose issues.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">fastimport.unpackLimit</p>\n\n<p style=\"margin-left:17%;\">If the number of objects\nimported by <a href=\"https://man.page/1/git-fast-import\">git-fast-import(1)</a> is below this limit,\nthen the objects will be unpacked into loose object files.\nHowever if the number of imported objects equals or exceeds\nthis limit then the pack will be stored as a pack. Storing\nthe pack from a fast-import can make the import operation\ncomplete faster, especially on slow filesystems. If not set,\nthe value of <b>transfer.unpackLimit</b> is used\ninstead.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">feature.*</p>\n\n<p style=\"margin-left:17%;\">The config settings that start\nwith <b>feature.</b> modify the defaults of a group of other\nconfig settings. These groups are created by the Git\ndeveloper community as recommended defaults and are subject\nto change. In particular, new config options may be added\nwith different defaults.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">feature.experimental</p>\n\n<p style=\"margin-left:17%;\">Enable config options that are\nnew to Git, and are being considered for future defaults.\nConfig settings included here may be added or removed with\neach release, including minor version updates. These\nsettings may have unintended interactions since they are so\nnew. Please enable this setting if you are interested in\nproviding feedback on experimental features. The new default\nvalues are:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<b>fetch.negotiationAlgorithm=skipping</b> may improve fetch\nnegotiation times by skipping more commits at a time,\nreducing the number of round trips.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">feature.manyFiles</p>\n\n<p style=\"margin-left:17%;\">Enable config options that\noptimize for repos with many files in the working directory.\nWith many files, commands such as <b>git status</b> and\n<b>git checkout</b> may be slow and these new defaults\nimprove performance:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<b>index.version=4</b> enables path-prefix compression in\nthe index.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<b>core.untrackedCache=true</b> enables the untracked cache.\nThis setting assumes that mtime is working on your\nmachine.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">fetch.recurseSubmodules</p>\n\n<p style=\"margin-left:17%;\">This option controls whether\n<b>git fetch</b> (and the underlying fetch in <b>git\npull</b>) will recursively fetch into populated submodules.\nThis option can be set either to a boolean value or to\n<i>on-demand</i>. Setting it to a boolean changes the\nbehavior of fetch and pull to recurse unconditionally into\nsubmodules when set to true or to not recurse at all when\nset to false. When set to <i>on-demand</i>, fetch and pull\nwill only recurse into a populated submodule when its\nsuperproject retrieves a commit that updates the\nsubmodule&rsquo;s reference. Defaults to <i>on-demand</i>,\nor to the value of <i>submodule.recurse</i> if set.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">fetch.fsckObjects</p>\n\n<p style=\"margin-left:17%;\">If it is set to true,\ngit-fetch-pack will check all fetched objects. See\n<b>transfer.fsckObjects</b> for what&rsquo;s checked.\nDefaults to false. If not set, the value of\n<b>transfer.fsckObjects</b> is used instead.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">fetch.fsck.&lt;msg-id&gt;</p>\n\n<p style=\"margin-left:17%;\">Acts like\n<b>fsck.&lt;msg-id&gt;</b>, but is used by\n<a href=\"https://man.page/1/git-fetch-pack\">git-fetch-pack(1)</a> instead of <a href=\"https://man.page/1/git-fsck\">git-fsck(1)</a>. See\nthe <b>fsck.&lt;msg-id&gt;</b> documentation for\ndetails.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">fetch.fsck.skipList</p>\n\n<p style=\"margin-left:17%;\">Acts like <b>fsck.skipList</b>,\nbut is used by <a href=\"https://man.page/1/git-fetch-pack\">git-fetch-pack(1)</a> instead of\n<a href=\"https://man.page/1/git-fsck\">git-fsck(1)</a>. See the <b>fsck.skipList</b>\ndocumentation for details.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">fetch.unpackLimit</p>\n\n<p style=\"margin-left:17%;\">If the number of objects\nfetched over the Git native transfer is below this limit,\nthen the objects will be unpacked into loose object files.\nHowever if the number of received objects equals or exceeds\nthis limit then the received pack will be stored as a pack,\nafter adding any missing delta bases. Storing the pack from\na push can make the push operation complete faster,\nespecially on slow filesystems. If not set, the value of\n<b>transfer.unpackLimit</b> is used instead.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">fetch.prune</p>\n\n<p style=\"margin-left:17%;\">If true, fetch will\nautomatically behave as if the <b>--prune</b> option was\ngiven on the command line. See also\n<b>remote.&lt;name&gt;.prune</b> and the PRUNING section of\n<a href=\"https://man.page/1/git-fetch\">git-fetch(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">fetch.pruneTags</p>\n\n<p style=\"margin-left:17%;\">If true, fetch will\nautomatically behave as if the\n<b>refs/tags/*:refs/tags/*</b> refspec was provided when\npruning, if not set already. This allows for setting both\nthis option and <b>fetch.prune</b> to maintain a 1=1 mapping\nto upstream refs. See also\n<b>remote.&lt;name&gt;.pruneTags</b> and the PRUNING section\nof <a href=\"https://man.page/1/git-fetch\">git-fetch(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">fetch.output</p>\n\n<p style=\"margin-left:17%;\">Control how ref update status\nis printed. Valid values are <b>full</b> and <b>compact</b>.\nDefault value is <b>full</b>. See section OUTPUT in\n<a href=\"https://man.page/1/git-fetch\">git-fetch(1)</a> for detail.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">fetch.negotiationAlgorithm</p>\n\n<p style=\"margin-left:17%;\">Control how information about\nthe commits in the local repository is sent when negotiating\nthe contents of the packfile to be sent by the server. Set\nto &quot;skipping&quot; to use an algorithm that skips\ncommits in an effort to converge faster, but may result in a\nlarger-than-necessary packfile; or set to &quot;noop&quot;\nto not send any information at all, which will almost\ncertainly result in a larger-than-necessary packfile, but\nwill skip the negotiation step. The default is\n&quot;default&quot; which instructs Git to use the default\nalgorithm that never skips commits (unless the server has\nacknowledged it or one of its descendants). If\n<b>feature.experimental</b> is enabled, then this setting\ndefaults to &quot;skipping&quot;. Unknown values will cause\n<i>git fetch</i> to error out.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">See also the\n<b>--negotiate-only</b> and <b>--negotiation-tip</b> options\nto <a href=\"https://man.page/1/git-fetch\">git-fetch(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">fetch.showForcedUpdates</p>\n\n<p style=\"margin-left:17%;\">Set to false to enable\n<b>--no-show-forced-updates</b> in <a href=\"https://man.page/1/git-fetch\">git-fetch(1)</a> and\n<a href=\"https://man.page/1/git-pull\">git-pull(1)</a> commands. Defaults to true.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">fetch.parallel</p>\n\n<p style=\"margin-left:17%;\">Specifies the maximal number of\nfetch operations to be run in parallel at a time\n(submodules, or remotes when the <b>--multiple</b> option of\n<a href=\"https://man.page/1/git-fetch\">git-fetch(1)</a> is in effect).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">A value of 0\nwill give some reasonable default. If unset, it defaults to\n1.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For submodules,\nthis setting can be overridden using the\n<b>submodule.fetchJobs</b> config setting.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">fetch.writeCommitGraph</p>\n\n<p style=\"margin-left:17%;\">Set to true to write a\ncommit-graph after every <b>git fetch</b> command that\ndownloads a pack-file from a remote. Using the\n<b>--split</b> option, most executions will create a very\nsmall commit-graph file on top of the existing commit-graph\nfile(s). Occasionally, these files will merge and the write\nmay take longer. Having an updated commit-graph file helps\nperformance of many Git commands, including <b>git\nmerge-base</b>, <b>git push -f</b>, and <b>git log\n--graph</b>. Defaults to false.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">format.attach</p>\n\n<p style=\"margin-left:17%;\">Enable multipart/mixed\nattachments as the default for <i>format-patch</i>. The\nvalue can also be a double quoted string which will enable\nattachments as the default and set the value as the\nboundary. See the --attach option in\n<a href=\"https://man.page/1/git-format-patch\">git-format-patch(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">format.from</p>\n\n<p style=\"margin-left:17%;\">Provides the default value for\nthe <b>--from</b> option to format-patch. Accepts a boolean\nvalue, or a name and email address. If false, format-patch\ndefaults to <b>--no-from</b>, using commit authors directly\nin the &quot;From:&quot; field of patch mails. If true,\nformat-patch defaults to <b>--from</b>, using your committer\nidentity in the &quot;From:&quot; field of patch mails and\nincluding a &quot;From:&quot; field in the body of the patch\nmail if different. If set to a non-boolean value,\nformat-patch uses that value instead of your committer\nidentity. Defaults to false.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">format.numbered</p>\n\n<p style=\"margin-left:17%;\">A boolean which can enable or\ndisable sequence numbers in patch subjects. It defaults to\n&quot;auto&quot; which enables it only if there is more than\none patch. It can be enabled or disabled for all messages by\nsetting it to &quot;true&quot; or &quot;false&quot;. See\n--numbered option in <a href=\"https://man.page/1/git-format-patch\">git-format-patch(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">format.headers</p>\n\n<p style=\"margin-left:17%;\">Additional email headers to\ninclude in a patch to be submitted by mail. See\n<a href=\"https://man.page/1/git-format-patch\">git-format-patch(1)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">format.to,\nformat.cc</p>\n\n<p style=\"margin-left:17%;\">Additional recipients to\ninclude in a patch to be submitted by mail. See the --to and\n--cc options in <a href=\"https://man.page/1/git-format-patch\">git-format-patch(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">format.subjectPrefix</p>\n\n<p style=\"margin-left:17%;\">The default for format-patch is\nto output files with the <i>[PATCH]</i> subject prefix. Use\nthis variable to change that prefix.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">format.coverFromDescription</p>\n\n<p style=\"margin-left:17%;\">The default mode for\nformat-patch to determine which parts of the cover letter\nwill be populated using the branch&rsquo;s description. See\nthe <b>--cover-from-description</b> option in\n<a href=\"https://man.page/1/git-format-patch\">git-format-patch(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">format.signature</p>\n\n<p style=\"margin-left:17%;\">The default for format-patch is\nto output a signature containing the Git version number. Use\nthis variable to change that default. Set this variable to\nthe empty string (&quot;&quot;) to suppress signature\ngeneration.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">format.signatureFile</p>\n\n<p style=\"margin-left:17%;\">Works just like\nformat.signature except the contents of the file specified\nby this variable will be used as the signature.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">format.suffix</p>\n\n<p style=\"margin-left:17%;\">The default for format-patch is\nto output files with the suffix <b>.patch</b>. Use this\nvariable to change that suffix (make sure to include the dot\nif you want it).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">format.encodeEmailHeaders</p>\n\n<p style=\"margin-left:17%;\">Encode email headers that have\nnon-ASCII characters with &quot;Q-encoding&quot; (described\nin RFC 2047) for email transmission. Defaults to true.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">format.pretty</p>\n\n<p style=\"margin-left:17%;\">The default pretty format for\nlog/show/whatchanged command, See <a href=\"https://man.page/1/git-log\">git-log(1)</a>,\n<a href=\"https://man.page/1/git-show\">git-show(1)</a>, <a href=\"https://man.page/1/git-whatchanged\">git-whatchanged(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">format.thread</p>\n\n<p style=\"margin-left:17%;\">The default threading style for\n<i>git format-patch</i>. Can be a boolean value, or\n<b>shallow</b> or <b>deep</b>. <b>shallow</b> threading\nmakes every mail a reply to the head of the series, where\nthe head is chosen from the cover letter, the\n<b>--in-reply-to</b>, and the first patch mail, in this\norder. <b>deep</b> threading makes every mail a reply to the\nprevious one. A true boolean value is the same as\n<b>shallow</b>, and a false value disables threading.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">format.signOff</p>\n\n<p style=\"margin-left:17%;\">A boolean value which lets you\nenable the <b>-s/--signoff</b> option of format-patch by\ndefault. <b>Note:</b> Adding the <b>Signed-off-by</b>\ntrailer to a patch should be a conscious act and means that\nyou certify you have the rights to submit this work under\nthe same open source license. Please see the\n<i>SubmittingPatches</i> document for further\ndiscussion.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">format.coverLetter</p>\n\n<p style=\"margin-left:17%;\">A boolean that controls whether\nto generate a cover-letter when format-patch is invoked, but\nin addition can be set to &quot;auto&quot;, to generate a\ncover-letter only when there&rsquo;s more than one patch.\nDefault is false.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">format.outputDirectory</p>\n\n<p style=\"margin-left:17%;\">Set a custom directory to store\nthe resulting files instead of the current working\ndirectory. All directory components will be created.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">format.filenameMaxLength</p>\n\n<p style=\"margin-left:17%;\">The maximum length of the\noutput filenames generated by the <b>format-patch</b>\ncommand; defaults to 64. Can be overridden by the\n<b>--filename-max-length=&lt;n&gt;</b> command line\noption.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">format.useAutoBase</p>\n\n<p style=\"margin-left:17%;\">A boolean value which lets you\nenable the <b>--base=auto</b> option of format-patch by\ndefault. Can also be set to &quot;whenAble&quot; to allow\nenabling <b>--base=auto</b> if a suitable base is available,\nbut to skip adding base info otherwise without the format\ndying.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">format.notes</p>\n\n<p style=\"margin-left:17%;\">Provides the default value for\nthe <b>--notes</b> option to format-patch. Accepts a boolean\nvalue, or a ref which specifies where to get notes. If\nfalse, format-patch defaults to <b>--no-notes</b>. If true,\nformat-patch defaults to <b>--notes</b>. If set to a\nnon-boolean value, format-patch defaults to\n<b>--notes=&lt;ref&gt;</b>, where <b>ref</b> is the\nnon-boolean value. Defaults to false.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If one wishes\nto use the ref <b>ref/notes/true</b>, please use that\nliteral instead.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This\nconfiguration can be specified multiple times in order to\nallow multiple notes refs to be included. In that case, it\nwill behave similarly to multiple <b>--[no-]notes[=]</b>\noptions passed in. That is, a value of <b>true</b> will show\nthe default notes, a value of <b>&lt;ref&gt;</b> will also\nshow notes from that notes ref and a value of <b>false</b>\nwill negate previous configurations and not show notes.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For\nexample,</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">[format] <br>\nnotes = true <br>\nnotes = foo <br>\nnotes = false <br>\nnotes = bar</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">will only show\nnotes from <b>refs/notes/bar</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">filter.&lt;driver&gt;.clean</p>\n\n<p style=\"margin-left:17%;\">The command which is used to\nconvert the content of a worktree file to a blob upon\ncheckin. See <a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a> for details.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">filter.&lt;driver&gt;.smudge</p>\n\n<p style=\"margin-left:17%;\">The command which is used to\nconvert the content of a blob object to a worktree file upon\ncheckout. See <a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a> for details.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">fsck.&lt;msg-id&gt;</p>\n\n<p style=\"margin-left:17%;\">During fsck git may find issues\nwith legacy data which wouldn&rsquo;t be generated by\ncurrent versions of git, and which wouldn&rsquo;t be sent\nover the wire if <b>transfer.fsckObjects</b> was set. This\nfeature is intended to support working with legacy\nrepositories containing such data.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Setting\n<b>fsck.&lt;msg-id&gt;</b> will be picked up by\n<a href=\"https://man.page/1/git-fsck\">git-fsck(1)</a>, but to accept pushes of such data set\n<b>receive.fsck.&lt;msg-id&gt;</b> instead, or to clone or\nfetch it set <b>fetch.fsck.&lt;msg-id&gt;</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The rest of the\ndocumentation discusses <b>fsck.*</b> for brevity, but the\nsame applies for the corresponding <b>receive.fsck.*</b> and\n<b>fetch.&lt;msg-id&gt;.*</b>. variables.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Unlike\nvariables like <b>color.ui</b> and <b>core.editor</b> the\n<b>receive.fsck.&lt;msg-id&gt;</b> and\n<b>fetch.fsck.&lt;msg-id&gt;</b> variables will not fall\nback on the <b>fsck.&lt;msg-id&gt;</b> configuration if they\naren&rsquo;t set. To uniformly configure the same fsck\nsettings in different circumstances all three of them they\nmust all set to the same values.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When\n<b>fsck.&lt;msg-id&gt;</b> is set, errors can be switched to\nwarnings and vice versa by configuring the\n<b>fsck.&lt;msg-id&gt;</b> setting where the\n<b>&lt;msg-id&gt;</b> is the fsck message ID and the value\nis one of <b>error</b>, <b>warn</b> or <b>ignore</b>. For\nconvenience, fsck prefixes the error/warning with the\nmessage ID, e.g. &quot;missingEmail: invalid\nauthor/committer line - missing email&quot; means that\nsetting <b>fsck.missingEmail = ignore</b> will hide that\nissue.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">In general, it\nis better to enumerate existing objects with problems with\n<b>fsck.skipList</b>, instead of listing the kind of\nbreakages these problematic objects share to be ignored, as\ndoing the latter will allow new instances of the same\nbreakages go unnoticed.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Setting an\nunknown <b>fsck.&lt;msg-id&gt;</b> value will cause fsck to\ndie, but doing the same for\n<b>receive.fsck.&lt;msg-id&gt;</b> and\n<b>fetch.fsck.&lt;msg-id&gt;</b> will only cause git to\nwarn.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">fsck.skipList</p>\n\n<p style=\"margin-left:17%;\">The path to a list of object\nnames (i.e. one unabbreviated SHA-1 per line) that are known\nto be broken in a non-fatal way and should be ignored. On\nversions of Git 2.20 and later comments (<i>#</i>), empty\nlines, and any leading and trailing whitespace is ignored.\nEverything but a SHA-1 per line will error out on older\nversions.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This feature is\nuseful when an established project should be accepted\ndespite early commits containing errors that can be safely\nignored such as invalid committer email addresses. Note:\ncorrupt objects cannot be skipped with this setting.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Like\n<b>fsck.&lt;msg-id&gt;</b> this variable has corresponding\n<b>receive.fsck.skipList</b> and <b>fetch.fsck.skipList</b>\nvariants.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Unlike\nvariables like <b>color.ui</b> and <b>core.editor</b> the\n<b>receive.fsck.skipList</b> and <b>fetch.fsck.skipList</b>\nvariables will not fall back on the <b>fsck.skipList</b>\nconfiguration if they aren&rsquo;t set. To uniformly\nconfigure the same fsck settings in different circumstances\nall three of them they must all set to the same values.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Older versions\nof Git (before 2.20) documented that the object names list\nshould be sorted. This was never a requirement, the object\nnames could appear in any order, but when reading the list\nwe tracked whether the list was sorted for the purposes of\nan internal binary search implementation, which could save\nitself some work with an already sorted list. Unless you had\na humongous list there was no reason to go out of your way\nto pre-sort the list. After Git version 2.20 a hash\nimplementation is used instead, so there&rsquo;s now no\nreason to pre-sort the list.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gc.aggressiveDepth</p>\n\n<p style=\"margin-left:17%;\">The depth parameter used in the\ndelta compression algorithm used by <i>git gc\n--aggressive</i>. This defaults to 50, which is the default\nfor the <b>--depth</b> option when <b>--aggressive</b>\nisn&rsquo;t in use.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">See the\ndocumentation for the <b>--depth</b> option in\n<a href=\"https://man.page/1/git-repack\">git-repack(1)</a> for more details.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gc.aggressiveWindow</p>\n\n<p style=\"margin-left:17%;\">The window size parameter used\nin the delta compression algorithm used by <i>git gc\n--aggressive</i>. This defaults to 250, which is a much more\naggressive window size than the default <b>--window</b> of\n10.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">See the\ndocumentation for the <b>--window</b> option in\n<a href=\"https://man.page/1/git-repack\">git-repack(1)</a> for more details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">gc.auto</p>\n\n<p style=\"margin-left:17%;\">When there are approximately\nmore than this many loose objects in the repository, <b>git\ngc --auto</b> will pack them. Some Porcelain commands use\nthis command to perform a light-weight garbage collection\nfrom time to time. The default value is 6700.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Setting this to\n0 disables not only automatic packing based on the number of\nloose objects, but any other heuristic <b>git gc --auto</b>\nwill otherwise use to determine if there&rsquo;s work to do,\nsuch as <b>gc.autoPackLimit</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gc.autoPackLimit</p>\n\n<p style=\"margin-left:17%;\">When there are more than this\nmany packs that are not marked with <b>*.keep</b> file in\nthe repository, <b>git gc --auto</b> consolidates them into\none larger pack. The default value is 50. Setting this to 0\ndisables it. Setting <b>gc.auto</b> to 0 will also disable\nthis.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">See the\n<b>gc.bigPackThreshold</b> configuration variable below.\nWhen in use, it&rsquo;ll affect how the auto pack limit\nworks.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gc.autoDetach</p>\n\n<p style=\"margin-left:17%;\">Make <b>git gc --auto</b>\nreturn immediately and run in background if the system\nsupports it. Default is true.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gc.bigPackThreshold</p>\n\n<p style=\"margin-left:17%;\">If non-zero, all packs larger\nthan this limit are kept when <b>git gc</b> is run. This is\nvery similar to <b>--keep-largest-pack</b> except that all\npacks that meet the threshold are kept, not just the largest\npack. Defaults to zero. Common unit suffixes of <i>k</i>,\n<i>m</i>, or <i>g</i> are supported.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that if\nthe number of kept packs is more than gc.autoPackLimit, this\nconfiguration variable is ignored, all packs except the base\npack will be repacked. After this the number of packs should\ngo below gc.autoPackLimit and gc.bigPackThreshold should be\nrespected again.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If the amount\nof memory estimated for <b>git repack</b> to run smoothly is\nnot available and <b>gc.bigPackThreshold</b> is not set, the\nlargest pack will also be excluded (this is the equivalent\nof running <b>git gc</b> with\n<b>--keep-largest-pack</b>).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gc.writeCommitGraph</p>\n\n<p style=\"margin-left:17%;\">If true, then gc will rewrite\nthe commit-graph file when <a href=\"https://man.page/1/git-gc\">git-gc(1)</a> is run. When\nusing <b>git gc --auto</b> the commit-graph will be updated\nif housekeeping is required. Default is true. See\n<a href=\"https://man.page/1/git-commit-graph\">git-commit-graph(1)</a> for details.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gc.logExpiry</p>\n\n<p style=\"margin-left:17%;\">If the file gc.log exists, then\n<b>git gc --auto</b> will print its content and exit with\nstatus zero instead of running unless that file is more than\n<i>gc.logExpiry</i> old. Default is &quot;1.day&quot;. See\n<b>gc.pruneExpire</b> for more ways to specify its\nvalue.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gc.packRefs</p>\n\n<p style=\"margin-left:17%;\">Running <b>git pack-refs</b> in\na repository renders it unclonable by Git versions prior to\n1.5.1.2 over dumb transports such as HTTP. This variable\ndetermines whether <i>git gc</i> runs <b>git pack-refs</b>.\nThis can be set to <b>notbare</b> to enable it within all\nnon-bare repos or it can be set to a boolean value. The\ndefault is <b>true</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gc.pruneExpire</p>\n\n<p style=\"margin-left:17%;\">When <i>git gc</i> is run, it\nwill call <i>prune --expire 2.weeks.ago</i>. Override the\ngrace period with this config variable. The value\n&quot;now&quot; may be used to disable this grace period and\nalways prune unreachable objects immediately, or\n&quot;never&quot; may be used to suppress pruning. This\nfeature helps prevent corruption when <i>git gc</i> runs\nconcurrently with another process writing to the repository;\nsee the &quot;NOTES&quot; section of <a href=\"https://man.page/1/git-gc\">git-gc(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gc.worktreePruneExpire</p>\n\n<p style=\"margin-left:17%;\">When <i>git gc</i> is run, it\ncalls <i>git worktree prune --expire 3.months.ago</i>. This\nconfig variable can be used to set a different grace period.\nThe value &quot;now&quot; may be used to disable the grace\nperiod and prune <b>$GIT_DIR/worktrees</b> immediately, or\n&quot;never&quot; may be used to suppress pruning.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gc.reflogExpire,\ngc.&lt;pattern&gt;.reflogExpire</p>\n\n<p style=\"margin-left:17%;\"><i>git reflog expire</i>\nremoves reflog entries older than this time; defaults to 90\ndays. The value &quot;now&quot; expires all entries\nimmediately, and &quot;never&quot; suppresses expiration\naltogether. With &quot;&lt;pattern&gt;&quot; (e.g.\n&quot;refs/stash&quot;) in the middle the setting applies\nonly to the refs that match the &lt;pattern&gt;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gc.reflogExpireUnreachable,\ngc.&lt;pattern&gt;.reflogExpireUnreachable</p>\n\n<p style=\"margin-left:17%;\"><i>git reflog expire</i>\nremoves reflog entries older than this time and are not\nreachable from the current tip; defaults to 30 days. The\nvalue &quot;now&quot; expires all entries immediately, and\n&quot;never&quot; suppresses expiration altogether. With\n&quot;&lt;pattern&gt;&quot; (e.g. &quot;refs/stash&quot;) in\nthe middle, the setting applies only to the refs that match\nthe &lt;pattern&gt;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">These types of\nentries are generally created as a result of using <b>git\ncommit --amend</b> or <b>git rebase</b> and are the commits\nprior to the amend or rebase occurring. Since these changes\nare not part of the current project most users will want to\nexpire them sooner, which is why the default is more\naggressive than <b>gc.reflogExpire</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gc.rerereResolved</p>\n\n<p style=\"margin-left:17%;\">Records of conflicted merge you\nresolved earlier are kept for this many days when <i>git\nrerere gc</i> is run. You can also use more human-readable\n&quot;1.month.ago&quot;, etc. The default is 60 days. See\n<a href=\"https://man.page/1/git-rerere\">git-rerere(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gc.rerereUnresolved</p>\n\n<p style=\"margin-left:17%;\">Records of conflicted merge you\nhave not resolved are kept for this many days when <i>git\nrerere gc</i> is run. You can also use more human-readable\n&quot;1.month.ago&quot;, etc. The default is 15 days. See\n<a href=\"https://man.page/1/git-rerere\">git-rerere(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gitcvs.commitMsgAnnotation</p>\n\n<p style=\"margin-left:17%;\">Append this string to each\ncommit message. Set to empty string to disable this feature.\nDefaults to &quot;via git-CVS emulator&quot;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gitcvs.enabled</p>\n\n<p style=\"margin-left:17%;\">Whether the CVS server\ninterface is enabled for this repository. See\n<a href=\"https://man.page/1/git-cvsserver\">git-cvsserver(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gitcvs.logFile</p>\n\n<p style=\"margin-left:17%;\">Path to a log file where the\nCVS server interface well... logs various stuff. See\n<a href=\"https://man.page/1/git-cvsserver\">git-cvsserver(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gitcvs.usecrlfattr</p>\n\n<p style=\"margin-left:17%;\">If true, the server will look\nup the end-of-line conversion attributes for files to\ndetermine the <b>-k</b> modes to use. If the attributes\nforce Git to treat a file as text, the <b>-k</b> mode will\nbe left blank so CVS clients will treat it as text. If they\nsuppress text conversion, the file will be set with\n<i>-kb</i> mode, which suppresses any newline munging the\nclient might otherwise do. If the attributes do not allow\nthe file type to be determined, then <b>gitcvs.allBinary</b>\nis used. See <a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gitcvs.allBinary</p>\n\n<p style=\"margin-left:17%;\">This is used if\n<b>gitcvs.usecrlfattr</b> does not resolve the correct\n<i>-kb</i> mode to use. If true, all unresolved files are\nsent to the client in mode <i>-kb</i>. This causes the\nclient to treat them as binary files, which suppresses any\nnewline munging it otherwise might do. Alternatively, if it\nis set to &quot;guess&quot;, then the contents of the file\nare examined to decide if it is binary, similar to\n<b>core.autocrlf</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gitcvs.dbName</p>\n\n<p style=\"margin-left:17%;\">Database used by git-cvsserver\nto cache revision information derived from the Git\nrepository. The exact meaning depends on the used database\ndriver, for SQLite (which is the default driver) this is a\nfilename. Supports variable substitution (see\n<a href=\"https://man.page/1/git-cvsserver\">git-cvsserver(1)</a> for details). May not contain\nsemicolons (<b>;</b>). Default:\n<i>%Ggitcvs.%m.sqlite</i></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gitcvs.dbDriver</p>\n\n<p style=\"margin-left:17%;\">Used Perl DBI driver. You can\nspecify any available driver for this here, but it might not\nwork. git-cvsserver is tested with <i>DBD::SQLite</i>,\nreported to work with <i>DBD::Pg</i>, and reported\n<b>not</b> to work with <i>DBD::mysql</i>. Experimental\nfeature. May not contain double colons (<b>:</b>). Default:\n<i>SQLite</i>. See <a href=\"https://man.page/1/git-cvsserver\">git-cvsserver(1)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">gitcvs.dbUser,\ngitcvs.dbPass</p>\n\n<p style=\"margin-left:17%;\">Database user and password.\nOnly useful if setting <b>gitcvs.dbDriver</b>, since SQLite\nhas no concept of database users and/or passwords.\n<i>gitcvs.dbUser</i> supports variable substitution (see\n<a href=\"https://man.page/1/git-cvsserver\">git-cvsserver(1)</a> for details).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gitcvs.dbTableNamePrefix</p>\n\n<p style=\"margin-left:17%;\">Database table name prefix.\nPrepended to the names of any database tables used, allowing\na single database to be used for several repositories.\nSupports variable substitution (see <a href=\"https://man.page/1/git-cvsserver\">git-cvsserver(1)</a>\nfor details). Any non-alphabetic characters will be replaced\nwith underscores.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All gitcvs\nvariables except for <b>gitcvs.usecrlfattr</b> and\n<b>gitcvs.allBinary</b> can also be specified as\n<i>gitcvs.&lt;access_method&gt;.&lt;varname&gt;</i> (where\n<i>access_method</i> is one of &quot;ext&quot; and\n&quot;pserver&quot;) to make them apply only for the given\naccess method.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gitweb.category,\ngitweb.description, gitweb.owner, gitweb.url</p>\n\n<p style=\"margin-left:17%;\">See <a href=\"https://man.page/1/gitweb\">gitweb(1)</a> for\ndescription.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">gitweb.avatar,\ngitweb.blame, gitweb.grep, gitweb.highlight, gitweb.patches,\ngitweb.pickaxe, gitweb.remote_heads, gitweb.showSizes,\ngitweb.snapshot</p>\n\n<p style=\"margin-left:17%;\">See <b>gitweb.conf</b>(5) for\ndescription.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">grep.lineNumber</p>\n\n<p style=\"margin-left:17%;\">If set to true, enable\n<b>-n</b> option by default.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">grep.column</p>\n\n<p style=\"margin-left:17%;\">If set to true, enable the\n<b>--column</b> option by default.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">grep.patternType</p>\n\n<p style=\"margin-left:17%;\">Set the default matching\nbehavior. Using a value of <i>basic</i>, <i>extended</i>,\n<i>fixed</i>, or <i>perl</i> will enable the\n<b>--basic-regexp</b>, <b>--extended-regexp</b>,\n<b>--fixed-strings</b>, or <b>--perl-regexp</b> option\naccordingly, while the value <i>default</i> will return to\nthe default matching behavior.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">grep.extendedRegexp</p>\n\n<p style=\"margin-left:17%;\">If set to true, enable\n<b>--extended-regexp</b> option by default. This option is\nignored when the <b>grep.patternType</b> option is set to a\nvalue other than <i>default</i>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">grep.threads</p>\n\n<p style=\"margin-left:17%;\">Number of grep worker threads\nto use. See <b>grep.threads</b> in <a href=\"https://man.page/1/git-grep\">git-grep(1)</a> for\nmore information.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">grep.fallbackToNoIndex</p>\n\n<p style=\"margin-left:17%;\">If set to true, fall back to\ngit grep --no-index if git grep is executed outside of a git\nrepository. Defaults to false.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gpg.program</p>\n\n<p style=\"margin-left:17%;\">Use this custom program instead\nof &quot;<b>gpg</b>&quot; found on <b>$PATH</b> when making\nor verifying a PGP signature. The program must support the\nsame command-line interface as GPG, namely, to verify a\ndetached signature, &quot;<b>gpg --verify $signature -\n&lt;$file</b>&quot; is run, and the program is expected to\nsignal a good signature by exiting with code 0, and to\ngenerate an ASCII-armored detached signature, the standard\ninput of &quot;<b>gpg -bsau $key</b>&quot; is fed with the\ncontents to be signed, and the program is expected to send\nthe result to its standard output.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">gpg.format</p>\n\n<p style=\"margin-left:17%;\">Specifies which key format to\nuse when signing with <b>--gpg-sign</b>. Default is\n&quot;openpgp&quot;. Other possible values are\n&quot;x509&quot;, &quot;ssh&quot;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gpg.&lt;format&gt;.program</p>\n\n<p style=\"margin-left:17%;\">Use this to customize the\nprogram used for the signing format you chose. (see\n<b>gpg.program</b> and <b>gpg.format</b>) <b>gpg.program</b>\ncan still be used as a legacy synonym for\n<b>gpg.openpgp.program</b>. The default value for\n<b>gpg.x509.program</b> is &quot;gpgsm&quot; and\n<b>gpg.ssh.program</b> is &quot;ssh-keygen&quot;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gpg.minTrustLevel</p>\n\n<p style=\"margin-left:17%;\">Specifies a minimum trust level\nfor signature verification. If this option is unset, then\nsignature verification for merge operations require a key\nwith at least <b>marginal</b> trust. Other operations that\nperform signature verification require a key with at least\n<b>undefined</b> trust. Setting this option overrides the\nrequired trust-level for all operations. Supported values,\nin increasing order of significance:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<b>undefined</b></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<b>never</b></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<b>marginal</b></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<b>fully</b></p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">&bull;\n<b>ultimate</b></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gpg.ssh.defaultKeyCommand:\nThis command that will be run when user.signingkey is not\nset and a ssh signature is requested. On successful exit a\nvalid ssh public key is expected in the first line of its\noutput. To automatically use the first available key from\nyour ssh-agent set this to &quot;ssh-add -L&quot;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gpg.ssh.allowedSignersFile</p>\n\n<p style=\"margin-left:17%;\">A file containing ssh public\nkeys which you are willing to trust. The file consists of\none or more lines of principals followed by an ssh public\nkey. e.g.:\n<b><font color=\"#0000FF\">user1@example.com</font></b>\n<small><font color=\"#000000\">[1]</font></small>\n<font color=\"#000000\">,</font><b><font color=\"#0000FF\">user2@example.com</font></b>\n<small><font color=\"#000000\">[2]</font></small>\n<font color=\"#000000\">ssh-rsa AAAAX1... See ssh-keygen(1)\n&quot;ALLOWED SIGNERS&quot; for details. The principal is\nonly used to identify the key and is available when\nverifying a signature.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">SSH\nhas no concept of trust levels like gpg does. To be able to\ndifferentiate between valid signatures and trusted\nsignatures the trust level of a signature verification is\nset to <b>fully</b> when the public key is present in the\nallowedSignersFile. Otherwise the trust level is\n<b>undefined</b> and git verify-commit/tag will\nfail.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nfile can be set to a location outside of the repository and\nevery developer maintains their own trust store. A central\nrepository server could generate this file automatically\nfrom ssh keys with push access to verify the code against.\nIn a corporate setting this file is probably generated at a\nglobal location from automation that already handles\ndeveloper ssh keys.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">A\nrepository that only allows signed commits can store the\nfile in the repository itself using a path relative to the\ntop-level of the working tree. This way only committers with\nan already valid key can add or change keys in the\nkeyring.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Using\na SSH CA key with the cert-authority option (see\nssh-keygen(1) &quot;CERTIFICATES&quot;) is also\nvalid.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">gpg.ssh.revocationFile</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Either a\nSSH KRL or a list of revoked public keys (without the\nprincipal prefix). See ssh-keygen(1) for details. If a\npublic key is found in this file then it will always be\ntreated as having trust level &quot;never&quot; and\nsignatures will show as invalid.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">gui.commitMsgWidth</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Defines\nhow wide the commit message window is in the\n<a href=\"https://man.page/1/git-gui\">git-gui(1)</a>. &quot;75&quot; is the default.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">gui.diffContext</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specifies\nhow many context lines should be used in calls to diff made\nby the <a href=\"https://man.page/1/git-gui\">git-gui(1)</a>. The default is\n&quot;5&quot;.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">gui.displayUntracked</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Determines\nif <a href=\"https://man.page/1/git-gui\">git-gui(1)</a> shows untracked files in the file list.\nThe default is &quot;true&quot;.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">gui.encoding</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specifies\nthe default character encoding to use for displaying of file\ncontents in <a href=\"https://man.page/1/git-gui\">git-gui(1)</a> and <a href=\"https://man.page/1/gitk\">gitk(1)</a>. It can be\noverridden by setting the <i>encoding</i> attribute for\nrelevant files (see <a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a>). If this option\nis not set, the tools default to the locale\nencoding.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">gui.matchTrackingBranch</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Determines\nif new branches created with <a href=\"https://man.page/1/git-gui\">git-gui(1)</a> should\ndefault to tracking remote branches with matching names or\nnot. Default: &quot;false&quot;.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">gui.newBranchTemplate</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Is used\nas suggested name when creating new branches using the\n<a href=\"https://man.page/1/git-gui\">git-gui(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">gui.pruneDuringFetch</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">&quot;true&quot;\nif <a href=\"https://man.page/1/git-gui\">git-gui(1)</a> should prune remote-tracking branches\nwhen performing a fetch. The default value is\n&quot;false&quot;.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">gui.trustmtime</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Determines\nif <a href=\"https://man.page/1/git-gui\">git-gui(1)</a> should trust the file modification\ntimestamp or not. By default the timestamps are not\ntrusted.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">gui.spellingDictionary</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specifies\nthe dictionary used for spell checking commit messages in\nthe <a href=\"https://man.page/1/git-gui\">git-gui(1)</a>. When set to &quot;none&quot; spell\nchecking is turned off.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">gui.fastCopyBlame</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If true,\n<i>git gui blame</i> uses <b>-C</b> instead of <b>-C -C</b>\nfor original location detection. It makes blame\nsignificantly faster on huge repositories at the expense of\nless thorough copy detection.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">gui.copyBlameThreshold</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specifies\nthe threshold to use in <i>git gui blame</i> original\nlocation detection, measured in alphanumeric characters. See\nthe <a href=\"https://man.page/1/git-blame\">git-blame(1)</a> manual for more information on copy\ndetection.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">gui.blamehistoryctx</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specifies\nthe radius of history context in days to show in\n<a href=\"https://man.page/1/gitk\">gitk(1)</a> for the selected commit, when the <b>Show\nHistory Context</b> menu item is invoked from <i>git gui\nblame</i>. If this variable is set to zero, the whole\nhistory is shown.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">guitool.&lt;name&gt;.cmd</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specifies\nthe shell command line to execute when the corresponding\nitem of the <a href=\"https://man.page/1/git-gui\">git-gui(1)</a> <b>Tools</b> menu is invoked.\nThis option is mandatory for every tool. The command is\nexecuted from the root of the working directory, and in the\nenvironment it receives the name of the tool as\n<b>GIT_GUITOOL</b>, the name of the currently selected file\nas <i>FILENAME</i>, and the name of the current branch as\n<i>CUR_BRANCH</i> (if the head is detached,\n<i>CUR_BRANCH</i> is empty).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">guitool.&lt;name&gt;.needsFile</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Run the\ntool only if a diff is selected in the GUI. It guarantees\nthat <i>FILENAME</i> is not empty.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">guitool.&lt;name&gt;.noConsole</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Run the\ncommand silently, without creating a window to display its\noutput.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">guitool.&lt;name&gt;.noRescan</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Don&rsquo;t\nrescan the working directory for changes after the tool\nfinishes execution.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">guitool.&lt;name&gt;.confirm</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Show a\nconfirmation dialog before actually running the\ntool.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">guitool.&lt;name&gt;.argPrompt</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Request a\nstring argument from the user, and pass it to the tool\nthrough the <b>ARGS</b> environment variable. Since\nrequesting an argument implies confirmation, the\n<i>confirm</i> option has no effect if this is enabled. If\nthe option is set to <i>true</i>, <i>yes</i>, or <i>1</i>,\nthe dialog uses a built-in generic prompt; otherwise the\nexact value of the variable is used.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">guitool.&lt;name&gt;.revPrompt</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Request a\nsingle valid revision from the user, and set the\n<b>REVISION</b> environment variable. In other aspects this\noption is similar to <i>argPrompt</i>, and can be used\ntogether with it.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">guitool.&lt;name&gt;.revUnmerged</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Show only\nunmerged branches in the <i>revPrompt</i> subdialog. This is\nuseful for tools similar to merge or rebase, but not for\nthings like checkout or reset.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">guitool.&lt;name&gt;.title</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specifies\nthe title to use for the prompt dialog. The default is the\ntool name.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">guitool.&lt;name&gt;.prompt</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specifies\nthe general prompt string to display at the top of the\ndialog, before subsections for <i>argPrompt</i> and\n<i>revPrompt</i>. The default value includes the actual\ncommand.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">help.browser</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specify\nthe browser that will be used to display help in the\n<i>web</i> format. See <a href=\"https://man.page/1/git-help\">git-help(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">help.format</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Override\nthe default help format used by <a href=\"https://man.page/1/git-help\">git-help(1)</a>. Values\n<i>man</i>, <i>info</i>, <i>web</i> and <i>html</i> are\nsupported. <i>man</i> is the default. <i>web</i> and\n<i>html</i> are the same.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">help.autoCorrect</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If git\ndetects typos and can identify exactly one valid command\nsimilar to the error, git will try to suggest the correct\ncommand or even run the suggestion automatically. Possible\nconfig values are:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n0 (default): show the suggested command.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\npositive number: run the suggested command after specified\ndeciseconds (0.1 sec).</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n&quot;immediate&quot;: run the suggested command\nimmediately.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n&quot;prompt&quot;: show the suggestion and prompt for\nconfirmation to run the command.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n&quot;never&quot;: don&rsquo;t run or show any suggested\ncommand.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">help.htmlPath</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specify\nthe path where the HTML documentation resides. File system\npaths and URLs are supported. HTML pages will be prefixed\nwith this path when help is displayed in the <i>web</i>\nformat. This defaults to the documentation path of your Git\ninstallation.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.proxy</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Override\nthe HTTP proxy, normally configured using the\n<i>http_proxy</i>, <i>https_proxy</i>, and <i>all_proxy</i>\nenvironment variables (see <b>curl(1)</b>). In addition to\nthe syntax understood by curl, it is possible to specify a\nproxy string with a user name but no password, in which case\ngit will attempt to acquire one in the same way it does for\nother credentials. See <a href=\"https://man.page/7/gitcredentials\">gitcredentials(7)</a> for more\ninformation. The syntax thus is\n<i>[protocol://][user[:password]@]proxyhost[:port]</i>. This\ncan be overridden on a per-remote basis; see\nremote.&lt;name&gt;.proxy</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.proxyAuthMethod</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Set the\nmethod with which to authenticate against the HTTP proxy.\nThis only takes effect if the configured proxy string\ncontains a user name part (i.e. is of the form\n<i>user@host</i> or <i>user@host:port</i>). This can be\noverridden on a per-remote basis; see\n<b>remote.&lt;name&gt;.proxyAuthMethod</b>. Both can be\noverridden by the <b>GIT_HTTP_PROXY_AUTHMETHOD</b>\nenvironment variable. Possible values are:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>anyauth</b> - Automatically pick a suitable\nauthentication method. It is assumed that the proxy answers\nan unauthenticated request with a 407 status code and one or\nmore Proxy-authenticate headers with supported\nauthentication methods. This is the default.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>basic</b> - HTTP Basic authentication</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>digest</b> - HTTP Digest authentication; this prevents\nthe password from being transmitted to the proxy in clear\ntext</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>negotiate</b> - GSS-Negotiate authentication (compare the\n--negotiate option of <b>curl(1)</b>)</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>ntlm</b> - NTLM authentication (compare the --ntlm option\nof <b>curl(1)</b>)</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.proxySSLCert</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\npathname of a file that stores a client certificate to use\nto authenticate with an HTTPS proxy. Can be overridden by\nthe <b>GIT_PROXY_SSL_CERT</b> environment\nvariable.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.proxySSLKey</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\npathname of a file that stores a private key to use to\nauthenticate with an HTTPS proxy. Can be overridden by the\n<b>GIT_PROXY_SSL_KEY</b> environment variable.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.proxySSLCertPasswordProtected</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Enable\nGit&rsquo;s password prompt for the proxy SSL certificate.\nOtherwise OpenSSL will prompt the user, possibly many times,\nif the certificate or private key is encrypted. Can be\noverridden by the\n<b>GIT_PROXY_SSL_CERT_PASSWORD_PROTECTED</b> environment\nvariable.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.proxySSLCAInfo</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Pathname\nto the file containing the certificate bundle that should be\nused to verify the proxy with when using an HTTPS proxy. Can\nbe overridden by the <b>GIT_PROXY_SSL_CAINFO</b> environment\nvariable.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.emptyAuth</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Attempt\nauthentication without seeking a username or password. This\ncan be used to attempt GSS-Negotiate authentication without\nspecifying a username in the URL, as libcurl normally\nrequires a username for authentication.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.delegation</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Control\nGSSAPI credential delegation. The delegation is disabled by\ndefault in libcurl since version 7.21.7. Set parameter to\ntell the server what it is allowed to delegate when it comes\nto user credentials. Used with GSS/kerberos. Possible values\nare:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>none</b> - Don&rsquo;t allow any delegation.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>policy</b> - Delegates if and only if the OK-AS-DELEGATE\nflag is set in the Kerberos service ticket, which is a\nmatter of realm policy.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>always</b> - Unconditionally allow the server to\ndelegate.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.extraHeader</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Pass an\nadditional HTTP header when communicating with a server. If\nmore than one such entry exists, all of them are added as\nextra headers. To allow overriding the settings inherited\nfrom the system config, an empty value will reset the extra\nheaders to the empty list.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.cookieFile</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\npathname of a file containing previously stored cookie\nlines, which should be used in the Git http session, if they\nmatch the server. The file format of the file to read\ncookies from should be plain HTTP headers or the\nNetscape/Mozilla cookie file format (see <b>curl(1)</b>).\nNOTE that the file specified with http.cookieFile is used\nonly as input unless http.saveCookies is set.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.saveCookies</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If set,\nstore cookies received during requests to the file specified\nby http.cookieFile. Has no effect if http.cookieFile is\nunset.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.version</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Use the\nspecified HTTP protocol version when communicating with a\nserver. If you want to force the default. The available and\ndefault version depend on libcurl. Currently the possible\nvalues of this option are:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nHTTP/2</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nHTTP/1.1</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.sslVersion</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The SSL\nversion to use when negotiating an SSL connection, if you\nwant to force the default. The available and default version\ndepend on whether libcurl was built against NSS or OpenSSL\nand the particular configuration of the crypto library in\nuse. Internally this sets the <i>CURLOPT_SSL_VERSION</i>\noption; see the libcurl documentation for more details on\nthe format of this option and for the ssl version supported.\nCurrently the possible values of this option are:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nsslv2</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nsslv3</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\ntlsv1</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\ntlsv1.0</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\ntlsv1.1</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\ntlsv1.2</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\ntlsv1.3</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Can\nbe overridden by the <b>GIT_SSL_VERSION</b> environment\nvariable. To force git to use libcurl&rsquo;s default ssl\nversion and ignore any explicit http.sslversion option, set\n<b>GIT_SSL_VERSION</b> to the empty string.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.sslCipherList</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A list of\nSSL ciphers to use when negotiating an SSL connection. The\navailable ciphers depend on whether libcurl was built\nagainst NSS or OpenSSL and the particular configuration of\nthe crypto library in use. Internally this sets the\n<i>CURLOPT_SSL_CIPHER_LIST</i> option; see the libcurl\ndocumentation for more details on the format of this\nlist.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Can\nbe overridden by the <b>GIT_SSL_CIPHER_LIST</b> environment\nvariable. To force git to use libcurl&rsquo;s default cipher\nlist and ignore any explicit http.sslCipherList option, set\n<b>GIT_SSL_CIPHER_LIST</b> to the empty string.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.sslVerify</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Whether\nto verify the SSL certificate when fetching or pushing over\nHTTPS. Defaults to true. Can be overridden by the\n<b>GIT_SSL_NO_VERIFY</b> environment variable.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.sslCert</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">File\ncontaining the SSL certificate when fetching or pushing over\nHTTPS. Can be overridden by the <b>GIT_SSL_CERT</b>\nenvironment variable.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.sslKey</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">File\ncontaining the SSL private key when fetching or pushing over\nHTTPS. Can be overridden by the <b>GIT_SSL_KEY</b>\nenvironment variable.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.sslCertPasswordProtected</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Enable\nGit&rsquo;s password prompt for the SSL certificate.\nOtherwise OpenSSL will prompt the user, possibly many times,\nif the certificate or private key is encrypted. Can be\noverridden by the <b>GIT_SSL_CERT_PASSWORD_PROTECTED</b>\nenvironment variable.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.sslCAInfo</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">File\ncontaining the certificates to verify the peer with when\nfetching or pushing over HTTPS. Can be overridden by the\n<b>GIT_SSL_CAINFO</b> environment variable.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.sslCAPath</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Path\ncontaining files with the CA certificates to verify the peer\nwith when fetching or pushing over HTTPS. Can be overridden\nby the <b>GIT_SSL_CAPATH</b> environment\nvariable.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.sslBackend</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Name of\nthe SSL backend to use (e.g. &quot;openssl&quot; or\n&quot;schannel&quot;). This option is ignored if cURL lacks\nsupport for choosing the SSL backend at runtime.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.schannelCheckRevoke</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Used to\nenforce or disable certificate revocation checks in cURL\nwhen http.sslBackend is set to &quot;schannel&quot;.\nDefaults to <b>true</b> if unset. Only necessary to disable\nthis if Git consistently errors and the message is about\nchecking the revocation status of a certificate. This option\nis ignored if cURL lacks support for setting the relevant\nSSL option at runtime.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.schannelUseSSLCAInfo</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">As of\ncURL v7.60.0, the Secure Channel backend can use the\ncertificate bundle provided via <b>http.sslCAInfo</b>, but\nthat would override the Windows Certificate Store. Since\nthis is not desirable by default, Git will tell cURL not to\nuse that bundle by default when the <b>schannel</b> backend\nwas configured via <b>http.sslBackend</b>, unless\n<b>http.schannelUseSSLCAInfo</b> overrides this\nbehavior.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.pinnedpubkey</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Public\nkey of the https service. It may either be the filename of a\nPEM or DER encoded public key file or a string starting with\n<i>sha256//</i> followed by the base64 encoded sha256 hash\nof the public key. See also libcurl\n<i>CURLOPT_PINNEDPUBLICKEY</i>. git will exit with an error\nif this option is set but not supported by cURL.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.sslTry</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Attempt\nto use AUTH SSL/TLS and encrypted data transfers when\nconnecting via regular FTP protocol. This might be needed if\nthe FTP server requires it for security reasons or you wish\nto connect securely whenever remote FTP server supports it.\nDefault is false since it might trigger certificate\nverification errors on misconfigured servers.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.maxRequests</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">How many\nHTTP requests to launch in parallel. Can be overridden by\nthe <b>GIT_HTTP_MAX_REQUESTS</b> environment variable.\nDefault is 5.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.minSessions</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nnumber of curl sessions (counted across slots) to be kept\nacross requests. They will not be ended with\ncurl_easy_cleanup() until http_cleanup() is invoked. If\nUSE_CURL_MULTI is not defined, this value will be capped at\n1. Defaults to 1.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.postBuffer</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Maximum\nsize in bytes of the buffer used by smart HTTP transports\nwhen POSTing data to the remote system. For requests larger\nthan this buffer size, HTTP/1.1 and Transfer-Encoding:\nchunked is used to avoid creating a massive pack file\nlocally. Default is 1 MiB, which is sufficient for most\nrequests.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Note\nthat raising this limit is only effective for disabling\nchunked transfer encoding and therefore should be used only\nwhere the remote server or a proxy only supports HTTP/1.0 or\nis noncompliant with the HTTP standard. Raising this is not,\nin general, an effective solution for most push problems,\nbut can increase memory consumption significantly since the\nentire buffer is allocated even for small pushes.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.lowSpeedLimit,\nhttp.lowSpeedTime</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If the\nHTTP transfer speed is less than <i>http.lowSpeedLimit</i>\nfor longer than <i>http.lowSpeedTime</i> seconds, the\ntransfer is aborted. Can be overridden by the\n<b>GIT_HTTP_LOW_SPEED_LIMIT</b> and\n<b>GIT_HTTP_LOW_SPEED_TIME</b> environment\nvariables.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.noEPSV</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A boolean\nwhich disables using of EPSV ftp command by curl. This can\nhelpful with some &quot;poor&quot; ftp servers which\ndon&rsquo;t support EPSV mode. Can be overridden by the\n<b>GIT_CURL_FTP_NO_EPSV</b> environment variable. Default is\nfalse (curl will use EPSV).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.userAgent</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The HTTP\nUSER_AGENT string presented to an HTTP server. The default\nvalue represents the version of the client Git such as\ngit/1.7.1. This option allows you to override this value to\na more common value such as Mozilla/4.0. This may be\nnecessary, for instance, if connecting through a firewall\nthat restricts HTTP connections to a set of common\nUSER_AGENT strings (but not including those like git/1.7.1).\nCan be overridden by the <b>GIT_HTTP_USER_AGENT</b>\nenvironment variable.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.followRedirects</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Whether\ngit should follow HTTP redirects. If set to <b>true</b>, git\nwill transparently follow any redirect issued by a server it\nencounters. If set to <b>false</b>, git will treat all\nredirects as errors. If set to <b>initial</b>, git will\nfollow redirects only for the initial request to a remote,\nbut not for subsequent follow-up HTTP requests. Since git\nuses the redirected URL as the base for the follow-up\nrequests, this is generally sufficient. The default is\n<b>initial</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">http.&lt;url&gt;.*</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Any of\nthe http.* options above can be applied selectively to some\nURLs. For a config key to match a URL, each element of the\nconfig key is compared to that of the URL, in the following\norder:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">1.\nScheme (e.g., <b>https</b> in <b>https://example.com/</b>).\nThis field must match exactly between the config key and the\nURL.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">2.\nHost/domain name (e.g., <b>example.com</b> in\n<b>https://example.com/</b>). This field must match between\nthe config key and the URL. It is possible to specify a\n<b>*</b> as part of the host name to match all subdomains at\nthis level. <b>https://*.example.com/</b> for example would\nmatch <b>https://foo.example.com/</b>, but not\n<b>https://foo.bar.example.com/</b>.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">3.\nPort number (e.g., <b>8080</b> in\n<b>http://example.com:8080/</b>). This field must match\nexactly between the config key and the URL. Omitted port\nnumbers are automatically converted to the correct default\nfor the scheme before matching.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">4.\nPath (e.g., <b>repo.git</b> in\n<b>https://example.com/repo.git</b>). The path field of the\nconfig key must match the path field of the URL either\nexactly or as a prefix of slash-delimited path elements.\nThis means a config key with path <b>foo/</b> matches URL\npath <b>foo/bar</b>. A prefix can only match on a slash\n(<b>/</b>) boundary. Longer matches take precedence (so a\nconfig key with path <b>foo/bar</b> is a better match to URL\npath <b>foo/bar</b> than a config key with just path\n<b>foo/</b>).</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">5.\nUser name (e.g., <b>user</b> in\n<b>https://user@example.com/repo.git</b>). If the config key\nhas a user name it must match the user name in the URL\nexactly. If the config key does not have a user name, that\nconfig key will match a URL with any user name (including\nnone), but at a lower precedence than a config key with a\nuser name.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">The\nlist above is ordered by decreasing precedence; a URL that\nmatches a config key&rsquo;s path is preferred to one that\nmatches its user name. For example, if the URL is\n<b>https://user@example.com/foo/bar</b> a config key match\nof <b>https://example.com/foo</b> will be preferred over a\nconfig key match of\n<b>https://user@example.com</b>.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">All\nURLs are normalized before attempting any matching (the\npassword part, if embedded in the URL, is always ignored for\nmatching purposes) so that equivalent URLs that are simply\nspelled differently will match properly. Environment\nvariable settings always override any matches. The URLs that\nare matched against are those given directly to Git\ncommands. This means any URLs visited as a result of a\nredirection do not participate in matching.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">i18n.commitEncoding</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Character\nencoding the commit messages are stored in; Git itself does\nnot care per se, but this information is necessary e.g. when\nimporting commits from emails or in the gitk graphical\nhistory browser (and possibly at other places in the future\nor in other porcelains). See e.g. <a href=\"https://man.page/1/git-mailinfo\">git-mailinfo(1)</a>.\nDefaults to <i>utf-8</i>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">i18n.logOutputEncoding</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Character\nencoding the commit messages are converted to when running\n<i>git log</i> and friends.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">imap.folder</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nfolder to drop the mails into, which is typically the Drafts\nfolder. For example: &quot;INBOX.Drafts&quot;,\n&quot;INBOX/Drafts&quot; or &quot;[Gmail]/Drafts&quot;.\nRequired.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">imap.tunnel</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Command\nused to setup a tunnel to the IMAP server through which\ncommands will be piped instead of using a direct network\nconnection to the server. Required when imap.host is not\nset.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">imap.host</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A URL\nidentifying the server. Use an <b>imap://</b> prefix for\nnon-secure connections and an <b>imaps://</b> prefix for\nsecure connections. Ignored when imap.tunnel is set, but\nrequired otherwise.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">imap.user</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nusername to use when logging in to the server.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">imap.pass</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\npassword to use when logging in to the server.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">imap.port</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">An\ninteger port number to connect to on the server. Defaults to\n143 for imap:// hosts and 993 for imaps:// hosts. Ignored\nwhen imap.tunnel is set.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">imap.sslverify</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A boolean\nto enable/disable verification of the server certificate\nused by the SSL/TLS connection. Default is <b>true</b>.\nIgnored when imap.tunnel is set.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">imap.preformattedHTML</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A boolean\nto enable/disable the use of html encoding when sending a\npatch. An html encoded patch will be bracketed with\n&lt;pre&gt; and have a content type of text/html.\nIronically, enabling this option causes Thunderbird to send\nthe patch as a plain/text, format=fixed email. Default is\n<b>false</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">imap.authMethod</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specify\nauthenticate method for authentication with IMAP server. If\nGit was built with the NO_CURL option, or if your curl\nversion is older than 7.34.0, or if you&rsquo;re running\ngit-imap-send with the <b>--no-curl</b> option, the only\nsupported method is <i>CRAM-MD5</i>. If this is not set then\n<i>git imap-send</i> uses the basic IMAP plaintext LOGIN\ncommand.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">index.recordEndOfIndexEntries</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specifies\nwhether the index file should include an &quot;End Of Index\nEntry&quot; section. This reduces index load time on\nmultiprocessor machines but produces a message\n&quot;ignoring EOIE extension&quot; when reading the index\nusing Git versions before 2.20. Defaults to <i>true</i> if\nindex.threads has been explicitly enabled, <i>false</i>\notherwise.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">index.recordOffsetTable</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specifies\nwhether the index file should include an &quot;Index Entry\nOffset Table&quot; section. This reduces index load time on\nmultiprocessor machines but produces a message\n&quot;ignoring IEOT extension&quot; when reading the index\nusing Git versions before 2.20. Defaults to <i>true</i> if\nindex.threads has been explicitly enabled, <i>false</i>\notherwise.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">index.sparse</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When\nenabled, write the index using sparse-directory entries.\nThis has no effect unless <b>core.sparseCheckout</b> and\n<b>core.sparseCheckoutCone</b> are both enabled. Defaults to\n<i>false</i>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">index.threads</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specifies\nthe number of threads to spawn when loading the index. This\nis meant to reduce index load time on multiprocessor\nmachines. Specifying 0 or <i>true</i> will cause Git to\nauto-detect the number of CPU&rsquo;s and set the number of\nthreads accordingly. Specifying 1 or <i>false</i> will\ndisable multithreading. Defaults to <i>true</i>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">index.version</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specify\nthe version with which new index files should be\ninitialized. This does not affect existing repositories. If\n<b>feature.manyFiles</b> is enabled, then the default is\n4.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">init.templateDir</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specify\nthe directory from which templates will be copied. (See the\n&quot;TEMPLATE DIRECTORY&quot; section of\n<a href=\"https://man.page/1/git-init\">git-init(1)</a>.)</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">init.defaultBranch</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Allows\noverriding the default branch name e.g. when initializing a\nnew repository.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">instaweb.browser</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specify\nthe program that will be used to browse your working\nrepository in gitweb. See <a href=\"https://man.page/1/git-instaweb\">git-instaweb(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">instaweb.httpd</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The HTTP\ndaemon command-line to start gitweb on your working\nrepository. See <a href=\"https://man.page/1/git-instaweb\">git-instaweb(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">instaweb.local</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If true\nthe web server started by <a href=\"https://man.page/1/git-instaweb\">git-instaweb(1)</a> will be\nbound to the local IP (127.0.0.1).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">instaweb.modulePath</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\ndefault module path for <a href=\"https://man.page/1/git-instaweb\">git-instaweb(1)</a> to use\ninstead of /usr/lib/apache2/modules. Only used if httpd is\nApache.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">instaweb.port</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The port\nnumber to bind the gitweb httpd to. See\n<a href=\"https://man.page/1/git-instaweb\">git-instaweb(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">interactive.singleKey</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">In\ninteractive commands, allow the user to provide one-letter\ninput with a single key (i.e., without hitting enter).\nCurrently this is used by the <b>--patch</b> mode of\n<a href=\"https://man.page/1/git-add\">git-add(1)</a>, <a href=\"https://man.page/1/git-checkout\">git-checkout(1)</a>,\n<a href=\"https://man.page/1/git-restore\">git-restore(1)</a>, <a href=\"https://man.page/1/git-commit\">git-commit(1)</a>,\n<a href=\"https://man.page/1/git-reset\">git-reset(1)</a>, and <a href=\"https://man.page/1/git-stash\">git-stash(1)</a>. Note that this\nsetting is silently ignored if portable keystroke input is\nnot available; requires the Perl module\nTerm::ReadKey.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">interactive.diffFilter</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When an\ninteractive command (such as <b>git add --patch</b>) shows a\ncolorized diff, git will pipe the diff through the shell\ncommand defined by this configuration variable. The command\nmay mark up the diff further for human consumption, provided\nthat it retains a one-to-one correspondence with the lines\nin the original diff. Defaults to disabled (no\nfiltering).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">log.abbrevCommit</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If true,\nmakes <a href=\"https://man.page/1/git-log\">git-log(1)</a>, <a href=\"https://man.page/1/git-show\">git-show(1)</a>, and\n<a href=\"https://man.page/1/git-whatchanged\">git-whatchanged(1)</a> assume <b>--abbrev-commit</b>. You\nmay override this option with\n<b>--no-abbrev-commit</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">log.date</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Set the\ndefault date-time mode for the <i>log</i> command. Setting a\nvalue for log.date is similar to using <i>git log</i>'s\n<b>--date</b> option. See <a href=\"https://man.page/1/git-log\">git-log(1)</a> for\ndetails.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">log.decorate</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Print out\nthe ref names of any commits that are shown by the log\ncommand. If <i>short</i> is specified, the ref name prefixes\n<i>refs/heads/</i>, <i>refs/tags/</i> and\n<i>refs/remotes/</i> will not be printed. If <i>full</i> is\nspecified, the full ref name (including prefix) will be\nprinted. If <i>auto</i> is specified, then if the output is\ngoing to a terminal, the ref names are shown as if\n<i>short</i> were given, otherwise no ref names are shown.\nThis is the same as the <b>--decorate</b> option of the\n<b>git log</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">log.excludeDecoration</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Exclude\nthe specified patterns from the log decorations. This is\nsimilar to the <b>--decorate-refs-exclude</b> command-line\noption, but the config option can be overridden by the\n<b>--decorate-refs</b> option.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">log.diffMerges</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Set\ndefault diff format to be used for merge commits. See\n<b>--diff-merges</b> in <a href=\"https://man.page/1/git-log\">git-log(1)</a> for details.\nDefaults to <b>separate</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">log.follow</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If\n<b>true</b>, <b>git log</b> will act as if the\n<b>--follow</b> option was used when a single &lt;path&gt;\nis given. This has the same limitations as <b>--follow</b>,\ni.e. it cannot be used to follow multiple files and does not\nwork well on non-linear history.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">log.graphColors</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A list of\ncolors, separated by commas, that can be used to draw\nhistory lines in <b>git log --graph</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">log.showRoot</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If true,\nthe initial commit will be shown as a big creation event.\nThis is equivalent to a diff against an empty tree. Tools\nlike <a href=\"https://man.page/1/git-log\">git-log(1)</a> or <a href=\"https://man.page/1/git-whatchanged\">git-whatchanged(1)</a>, which\nnormally hide the root commit will now show it. True by\ndefault.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">log.showSignature</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If true,\nmakes <a href=\"https://man.page/1/git-log\">git-log(1)</a>, <a href=\"https://man.page/1/git-show\">git-show(1)</a>, and\n<a href=\"https://man.page/1/git-whatchanged\">git-whatchanged(1)</a> assume\n<b>--show-signature</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">log.mailmap</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If true,\nmakes <a href=\"https://man.page/1/git-log\">git-log(1)</a>, <a href=\"https://man.page/1/git-show\">git-show(1)</a>, and\n<a href=\"https://man.page/1/git-whatchanged\">git-whatchanged(1)</a> assume <b>--use-mailmap</b>,\notherwise assume <b>--no-use-mailmap</b>. True by\ndefault.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">lsrefs.unborn</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">May be\n&quot;advertise&quot; (the default), &quot;allow&quot;, or\n&quot;ignore&quot;. If &quot;advertise&quot;, the server\nwill respond to the client sending &quot;unborn&quot; (as\ndescribed in protocol-v2.txt) and will advertise support for\nthis feature during the protocol v2 capability\nadvertisement. &quot;allow&quot; is the same as\n&quot;advertise&quot; except that the server will not\nadvertise support for this feature; this is useful for\nload-balanced servers that cannot be updated atomically (for\nexample), since the administrator could configure\n&quot;allow&quot;, then after a delay, configure\n&quot;advertise&quot;.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">mailinfo.scissors</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If true,\nmakes <a href=\"https://man.page/1/git-mailinfo\">git-mailinfo(1)</a> (and therefore\n<a href=\"https://man.page/1/git-am\">git-am(1)</a>) act by default as if the --scissors option\nwas provided on the command-line. When active, this features\nremoves everything from the message body before a scissors\nline (i.e. consisting mainly of &quot;&gt;8&quot;,\n&quot;8&lt;&quot; and &quot;-&quot;).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">mailmap.file</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nlocation of an augmenting mailmap file. The default mailmap,\nlocated in the root of the repository, is loaded first, then\nthe mailmap file pointed to by this variable. The location\nof the mailmap file may be in a repository subdirectory, or\nsomewhere outside of the repository itself. See\n<a href=\"https://man.page/1/git-shortlog\">git-shortlog(1)</a> and <a href=\"https://man.page/1/git-blame\">git-blame(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">mailmap.blob</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Like\n<b>mailmap.file</b>, but consider the value as a reference\nto a blob in the repository. If both <b>mailmap.file</b> and\n<b>mailmap.blob</b> are given, both are parsed, with entries\nfrom <b>mailmap.file</b> taking precedence. In a bare\nrepository, this defaults to <b>HEAD:.mailmap</b>. In a\nnon-bare repository, it defaults to empty.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">maintenance.auto</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\nboolean config option controls whether some commands run\n<b>git maintenance run --auto</b> after doing their normal\nwork. Defaults to true.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">maintenance.strategy</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\nstring config option provides a way to specify one of a few\nrecommended schedules for background maintenance. This only\naffects which tasks are run during <b>git maintenance run\n--schedule=X</b> commands, provided no\n<b>--task=&lt;task&gt;</b> arguments are provided. Further,\nif a <b>maintenance.&lt;task&gt;.schedule</b> config value\nis set, then that value is used instead of the one provided\nby <b>maintenance.strategy</b>. The possible strategy\nstrings are:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>none</b>: This default setting implies no task are run at\nany schedule.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>incremental</b>: This setting optimizes for performing\nsmall maintenance activities that do not delete any data.\nThis does not schedule the <b>gc</b> task, but runs the\n<b>prefetch</b> and <b>commit-graph</b> tasks hourly, the\n<b>loose-objects</b> and <b>incremental-repack</b> tasks\ndaily, and the <b>pack-refs</b> task weekly.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">maintenance.&lt;task&gt;.enabled</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\nboolean config option controls whether the maintenance task\nwith name <b>&lt;task&gt;</b> is run when no <b>--task</b>\noption is specified to <b>git maintenance run</b>. These\nconfig values are ignored if a <b>--task</b> option exists.\nBy default, only <b>maintenance.gc.enabled</b> is\ntrue.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">maintenance.&lt;task&gt;.schedule</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\nconfig option controls whether or not the given\n<b>&lt;task&gt;</b> runs during a <b>git maintenance run\n--schedule=&lt;frequency&gt;</b> command. The value must be\none of &quot;hourly&quot;, &quot;daily&quot;, or\n&quot;weekly&quot;.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">maintenance.commit-graph.auto</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\ninteger config option controls how often the\n<b>commit-graph</b> task should be run as part of <b>git\nmaintenance run --auto</b>. If zero, then the\n<b>commit-graph</b> task will not run with the <b>--auto</b>\noption. A negative value will force the task to run every\ntime. Otherwise, a positive value implies the command should\nrun when the number of reachable commits that are not in the\ncommit-graph file is at least the value of\n<b>maintenance.commit-graph.auto</b>. The default value is\n100.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">maintenance.loose-objects.auto</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\ninteger config option controls how often the\n<b>loose-objects</b> task should be run as part of <b>git\nmaintenance run --auto</b>. If zero, then the\n<b>loose-objects</b> task will not run with the\n<b>--auto</b> option. A negative value will force the task\nto run every time. Otherwise, a positive value implies the\ncommand should run when the number of loose objects is at\nleast the value of <b>maintenance.loose-objects.auto</b>.\nThe default value is 100.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">maintenance.incremental-repack.auto</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\ninteger config option controls how often the\n<b>incremental-repack</b> task should be run as part of\n<b>git maintenance run --auto</b>. If zero, then the\n<b>incremental-repack</b> task will not run with the\n<b>--auto</b> option. A negative value will force the task\nto run every time. Otherwise, a positive value implies the\ncommand should run when the number of pack-files not in the\nmulti-pack-index is at least the value of\n<b>maintenance.incremental-repack.auto</b>. The default\nvalue is 10.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">man.viewer</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specify\nthe programs that may be used to display help in the\n<i>man</i> format. See <a href=\"https://man.page/1/git-help\">git-help(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">man.&lt;tool&gt;.cmd</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specify\nthe command to invoke the specified man viewer. The\nspecified command is evaluated in shell with the man page\npassed as argument. (See <a href=\"https://man.page/1/git-help\">git-help(1)</a>.)</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">man.&lt;tool&gt;.path</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Override\nthe path for the given tool that may be used to display help\nin the <i>man</i> format. See <a href=\"https://man.page/1/git-help\">git-help(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">merge.conflictStyle</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specify\nthe style in which conflicted hunks are written out to\nworking tree files upon merge. The default is\n&quot;merge&quot;, which shows a\n<b>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</b> conflict marker, changes\nmade by one side, a <b>=======</b> marker, changes made by\nthe other side, and then a\n<b>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</b> marker. An alternate\nstyle, &quot;diff3&quot;, adds a <b>|||||||</b> marker and\nthe original text before the <b>=======</b>\nmarker.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">merge.defaultToUpstream</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If merge\nis called without any commit argument, merge the upstream\nbranches configured for the current branch by using their\nlast observed values stored in their remote-tracking\nbranches. The values of the <b>branch.&lt;current\nbranch&gt;.merge</b> that name the branches at the remote\nnamed by <b>branch.&lt;current branch&gt;.remote</b> are\nconsulted, and then they are mapped via\n<b>remote.&lt;remote&gt;.fetch</b> to their corresponding\nremote-tracking branches, and the tips of these tracking\nbranches are merged. Defaults to true.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">merge.ff</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">By\ndefault, Git does not create an extra merge commit when\nmerging a commit that is a descendant of the current commit.\nInstead, the tip of the current branch is fast-forwarded.\nWhen set to <b>false</b>, this variable tells Git to create\nan extra merge commit in such a case (equivalent to giving\nthe <b>--no-ff</b> option from the command line). When set\nto <b>only</b>, only such fast-forward merges are allowed\n(equivalent to giving the <b>--ff-only</b> option from the\ncommand line).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">merge.verifySignatures</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If true,\nthis is equivalent to the --verify-signatures command line\noption. See <a href=\"https://man.page/1/git-merge\">git-merge(1)</a> for details.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">merge.branchdesc</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">In\naddition to branch names, populate the log message with the\nbranch description text associated with them. Defaults to\nfalse.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">merge.log</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">In\naddition to branch names, populate the log message with at\nmost the specified number of one-line descriptions from the\nactual commits that are being merged. Defaults to false, and\ntrue is a synonym for 20.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">merge.suppressDest</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">By adding\na glob that matches the names of integration branches to\nthis multi-valued configuration variable, the default merge\nmessage computed for merges into these integration branches\nwill omit &quot;into &lt;branch name&gt;&quot; from its\ntitle.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">An\nelement with an empty value can be used to clear the list of\nglobs accumulated from previous configuration entries. When\nthere is no <b>merge.suppressDest</b> variable defined, the\ndefault value of <b>master</b> is used for backward\ncompatibility.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">merge.renameLimit</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nnumber of files to consider in the exhaustive portion of\nrename detection during a merge. If not specified, defaults\nto the value of diff.renameLimit. If neither\nmerge.renameLimit nor diff.renameLimit are specified,\ncurrently defaults to 7000. This setting has no effect if\nrename detection is turned off.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">merge.renames</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Whether\nGit detects renames. If set to &quot;false&quot;, rename\ndetection is disabled. If set to &quot;true&quot;, basic\nrename detection is enabled. Defaults to the value of\ndiff.renames.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">merge.directoryRenames</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Whether\nGit detects directory renames, affecting what happens at\nmerge time to new files added to a directory on one side of\nhistory when that directory was renamed on the other side of\nhistory. If merge.directoryRenames is set to\n&quot;false&quot;, directory rename detection is disabled,\nmeaning that such new files will be left behind in the old\ndirectory. If set to &quot;true&quot;, directory rename\ndetection is enabled, meaning that such new files will be\nmoved into the new directory. If set to\n&quot;conflict&quot;, a conflict will be reported for such\npaths. If merge.renames is false, merge.directoryRenames is\nignored and treated as false. Defaults to\n&quot;conflict&quot;.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">merge.renormalize</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Tell Git\nthat canonical representation of files in the repository has\nchanged over time (e.g. earlier commits record text files\nwith CRLF line endings, but recent ones use LF line\nendings). In such a repository, Git can convert the data\nrecorded in commits to a canonical form before performing a\nmerge to reduce unnecessary conflicts. For more information,\nsee section &quot;Merging branches with differing\ncheckin/checkout attributes&quot; in\n<a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">merge.stat</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Whether\nto print the diffstat between ORIG_HEAD and the merge result\nat the end of the merge. True by default.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">merge.autoStash</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When set\nto true, automatically create a temporary stash entry before\nthe operation begins, and apply it after the operation ends.\nThis means that you can run merge on a dirty worktree.\nHowever, use with care: the final stash application after a\nsuccessful merge might result in non-trivial conflicts. This\noption can be overridden by the <b>--no-autostash</b> and\n<b>--autostash</b> options of <a href=\"https://man.page/1/git-merge\">git-merge(1)</a>. Defaults\nto false.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">merge.tool</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Controls\nwhich merge tool is used by <a href=\"https://man.page/1/git-mergetool\">git-mergetool(1)</a>. The\nlist below shows the valid built-in values. Any other value\nis treated as a custom merge tool and requires that a\ncorresponding mergetool.&lt;tool&gt;.cmd variable is\ndefined.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">merge.guitool</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Controls\nwhich merge tool is used by <a href=\"https://man.page/1/git-mergetool\">git-mergetool(1)</a> when the\n-g/--gui flag is specified. The list below shows the valid\nbuilt-in values. Any other value is treated as a custom\nmerge tool and requires that a corresponding\nmergetool.&lt;guitool&gt;.cmd variable is\ndefined.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\naraxis</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nbc</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nbc3</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nbc4</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\ncodecompare</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\ndeltawalker</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\ndiffmerge</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\ndiffuse</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\necmerge</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nemerge</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nexamdiff</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nguiffy</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\ngvimdiff</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\ngvimdiff1</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\ngvimdiff2</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\ngvimdiff3</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nkdiff3</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nmeld</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nnvimdiff</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nnvimdiff1</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nnvimdiff2</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nnvimdiff3</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nopendiff</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\np4merge</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nsmerge</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\ntkdiff</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\ntortoisemerge</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nvimdiff</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nvimdiff1</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nvimdiff2</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nvimdiff3</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nwinmerge</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nxxdiff</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">merge.verbosity</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Controls\nthe amount of output shown by the recursive merge strategy.\nLevel 0 outputs nothing except a final error message if\nconflicts were detected. Level 1 outputs only conflicts, 2\noutputs conflicts and file changes. Level 5 and above\noutputs debugging information. The default is level 2. Can\nbe overridden by the <b>GIT_MERGE_VERBOSITY</b> environment\nvariable.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">merge.&lt;driver&gt;.name</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Defines a\nhuman-readable name for a custom low-level merge driver. See\n<a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a> for details.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">merge.&lt;driver&gt;.driver</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Defines\nthe command that implements a custom low-level merge driver.\nSee <a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a> for details.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">merge.&lt;driver&gt;.recursive</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Names a\nlow-level merge driver to be used when performing an\ninternal merge between common ancestors. See\n<a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a> for details.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">mergetool.&lt;tool&gt;.path</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Override\nthe path for the given tool. This is useful in case your\ntool is not in the PATH.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">mergetool.&lt;tool&gt;.cmd</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specify\nthe command to invoke the specified merge tool. The\nspecified command is evaluated in shell with the following\nvariables available: <i>BASE</i> is the name of a temporary\nfile containing the common base of the files to be merged,\nif available; <i>LOCAL</i> is the name of a temporary file\ncontaining the contents of the file on the current branch;\n<i>REMOTE</i> is the name of a temporary file containing the\ncontents of the file from the branch being merged;\n<i>MERGED</i> contains the name of the file to which the\nmerge tool should write the results of a successful\nmerge.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">mergetool.&lt;tool&gt;.hideResolved</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Allows\nthe user to override the global\n<b>mergetool.hideResolved</b> value for a specific tool. See\n<b>mergetool.hideResolved</b> for the full\ndescription.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">mergetool.&lt;tool&gt;.trustExitCode</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">For a\ncustom merge command, specify whether the exit code of the\nmerge command can be used to determine whether the merge was\nsuccessful. If this is not set to true then the merge target\nfile timestamp is checked and the merge assumed to have been\nsuccessful if the file has been updated, otherwise the user\nis prompted to indicate the success of the merge.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">mergetool.meld.hasOutput</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Older\nversions of <b>meld</b> do not support the <b>--output</b>\noption. Git will attempt to detect whether <b>meld</b>\nsupports <b>--output</b> by inspecting the output of <b>meld\n--help</b>. Configuring <b>mergetool.meld.hasOutput</b> will\nmake Git skip these checks and use the configured value\ninstead. Setting <b>mergetool.meld.hasOutput</b> to\n<b>true</b> tells Git to unconditionally use the\n<b>--output</b> option, and <b>false</b> avoids using\n<b>--output</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">mergetool.meld.useAutoMerge</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When the\n<b>--auto-merge</b> is given, meld will merge all\nnon-conflicting parts automatically, highlight the\nconflicting parts and wait for user decision. Setting\n<b>mergetool.meld.useAutoMerge</b> to <b>true</b> tells Git\nto unconditionally use the <b>--auto-merge</b> option with\n<b>meld</b>. Setting this value to <b>auto</b> makes git\ndetect whether <b>--auto-merge</b> is supported and will\nonly use <b>--auto-merge</b> when available. A value of\n<b>false</b> avoids using <b>--auto-merge</b> altogether,\nand is the default value.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">mergetool.hideResolved</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">During a\nmerge Git will automatically resolve as many conflicts as\npossible and write the <i>MERGED</i> file containing\nconflict markers around any conflicts that it cannot\nresolve; <i>LOCAL</i> and <i>REMOTE</i> normally represent\nthe versions of the file from before Git&rsquo;s conflict\nresolution. This flag causes <i>LOCAL</i> and <i>REMOTE</i>\nto be overwriten so that only the unresolved conflicts are\npresented to the merge tool. Can be configured per-tool via\nthe <b>mergetool.&lt;tool&gt;.hideResolved</b> configuration\nvariable. Defaults to <b>false</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">mergetool.keepBackup</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">After\nperforming a merge, the original file with conflict markers\ncan be saved as a file with a <b>.orig</b> extension. If\nthis variable is set to <b>false</b> then this file is not\npreserved. Defaults to <b>true</b> (i.e. keep the backup\nfiles).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">mergetool.keepTemporaries</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When\ninvoking a custom merge tool, Git uses a set of temporary\nfiles to pass to the tool. If the tool returns an error and\nthis variable is set to <b>true</b>, then these temporary\nfiles will be preserved, otherwise they will be removed\nafter the tool has exited. Defaults to\n<b>false</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">mergetool.writeToTemp</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Git\nwrites temporary <i>BASE</i>, <i>LOCAL</i>, and\n<i>REMOTE</i> versions of conflicting files in the worktree\nby default. Git will attempt to use a temporary directory\nfor these files when set <b>true</b>. Defaults to\n<b>false</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">mergetool.prompt</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Prompt\nbefore each invocation of the merge resolution\nprogram.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">notes.mergeStrategy</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Which\nmerge strategy to choose by default when resolving notes\nconflicts. Must be one of <b>manual</b>, <b>ours</b>,\n<b>theirs</b>, <b>union</b>, or <b>cat_sort_uniq</b>.\nDefaults to <b>manual</b>. See &quot;NOTES MERGE\nSTRATEGIES&quot; section of <a href=\"https://man.page/1/git-notes\">git-notes(1)</a> for more\ninformation on each strategy.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">notes.&lt;name&gt;.mergeStrategy</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Which\nmerge strategy to choose when doing a notes merge into\nrefs/notes/&lt;name&gt;. This overrides the more general\n&quot;notes.mergeStrategy&quot;. See the &quot;NOTES MERGE\nSTRATEGIES&quot; section in <a href=\"https://man.page/1/git-notes\">git-notes(1)</a> for more\ninformation on the available strategies.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">notes.displayRef</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\n(fully qualified) refname from which to show notes when\nshowing commit messages. The value of this variable can be\nset to a glob, in which case notes from all matching refs\nwill be shown. You may also specify this configuration\nvariable several times. A warning will be issued for refs\nthat do not exist, but a glob that does not match any refs\nis silently ignored.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nsetting can be overridden with the\n<b>GIT_NOTES_DISPLAY_REF</b> environment variable, which\nmust be a colon separated list of refs or globs.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">The\neffective value of &quot;core.notesRef&quot; (possibly\noverridden by GIT_NOTES_REF) is also implicitly added to the\nlist of refs to be displayed.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">notes.rewrite.&lt;command&gt;</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When\nrewriting commits with &lt;command&gt; (currently\n<b>amend</b> or <b>rebase</b>) and this variable is set to\n<b>true</b>, Git automatically copies your notes from the\noriginal to the rewritten commit. Defaults to <b>true</b>,\nbut see &quot;notes.rewriteRef&quot; below.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">notes.rewriteMode</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When\ncopying notes during a rewrite (see the\n&quot;notes.rewrite.&lt;command&gt;&quot; option),\ndetermines what to do if the target commit already has a\nnote. Must be one of <b>overwrite</b>, <b>concatenate</b>,\n<b>cat_sort_uniq</b>, or <b>ignore</b>. Defaults to\n<b>concatenate</b>.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nsetting can be overridden with the\n<b>GIT_NOTES_REWRITE_MODE</b> environment\nvariable.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">notes.rewriteRef</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When\ncopying notes during a rewrite, specifies the (fully\nqualified) ref whose notes should be copied. The ref may be\na glob, in which case notes in all matching refs will be\ncopied. You may also specify this configuration several\ntimes.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Does\nnot have a default value; you must configure this variable\nto enable note rewriting. Set it to\n<b>refs/notes/commits</b> to enable rewriting for the\ndefault commit notes.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nsetting can be overridden with the\n<b>GIT_NOTES_REWRITE_REF</b> environment variable, which\nmust be a colon separated list of refs or globs.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pack.window</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The size\nof the window used by <a href=\"https://man.page/1/git-pack-objects\">git-pack-objects(1)</a> when no\nwindow size is given on the command line. Defaults to\n10.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pack.depth</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nmaximum delta depth used by <a href=\"https://man.page/1/git-pack-objects\">git-pack-objects(1)</a> when\nno maximum depth is given on the command line. Defaults to\n50. Maximum value is 4095.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pack.windowMemory</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nmaximum size of memory that is consumed by each thread in\n<a href=\"https://man.page/1/git-pack-objects\">git-pack-objects(1)</a> for pack window memory when no\nlimit is given on the command line. The value can be\nsuffixed with &quot;k&quot;, &quot;m&quot;, or\n&quot;g&quot;. When left unconfigured (or set explicitly to\n0), there will be no limit.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pack.compression</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">An\ninteger -1..9, indicating the compression level for objects\nin a pack file. -1 is the zlib default. 0 means no\ncompression, and 1..9 are various speed/size tradeoffs, 9\nbeing slowest. If not set, defaults to core.compression. If\nthat is not set, defaults to -1, the zlib default, which is\n&quot;a default compromise between speed and compression\n(currently equivalent to level 6).&quot;</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Note\nthat changing the compression level will not automatically\nrecompress all existing objects. You can force recompression\nby passing the -F option to <a href=\"https://man.page/1/git-repack\">git-repack(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pack.allowPackReuse</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When\ntrue, and when reachability bitmaps are enabled,\npack-objects will try to send parts of the bitmapped\npackfile verbatim. This can reduce memory and CPU usage to\nserve fetches, but might result in sending a slightly larger\npack. Defaults to true.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pack.island</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">An\nextended regular expression configuring a set of delta\nislands. See &quot;DELTA ISLANDS&quot; in\n<a href=\"https://man.page/1/git-pack-objects\">git-pack-objects(1)</a> for details.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pack.islandCore</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specify\nan island name which gets to have its objects be packed\nfirst. This creates a kind of pseudo-pack at the front of\none pack, so that the objects from the specified island are\nhopefully faster to copy into any pack that should be served\nto a user requesting these objects. In practice this means\nthat the island specified should likely correspond to what\nis the most commonly cloned in the repo. See also\n&quot;DELTA ISLANDS&quot; in\n<a href=\"https://man.page/1/git-pack-objects\">git-pack-objects(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pack.deltaCacheSize</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nmaximum memory in bytes used for caching deltas in\n<a href=\"https://man.page/1/git-pack-objects\">git-pack-objects(1)</a> before writing them out to a\npack. This cache is used to speed up the writing object\nphase by not having to recompute the final delta result once\nthe best match for all objects is found. Repacking large\nrepositories on machines which are tight with memory might\nbe badly impacted by this though, especially if this cache\npushes the system into swapping. A value of 0 means no\nlimit. The smallest size of 1 byte may be used to virtually\ndisable this cache. Defaults to 256 MiB.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pack.deltaCacheLimit</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nmaximum size of a delta, that is cached in\n<a href=\"https://man.page/1/git-pack-objects\">git-pack-objects(1)</a>. This cache is used to speed up\nthe writing object phase by not having to recompute the\nfinal delta result once the best match for all objects is\nfound. Defaults to 1000. Maximum value is 65535.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pack.threads</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specifies\nthe number of threads to spawn when searching for best delta\nmatches. This requires that <a href=\"https://man.page/1/git-pack-objects\">git-pack-objects(1)</a> be\ncompiled with pthreads otherwise this option is ignored with\na warning. This is meant to reduce packing time on\nmultiprocessor machines. The required amount of memory for\nthe delta search window is however multiplied by the number\nof threads. Specifying 0 will cause Git to auto-detect the\nnumber of CPU&rsquo;s and set the number of threads\naccordingly.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pack.indexVersion</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specify\nthe default pack index version. Valid values are 1 for\nlegacy pack index used by Git versions prior to 1.5.2, and 2\nfor the new pack index with capabilities for packs larger\nthan 4 GB as well as proper protection against the repacking\nof corrupted packs. Version 2 is the default. Note that\nversion 2 is enforced and this config option ignored\nwhenever the corresponding pack is larger than 2\nGB.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">If\nyou have an old Git that does not understand the version 2\n<b>*.idx</b> file, cloning or fetching over a non native\nprotocol (e.g. &quot;http&quot;) that will copy both\n<b>*.pack</b> file and corresponding <b>*.idx</b> file from\nthe other side may give you a repository that cannot be\naccessed with your older version of Git. If the\n<b>*.pack</b> file is smaller than 2 GB, however, you can\nuse <a href=\"https://man.page/1/git-index-pack\">git-index-pack(1)</a> on the *.pack file to\nregenerate the <b>*.idx</b> file.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pack.packSizeLimit</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nmaximum size of a pack. This setting only affects packing to\na file when repacking, i.e. the git:// protocol is\nunaffected. It can be overridden by the\n<b>--max-pack-size</b> option of <a href=\"https://man.page/1/git-repack\">git-repack(1)</a>.\nReaching this limit results in the creation of multiple\npackfiles.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Note\nthat this option is rarely useful, and may result in a\nlarger total on-disk size (because Git will not store deltas\nbetween packs), as well as worse runtime performance (object\nlookup within multiple packs is slower than a single pack,\nand optimizations like reachability bitmaps cannot cope with\nmultiple packs).</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">If\nyou need to actively run Git using smaller packfiles (e.g.,\nbecause your filesystem does not support large files), this\noption may help. But if your goal is to transmit a packfile\nover a medium that supports limited sizes (e.g., removable\nmedia that cannot store the whole repository), you are\nlikely better off creating a single large packfile and\nsplitting it using a generic multi-volume archive tool\n(e.g., Unix <b>split</b>).</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">The\nminimum size allowed is limited to 1 MiB. The default is\nunlimited. Common unit suffixes of <i>k</i>, <i>m</i>, or\n<i>g</i> are supported.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pack.useBitmaps</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When\ntrue, git will use pack bitmaps (if available) when packing\nto stdout (e.g., during the server side of a fetch).\nDefaults to true. You should not generally need to turn this\noff unless you are debugging pack bitmaps.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pack.useSparse</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When\ntrue, git will default to using the <i>--sparse</i> option\nin <i>git pack-objects</i> when the <i>--revs</i> option is\npresent. This algorithm only walks trees that appear in\npaths that introduce new objects. This can have significant\nperformance benefits when computing a pack to send a small\nchange. However, it is possible that extra objects are added\nto the pack-file if the included commits contain certain\ntypes of direct renames. Default is <b>true</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pack.preferBitmapTips</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When\nselecting which commits will receive bitmaps, prefer a\ncommit at the tip of any reference that is a suffix of any\nvalue of this configuration over any other commits in the\n&quot;selection window&quot;.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Note\nthat setting this configuration to <b>refs/foo</b> does not\nmean that the commits at the tips of <b>refs/foo/bar</b> and\n<b>refs/foo/baz</b> will necessarily be selected. This is\nbecause commits are selected for bitmaps from within a\nseries of windows of variable length.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">If\na commit at the tip of any reference which is a suffix of\nany value of this configuration is seen in a window, it is\nimmediately given preference over any other commit in that\nwindow.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pack.writeBitmaps\n(deprecated)</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This is a\ndeprecated synonym for\n<b>repack.writeBitmaps</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pack.writeBitmapHashCache</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When\ntrue, git will include a &quot;hash cache&quot; section in\nthe bitmap index (if one is written). This cache can be used\nto feed git&rsquo;s delta heuristics, potentially leading to\nbetter deltas between bitmapped and non-bitmapped objects\n(e.g., when serving a fetch between an older, bitmapped pack\nand objects that have been pushed since the last gc). The\ndownside is that it consumes 4 bytes per object of disk\nspace. Defaults to true.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">When\nwriting a multi-pack reachability bitmap, no new namehashes\nare computed; instead, any namehashes stored in an existing\nbitmap are permuted into their appropriate location when\nwriting a new bitmap.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pack.writeReverseIndex</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When\ntrue, git will write a corresponding .rev file (see:</font>\n<b><font color=\"#0000FF\">Documentation/technical/pack-format.txt</font></b>\n<small><font color=\"#000000\">[3]</font></small>\n<font color=\"#000000\">) for each new packfile that it writes\nin all places except for <a href=\"https://man.page/1/git-fast-import\">git-fast-import(1)</a> and in\nthe bulk checkin mechanism. Defaults to false.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pager.&lt;cmd&gt;</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If the\nvalue is boolean, turns on or off pagination of the output\nof a particular Git subcommand when writing to a tty.\nOtherwise, turns on pagination for the subcommand using the\npager specified by the value of <b>pager.&lt;cmd&gt;</b>. If\n<b>--paginate</b> or <b>--no-pager</b> is specified on the\ncommand line, it takes precedence over this option. To\ndisable pagination for all commands, set <b>core.pager</b>\nor <b>GIT_PAGER</b> to <b>cat</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pretty.&lt;name&gt;</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Alias for\na --pretty= format string, as specified in\n<a href=\"https://man.page/1/git-log\">git-log(1)</a>. Any aliases defined here can be used just\nas the built-in pretty formats could. For example, running\n<b>git config pretty.changelog &quot;format:* %H\n%s&quot;</b> would cause the invocation <b>git log\n--pretty=changelog</b> to be equivalent to running <b>git\nlog &quot;--pretty=format:* %H %s&quot;</b>. Note that an\nalias with the same name as a built-in format will be\nsilently ignored.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">protocol.allow</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If set,\nprovide a user defined default policy for all protocols\nwhich don&rsquo;t explicitly have a policy\n(<b>protocol.&lt;name&gt;.allow</b>). By default, if unset,\nknown-safe protocols (http, https, git, ssh) have a default\npolicy of <b>always</b>, known-dangerous protocols (ext)\nhave a default policy of <b>never</b>, and all other\nprotocols (including file) have a default policy of\n<b>user</b>. Supported policies:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>always</b> - protocol is always able to be\nused.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>never</b> - protocol is never able to be used.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>user</b> - protocol is only able to be used when\n<b>GIT_PROTOCOL_FROM_USER</b> is either unset or has a value\nof 1. This policy should be used when you want a protocol to\nbe directly usable by the user but don&rsquo;t want it used\nby commands which execute clone/fetch/push commands without\nuser input, e.g. recursive submodule\ninitialization.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">protocol.&lt;name&gt;.allow</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Set a\npolicy to be used by protocol <b>&lt;name&gt;</b> with\nclone/fetch/push commands. See <b>protocol.allow</b> above\nfor the available policies.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">The\nprotocol names currently used by git are:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>file</b>: any local file-based path (including\n<b>file://</b> URLs, or local paths)</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>git</b>: the anonymous git protocol over a direct TCP\nconnection (or proxy, if configured)</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>ssh</b>: git over ssh (including <b>host:path</b> syntax,\n<b>ssh://</b>, etc).</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>http</b>: git over http, both &quot;smart http&quot; and\n&quot;dumb http&quot;. Note that this does <i>not</i>\ninclude <b>https</b>; if you want to configure both, you\nmust do so individually.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nany external helpers are named by their protocol (e.g., use\n<b>hg</b> to allow the <b>git-remote-hg</b>\nhelper)</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">protocol.version</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If set,\nclients will attempt to communicate with a server using the\nspecified protocol version. If the server does not support\nit, communication falls back to version 0. If unset, the\ndefault is <b>2</b>. Supported versions:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>0</b> - the original wire protocol.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>1</b> - the original wire protocol with the addition of a\nversion string in the initial response from the\nserver.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>2</b> -</font> <b><font color=\"#0000FF\">wire protocol\nversion 2</font></b>\n<small><font color=\"#000000\">[4]</font></small>\n<font color=\"#000000\">.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pull.ff</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">By\ndefault, Git does not create an extra merge commit when\nmerging a commit that is a descendant of the current commit.\nInstead, the tip of the current branch is fast-forwarded.\nWhen set to <b>false</b>, this variable tells Git to create\nan extra merge commit in such a case (equivalent to giving\nthe <b>--no-ff</b> option from the command line). When set\nto <b>only</b>, only such fast-forward merges are allowed\n(equivalent to giving the <b>--ff-only</b> option from the\ncommand line). This setting overrides <b>merge.ff</b> when\npulling.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pull.rebase</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When\ntrue, rebase branches on top of the fetched branch, instead\nof merging the default branch from the default remote when\n&quot;git pull&quot; is run. See\n&quot;branch.&lt;name&gt;.rebase&quot; for setting this on a\nper-branch basis.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">When\n<b>merges</b> (or just <i>m</i>), pass the\n<b>--rebase-merges</b> option to <i>git rebase</i> so that\nthe local merge commits are included in the rebase (see\n<a href=\"https://man.page/1/git-rebase\">git-rebase(1)</a> for details).</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">When\nthe value is <b>interactive</b> (or just <i>i</i>), the\nrebase is run in interactive mode.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\"><b>NOTE</b>:\nthis is a possibly dangerous operation; do <b>not</b> use it\nunless you understand the implications (see\n<a href=\"https://man.page/1/git-rebase\">git-rebase(1)</a> for details).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pull.octopus</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\ndefault merge strategy to use when pulling multiple branches\nat once.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pull.twohead</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\ndefault merge strategy to use when pulling a single\nbranch.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">push.default</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Defines\nthe action <b>git push</b> should take if no refspec is\ngiven (whether from the command-line, config, or elsewhere).\nDifferent values are well-suited for specific workflows; for\ninstance, in a purely central workflow (i.e. the fetch\nsource is equal to the push destination), <b>upstream</b> is\nprobably what you want. Possible values are:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>nothing</b> - do not push anything (error out) unless a\nrefspec is given. This is primarily meant for people who\nwant to avoid mistakes by always being explicit.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>current</b> - push the current branch to update a branch\nwith the same name on the receiving end. Works in both\ncentral and non-central workflows.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>upstream</b> - push the current branch back to the branch\nwhose changes are usually integrated into the current branch\n(which is called <b>@{upstream}</b>). This mode only makes\nsense if you are pushing to the same repository you would\nnormally pull from (i.e. central workflow).</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>tracking</b> - This is a deprecated synonym for\n<b>upstream</b>.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>simple</b> - pushes the current branch with the same name\non the remote.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">If\nyou are working on a centralized workflow (pushing to the\nsame repository you pull from, which is typically\n<b>origin</b>), then you need to configure an upstream\nbranch with the same name.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">This\nmode is the default since Git 2.0, and is the safest option\nsuited for beginners.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>matching</b> - push all branches having the same name on\nboth ends. This makes the repository you are pushing to\nremember the set of branches that will be pushed out (e.g.\nif you always push <i>maint</i> and <i>master</i> there and\nno other branches, the repository you push to will have\nthese two branches, and your local <i>maint</i> and\n<i>master</i> will be pushed there).</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">To\nuse this mode effectively, you have to make sure <i>all</i>\nthe branches you would push out are ready to be pushed out\nbefore running <i>git push</i>, as the whole point of this\nmode is to allow you to push all of the branches in one go.\nIf you usually finish work on only one branch and push out\nthe result, while other branches are unfinished, this mode\nis not for you. Also this mode is not suitable for pushing\ninto a shared central repository, as other people may add\nnew branches there, or update the tip of existing branches\noutside your control.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">This\nused to be the default, but not since Git 2.0 (<b>simple</b>\nis the new default).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">push.followTags</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If set to\ntrue enable <b>--follow-tags</b> option by default. You may\noverride this configuration at time of push by specifying\n<b>--no-follow-tags</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">push.gpgSign</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">May be\nset to a boolean value, or the string <i>if-asked</i>. A\ntrue value causes all pushes to be GPG signed, as if\n<b>--signed</b> is passed to <a href=\"https://man.page/1/git-push\">git-push(1)</a>. The string\n<i>if-asked</i> causes pushes to be signed if the server\nsupports it, as if <b>--signed=if-asked</b> is passed to\n<i>git push</i>. A false value may override a value from a\nlower-priority config file. An explicit command-line flag\nalways overrides this config option.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">push.pushOption</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When no\n<b>--push-option=&lt;option&gt;</b> argument is given from\nthe command line, <b>git push</b> behaves as if each\n&lt;value&gt; of this variable is given as\n<b>--push-option=&lt;value&gt;</b>.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nis a multi-valued variable, and an empty value can be used\nin a higher priority configuration file (e.g.\n<b>.git/config</b> in a repository) to clear the values\ninherited from a lower priority configuration files (e.g.\n<b>$HOME/.gitconfig</b>).</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">Example:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">/etc/gitconfig\n<br>\npush.pushoption = a <br>\npush.pushoption = b</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">~/.gitconfig\n<br>\npush.pushoption = c</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">repo/.git/config\n<br>\npush.pushoption = <br>\npush.pushoption = b</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">This\nwill result in only b (a and c are cleared).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">push.recurseSubmodules</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Make sure\nall submodule commits used by the revisions to be pushed are\navailable on a remote-tracking branch. If the value is\n<i>check</i> then Git will verify that all submodule commits\nthat changed in the revisions to be pushed are available on\nat least one remote of the submodule. If any commits are\nmissing, the push will be aborted and exit with non-zero\nstatus. If the value is <i>on-demand</i> then all submodules\nthat changed in the revisions to be pushed will be pushed.\nIf on-demand was not able to push all necessary revisions it\nwill also be aborted and exit with non-zero status. If the\nvalue is <i>no</i> then default behavior of ignoring\nsubmodules when pushing is retained. You may override this\nconfiguration at time of push by specifying\n<i>--recurse-submodules=check|on-demand|no</i>. If not set,\n<i>no</i> is used by default, unless\n<i>submodule.recurse</i> is set (in which case a <i>true</i>\nvalue means <i>on-demand</i>).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">push.useForceIfIncludes</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If set to\n&quot;true&quot;, it is equivalent to specifying\n<b>--force-if-includes</b> as an option to\n<a href=\"https://man.page/1/git-push\">git-push(1)</a> in the command line. Adding\n<b>--no-force-if-includes</b> at the time of push overrides\nthis configuration setting.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">push.negotiate</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If set to\n&quot;true&quot;, attempt to reduce the size of the packfile\nsent by rounds of negotiation in which the client and the\nserver attempt to find commits in common. If\n&quot;false&quot;, Git will rely solely on the\nserver&rsquo;s ref advertisement to find commits in\ncommon.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">rebase.backend</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Default\nbackend to use for rebasing. Possible choices are\n<i>apply</i> or <i>merge</i>. In the future, if the merge\nbackend gains all remaining capabilities of the apply\nbackend, this setting may become unused.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">rebase.stat</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Whether\nto show a diffstat of what changed upstream since the last\nrebase. False by default.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">rebase.autoSquash</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If set to\ntrue enable <b>--autosquash</b> option by\ndefault.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">rebase.autoStash</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When set\nto true, automatically create a temporary stash entry before\nthe operation begins, and apply it after the operation ends.\nThis means that you can run rebase on a dirty worktree.\nHowever, use with care: the final stash application after a\nsuccessful rebase might result in non-trivial conflicts.\nThis option can be overridden by the <b>--no-autostash</b>\nand <b>--autostash</b> options of <a href=\"https://man.page/1/git-rebase\">git-rebase(1)</a>.\nDefaults to false.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">rebase.missingCommitsCheck</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If set to\n&quot;warn&quot;, git rebase -i will print a warning if some\ncommits are removed (e.g. a line was deleted), however the\nrebase will still proceed. If set to &quot;error&quot;, it\nwill print the previous warning and stop the rebase, <i>git\nrebase --edit-todo</i> can then be used to correct the\nerror. If set to &quot;ignore&quot;, no checking is done. To\ndrop a commit without warning or error, use the <b>drop</b>\ncommand in the todo list. Defaults to\n&quot;ignore&quot;.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">rebase.instructionFormat</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A format\nstring, as specified in <a href=\"https://man.page/1/git-log\">git-log(1)</a>, to be used for\nthe todo list during an interactive rebase. The format will\nautomatically have the long commit hash prepended to the\nformat.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">rebase.abbreviateCommands</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If set to\ntrue, <b>git rebase</b> will use abbreviated command names\nin the todo list resulting in something like\nthis:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">p\ndeadbee The oneline of the commit <br>\np fa1afe1 The oneline of the next commit <br>\n...</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">instead\nof:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">pick\ndeadbee The oneline of the commit <br>\npick fa1afe1 The oneline of the next commit <br>\n...</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Defaults\nto false.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">rebase.rescheduleFailedExec</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Automatically\nreschedule <b>exec</b> commands that failed. This only makes\nsense in interactive mode (or when an <b>--exec</b> option\nwas provided). This is the same as specifying the\n<b>--reschedule-failed-exec</b> option.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">rebase.forkPoint</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If set to\nfalse set <b>--no-fork-point</b> option by\ndefault.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">receive.advertiseAtomic</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">By\ndefault, git-receive-pack will advertise the atomic push\ncapability to its clients. If you don&rsquo;t want to\nadvertise this capability, set this variable to\nfalse.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">receive.advertisePushOptions</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When set\nto true, git-receive-pack will advertise the push options\ncapability to its clients. False by default.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">receive.autogc</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">By\ndefault, git-receive-pack will run &quot;git-gc --auto&quot;\nafter receiving data from git-push and updating refs. You\ncan stop it by setting this variable to false.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">receive.certNonceSeed</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">By\nsetting this variable to a string, <b>git receive-pack</b>\nwill accept a <b>git push --signed</b> and verifies it by\nusing a &quot;nonce&quot; protected by HMAC using this\nstring as a secret key.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">receive.certNonceSlop</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When a\n<b>git push --signed</b> sent a push certificate with a\n&quot;nonce&quot; that was issued by a receive-pack serving\nthe same repository within this many seconds, export the\n&quot;nonce&quot; found in the certificate to\n<b>GIT_PUSH_CERT_NONCE</b> to the hooks (instead of what the\nreceive-pack asked the sending side to include). This may\nallow writing checks in <b>pre-receive</b> and\n<b>post-receive</b> a bit easier. Instead of checking\n<b>GIT_PUSH_CERT_NONCE_SLOP</b> environment variable that\nrecords by how many seconds the nonce is stale to decide if\nthey want to accept the certificate, they only can check\n<b>GIT_PUSH_CERT_NONCE_STATUS</b> is <b>OK</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">receive.fsckObjects</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If it is\nset to true, git-receive-pack will check all received\nobjects. See <b>transfer.fsckObjects</b> for what&rsquo;s\nchecked. Defaults to false. If not set, the value of\n<b>transfer.fsckObjects</b> is used instead.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">receive.fsck.&lt;msg-id&gt;</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Acts like\n<b>fsck.&lt;msg-id&gt;</b>, but is used by\n<a href=\"https://man.page/1/git-receive-pack\">git-receive-pack(1)</a> instead of <a href=\"https://man.page/1/git-fsck\">git-fsck(1)</a>.\nSee the <b>fsck.&lt;msg-id&gt;</b> documentation for\ndetails.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">receive.fsck.skipList</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Acts like\n<b>fsck.skipList</b>, but is used by\n<a href=\"https://man.page/1/git-receive-pack\">git-receive-pack(1)</a> instead of <a href=\"https://man.page/1/git-fsck\">git-fsck(1)</a>.\nSee the <b>fsck.skipList</b> documentation for\ndetails.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">receive.keepAlive</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">After\nreceiving the pack from the client, <b>receive-pack</b> may\nproduce no output (if <b>--quiet</b> was specified) while\nprocessing the pack, causing some networks to drop the TCP\nconnection. With this option set, if <b>receive-pack</b>\ndoes not transmit any data in this phase for\n<b>receive.keepAlive</b> seconds, it will send a short\nkeepalive packet. The default is 5 seconds; set to 0 to\ndisable keepalives entirely.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">receive.unpackLimit</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If the\nnumber of objects received in a push is below this limit\nthen the objects will be unpacked into loose object files.\nHowever if the number of received objects equals or exceeds\nthis limit then the received pack will be stored as a pack,\nafter adding any missing delta bases. Storing the pack from\na push can make the push operation complete faster,\nespecially on slow filesystems. If not set, the value of\n<b>transfer.unpackLimit</b> is used instead.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">receive.maxInputSize</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If the\nsize of the incoming pack stream is larger than this limit,\nthen git-receive-pack will error out, instead of accepting\nthe pack file. If not set or set to 0, then the size is\nunlimited.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">receive.denyDeletes</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If set to\ntrue, git-receive-pack will deny a ref update that deletes\nthe ref. Use this to prevent such a ref deletion via a\npush.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">receive.denyDeleteCurrent</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If set to\ntrue, git-receive-pack will deny a ref update that deletes\nthe currently checked out branch of a non-bare\nrepository.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">receive.denyCurrentBranch</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If set to\ntrue or &quot;refuse&quot;, git-receive-pack will deny a ref\nupdate to the currently checked out branch of a non-bare\nrepository. Such a push is potentially dangerous because it\nbrings the HEAD out of sync with the index and working tree.\nIf set to &quot;warn&quot;, print a warning of such a push\nto stderr, but allow the push to proceed. If set to false or\n&quot;ignore&quot;, allow such pushes with no message.\nDefaults to &quot;refuse&quot;.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Another\noption is &quot;updateInstead&quot; which will update the\nworking tree if pushing into the current branch. This option\nis intended for synchronizing working directories when one\nside is not easily accessible via interactive ssh (e.g. a\nlive web site, hence the requirement that the working\ndirectory be clean). This mode also comes in handy when\ndeveloping inside a VM to test and fix code on different\nOperating Systems.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">By\ndefault, &quot;updateInstead&quot; will refuse the push if\nthe working tree or the index have any difference from the\nHEAD, but the <b>push-to-checkout</b> hook can be used to\ncustomize this. See <a href=\"https://man.page/5/githooks\">githooks(5)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">receive.denyNonFastForwards</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If set to\ntrue, git-receive-pack will deny a ref update which is not a\nfast-forward. Use this to prevent such an update via a push,\neven if that push is forced. This configuration variable is\nset when initializing a shared repository.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">receive.hideRefs</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\nvariable is the same as <b>transfer.hideRefs</b>, but\napplies only to <b>receive-pack</b> (and so affects pushes,\nbut not fetches). An attempt to update or delete a hidden\nref by <b>git push</b> is rejected.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">receive.procReceiveRefs</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This is a\nmulti-valued variable that defines reference prefixes to\nmatch the commands in <b>receive-pack</b>. Commands matching\nthe prefixes will be executed by an external hook\n&quot;proc-receive&quot;, instead of the internal\n<b>execute_commands</b> function. If this variable is not\ndefined, the &quot;proc-receive&quot; hook will never be\nused, and all commands will be executed by the internal\n<b>execute_commands</b> function.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">For\nexample, if this variable is set to &quot;refs/for&quot;,\npushing to reference such as &quot;refs/for/master&quot;\nwill not create or update a reference named\n&quot;refs/for/master&quot;, but may create or update a pull\nrequest directly by running the hook\n&quot;proc-receive&quot;.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Optional\nmodifiers can be provided in the beginning of the value to\nfilter commands for specific actions: create (a), modify\n(m), delete (d). A <b>!</b> can be included in the modifiers\nto negate the reference prefix entry. E.g.:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">git\nconfig --system --add receive.procReceiveRefs ad:refs/heads\n<br>\ngit config --system --add receive.procReceiveRefs\n!:refs/heads</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">receive.updateServerInfo</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If set to\ntrue, git-receive-pack will run git-update-server-info after\nreceiving data from git-push and updating refs.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">receive.shallowUpdate</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If set to\ntrue, .git/shallow can be updated when new refs require new\nshallow roots. Otherwise those refs are rejected.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote.pushDefault</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nremote to push to by default. Overrides\n<b>branch.&lt;name&gt;.remote</b> for all branches, and is\noverridden by <b>branch.&lt;name&gt;.pushRemote</b> for\nspecific branches.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote.&lt;name&gt;.url</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The URL\nof a remote repository. See <a href=\"https://man.page/1/git-fetch\">git-fetch(1)</a> or\n<a href=\"https://man.page/1/git-push\">git-push(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote.&lt;name&gt;.pushurl</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The push\nURL of a remote repository. See\n<a href=\"https://man.page/1/git-push\">git-push(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote.&lt;name&gt;.proxy</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">For\nremotes that require curl (http, https and ftp), the URL to\nthe proxy to use for that remote. Set to the empty string to\ndisable proxying for that remote.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote.&lt;name&gt;.proxyAuthMethod</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">For\nremotes that require curl (http, https and ftp), the method\nto use for authenticating against the proxy in use (probably\nset in <b>remote.&lt;name&gt;.proxy</b>). See\n<b>http.proxyAuthMethod</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote.&lt;name&gt;.fetch</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\ndefault set of &quot;refspec&quot; for <a href=\"https://man.page/1/git-fetch\">git-fetch(1)</a>.\nSee <a href=\"https://man.page/1/git-fetch\">git-fetch(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote.&lt;name&gt;.push</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\ndefault set of &quot;refspec&quot; for <a href=\"https://man.page/1/git-push\">git-push(1)</a>.\nSee <a href=\"https://man.page/1/git-push\">git-push(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote.&lt;name&gt;.mirror</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If true,\npushing to this remote will automatically behave as if the\n<b>--mirror</b> option was given on the command\nline.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote.&lt;name&gt;.skipDefaultUpdate</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If true,\nthis remote will be skipped by default when updating using\n<a href=\"https://man.page/1/git-fetch\">git-fetch(1)</a> or the <b>update</b> subcommand of\n<a href=\"https://man.page/1/git-remote\">git-remote(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote.&lt;name&gt;.skipFetchAll</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If true,\nthis remote will be skipped by default when updating using\n<a href=\"https://man.page/1/git-fetch\">git-fetch(1)</a> or the <b>update</b> subcommand of\n<a href=\"https://man.page/1/git-remote\">git-remote(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote.&lt;name&gt;.receivepack</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\ndefault program to execute on the remote side when pushing.\nSee option --receive-pack of <a href=\"https://man.page/1/git-push\">git-push(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote.&lt;name&gt;.uploadpack</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\ndefault program to execute on the remote side when fetching.\nSee option --upload-pack of\n<a href=\"https://man.page/1/git-fetch-pack\">git-fetch-pack(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote.&lt;name&gt;.tagOpt</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Setting\nthis value to --no-tags disables automatic tag following\nwhen fetching from remote &lt;name&gt;. Setting it to --tags\nwill fetch every tag from remote &lt;name&gt;, even if they\nare not reachable from remote branch heads. Passing these\nflags directly to <a href=\"https://man.page/1/git-fetch\">git-fetch(1)</a> can override this\nsetting. See options --tags and --no-tags of\n<a href=\"https://man.page/1/git-fetch\">git-fetch(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote.&lt;name&gt;.vcs</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Setting\nthis to a value &lt;vcs&gt; will cause Git to interact with\nthe remote with the git-remote-&lt;vcs&gt;\nhelper.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote.&lt;name&gt;.prune</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When set\nto true, fetching from this remote by default will also\nremove any remote-tracking references that no longer exist\non the remote (as if the <b>--prune</b> option was given on\nthe command line). Overrides <b>fetch.prune</b> settings, if\nany.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote.&lt;name&gt;.pruneTags</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When set\nto true, fetching from this remote by default will also\nremove any local tags that no longer exist on the remote if\npruning is activated in general via\n<b>remote.&lt;name&gt;.prune</b>, <b>fetch.prune</b> or\n<b>--prune</b>. Overrides <b>fetch.pruneTags</b> settings,\nif any.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">See\nalso <b>remote.&lt;name&gt;.prune</b> and the PRUNING\nsection of <a href=\"https://man.page/1/git-fetch\">git-fetch(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote.&lt;name&gt;.promisor</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When set\nto true, this remote will be used to fetch promisor\nobjects.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote.&lt;name&gt;.partialclonefilter</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nfilter that will be applied when fetching from this promisor\nremote.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remotes.&lt;group&gt;</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The list\nof remotes which are fetched by &quot;git remote update\n&lt;group&gt;&quot;. See <a href=\"https://man.page/1/git-remote\">git-remote(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">repack.useDeltaBaseOffset</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">By\ndefault, <a href=\"https://man.page/1/git-repack\">git-repack(1)</a> creates packs that use\ndelta-base offset. If you need to share your repository with\nGit older than version 1.4.4, either directly or via a dumb\nprotocol such as http, then you need to set this option to\n&quot;false&quot; and repack. Access from old Git versions\nover the native protocol are unaffected by this\noption.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">repack.packKeptObjects</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If set to\ntrue, makes <b>git repack</b> act as if\n<b>--pack-kept-objects</b> was passed. See\n<a href=\"https://man.page/1/git-repack\">git-repack(1)</a> for details. Defaults to <b>false</b>\nnormally, but <b>true</b> if a bitmap index is being written\n(either via <b>--write-bitmap-index</b> or\n<b>repack.writeBitmaps</b>).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">repack.useDeltaIslands</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If set to\ntrue, makes <b>git repack</b> act as if\n<b>--delta-islands</b> was passed. Defaults to\n<b>false</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">repack.writeBitmaps</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When\ntrue, git will write a bitmap index when packing all objects\nto disk (e.g., when <b>git repack -a</b> is run). This index\ncan speed up the &quot;counting objects&quot; phase of\nsubsequent packs created for clones and fetches, at the cost\nof some disk space and extra time spent on the initial\nrepack. This has no effect if multiple packfiles are\ncreated. Defaults to true on bare repos, false\notherwise.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">rerere.autoUpdate</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When set\nto true, <b>git-rerere</b> updates the index with the\nresulting contents after it cleanly resolves conflicts using\npreviously recorded resolution. Defaults to\nfalse.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">rerere.enabled</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Activate\nrecording of resolved conflicts, so that identical conflict\nhunks can be resolved automatically, should they be\nencountered again. By default, <a href=\"https://man.page/1/git-rerere\">git-rerere(1)</a> is\nenabled if there is an <b>rr-cache</b> directory under the\n<b>$GIT_DIR</b>, e.g. if &quot;rerere&quot; was previously\nused in the repository.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">reset.quiet</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When set\nto true, <i>git reset</i> will default to the <i>--quiet</i>\noption.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">safe.directory</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">These\nconfig entries specify Git-tracked directories that are\nconsidered safe even if they are owned by someone other than\nthe current user. By default, Git will refuse to even parse\na Git config of a repository owned by someone else, let\nalone run its hooks, and this config setting allows users to\nspecify exceptions, e.g. for intentionally shared\nrepositories (see the <b>--shared</b> option in\n<a href=\"https://man.page/1/git-init\">git-init(1)</a>).</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nis a multi-valued setting, i.e. you can add more than one\ndirectory via <b>git config --add</b>. To reset the list of\nsafe directories (e.g. to override any such directories\nspecified in the system config), add a <b>safe.directory</b>\nentry with an empty value.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nconfig setting is only respected when specified in a system\nor global config, not when it is specified in a repository\nconfig or via the command line option <b>-c\nsafe.directory=&lt;path&gt;</b>.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">The\nvalue of this setting is interpolated, i.e.\n<b>~/&lt;path&gt;</b> expands to a path relative to the home\ndirectory and <b>%(prefix)/&lt;path&gt;</b> expands to a\npath relative to Git&rsquo;s (runtime) prefix.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">To\ncompletely opt-out of this security check, set\n<b>safe.directory</b> to the string <b>*</b>. This will\nallow all repositories to be treated as if their directory\nwas listed in the <b>safe.directory</b> list. If\n<b>safe.directory=*</b> is set in system config and you want\nto re-enable this protection, then initialize your list with\nan empty value before listing the repositories that you deem\nsafe.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">As\nexplained, Git only allows you to access repositories owned\nby yourself, i.e. the user who is running Git, by default.\nWhen Git is running as <i>root</i> in a non Windows platform\nthat provides sudo, however, git checks the SUDO_UID\nenvironment variable that sudo creates and will allow access\nto the uid recorded as its value in addition to the id from\n<i>root</i>. This is to make it easy to perform a common\nsequence during installation &quot;make &amp;&amp; sudo make\ninstall&quot;. A git process running under <i>sudo</i> runs\nas <i>root</i> but the <i>sudo</i> command exports the\nenvironment variable to record which id the original user\nhas. If that is not what you would prefer and want git to\nonly trust repositories that are owned by root instead, then\nyou can remove the <b>SUDO_UID</b> variable from\nroot&rsquo;s environment before invoking git.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">sendemail.identity</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A\nconfiguration identity. When given, causes values in the\n<i>sendemail.&lt;identity&gt;</i> subsection to take\nprecedence over values in the <i>sendemail</i> section. The\ndefault identity is the value of\n<b>sendemail.identity</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">sendemail.smtpEncryption</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">See\n<a href=\"https://man.page/1/git-send-email\">git-send-email(1)</a> for description. Note that this\nsetting is not subject to the <i>identity</i>\nmechanism.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">sendemail.smtpsslcertpath</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Path to\nca-certificates (either a directory or a single file). Set\nit to an empty string to disable certificate\nverification.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">sendemail.&lt;identity&gt;.*</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Identity-specific\nversions of the <i>sendemail.*</i> parameters found below,\ntaking precedence over those when this identity is selected,\nthrough either the command-line or\n<b>sendemail.identity</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">sendemail.aliasesFile,\nsendemail.aliasFileType, sendemail.annotate, sendemail.bcc,\nsendemail.cc, sendemail.ccCmd, sendemail.chainReplyTo,\nsendemail.confirm, sendemail.envelopeSender, sendemail.from,\nsendemail.multiEdit, sendemail.signedoffbycc,\nsendemail.smtpPass, sendemail.suppresscc,\nsendemail.suppressFrom, sendemail.to, sendemail.tocmd,\nsendemail.smtpDomain, sendemail.smtpServer,\nsendemail.smtpServerPort, sendemail.smtpServerOption,\nsendemail.smtpUser, sendemail.thread,\nsendemail.transferEncoding, sendemail.validate,\nsendemail.xmailer</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">See\n<a href=\"https://man.page/1/git-send-email\">git-send-email(1)</a> for description.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">sendemail.signedoffcc\n(deprecated)</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Deprecated\nalias for <b>sendemail.signedoffbycc</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">sendemail.smtpBatchSize</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Number of\nmessages to be sent per connection, after that a relogin\nwill happen. If the value is 0 or undefined, send all\nmessages in one connection. See also the <b>--batch-size</b>\noption of <a href=\"https://man.page/1/git-send-email\">git-send-email(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">sendemail.smtpReloginDelay</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Seconds\nwait before reconnecting to smtp server. See also the\n<b>--relogin-delay</b> option of\n<a href=\"https://man.page/1/git-send-email\">git-send-email(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">sendemail.forbidSendmailVariables</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">To avoid\ncommon misconfiguration mistakes, <a href=\"https://man.page/1/git-send-email\">git-send-email(1)</a>\nwill abort with a warning if any configuration options for\n&quot;sendmail&quot; exist. Set this variable to bypass the\ncheck.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">sequence.editor</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Text\neditor used by <b>git rebase -i</b> for editing the rebase\ninstruction file. The value is meant to be interpreted by\nthe shell when it is used. It can be overridden by the\n<b>GIT_SEQUENCE_EDITOR</b> environment variable. When not\nconfigured the default commit message editor is used\ninstead.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">showBranch.default</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\ndefault set of branches for <a href=\"https://man.page/1/git-show-branch\">git-show-branch(1)</a>. See\n<a href=\"https://man.page/1/git-show-branch\">git-show-branch(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">splitIndex.maxPercentChange</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When the\nsplit index feature is used, this specifies the percent of\nentries the split index can contain compared to the total\nnumber of entries in both the split index and the shared\nindex before a new shared index is written. The value should\nbe between 0 and 100. If the value is 0 then a new shared\nindex is always written, if it is 100 a new shared index is\nnever written. By default the value is 20, so a new shared\nindex is written if the number of entries in the split index\nwould be greater than 20 percent of the total number of\nentries. See <a href=\"https://man.page/1/git-update-index\">git-update-index(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">splitIndex.sharedIndexExpire</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When the\nsplit index feature is used, shared index files that were\nnot modified since the time this variable specifies will be\nremoved when a new shared index file is created. The value\n&quot;now&quot; expires all entries immediately, and\n&quot;never&quot; suppresses expiration altogether. The\ndefault value is &quot;2.weeks.ago&quot;. Note that a shared\nindex file is considered modified (for the purpose of\nexpiration) each time a new split-index file is either\ncreated based on it or read from it. See\n<a href=\"https://man.page/1/git-update-index\">git-update-index(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">ssh.variant</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">By\ndefault, Git determines the command line arguments to use\nbased on the basename of the configured SSH command\n(configured using the environment variable <b>GIT_SSH</b> or\n<b>GIT_SSH_COMMAND</b> or the config setting\n<b>core.sshCommand</b>). If the basename is unrecognized,\nGit will attempt to detect support of OpenSSH options by\nfirst invoking the configured SSH command with the <b>-G</b>\n(print configuration) option and will subsequently use\nOpenSSH options (if that is successful) or no options\nbesides the host and remote command (if it\nfails).</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">The\nconfig variable <b>ssh.variant</b> can be set to override\nthis detection. Valid values are <b>ssh</b> (to use OpenSSH\noptions), <b>plink</b>, <b>putty</b>, <b>tortoiseplink</b>,\n<b>simple</b> (no options except the host and remote\ncommand). The default auto-detection can be explicitly\nrequested using the value <b>auto</b>. Any other value is\ntreated as <b>ssh</b>. This setting can also be overridden\nvia the environment variable\n<b>GIT_SSH_VARIANT</b>.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">The\ncurrent command-line parameters used for each variant are as\nfollows:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>ssh</b> - [-p port] [-4] [-6] [-o option] [username@]host\ncommand</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>simple</b> - [username@]host command</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>plink</b> or <b>putty</b> - [-P port] [-4] [-6]\n[username@]host command</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>tortoiseplink</b> - [-P port] [-4] [-6] -batch\n[username@]host command</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Except\nfor the <b>simple</b> variant, command-line parameters are\nlikely to change as git gains new features.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">status.relativePaths</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">By\ndefault, <a href=\"https://man.page/1/git-status\">git-status(1)</a> shows paths relative to the\ncurrent directory. Setting this variable to <b>false</b>\nshows paths relative to the repository root (this was the\ndefault for Git prior to v1.5.4).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">status.short</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Set to\ntrue to enable --short by default in <a href=\"https://man.page/1/git-status\">git-status(1)</a>.\nThe option --no-short takes precedence over this\nvariable.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">status.branch</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Set to\ntrue to enable --branch by default in <a href=\"https://man.page/1/git-status\">git-status(1)</a>.\nThe option --no-branch takes precedence over this\nvariable.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">status.aheadBehind</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Set to\ntrue to enable <b>--ahead-behind</b> and false to enable\n<b>--no-ahead-behind</b> by default in <a href=\"https://man.page/1/git-status\">git-status(1)</a>\nfor non-porcelain status formats. Defaults to\ntrue.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">status.displayCommentPrefix</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If set to\ntrue, <a href=\"https://man.page/1/git-status\">git-status(1)</a> will insert a comment prefix\nbefore each output line (starting with\n<b>core.commentChar</b>, i.e. <b>#</b> by default). This was\nthe behavior of <a href=\"https://man.page/1/git-status\">git-status(1)</a> in Git 1.8.4 and\nprevious. Defaults to false.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">status.renameLimit</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nnumber of files to consider when performing rename detection\nin <a href=\"https://man.page/1/git-status\">git-status(1)</a> and <a href=\"https://man.page/1/git-commit\">git-commit(1)</a>. Defaults\nto the value of diff.renameLimit.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">status.renames</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Whether\nand how Git detects renames in <a href=\"https://man.page/1/git-status\">git-status(1)</a> and\n<a href=\"https://man.page/1/git-commit\">git-commit(1)</a> . If set to &quot;false&quot;, rename\ndetection is disabled. If set to &quot;true&quot;, basic\nrename detection is enabled. If set to &quot;copies&quot; or\n&quot;copy&quot;, Git will detect copies, as well. Defaults\nto the value of diff.renames.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">status.showStash</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If set to\ntrue, <a href=\"https://man.page/1/git-status\">git-status(1)</a> will display the number of\nentries currently stashed away. Defaults to\nfalse.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">status.showUntrackedFiles</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">By\ndefault, <a href=\"https://man.page/1/git-status\">git-status(1)</a> and <a href=\"https://man.page/1/git-commit\">git-commit(1)</a> show\nfiles which are not currently tracked by Git. Directories\nwhich contain only untracked files, are shown with the\ndirectory name only. Showing untracked files means that Git\nneeds to lstat() all the files in the whole repository,\nwhich might be slow on some systems. So, this variable\ncontrols how the commands displays the untracked files.\nPossible values are:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>no</b> - Show no untracked files.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>normal</b> - Show untracked files and\ndirectories.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>all</b> - Show also individual files in untracked\ndirectories.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">If\nthis variable is not specified, it defaults to\n<i>normal</i>. This variable can be overridden with the\n-u|--untracked-files option of <a href=\"https://man.page/1/git-status\">git-status(1)</a> and\n<a href=\"https://man.page/1/git-commit\">git-commit(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">status.submoduleSummary</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Defaults\nto false. If this is set to a non zero number or true\n(identical to -1 or an unlimited number), the submodule\nsummary will be enabled and a summary of commits for\nmodified submodules will be shown (see --summary-limit\noption of <a href=\"https://man.page/1/git-submodule\">git-submodule(1)</a>). Please note that the\nsummary output command will be suppressed for all submodules\nwhen <b>diff.ignoreSubmodules</b> is set to <i>all</i> or\nonly for those submodules where\n<b>submodule.&lt;name&gt;.ignore=all</b>. The only exception\nto that rule is that status and commit will show staged\nsubmodule changes. To also view the summary for ignored\nsubmodules you can either use the --ignore-submodules=dirty\ncommand-line option or the <i>git submodule summary</i>\ncommand, which shows a similar output but does not honor\nthese settings.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">stash.useBuiltin</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Unused\nconfiguration variable. Used in Git versions 2.22 to 2.26 as\nan escape hatch to enable the legacy shellscript\nimplementation of stash. Now the built-in rewrite of it in C\nis always used. Setting this will emit a warning, to alert\nany remaining users that setting this now does\nnothing.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">stash.showIncludeUntracked</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If this\nis set to true, the <b>git stash show</b> command will show\nthe untracked files of a stash entry. Defaults to false. See\ndescription of <i>show</i> command in\n<a href=\"https://man.page/1/git-stash\">git-stash(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">stash.showPatch</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If this\nis set to true, the <b>git stash show</b> command without an\noption will show the stash entry in patch form. Defaults to\nfalse. See description of <i>show</i> command in\n<a href=\"https://man.page/1/git-stash\">git-stash(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">stash.showStat</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If this\nis set to true, the <b>git stash show</b> command without an\noption will show diffstat of the stash entry. Defaults to\ntrue. See description of <i>show</i> command in\n<a href=\"https://man.page/1/git-stash\">git-stash(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">submodule.&lt;name&gt;.url</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The URL\nfor a submodule. This variable is copied from the\n.gitmodules file to the git config via <i>git submodule\ninit</i>. The user can change the configured URL before\nobtaining the submodule via <i>git submodule update</i>. If\nneither submodule.&lt;name&gt;.active or submodule.active\nare set, the presence of this variable is used as a fallback\nto indicate whether the submodule is of interest to git\ncommands. See <a href=\"https://man.page/1/git-submodule\">git-submodule(1)</a> and\n<a href=\"https://man.page/5/gitmodules\">gitmodules(5)</a> for details.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">submodule.&lt;name&gt;.update</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nmethod by which a submodule is updated by <i>git submodule\nupdate</i>, which is the only affected command, others such\nas <i>git checkout --recurse-submodules</i> are unaffected.\nIt exists for historical reasons, when <i>git submodule</i>\nwas the only command to interact with submodules; settings\nlike <b>submodule.active</b> and <b>pull.rebase</b> are more\nspecific. It is populated by <b>git submodule init</b> from\nthe <a href=\"https://man.page/5/gitmodules\">gitmodules(5)</a> file. See description of\n<i>update</i> command in <a href=\"https://man.page/1/git-submodule\">git-submodule(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">submodule.&lt;name&gt;.branch</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nremote branch name for a submodule, used by <b>git submodule\nupdate --remote</b>. Set this option to override the value\nfound in the <b>.gitmodules</b> file. See\n<a href=\"https://man.page/1/git-submodule\">git-submodule(1)</a> and <a href=\"https://man.page/5/gitmodules\">gitmodules(5)</a> for\ndetails.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">submodule.&lt;name&gt;.fetchRecurseSubmodules</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\noption can be used to control recursive fetching of this\nsubmodule. It can be overridden by using the\n--[no-]recurse-submodules command-line option to &quot;git\nfetch&quot; and &quot;git pull&quot;. This setting will\noverride that from in the <a href=\"https://man.page/5/gitmodules\">gitmodules(5)</a>\nfile.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">submodule.&lt;name&gt;.ignore</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Defines\nunder what circumstances &quot;git status&quot; and the diff\nfamily show a submodule as modified. When set to\n&quot;all&quot;, it will never be considered modified (but\nit will nonetheless show up in the output of status and\ncommit when it has been staged), &quot;dirty&quot; will\nignore all changes to the submodules work tree and takes\nonly differences between the HEAD of the submodule and the\ncommit recorded in the superproject into account.\n&quot;untracked&quot; will additionally let submodules with\nmodified tracked files in their work tree show up. Using\n&quot;none&quot; (the default when this option is not set)\nalso shows submodules that have untracked files in their\nwork tree as changed. This setting overrides any setting\nmade in .gitmodules for this submodule, both settings can be\noverridden on the command line by using the\n&quot;--ignore-submodules&quot; option. The <i>git\nsubmodule</i> commands are not affected by this\nsetting.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">submodule.&lt;name&gt;.active</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Boolean\nvalue indicating if the submodule is of interest to git\ncommands. This config option takes precedence over the\nsubmodule.active config option. See <a href=\"https://man.page/7/gitsubmodules\">gitsubmodules(7)</a>\nfor details.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">submodule.active</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A\nrepeated field which contains a pathspec used to match\nagainst a submodule&rsquo;s path to determine if the\nsubmodule is of interest to git commands. See\n<a href=\"https://man.page/7/gitsubmodules\">gitsubmodules(7)</a> for details.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">submodule.recurse</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A boolean\nindicating if commands should enable the\n<b>--recurse-submodules</b> option by default. Applies to\nall commands that support this option (<b>checkout</b>,\n<b>fetch</b>, <b>grep</b>, <b>pull</b>, <b>push</b>,\n<b>read-tree</b>, <b>reset</b>, <b>restore</b> and\n<b>switch</b>) except <b>clone</b> and <b>ls-files</b>.\nDefaults to false. When set to true, it can be deactivated\nvia the <b>--no-recurse-submodules</b> option. Note that\nsome Git commands lacking this option may call some of the\nabove commands affected by <b>submodule.recurse</b>; for\ninstance <b>git remote update</b> will call <b>git fetch</b>\nbut does not have a <b>--no-recurse-submodules</b> option.\nFor these commands a workaround is to temporarily change the\nconfiguration value by using <b>git -c\nsubmodule.recurse=0</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">submodule.fetchJobs</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specifies\nhow many submodules are fetched/cloned at the same time. A\npositive integer allows up to that number of submodules\nfetched in parallel. A value of 0 will give some reasonable\ndefault. If unset, it defaults to 1.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">submodule.alternateLocation</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specifies\nhow the submodules obtain alternates when submodules are\ncloned. Possible values are <b>no</b>, <b>superproject</b>.\nBy default <b>no</b> is assumed, which doesn&rsquo;t add\nreferences. When the value is set to <b>superproject</b> the\nsubmodule to be cloned computes its alternates location\nrelative to the superprojects alternate.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">submodule.alternateErrorStrategy</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specifies\nhow to treat errors with the alternates for a submodule as\ncomputed via <b>submodule.alternateLocation</b>. Possible\nvalues are <b>ignore</b>, <b>info</b>, <b>die</b>. Default\nis <b>die</b>. Note that if set to <b>ignore</b> or\n<b>info</b>, and if there is an error with the computed\nalternate, the clone proceeds as if no alternate was\nspecified.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">tag.forceSignAnnotated</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A boolean\nto specify whether annotated tags created should be GPG\nsigned. If <b>--annotate</b> is specified on the command\nline, it takes precedence over this option.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">tag.sort</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\nvariable controls the sort ordering of tags when displayed\nby <a href=\"https://man.page/1/git-tag\">git-tag(1)</a>. Without the\n&quot;--sort=&lt;value&gt;&quot; option provided, the value\nof this variable will be used as the default.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">tag.gpgSign</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A boolean\nto specify whether all tags should be GPG signed. Use of\nthis option when running in an automated script can result\nin a large number of tags being signed. It is therefore\nconvenient to use an agent to avoid typing your gpg\npassphrase several times. Note that this option\ndoesn&rsquo;t affect tag signing behavior enabled by\n&quot;-u &lt;keyid&gt;&quot; or\n&quot;--local-user=&lt;keyid&gt;&quot; options.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">tar.umask</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\nvariable can be used to restrict the permission bits of tar\narchive entries. The default is 0002, which turns off the\nworld write bit. The special value &quot;user&quot;\nindicates that the archiving user&rsquo;s umask will be used\ninstead. See umask(2) and <a href=\"https://man.page/1/git-archive\">git-archive(1)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">Trace2\nconfig settings are only read from the system and global\nconfig files; repository local and worktree config files and\n<b>-c</b> command line arguments are not\nrespected.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">trace2.normalTarget</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\nvariable controls the normal target destination. It may be\noverridden by the <b>GIT_TRACE2</b> environment variable.\nThe following table shows possible values.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">trace2.perfTarget</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\nvariable controls the performance target destination. It may\nbe overridden by the <b>GIT_TRACE2_PERF</b> environment\nvariable. The following table shows possible\nvalues.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">trace2.eventTarget</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\nvariable controls the event target destination. It may be\noverridden by the <b>GIT_TRACE2_EVENT</b> environment\nvariable. The following table shows possible\nvalues.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>0</b> or <b>false</b> - Disables the target.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>1</b> or <b>true</b> - Writes to\n<b>STDERR</b>.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>[2-9]</b> - Writes to the already opened file\ndescriptor.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>&lt;absolute-pathname&gt;</b> - Writes to the file in\nappend mode. If the target already exists and is a\ndirectory, the traces will be written to files (one per\nprocess) underneath the given directory.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>af_unix:[&lt;socket_type&gt;:]&lt;absolute-pathname&gt;</b>\n- Write to a Unix DomainSocket (on platforms that support\nthem). Socket type can be either <b>stream</b> or\n<b>dgram</b>; if omitted Git will try both.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">trace2.normalBrief</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Boolean.\nWhen true <b>time</b>, <b>filename</b>, and <b>line</b>\nfields are omitted from normal output. May be overridden by\nthe <b>GIT_TRACE2_BRIEF</b> environment variable. Defaults\nto false.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">trace2.perfBrief</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Boolean.\nWhen true <b>time</b>, <b>filename</b>, and <b>line</b>\nfields are omitted from PERF output. May be overridden by\nthe <b>GIT_TRACE2_PERF_BRIEF</b> environment variable.\nDefaults to false.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">trace2.eventBrief</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Boolean.\nWhen true <b>time</b>, <b>filename</b>, and <b>line</b>\nfields are omitted from event output. May be overridden by\nthe <b>GIT_TRACE2_EVENT_BRIEF</b> environment variable.\nDefaults to false.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">trace2.eventNesting</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Integer.\nSpecifies desired depth of nested regions in the event\noutput. Regions deeper than this value will be omitted. May\nbe overridden by the <b>GIT_TRACE2_EVENT_NESTING</b>\nenvironment variable. Defaults to 2.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">trace2.configParams</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A\ncomma-separated list of patterns of &quot;important&quot;\nconfig settings that should be recorded in the trace2\noutput. For example, <b>core.*,remote.*.url</b> would cause\nthe trace2 output to contain events listing each configured\nremote. May be overridden by the\n<b>GIT_TRACE2_CONFIG_PARAMS</b> environment variable. Unset\nby default.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">trace2.envVars</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A\ncomma-separated list of &quot;important&quot; environment\nvariables that should be recorded in the trace2 output. For\nexample, <b>GIT_HTTP_USER_AGENT,GIT_CONFIG</b> would cause\nthe trace2 output to contain events listing the overrides\nfor HTTP user agent and the location of the Git\nconfiguration file (assuming any are set). May be overridden\nby the <b>GIT_TRACE2_ENV_VARS</b> environment variable.\nUnset by default.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">trace2.destinationDebug</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Boolean.\nWhen true Git will print error messages when a trace target\ndestination cannot be opened for writing. By default, these\nerrors are suppressed and tracing is silently disabled. May\nbe overridden by the <b>GIT_TRACE2_DST_DEBUG</b> environment\nvariable.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">trace2.maxFiles</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Integer.\nWhen writing trace files to a target directory, do not write\nadditional traces if we would exceed this many files.\nInstead, write a sentinel file that will block further\ntracing to this directory. Defaults to 0, which disables\nthis check.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">transfer.fsckObjects</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When\n<b>fetch.fsckObjects</b> or <b>receive.fsckObjects</b> are\nnot set, the value of this variable is used instead.\nDefaults to false.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">When\nset, the fetch or receive will abort in the case of a\nmalformed object or a link to a nonexistent object. In\naddition, various other issues are checked for, including\nlegacy issues (see <b>fsck.&lt;msg-id&gt;</b>), and\npotential security issues like the existence of a\n<b>.GIT</b> directory or a malicious <b>.gitmodules</b> file\n(see the release notes for v2.2.1 and v2.17.1 for details).\nOther sanity and security checks may be added in future\nreleases.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">On\nthe receiving side, failing fsckObjects will make those\nobjects unreachable, see &quot;QUARANTINE ENVIRONMENT&quot;\nin <a href=\"https://man.page/1/git-receive-pack\">git-receive-pack(1)</a>. On the fetch side, malformed\nobjects will instead be left unreferenced in the\nrepository.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Due\nto the non-quarantine nature of the <b>fetch.fsckObjects</b>\nimplementation it cannot be relied upon to leave the object\nstore clean like <b>receive.fsckObjects</b> can.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">As\nobjects are unpacked they&rsquo;re written to the object\nstore, so there can be cases where malicious objects get\nintroduced even though the &quot;fetch&quot; failed, only to\nhave a subsequent &quot;fetch&quot; succeed because only new\nincoming objects are checked, not those that have already\nbeen written to the object store. That difference in\nbehavior should not be relied upon. In the future, such\nobjects may be quarantined for &quot;fetch&quot; as\nwell.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">For\nnow, the paranoid need to find some way to emulate the\nquarantine environment if they&rsquo;d like the same\nprotection as &quot;push&quot;. E.g. in the case of an\ninternal mirror do the mirroring in two steps, one to fetch\nthe untrusted objects, and then do a second &quot;push&quot;\n(which will use the quarantine) to another internal repo,\nand have internal clients consume this pushed-to repository,\nor embargo internal fetches and only allow them once a full\n&quot;fsck&quot; has run (and no new fetches have happened\nin the meantime).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">transfer.hideRefs</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">String(s)\n<b>receive-pack</b> and <b>upload-pack</b> use to decide\nwhich refs to omit from their initial advertisements. Use\nmore than one definition to specify multiple prefix strings.\nA ref that is under the hierarchies listed in the value of\nthis variable is excluded, and is hidden when responding to\n<b>git push</b> or <b>git fetch</b>. See\n<b>receive.hideRefs</b> and <b>uploadpack.hideRefs</b> for\nprogram-specific versions of this config.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">You\nmay also include a <b>!</b> in front of the ref name to\nnegate the entry, explicitly exposing it, even if an earlier\nentry marked it as hidden. If you have multiple hideRefs\nvalues, later entries override earlier ones (and entries in\nmore-specific config files override less-specific\nones).</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">If\na namespace is in use, the namespace prefix is stripped from\neach reference before it is matched against\n<b>transfer.hiderefs</b> patterns. In order to match refs\nbefore stripping, add a <b>^</b> in front of the ref name.\nIf you combine <b>!</b> and <b>^</b>, <b>!</b> must be\nspecified first.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">For\nexample, if <b>refs/heads/master</b> is specified in\n<b>transfer.hideRefs</b> and the current namespace is\n<b>foo</b>, then\n<b>refs/namespaces/foo/refs/heads/master</b> is omitted from\nthe advertisements. If <b>uploadpack.allowRefInWant</b> is\nset, <b>upload-pack</b> will treat <b>want-ref\nrefs/heads/master</b> in a protocol v2 <b>fetch</b> command\nas if <b>refs/namespaces/foo/refs/heads/master</b> did not\nexist. <b>receive-pack</b>, on the other hand, will still\nadvertise the object id the ref is pointing to without\nmentioning its name (a so-called &quot;.have&quot;\nline).</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Even\nif you hide refs, a client may still be able to steal the\ntarget objects via the techniques described in the\n&quot;SECURITY&quot; section of the <a href=\"https://man.page/7/gitnamespaces\">gitnamespaces(7)</a>\nman page; it&rsquo;s best to keep private data in a separate\nrepository.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">transfer.unpackLimit</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When\n<b>fetch.unpackLimit</b> or <b>receive.unpackLimit</b> are\nnot set, the value of this variable is used instead. The\ndefault value is 100.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">transfer.advertiseSID</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Boolean.\nWhen true, client and server processes will advertise their\nunique session IDs to their remote counterpart. Defaults to\nfalse.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">uploadarchive.allowUnreachable</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If true,\nallow clients to use <b>git archive --remote</b> to request\nany tree, whether reachable from the ref tips or not. See\nthe discussion in the &quot;SECURITY&quot; section of\n<a href=\"https://man.page/1/git-upload-archive\">git-upload-archive(1)</a> for more details. Defaults to\n<b>false</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">uploadpack.hideRefs</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\nvariable is the same as <b>transfer.hideRefs</b>, but\napplies only to <b>upload-pack</b> (and so affects only\nfetches, not pushes). An attempt to fetch a hidden ref by\n<b>git fetch</b> will fail. See also\n<b>uploadpack.allowTipSHA1InWant</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">uploadpack.allowTipSHA1InWant</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When\n<b>uploadpack.hideRefs</b> is in effect, allow\n<b>upload-pack</b> to accept a fetch request that asks for\nan object at the tip of a hidden ref (by default, such a\nrequest is rejected). See also <b>uploadpack.hideRefs</b>.\nEven if this is false, a client may be able to steal objects\nvia the techniques described in the &quot;SECURITY&quot;\nsection of the <a href=\"https://man.page/7/gitnamespaces\">gitnamespaces(7)</a> man page; it&rsquo;s\nbest to keep private data in a separate\nrepository.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">uploadpack.allowReachableSHA1InWant</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Allow\n<b>upload-pack</b> to accept a fetch request that asks for\nan object that is reachable from any ref tip. However, note\nthat calculating object reachability is computationally\nexpensive. Defaults to <b>false</b>. Even if this is false,\na client may be able to steal objects via the techniques\ndescribed in the &quot;SECURITY&quot; section of the\n<a href=\"https://man.page/7/gitnamespaces\">gitnamespaces(7)</a> man page; it&rsquo;s best to keep\nprivate data in a separate repository.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">uploadpack.allowAnySHA1InWant</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Allow\n<b>upload-pack</b> to accept a fetch request that asks for\nany object at all. Defaults to <b>false</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">uploadpack.keepAlive</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">When\n<b>upload-pack</b> has started <b>pack-objects</b>, there\nmay be a quiet period while <b>pack-objects</b> prepares the\npack. Normally it would output progress information, but if\n<b>--quiet</b> was used for the fetch, <b>pack-objects</b>\nwill output nothing at all until the pack data begins. Some\nclients and networks may consider the server to be hung and\ngive up. Setting this option instructs <b>upload-pack</b> to\nsend an empty keepalive packet every\n<b>uploadpack.keepAlive</b> seconds. Setting this option to\n0 disables keepalive packets entirely. The default is 5\nseconds.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">uploadpack.packObjectsHook</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If this\noption is set, when <b>upload-pack</b> would run <b>git\npack-objects</b> to create a packfile for a client, it will\nrun this shell command instead. The <b>pack-objects</b>\ncommand and arguments it <i>would</i> have run (including\nthe <b>git pack-objects</b> at the beginning) are appended\nto the shell command. The stdin and stdout of the hook are\ntreated as if <b>pack-objects</b> itself was run. I.e.,\n<b>upload-pack</b> will feed input intended for\n<b>pack-objects</b> to the hook, and expects a completed\npackfile on stdout.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Note\nthat this configuration variable is ignored if it is seen in\nthe repository-level config (this is a safety measure\nagainst fetching from untrusted repositories).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">uploadpack.allowFilter</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If this\noption is set, <b>upload-pack</b> will support partial clone\nand partial fetch object filtering.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">uploadpackfilter.allow</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Provides\na default value for unspecified object filters (see: the\nbelow configuration variable). If set to <b>true</b>, this\nwill also enable all filters which get added in the future.\nDefaults to <b>true</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">uploadpackfilter.&lt;filter&gt;.allow</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Explicitly\nallow or ban the object filter corresponding to\n<b>&lt;filter&gt;</b>, where <b>&lt;filter&gt;</b> may be\none of: <b>blob:none</b>, <b>blob:limit</b>,\n<b>object:type</b>, <b>tree</b>, <b>sparse:oid</b>, or\n<b>combine</b>. If using combined filters, both\n<b>combine</b> and all of the nested filter kinds must be\nallowed. Defaults to\n<b>uploadpackfilter.allow</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">uploadpackfilter.tree.maxDepth</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Only\nallow <b>--filter=tree:&lt;n&gt;</b> when <b>&lt;n&gt;</b>\nis no more than the value of\n<b>uploadpackfilter.tree.maxDepth</b>. If set, this also\nimplies <b>uploadpackfilter.tree.allow=true</b>, unless this\nconfiguration variable had already been set. Has no effect\nif unset.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">uploadpack.allowRefInWant</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If this\noption is set, <b>upload-pack</b> will support the\n<b>ref-in-want</b> feature of the protocol version 2\n<b>fetch</b> command. This feature is intended for the\nbenefit of load-balanced servers which may not have the same\nview of what OIDs their refs point to due to replication\ndelay.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">url.&lt;base&gt;.insteadOf</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Any URL\nthat starts with this value will be rewritten to start,\ninstead, with &lt;base&gt;. In cases where some site serves\na large number of repositories, and serves them with\nmultiple access methods, and some users need to use\ndifferent access methods, this feature allows people to\nspecify any of the equivalent URLs and have Git\nautomatically rewrite the URL to the best alternative for\nthe particular user, even for a never-before-seen repository\non the site. When more than one insteadOf strings match a\ngiven URL, the longest match is used.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Note\nthat any protocol restrictions will be applied to the\nrewritten URL. If the rewrite changes the URL to use a\ncustom protocol or remote helper, you may need to adjust the\n<b>protocol.*.allow</b> config to permit the request. In\nparticular, protocols you expect to use for submodules must\nbe set to <b>always</b> rather than the default of\n<b>user</b>. See the description of <b>protocol.allow</b>\nabove.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">url.&lt;base&gt;.pushInsteadOf</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Any URL\nthat starts with this value will not be pushed to; instead,\nit will be rewritten to start with &lt;base&gt;, and the\nresulting URL will be pushed to. In cases where some site\nserves a large number of repositories, and serves them with\nmultiple access methods, some of which do not allow push,\nthis feature allows people to specify a pull-only URL and\nhave Git automatically use an appropriate URL to push, even\nfor a never-before-seen repository on the site. When more\nthan one pushInsteadOf strings match a given URL, the\nlongest match is used. If a remote has an explicit pushurl,\nGit will ignore this setting for that remote.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">user.name,\nuser.email, author.name, author.email, committer.name,\ncommitter.email</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\n<b>user.name</b> and <b>user.email</b> variables determine\nwhat ends up in the <b>author</b> and <b>committer</b> field\nof commit objects. If you need the <b>author</b> or\n<b>committer</b> to be different, the <b>author.name</b>,\n<b>author.email</b>, <b>committer.name</b> or\n<b>committer.email</b> variables can be set. Also, all of\nthese can be overridden by the <b>GIT_AUTHOR_NAME</b>,\n<b>GIT_AUTHOR_EMAIL</b>, <b>GIT_COMMITTER_NAME</b>,\n<b>GIT_COMMITTER_EMAIL</b> and <b>EMAIL</b> environment\nvariables.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Note\nthat the <b>name</b> forms of these variables conventionally\nrefer to some form of a personal name. See\n<a href=\"https://man.page/1/git-commit\">git-commit(1)</a> and the environment variables section\nof <a href=\"https://man.page/1/git\">git(1)</a> for more information on these settings and\nthe <b>credential.username</b> option if you&rsquo;re\nlooking for authentication credentials instead.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">user.useConfigOnly</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Instruct\nGit to avoid trying to guess defaults for <b>user.email</b>\nand <b>user.name</b>, and instead retrieve the values only\nfrom the configuration. For example, if you have multiple\nemail addresses and would like to use a different one for\neach repository, then with this configuration option set to\n<b>true</b> in the global config along with a name, Git will\nprompt you to set up an email before making new commits in a\nnewly cloned repository. Defaults to\n<b>false</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">user.signingKey</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If\n<a href=\"https://man.page/1/git-tag\">git-tag(1)</a> or <a href=\"https://man.page/1/git-commit\">git-commit(1)</a> is not selecting\nthe key you want it to automatically when creating a signed\ntag or commit, you can override the default selection with\nthis variable. This option is passed unchanged to\ngpg&rsquo;s --local-user parameter, so you may specify a key\nusing any method that gpg supports. If gpg.format is set to\n&quot;ssh&quot; this can contain the literal ssh public key\n(e.g.: &quot;ssh-rsa XXXXXX identifier&quot;) or a file\nwhich contains it and corresponds to the private key used\nfor signing. The private key needs to be available via\nssh-agent. Alternatively it can be set to a file containing\na private key directly. If not set git will call\ngpg.ssh.defaultKeyCommand (e.g.: &quot;ssh-add -L&quot;) and\ntry to use the first key available.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">versionsort.prereleaseSuffix\n(deprecated)</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Deprecated\nalias for <b>versionsort.suffix</b>. Ignored if\n<b>versionsort.suffix</b> is set.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">versionsort.suffix</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Even when\nversion sort is used in <a href=\"https://man.page/1/git-tag\">git-tag(1)</a>, tagnames with the\nsame base version but different suffixes are still sorted\nlexicographically, resulting e.g. in prerelease tags\nappearing after the main release (e.g. &quot;1.0-rc1&quot;\nafter &quot;1.0&quot;). This variable can be specified to\ndetermine the sorting order of tags with different\nsuffixes.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">By\nspecifying a single suffix in this variable, any tagname\ncontaining that suffix will appear before the corresponding\nmain release. E.g. if the variable is set to\n&quot;-rc&quot;, then all &quot;1.0-rcX&quot; tags will\nappear before &quot;1.0&quot;. If specified multiple times,\nonce per suffix, then the order of suffixes in the\nconfiguration will determine the sorting order of tagnames\nwith those suffixes. E.g. if &quot;-pre&quot; appears before\n&quot;-rc&quot; in the configuration, then all\n&quot;1.0-preX&quot; tags will be listed before any\n&quot;1.0-rcX&quot; tags. The placement of the main release\ntag relative to tags with various suffixes can be determined\nby specifying the empty suffix among those other suffixes.\nE.g. if the suffixes &quot;-rc&quot;, &quot;&quot;,\n&quot;-ck&quot; and &quot;-bfs&quot; appear in the\nconfiguration in this order, then all &quot;v4.8-rcX&quot;\ntags are listed first, followed by &quot;v4.8&quot;, then\n&quot;v4.8-ckX&quot; and finally\n&quot;v4.8-bfsX&quot;.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">If\nmore than one suffixes match the same tagname, then that\ntagname will be sorted according to the suffix which starts\nat the earliest position in the tagname. If more than one\ndifferent matching suffixes start at that earliest position,\nthen that tagname will be sorted according to the longest of\nthose suffixes. The sorting order between different suffixes\nis undefined if they are in multiple config\nfiles.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">web.browser</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specify a\nweb browser that may be used by some commands. Currently\nonly <a href=\"https://man.page/1/git-instaweb\">git-instaweb(1)</a> and <a href=\"https://man.page/1/git-help\">git-help(1)</a> may use\nit.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">worktree.guessRemote</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If no\nbranch is specified and neither <b>-b</b> nor <b>-B</b> nor\n<b>--detach</b> is used, then <b>git worktree add</b>\ndefaults to creating a new branch from HEAD. If\n<b>worktree.guessRemote</b> is set to true, <b>worktree\nadd</b> tries to find a remote-tracking branch whose name\nuniquely matches the new branch name. If such a branch\nexists, it is checked out and set as &quot;upstream&quot;\nfor the new branch. If no such match can be found, it falls\nback to creating a new branch from the current\nHEAD.</font></p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">When\nusing the deprecated <b>[section.subsection]</b> syntax,\nchanging a value will result in adding a multi-line key\ninstead of a change, if the subsection is given with at\nleast one uppercase character. For example when the config\nlooks like</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">[section.subsection]\n<br>\nkey = value1</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">and\nrunning <b>git config section.Subsection.key value2</b> will\nresult in</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">[section.subsection]\n<br>\nkey = value1 <br>\nkey = value2</font></p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">Part\nof the <a href=\"https://man.page/1/git\">git(1)</a> suite</font></p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"12%\"></td>\n<td width=\"3%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">1.</font></p> </td>\n<td width=\"2%\"></td>\n<td width=\"26%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">user1@example.com</font></p> </td>\n<td width=\"57%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">mailto:user1@example.com</font></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"12%\"></td>\n<td width=\"3%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">2.</font></p> </td>\n<td width=\"2%\"></td>\n<td width=\"26%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">user2@example.com</font></p> </td>\n<td width=\"57%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">mailto:user2@example.com</font></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"12%\"></td>\n<td width=\"3%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">3.</font></p> </td>\n<td width=\"2%\"></td>\n<td width=\"60%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">Documentation/technical/pack-format.txt</font></p> </td>\n<td width=\"23%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">file:///usr/share/doc/git/html/../technical/pack-format.html</font></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"12%\"></td>\n<td width=\"3%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">4.</font></p> </td>\n<td width=\"2%\"></td>\n<td width=\"35%\">\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">wire\nprotocol version 2</font></p></td>\n<td width=\"48%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">file:///usr/share/doc/git/html/technical/protocol-v2.html</font></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#CONFIGURATION\">CONFIGURATION</a>","<a href=\"#FILES\">FILES</a>","<a href=\"#ENVIRONMENT\">ENVIRONMENT</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#CONFIGURATION FILE\">CONFIGURATION FILE</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#GIT\">GIT</a>","<a href=\"#NOTES\">NOTES</a>"]}