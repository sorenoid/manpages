{"name":"git-archive","description":"git-archive - Create an archive of files from a named tree","body":"\n\n<h1 align=\"center\">GIT-ARCHIVE</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">git-archive -\nCreate an archive of files from a named tree</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>git\narchive</i> [--format=&lt;fmt&gt;] [--list]\n[--prefix=&lt;prefix&gt;/] [&lt;extra&gt;] <br>\n[-o &lt;file&gt; | --output=&lt;file&gt;]\n[--worktree-attributes] <br>\n[--remote=&lt;repo&gt; [--exec=&lt;git-upload-archive&gt;]]\n&lt;tree-ish&gt; <br>\n[&lt;path&gt;...]</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Creates an\narchive of the specified format containing the tree\nstructure for the named tree, and writes it out to the\nstandard output. If &lt;prefix&gt; is specified it is\nprepended to the filenames in the archive.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>git\narchive</i> behaves differently when given a tree ID versus\nwhen given a commit ID or tag ID. In the first case the\ncurrent time is used as the modification time of each file\nin the archive. In the latter case the commit time as\nrecorded in the referenced commit object is used instead.\nAdditionally the commit ID is stored in a global extended\npax header if the tar format is used; it can be extracted\nusing <i>git get-tar-commit-id</i>. In ZIP files it is\nstored as a file comment.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--format=&lt;fmt&gt;</p>\n\n<p style=\"margin-left:17%;\">Format of the resulting\narchive: <i>tar</i> or <i>zip</i>. If this option is not\ngiven, and the output file is specified, the format is\ninferred from the filename if possible (e.g. writing to\n&quot;foo.zip&quot; makes the output to be in the zip\nformat). Otherwise the output format is <b>tar</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-l, --list</p>\n\n<p style=\"margin-left:17%;\">Show all available formats.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-v,\n--verbose</p>\n\n<p style=\"margin-left:17%;\">Report progress to stderr.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--prefix=&lt;prefix&gt;/</p>\n\n<p style=\"margin-left:17%;\">Prepend &lt;prefix&gt;/ to each\nfilename in the archive.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-o\n&lt;file&gt;, --output=&lt;file&gt;</p>\n\n<p style=\"margin-left:17%;\">Write the archive to\n&lt;file&gt; instead of stdout.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--add-file=&lt;file&gt;</p>\n\n<p style=\"margin-left:17%;\">Add a non-tracked file to the\narchive. Can be repeated to add multiple files. The path of\nthe file in the archive is built by concatenating the value\nfor <b>--prefix</b> (if any) and the basename of\n&lt;file&gt;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--worktree-attributes</p>\n\n<p style=\"margin-left:17%;\">Look for attributes in\n.gitattributes files in the working tree as well (see the\nsection called &ldquo;ATTRIBUTES&rdquo;).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;extra&gt;</p>\n\n<p style=\"margin-left:17%;\">This can be any options that\nthe archiver backend understands. See next section.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--remote=&lt;repo&gt;</p>\n\n<p style=\"margin-left:17%;\">Instead of making a tar archive\nfrom the local repository, retrieve a tar archive from a\nremote repository. Note that the remote repository may place\nrestrictions on which sha1 expressions may be allowed in\n<b>&lt;tree-ish&gt;</b>. See <a href=\"https://man.page/1/git-upload-archive\">git-upload-archive(1)</a>\nfor details.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">--exec=&lt;git-upload-archive&gt;</p>\n\n<p style=\"margin-left:17%;\">Used with --remote to specify\nthe path to the <i>git-upload-archive</i> on the remote\nside.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;tree-ish&gt;</p>\n\n<p style=\"margin-left:17%;\">The tree or commit to produce\nan archive for.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;path&gt;</p>\n\n<p style=\"margin-left:17%;\">Without an optional path\nparameter, all files and subdirectories of the current\nworking directory are included in the archive. If one or\nmore paths are specified, only these are included.</p>\n\n<h2>BACKEND EXTRA OPTIONS\n<a name=\"BACKEND EXTRA OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>zip</b> <br>\n-&lt;digit&gt;</p>\n\n<p style=\"margin-left:17%;\">Specify compression level.\nLarger values allow the command to spend more time to\ncompress to smaller size. Supported values are from\n<b>-0</b> (store-only) to <b>-9</b> (best ratio). Default is\n<b>-6</b> if not given.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>tar</b> <br>\n-&lt;number&gt;</p>\n\n<p style=\"margin-left:17%;\">Specify compression level. The\nvalue will be passed to the compression command configured\nin <b>tar.&lt;format&gt;.command</b>. See manual page of the\nconfigured command for the list of supported levels and the\ndefault level if this option isn&rsquo;t specified.</p>\n\n<h2>CONFIGURATION\n<a name=\"CONFIGURATION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">tar.umask</p>\n\n<p style=\"margin-left:17%;\">This variable can be used to\nrestrict the permission bits of tar archive entries. The\ndefault is 0002, which turns off the world write bit. The\nspecial value &quot;user&quot; indicates that the archiving\nuser&rsquo;s umask will be used instead. See umask(2) for\ndetails. If <b>--remote</b> is used then only the\nconfiguration of the remote repository takes effect.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">tar.&lt;format&gt;.command</p>\n\n<p style=\"margin-left:17%;\">This variable specifies a shell\ncommand through which the tar output generated by <b>git\narchive</b> should be piped. The command is executed using\nthe shell with the generated tar file on its standard input,\nand should produce the final output on its standard output.\nAny compression-level options will be passed to the command\n(e.g., &quot;-9&quot;). An output file with the same\nextension as <b>&lt;format&gt;</b> will be use this format\nif no other format is given.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\n&quot;tar.gz&quot; and &quot;tgz&quot; formats are defined\nautomatically and default to <b>gzip -cn</b>. You may\noverride them with custom commands.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">tar.&lt;format&gt;.remote</p>\n\n<p style=\"margin-left:17%;\">If true, enable\n<b>&lt;format&gt;</b> for use by remote clients via\n<a href=\"https://man.page/1/git-upload-archive\">git-upload-archive(1)</a>. Defaults to false for\nuser-defined formats, but true for the &quot;tar.gz&quot;\nand &quot;tgz&quot; formats.</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">export-ignore</p>\n\n<p style=\"margin-left:17%;\">Files and directories with the\nattribute export-ignore won&rsquo;t be added to archive\nfiles. See <a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a> for details.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">export-subst</p>\n\n<p style=\"margin-left:17%;\">If the attribute export-subst\nis set for a file then Git will expand several placeholders\nwhen adding this file to an archive. See\n<a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a> for details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that\nattributes are by default taken from the\n<b>.gitattributes</b> files in the tree that is being\narchived. If you want to tweak the way the output is\ngenerated after the fact (e.g. you committed without adding\nan appropriate export-ignore in its <b>.gitattributes</b>),\nadjust the checked out <b>.gitattributes</b> file as\nnecessary and use <b>--worktree-attributes</b> option.\nAlternatively you can keep necessary attributes that should\napply while archiving any tree in your\n<b>$GIT_DIR/info/attributes</b> file.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>git archive\n--format=tar --prefix=junk/ HEAD | (cd /var/tmp/ &amp;&amp;\ntar xf -)</b></p>\n\n<p style=\"margin-left:17%;\">Create a tar archive that\ncontains the contents of the latest commit on the current\nbranch, and extract it in the <b>/var/tmp/junk</b>\ndirectory.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>git archive\n--format=tar --prefix=git-1.4.0/ v1.4.0 | gzip\n&gt;git-1.4.0.tar.gz</b></p>\n\n<p style=\"margin-left:17%;\">Create a compressed tarball for\nv1.4.0 release.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>git archive\n--format=tar.gz --prefix=git-1.4.0/ v1.4.0\n&gt;git-1.4.0.tar.gz</b></p>\n\n<p style=\"margin-left:17%;\">Same as above, but using the\nbuiltin tar.gz handling.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>git archive\n--prefix=git-1.4.0/ -o git-1.4.0.tar.gz v1.4.0</b></p>\n\n<p style=\"margin-left:17%;\">Same as above, but the format\nis inferred from the output file.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>git archive\n--format=tar --prefix=git-1.4.0/ v1.4.0^{tree} | gzip\n&gt;git-1.4.0.tar.gz</b></p>\n\n<p style=\"margin-left:17%;\">Create a compressed tarball for\nv1.4.0 release, but without a global extended pax\nheader.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>git archive\n--format=zip --prefix=git-docs/ HEAD:Documentation/ &gt;\ngit-1.4.0-docs.zip</b></p>\n\n<p style=\"margin-left:17%;\">Put everything in the current\nhead&rsquo;s Documentation/ directory into\n<i>git-1.4.0-docs.zip</i>, with the prefix\n<i>git-docs/</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>git archive\n-o latest.zip HEAD</b></p>\n\n<p style=\"margin-left:17%;\">Create a Zip archive that\ncontains the contents of the latest commit on the current\nbranch. Note that the output format is inferred by the\nextension of the output file.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>git config\ntar.tar.xz.command &quot;xz -c&quot;</b></p>\n\n<p style=\"margin-left:17%;\">Configure a &quot;tar.xz&quot;\nformat for making LZMA-compressed tarfiles. You can use it\nspecifying <b>--format=tar.xz</b>, or by creating an output\nfile like <b>-o foo.tar.xz</b>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/5/gitattributes\">gitattributes(5)</a></p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Part of the\n<a href=\"https://man.page/1/git\">git(1)</a> suite</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#BACKEND EXTRA OPTIONS\">BACKEND EXTRA OPTIONS</a>","<a href=\"#CONFIGURATION\">CONFIGURATION</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#GIT\">GIT</a>"]}