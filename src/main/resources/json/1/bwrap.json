{"name":"bwrap","description":"bwrap - container setup utility","body":"\n\n<h1 align=\"center\">BWRAP</h1>\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">bwrap -\ncontainer setup utility</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"41%\">\n\n\n<p style=\"margin-top: 1em\"><b>bwrap</b> [<i>OPTION</i>...]\n[<i>COMMAND</i>]</p> </td>\n<td width=\"48%\">\n</td></tr>\n</table>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>bwrap</b> is\na privileged helper for container setup. You are unlikely to\nuse it directly from the commandline, although that is\npossible.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It works by\ncreating a new, completely empty, filesystem namespace where\nthe root is on a tmpfs that is invisible from the host, and\nwhich will be automatically cleaned up when the last process\nexits. You can then use commandline options to construct the\nroot filesystem and process environment for the command to\nrun in the namespace.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">By default,\n<b>bwrap</b> creates a new mount namespace for the sandbox.\nOptionally it also sets up new user, ipc, pid, network and\nuts namespaces (but note the user namespace is required if\nbwrap is not installed setuid root). The application in the\nsandbox can be made to run with a different UID and GID.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If needed (e.g.\nwhen using a PID namespace) <b>bwrap</b> is running a\nminimal pid 1 process in the sandbox that is responsible for\nreaping zombies. It also detects when the initial\napplication process (pid 2) dies and reports its exit status\nback to the original spawner. The pid 1 process exits to\nclean up the sandbox when there are no other processes in\nthe sandbox left.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">When options\nare used multiple times, the last option wins, unless\notherwise specified.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">General\noptions:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--help</b></p>\n\n<p style=\"margin-left:17%;\">Print help and exit</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--version</b></p>\n\n<p style=\"margin-left:17%;\">Print version</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--args\nFD</b></p>\n\n<p style=\"margin-left:17%;\">Parse nul-separated arguments\nfrom the given file descriptor. This option can be used\nmultiple times to parse options from multiple sources.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Options related\nto kernel namespaces:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--unshare-user</b></p>\n\n<p style=\"margin-left:17%;\">Create a new user namespace</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--unshare-user-try</b></p>\n\n<p style=\"margin-left:17%;\">Create a new user namespace if\npossible else skip it</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--unshare-ipc</b></p>\n\n<p style=\"margin-left:17%;\">Create a new ipc namespace</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--unshare-pid</b></p>\n\n<p style=\"margin-left:17%;\">Create a new pid namespace</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--unshare-net</b></p>\n\n<p style=\"margin-left:17%;\">Create a new network\nnamespace</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--unshare-uts</b></p>\n\n<p style=\"margin-left:17%;\">Create a new uts namespace</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--unshare-cgroup</b></p>\n\n<p style=\"margin-left:17%;\">Create a new cgroup\nnamespace</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--unshare-cgroup-try</b></p>\n\n<p style=\"margin-left:17%;\">Create a new cgroup namespace\nif possible else skip it</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--unshare-all</b></p>\n\n<p style=\"margin-left:17%;\">Unshare all possible\nnamespaces. Currently equivalent with: <b>--unshare-user-try\n--unshare-ipc --unshare-pid --unshare-net --unshare-uts\n--unshare-cgroup-try</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--userns\nFD</b></p>\n\n<p style=\"margin-left:17%;\">Use an existing user namespace\ninstead of creating a new one. The namespace must fulfil the\npermission requirements for setns(), which generally means\nthat it must be a descendant of the currently active user\nnamespace, owned by the same user.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This is\nincompatible with --unshare-user, and doesn't work in the\nsetuid version of bubblewrap.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--userns2\nFD</b></p>\n\n<p style=\"margin-left:17%;\">After setting up the new\nnamespace, switch into the specified namespace. For this to\nwork the specified namespace must be a descendant of the\nuser namespace used for the setup, so this is only useful in\ncombination with --userns.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This is useful\nbecause sometimes bubblewrap itself creates nested user\nnamespaces (to work around some kernel issues) and --userns2\ncan be used to enter these.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--pidns\nFD</b></p>\n\n<p style=\"margin-left:17%;\">Use an existing pid namespace\ninstead of creating one. This is often used with --userns,\nbecause the pid namespace must be owned by the same user\nnamespace that bwrap uses.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that this\ncan be combined with --unshare-pid, and in that case it\nmeans that the sandbox will be in its own pid namespace,\nwhich is a child of the passed in one.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--uid\nUID</b></p>\n\n<p style=\"margin-left:17%;\">Use a custom user id in the\nsandbox (requires <b>--unshare-user</b>)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--gid\nGID</b></p>\n\n<p style=\"margin-left:17%;\">Use a custom group id in the\nsandbox (requires <b>--unshare-user</b>)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--hostname\nHOSTNAME</b></p>\n\n<p style=\"margin-left:17%;\">Use a custom hostname in the\nsandbox (requires <b>--unshare-uts</b>)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Options about\nenvironment setup:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--chdir\nDIR</b></p>\n\n<p style=\"margin-left:17%;\">Change directory to DIR</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--setenv VAR\nVALUE</b></p>\n\n<p style=\"margin-left:17%;\">Set an environment variable</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--unsetenv\nVAR</b></p>\n\n<p style=\"margin-left:17%;\">Unset an environment\nvariable</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--clearenv</b></p>\n\n<p style=\"margin-left:17%;\">Unset all environment\nvariables, except for <b>PWD</b> and any that are\nsubsequently set by <b>--setenv</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Options for\nmonitoring the sandbox from the outside:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--lock-file\nDEST</b></p>\n\n<p style=\"margin-left:17%;\">Take a lock on DEST while the\nsandbox is running. This option can be used multiple times\nto take locks on multiple files.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--sync-fd\nFD</b></p>\n\n<p style=\"margin-left:17%;\">Keep this file descriptor open\nwhile the sandbox is running</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Filesystem\nrelated options. These are all operations that modify the\nfilesystem directly, or mounts stuff in the filesystem.\nThese are applied in the order they are given as\narguments.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Any missing\nparent directories that are required to create a specified\ndestination are automatically created as needed. Their\npermissions are normally set to 0755 (rwxr-xr-x). However,\nif a <b>--perms</b> option is in effect, and it sets the\npermissions for group or other to zero, then newly-created\nparent directories will also have their corresponding\npermission set to zero.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--perms\nOCTAL</b></p>\n\n<p style=\"margin-left:17%;\">This option does nothing on its\nown, and must be followed by one of the options that it\naffects. It sets the permissions for the next operation to\nOCTAL. Subsequent operations are not affected: for example,\n--perms 0700 --tmpfs /a --tmpfs /b will mount /a with\npermissions 0700, then return to the default permissions for\n/b.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--bind SRC\nDEST</b></p>\n\n<p style=\"margin-left:17%;\">Bind mount the host path SRC on\nDEST</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--bind-try\nSRC DEST</b></p>\n\n<p style=\"margin-left:17%;\">Equal to <b>--bind</b> but\nignores non-existent SRC</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--dev-bind\nSRC DEST</b></p>\n\n<p style=\"margin-left:17%;\">Bind mount the host path SRC on\nDEST, allowing device access</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--dev-bind-try\nSRC DEST</b></p>\n\n<p style=\"margin-left:17%;\">Equal to <b>--dev-bind</b> but\nignores non-existent SRC</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--ro-bind\nSRC DEST</b></p>\n\n<p style=\"margin-left:17%;\">Bind mount the host path SRC\nreadonly on DEST</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--ro-bind-try\nSRC DEST</b></p>\n\n<p style=\"margin-left:17%;\">Equal to <b>--ro-bind</b> but\nignores non-existent SRC</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--remount-ro\nDEST</b></p>\n\n<p style=\"margin-left:17%;\">Remount the path DEST as\nreadonly. It works only on the specified mount point,\nwithout changing any other mount point under the specified\npath</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--proc\nDEST</b></p>\n\n<p style=\"margin-left:17%;\">Mount procfs on DEST</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--dev\nDEST</b></p>\n\n<p style=\"margin-left:17%;\">Mount new devtmpfs on DEST</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--tmpfs\nDEST</b></p>\n\n<p style=\"margin-left:17%;\">Mount new tmpfs on DEST. If the\nprevious option was <b>--perms</b>, it sets the mode of the\ntmpfs. Otherwise, the tmpfs has mode 0755.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--mqueue\nDEST</b></p>\n\n<p style=\"margin-left:17%;\">Mount new mqueue on DEST</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--dir\nDEST</b></p>\n\n<p style=\"margin-left:17%;\">Create a directory at DEST. If\nthe directory already exists, its permissions are\nunmodified, ignoring <b>--perms</b> (use <b>--chmod</b> if\nthe permissions of an existing directory need to be\nchanged). If the directory is newly created and the previous\noption was <b>--perms</b>, it sets the mode of the\ndirectory. Otherwise, newly-created directories have mode\n0755.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--file FD\nDEST</b></p>\n\n<p style=\"margin-left:17%;\">Copy from the file descriptor\nFD to DEST. If the previous option was <b>--perms</b>, it\nsets the mode of the new file. Otherwise, the file has mode\n0666 (note that this is not the same as\n<b>--bind-data</b>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--bind-data\nFD DEST</b></p>\n\n<p style=\"margin-left:17%;\">Copy from the file descriptor\nFD to a file which is bind-mounted on DEST. If the previous\noption was <b>--perms</b>, it sets the mode of the new file.\nOtherwise, the file has mode 0600 (note that this is not the\nsame as <b>--file</b>).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--ro-bind-data\nFD DEST</b></p>\n\n<p style=\"margin-left:17%;\">Copy from the file descriptor\nFD to a file which is bind-mounted read-only on DEST. If the\nprevious option was <b>--perms</b>, it sets the mode of the\nnew file. Otherwise, the file has mode 0600 (note that this\nis not the same as <b>--file</b>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--symlink\nSRC DEST</b></p>\n\n<p style=\"margin-left:17%;\">Create a symlink at DEST with\ntarget SRC</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--chmod\nOCTAL PATH</b></p>\n\n<p style=\"margin-left:17%;\">Set the permissions of PATH,\nwhich must already exist, to OCTAL.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Lockdown\noptions:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--seccomp\nFD</b></p>\n\n<p style=\"margin-left:17%;\">Load and use seccomp rules from\nFD. The rules need to be in the form of a compiled cBPF\nprogram, as generated by seccomp_export_bpf. If this option\nis given more than once, only the last one is used. Use\n<b>--add-seccomp-fd</b> if multiple seccomp programs are\nneeded.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--add-seccomp-fd\nFD</b></p>\n\n<p style=\"margin-left:17%;\">Load and use seccomp rules from\nFD. The rules need to be in the form of a compiled cBPF\nprogram, as generated by seccomp_export_bpf. This option can\nbe repeated, in which case all the seccomp programs will be\nloaded in the order given (note that the kernel will\nevaluate them in reverse order, so the last program on the\nbwrap command-line is evaluated first). All of them, except\npossibly the last, must allow use of the PR_SET_SECCOMP\nprctl. This option cannot be combined with\n<b>--seccomp</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--exec-label\nLABEL</b></p>\n\n<p style=\"margin-left:17%;\">Exec Label from the sandbox. On\nan SELinux system you can specify the SELinux context for\nthe sandbox process(s).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--file-label\nLABEL</b></p>\n\n<p style=\"margin-left:17%;\">File label for temporary\nsandbox content. On an SELinux system you can specify the\nSELinux context for the sandbox content.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--block-fd\nFD</b></p>\n\n<p style=\"margin-left:17%;\">Block the sandbox on reading\nfrom FD until some data is available.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--userns-block-fd\nFD</b></p>\n\n<p style=\"margin-left:17%;\">Do not initialize the user\nnamespace but wait on FD until it is ready. This allow\nexternal processes (like newuidmap/newgidmap) to setup the\nuser namespace before it is used by the sandbox process.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--info-fd\nFD</b></p>\n\n<p style=\"margin-left:17%;\">Write information in JSON\nformat about the sandbox to FD.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--new-session</b></p>\n\n<p style=\"margin-left:17%;\">Create a new terminal session\nfor the sandbox (calls setsid()). This disconnects the\nsandbox from the controlling terminal which means the\nsandbox can't for instance inject input into the\nterminal.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note: In a\ngeneral sandbox, if you don't use --new-session, it is\nrecommended to use seccomp to disallow the TIOCSTI ioctl,\notherwise the application can feed keyboard input to the\nterminal.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--die-with-parent</b></p>\n\n<p style=\"margin-left:17%;\">Ensures child process (COMMAND)\ndies when bwrap's parent dies. Kills (SIGKILL) all bwrap\nsandbox processes in sequence from parent to child including\nCOMMAND process when bwrap or bwrap's parent dies. See\nprctl, PR_SET_PDEATHSIG.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--as-pid-1</b></p>\n\n<p style=\"margin-left:17%;\">Do not create a process with\nPID=1 in the sandbox to reap child processes.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--cap-add\nCAP</b></p>\n\n<p style=\"margin-left:17%;\">Add the specified capability\nwhen running as privileged user. It accepts the special\nvalue ALL to add all the permitted caps.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>--cap-drop\nCAP</b></p>\n\n<p style=\"margin-left:17%;\">Drop the specified capability\nwhen running as privileged user. It accepts the special\nvalue ALL to drop all the caps. By default no caps are left\nin the sandboxed process. The <b>--cap-add</b> and\n<b>--cap-drop</b> options are processed in the order they\nare specified on the command line. Please be careful to the\norder they are specified.</p>\n\n<h2>ENVIRONMENT\n<a name=\"ENVIRONMENT\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>HOME</b></p>\n\n<p style=\"margin-left:17%;\">Used as the cwd in the sandbox\nif <b>--chdir</b> has not been explicitly specified and the\ncurrent cwd is not present inside the sandbox. The\n<b>--setenv</b> option can be used to override the value\nthat is used here.</p>\n\n<h2>EXIT STATUS\n<a name=\"EXIT STATUS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>bwrap</b> command returns the exit status of the initial\napplication process (pid 2 in the sandbox).</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#ENVIRONMENT\">ENVIRONMENT</a>","<a href=\"#EXIT STATUS\">EXIT STATUS</a>"]}