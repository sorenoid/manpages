{"name":"dsp56k","description":"dsp56k - DSP56001 interface device","body":"\n\n<h1 align=\"center\">DSP56K</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">dsp56k -\nDSP56001 interface device</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;asm/dsp56k.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ssize_t\nread(int</b> <i>fd</i><b>, void *</b><i>data</i><b>,\nsize_t</b> <i>length</i><b>); <br>\nssize_t write(int</b> <i>fd</i><b>, void\n*</b><i>data</i><b>, size_t</b> <i>length</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nioctl(int</b> <i>fd</i><b>, DSP56K_UPLOAD, struct\ndsp56k_upload *</b><i>program</i><b>); <br>\nint ioctl(int</b> <i>fd</i><b>, DSP56K_SET_TX_WSIZE, int</b>\n<i>wsize</i><b>); <br>\nint ioctl(int</b> <i>fd</i><b>, DSP56K_SET_RX_WSIZE, int</b>\n<i>wsize</i><b>); <br>\nint ioctl(int</b> <i>fd</i><b>, DSP56K_HOST_FLAGS, struct\ndsp56k_host_flags *</b><i>flags</i><b>); <br>\nint ioctl(int</b> <i>fd</i><b>, DSP56K_HOST_CMD, int</b>\n<i>cmd</i><b>);</b></p>\n\n<h2>CONFIGURATION\n<a name=\"CONFIGURATION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>dsp56k</b> device is a character device with major number\n55 and minor number 0.</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The Motorola\nDSP56001 is a fully programmable 24-bit digital signal\nprocessor found in Atari Falcon030-compatible computers. The\n<i>dsp56k</i> special file is used to control the DSP56001,\nand to send and receive data using the bidirectional\nhandshaked host port.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To send a data\nstream to the signal processor, use <a href=\"https://man.page/2/write\">write(2)</a> to the\ndevice, and <a href=\"https://man.page/2/read\">read(2)</a> to receive processed data. The\ndata can be sent or received in 8, 16, 24, or 32-bit\nquantities on the host side, but will always be seen as\n24-bit quantities in the DSP56001.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\n<a href=\"https://man.page/2/ioctl\">ioctl(2)</a> calls are used to control the <i>dsp56k</i>\ndevice: <b><br>\nDSP56K_UPLOAD</b></p>\n\n<p style=\"margin-left:22%;\">resets the DSP56001 and uploads\na program. The third <a href=\"https://man.page/2/ioctl\">ioctl(2)</a> argument must be a\npointer to a <i>struct dsp56k_upload</i> with members\n<i>bin</i> pointing to a DSP56001 binary program, and\n<i>len</i> set to the length of the program, counted in\n24-bit words.</p>\n\n<p style=\"margin-left:11%;\"><b>DSP56K_SET_TX_WSIZE</b></p>\n\n<p style=\"margin-left:22%;\">sets the transmit word size.\nAllowed values are in the range 1 to 4, and is the number of\nbytes that will be sent at a time to the DSP56001. These\ndata quantities will either be padded with bytes containing\nzero, or truncated to fit the native 24-bit data format of\nthe DSP56001.</p>\n\n<p style=\"margin-left:11%;\"><b>DSP56K_SET_RX_WSIZE</b></p>\n\n<p style=\"margin-left:22%;\">sets the receive word size.\nAllowed values are in the range 1 to 4, and is the number of\nbytes that will be received at a time from the DSP56001.\nThese data quantities will either truncated, or padded with\na null byte ('\\0') to fit the native 24-bit data format of\nthe DSP56001.</p>\n\n<p style=\"margin-left:11%;\"><b>DSP56K_HOST_FLAGS</b></p>\n\n<p style=\"margin-left:22%;\">read and write the host flags.\nThe host flags are four general-purpose bits that can be\nread by both the hosting computer and the DSP56001. Bits 0\nand 1 can be written by the host, and bits 2 and 3 can be\nwritten by the DSP56001.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">To access the\nhost flags, the third <a href=\"https://man.page/2/ioctl\">ioctl(2)</a> argument must be a\npointer to a <i>struct dsp56k_host_flags</i>. If bit 0 or 1\nis set in the <i>dir</i> member, the corresponding bit in\n<i>out</i> will be written to the host flags. The state of\nall host flags will be returned in the lower four bits of\nthe <i>status</i> member.</p>\n\n<p style=\"margin-left:11%;\"><b>DSP56K_HOST_CMD</b></p>\n\n<p style=\"margin-left:22%;\">sends a host command. Allowed\nvalues are in the range 0 to 31, and is a user-defined\ncommand handled by the program running in the DSP56001.</p>\n\n<h2>FILES\n<a name=\"FILES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>/dev/dsp56k</i></p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>linux/include/asm-m68k/dsp56k.h</i>,\n<i>linux/drivers/char/dsp56k.c</i>,\n<a href=\"http://dsp56k.nocrew.org/\">http://dsp56k.nocrew.org/</a>,\nDSP56000/DSP56001 Digital Signal Processor User&rsquo;s\nManual</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#CONFIGURATION\">CONFIGURATION</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#FILES\">FILES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":4}