{"name":"initrd","description":"initrd - boot loader initialized RAM disk","body":"\n\n<h1 align=\"center\">INITRD</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">initrd - boot\nloader initialized RAM disk</p>\n\n<h2>CONFIGURATION\n<a name=\"CONFIGURATION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>/dev/initrd</i>\nis a read-only block device assigned major number 1 and\nminor number 250. Typically <i>/dev/initrd</i> is owned by\nroot:disk with mode 0400 (read access by root only). If the\nLinux system does not have <i>/dev/initrd</i> already\ncreated, it can be created with the following commands:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">mknod -m 400\n/dev/initrd b 1 250 <br>\nchown root:disk /dev/initrd</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Also, support\nfor both &quot;RAM disk&quot; and &quot;Initial RAM\ndisk&quot; (e.g., <b>CONFIG_BLK_DEV_RAM=y</b> and\n<b>CONFIG_BLK_DEV_INITRD=y</b>) must be compiled directly\ninto the Linux kernel to use <i>/dev/initrd</i>. When using\n<i>/dev/initrd</i>, the RAM disk driver cannot be loaded as\na module.</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The special\nfile <i>/dev/initrd</i> is a read-only block device. This\ndevice is a RAM disk that is initialized (e.g., loaded) by\nthe boot loader before the kernel is started. The kernel\nthen can use <i>/dev/initrd</i>&rsquo;s contents for a\ntwo-phase system boot-up.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the first\nboot-up phase, the kernel starts up and mounts an initial\nroot filesystem from the contents of <i>/dev/initrd</i>\n(e.g., RAM disk initialized by the boot loader). In the\nsecond phase, additional drivers or other modules are loaded\nfrom the initial root device&rsquo;s contents. After loading\nthe additional modules, a new root filesystem (i.e., the\nnormal root filesystem) is mounted from a different\ndevice.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Boot-up\noperation</b> <br>\nWhen booting up with <b>initrd</b>, the system boots as\nfollows:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>1.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>The boot loader loads the kernel program and\n<i>/dev/initrd</i>&rsquo;s contents into memory.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>2.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>On kernel startup, the kernel uncompresses and copies\nthe contents of the device <i>/dev/initrd</i> onto device\n<i>/dev/ram0</i> and then frees the memory used by\n<i>/dev/initrd</i>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>3.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>The kernel then read-write mounts the device\n<i>/dev/ram0</i> as the initial root filesystem.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>4.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>If the indicated normal root filesystem is also the\ninitial root filesystem (e.g., <i>/dev/ram0</i>) then the\nkernel skips to the last step for the usual boot\nsequence.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>5.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>If the executable file <i>/linuxrc</i> is present in the\ninitial root filesystem, <i>/linuxrc</i> is executed with\nUID 0. (The file <i>/linuxrc</i> must have executable\npermission. The file <i>/linuxrc</i> can be any valid\nexecutable, including a shell script.)</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>6.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>If <i>/linuxrc</i> is not executed or when\n<i>/linuxrc</i> terminates, the normal root filesystem is\nmounted. (If <i>/linuxrc</i> exits with any filesystems\nmounted on the initial root filesystem, then the behavior of\nthe kernel is <b>UNSPECIFIED</b>. See the NOTES section for\nthe current kernel behavior.)</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>7.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>If the normal root filesystem has a directory\n<i>/initrd</i>, the device <i>/dev/ram0</i> is moved from\n<i>/</i> to <i>/initrd</i>. Otherwise, if the directory\n<i>/initrd</i> does not exist, the device <i>/dev/ram0</i>\nis unmounted. (When moved from <i>/</i> to <i>/initrd</i>,\n<i>/dev/ram0</i> is not unmounted and therefore processes\ncan remain running from <i>/dev/ram0</i>. If directory\n<i>/initrd</i> does not exist on the normal root filesystem\nand any processes remain running from <i>/dev/ram0</i> when\n<i>/linuxrc</i> exits, the behavior of the kernel is\n<b>UNSPECIFIED</b>. See the NOTES section for the current\nkernel behavior.)</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>8.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>The usual boot sequence (e.g., invocation of\n<i>/sbin/init</i>) is performed on the normal root\nfilesystem.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Options</b>\n<br>\nThe following boot loader options, when used with\n<b>initrd</b>, affect the kernel&rsquo;s boot-up operation:\n<b><br>\ninitrd=</b><i>filename</i></p>\n\n<p style=\"margin-left:22%;\">Specifies the file to load as\nthe contents of <i>/dev/initrd</i>. For <b>LOADLIN</b> this\nis a command-line option. For <b>LILO</b> you have to use\nthis command in the <b>LILO</b> configuration file\n<i>/etc/lilo.config</i>. The filename specified with this\noption will typically be a gzipped filesystem image.</p>\n\n<p style=\"margin-left:11%;\"><b>noinitrd</b></p>\n\n<p style=\"margin-left:22%;\">This boot option disables the\ntwo-phase boot-up operation. The kernel performs the usual\nboot sequence as if <i>/dev/initrd</i> was not initialized.\nWith this option, any contents of <i>/dev/initrd</i> loaded\ninto memory by the boot loader contents are preserved. This\noption permits the contents of <i>/dev/initrd</i> to be any\ndata and need not be limited to a filesystem image. However,\ndevice <i>/dev/initrd</i> is read-only and can be read only\none time after system startup.</p>\n\n\n<p style=\"margin-left:11%;\"><b>root=</b><i>device-name</i></p>\n\n<p style=\"margin-left:22%;\">Specifies the device to be used\nas the normal root filesystem. For <b>LOADLIN</b> this is a\ncommand-line option. For <b>LILO</b> this is a boot time\noption or can be used as an option line in the <b>LILO</b>\nconfiguration file <i>/etc/lilo.config</i>. The device\nspecified by this option must be a mountable device having a\nsuitable root filesystem.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Changing the\nnormal root filesystem</b> <br>\nBy default, the kernel&rsquo;s settings (e.g., set in the\nkernel file with <b>rdev</b>(8) or compiled into the kernel\nfile), or the boot loader option setting is used for the\nnormal root filesystems. For an NFS-mounted normal root\nfilesystem, one has to use the <b>nfs_root_name</b> and\n<b>nfs_root_addrs</b> boot options to give the NFS settings.\nFor more information on NFS-mounted root see the kernel\ndocumentation file\n<i>Documentation/filesystems/nfs/nfsroot.txt</i> (or\n<i>Documentation/filesystems/nfsroot.txt</i> before Linux\n2.6.33). For more information on setting the root filesystem\nsee also the <b>LILO</b> and <b>LOADLIN</b>\ndocumentation.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It is also\npossible for the <i>/linuxrc</i> executable to change the\nnormal root device. For <i>/linuxrc</i> to change the normal\nroot device, <i>/proc</i> must be mounted. After mounting\n<i>/proc</i>, <i>/linuxrc</i> changes the normal root device\nby writing into the proc files\n<i>/proc/sys/kernel/real-root-dev</i>,\n<i>/proc/sys/kernel/nfs-root-name</i>, and\n<i>/proc/sys/kernel/nfs-root-addrs</i>. For a physical root\ndevice, the root device is changed by having <i>/linuxrc</i>\nwrite the new root filesystem device number into\n<i>/proc/sys/kernel/real-root-dev</i>. For an NFS root\nfilesystem, the root device is changed by having\n<i>/linuxrc</i> write the NFS setting into files\n<i>/proc/sys/kernel/nfs-root-name</i> and\n<i>/proc/sys/kernel/nfs-root-addrs</i> and then writing 0xff\n(e.g., the pseudo-NFS-device number) into file\n<i>/proc/sys/kernel/real-root-dev</i>. For example, the\nfollowing shell command line would change the normal root\ndevice to <i>/dev/hdb1</i>:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">echo 0x365\n&gt;/proc/sys/kernel/real-root-dev</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an NFS\nexample, the following shell command lines would change the\nnormal root device to the NFS directory <i>/var/nfsroot</i>\non a local networked NFS server with IP number 193.8.232.7\nfor a system with IP number 193.8.232.2 and named\n&quot;idefix&quot;:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">echo\n/var/nfsroot &gt;/proc/sys/kernel/nfs-root-name <br>\necho 193.8.232.2:193.8.232.7::255.255.255.0:idefix \\ <br>\n&gt;/proc/sys/kernel/nfs-root-addrs <br>\necho 255 &gt;/proc/sys/kernel/real-root-dev</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Note</b>:\nThe use of <i>/proc/sys/kernel/real-root-dev</i> to change\nthe root filesystem is obsolete. See the Linux kernel source\nfile <i>Documentation/admin-guide/initrd.rst</i> (or\n<i>Documentation/initrd.txt</i> before Linux 4.10) as well\nas <a href=\"https://man.page/2/pivot_root\">pivot_root(2)</a> and <b>pivot_root</b>(8) for\ninformation on the modern method of changing the root\nfilesystem.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Usage</b>\n<br>\nThe main motivation for implementing <b>initrd</b> was to\nallow for modular kernel configuration at system\ninstallation.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A possible\nsystem installation scenario is as follows:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>1.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>The loader program boots from floppy or other media with\na minimal kernel (e.g., support for <i>/dev/ram</i>,\n<i>/dev/initrd</i>, and the ext2 filesystem) and loads\n<i>/dev/initrd</i> with a gzipped version of the initial\nfilesystem.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>2.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>The executable <i>/linuxrc</i> determines what is needed\nto (1) mount the normal root filesystem (i.e., device type,\ndevice drivers, filesystem) and (2) the distribution media\n(e.g., CD-ROM, network, tape, ...). This can be done by\nasking the user, by auto-probing, or by using a hybrid\napproach.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>3.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>The executable <i>/linuxrc</i> loads the necessary\nmodules from the initial root filesystem.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>4.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>The executable <i>/linuxrc</i> creates and populates the\nroot filesystem. (At this stage the normal root filesystem\ndoes not have to be a completed system yet.)</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>5.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>The executable <i>/linuxrc</i> sets\n<i>/proc/sys/kernel/real-root-dev</i>, unmounts\n<i>/proc</i>, the normal root filesystem and any other\nfilesystems it has mounted, and then terminates.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>6.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>The kernel then mounts the normal root filesystem.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>7.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>Now that the filesystem is accessible and intact, the\nboot loader can be installed.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>8.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>The boot loader is configured to load into\n<i>/dev/initrd</i> a filesystem with the set of modules that\nwas used to bring up the system. (e.g., device\n<i>/dev/ram0</i> can be modified, then unmounted, and\nfinally, the image is written from <i>/dev/ram0</i> to a\nfile.)</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>9.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>The system is now bootable and additional installation\ntasks can be performed.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The key role of\n<i>/dev/initrd</i> in the above is to reuse the\nconfiguration data during normal system operation without\nrequiring initial kernel selection, a large generic kernel\nor, recompiling the kernel.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A second\nscenario is for installations where Linux runs on systems\nwith different hardware configurations in a single\nadministrative network. In such cases, it may be desirable\nto use only a small set of kernels (ideally only one) and to\nkeep the system-specific part of configuration information\nas small as possible. In this case, create a common file\nwith all needed modules. Then, only the <i>/linuxrc</i> file\nor a file executed by <i>/linuxrc</i> would be\ndifferent.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A third\nscenario is more convenient recovery disks. Because\ninformation like the location of the root filesystem\npartition is not needed at boot time, the system loaded from\n<i>/dev/initrd</i> can use a dialog and/or auto-detection\nfollowed by a possible sanity check.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Last but not\nleast, Linux distributions on CD-ROM may use <b>initrd</b>\nfor easy installation from the CD-ROM. The distribution can\nuse <b>LOADLIN</b> to directly load <i>/dev/initrd</i> from\nCD-ROM without the need of any floppies. The distribution\ncould also use a <b>LILO</b> boot floppy and then bootstrap\na bigger RAM disk via <i>/dev/initrd</i> from the\nCD-ROM.</p>\n\n<h2>FILES\n<a name=\"FILES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>/dev/initrd\n<br>\n/dev/ram0 <br>\n/linuxrc <br>\n/initrd</i></p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\">1.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p style=\"margin-top: 1em\">With the current kernel, any\nfilesystems that remain mounted when <i>/dev/ram0</i> is\nmoved from <i>/</i> to <i>/initrd</i> continue to be\naccessible. However, the <i>/proc/mounts</i> entries are not\nupdated.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>2.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>With the current kernel, if directory <i>/initrd</i>\ndoes not exist, then <i>/dev/ram0</i> will <b>not</b> be\nfully unmounted if <i>/dev/ram0</i> is used by any process\nor has any filesystem mounted on it. If <i>/dev/ram0</i> is\n<b>not</b> fully unmounted, then <i>/dev/ram0</i> will\nremain in memory.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>3.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>Users of <i>/dev/initrd</i> should not depend on the\nbehavior given in the above notes. The behavior may change\nin future versions of the Linux kernel.</p></td></tr>\n</table>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/chown\">chown(1)</a>,\n<a href=\"https://man.page/1/mknod\">mknod(1)</a>, <a href=\"https://man.page/4/ram\">ram(4)</a>, <b>freeramdisk</b>(8),\n<b>rdev</b>(8)</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Documentation/admin-guide/initrd.rst</i>\n(or <i>Documentation/initrd.txt</i> before Linux 4.10) in\nthe Linux kernel source tree, the LILO documentation, the\nLOADLIN documentation, the SYSLINUX documentation</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#CONFIGURATION\">CONFIGURATION</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#FILES\">FILES</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":4}