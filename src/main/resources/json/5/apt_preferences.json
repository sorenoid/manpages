{"name":"apt_preferences","body":"\n\n<h1 align=\"center\">APT_PREFERENCES</h1>\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">apt_preferences\n- Preference control file for APT</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The APT\npreferences file /etc/apt/preferences and the fragment files\nin the /etc/apt/preferences.d/ folder can be used to control\nwhich versions of packages will be selected for\ninstallation.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Several\nversions of a package may be available for installation when\nthe <b>sources.list</b>(5) file contains references to more\nthan one distribution (for example, stable and testing). APT\nassigns a priority to each version that is available.\nSubject to dependency constraints, <b>apt-get</b> selects\nthe version with the highest priority for installation. The\nAPT preferences override the priorities that APT assigns to\npackage versions by default, thus giving the user control\nover which one is selected for installation.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Several\ninstances of the same version of a package may be available\nwhen the <b>sources.list</b>(5) file contains references to\nmore than one source. In this case <b>apt-get</b> downloads\nthe instance listed earliest in the <b>sources.list</b>(5)\nfile. The APT preferences do not affect the choice of\ninstance, only the choice of version.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Preferences are\na strong power in the hands of a system administrator but\nthey can become also their biggest nightmare if used without\ncare! APT will not question the preferences, so wrong\nsettings can lead to uninstallable packages or wrong\ndecisions while upgrading packages. Even more problems will\narise if multiple distribution releases are mixed without a\ngood understanding of the following paragraphs. Packages\nincluded in a specific release aren't tested in (and\ntherefore don't always work as expected in) older or newer\nreleases, or together with other packages from different\nreleases. You have been warned.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that the\nfiles in the /etc/apt/preferences.d directory are parsed in\nalphanumeric ascending order and need to obey the following\nnaming convention: The files have either no or\n&quot;pref&quot; as filename extension and only contain\nalphanumeric, hyphen (-), underscore (_) and period (.)\ncharacters. Otherwise APT will print a notice that it has\nignored a file, unless that file matches a pattern in the\nDir::Ignore-Files-Silently configuration list - in which\ncase it will be silently ignored.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>APT's\nDefault Priority Assignments</b> <br>\nIf there is no preferences file or if there is no entry in\nthe file that applies to a particular version then the\npriority assigned to that version is the priority of the\ndistribution to which that version belongs. It is possible\nto single out a distribution, &quot;the target\nrelease&quot;, which receives a higher priority than other\ndistributions do by default. The target release can be set\non the <b>apt-get</b> command line or in the APT\nconfiguration file /etc/apt/apt.conf. Note that this has\nprecedence over any general priority you set in the\n/etc/apt/preferences file described later, but not over\nspecifically pinned packages. For example,</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>apt-get\ninstall -t testing</b> <i>some-package</i></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">APT::Default-Release\n&quot;stable&quot;;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the target\nrelease has been specified then APT uses the following\nalgorithm to set the priorities of the versions of a\npackage. Assign:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">priority 1</p>\n\n<p style=\"margin-left:17%;\">to the versions coming from\narchives which in their Release files are marked as\n&quot;NotAutomatic: yes&quot; but <i>not</i> as\n&quot;ButAutomaticUpgrades: yes&quot; like the Debian\nexperimental archive, as well as versions that are not\nphased on this systems.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">priority\n100</p>\n\n<p style=\"margin-left:17%;\">to the version that is already\ninstalled (if any) and to the versions coming from archives\nwhich in their Release files are marked as\n&quot;NotAutomatic: yes&quot; and\n&quot;ButAutomaticUpgrades: yes&quot; like the Debian\nbackports archive since squeeze-backports.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">priority\n500</p>\n\n<p style=\"margin-left:17%;\">to the versions that do not\nbelong to the target release.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">priority\n990</p>\n\n<p style=\"margin-left:17%;\">to the versions that belong to\nthe target release.</p>\n\n<p style=\"margin-left:11%;\">The highest of those priorities\nwhose description matches the version is assigned to the\nversion.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the target\nrelease has not been specified then APT simply assigns\npriority 100 to all installed package versions and priority\n500 to all uninstalled package versions, except versions\ncoming from archives which in their Release files are marked\nas &quot;NotAutomatic: yes&quot; - these versions get the\npriority 1 or priority 100 if it is additionally marked as\n&quot;ButAutomaticUpgrades: yes&quot;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">APT then\napplies the following rules, listed in order of precedence,\nto determine which version of a package to install.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Never\ndowngrade unless the priority of an available version\nexceeds 1000. (&quot;Downgrading&quot; is installing a less\nrecent version of a package in place of a more recent\nversion. Note that none of APT's default priorities exceeds\n1000; such high priorities can only be set in the\npreferences file. Note also that downgrading a package can\nbe risky.)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Install\nthe highest priority version.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; If two\nor more versions have the same priority, install the most\nrecent one (that is, the one with the higher version\nnumber).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; If two\nor more versions have the same priority and version number\nbut either the packages differ in some of their metadata or\nthe --reinstall option is given, install the uninstalled\none.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In a typical\nsituation, the installed version of a package (priority 100)\nis not as recent as one of the versions available from the\nsources listed in the <b>sources.list</b>(5) file (priority\n500 or 990). Then the package will be upgraded when\n<b>apt-get install</b> <i>some-package</i> or <b>apt-get\nupgrade</b> is executed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">More rarely,\nthe installed version of a package is <i>more</i> recent\nthan any of the other available versions. The package will\nnot be downgraded when <b>apt-get install</b>\n<i>some-package</i> or <b>apt-get upgrade</b> is\nexecuted.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Sometimes the\ninstalled version of a package is more recent than the\nversion belonging to the target release, but not as recent\nas a version belonging to some other distribution. Such a\npackage will indeed be upgraded when <b>apt-get install</b>\n<i>some-package</i> or <b>apt-get upgrade</b> is executed,\nbecause at least <i>one</i> of the available versions has a\nhigher priority than the installed version.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Phased\nUpdates</b> <br>\nAPT understands a field called Phased-Update-Percentage\nwhich can be used to control the rollout of a new version.\nIt is an integer between 0 and 100.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A system's\neligibility to a phased update is determined by seeding\nrandom number generator with the package source name, the\nversion number, and /etc/machine-id, and then calculating an\ninteger in the range [0, 100]. If this integer is larger\nthan the Phased-Update-Percentage, the version is pinned to\n1, and thus held back. Otherwise, normal policy rules\napply.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In case you\nhave multiple systems that you want to receive the same set\nof updates, you can set APT::Machine-ID to a UUID such that\nthey all phase the same, or set\nAPT::Get::Never-Include-Phased-Updates or\nAPT::Get::Always-Include-Phased-Updates to true such that\nAPT will never/always consider phased updates.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The Effect\nof APT Preferences</b> <br>\nThe APT preferences file allows the system administrator to\ncontrol the assignment of priorities. The file consists of\none or more multi-line records separated by blank lines.\nRecords can have one of two forms, a specific form and a\ngeneral form.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; The\nspecific form assigns a priority (a\n&quot;Pin-Priority&quot;) to one or more specified packages\nwith a specified version or version range. For example, the\nfollowing record assigns a high priority to all versions of\nthe perl package whose version number begins with\n&quot;5.20&quot;. Multiple packages can be separated by\nspaces.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Package: perl\n<br>\nPin: version 5.20* <br>\nPin-Priority: 1001</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; The\ngeneral form assigns a priority to all of the package\nversions in a given distribution (that is, to all the\nversions of packages that are listed in a certain Release\nfile) or to all of the package versions coming from a\nparticular Internet site, as identified by the site's fully\nqualified domain name.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This\ngeneral-form entry in the APT preferences file applies only\nto groups of packages. For example, the following record\nassigns a high priority to all package versions available\nfrom the local site.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Package: * <br>\nPin: origin &quot;&quot; <br>\nPin-Priority: 999</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">A note of\ncaution: the keyword used here is &quot;origin&quot; which\ncan be used to match a hostname. The following record will\nassign a high priority to all versions available from the\nserver identified by the hostname\n&quot;ftp.de.debian.org&quot;</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Package: * <br>\nPin: origin &quot;ftp.de.debian.org&quot; <br>\nPin-Priority: 999</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This should\n<i>not</i> be confused with the Origin of a distribution as\nspecified in a Release file. What follows the\n&quot;Origin:&quot; tag in a Release file is not an Internet\naddress but an author or vendor name, such as\n&quot;Debian&quot; or &quot;Ximian&quot;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The following\nrecord assigns a low priority to all package versions\nbelonging to any distribution whose Archive name is\n&quot;unstable&quot;.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Package: * <br>\nPin: release a=unstable <br>\nPin-Priority: 50</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The following\nrecord assigns a high priority to all package versions\nbelonging to any distribution whose Codename is\n&quot;bookworm&quot;.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Package: * <br>\nPin: release n=bookworm <br>\nPin-Priority: 900</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The following\nrecord assigns a high priority to all package versions\nbelonging to any release whose Archive name is\n&quot;stable&quot; and whose release Version number is\n&quot;11&quot;.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Package: * <br>\nPin: release a=stable, v=11 <br>\nPin-Priority: 500</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The effect of\nthe comma operator is similar to an &quot;and&quot; in\nlogic: All conditions must be satisfied for the pin to\nmatch. There is one exception: For any type of condition\n(such as two &quot;a&quot; conditions), only the last such\ncondition is checked.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Matching\npackages in the Package field</b> <br>\nThe Package field specifies the package that a pinning\npriority is applied to. The field can either contain a\nbinary package name, a source package name (prefixed with\n&quot;src:&quot;), a <a href=\"https://man.page/7/glob\">glob(7)</a> expression or a regular\nexpression (surrounded by slashes). Multiple package names,\n<a href=\"https://man.page/7/glob\">glob(7)</a> expressions and regular expressions can be\nlisted separated by whitespace in which case the record will\nmatch any of the matched packages.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">By default,\nonly packages of the native architecture are matched. To\nmatch binary packages of any architecture, add the :any\nsuffix to the package name. You can also limit matching to a\nspecific architecture by appending the architecture name to\nthe package name, separated by a colon character.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For example,\nthe following example uses a glob expression and a regular\nexpression to assign the priority 500 to all packages from\nexperimental where the name starts with gnome (as a\n<a href=\"https://man.page/7/glob\">glob(7)</a>-like expression) or contains the word kde (as\na POSIX extended regular expression surrounded by\nslashes).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Package: gnome*\n/kde/ <br>\nPin: release a=experimental <br>\nPin-Priority: 500</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The rule for\nthose expressions is that they can occur anywhere where a\nstring can occur. Thus, the following pin assigns the\npriority 990 to all packages from a release starting with\nhirsute.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Package: * <br>\nPin: release n=hirsute* <br>\nPin-Priority: 990</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If a regular\nexpression occurs in a Package field, the behavior is the\nsame as if this regular expression were replaced with a list\nof all package names it matches. It is undecided whether\nthis will change in the future; thus you should always list\nwild-card pins first, so later specific pins override it.\nThe pattern &quot;*&quot; in a Package field is not\nconsidered a <a href=\"https://man.page/7/glob\">glob(7)</a> expression in itself.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To pin all\nbinaries produced by the apt source package of this APT's\nversion to 990, you can do:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Package:\nsrc:apt <br>\nPin: version 2.4.6 <br>\nPin-Priority: 990</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Source package\npinning can be combined with regular expressions and glob\npatterns, and can also take a binary architecture.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For example,\nlet's pin all binaries for all architectures produced by any\nsource package containing apt in its name to 990:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Package:\nsrc:*apt*:any <br>\nPin: version * <br>\nPin-Priority: 990</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The :any suffix\nmakes sure to select binary packages from any architecture.\nWithout that suffix, apt implicitly assumes the :native\nsuffix which would only select packages from the native\narchitecture.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>How APT\nInterprets Priorities</b> <br>\nPriorities (P) assigned in the APT preferences file must be\npositive or negative integers. They are interpreted as\nfollows (roughly speaking):</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">P &gt;=\n1000</p>\n\n<p style=\"margin-left:17%;\">causes a version to be\ninstalled even if this constitutes a downgrade of the\npackage</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">990 &lt;= P\n&lt; 1000</p>\n\n<p style=\"margin-left:17%;\">causes a version to be\ninstalled even if it does not come from the target release,\nunless the installed version is more recent</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">500 &lt;= P\n&lt; 990</p>\n\n<p style=\"margin-left:17%;\">causes a version to be\ninstalled unless there is a version available belonging to\nthe target release or the installed version is more\nrecent</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">100 &lt;= P\n&lt; 500</p>\n\n<p style=\"margin-left:17%;\">causes a version to be\ninstalled unless there is a version available belonging to\nsome other distribution or the installed version is more\nrecent</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">0 &lt; P &lt;\n100</p>\n\n<p style=\"margin-left:17%;\">causes a version to be\ninstalled only if there is no installed version of the\npackage</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">P &lt; 0</p>\n\n<p style=\"margin-left:17%;\">prevents the version from being\ninstalled</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">P = 0</p>\n\n<p style=\"margin-left:17%;\">has undefined behaviour, do not\nuse it.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The first\nspecific-form record matching an available package version\ndetermines the priority of the package version. Failing\nthat, the priority of the package is defined as the maximum\nof all priorities defined by generic-form records matching\nthe version. Records defined using patterns in the Pin field\nother than &quot;*&quot; are treated like specific-form\nrecords.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For example,\nsuppose the APT preferences file contains the three records\npresented earlier:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Package: perl\n<br>\nPin: version 5.20* <br>\nPin-Priority: 1001</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Package: * <br>\nPin: origin &quot;&quot; <br>\nPin-Priority: 999</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Package: * <br>\nPin: release unstable <br>\nPin-Priority: 50</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Then:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; The most\nrecent available version of the perl package will be\ninstalled, so long as that version's version number begins\nwith &quot;5.20&quot;. If <i>any</i> 5.20* version of perl\nis available and the installed version is 5.24*, then perl\nwill be downgraded.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; A\nversion of any package other than perl that is available\nfrom the local system has priority over other versions, even\nversions belonging to the target release.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; A\nversion of a package whose origin is not the local system\nbut some other site listed in <b>sources.list</b>(5) and\nwhich belongs to an unstable distribution is only installed\nif it is selected for installation and no version of the\npackage is already installed.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Determination\nof Package Version and Distribution Properties</b> <br>\nThe locations listed in the <b>sources.list</b>(5) file\nshould provide Packages and Release files to describe the\npackages available at that location.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The Packages\nfile is normally found in the directory\n.../dists/<i>dist-name</i>/<i>component</i>/<i>arch</i>: for\nexample, .../dists/stable/main/binary-i386/Packages. It\nconsists of a series of multi-line records, one for each\npackage available in that directory. Only two lines in each\nrecord are relevant for setting APT priorities:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">the Package:\nline</p>\n\n<p style=\"margin-left:17%;\">gives the package name</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">the Version:\nline</p>\n\n<p style=\"margin-left:17%;\">gives the version number for\nthe named package</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The Release\nfile is normally found in the directory\n.../dists/<i>dist-name</i>: for example,\n.../dists/stable/Release, or .../dists/bullseye/Release. It\nconsists of a single multi-line record which applies to\n<i>all</i> of the packages in the directory tree below its\nparent. Unlike the Packages file, nearly all of the lines in\na Release file are relevant for setting APT priorities:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">the Archive: or\nSuite: line</p>\n\n<p style=\"margin-left:17%;\">names the archive to which all\nthe packages in the directory tree belong. For example, the\nline &quot;Archive: stable&quot; or &quot;Suite:\nstable&quot; specifies that all of the packages in the\ndirectory tree below the parent of the Release file are in a\nstable archive. Specifying this value in the APT preferences\nfile would require the line:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Pin: release\na=stable</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">the Codename:\nline</p>\n\n<p style=\"margin-left:17%;\">names the codename to which all\nthe packages in the directory tree belong. For example, the\nline &quot;Codename: bookworm&quot; specifies that all of\nthe packages in the directory tree below the parent of the\nRelease file belong to a version named bookworm. Specifying\nthis value in the APT preferences file would require the\nline:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Pin: release\nn=bookworm</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">the Version:\nline</p>\n\n<p style=\"margin-left:17%;\">names the release version. For\nexample, the packages in the tree might belong to Debian\nrelease version 11. Note that there is normally no version\nnumber for the testing and unstable distributions because\nthey have not been released yet. Specifying this in the APT\npreferences file would require one of the following\nlines.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Pin: release\nv=11 <br>\nPin: release a=stable, v=11 <br>\nPin: release 11</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">the Component:\nline</p>\n\n<p style=\"margin-left:17%;\">names the licensing component\nassociated with the packages in the directory tree of the\nRelease file. For example, the line &quot;Component:\nmain&quot; specifies that all the packages in the directory\ntree are from the main component, which entails that they\nare licensed under terms listed in the Debian Free Software\nGuidelines. Specifying this component in the APT preferences\nfile would require the line:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Pin: release\nc=main</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">the Origin:\nline</p>\n\n<p style=\"margin-left:17%;\">names the originator of the\npackages in the directory tree of the Release file. Most\ncommonly, this is Debian. Specifying this origin in the APT\npreferences file would require the line:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Pin: release\no=Debian</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">the Label:\nline</p>\n\n<p style=\"margin-left:17%;\">names the label of the packages\nin the directory tree of the Release file. Most commonly,\nthis is Debian. Specifying this label in the APT preferences\nfile would require the line:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Pin: release\nl=Debian</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All of the\nPackages and Release files retrieved from locations listed\nin the <b>sources.list</b>(5) file are stored in the\ndirectory /var/lib/apt/lists, or in the file named by the\nvariable Dir::State::Lists in the apt.conf file. For\nexample, the file\ndebian.lcs.mit.edu_debian_dists_unstable_contrib_binary-i386_Release\ncontains the Release file retrieved from the site\ndebian.lcs.mit.edu for binary-i386 architecture files from\nthe contrib component of the unstable distribution.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Optional\nLines in an APT Preferences Record</b> <br>\nEach record in the APT preferences file can optionally begin\nwith one or more lines beginning with the word Explanation:.\nThis provides a place for comments.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Tracking\nStable</b> <br>\nThe following APT preferences file will cause APT to assign\na priority higher than the default (500) to all package\nversions belonging to a stable distribution and a\nprohibitively low priority to package versions belonging to\nother Debian distributions.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Explanation:\nUninstall or do not install any Debian-originated <br>\nExplanation: package versions other than those in the stable\ndistro <br>\nPackage: * <br>\nPin: release a=stable <br>\nPin-Priority: 900</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Package: * <br>\nPin: release o=Debian <br>\nPin-Priority: -10</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">With a suitable\n<b>sources.list</b>(5) file and the above preferences file,\nany of the following commands will cause APT to upgrade to\nthe latest stable version(s).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">apt-get install\n<i>package-name</i> <br>\napt-get upgrade <br>\napt-get dist-upgrade</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\ncommand will cause APT to upgrade the specified package to\nthe latest version from the testing distribution; the\npackage will not be upgraded again unless this command is\ngiven again.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">apt-get install\n<i>package</i>/testing</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Tracking\nTesting or Unstable</b> <br>\nThe following APT preferences file will cause APT to assign\na high priority to package versions from the testing\ndistribution, a lower priority to package versions from the\nunstable distribution, and a prohibitively low priority to\npackage versions from other Debian distributions.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Package: * <br>\nPin: release a=testing <br>\nPin-Priority: 900</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Package: * <br>\nPin: release a=unstable <br>\nPin-Priority: 800</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Package: * <br>\nPin: release o=Debian <br>\nPin-Priority: -10</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">With a suitable\n<b>sources.list</b>(5) file and the above preferences file,\nany of the following commands will cause APT to upgrade to\nthe latest testing version(s).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">apt-get install\n<i>package-name</i> <br>\napt-get upgrade <br>\napt-get dist-upgrade</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\ncommand will cause APT to upgrade the specified package to\nthe latest version from the unstable distribution.\nThereafter, <b>apt-get upgrade</b> will upgrade the package\nto the most recent testing version if that is more recent\nthan the installed version, otherwise, to the most recent\nunstable version if that is more recent than the installed\nversion.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">apt-get install\n<i>package</i>/unstable</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Tracking the\nevolution of a codename release</b> <br>\nThe following APT preferences file will cause APT to assign\na priority higher than the default (500) to all package\nversions belonging to a specified codename of a distribution\nand a prohibitively low priority to package versions\nbelonging to other Debian distributions, codenames and\narchives. Note that with this APT preference APT will follow\nthe migration of a release from the archive testing to\nstable and later oldstable. If you want to follow for\nexample the progress in testing notwithstanding the codename\nchanges you should use the example configurations above.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Explanation:\nUninstall or do not install any Debian-originated package\nversions <br>\nExplanation: other than those in the distribution codenamed\nwith bookworm or sid <br>\nPackage: * <br>\nPin: release n=bookworm <br>\nPin-Priority: 900</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Explanation:\nDebian unstable is always codenamed with sid <br>\nPackage: * <br>\nPin: release n=sid <br>\nPin-Priority: 800</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Package: * <br>\nPin: release o=Debian <br>\nPin-Priority: -10</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">With a suitable\n<b>sources.list</b>(5) file and the above preferences file,\nany of the following commands will cause APT to upgrade to\nthe latest version(s) in the release codenamed with\nbookworm.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">apt-get install\n<i>package-name</i> <br>\napt-get upgrade <br>\napt-get dist-upgrade</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\ncommand will cause APT to upgrade the specified package to\nthe latest version from the sid distribution. Thereafter,\n<b>apt-get upgrade</b> will upgrade the package to the most\nrecent bookworm version if that is more recent than the\ninstalled version, otherwise, to the most recent sid version\nif that is more recent than the installed version.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">apt-get install\n<i>package</i>/sid</p>\n\n<h2>FILES\n<a name=\"FILES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">/etc/apt/preferences</p>\n\n<p style=\"margin-left:17%;\">Version preferences file. This\nis where you would specify &quot;pinning&quot;, i.e. a\npreference to get certain packages from a separate source or\nfrom a different version of a distribution. Configuration\nItem: Dir::Etc::Preferences.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">/etc/apt/preferences.d/</p>\n\n<p style=\"margin-left:17%;\">File fragments for the version\npreferences. Configuration Item:\nDir::Etc::PreferencesParts.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>apt-get</b>(8)\n<b>apt-cache</b>(8) <b>apt.conf</b>(5)\n<b>sources.list</b>(5)</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><font color=\"#0000FF\">APT\nbug page</font></b>\n<small><font color=\"#000000\">[1]</font></small>\n<font color=\"#000000\">. If you wish to report a bug in APT,\nplease see /usr/share/doc/debian/bug-reporting.txt or the\n<a href=\"https://man.page/1/reportbug\">reportbug(1)</a> command.</font></p>\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>APT\nteam</b></font></p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"12%\"></td>\n<td width=\"3%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">1.</font></p> </td>\n<td width=\"2%\"></td>\n<td width=\"18%\">\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">APT bug\npage</font></p> </td>\n<td width=\"65%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">http://bugs.debian.org/src:apt</font></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#FILES\">FILES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#AUTHOR\">AUTHOR</a>","<a href=\"#NOTES\">NOTES</a>"],"level":5}