{"name":"systemd.path","description":"systemd.path - Path unit configuration","body":"\n\n<h1 align=\"center\">SYSTEMD.PATH</h1>\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">systemd.path -\nPath unit configuration</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>path</i>.path</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">A unit\nconfiguration file whose name ends in &quot;.path&quot;\nencodes information about a path monitored by systemd, for\npath-based activation.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This man page\nlists the configuration options specific to this unit type.\nSee <b>systemd.unit</b>(5) for the common options of all\nunit configuration files. The common configuration items are\nconfigured in the generic [Unit] and [Install] sections. The\npath specific configuration options are configured in the\n[Path] section.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For each path\nfile, a matching unit file must exist, describing the unit\nto activate when the path changes. By default, a service by\nthe same name as the path (except for the suffix) is\nactivated. Example: a path file foo.path activates a\nmatching service foo.service. The unit to activate may be\ncontrolled by <i>Unit=</i> (see below).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Internally,\npath units use the <a href=\"https://man.page/7/inotify\">inotify(7)</a> API to monitor file\nsystems. Due to that, it suffers by the same limitations as\ninotify, and for example cannot be used to monitor files or\ndirectories changed by other machines on remote NFS file\nsystems.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When a service\nunit triggered by a path unit terminates (regardless whether\nit exited successfully or failed), monitored paths are\nchecked immediately again, and the service accordingly\nrestarted instantly. As protection against busy looping in\nthis trigger/start cycle, a start rate limit is enforced on\nthe service unit, see <i>StartLimitIntervalSec=</i> and\n<i>StartLimitBurst=</i> in <b>systemd.unit</b>(5). Unlike\nother service failures, the error condition that the start\nrate limit is hit is propagated from the service unit to the\npath unit and causes the path unit to fail as well, thus\nending the loop.</p>\n\n<h2>AUTOMATIC DEPENDENCIES\n<a name=\"AUTOMATIC DEPENDENCIES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Implicit\nDependencies</b> <br>\nThe following dependencies are implicitly added:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; If a\npath unit is beneath another mount unit in the file system\nhierarchy, both a requirement and an ordering dependency\nbetween both units are created automatically.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; An\nimplicit <i>Before=</i> dependency is added between a path\nunit and the unit it is supposed to activate.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Default\nDependencies</b> <br>\nThe following dependencies are added unless\n<i>DefaultDependencies=no</i> is set:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Path\nunits will automatically have dependencies of type\n<i>Before=</i> on paths.target, dependencies of type\n<i>After=</i> and <i>Requires=</i> on sysinit.target, and\nhave dependencies of type <i>Conflicts=</i> and\n<i>Before=</i> on shutdown.target. These ensure that path\nunits are terminated cleanly prior to system shutdown. Only\npath units involved with early boot or late system shutdown\nshould disable <i>DefaultDependencies=</i> option.</p>\n\n<h2>OPTIONS\n<a name=\"OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Path files must\ninclude a [Path] section, which carries information about\nthe path(s) it monitors. The options specific to the [Path]\nsection of path units are the following:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>PathExists=</i>,\n<i>PathExistsGlob=</i>, <i>PathChanged=</i>,\n<i>PathModified=</i>, <i>DirectoryNotEmpty=</i></p>\n\n<p style=\"margin-left:17%;\">Defines paths to monitor for\ncertain changes: <i>PathExists=</i> may be used to watch the\nmere existence of a file or directory. If the file specified\nexists, the configured unit is activated.\n<i>PathExistsGlob=</i> works similar, but checks for the\nexistence of at least one file matching the globbing pattern\nspecified. <i>PathChanged=</i> may be used to watch a file\nor directory and activate the configured unit whenever it\nchanges. It is not activated on every write to the watched\nfile but it is activated if the file which was open for\nwriting gets closed. <i>PathModified=</i> is similar, but\nadditionally it is activated also on simple writes to the\nwatched file. <i>DirectoryNotEmpty=</i> may be used to watch\na directory and activate the configured unit whenever it\ncontains at least one file.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The arguments\nof these directives must be absolute file system paths.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Multiple\ndirectives may be combined, of the same and of different\ntypes, to watch multiple paths. If the empty string is\nassigned to any of these options, the list of paths to watch\nis reset, and any prior assignments of these options will\nnot have any effect.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If a path\nalready exists (in case of <i>PathExists=</i> and\n<i>PathExistsGlob=</i>) or a directory already is not empty\n(in case of <i>DirectoryNotEmpty=</i>) at the time the path\nunit is activated, then the configured unit is immediately\nactivated as well. Something similar does not apply to\n<i>PathChanged=</i> and <i>PathModified=</i>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If the path\nitself or any of the containing directories are not\naccessible, <b>systemd</b> will watch for permission changes\nand notice that conditions are satisfied when permissions\nallow that.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Unit=</i></p>\n\n<p style=\"margin-left:17%;\">The unit to activate when any\nof the configured paths changes. The argument is a unit\nname, whose suffix is not &quot;.path&quot;. If not\nspecified, this value defaults to a service that has the\nsame name as the path unit, except for the suffix. (See\nabove.) It is recommended that the unit name that is\nactivated and the unit name of the path unit are named\nidentical, except for the suffix.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>MakeDirectory=</i></p>\n\n<p style=\"margin-left:17%;\">Takes a boolean argument. If\ntrue, the directories to watch are created before watching.\nThis option is ignored for <i>PathExists=</i> settings.\nDefaults to <b>false</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>DirectoryMode=</i></p>\n\n<p style=\"margin-left:17%;\">If <i>MakeDirectory=</i> is\nenabled, use the mode specified here to create the\ndirectories in question. Takes an access mode in octal\nnotation. Defaults to <b>0755</b>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/systemd\">systemd(1)</a>,\n<a href=\"https://man.page/1/systemctl\">systemctl(1)</a>, <b>systemd.unit</b>(5),\n<b>systemd.service</b>(5), <a href=\"https://man.page/7/inotify\">inotify(7)</a>,\n<b>systemd.directives</b>(7)</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#AUTOMATIC DEPENDENCIES\">AUTOMATIC DEPENDENCIES</a>","<a href=\"#OPTIONS\">OPTIONS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"],"level":5}