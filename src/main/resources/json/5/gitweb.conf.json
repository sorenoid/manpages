{"name":"gitweb.conf","description":"gitweb.conf - Gitweb (Git web interface) configuration file","body":"\n\n<h1 align=\"center\">GITWEB.CONF</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gitweb.conf -\nGitweb (Git web interface) configuration file</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">/etc/gitweb.conf,\n/etc/gitweb-common.conf, $GITWEBDIR/gitweb_config.perl</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The gitweb CGI\nscript for viewing Git repositories over the web uses a perl\nscript fragment as its configuration file. You can set\nvariables using &quot;<b>our $variable = value</b>&quot;;\ntext from a &quot;#&quot; character until the end of a line\nis ignored. See <a href=\"https://man.page/1/perlsyn\">perlsyn(1)</a> for details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">An example:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"># gitweb\nconfiguration file for http://git.example.org <br>\n# <br>\nour $projectroot = &quot;/srv/git&quot;; # FHS\nrecommendation <br>\nour $site_name = 'Example.org &gt;&gt; Repos';</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nconfiguration file is used to override the default settings\nthat were built into gitweb at the time the\n<i>gitweb.cgi</i> script was generated.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">While one could\njust alter the configuration settings in the gitweb CGI\nitself, those changes would be lost upon upgrade.\nConfiguration settings might also be placed into a file in\nthe same directory as the CGI script with the default name\n<i>gitweb_config.perl</i> &mdash; allowing one to have\nmultiple gitweb instances with different configurations by\nthe use of symlinks.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that some\nconfiguration can be controlled on per-repository rather\nthan gitweb-wide basis: see &quot;Per-repository gitweb\nconfiguration&quot; subsection on <a href=\"https://man.page/1/gitweb\">gitweb(1)</a>\nmanpage.</p>\n\n<h2>DISCUSSION\n<a name=\"DISCUSSION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Gitweb reads\nconfiguration data from the following sources in the\nfollowing order:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; built-in\nvalues (some set during build stage),</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; common\nsystem-wide configuration file (defaults to\n<b>/etc/gitweb-common.conf</b>),</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; either\nper-instance configuration file (defaults to\n<i>gitweb_config.perl</i> in the same directory as the\ninstalled gitweb), or if it does not exists then fallback\nsystem-wide configuration file (defaults to\n<b>/etc/gitweb.conf</b>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Values obtained\nin later configuration files override values obtained\nearlier in the above sequence.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Locations of\nthe common system-wide configuration file, the fallback\nsystem-wide configuration file and the per-instance\nconfiguration file are defined at compile time using\nbuild-time Makefile configuration variables, respectively\n<b>GITWEB_CONFIG_COMMON</b>, <b>GITWEB_CONFIG_SYSTEM</b> and\n<b>GITWEB_CONFIG</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">You can also\noverride locations of gitweb configuration files during\nruntime by setting the following environment variables:\n<b>GITWEB_CONFIG_COMMON</b>, <b>GITWEB_CONFIG_SYSTEM</b> and\n<b>GITWEB_CONFIG</b> to a non-empty value.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The syntax of\nthe configuration files is that of Perl, since these files\nare handled by sourcing them as fragments of Perl code (the\nlanguage that gitweb itself is written in). Variables are\ntypically set using the <b>our</b> qualifier (as in\n&quot;<b>our $variable = &lt;value&gt;;</b>&quot;) to avoid\nsyntax errors if a new version of gitweb no longer uses a\nvariable and therefore stops declaring it.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">You can include\nother configuration file using read_config_file()\nsubroutine. For example, one might want to put gitweb\nconfiguration related to access control for viewing\nrepositories via Gitolite (one of Git repository management\ntools) in a separate file, e.g. in\n<b>/etc/gitweb-gitolite.conf</b>. To include it, put</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">read_config_file(&quot;/etc/gitweb-gitolite.conf&quot;);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">somewhere in\ngitweb configuration file used, e.g. in per-installation\ngitweb configuration file. Note that read_config_file()\nchecks itself that the file it reads exists, and does\nnothing if it is not found. It also handles errors in\nincluded file.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The default\nconfiguration with no configuration file at all may work\nperfectly well for some installations. Still, a\nconfiguration file is useful for customizing or tweaking the\nbehavior of gitweb in many ways, and some optional features\nwill not be present unless explicitly enabled using the\nconfigurable <b>%features</b> variable (see also\n&quot;Configuring gitweb features&quot; section below).</p>\n\n<h2>CONFIGURATION VARIABLES\n<a name=\"CONFIGURATION VARIABLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Some\nconfiguration variables have their default values (embedded\nin the CGI script) set during building gitweb &mdash; if\nthat is the case, this fact is put in their description. See\ngitweb&rsquo;s <i>INSTALL</i> file for instructions on\nbuilding and installing gitweb.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Location of\nrepositories</b> <br>\nThe configuration variables described below control how\ngitweb finds Git repositories, and how repositories are\ndisplayed and accessed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See also\n&quot;Repositories&quot; and later subsections in\n<a href=\"https://man.page/1/gitweb\">gitweb(1)</a> manpage.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$projectroot</p>\n\n<p style=\"margin-left:17%;\">Absolute filesystem path which\nwill be prepended to project path; the path to repository is\n<b>$projectroot/$project</b>. Set to\n<b>$GITWEB_PROJECTROOT</b> during installation. This\nvariable has to be set correctly for gitweb to find\nrepositories.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For example, if\n<b>$projectroot</b> is set to &quot;/srv/git&quot; by\nputting the following in gitweb config file:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">our\n$projectroot = &quot;/srv/git&quot;;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">then</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\">http://git.example.com/gitweb.cgi?p=foo/bar.git</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">and its\npath_info based equivalent</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\">http://git.example.com/gitweb.cgi/foo/bar.git</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">will map to the\npath <b>/srv/git/foo/bar.git</b> on the filesystem.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$projects_list</p>\n\n<p style=\"margin-left:17%;\">Name of a plain text file\nlisting projects, or a name of directory to be scanned for\nprojects.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Project list\nfiles should list one project per line, with each line\nhaving the following format</p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\">&lt;URI-encoded\nfilesystem path to repository&gt; SP &lt;URI-encoded\nrepository owner&gt;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The default\nvalue of this variable is determined by the\n<b>GITWEB_LIST</b> makefile variable at installation time.\nIf this variable is empty, gitweb will fall back to scanning\nthe <b>$projectroot</b> directory for repositories.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$project_maxdepth</p>\n\n<p style=\"margin-left:17%;\">If <b>$projects_list</b>\nvariable is unset, gitweb will recursively scan filesystem\nfor Git repositories. The <b>$project_maxdepth</b> is used\nto limit traversing depth, relative to <b>$projectroot</b>\n(starting point); it means that directories which are\nfurther from <b>$projectroot</b> than\n<b>$project_maxdepth</b> will be skipped.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">It is purely\nperformance optimization, originally intended for MacOS X,\nwhere recursive directory traversal is slow. Gitweb follows\nsymbolic links, but it detects cycles, ignoring any\nduplicate files and directories.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The default\nvalue of this variable is determined by the build-time\nconfiguration variable <b>GITWEB_PROJECT_MAXDEPTH</b>, which\ndefaults to 2007.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">$export_ok</p>\n\n<p style=\"margin-left:17%;\">Show repository only if this\nfile exists (in repository). Only effective if this variable\nevaluates to true. Can be set when building gitweb by\nsetting <b>GITWEB_EXPORT_OK</b>. This path is relative to\n<b>GIT_DIR</b>. git-daemon[1] uses\n<i>git-daemon-export-ok</i>, unless started with\n<b>--export-all</b>. By default this variable is not set,\nwhich means that this feature is turned off.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$export_auth_hook</p>\n\n<p style=\"margin-left:17%;\">Function used to determine\nwhich repositories should be shown. This subroutine should\ntake one parameter, the full path to a project, and if it\nreturns true, that project will be included in the projects\nlist and can be accessed through gitweb as long as it\nfulfills the other requirements described by $export_ok,\n$projects_list, and $projects_maxdepth. Example:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">our\n$export_auth_hook = sub { return -e\n&quot;$_[0]/git-daemon-export-ok&quot;; };</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">though the\nabove might be done by using <b>$export_ok</b> instead</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">our $export_ok\n= &quot;git-daemon-export-ok&quot;;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If not set\n(default), it means that this feature is disabled.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">See also more\ninvolved example in &quot;Controlling access to Git\nrepositories&quot; subsection on <a href=\"https://man.page/1/gitweb\">gitweb(1)</a>\nmanpage.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$strict_export</p>\n\n<p style=\"margin-left:17%;\">Only allow viewing of\nrepositories also shown on the overview page. This for\nexample makes <b>$export_ok</b> file decide if repository is\navailable and not only if it is shown. If\n<b>$projects_list</b> points to file with list of project,\nonly those repositories listed would be available for\ngitweb. Can be set during building gitweb via\n<b>GITWEB_STRICT_EXPORT</b>. By default this variable is not\nset, which means that you can directly access those\nrepositories that are hidden from projects list page (e.g.\nthe are not listed in the $projects_list file).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Finding\nfiles</b> <br>\nThe following configuration variables tell gitweb where to\nfind files. The values of these variables are paths on the\nfilesystem.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">$GIT</p>\n\n<p style=\"margin-left:17%;\">Core git executable to use. By\ndefault set to <b>$GIT_BINDIR/git</b>, which in turn is by\ndefault set to <b>$(bindir)/git</b>. If you use Git\ninstalled from a binary package, you should usually set this\nto &quot;/usr/bin/git&quot;. This can just be\n&quot;git&quot; if your web server has a sensible PATH; from\nsecurity point of view it is better to use absolute path to\ngit binary. If you have multiple Git versions installed it\ncan be used to choose which one to use. Must be (correctly)\nset for gitweb to be able to work.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$mimetypes_file</p>\n\n<p style=\"margin-left:17%;\">File to use for (filename\nextension based) guessing of MIME types before trying\n<b>/etc/mime.types</b>. <b>NOTE</b> that this path, if\nrelative, is taken as relative to the current Git\nrepository, not to CGI script. If unset, only\n<b>/etc/mime.types</b> is used (if present on filesystem).\nIf no mimetypes file is found, mimetype guessing based on\nextension of file is disabled. Unset by default.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$highlight_bin</p>\n\n<p style=\"margin-left:17%;\">Path to the highlight\nexecutable to use (it must be the one from\n<b><font color=\"#0000FF\">http://www.andre-simon.de</font></b>\n<font color=\"#000000\">due to assumptions about parameters\nand output). By default set to <i>highlight</i>; set it to\nfull path to highlight executable if it is not installed on\nyour web server&rsquo;s PATH. Note that <i>highlight</i>\nfeature must be set for gitweb to actually use syntax\nhighlighting.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\"><b>NOTE</b>:\nfor a file to be highlighted, its syntax type must be\ndetected and that syntax must be supported by\n&quot;highlight&quot;. The default syntax detection is\nminimal, and there are many supported syntax types with no\ndetection by default. There are three options for adding\nsyntax detection. The first and second priority are\n<b>%highlight_basename</b> and <b>%highlight_ext</b>, which\ndetect based on basename (the full filename, for example\n&quot;Makefile&quot;) and extension (for example\n&quot;sh&quot;). The keys of these hashes are the basename\nand extension, respectively, and the value for a given key\nis the name of the syntax to be passed via <b>--syntax\n&lt;syntax&gt;</b> to &quot;highlight&quot;. The last\npriority is the &quot;highlight&quot; configuration of\n<b>Shebang</b> regular expressions to detect the language\nbased on the first line in the file, (for example, matching\nthe line &quot;#!/bin/bash&quot;). See the highlight\ndocumentation and the default config at\n/etc/highlight/filetypes.conf for more details.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">For\nexample if repositories you are hosting use\n&quot;phtml&quot; extension for PHP files, and you want to\nhave correct syntax-highlighting for those files, you can\nadd the following to gitweb configuration:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">our\n%highlight_ext; <br>\n$highlight_ext{'phtml'} = 'php';</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>Links\nand their targets</b> <br>\nThe configuration variables described below configure some\nof gitweb links: their target and their look (text or\nimage), and where to find page prerequisites (stylesheet,\nfavicon, images, scripts). Usually they are left at their\ndefault values, with the possible exception of\n<b>@stylesheets</b> variable.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">@stylesheets</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">List of\nURIs of stylesheets (relative to the base URI of a page).\nYou might specify more than one stylesheet, for example to\nuse &quot;gitweb.css&quot; as base with site specific\nmodifications in a separate stylesheet to make it easier to\nupgrade gitweb. For example, you can add a <b>site</b>\nstylesheet by putting</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">push\n@stylesheets, &quot;gitweb-site.css&quot;;</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">in\nthe gitweb config file. Those values that are relative paths\nare relative to base URI of gitweb.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nlist should contain the URI of gitweb&rsquo;s standard\nstylesheet. The default URI of gitweb stylesheet can be set\nat build time using the <b>GITWEB_CSS</b> makefile variable.\nIts default value is <b>static/gitweb.css</b> (or\n<b>static/gitweb.min.css</b> if the <b>CSSMIN</b> variable\nis defined, i.e. if CSS minifier is used during\nbuild).</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\"><b>Note</b>:\nthere is also a legacy <b>$stylesheet</b> configuration\nvariable, which was used by older gitweb. If\n<b>$stylesheet</b> variable is defined, only CSS stylesheet\ngiven by this variable is used by gitweb.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$logo</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Points to\nthe location where you put <i>git-logo.png</i> on your web\nserver, or to be more the generic URI of logo, 72x27 size).\nThis image is displayed in the top right corner of each\ngitweb page and used as a logo for the Atom feed. Relative\nto the base URI of gitweb (as a path). Can be adjusted when\nbuilding gitweb using <b>GITWEB_LOGO</b> variable By default\nset to <b>static/git-logo.png</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$favicon</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Points to\nthe location where you put <i>git-favicon.png</i> on your\nweb server, or to be more the generic URI of favicon, which\nwill be served as &quot;image/png&quot; type. Web browsers\nthat support favicons (website icons) may display them in\nthe browser&rsquo;s URL bar and next to the site name in\nbookmarks. Relative to the base URI of gitweb. Can be\nadjusted at build time using <b>GITWEB_FAVICON</b> variable.\nBy default set to <b>static/git-favicon.png</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$javascript</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Points to\nthe location where you put <i>gitweb.js</i> on your web\nserver, or to be more generic the URI of JavaScript code\nused by gitweb. Relative to the base URI of gitweb. Can be\nset at build time using the <b>GITWEB_JS</b> build-time\nconfiguration variable.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">The\ndefault value is either <b>static/gitweb.js</b>, or\n<b>static/gitweb.min.js</b> if the <b>JSMIN</b> build\nvariable was defined, i.e. if JavaScript minifier was used\nat build time. <b>Note</b> that this single file is\ngenerated from multiple individual JavaScript\n&quot;modules&quot;.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$home_link</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Target of\nthe home link on the top of all pages (the first part of\nview &quot;breadcrumbs&quot;). By default it is set to the\nabsolute URI of a current page (to the value of\n<b>$my_uri</b> variable, or to &quot;/&quot; if\n<b>$my_uri</b> is undefined or is an empty\nstring).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$home_link_str</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Label for\nthe &quot;home link&quot; at the top of all pages, leading\nto <b>$home_link</b> (usually the main gitweb page, which\ncontains the projects list). It is used as the first\ncomponent of gitweb&rsquo;s &quot;breadcrumb trail&quot;:\n<b>&lt;home link&gt; / &lt;project&gt; / &lt;action&gt;</b>.\nCan be set at build time using the\n<b>GITWEB_HOME_LINK_STR</b> variable. By default it is set\nto &quot;projects&quot;, as this link leads to the list of\nprojects. Another popular choice is to set it to the name of\nsite. Note that it is treated as raw HTML so it should not\nbe set from untrusted sources.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">@extra_breadcrumbs</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Additional\nlinks to be added to the start of the breadcrumb trail\nbefore the home link, to pages that are logically\n&quot;above&quot; the gitweb projects list, such as the\norganization and department which host the gitweb server.\nEach element of the list is a reference to an array, in\nwhich element 0 is the link text (equivalent to\n<b>$home_link_str</b>) and element 1 is the target URL\n(equivalent to <b>$home_link</b>).</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">For\nexample, the following setting produces a breadcrumb trail\nlike &quot;home / dev / projects / ...&quot; where\n&quot;projects&quot; is the home link.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">our\n@extra_breadcrumbs = ( <br>\n[ 'home' =&gt; 'https://www.example.org/' ], <br>\n[ 'dev' =&gt; 'https://dev.example.org/' ], <br>\n);</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$logo_url,\n$logo_label</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">URI and\nlabel (title) for the Git logo link (or your site logo, if\nyou chose to use different logo image). By default, these\nboth refer to Git homepage,</font>\n<b><font color=\"#0000FF\">https://git-scm.com</font></b><font color=\"#000000\">;\nin the past, they pointed to Git documentation at</font>\n<b><font color=\"#0000FF\">https://www.kernel.org</font></b><font color=\"#000000\">.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>Changing\ngitweb&rsquo;s look</b> <br>\nYou can adjust how pages generated by gitweb look using the\nvariables described below. You can change the site name, add\ncommon headers and footers for all pages, and add a\ndescription of this gitweb installation on its main page\n(which is the projects list page), etc.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$site_name</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Name of\nyour site or organization, to appear in page titles. Set it\nto something descriptive for clearer bookmarks etc. If this\nvariable is not set or is, then gitweb uses the value of the\n<b>SERVER_NAME CGI</b> environment variable, setting site\nname to &quot;$SERVER_NAME Git&quot;, or &quot;Untitled\nGit&quot; if this variable is not set (e.g. if running\ngitweb as standalone script).</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Can\nbe set using the <b>GITWEB_SITENAME</b> at build time. Unset\nby default.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$site_html_head_string</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">HTML\nsnippet to be included in the &lt;head&gt; section of each\npage. Can be set using <b>GITWEB_SITE_HTML_HEAD_STRING</b>\nat build time. No default value.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$site_header</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Name of a\nfile with HTML to be included at the top of each page.\nRelative to the directory containing the <i>gitweb.cgi</i>\nscript. Can be set using <b>GITWEB_SITE_HEADER</b> at build\ntime. No default value.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$site_footer</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Name of a\nfile with HTML to be included at the bottom of each page.\nRelative to the directory containing the <i>gitweb.cgi</i>\nscript. Can be set using <b>GITWEB_SITE_FOOTER</b> at build\ntime. No default value.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$home_text</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Name of a\nHTML file which, if it exists, is included on the gitweb\nprojects overview page (&quot;projects_list&quot; view).\nRelative to the directory containing the gitweb.cgi script.\nDefault value can be adjusted during build time using\n<b>GITWEB_HOMETEXT</b> variable. By default set to\n<i>indextext.html</i>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$projects_list_description_width</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The width\n(in characters) of the &quot;Description&quot; column of the\nprojects list. Longer descriptions will be truncated (trying\nto cut at word boundary); the full description is available\nin the <i>title</i> attribute (usually shown on mouseover).\nThe default is 25, which might be too small if you use long\nproject descriptions.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$default_projects_order</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Default\nvalue of ordering of projects on projects list page, which\nmeans the ordering used if you don&rsquo;t explicitly sort\nprojects list (if there is no &quot;o&quot; CGI query\nparameter in the URL). Valid values are &quot;none&quot;\n(unsorted), &quot;project&quot; (projects are by project\nname, i.e. path to repository relative to\n<b>$projectroot</b>), &quot;descr&quot; (project\ndescription), &quot;owner&quot;, and &quot;age&quot; (by\ndate of most current commit).</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Default\nvalue is &quot;project&quot;. Unknown value means\nunsorted.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>Changing\ngitweb&rsquo;s behavior</b> <br>\nThese configuration variables control <i>internal</i> gitweb\nbehavior.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$default_blob_plain_mimetype</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Default\nmimetype for the blob_plain (raw) view, if mimetype checking\ndoesn&rsquo;t result in some other type; by default\n&quot;text/plain&quot;. Gitweb guesses mimetype of a file to\ndisplay based on extension of its filename, using\n<b>$mimetypes_file</b> (if set and file exists) and\n<b>/etc/mime.types</b> files (see <b>mime.types</b>(5)\nmanpage; only filename extension rules are supported by\ngitweb).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$default_text_plain_charset</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Default\ncharset for text files. If this is not set, the web server\nconfiguration will be used. Unset by default.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$fallback_encoding</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Gitweb\nassumes this charset when a line contains non-UTF-8\ncharacters. The fallback decoding is used without error\nchecking, so it can be even &quot;utf-8&quot;. The value\nmust be a valid encoding; see the\n<b>Encoding::Supported</b>(3pm) man page for a list. The\ndefault is &quot;latin1&quot;, aka.\n&quot;iso-8859-1&quot;.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">@diff_opts</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Rename\ndetection options for git-diff and git-diff-tree. The\ndefault is ('-M'); set it to ('-C') or ('-C', '-C') to also\ndetect copies, or set it to () i.e. empty list if you\ndon&rsquo;t want to have renames detection.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\"><b>Note</b>\nthat rename and especially copy detection can be quite\nCPU-intensive. Note also that non Git tools can have\nproblems with patches generated with options mentioned\nabove, especially when they involve file copies ('-C') or\ncriss-cross renames ('-B').</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>Some\noptional features and policies</b> <br>\nMost of features are configured via <b>%feature</b> hash;\nhowever some of extra gitweb features can be turned on and\nconfigured using variables described below. This list beside\nconfiguration variables that control how gitweb looks does\ncontain variables configuring administrative side of gitweb\n(e.g. cross-site scripting prevention; admittedly this as\nside effect affects how &quot;summary&quot; pages look like,\nor load limiting).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">@git_base_url_list</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">List of\nGit base URLs. These URLs are used to generate URLs\ndescribing from where to fetch a project, which are shown on\nproject summary page. The full fetch URL is\n&quot;<b>$git_base_url/$project</b>&quot;, for each element\nof this list. You can set up multiple base URLs (for example\none for <b>git://</b> protocol, and one for <b>http://</b>\nprotocol).</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Note\nthat per repository configuration can be set in\n<b>$GIT_DIR/cloneurl</b> file, or as values of multi-value\n<b>gitweb.url</b> configuration variable in project config.\nPer-repository configuration takes precedence over value\ncomposed from <b>@git_base_url_list</b> elements and project\nname.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">You\ncan setup one single value (single entry/item in this list)\nat build time by setting the <b>GITWEB_BASE_URL</b>\nbuild-time configuration variable. By default it is set to\n(), i.e. an empty list. This means that gitweb would not try\nto create project URL (to fetch) from project\nname.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$projects_list_group_categories</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Whether\nto enable the grouping of projects by category on the\nproject list page. The category of a project is determined\nby the <b>$GIT_DIR/category</b> file or the\n<b>gitweb.category</b> variable in each repository&rsquo;s\nconfiguration. Disabled by default (set to 0).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$project_list_default_category</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Default\ncategory for projects for which none is specified. If this\nis set to the empty string, such projects will remain\nuncategorized and listed at the top, above categorized\nprojects. Used only if project categories are enabled, which\nmeans if <b>$projects_list_group_categories</b> is true. By\ndefault set to &quot;&quot; (empty string).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$prevent_xss</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If true,\nsome gitweb features are disabled to prevent content in\nrepositories from launching cross-site scripting (XSS)\nattacks. Set this to true if you don&rsquo;t trust the\ncontent of your repositories. False by default (set to\n0).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$maxload</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Used to\nset the maximum load that we will still respond to gitweb\nqueries. If the server load exceeds this value then gitweb\nwill return &quot;503 Service Unavailable&quot; error. The\nserver load is taken to be 0 if gitweb cannot determine its\nvalue. Currently it works only on Linux, where it uses\n<b>/proc/loadavg</b>; the load there is the number of active\ntasks on the system &mdash; processes that are actually\nrunning &mdash; averaged over the last minute.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Set\n<b>$maxload</b> to undefined value (<b>undef</b>) to turn\nthis feature off. The default value is 300.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$omit_age_column</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If true,\nomit the column with date of the most current commit on the\nprojects list page. It can save a bit of I/O and a fork per\nrepository.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$omit_owner</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If true\nprevents displaying information about repository\nowner.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$per_request_config</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If this\nis set to code reference, it will be run once for each\nrequest. You can set parts of configuration that change per\nsession this way. For example, one might use the following\ncode in a gitweb configuration file</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">our\n$per_request_config = sub { <br>\n$ENV{GL_USER} = $cgi-&gt;remote_user || &quot;gitweb&quot;;\n<br>\n};</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">If\n<b>$per_request_config</b> is not a code reference, it is\ninterpreted as boolean value. If it is true gitweb will\nprocess config files once per request, and if it is false\ngitweb will process config files only once, each time it is\nexecuted. True by default (set to 1).</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\"><b>NOTE</b>:\n<b>$my_url</b>, <b>$my_uri</b>, and <b>$base_url</b> are\noverwritten with their default values before every request,\nso if you want to change them, be sure to set this variable\nto true or a code reference effecting the desired\nchanges.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nvariable matters only when using persistent web environments\nthat serve multiple requests using single gitweb instance,\nlike mod_perl, FastCGI or Plackup.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>Other\nvariables</b> <br>\nUsually you should not need to change (adjust) any of\nconfiguration variables described below; they should be\nautomatically set by gitweb to correct value.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$version</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Gitweb\nversion, set automatically when creating gitweb.cgi from\ngitweb.perl. You might want to modify it if you are running\nmodified gitweb, for example</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">our\n$version .= &quot; with caching&quot;;</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">if\nyou run modified version of gitweb with caching support.\nThis variable is purely informational, used e.g. in the\n&quot;generator&quot; meta header in HTML header.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$my_url,\n$my_uri</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Full URL\nand absolute URL of the gitweb script; in earlier versions\nof gitweb you might have need to set those variables, but\nnow there should be no need to do it. See\n<b>$per_request_config</b> if you need to set them\nstill.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">$base_url</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Base URL\nfor relative URLs in pages generated by gitweb, (e.g.\n<b>$logo</b>, <b>$favicon</b>, <b>@stylesheets</b> if they\nare relative URLs), needed and used <i>&lt;base\nhref=&quot;$base_url&quot;&gt;</i> only for URLs with\nnonempty PATH_INFO. Usually gitweb sets its value correctly,\nand there is no need to set this variable, e.g. to $my_uri\nor &quot;/&quot;. See <b>$per_request_config</b> if you need\nto override it anyway.</font></p>\n\n<h2>CONFIGURING GITWEB FEATURES\n<a name=\"CONFIGURING GITWEB FEATURES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">Many\ngitweb features can be enabled (or disabled) and configured\nusing the <b>%feature</b> hash. Names of gitweb features are\nkeys of this hash.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">Each\n<b>%feature</b> hash element is a hash reference and has the\nfollowing structure:</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">&quot;&lt;feature_name&gt;&quot;\n=&gt; { <br>\n&quot;sub&quot; =&gt; &lt;feature-sub (subroutine)&gt;, <br>\n&quot;override&quot; =&gt; &lt;allow-override (boolean)&gt;,\n<br>\n&quot;default&quot; =&gt; [ &lt;options&gt;... ] <br>\n},</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">Some\nfeatures cannot be overridden per project. For those\nfeatures the structure of appropriate <b>%feature</b> hash\nelement has a simpler form:</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">&quot;&lt;feature_name&gt;&quot;\n=&gt; { <br>\n&quot;override&quot; =&gt; 0, <br>\n&quot;default&quot; =&gt; [ &lt;options&gt;... ] <br>\n},</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">As\none can see it lacks the 'sub' element.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">The\nmeaning of each part of feature configuration is described\nbelow:</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">default</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">List\n(array reference) of feature parameters (if there are any),\nused also to toggle (enable or disable) given\nfeature.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Note\nthat it is currently <b>always</b> an array reference, even\nif feature doesn&rsquo;t accept any configuration\nparameters, and 'default' is used only to turn it on or off.\nIn such case you turn feature on by setting this element to\n<b>[1]</b>, and torn it off by setting it to <b>[0]</b>. See\nalso the passage about the &quot;blame&quot; feature in the\n&quot;Examples&quot; section.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">To\ndisable features that accept parameters (are configurable),\nyou need to set this element to empty list i.e.\n<b>[]</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">override</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If this\nfield has a true value then the given feature is\noverridable, which means that it can be configured (or\nenabled/disabled) on a per-repository basis.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Usually\ngiven &quot;&lt;feature&gt;&quot; is configurable via the\n<b>gitweb.&lt;feature&gt;</b> config variable in the\nper-repository Git configuration file.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\"><b>Note</b>\nthat no feature is overridable by default.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">sub</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Internal\ndetail of implementation. What is important is that if this\nfield is not present then per-repository override for given\nfeature is not supported.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">You\nwouldn&rsquo;t need to ever change it in gitweb config\nfile.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>Features\nin %feature</b> <br>\nThe gitweb features that are configurable via\n<b>%feature</b> hash are listed below. This should be a\ncomplete list, but ultimately the authoritative and complete\nlist is in gitweb.cgi source code, with features described\nin the comments.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">blame</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Enable\nthe &quot;blame&quot; and &quot;blame_incremental&quot; blob\nviews, showing for each line the last commit that modified\nit; see <a href=\"https://man.page/1/git-blame\">git-blame(1)</a>. This can be very CPU-intensive\nand is therefore disabled by default.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nfeature can be configured on a per-repository basis via\nrepository&rsquo;s <b>gitweb.blame</b> configuration\nvariable (boolean).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">snapshot</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Enable\nand configure the &quot;snapshot&quot; action, which allows\nuser to download a compressed archive of any tree or commit,\nas produced by <a href=\"https://man.page/1/git-archive\">git-archive(1)</a> and possibly\nadditionally compressed. This can potentially generate high\ntraffic if you have large project.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">The\nvalue of 'default' is a list of names of snapshot formats,\ndefined in <b>%known_snapshot_formats</b> hash, that you\nwish to offer. Supported formats include &quot;tgz&quot;,\n&quot;tbz2&quot;, &quot;txz&quot; (gzip/bzip2/xz compressed\ntar archive) and &quot;zip&quot;; please consult gitweb\nsources for a definitive list. By default only\n&quot;tgz&quot; is offered.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nfeature can be configured on a per-repository basis via\nrepository&rsquo;s <b>gitweb.snapshot</b> configuration\nvariable, which contains a comma separated list of formats\nor &quot;none&quot; to disable snapshots. Unknown values are\nignored.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">grep</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Enable\ngrep search, which lists the files in currently selected\ntree (directory) containing the given string; see\n<a href=\"https://man.page/1/git-grep\">git-grep(1)</a>. This can be potentially CPU-intensive,\nof course. Enabled by default.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nfeature can be configured on a per-repository basis via\nrepository&rsquo;s <b>gitweb.grep</b> configuration variable\n(boolean).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">pickaxe</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Enable\nthe so called pickaxe search, which will list the commits\nthat introduced or removed a given string in a file. This\ncan be practical and quite faster alternative to\n&quot;blame&quot; action, but it is still potentially\nCPU-intensive. Enabled by default.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">The\npickaxe search is described in <a href=\"https://man.page/1/git-log\">git-log(1)</a> (the\ndescription of <b>-S&lt;string&gt;</b> option, which refers\nto pickaxe entry in <a href=\"https://man.page/7/gitdiffcore\">gitdiffcore(7)</a> for more\ndetails).</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nfeature can be configured on a per-repository basis by\nsetting repository&rsquo;s <b>gitweb.pickaxe</b>\nconfiguration variable (boolean).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">show-sizes</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Enable\nshowing size of blobs (ordinary files) in a &quot;tree&quot;\nview, in a separate column, similar to what <b>ls -l</b>\ndoes; see description of <b>-l</b> option in\n<a href=\"https://man.page/1/git-ls-tree\">git-ls-tree(1)</a> manpage. This costs a bit of I/O.\nEnabled by default.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nfeature can be configured on a per-repository basis via\nrepository&rsquo;s <b>gitweb.showSizes</b> configuration\nvariable (boolean).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">patches</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Enable\nand configure &quot;patches&quot; view, which displays list\nof commits in email (plain text) output format; see also\n<a href=\"https://man.page/1/git-format-patch\">git-format-patch(1)</a>. The value is the maximum number\nof patches in a patchset generated in &quot;patches&quot;\nview. Set the <i>default</i> field to a list containing\nsingle item of or to an empty list to disable patch view, or\nto a list containing a single negative number to remove any\nlimit. Default value is 16.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nfeature can be configured on a per-repository basis via\nrepository&rsquo;s <b>gitweb.patches</b> configuration\nvariable (integer).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">avatar</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Avatar\nsupport. When this feature is enabled, views such as\n&quot;shortlog&quot; or &quot;commit&quot; will display an\navatar associated with the email of each committer and\nauthor.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Currently\navailable providers are <b>&quot;gravatar&quot;</b> and\n<b>&quot;picon&quot;</b>. Only one provider at a time can be\nselected (<i>default</i> is one element list). If an unknown\nprovider is specified, the feature is disabled. <b>Note</b>\nthat some providers might require extra Perl packages to be\ninstalled; see <b>gitweb/INSTALL</b> for more\ndetails.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nfeature can be configured on a per-repository basis via\nrepository&rsquo;s <b>gitweb.avatar</b> configuration\nvariable.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">See\nalso <b>%avatar_size</b> with pixel sizes for icons and\navatars (&quot;default&quot; is used for one-line like\n&quot;log&quot; and &quot;shortlog&quot;, &quot;double&quot;\nis used for two-line like &quot;commit&quot;,\n&quot;commitdiff&quot; or &quot;tag&quot;). If the default\nfont sizes or lineheights are changed (e.g. via adding extra\nCSS stylesheet in <b>@stylesheets</b>), it may be\nappropriate to change these values.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">email-privacy</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Redact\ne-mail addresses from the generated HTML, etc. content. This\nobscures e-mail addresses retrieved from the\nauthor/committer and comment sections of the Git log. It is\nmeant to hinder web crawlers that harvest and abuse\naddresses. Such crawlers may not respect robots.txt. Note\nthat users and user tools also see the addresses as\nredacted. If Gitweb is not the final step in a workflow then\nsubsequent steps may misbehave because of the redacted\ninformation they receive. Disabled by default.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">highlight</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Server-side\nsyntax highlight support in &quot;blob&quot; view. It\nrequires <b>$highlight_bin</b> program to be available (see\nthe description of this variable in the &quot;Configuration\nvariables&quot; section above), and therefore is disabled by\ndefault.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nfeature can be configured on a per-repository basis via\nrepository&rsquo;s <b>gitweb.highlight</b> configuration\nvariable (boolean).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote_heads</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Enable\ndisplaying remote heads (remote-tracking branches) in the\n&quot;heads&quot; list. In most cases the list of\nremote-tracking branches is an unnecessary internal private\ndetail, and this feature is therefore disabled by default.\n<a href=\"https://man.page/1/git-instaweb\">git-instaweb(1)</a>, which is usually used to browse\nlocal repositories, enables and uses this\nfeature.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nfeature can be configured on a per-repository basis via\nrepository&rsquo;s <b>gitweb.remote_heads</b> configuration\nvariable (boolean).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">The\nremaining features cannot be overridden on a per project\nbasis.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">search</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Enable\ntext search, which will list the commits which match author,\ncommitter or commit text to a given string; see the\ndescription of <b>--author</b>, <b>--committer</b> and\n<b>--grep</b> options in <a href=\"https://man.page/1/git-log\">git-log(1)</a> manpage. Enabled\nby default.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Project\nspecific override is not supported.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">forks</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">If this\nfeature is enabled, gitweb considers projects in\nsubdirectories of project root (basename) to be forks of\nexisting projects. For each project <b>$projname.git</b>,\nprojects in the <b>$projname/</b> directory and its\nsubdirectories will not be shown in the main projects list.\nInstead, a '+' mark is shown next to <b>$projname</b>, which\nlinks to a &quot;forks&quot; view that lists all the forks\n(all projects in <b>$projname/</b> subdirectory).\nAdditionally a &quot;forks&quot; view for a project is\nlinked from project summary page.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">If\nthe project list is taken from a file (<b>$projects_list</b>\npoints to a file), forks are only recognized if they are\nlisted after the main project in that file.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Project\nspecific override is not supported.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">actions</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Insert\ncustom links to the action bar of all project pages. This\nallows you to link to third-party scripts integrating into\ngitweb.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">The\n&quot;default&quot; value consists of a list of triplets in\nthe form &rsquo;(&quot;&lt;label&gt;&quot;,\n&quot;&lt;link&gt;&quot;,\n&quot;&lt;position&gt;&quot;)&rsquo; where\n&quot;position&quot; is the label after which to insert the\nlink, &quot;link&quot; is a format string where <b>%n</b>\nexpands to the project name, <b>%f</b> to the project path\nwithin the filesystem (i.e.\n&quot;$projectroot/$project&quot;), <b>%h</b> to the current\nhash ('h&rsquo; gitweb parameter) and &rsquo;%b&rsquo; to\nthe current hash base ('hb&rsquo; gitweb parameter);\n&rsquo;%%&rsquo; expands to '%&rsquo;.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">For\nexample, at the time this page was written, the</font>\n<b><font color=\"#0000FF\">http://repo.or.cz</font></b>\n<font color=\"#000000\">Git hosting site set it to the\nfollowing to enable graphical log (using the third party\ntool <b>git-browser</b>):</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">$feature{'actions'}{'default'}\n= <br>\n[ ('graphiclog', '/git-browser/by-commit.html?r=%n',\n'summary')];</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nadds a link titled &quot;graphiclog&quot; after the\n&quot;summary&quot; link, leading to <b>git-browser</b>\nscript, passing <b>r=&lt;project&gt;</b> as a query\nparameter.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Project\nspecific override is not supported.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">timed</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Enable\ndisplaying how much time and how many Git commands it took\nto generate and display each page in the page footer (at the\nbottom of page). For example the footer might contain:\n&quot;This page took 6.53325 seconds and 13 Git commands to\ngenerate.&quot; Disabled by default.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Project\nspecific override is not supported.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">javascript-timezone</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Enable\nand configure the ability to change a common time zone for\ndates in gitweb output via JavaScript. Dates in gitweb\noutput include authordate and committerdate in\n&quot;commit&quot;, &quot;commitdiff&quot; and\n&quot;log&quot; views, and taggerdate in &quot;tag&quot;\nview. Enabled by default.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">The\nvalue is a list of three values: a default time zone (for if\nthe client hasn&rsquo;t selected some other time zone and\nsaved it in a cookie), a name of cookie where to store\nselected time zone, and a CSS class used to mark up dates\nfor manipulation. If you want to turn this feature off, set\n&quot;default&quot; to empty list: <b>[]</b>.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Typical\ngitweb config files will only change starting (default) time\nzone, and leave other elements at their default\nvalues:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">$feature{'javascript-timezone'}{'default'}[0]\n= &quot;utc&quot;;</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">The\nexample configuration presented here is guaranteed to be\nbackwards and forward compatible.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Time\nzone values can be &quot;local&quot; (for local time zone\nthat browser uses), &quot;utc&quot; (what gitweb uses when\nJavaScript or this feature is disabled), or numerical time\nzones in the form of &quot;+/-HHMM&quot;, such as\n&quot;+0200&quot;.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Project\nspecific override is not supported.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">extra-branch-refs</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">List of\nadditional directories under &quot;refs&quot; which are\ngoing to be used as branch refs. For example if you have a\ngerrit setup where all branches under refs/heads/ are\nofficial, push-after-review ones and branches under\nrefs/sandbox/, refs/wip and refs/other are user ones where\npermissions are much wider, then you might want to set this\nvariable as follows:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">$feature{'extra-branch-refs'}{'default'}\n= <br>\n['sandbox', 'wip', 'other'];</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nfeature can be configured on per-repository basis after\nsetting $feature{<i>extra-branch-refs</i>}{<i>override</i>}\nto true, via repository&rsquo;s\n<b>gitweb.extraBranchRefs</b> configuration variable, which\ncontains a space separated list of refs. An\nexample:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">[gitweb]\n<br>\nextraBranchRefs = sandbox wip other</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">The\ngitweb.extraBranchRefs is actually a multi-valued\nconfiguration variable, so following example is also correct\nand the result is the same as of the snippet\nabove:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">[gitweb]\n<br>\nextraBranchRefs = sandbox <br>\nextraBranchRefs = wip other</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">It\nis an error to specify a ref that does not pass &quot;git\ncheck-ref-format&quot; scrutiny. Duplicated values are\nfiltered.</font></p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">To\nenable blame, pickaxe search, and snapshot support (allowing\n&quot;tar.gz&quot; and &quot;zip&quot; snapshots), while\nallowing individual projects to turn them off, put the\nfollowing in your GITWEB_CONFIG file:</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">$feature{'blame'}{'default'}\n= [1]; <br>\n$feature{'blame'}{'override'} = 1;</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">$feature{'pickaxe'}{'default'}\n= [1]; <br>\n$feature{'pickaxe'}{'override'} = 1;</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">$feature{'snapshot'}{'default'}\n= ['zip', 'tgz']; <br>\n$feature{'snapshot'}{'override'} = 1;</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">If\nyou allow overriding for the snapshot feature, you can\nspecify which snapshot formats are globally disabled. You\ncan also add any command-line options you want (such as\nsetting the compression level). For instance, you can\ndisable Zip compressed snapshots and set <a href=\"https://man.page/1/gzip\">gzip(1)</a> to\nrun at level 6 by adding the following lines to your gitweb\nconfiguration file:</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">$known_snapshot_formats{'zip'}{'disabled'}\n= 1; <br>\n$known_snapshot_formats{'tgz'}{'compressor'} =\n['gzip','-6'];</font></p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">Debugging\nwould be easier if the fallback configuration file\n(<b>/etc/gitweb.conf</b>) and environment variable to\noverride its location (<i>GITWEB_CONFIG_SYSTEM</i>) had\nnames reflecting their &quot;fallback&quot; role. The\ncurrent names are kept to avoid breaking working\nsetups.</font></p>\n\n<h2>ENVIRONMENT\n<a name=\"ENVIRONMENT\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">The\nlocation of per-instance and system-wide configuration files\ncan be overridden using the following environment\nvariables:</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">GITWEB_CONFIG</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Sets\nlocation of per-instance configuration file.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">GITWEB_CONFIG_SYSTEM</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Sets\nlocation of fallback system-wide configuration file. This\nfile is read only if per-instance one does not\nexist.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">GITWEB_CONFIG_COMMON</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Sets\nlocation of common system-wide configuration\nfile.</font></p>\n\n<h2>FILES\n<a name=\"FILES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">gitweb_config.perl</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This is\ndefault name of per-instance configuration file. The format\nof this file is described above.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">/etc/gitweb.conf</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This is\ndefault name of fallback system-wide configuration file.\nThis file is used only if per-instance configuration\nvariable is not found.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">/etc/gitweb-common.conf</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This is\ndefault name of common system-wide configuration\nfile.</font></p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><a href=\"https://man.page/1/gitweb\">gitweb(1)</a>,\n<a href=\"https://man.page/1/git-instaweb\">git-instaweb(1)</a></font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>gitweb/README</i>,\n<i>gitweb/INSTALL</i></font></p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">Part\nof the <a href=\"https://man.page/1/git\">git(1)</a> suite</font></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#DISCUSSION\">DISCUSSION</a>","<a href=\"#CONFIGURATION VARIABLES\">CONFIGURATION VARIABLES</a>","<a href=\"#CONFIGURING GITWEB FEATURES\">CONFIGURING GITWEB FEATURES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#ENVIRONMENT\">ENVIRONMENT</a>","<a href=\"#FILES\">FILES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#GIT\">GIT</a>"],"level":5}