{"name":"environment.d","description":"environment.d - Definition of user service environment","body":"\n\n<h1 align=\"center\">ENVIRONMENT.D</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">environment.d -\nDefinition of user service environment</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">~/.config/environment.d/*.conf</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">/etc/environment.d/*.conf</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">/run/environment.d/*.conf</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">/usr/lib/environment.d/*.conf</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">/etc/environment</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Configuration\nfiles in the environment.d/ directories contain lists of\nenvironment variable assignments for services started by the\nsystemd user instance.\n<b>systemd-environment-d-generator</b>(8) parses them and\nupdates the environment exported by the systemd user\ninstance. See below for an discussion of which processes\ninherit those variables.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It is\nrecommended to use numerical prefixes for file names to\nsimplify ordering.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For backwards\ncompatibility, a symlink to /etc/environment is installed,\nso this file is also parsed.</p>\n\n<h2>CONFIGURATION DIRECTORIES AND PRECEDENCE\n<a name=\"CONFIGURATION DIRECTORIES AND PRECEDENCE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Configuration\nfiles are read from directories in /etc/, /run/,\n/usr/local/lib/, and /lib/, in order of precedence, as\nlisted in the SYNOPSIS section above. Files must have the\n&quot;.conf&quot; extension. Files in /etc/ override files\nwith the same name in /run/, /usr/local/lib/, and /lib/.\nFiles in /run/ override files with the same name under\n/usr/.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All\nconfiguration files are sorted by their filename in\nlexicographic order, regardless of which of the directories\nthey reside in. If multiple files specify the same option,\nthe entry in the file with the lexicographically latest name\nwill take precedence. Thus, the configuration in a certain\nfile may either be replaced completely (by placing a file\nwith the same name in a directory with higher priority), or\nindividual settings might be changed (by specifying\nadditional settings in a file with a different name that is\nordered later).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Packages should\ninstall their configuration files in /usr/lib/ (distribution\npackages) or /usr/local/lib/ (local installs). Files in\n/etc/ are reserved for the local administrator, who may use\nthis logic to override the configuration files installed by\nvendor packages. It is recommended to prefix all filenames\nwith a two-digit number and a dash, to simplify the ordering\nof the files.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\nadministrator wants to disable a configuration file supplied\nby the vendor, the recommended way is to place a symlink to\n/dev/null in the configuration directory in /etc/, with the\nsame filename as the vendor configuration file. If the\nvendor configuration file is included in the initrd image,\nthe image has to be regenerated.</p>\n\n<h2>CONFIGURATION FORMAT\n<a name=\"CONFIGURATION FORMAT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nconfiguration files contain a list of\n&quot;<i>KEY</i>=<i>VALUE</i>&quot; environment variable\nassignments, separated by newlines. The right hand side of\nthese assignments may reference previously defined\nenvironment variables, using the &quot;${OTHER_KEY}&quot;\nand &quot;$OTHER_KEY&quot; format. It is also possible to\nuse &quot;${<i>FOO</i>:-<i>DEFAULT_VALUE</i>}&quot; to\nexpand in the same way as &quot;${<i>FOO</i>}&quot; unless\nthe expansion would be empty, in which case it expands to\n<i>DEFAULT_VALUE</i>, and use\n&quot;${<i>FOO</i>:+<i>ALTERNATE_VALUE</i>}&quot; to expand\nto <i>ALTERNATE_VALUE</i> as long as\n&quot;${<i>FOO</i>}&quot; would have expanded to a non-empty\nvalue. No other elements of shell syntax are supported.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Each <i>KEY</i>\nmust be a valid variable name. Empty lines and lines\nbeginning with the comment character &quot;#&quot; are\nignored.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Example <br>\nExample&nbsp;1.&nbsp;Setup environment to allow access to a\nprogram installed in /opt/foo</b></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">/etc/environment.d/60-foo.conf:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">FOO_DEBUG=force-software-gl,log-verbose\n<br>\nPATH=/opt/foo/bin:$PATH <br>\n\nLD_LIBRARY_PATH=/opt/foo/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}\n<br>\n\nXDG_DATA_DIRS=/opt/foo/share:${XDG_DATA_DIRS:-/usr/local/share/:/usr/share/}</p>\n\n<h2>APPLICABILITY\n<a name=\"APPLICABILITY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Environment\nvariables exported by the user manager (<b>systemd\n--user</b> instance started in the user@<i>uid</i>.service\nsystem service) apply to any services started by that\nmanager. In particular, this may include services which run\nuser shells. For example in the GNOME environment, the\ngraphical terminal emulator runs as the\ngnome-terminal-server.service user unit, which in turn runs\nthe user shell, so that shell will inherit environment\nvariables exported by the user manager. For other instances\nof the shell, not launched by the user manager, the\nenvironment they inherit is defined by the program that\nstarts them. Hint: in general, <b>systemd.service</b>(5)\nunits contain programs launched by systemd, and\n<b>systemd.scope</b>(5) units contain programs launched by\nsomething else.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Specifically,\nfor ssh logins, the <b>sshd</b>(8) service builds an\nenvironment that is a combination of variables forwarded\nfrom the remote system and defined by <b>sshd</b>, see the\ndiscussion in <a href=\"https://man.page/1/ssh\">ssh(1)</a>. A graphical display session\nwill have an analogous mechanism to define the environment.\nNote that some managers query the systemd user instance for\nthe exported environment and inject this configuration into\nprograms they start, using <b>systemctl show-environment</b>\nor the underlying D-Bus call.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/systemd\">systemd(1)</a>,\n<b>systemd-environment-d-generator</b>(8),\n<b>systemd.environment-generator</b>(7)</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#CONFIGURATION DIRECTORIES AND PRECEDENCE\">CONFIGURATION DIRECTORIES AND PRECEDENCE</a>","<a href=\"#CONFIGURATION FORMAT\">CONFIGURATION FORMAT</a>","<a href=\"#APPLICABILITY\">APPLICABILITY</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"],"level":5}