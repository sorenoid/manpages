{"name":"sane-canon_pp","body":"\n\n<h1 align=\"center\">sane-canon_pp</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">sane-canon_pp -\nSANE backend for Canon CanoScan Parallel Port flatbed\nscanners</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>sane-canon_pp</b> library implements a SANE (Scanner\nAccess Now Easy) backend that provides access to the\nfollowing Canon flatbed scanners:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">CanoScan FB320P\n<br>\nCanoScan FB620P <br>\nCanoScan FB330P <br>\nCanoScan FB630P <br>\nCanoScan N340P <br>\nCanoScan N640P <br>\nCanoScan N640P ex</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">No USB scanners\nare supported and there are no plans to support them in the\nfuture. Other projects are working on support for USB\nscanners. See the <i>PROJECTS</i> file for more detail. The\nFB310P and FB610P are re-badged Avision scanners which use a\ndifferent command set, so are unlikely to be supported by\nthis backend in the future.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">IMPORTANT: this\nis alpha code. While we have made every effort to make it as\nreliable as possible, it will not always work as expected.\nFeedback is still appreciated. Please send any bug reports\nto the maintainers as listed on the web page (listed in\n<b>SEE ALSO</b> below).</p>\n\n<h2>DEVICE NAMES\n<a name=\"DEVICE NAMES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This backend\nexpects device names of the form presented by\n<a href=\"https://man.page/3/libieee1284\">libieee1284(3)</a>. These names are highly dependent on\noperating system and version.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On Linux 2.4\nkernels this will be of the form <i>parport0</i> or older\n(2.2 and before) kernels may produce names like <i>0x378</i>\n(the base address of your port) or simply <i>0</i> depending\non your module configuration. Check the contents of\n<i>/proc/parport</i> if it exists. If you don&rsquo;t want\nto specify a default port (or don&rsquo;t know its name),\nthe backend should be able to detect which port your scanner\nis on.</p>\n\n<h2>CONFIGURATION\n<a name=\"CONFIGURATION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The contents of\nthe <i>canon_pp.conf</i> file is a list of options for the\ndriver to use. Empty lines and lines starting with a hash\nmark (#) are ignored.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The supported\noptions are currently <b>ieee1284</b>, <b>calibrate</b>,\n<b>init_mode</b>, and <b>force_nibble</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Option\n<b>ieee1284</b> <i>port-name</i> defines which port to use.\nThe format of port-name is OS dependent, based on the names\npresented by libieee1284. Please only have one of these\nlines, or all but one will be ignored.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Option\n<b>calibrate</b> <i>cal-file [port-name]</i> defines which\ncalibration file to use on a per-port basis. If you only\nhave one parport, the port-name argument may be omitted -\nbut be careful as this will cause problems on multi-scanner\nsystems. You may have as many of these lines as you like, as\nlong as each has a unique port name. The tilde\n(&rsquo;~&rsquo;) character is acceptable and will be\nexpanded to the value of the HOME environment.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Option\n<b>init_mode</b> <i>&lt;AUTO|FB620P|FB630P&gt;\n[portname]</i> defines which initialisation (wake-up) mode\nto use on a per-port basis. If you only have one parport,\nthe portname argument may be omitted - but be careful as\nthis may cause problems on multi-scanner systems. You may\nhave as many of these lines as you like, as long as each has\na unique port name. The valid initialisation modes are\nFB620P (which strobes 10101010 and 01010101 on the data\npins), FB630P (which strobes 11001100 and 00110011 on the\ndata pins) and AUTO, which will try FB630P mode first then\nFB620P mode second. The FB620P mode is also used by the\nFB320P. The FB630P mode is used by the FB330P, N340P, and\nN640P.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Option\n<b>force_nibble</b> forces the driver to use nibble mode\neven if ECP mode is reported to work by libieee1284. This\nworks-around the rare issue of ECP mode being reported to\nwork by the library, then not working.</p>\n\n<h2>TIPS\n<a name=\"TIPS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Hit the\n&quot;Calibrate&quot; button before scanning. It vastly\nimproves the quality of scans.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To enable\nautomatic detection of your scanner, uncomment the\n&quot;canon_pp&quot; line from\n<i>/etc/sane.d/dll.conf</i></p>\n\n<h2>FILES\n<a name=\"FILES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>/etc/sane.d/canon_pp.conf</i></p>\n\n<p style=\"margin-left:22%;\">The backend configuration file\n(see also description of <b>SANE_CONFIG_DIR</b> below).</p>\n\n\n<p style=\"margin-left:11%;\"><i>/usr/lib/x86_64-linux-gnu/sane/libsane-canon_pp.a</i></p>\n\n<p style=\"margin-left:22%;\">The static library implementing\nthis backend.</p>\n\n\n<p style=\"margin-left:11%;\"><i>/usr/lib/x86_64-linux-gnu/sane/libsane-canon_pp.so</i></p>\n\n<p style=\"margin-left:22%;\">The shared library implementing\nthis backend (present on systems that support dynamic\nloading).</p>\n\n<h2>ENVIRONMENT\n<a name=\"ENVIRONMENT\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>SANE_CONFIG_DIR</b></p>\n\n<p style=\"margin-left:22%;\">This environment variable\nspecifies the list of directories that may contain the\nconfiguration file. On *NIX systems, the directories are\nseparated by a colon (&rsquo;:&rsquo;), under OS/2, they are\nseparated by a semi-colon (&rsquo;;&rsquo;). If this\nvariable is not set, the configuration file is searched in\ntwo default directories: first, the current working\ndirectory (&quot;.&quot;) and then in <i>/etc/sane.d</i>. If\nthe value of the environment variable ends with the\ndirectory separator character, then the default directories\nare searched after the explicitly specified directories. For\nexample, setting <b>SANE_CONFIG_DIR</b> to\n&quot;/tmp/config:&quot; would result in directories\n<i>tmp/config</i>, <i>.</i>, and <i>/etc/sane.d</i> being\nsearched (in this order).</p>\n\n<p style=\"margin-left:11%;\"><b>SANE_DEBUG_CANON_PP</b></p>\n\n<p style=\"margin-left:22%;\">If the library was compiled\nwith debug support enabled, this environment variable\ncontrols the debug level for this backend. Higher debug\nlevels increase the verbosity of the output.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Example: export\nSANE_DEBUG_CANON_PP=4</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Features\navailable in the Windows interface <br>\nBrightness and Contrast</b></p>\n\n<p style=\"margin-left:22%;\">These are not implemented, and\nprobably never will be. These appear to be implemented\nentirely in software. Use GIMP or a similar program if you\nneed these features.</p>\n\n<p style=\"margin-left:11%;\"><b>Descreen Mode</b></p>\n\n<p style=\"margin-left:22%;\">This appears on our first\nanalysis to be just oversampling with an anti-aliasing\nfilter. Again, it seems to be implemented entirely in\nsoftware, so GIMP is your best bet for now.</p>\n\n<p style=\"margin-left:11%;\"><b>Gamma Tables</b></p>\n\n<p style=\"margin-left:22%;\">This is under investigation,\nbut for now only a simple gamma profile (ie: the one\nreturned during calibration) will be loaded.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Communication\nProblems</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">ECP mode in\nlibieee1284 doesn&rsquo;t always work properly, even with\nnew hardware. We believe that this is a ppdev problem. If\nyou change the configuration file to include\n<b>force_nibble</b> , the problem will go away, but you will\nonly be able to scan in nibble mode.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Sometimes the\nscanner can be left in a state where our code cannot revive\nit. If the backend reports no scanner present, try\nunplugging the power and plugging it back in. Also try\nunplugging printers from the pass-through port.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The scanner\nwill not respond correctly to our commands when you first\nplug in the power. You may find if you try a scan very soon\nafter plugging in the power that the backend will\nincorrectly report that you have no scanner present. To\navoid this, give it about 10 seconds to reset itself before\nattempting any scans.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Repeated\nLines</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Sometimes at\nhigh resolutions (ie. 600dpi) you will notice lines which\nappear twice. These lines correspond to points where the\nscanner head has stopped during the scan (it stops every\ntime the internal 64kb buffer is full). Basically it&rsquo;s\na mechanical problem inside the scanner, that the tolerance\nof movement for a start/stop event is greater than 1/600\ninches. I&rsquo;ve never tried the windows driver so\nI&rsquo;m not sure how (or if) it works around this problem,\nbut as we don&rsquo;t know how to rewind the scanner head to\ndo these bits again, there&rsquo;s currently no nice way to\ndeal with the problem.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Grey-scale\nScans</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Be aware that\nthe scanner uses the green LEDs to read grey-scale scans,\nmeaning green coloured things will appear lighter than\nnormal, and red and blue coloured items will appear darker\nthan normal. For high-accuracy grey-scale scans of colour\nitems, it&rsquo;s best just to scan in colour and convert to\ngrey-scale in graphics software such as the GIMP.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>FB620P/FB320P\nCaveats</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">These models\ncan not be reset in the same way as the others. The windows\ndriver doesn&rsquo;t know how to reset them either - when\nleft with an inconsistent scanner, it will start scanning\nhalf way down the page!</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Aborting is\nknown to work correctly on the FB*30P models, and is known\nto be broken on the FB*20P models. The FB620P which I tested\non simply returns garbage after a scan has been aborted\nusing the method we know. Aborting is able to leave the\nscanner in a state where it can be shut down, but not where\nanother scan can be made.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/7/sane\">sane(7)</a>,\n<b>sane-dll(5), libieee1284</b>(3), <i><br>\nhttp://canon-fb330p.sourceforge.net/</i></p>\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This backend is\nprimarily the work of Simon Krix (Reverse Engineering), and\nMatthew Duggan (SANE interface).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Many thanks to\nKevin Easton for his comments and help, and Kent A.\nSignorini for his help with the N340P.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#DEVICE NAMES\">DEVICE NAMES</a>","<a href=\"#CONFIGURATION\">CONFIGURATION</a>","<a href=\"#TIPS\">TIPS</a>","<a href=\"#FILES\">FILES</a>","<a href=\"#ENVIRONMENT\">ENVIRONMENT</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#AUTHOR\">AUTHOR</a>"],"level":5}