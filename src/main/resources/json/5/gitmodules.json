{"name":"gitmodules","description":"gitmodules -\nDefining submodule properties","body":"\n\n<h1 align=\"center\">GITMODULES</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gitmodules -\nDefining submodule properties</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$GIT_WORK_TREE/.gitmodules</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>.gitmodules</b> file, located in the top-level directory\nof a Git working tree, is a text file with a syntax matching\nthe requirements of <a href=\"https://man.page/1/git-config\">git-config(1)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The file\ncontains one subsection per submodule, and the subsection\nvalue is the name of the submodule. The name is set to the\npath where the submodule has been added unless it was\ncustomized with the <b>--name</b> option of <i>git submodule\nadd</i>. Each submodule section also contains the following\nrequired keys:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">submodule.&lt;name&gt;.path</p>\n\n<p style=\"margin-left:17%;\">Defines the path, relative to\nthe top-level directory of the Git working tree, where the\nsubmodule is expected to be checked out. The path name must\nnot end with a <b>/</b>. All submodule paths must be unique\nwithin the <b>.gitmodules</b> file.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">submodule.&lt;name&gt;.url</p>\n\n<p style=\"margin-left:17%;\">Defines a URL from which the\nsubmodule repository can be cloned. This may be either an\nabsolute URL ready to be passed to <a href=\"https://man.page/1/git-clone\">git-clone(1)</a> or\n(if it begins with <b>./</b> or <b>../</b>) a location\nrelative to the superproject&rsquo;s origin repository.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In addition,\nthere are a number of optional keys:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">submodule.&lt;name&gt;.update</p>\n\n<p style=\"margin-left:17%;\">Defines the default update\nprocedure for the named submodule, i.e. how the submodule is\nupdated by the <b>git submodule update</b> command in the\nsuperproject. This is only used by <b>git submodule init</b>\nto initialize the configuration variable of the same name.\nAllowed values here are <i>checkout</i>, <i>rebase</i>,\n<i>merge</i> or <i>none</i>. See description of\n<i>update</i> command in <a href=\"https://man.page/1/git-submodule\">git-submodule(1)</a> for their\nmeaning. For security reasons, the <i>!command</i> form is\nnot accepted here.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">submodule.&lt;name&gt;.branch</p>\n\n<p style=\"margin-left:17%;\">A remote branch name for\ntracking updates in the upstream submodule. If the option is\nnot specified, it defaults to the remote <b>HEAD</b>. A\nspecial value of <b>.</b> is used to indicate that the name\nof the branch in the submodule should be the same name as\nthe current branch in the current repository. See the\n<b>--remote</b> documentation in <a href=\"https://man.page/1/git-submodule\">git-submodule(1)</a> for\ndetails.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">submodule.&lt;name&gt;.fetchRecurseSubmodules</p>\n\n<p style=\"margin-left:17%;\">This option can be used to\ncontrol recursive fetching of this submodule. If this option\nis also present in the submodule&rsquo;s entry in\n<b>.git/config</b> of the superproject, the setting there\nwill override the one found in <b>.gitmodules</b>. Both\nsettings can be overridden on the command line by using the\n<b>--[no-]recurse-submodules</b> option to <b>git fetch</b>\nand <b>git pull</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">submodule.&lt;name&gt;.ignore</p>\n\n<p style=\"margin-left:17%;\">Defines under what\ncircumstances <b>git status</b> and the diff family show a\nsubmodule as modified. The following values are\nsupported:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">all</p>\n\n<p style=\"margin-left:23%;\">The submodule will never be\nconsidered modified (but will nonetheless show up in the\noutput of status and commit when it has been staged).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">dirty</p>\n\n<p style=\"margin-left:23%;\">All changes to the\nsubmodule&rsquo;s work tree will be ignored, only committed\ndifferences between the <b>HEAD</b> of the submodule and its\nrecorded state in the superproject are taken into\naccount.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">untracked</p>\n\n<p style=\"margin-left:23%;\">Only untracked files in\nsubmodules will be ignored. Committed differences and\nmodifications to tracked files will show up.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">none</p>\n\n<p style=\"margin-left:23%;\">No modifications to submodules\nare ignored, all of committed differences, and modifications\nto tracked and untracked files are shown. This is the\ndefault option.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If this option\nis also present in the submodule&rsquo;s entry in\n<b>.git/config</b> of the superproject, the setting there\nwill override the one found in <b>.gitmodules</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Both settings\ncan be overridden on the command line by using the\n<b>--ignore-submodules</b> option. The <b>git submodule</b>\ncommands are not affected by this setting.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">submodule.&lt;name&gt;.shallow</p>\n\n<p style=\"margin-left:17%;\">When set to true, a clone of\nthis submodule will be performed as a shallow clone (with a\nhistory depth of 1) unless the user explicitly asks for a\nnon-shallow clone.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Git does not\nallow the <b>.gitmodules</b> file within a working tree to\nbe a symbolic link, and will refuse to check out such a tree\nentry. This keeps behavior consistent when the file is\naccessed from the index or a tree versus from the\nfilesystem, and helps Git reliably enforce security checks\nof the file contents.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Consider the\nfollowing <b>.gitmodules</b> file:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">[submodule\n&quot;libfoo&quot;] <br>\npath = include/foo <br>\nurl = git://foo.com/git/lib.git</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">[submodule\n&quot;libbar&quot;] <br>\npath = include/bar <br>\nurl = git://bar.com/git/lib.git</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This defines\ntwo submodules, <b>libfoo</b> and <b>libbar</b>. These are\nexpected to be checked out in the paths <b>include/foo</b>\nand <b>include/bar</b>, and for both submodules a URL is\nspecified which can be used for cloning the submodules.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/git-submodule\">git-submodule(1)</a>,\n<a href=\"https://man.page/7/gitsubmodules\">gitsubmodules(7)</a>, <a href=\"https://man.page/1/git-config\">git-config(1)</a></p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Part of the\n<a href=\"https://man.page/1/git\">git(1)</a> suite</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#GIT\">GIT</a>"],"level":5}