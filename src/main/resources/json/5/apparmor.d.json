{"name":"apparmor.d","description":"apparmor.d -\nsyntax of security profiles for AppArmor.\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\nAppArmor\nprofiles describe mandatory access rights granted to given\nprograms and are fed to the AppArmor policy enforcement\nmodule using <b>apparmor_parser</b>(8). This man page\ndescribes the format of the AppArmor configuration files;\nsee <a href=\"https://man.page/7/apparmor\">apparmor(7)</a> for an overview of AppArmor.\n\n<h2>FORMAT\n<a name=\"FORMAT\"></a>\n</h2>\n\n\nAppArmor policy\nis written in a declarative language, in which the order of\nrules within a given section or block does not matter.\nPolicy is by convention written so that it is contained in\nmultiple files, but this is not a requirement. It could just\nas easily be written in a single file. The policy language\nis compiled to a architecture independent binary format that\nis loaded into the kernel for enforcement.\n\nThe base unit\nof AppArmor confinement is the profile. It contains a set of\nrules which are enforced when the profile is associated with\na running program. The rules within the profile provide a\nwhitelist of different permission that are allowed, along\nwith a few other special rules.\n\nThe text in\nAppArmor policy is split into two sections, the preamble and\nthe profile definitions. The preamble must occur at the head\nof the file and once profile definitions begin, no more\npreamble rules are allowed (even in files that are included\ninto the profile). When AppArmor policy (set of profiles) is\nsplit across multiple files, each file can have its own\npreamble section, which may be the same or different from\nother files preamble. Files included within a profile\nsection can not have a preamble section.\n\nThe following\nis a BNF-style description of AppArmor policy configuration\nfiles; see below for an example AppArmor policy file.\nAppArmor configuration files are line-oriented; <b>#</b>\nintroduces a comment, similar to shell scripting languages.\nThe exception to this rule is that <b>#include</b> will\n<i>include</i> the contents of a file inline to the policy;\nthis behaviour is modelled after <a href=\"https://man.page/1/cpp\">cpp(1)</a>.\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PROFILE\nFILE</small></b> = ( [ <i><small>PREAMBLE</small></i> ] [\n<i><small>PROFILE</small></i> ] )*\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PREAMBLE</small></b>\n= ( <i><small>COMMENT</small></i> | <i><small>VARIABLE\nASSIGNMENT</small></i> | <i><small>ALIAS RULE</small></i> |\n<i><small>INCLUDE</small></i> | <i><small>ABI</small></i> )*\n<br>\nVariable assignment and alias rules must come before the\nprofile.\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>VARIABLE\nASSIGNMENT</small></b> = <i><small>VARIABLE</small></i>\n(&rsquo;=&rsquo; | &rsquo;+=&rsquo;) (space separated\nvalues)\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>VARIABLE</small></b>\n= &rsquo;@{&rsquo; <i><small>ALPHA</small></i> [ (\n<i><small>ALPHANUMERIC</small></i> | &rsquo;_&rsquo; ) ... ]\n&rsquo;}&rsquo;\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>ALIAS\nRULE</small></b> = &rsquo;alias&rsquo; <i><small>ABS\nPATH</small></i> &rsquo;-&gt;&rsquo; <i><small>REWRITTEN ABS\nPATH</small></i> &rsquo;,&rsquo;\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>INCLUDE</small></b>\n= ( &rsquo;#include&rsquo; | &rsquo;include&rsquo; ) [\n&rsquo;if exists&rsquo; ] ( <i><small>ABS PATH</small></i> |\n<i><small>MAGIC PATH</small></i> )\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>ABI</small></b>\n= ( &rsquo;abi&rsquo; ) ( <i><small>ABS PATH</small></i> |\n<i><small>MAGIC PATH</small></i> ) &rsquo;,&rsquo;\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>ABS\nPATH</small></b> = &rsquo;&quot;&rsquo; path\n&rsquo;&quot;&rsquo; (the path is passed to\n<a href=\"https://man.page/2/open\">open(2)</a>)\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>MAGIC\nPATH</small></b> = &rsquo;&lt;&rsquo; relative path\n&rsquo;&gt;&rsquo; <br>\nThe path is relative to <i>/etc/apparmor.d/</i>.\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>COMMENT</small></b>\n= &rsquo;#&rsquo; <i><small>TEXT</small></i> [\n&rsquo;\\r&rsquo; ] &rsquo;\\n&rsquo;\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>TEXT</small></b>\n= any characters\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PROFILE</small></b>\n= ( <i><small>PROFILE HEAD</small></i> ) [\n<i><small>ATTACHMENT SPECIFICATION</small></i> ] [\n<i><small>PROFILE FLAG CONDS</small></i> ] &rsquo;{&rsquo; (\n<i><small>RULES</small></i> )* &rsquo;}&rsquo;\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PROFILE\nHEAD</small></b> = [ &rsquo;profile&rsquo; ]\n<i><small>FILEGLOB</small></i> | &rsquo;profile&rsquo;\n<i><small>PROFILE NAME</small></i>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>PROFILE\nNAME</b></small> ( <i><small>UNQUOTED PROFILE\nNAME</small></i> | <i><small>QUOTED PROFILE NAME</small></i>\n)\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>QUOTED\nPROFILE NAME</small></b> = &rsquo;&quot;&rsquo;\n<i><small>UNQUOTED PROFILE NAME</small></i>\n&rsquo;&quot;&rsquo;\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNQUOTED\nPROFILE NAME</small></b> = (must start with alphanumeric\ncharacter (after variable expansion), or &rsquo;/&rsquo;\n<b><small>AARE</small></b> have special meanings; see below.\nMay include <i><small>VARIABLE</small></i> . Rules with\nembedded spaces or tabs must be quoted.)\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>ATTACHMENT\nSPECIFICATION</small></b> = [\n<i><small>PROFILE_EXEC_COND</small></i> ] [\n<i><small>PROFILE XATTR CONDS</small></i> ]\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PROFILE_EXEC_COND</small></b>\n= <i><small>FILEGLOB</small></i>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>PROFILE\nXATTR CONDS</b></small> = [ &rsquo;xattrs=&rsquo; ]\n&rsquo;(&rsquo; comma or white space separated list of\n<i><small>PROFILE XATTR</small></i> &rsquo;)&rsquo;\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PROFILE\nXATTR</small></b> = extended attribute name &rsquo;=&rsquo;\n<i><small>XATTR VALUE FILEGLOB</small></i>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>XATTR\nVALUE FILEGLOB</b></small> =\n<i><small>FILEGLOB</small></i>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>PROFILE\nFLAG CONDS</b></small> = [ &rsquo;flags=&rsquo; ]\n&rsquo;(&rsquo; comma or white space separated list of\n<i><small>PROFILE FLAGS</small></i> &rsquo;)&rsquo;\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PROFILE\nFLAGS</small></b> = <i><small>PROFILE MODE</small></i> |\n<i><small>AUDIT_MODE</small></i> |\n&rsquo;mediate_deleted&rsquo; |\n&rsquo;attach_disconnected&rsquo; |\n&rsquo;chroot_relative&rsquo;\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PROFILE\nMODE</small></b> = &rsquo;enforce&rsquo; |\n&rsquo;complain&rsquo; | &rsquo;kill&rsquo; |\n&rsquo;unconfined&rsquo;\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>AUDIT\nMODE</small></b> = &rsquo;audit&rsquo;\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>RULES</small></b>\n= [ ( <i><small>LINE RULES</small></i> | <i><small>COMMA\nRULES</small></i> &rsquo;,&rsquo; | <i><small>BLOCK\nRULES</small></i> )\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>LINE\nRULES</small></b> = ( <i><small>COMMENT</small></i> |\n<i><small>INCLUDE</small></i> ) [ &rsquo;\\r&rsquo; ]\n&rsquo;\\n&rsquo;\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>COMMA\nRULES</small></b> = ( <i><small>CAPABILITY RULE</small></i>\n| <i><small>NETWORK RULE</small></i> | <i><small>MOUNT\nRULE</small></i> | <i><small>PIVOT ROOT RULE</small></i> |\n<i><small>UNIX RULE</small></i> | <i><small>FILE\nRULE</small></i> | <i><small>LINK RULE</small></i> |\n<i><small>CHANGE_PROFILE RULE</small></i> | <i><small>RLIMIT\nRULE</small></i> | <i><small>DBUS RULE</small></i> )\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>BLOCK\nRULES</small></b> = ( <i><small>SUBPROFILE</small></i> |\n<i><small>HAT</small></i> | <i><small>QUALIFIER\nBLOCK</small></i> )\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>SUBPROFILE</small></b>\n= &rsquo;profile&rsquo; <i><small>PROFILE NAME</small></i> [\n<i><small>ATTACHMENT SPECIFICATION</small></i> ] [\n<i><small>PROFILE FLAG CONDS</small></i> ] &rsquo;{&rsquo; (\n<i><small>RULES</small></i> )* &rsquo;}&rsquo;\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>HAT</small></b>\n= (&rsquo;hat&rsquo; | &rsquo;^&rsquo;)\n<i><small>HATNAME</small></i> [ <i><small>PROFILE FLAG\nCONDS</small></i> ] &rsquo;{&rsquo; (\n<i><small>RULES</small></i> )* &rsquo;}&rsquo;\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>HATNAME</small></b>\n= (must start with alphanumeric character. See\n<a href=\"https://man.page/2/aa_change_hat\">aa_change_hat(2)</a> for a description of how this\n&quot;hat&quot; is used. If &rsquo;^&rsquo; is used to start\na hat then there is no space between the &rsquo;^&rsquo; and\n<i><small>HATNAME</small></i> )\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>QUALIFIER\nBLOCK</small></b> = <i><small>QUALIFIERS\nBLOCK</small></i>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>ACCESS\nTYPE</b></small> = ( &rsquo;allow&rsquo; |\n&rsquo;deny&rsquo; )\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>QUALIFIERS</small></b>\n= [ &rsquo;audit&rsquo; ] [ <i><small>ACCESS\nTYPE</small></i> ]\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>CAPABILITY\nRULE</small></b> = [ <i><small>QUALIFIERS</small></i> ]\n&rsquo;capability&rsquo; [ <i><small>CAPABILITY\nLIST</small></i> ]\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>CAPABILITY\nLIST</small></b> = ( <i><small>CAPABILITY</small></i> )+\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>CAPABILITY</small></b>\n= (lowercase capability name without &rsquo;\n<small>CAP_</small> &rsquo; prefix; see\n<a href=\"https://man.page/7/capabilities\">capabilities(7)</a>)\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>NETWORK\nRULE</small></b> = [ <i><small>QUALIFIERS</small></i> ]\n&rsquo;network&rsquo; [ <i><small>DOMAIN</small></i> ] [\n<i><small>TYPE</small></i> | <i><small>PROTOCOL</small></i>\n]\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DOMAIN</small></b>\n= ( &rsquo;unix&rsquo; | &rsquo;inet&rsquo; |\n&rsquo;ax25&rsquo; | &rsquo;ipx&rsquo; |\n&rsquo;appletalk&rsquo; | &rsquo;netrom&rsquo; |\n&rsquo;bridge&rsquo; | &rsquo;atmpvc&rsquo; |\n&rsquo;x25&rsquo; | &rsquo;inet6&rsquo; | &rsquo;rose&rsquo;\n| &rsquo;netbeui&rsquo; | &rsquo;security&rsquo; |\n&rsquo;key&rsquo; | &rsquo;netlink&rsquo; |\n&rsquo;packet&rsquo; | &rsquo;ash&rsquo; |\n&rsquo;econet&rsquo; | &rsquo;atmsvc&rsquo; |\n&rsquo;rds&rsquo; | &rsquo;sna&rsquo; | &rsquo;irda&rsquo; |\n&rsquo;pppox&rsquo; | &rsquo;wanpipe&rsquo; |\n&rsquo;llc&rsquo; | &rsquo;ib&rsquo; | &rsquo;mpls&rsquo; |\n&rsquo;can&rsquo; | &rsquo;tipc&rsquo; |\n&rsquo;bluetooth&rsquo; | &rsquo;iucv&rsquo; |\n&rsquo;rxrpc&rsquo; | &rsquo;isdn&rsquo; |\n&rsquo;phonet&rsquo; | &rsquo;ieee802154&rsquo; |\n&rsquo;caif&rsquo; | &rsquo;alg&rsquo; | &rsquo;nfc&rsquo; |\n&rsquo;vsock&rsquo; | &rsquo;kcm&rsquo; |\n&rsquo;qipcrtr&rsquo; | &rsquo;smc&rsquo; |\n&rsquo;xdp&rsquo; | &rsquo;mctp&rsquo; ) &rsquo;,&rsquo;\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>TYPE</small></b>\n= ( &rsquo;stream&rsquo; | &rsquo;dgram&rsquo; |\n&rsquo;seqpacket&rsquo; | &rsquo;rdm&rsquo; |\n&rsquo;raw&rsquo; | &rsquo;packet&rsquo; )\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PROTOCOL</small></b>\n= ( &rsquo;tcp&rsquo; | &rsquo;udp&rsquo; |\n&rsquo;icmp&rsquo; )\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>MOUNT\nRULE</small></b> = ( <i><small>MOUNT</small></i> |\n<i><small>REMOUNT</small></i> | <i><small>UMOUNT</small></i>\n)\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>MOUNT</small></b>\n= [ <i><small>QUALIFIERS</small></i> ] &rsquo;mount&rsquo; [\n<i><small>MOUNT CONDITIONS</small></i> ] [ <i><small>SOURCE\nFILEGLOB</small></i> ] [ &rsquo;-&gt;&rsquo; [\n<i><small>MOUNTPOINT FILEGLOB</small></i> ]\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>REMOUNT</small></b>\n= [ <i><small>QUALIFIERS</small></i> ] &rsquo;remount&rsquo;\n[ <i><small>MOUNT CONDITIONS</small></i> ]\n<i><small>MOUNTPOINT FILEGLOB</small></i>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>UMOUNT</b></small>\n= [ <i><small>QUALIFIERS</small></i> ] &rsquo;umount&rsquo;\n[ <i><small>MOUNT CONDITIONS</small></i> ]\n<i><small>MOUNTPOINT FILEGLOB</small></i>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>MOUNT\nCONDITIONS</b></small> = [ ( &rsquo;fstype&rsquo; |\n&rsquo;vfstype&rsquo; ) ( &rsquo;=&rsquo; | &rsquo;in&rsquo;\n) <i><small>MOUNT FSTYPE EXPRESSION</small></i> ] [\n&rsquo;options&rsquo; ( &rsquo;=&rsquo; | &rsquo;in&rsquo; )\n<i><small>MOUNT FLAGS EXPRESSION</small></i> ]\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>MOUNT\nFSTYPE EXPRESSION</small></b> = ( <i><small>MOUNT FSTYPE\nLIST</small></i> | <i><small>MOUNT EXPRESSION</small></i>\n)\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>MOUNT\nFSTYPE LIST</small></b> = Comma separated list of valid\nfilesystem and virtual filesystem types (eg ext4, debugfs,\ndevfs, etc)\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>MOUNT\nFLAGS EXPRESSION</small></b> = ( <i><small>MOUNT FLAGS\nLIST</small></i> | <i><small>MOUNT EXPRESSION</small></i>\n)\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>MOUNT\nFLAGS LIST</small></b> = Comma separated list of\n<i><small>MOUNT FLAGS</small></i> .\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>MOUNT\nFLAGS</small></b> = ( &rsquo;ro&rsquo; | &rsquo;rw&rsquo; |\n&rsquo;nosuid&rsquo; | &rsquo;suid&rsquo; |\n&rsquo;nodev&rsquo; | &rsquo;dev&rsquo; |\n&rsquo;noexec&rsquo; | &rsquo;exec&rsquo; |\n&rsquo;sync&rsquo; | &rsquo;async&rsquo; |\n&rsquo;remount&rsquo; | &rsquo;mand&rsquo; |\n&rsquo;nomand&rsquo; | &rsquo;dirsync&rsquo; |\n&rsquo;noatime&rsquo; | &rsquo;atime&rsquo; |\n&rsquo;nodiratime&rsquo; | &rsquo;diratime&rsquo; |\n&rsquo;bind&rsquo; | &rsquo;rbind&rsquo; |\n&rsquo;move&rsquo; | &rsquo;verbose&rsquo; |\n&rsquo;silent&rsquo; | &rsquo;loud&rsquo; |\n&rsquo;acl&rsquo; | &rsquo;noacl&rsquo; |\n&rsquo;unbindable&rsquo; | &rsquo;runbindable&rsquo; |\n&rsquo;private&rsquo; | &rsquo;rprivate&rsquo; |\n&rsquo;slave&rsquo; | &rsquo;rslave&rsquo; |\n&rsquo;shared&rsquo; | &rsquo;rshared&rsquo; |\n&rsquo;relatime&rsquo; | &rsquo;norelatime&rsquo; |\n&rsquo;iversion&rsquo; | &rsquo;noiversion&rsquo; |\n&rsquo;strictatime&rsquo; | &rsquo;nouser&rsquo; |\n&rsquo;user&rsquo; )\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>MOUNT\nEXPRESSION</small></b> = (\n<i><small>ALPHANUMERIC</small></i> |\n<i><small>AARE</small></i> ) ...\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PIVOT\nROOT RULE</small></b> = [ <i><small>QUALIFIERS</small></i> ]\npivot_root [ oldroot= <i><small>OLD PUT FILEGLOB</small></i>\n] [ <i><small>NEW ROOT FILEGLOB</small></i> ] [\n&rsquo;-&gt;&rsquo; <i><small>PROFILE NAME</small></i> ]\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>SOURCE\nFILEGLOB</small></b> = <i><small>FILEGLOB</small></i>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>MOUNTPOINT\nFILEGLOB</b></small> = <i><small>FILEGLOB</small></i>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>OLD\nPUT FILEGLOB</b></small> =\n<i><small>FILEGLOB</small></i>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>PTRACE_RULE</b></small>\n= [ <i><small>QUALIFIERS</small></i> ] &rsquo;ptrace&rsquo;\n[ <i><small>PTRACE ACCESS PERMISSIONS</small></i> ] [\n<i><small>PTRACE PEER</small></i> ]\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PTRACE\nACCESS PERMISSIONS</small></b> = <i><small>PTRACE\nACCESS</small></i> | <i><small>PTRACE ACCESS\nLIST</small></i>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>PTRACE\nACCESS LIST</b></small> = &rsquo;(&rsquo; Comma or space\nseparated list of <i><small>PTRACE ACCESS</small></i>\n&rsquo;)&rsquo;\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PTRACE\nACCESS</small></b> = ( &rsquo;r&rsquo; | &rsquo;w&rsquo; |\n&rsquo;rw&rsquo; | &rsquo;read&rsquo; | &rsquo;readby&rsquo;\n| &rsquo;trace&rsquo; | &rsquo;tracedby&rsquo; )\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PTRACE\nPEER</small></b> = &rsquo;peer&rsquo; &rsquo;=&rsquo;\n<i><small>AARE</small></i>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>SIGNAL_RULE</b></small>\n= [ <i><small>QUALIFIERS</small></i> ] &rsquo;signal&rsquo;\n[ <i><small>SIGNAL ACCESS PERMISSIONS</small></i> ] [\n<i><small>SIGNAL SET</small></i> ] [ <i><small>SIGNAL\nPEER</small></i> ]\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>SIGNAL\nACCESS PERMISSIONS</small></b> = <i><small>SIGNAL\nACCESS</small></i> | <i><small>SIGNAL ACCESS\nLIST</small></i>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>SIGNAL\nACCESS LIST</b></small> = &rsquo;(&rsquo; Comma or space\nseparated list of <i><small>SIGNAL ACCESS</small></i>\n&rsquo;)&rsquo;\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>SIGNAL\nACCESS</small></b> = ( &rsquo;r&rsquo; | &rsquo;w&rsquo; |\n&rsquo;rw&rsquo; | &rsquo;read&rsquo; | &rsquo;write&rsquo;\n| &rsquo;send&rsquo; | &rsquo;receive&rsquo; )\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>SIGNAL\nSET</small></b> = &rsquo;set&rsquo; &rsquo;=&rsquo;\n&rsquo;(&rsquo; <i><small>SIGNAL LIST</small></i>\n&rsquo;)&rsquo;\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>SIGNAL\nLIST</small></b> = Comma or space separated list of\n<i><small>SIGNALS</small></i>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>SIGNALS</b></small>\n= ( &rsquo;hup&rsquo; | &rsquo;int&rsquo; |\n&rsquo;quit&rsquo; | &rsquo;ill&rsquo; | &rsquo;trap&rsquo;\n| &rsquo;abrt&rsquo; | &rsquo;bus&rsquo; | &rsquo;fpe&rsquo;\n| &rsquo;kill&rsquo; | &rsquo;usr1&rsquo; |\n&rsquo;segv&rsquo; | &rsquo;usr2&rsquo; | &rsquo;pipe&rsquo;\n| &rsquo;alrm&rsquo; | &rsquo;term&rsquo; |\n&rsquo;stkflt&rsquo; | &rsquo;chld&rsquo; |\n&rsquo;cont&rsquo; | &rsquo;stop&rsquo; | &rsquo;stp&rsquo;\n| &rsquo;ttin&rsquo; | &rsquo;ttou&rsquo; |\n&rsquo;urg&rsquo; | &rsquo;xcpu&rsquo; | &rsquo;xfsz&rsquo;\n| &rsquo;vtalrm&rsquo; | &rsquo;prof&rsquo; |\n&rsquo;winch&rsquo; | &rsquo;io&rsquo; | &rsquo;pwr&rsquo; |\n&rsquo;sys&rsquo; | &rsquo;emt&rsquo; | &rsquo;exists&rsquo;\n| &rsquo;rtmin+0&rsquo; ... &rsquo;rtmin+32&rsquo; )\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>SIGNAL\nPEER</small></b> = &rsquo;peer&rsquo; &rsquo;=&rsquo;\n<i><small>AARE</small></i>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>DBUS\nRULE</b></small> = ( <i><small>DBUS MESSAGE RULE</small></i>\n| <i><small>DBUS SERVICE RULE</small></i> | <i><small>DBUS\nEAVESDROP RULE</small></i> | <i><small>DBUS COMBINED\nRULE</small></i> )\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nMESSAGE RULE</small></b> = [\n<i><small>QUALIFIERS</small></i> ] &rsquo;dbus&rsquo; [\n<i><small>DBUS ACCESS EXPRESSION</small></i> ] [\n<i><small>DBUS BUS</small></i> ] [ <i><small>DBUS\nPATH</small></i> ] [ <i><small>DBUS INTERFACE</small></i> ]\n[ <i><small>DBUS MEMBER</small></i> ] [ <i><small>DBUS\nPEER</small></i> ]\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nSERVICE RULE</small></b> = [\n<i><small>QUALIFIERS</small></i> ] &rsquo;dbus&rsquo; [\n<i><small>DBUS ACCESS EXPRESSION</small></i> ] [\n<i><small>DBUS BUS</small></i> ] [ <i><small>DBUS\nNAME</small></i> ]\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nEAVESDROP RULE</small></b> = [\n<i><small>QUALIFIERS</small></i> ] &rsquo;dbus&rsquo; [\n<i><small>DBUS ACCESS EXPRESSION</small></i> ] [\n<i><small>DBUS BUS</small></i> ]\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nCOMBINED RULE</small></b> = [\n<i><small>QUALIFIERS</small></i> ] &rsquo;dbus&rsquo; [\n<i><small>DBUS ACCESS EXPRESSION</small></i> ] [\n<i><small>DBUS BUS</small></i> ]\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nACCESS EXPRESSION</small></b> = ( <i><small>DBUS\nACCESS</small></i> | &rsquo;(&rsquo; <i><small>DBUS ACCESS\nLIST</small></i> &rsquo;)&rsquo; )\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nBUS</small></b> = &rsquo;bus&rsquo; &rsquo;=&rsquo;\n&rsquo;(&rsquo; &rsquo;system&rsquo; | &rsquo;session&rsquo;\n| &rsquo;&quot;&rsquo; <i><small>AARE</small></i>\n&rsquo;&quot;&rsquo; | <i><small>AARE</small></i>\n&rsquo;)&rsquo;\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nPATH</small></b> = &rsquo;path&rsquo; &rsquo;=&rsquo;\n&rsquo;(&rsquo; &rsquo;&quot;&rsquo;\n<i><small>AARE</small></i> &rsquo;&quot;&rsquo; |\n<i><small>AARE</small></i> &rsquo;)&rsquo;\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nINTERFACE</small></b> = &rsquo;interface&rsquo;\n&rsquo;=&rsquo; &rsquo;(&rsquo; &rsquo;&quot;&rsquo;\n<i><small>AARE</small></i> &rsquo;&quot;&rsquo; |\n<i><small>AARE</small></i> &rsquo;)&rsquo;\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nMEMBER</small></b> = &rsquo;member&rsquo; &rsquo;=&rsquo;\n&rsquo;(&rsquo; &rsquo;&quot;&rsquo;\n<i><small>AARE</small></i> &rsquo;&quot;&rsquo; |\n<i><small>AARE</small></i> &rsquo;)&rsquo;\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nPEER</small></b> = &rsquo;peer&rsquo; &rsquo;=&rsquo;\n&rsquo;(&rsquo; [ <i><small>DBUS NAME</small></i> ] [\n<i><small>DBUS LABEL</small></i> ] &rsquo;)&rsquo;\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nNAME</small></b> = &rsquo;name&rsquo; &rsquo;=&rsquo;\n&rsquo;(&rsquo; &rsquo;&quot;&rsquo;\n<i><small>AARE</small></i> &rsquo;&quot;&rsquo; |\n<i><small>AARE</small></i> &rsquo;)&rsquo;\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nLABEL</small></b> = &rsquo;label&rsquo; &rsquo;=&rsquo;\n&rsquo;(&rsquo; &rsquo;&quot;&rsquo;\n<i><small>AARE</small></i> &rsquo;&quot;&rsquo; |\n<i><small>AARE</small></i> &rsquo;)&rsquo;\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nACCESS LIST</small></b> = Comma separated list of\n<i><small>DBUS ACCESS</small></i>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>DBUS\nACCESS</b></small> = ( &rsquo;send&rsquo; |\n&rsquo;receive&rsquo; | &rsquo;bind&rsquo; |\n&rsquo;eavesdrop&rsquo; | &rsquo;r&rsquo; |\n&rsquo;read&rsquo; | &rsquo;w&rsquo; | &rsquo;write&rsquo; |\n&rsquo;rw&rsquo; ) <br>\nSome accesses are incompatible with some rules; see\nbelow.\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>AARE</small></b>\n= <b>?*[]{}^</b> <br>\nSee below for meanings.\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nRULE</small></b> = [ <i><small>QUALIFIERS</small></i> ]\n&rsquo;unix&rsquo; [ <i><small>UNIX ACCESS EXPR</small></i>\n] [ <i><small>UNIX RULE CONDS</small></i> ] [ <i><small>UNIX\nLOCAL EXPR</small></i> ] [ <i><small>UNIX PEER\nEXPR</small></i> ]\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nACCESS EXPR</small></b> = ( <i><small>UNIX\nACCESS</small></i> | <i><small>UNIX ACCESS LIST</small></i>\n)\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nACCESS</small></b> = ( &rsquo;create&rsquo; |\n&rsquo;bind&rsquo; | &rsquo;listen&rsquo; |\n&rsquo;accept&rsquo; | &rsquo;connect&rsquo; |\n&rsquo;shutdown&rsquo; | &rsquo;getattr&rsquo; |\n&rsquo;setattr&rsquo; | &rsquo;getopt&rsquo; |\n&rsquo;setopt&rsquo; | &rsquo;send&rsquo; |\n&rsquo;receive&rsquo; | &rsquo;r&rsquo; | &rsquo;w&rsquo; |\n&rsquo;rw&rsquo; ) <br>\nSome access modes are incompatible with some rules or\nrequire additional parameters.\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nACCESS LIST</small></b> = &rsquo;(&rsquo; <i><small>UNIX\nACCESS</small></i> ( [&rsquo;,&rsquo;] <i><small>UNIX\nACCESS</small></i> )* &rsquo;)&rsquo;\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nRULE CONDS</small></b> = ( <i><small>TYPE COND</small></i> |\n<i><small>PROTO COND</small></i> ) <br>\nEach cond can appear at most once.\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>TYPE\nCOND</small></b> = &rsquo;type&rsquo; &rsquo;=&rsquo; (\n<i><small>AARE</small></i> | &rsquo;(&rsquo; (\n&rsquo;&quot;&rsquo; <i><small>AARE</small></i>\n&rsquo;&quot;&rsquo; | <i><small>AARE</small></i> )+\n&rsquo;)&rsquo; )\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PROTO\nCOND</small></b> = &rsquo;protocol&rsquo; &rsquo;=&rsquo; (\n<i><small>AARE</small></i> | &rsquo;(&rsquo; (\n&rsquo;&quot;&rsquo; <i><small>AARE</small></i>\n&rsquo;&quot;&rsquo; | <i><small>AARE</small></i> )+\n&rsquo;)&rsquo; )\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nLOCAL EXPR</small></b> = ( <i><small>UNIX ADDRESS\nCOND</small></i> | <i><small>UNIX LABEL COND</small></i> |\n<i><small>UNIX ATTR COND</small></i> | <i><small>UNIX OPT\nCOND</small></i> )* <br>\nEach cond can appear at most once.\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nPEER EXPR</small></b> = &rsquo;peer&rsquo; &rsquo;=&rsquo; (\n<i><small>UNIX ADDRESS COND</small></i> | <i><small>UNIX\nLABEL COND</small></i> )+ <br>\nEach cond can appear at most once.\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nADDRESS COND</small></b> &rsquo;addr&rsquo; &rsquo;=&rsquo;\n( <i><small>AARE</small></i> | &rsquo;(&rsquo;\n&rsquo;&quot;&rsquo; <i><small>AARE</small></i>\n&rsquo;&quot;&rsquo; | <i><small>AARE</small></i>\n&rsquo;)&rsquo; )\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nLABEL COND</small></b> &rsquo;label&rsquo; &rsquo;=&rsquo; (\n<i><small>AARE</small></i> | &rsquo;(&rsquo;\n&rsquo;&quot;&rsquo; <i><small>AARE</small></i>\n&rsquo;&quot;&rsquo; | <i><small>AARE</small></i>\n&rsquo;)&rsquo; )\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nATTR COND</small></b> &rsquo;attr&rsquo; &rsquo;=&rsquo; (\n<i><small>AARE</small></i> | &rsquo;(&rsquo;\n&rsquo;&quot;&rsquo; <i><small>AARE</small></i>\n&rsquo;&quot;&rsquo; | <i><small>AARE</small></i>\n&rsquo;)&rsquo; )\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nOPT COND</small></b> &rsquo;opt&rsquo; &rsquo;=&rsquo; (\n<i><small>AARE</small></i> | &rsquo;(&rsquo;\n&rsquo;&quot;&rsquo; <i><small>AARE</small></i>\n&rsquo;&quot;&rsquo; | <i><small>AARE</small></i>\n&rsquo;)&rsquo; )\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>RLIMIT\nRULE</small></b> = &rsquo;set&rsquo; &rsquo;rlimit&rsquo; [\n<i><small>RLIMIT</small></i> &rsquo;&lt;=&rsquo;\n<i><small>RLIMIT VALUE</small></i> ]\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>RLIMIT</small></b>\n= ( &rsquo;cpu&rsquo; | &rsquo;fsize&rsquo; |\n&rsquo;data&rsquo; | &rsquo;stack&rsquo; |\n&rsquo;core&rsquo; | &rsquo;rss&rsquo; |\n&rsquo;nofile&rsquo; | &rsquo;ofile&rsquo; |\n&rsquo;as&rsquo; | &rsquo;nproc&rsquo; |\n&rsquo;memlock&rsquo; | &rsquo;locks&rsquo; |\n&rsquo;sigpending&rsquo; | &rsquo;msgqueue&rsquo; |\n&rsquo;nice&rsquo; | &rsquo;rtprio&rsquo; |\n&rsquo;rttime&rsquo; )\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>RLIMIT\nVALUE</small></b> = ( <i><small>RLIMIT SIZE</small></i> |\n<i><small>RLIMIT NUMBER</small></i> | <i><small>RLIMIT\nTIME</small></i> | <i><small>RLIMIT NICE</small></i> )\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>RLIMIT\nSIZE</small></b> = <i><small>NUMBER</small></i> (\n&rsquo;K&rsquo; | &rsquo;M&rsquo; | &rsquo;G&rsquo; ) <br>\nOnly applies to <small>RLIMIT</small> of\n&rsquo;fsize&rsquo;, &rsquo;data&rsquo;,\n&rsquo;stack&rsquo;, &rsquo;core&rsquo;, &rsquo;rss&rsquo;,\n&rsquo;as&rsquo;, &rsquo;memlock&rsquo;,\n&rsquo;msgqueue&rsquo;.\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>RLIMIT\nNUMBER</small></b> = number from 0 to max rlimit value. <br>\nOnly applies to <small>RLIMIT</small> of\n&rsquo;ofile&rsquo;, &rsquo;nofile&rsquo;,\n&rsquo;locks&rsquo;, &rsquo;sigpending&rsquo;,\n&rsquo;nproc&rsquo;, &rsquo;rtprio&rsquo;.\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>RLIMIT\nTIME</small></b> = <i><small>NUMBER</small></i> (\n&rsquo;us&rsquo; | &rsquo;microsecond&rsquo; |\n&rsquo;microseconds&rsquo; | &rsquo;ms&rsquo; |\n&rsquo;millisecond&rsquo; | &rsquo;milliseconds&rsquo; |\n&rsquo;s&rsquo; | &rsquo;sec&rsquo; | &rsquo;second&rsquo; |\n&rsquo;seconds&rsquo; | &rsquo;min&rsquo; |\n&rsquo;minute&rsquo; | &rsquo;minutes&rsquo; |\n&rsquo;h&rsquo; | &rsquo;hour&rsquo; | &rsquo;hours&rsquo; |\n&rsquo;d&rsquo; | &rsquo;day&rsquo; | &rsquo;days&rsquo; |\n&rsquo;week&rsquo; | &rsquo;weeks&rsquo; ) <br>\nOnly applies to <small>RLIMIT</small> of &rsquo;cpu&rsquo;\nand &rsquo;rttime&rsquo;. <small>RLIMIT</small>\n&rsquo;cpu&rsquo; only allows units &gt;=\n&rsquo;seconds&rsquo;.\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>RLIMIT\nNICE</small></b> = a number between -20 and 19. <br>\nOnly applies to <small>RLIMIT</small> of\n&rsquo;nice&rsquo;.\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>FILE\nRULE</small></b> = [ <i><small>QUALIFIERS</small></i> ] [\n&rsquo;owner&rsquo; ] ( &rsquo;file&rsquo; | [\n&rsquo;file&rsquo; ] ( <i><small>FILEGLOB ACCESS</small></i>\n| <i><small>ACCESS FILEGLOB</small></i> ) [\n&rsquo;-&gt;&rsquo; <i><small>EXEC TARGET</small></i> ]\n)\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>FILEGLOB</small></b>\n= ( <i><small>QUOTED FILEGLOB</small></i> |\n<i><small>UNQUOTED FILEGLOB</small></i> )\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>QUOTED\nFILEGLOB</small></b> = &rsquo;&quot;&rsquo;\n<i><small>UNQUOTED FILEGLOB</small></i>\n&rsquo;&quot;&rsquo;\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNQUOTED\nFILEGLOB</small></b> = (must start with &rsquo;/&rsquo;\n(after variable expansion), <b><small>AARE</small></b> have\nspecial meanings; see below. May include\n<i><small>VARIABLE</small></i> . Rules with embedded spaces\nor tabs must be quoted. Rules must end with &rsquo;/&rsquo;\nto apply to directories.)\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>ACCESS</small></b>\n= ( &rsquo;r&rsquo; | &rsquo;w&rsquo; | &rsquo;a&rsquo; |\n&rsquo;l&rsquo; | &rsquo;k&rsquo; | &rsquo;m&rsquo; |\n<i><small>EXEC TRANSITION</small></i> )+ (not all\ncombinations are allowed; see below.)\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>EXEC\nTRANSITION</small></b> = ( &rsquo;ix&rsquo; |\n&rsquo;ux&rsquo; | &rsquo;Ux&rsquo; | &rsquo;px&rsquo; |\n&rsquo;Px&rsquo; | &rsquo;cx&rsquo; | &rsquo;Cx&rsquo; |\n&rsquo;pix&rsquo; | &rsquo;Pix&rsquo; | &rsquo;cix&rsquo; |\n&rsquo;Cix&rsquo; | &rsquo;pux&rsquo; | &rsquo;PUx&rsquo; |\n&rsquo;cux&rsquo; | &rsquo;CUx&rsquo; | &rsquo;x&rsquo; )\n<br>\nA bare &rsquo;x&rsquo; is only allowed in rules with the\ndeny qualifier, everything else only without the deny\nqualifier.\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>EXEC\nTARGET</small></b> = name <br>\nRequires <i><small>EXEC TRANSITION</small></i>\nspecified.\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>LINK\nRULE</small></b> = <i><small>QUALIFIERS</small></i> [\n&rsquo;owner&rsquo; ] &rsquo;link&rsquo; [\n&rsquo;subset&rsquo; ] <i><small>FILEGLOB</small></i>\n&rsquo;-&gt;&rsquo; <i><small>FILEGLOB</small></i>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>ALPHA</b></small>\n= (&rsquo;a&rsquo;, &rsquo;b&rsquo;, &rsquo;c&rsquo;, ...\n&rsquo;z&rsquo;, &rsquo;A&rsquo;, &rsquo;B&rsquo;, ...\n&rsquo;Z&rsquo;)\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>ALPHANUMERIC</small></b>\n= (&rsquo;0&rsquo;, &rsquo;1&rsquo;, &rsquo;2&rsquo;, ...\n&rsquo;9&rsquo;, &rsquo;a&rsquo;, &rsquo;b&rsquo;,\n&rsquo;c&rsquo;, ... &rsquo;z&rsquo;, &rsquo;A&rsquo;,\n&rsquo;B&rsquo;, ... &rsquo;Z&rsquo;)\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>CHANGE_PROFILE\nRULE</small></b> = &rsquo;change_profile&rsquo; [ [\n<i><small>EXEC MODE</small></i> ] <i><small>EXEC\nCOND</small></i> ] [ &rsquo;-&gt;&rsquo; <i><small>PROFILE\nNAME</small></i> ]\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>EXEC_MODE</small></b>\n= ( &rsquo;safe&rsquo; | &rsquo;unsafe&rsquo; )\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>EXEC\nCOND</small></b> = <i><small>FILEGLOB</small></i>\n\nAll resources\nand programs need a full path. There may be any number of\nsubprofiles (aka child profiles) in a profile, limited only\nby kernel memory. Subprofile names are limited to 974\ncharacters. Child profiles can be used to confine an\napplication in a special way, or when you want the child to\nbe unconfined on the system, but confined when called from\nthe parent. Hats are a special child profile that can be\nused with the <a href=\"https://man.page/2/aa_change_hat\">aa_change_hat(2)</a> <small>API</small>\ncall. Applications written or modified to use\n<a href=\"https://man.page/2/aa_change_hat\">aa_change_hat(2)</a> can take advantage of subprofiles to\nrun under different confinements, dependent on program\nlogic. Several <a href=\"https://man.page/2/aa_change_hat\">aa_change_hat(2)</a>-aware applications\nexist, including an Apache module, <a href=\"https://man.page/5/mod_apparmor\">mod_apparmor(5)</a>; a\n<small>PAM</small> module, pam_apparmor; and a Tomcat valve,\ntomcat_apparmor. Applications written or modified to use\n<a href=\"https://man.page/2/change_profile\">change_profile(2)</a> transition permanently to the\nspecified profile. libvirt is one such application.\n\n<b>Profile\nHead</b> <br>\nThe profile head consists of a required name that is unique\nand optional attachment conditionals and control flags.\n\n\n<i>Name</i>\n\nThe name of the\nprofile is its identifier. It is what is displayed during\nintrospection (eg. ps -Z), and defines how the profile is\nreferenced by policy rules for any policy interaction via\nipc or domain changes. It is recommended that the name be\nkept short and have meaning for the application it is being\napplied eg. <i>firefox</i> for the firefox web browser or\nits functional role eg. log_admin.\n\nIf the name is\nan applications full absolute path name eg.\n<i>/usr/bin/firefox</i> and an exec attachment conditional\nis not specified the name is also used as the\nprofile&rsquo;s exec attachment conditional. This use\nhowever has been deprecated and is discouraged as it makes\nfor long names that can make profile rules difficult to\nunderstand, and may not be fully displayed by some\nintrospection tools.\n\n<i>Attachment\nConditionals</i>\n\nThe attachment\nconditionals are used during profile changes to determine\nwhether a profile is a match for the proposed profile\ntransition. The attachment conditionals are optional, how\nand when they are applied is determined by the specific\ncondition(s) used.\n\nWhen attachment\nconditionals are used, the attachment conditionals for all\nprofiles in the namespace will be evaluated. The profile\nwith the set of attachments that result in the best match\nwill become the new profile after a transition operation.\nAttachments that don&rsquo;t match will result in the\nprofile not being available for transition.\n\nIf no\nconditionals are specified the profile will only be used if\na transition explicitly specifies the profile name.\n\nExec Attachment\nConditional\n\nThe exec\nattachment conditional governs how closely the profile\nmatches an executable program. This conditional is only used\nduring an exec operation when the matching exec rule\nspecifies either a <b>px</b> or <b>cx</b> (or their\nderivatives) transition type. The exec attachment\nconditional will also be used by tasks that are\n<i>unconfined</i> as they use a <b>pix</b> transition\nrule.\n\nIf there are no\nattachment matches then it is up to the exec rule to\ndetermine what happens (fail or a fallback option).\n\nNote: see\nprofile <i>Name</i> for information around using the profile\nname as an attachment conditional.\n\nExec attachment\nconditionals can contain variable names and pattern\nmatching. They use a longest left match heuristic to\ndeterime the winner in the case of multiple matches at run\ntime. The exact implementation of this resolution is kernel\nspecific and has improved over time, while retaining\nbackwards compatibility. If the heuristic can not determine\na winner between multiple matches the exec will be\ndenied.\n\nExtended\nAttributes Attachment Conditional\n\nAppArmor\nprofiles have the ability to target files based on their\n<a href=\"https://man.page/7/xattr\">xattr(7)</a> values in addition to their path. For\nexample, the following profile matches files in /usr/bin\nwith the attribute &quot;security.apparmor&quot; and value\n&quot;trusted&quot;:\n\n/usr/bin/*\nxattrs(security.apparmor=&quot;trusted&quot;) { <br>\n# ... <br>\n}\n\nSee\n<a href=\"https://man.page/7/apparmor_xattrs\">apparmor_xattrs(7)</a> for further details.\n\n\n<i>Flags</i>\n\nThe profile\nflags allow modifying the behavior of the profile. If a\nprofile flag is specified it takes priority over any\nconflicting flags that have been specified by rules in the\nprofile body.\n\nProfile\nMode\n\nThe profile\nmode allow controlling the enforcement behavior of the\nprofile rules.\n\nIf no mode is\nspecified the profile defaults to <i>enforce</i> mode.\n<b><br>\nenforce</b> For a given action, if the profile rules do not\ngrant <br>\npermission the action will be denied, with an\n<i><small>EACCES</small></i> or <i><small>EPERM</small></i>\nerror <br>\ncode returned to userspace, and the violation will be logged\nwith a tag <br>\nof the access being <b><small>DENIED</small></b> . <b><br>\nkill</b> This is a variant of enforce mode where in addition\nto returning <i><small><br>\nEACCES</small></i> or <i><small>EPERM</small></i> for a\nviolation, the task is also sent a signal to kill <br>\nit. <b><br>\ncomplain</b> For a given action, if the profile rules do not\ngrant <br>\npermission the action will be allowed, but the violation\nwill be logged <br>\nwith a tag of the access being <b><small>ALLOWED</small></b>\n. <b><br>\nunconfined</b> This mode allows a task confined by the\nprofile to behave as <br>\nthough they are <i>unconfined</i>. This mode allow for an\nunconfined behavior <br>\nthat can be later changed to confinement by using profile\nreplacement. <br>\nThis mode is should not be used under regular deployment but\ncan be <br>\nuseful during debugging and some system initialization\nscenarios.\n\nAudit Mode\n\nThe audit mode\nallows control of how AppArmor messages are are logged to\nthe audit system. <b><br>\naudit</b> This flag causes all actions whether allowed or\ndenied to be <br>\nlogged.\n\nMisc modes\n<b><br>\nmediate_deleted</b> This forces AppArmor to mediate deleted\nfiles as if <br>\nthey still exist in the file system. <b><br>\nattach_disconnected</b> This forces AppArmor to attach\ndisconnected objects <br>\nto the task&rsquo;s namespace and mediate them as though\nthey are part of the <br>\nnamespace. <small>WARNING</small> this mode is unsafe and\ncan result in aliasing and <br>\naccess to objects that should not be allowed. Its intent is\na debug and <br>\npolicy development tool. <b><br>\nchroot_relative</b> This forces file names to be relative to\na chroot and <br>\nbehave as if the chroot is a mount namespace.\n\n<b>Access\nModes</b> <br>\nFile permission access modes consists of combinations of the\nfollowing modes:\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>r</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- read</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>w</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- write -- conflicts with append</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>a</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- append -- conflicts with write</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ux</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- unconfined execute</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>Ux</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- unconfined execute -- scrub the environment</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>px</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- discrete profile execute</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>Px</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- discrete profile execute -- scrub the environment</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>cx</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- transition to subprofile on execute</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>Cx</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- transition to subprofile on execute -- scrub the\nenvironment </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ix</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- inherit execute</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>pix</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- discrete profile execute with inherit fallback</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>Pix</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- discrete profile execute with inherit fallback --\nscrub the environment</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>cix</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- transition to subprofile on execute with inherit\nfallback </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>Cix</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- transition to subprofile on execute with inherit\nfallback -- scrub the environment</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>pux</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- discrete profile execute with fallback to\nunconfined </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>PUx</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- discrete profile execute with fallback to unconfined\n-- scrub the environment</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>cux</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- transition to subprofile on execute with fallback to\nunconfined </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>CUx</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- transition to subprofile on execute with fallback to\nunconfined -- scrub the environment</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>deny x</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- disallow execute (in rules with the deny\nqualifier) </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>m</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- allow <small>PROT_EXEC</small> with <a href=\"https://man.page/2/mmap\">mmap(2)</a>\ncalls </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>l</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- link</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>k</b></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- lock</td></tr>\n</table>\n\n<b>Access Modes\nDetails <br>\nr - Read mode</b>\n\n<p style=\"margin-left:17%;\">Allows the program to have read\naccess to the file or directory listing. Read access is\nrequired for shell scripts and other interpreted\ncontent.\n\n<p style=\"margin-left:11%;\"><b>w - Write mode</b>\n\n<p style=\"margin-left:17%;\">Allows the program to have\nwrite access to the file. Files and directories must have\nthis permission if they are to be unlinked (removed.) Write\nmode is not required on a directory to rename or create\nfiles within the directory.\n\n<p style=\"margin-left:17%; margin-top: 1em\">This mode\nconflicts with append mode.\n\n<p style=\"margin-left:11%;\"><b>a - Append mode</b>\n\n<p style=\"margin-left:17%;\">Allows the program to have a\nlimited appending only write access to the file. Append mode\nwill prevent an application from opening the file for write\nunless it passes the O_APPEND parameter flag on open.\n\n<p style=\"margin-left:17%; margin-top: 1em\">The mode\nconflicts with Write mode.\n\n<p style=\"margin-left:11%;\"><b>ux - Unconfined execute\nmode</b>\n\n<p style=\"margin-left:17%;\">Allows the program to execute\nthe program without any AppArmor profile being applied to\nthe program.\n\n<p style=\"margin-left:17%; margin-top: 1em\">This mode is\nuseful when a confined program needs to be able to perform a\nprivileged operation, such as rebooting the machine. By\nplacing the privileged section in another executable and\ngranting unconfined execution rights, it is possible to\nbypass the mandatory constraints imposed on all confined\nprocesses. For more information on what is constrained, see\nthe <a href=\"https://man.page/7/apparmor\">apparmor(7)</a> man page.\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>WARNING</small></b>\n&rsquo;ux&rsquo; should only be used in very special cases.\nIt enables the designated child processes to be run without\nany AppArmor protection. &rsquo;ux&rsquo; does not scrub the\nenvironment of variables such as <small>LD_PRELOAD</small> ;\nas a result, the calling domain may have an undue amount of\ninfluence over the callee. Use this mode only if the child\nabsolutely must be run unconfined and\n<small>LD_PRELOAD</small> must be used. Any profile using\nthis mode provides negligible security. Use at your own\nrisk.\n\n<p style=\"margin-left:17%; margin-top: 1em\">Incompatible\nwith other exec transition modes and the deny qualifier.\n\n<p style=\"margin-left:11%;\"><b>Ux - unconfined execute --\nscrub the environment</b>\n\n<p style=\"margin-left:17%;\">&rsquo;Ux&rsquo; allows the\nnamed program to run in &rsquo;ux&rsquo; mode, but AppArmor\nwill invoke the Linux Kernel&rsquo;s <b>unsafe_exec</b>\nroutines to scrub the environment, similar to setuid\nprograms. (See <b>ld.so</b>(8) for some information on\nsetuid/setgid environment scrubbing.)\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>WARNING</small></b>\n&rsquo;Ux&rsquo; should only be used in very special cases.\nIt enables the designated child processes to be run without\nany AppArmor protection. Use this mode only if the child\nabsolutely must be run unconfined. Use at your own risk.\n\n<p style=\"margin-left:17%; margin-top: 1em\">Incompatible\nwith other exec transition modes and the deny qualifier.\n\n<p style=\"margin-left:11%;\"><b>px - Discrete Profile\nexecute mode</b>\n\n<p style=\"margin-left:17%;\">This mode requires that a\ndiscrete security profile is defined for a program executed\nand forces an AppArmor domain transition. If there is no\nprofile defined then the access will be denied.\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>WARNING</small></b>\n&rsquo;px&rsquo; does not scrub the environment of variables\nsuch as <small>LD_PRELOAD</small> ; as a result, the calling\ndomain may have an undue amount of influence over the\ncallee.\n\n<p style=\"margin-left:17%; margin-top: 1em\">Incompatible\nwith other exec transition modes and the deny qualifier.\n\n<p style=\"margin-left:11%;\"><b>Px - Discrete Profile\nexecute mode -- scrub the environment</b>\n\n<p style=\"margin-left:17%;\">&rsquo;Px&rsquo; allows the\nnamed program to run in &rsquo;px&rsquo; mode, but AppArmor\nwill invoke the Linux Kernel&rsquo;s <b>unsafe_exec</b>\nroutines to scrub the environment, similar to setuid\nprograms. (See <b>ld.so</b>(8) for some information on\nsetuid/setgid environment scrubbing.)\n\n<p style=\"margin-left:17%; margin-top: 1em\">Incompatible\nwith other exec transition modes and the deny qualifier.\n\n<p style=\"margin-left:11%;\"><b>cx - Transition to\nSubprofile execute mode</b>\n\n<p style=\"margin-left:17%;\">This mode requires that a local\nsecurity profile is defined and forces an AppArmor domain\ntransition to the named profile. If there is no profile\ndefined then the access will be denied.\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>WARNING</small></b>\n&rsquo;cx&rsquo; does not scrub the environment of variables\nsuch as <small>LD_PRELOAD</small> ; as a result, the calling\ndomain may have an undue amount of influence over the\ncallee.\n\n<p style=\"margin-left:17%; margin-top: 1em\">Incompatible\nwith other exec transition modes and the deny qualifier.\n\n<p style=\"margin-left:11%;\"><b>Cx - Transition to\nSubprofile execute mode -- scrub the environment</b>\n\n<p style=\"margin-left:17%;\">&rsquo;Cx&rsquo; allows the\nnamed program to run in &rsquo;cx&rsquo; mode, but AppArmor\nwill invoke the Linux Kernel&rsquo;s <b>unsafe_exec</b>\nroutines to scrub the environment, similar to setuid\nprograms. (See <b>ld.so</b>(8) for some information on\nsetuid/setgid environment scrubbing.)\n\n<p style=\"margin-left:17%; margin-top: 1em\">Incompatible\nwith other exec transition modes and the deny qualifier.\n\n<p style=\"margin-left:11%;\"><b>ix - Inherit execute\nmode</b>\n\n<p style=\"margin-left:17%;\">Prevent the normal AppArmor\ndomain transition on <a href=\"https://man.page/2/execve\">execve(2)</a> when the profiled\nprogram executes the named program. Instead, the executed\nresource will inherit the current profile.\n\n<p style=\"margin-left:17%; margin-top: 1em\">This mode is\nuseful when a confined program needs to call another\nconfined program without gaining the permissions of the\ntarget&rsquo;s profile, or losing the permissions of the\ncurrent profile. There is no version to scrub the\nenvironment because &rsquo;ix&rsquo; executions don&rsquo;t\nchange privileges.\n\n<p style=\"margin-left:17%; margin-top: 1em\">Incompatible\nwith other exec transition modes and the deny qualifier.\n\n<p style=\"margin-left:11%;\"><b>Profile transition with\ninheritance fallback execute mode</b>\n\n<p style=\"margin-left:17%;\">These modes attempt to perform\na domain transition as specified by the matching permission\n(shown below) and if that transition fails to find the\nmatching profile the domain transition proceeds using the\n&rsquo;ix&rsquo; transition mode.\n\n<p style=\"margin-left:17%; margin-top: 1em\">'Pix' == 'Px'\nwith fallback to 'ix' <br>\n'pix' == 'px' with fallback to 'ix' <br>\n'Cix' == 'Cx' with fallback to 'ix' <br>\n'cix' == 'cx' with fallback to 'ix'\n\n<p style=\"margin-left:17%; margin-top: 1em\">Incompatible\nwith other exec transition modes and the deny qualifier.\n\n<p style=\"margin-left:11%;\"><b>Profile transition with\nunconfined fallback execute mode</b>\n\n<p style=\"margin-left:17%;\">These modes attempt to perform\na domain transition as specified by the matching permission\n(shown below) and if that transition fails to find the\nmatching profile the domain transition proceeds using the\n&rsquo;ux&rsquo; transition mode if &rsquo;pux&rsquo;,\n&rsquo;cux&rsquo; or the &rsquo;Ux&rsquo; transition mode if\n&rsquo;PUx&rsquo;, &rsquo;CUx&rsquo; is used.\n\n<p style=\"margin-left:17%; margin-top: 1em\">'PUx' == 'Px'\nwith fallback to 'Ux' <br>\n'pux' == 'px' with fallback to 'ux' <br>\n'CUx' == 'Cx' with fallback to 'Ux' <br>\n'cux' == 'cx' with fallback to 'ux'\n\n<p style=\"margin-left:17%; margin-top: 1em\">Incompatible\nwith other exec transition modes and the deny qualifier.\n\n<p style=\"margin-left:11%;\"><b>deny x - Deny\nexecute</b>\n\n<p style=\"margin-left:17%;\">For rules including the deny\nmodifier, only &rsquo;x&rsquo; is allowed to deny\nexecute.\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\n&rsquo;ix&rsquo;, &rsquo;Px&rsquo;, &rsquo;px&rsquo;,\n&rsquo;Cx&rsquo;, &rsquo;cx&rsquo; and the fallback modes\nconflict with the deny modifier.\n\n<p style=\"margin-left:11%;\"><b>Directed profile\ntransitions</b>\n\n<p style=\"margin-left:17%;\">The directed (&rsquo;px&rsquo;,\n&rsquo;Px&rsquo;, &rsquo;pix&rsquo;, &rsquo;Pix&rsquo;,\n&rsquo;pux&rsquo;, &rsquo;PUx&rsquo;) profile and subprofile\n(&rsquo;cx&rsquo;, &rsquo;Cx&rsquo;, &rsquo;cix&rsquo;,\n&rsquo;Cix&rsquo;, &rsquo;cux&rsquo;, &rsquo;CUx&rsquo;)\ntransitions normally determine the profile to transition to\nfrom the executable name. It is however possible to specify\nthe name of the profile that the transition should use.\n\n<p style=\"margin-left:17%; margin-top: 1em\">The name of the\nprofile to transition to is specified using the\n&rsquo;-&gt;&rsquo; followed by the name of the profile to\ntransition to. Eg.\n\n<p style=\"margin-left:17%; margin-top: 1em\">/bin/** px\n-&gt; profile,\n\n<p style=\"margin-left:17%; margin-top: 1em\">Incompatible\nwith other exec transition modes.\n\n<p style=\"margin-left:11%;\"><b>m - Allow executable\nmapping</b>\n\n<p style=\"margin-left:17%;\">This mode allows a file to be\nmapped into memory using <a href=\"https://man.page/2/mmap\">mmap(2)</a>&rsquo;s\n<small>PROT_EXEC</small> flag. This flag marks the pages\nexecutable; it is used on some architectures to provide\nnon-executable data pages, which can complicate exploit\nattempts. AppArmor uses this mode to limit which files a\nwell-behaved program (or all programs on architectures that\nenforce non-executable memory access controls) may use as\nlibraries, to limit the effect of invalid <b>-L</b> flags\ngiven to <a href=\"https://man.page/1/ld\">ld(1)</a> and <b><small>LD_PRELOAD</small></b> ,\n<b><small>LD_LIBRARY_PATH</small></b> , given to\n<b>ld.so</b>(8).\n\n<p style=\"margin-left:11%;\"><b>l - Link mode</b>\n\n<p style=\"margin-left:17%;\">Allows the program to be able\nto create a link with this name. When a link is created, the\nnew link <b><small>MUST</small></b> have a subset of\npermissions as the original file (with the exception that\nthe destination does not have to have link access.) If there\nis an &rsquo;x&rsquo; rule on the new link, it must match\nthe original file exactly.\n\n<p style=\"margin-left:11%;\"><b>k - lock mode</b>\n\n<p style=\"margin-left:17%;\">Allows the program to be able\nlock a file with this name. This permission covers both\nadvisory and mandatory locking.\n\n<p style=\"margin-left:11%;\"><b>leading <small>OR</small>\ntrailing access permissions</b>\n\n<p style=\"margin-left:17%;\">File rules can be specified\nwith the access permission either leading or trailing the\nfile glob. Eg.\n\n<p style=\"margin-left:17%; margin-top: 1em\">rw /**, #\nleading permissions <br>\n/** rw, # trailing permissions\n\n<p style=\"margin-left:17%; margin-top: 1em\">When leading\npermissions are used further rule options and context may be\nallowed, Eg.\n\n<p style=\"margin-left:17%; margin-top: 1em\">l /foo -&gt;\n/bar, # lead 'l' link permission is equivalent to link\nrules\n\n<b>Link\nrules</b> <br>\nLink rules allow specifying permission to form a hard link\nas a link target pair. If the subset condition is specified\nthen the permissions to access the link file must be a\nsubset of the profiles permissions to access the target\nfile. If there is an &rsquo;x&rsquo; rule on the new link,\nit must match the original file exactly.\n\nEg.\n\n/file1 r, <br>\n/file2 rwk, <br>\n/link* rw, <br>\nlink subset /link* -&gt; /**,\n\nThe link rule\nallows linking of /link to both /file1 or /file2 by name\nhowever because the /link file has &rsquo;rw&rsquo;\npermissions it is not allowed to link to /file1 because that\nwould grant an access path to /file1 with more permissions\nthan the &rsquo;r&rsquo; permissions the profile\nspecifies.\n\nA link of /link\nto /file2 would be allowed because the &rsquo;rw&rsquo;\npermissions of /link are a subset of the &rsquo;rwk&rsquo;\npermissions for /file1.\n\nThe link rule\nis equivalent to specifying the &rsquo;l&rsquo; link\npermission as a leading permission with no other file access\npermissions. When this is done the link rule options can be\nspecified.\n\nThe following\nlink rule is equivalent to the &rsquo;l&rsquo; permission\nfile rule\n\nlink /foo -&gt;\nbar, <br>\nl /foo -&gt; /bar,\n\nFile rules that\nspecify the &rsquo;l&rsquo; permission and don&rsquo;t\nspecify the extend link permissions map to link rules as\nfollows.\n\n/foo l, <br>\nl /foo, <br>\nlink subset /foo -&gt; /**,\n\n\n<b>Comments</b>\n<br>\nComments start with # and may begin at any place within a\nline. The comment ends when the line ends. This is the same\ncomment style as shell scripts.\n\n\n<b>Capabilities</b>\n<br>\nThe only capabilities a confined process may use may be\nenumerated; for the complete list, please refer to\n<a href=\"https://man.page/7/capabilities\">capabilities(7)</a>. Note that granting some capabilities\nrenders AppArmor confinement for that domain advisory; while\n<a href=\"https://man.page/2/open\">open(2)</a>, <a href=\"https://man.page/2/read\">read(2)</a>, <a href=\"https://man.page/2/write\">write(2)</a>, etc., will\nstill return error when access is not granted, some\ncapabilities allow loading kernel modules, arbitrary access\nto <small>IPC,</small> ability to bypass discretionary\naccess controls, and other operations that are typically\nreserved for the root user.\n\n<b>Network\nRules</b> <br>\nAppArmor supports simple coarse grained network mediation.\nThe network rule restrict all <a href=\"https://man.page/2/socket\">socket(2)</a> based\noperations. The mediation done is a coarse-grained check on\nwhether a socket of a given type and family can be created,\nread, or written. There is no mediation based of port number\nor protocol beyond tcp, udp, and raw. Network\n<a href=\"https://man.page/7/netlink\">netlink(7)</a> rules may only specify type\n&rsquo;dgram&rsquo; and &rsquo;raw&rsquo;.\n\nAppArmor\nnetwork rules are accumulated so that the granted network\npermissions are the union of all the listed network rule\npermissions.\n\nAppArmor\nnetwork rules are broad and general and become more\nrestrictive as further information is specified.\n\neg.\n\nnetwork, #allow\naccess to all networking <br>\nnetwork tcp, #allow access to tcp <br>\nnetwork inet tcp, #allow access to tcp only for inet4\naddresses <br>\nnetwork inet6 tcp, #allow access to tcp only for inet6\naddresses <br>\nnetwork netlink raw, #allow access to AF_NETLINK\nSOCK_RAW\n\n<b>Mount\nRules</b> <br>\nAppArmor supports mount mediation and allows specifying\nfilesystem types and mount flags. The syntax of mount rules\nin AppArmor is based on the <b>mount</b>(8) command syntax.\nMount rules must contain one of the mount, remount or umount\nkeywords, but all mount conditions are optional. Unspecified\noptional conditionals are assumed to match all entries (eg,\nnot specifying fstype means all fstypes are matched). Due to\nthe complexity of the mount command and how options may be\nspecified, AppArmor allows specifying conditionals three\ndifferent ways:\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>1.</td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>If a conditional is specified using &rsquo;=&rsquo;,\nthen the rule only grants permission for mounts matching the\nexactly specified options. For example, an AppArmor policy\nwith the following rule:</td></tr>\n</table>\n\n<p style=\"margin-left:17%; margin-top: 1em\">mount\noptions=ro /dev/foo -E&lt;gt&gt; /mnt/,\n\n<p style=\"margin-left:17%; margin-top: 1em\">Would\nmatch:\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o ro\n/dev/foo /mnt\n\n<p style=\"margin-left:17%; margin-top: 1em\">but not either\nof these:\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o\nro,atime /dev/foo /mnt <br>\n$ mount -o rw /dev/foo /mnt\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\">2.</td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">If a conditional is specified\nusing &rsquo;in&rsquo;, then the rule grants permission for\nmounts matching any combination of the specified options.\nFor example, if an AppArmor policy has the following\nrule: </td></tr>\n</table>\n\n<p style=\"margin-left:17%; margin-top: 1em\">mount options\nin (ro,atime) /dev/foo -&gt; /mnt/,\n\n<p style=\"margin-left:17%; margin-top: 1em\">all of these\nmount commands will match:\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o ro\n/dev/foo /mnt <br>\n$ mount -o ro,atime /dev/foo /mnt <br>\n$ mount -o atime /dev/foo /mnt\n\n<p style=\"margin-left:17%; margin-top: 1em\">but none of\nthese will:\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o\nro,sync /dev/foo /mnt <br>\n$ mount -o ro,atime,sync /dev/foo /mnt <br>\n$ mount -o rw /dev/foo /mnt <br>\n$ mount -o rw,noatime /dev/foo /mnt <br>\n$ mount /dev/foo /mnt\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\">3.</td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">If multiple conditionals are\nspecified in a single mount rule, then the rule grants\npermission for each set of options. This provides a\nshorthand when writing mount rules which might help to\nlogically break up a conditional. For example, if an\nAppArmor policy has the following rule:</td></tr>\n</table>\n\n<p style=\"margin-left:17%; margin-top: 1em\">mount\noptions=ro options=atime\n\n<p style=\"margin-left:17%; margin-top: 1em\">both of these\nmount commands will match:\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o ro\n/dev/foo /mnt <br>\n$ mount -o atime /dev/foo /mnt\n\n<p style=\"margin-left:17%; margin-top: 1em\">but this one\nwill not:\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o\nro,atime /dev/foo /mnt\n\nNote that\nseparate mount rules are distinct and the options do not\naccumulate. For example, these AppArmor mount rules:\n\nmount\noptions=ro, <br>\nmount options=atime,\n\nare not\nequivalent to either of these mount rules:\n\nmount\noptions=(ro,atime), <br>\nmount options in (ro,atime),\n\nTo help clarify\nthe flexibility and complexity of mount rules, here are some\nexample rules with accompanying matching commands: <b><br>\nmount,</b>\n\n<p style=\"margin-left:17%;\">the &rsquo;mount&rsquo; rule\nwithout any conditionals is the most generic and allows any\nmount. Equivalent to &rsquo;mount fstype=** options=** **\n-&gt; /**&rsquo;.\n\n<p style=\"margin-left:11%;\"><b>mount /dev/foo,</b>\n\n<p style=\"margin-left:17%;\">allow mounting of /dev/foo\nanywhere with any options. Some matching mount commands:\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount\n/dev/foo /mnt <br>\n$ mount -t ext3 /dev/foo /mnt <br>\n$ mount -t vfat /dev/foo /mnt <br>\n$ mount -o ro,atime,noexec,nodiratime /dev/foo\n/srv/some/mountpoint\n\n<p style=\"margin-left:11%;\"><b>mount options=ro\n/dev/foo,</b>\n\n<p style=\"margin-left:17%;\">allow mounting of /dev/foo\nanywhere, as read only. Some matching mount commands:\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o ro\n/dev/foo /mnt <br>\n$ mount -o ro /dev/foo /some/where/else\n\n<p style=\"margin-left:11%;\"><b>mount options=(ro,atime)\n/dev/foo,</b>\n\n<p style=\"margin-left:17%;\">allow mount of /dev/foo\nanywhere, as read only and using inode access times. Some\nmatching mount commands:\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o\nro,atime /dev/foo /mnt <br>\n$ mount -o ro,atime /dev/foo /some/where/else\n\n<p style=\"margin-left:11%;\"><b>mount options in (ro,atime)\n/dev/foo,</b>\n\n<p style=\"margin-left:17%;\">allow mount of /dev/foo\nanywhere using some combination of &rsquo;ro&rsquo; and\n&rsquo;atime&rsquo; (see above). Some matching mount\ncommands:\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o ro\n/dev/foo /mnt <br>\n$ mount -o atime /dev/foo /some/where/else <br>\n$ mount -o ro,atime /dev/foo /some/other/place\n\n<p style=\"margin-left:11%;\"><b>mount options=ro /dev/foo,\nmount options=atime /dev/foo,</b>\n\n<p style=\"margin-left:17%;\">allow mount of /dev/foo\nanywhere as read only, and allow mount of /dev/foo anywhere\nusing inode access times. Note this is expressed as two\ndifferent rules. Matches:\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o ro\n/dev/foo /mnt/1 <br>\n$ mount -o atime /dev/foo /mnt/2\n\n<p style=\"margin-left:11%;\"><b>mount -&gt; /mnt/**,</b>\n\n<p style=\"margin-left:17%;\">allow mounting anything under a\ndirectory in /mnt/**. Some matching mount commands:\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount\n/dev/foo1 /mnt/1 <br>\n$ mount -o ro,atime,noexec,nodiratime /dev/foo2\n/mnt/deep/path/foo2\n\n<p style=\"margin-left:11%;\"><b>mount options=ro -&gt;\n/mnt/**,</b>\n\n<p style=\"margin-left:17%;\">allow mounting anything under\n/mnt/**, as read only. Some matching mount commands:\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o ro\n/dev/foo1 /mnt/1 <br>\n$ mount -o ro /dev/foo2 /mnt/deep/path/foo2\n\n<p style=\"margin-left:11%;\"><b>mount fstype=ext3\noptions=(rw,atime) /dev/sdb1 -&gt; /mnt/stick/,</b>\n\n<p style=\"margin-left:17%;\">allow mounting an ext3\nfilesystem in /dev/sdb1 on /mnt/stick as read/write and\nusing inode access times. Matches only:\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o\nrw,atime /dev/sdb1 /mnt/stick\n\n<p style=\"margin-left:11%;\"><b>mount options=(ro, atime)\noptions in (nodev, user) /dev/foo -&gt; /mnt/,</b>\n\n<p style=\"margin-left:17%;\">allow mounting /dev/foo on\n/mmt/ read only and using inode access times or allow\nmounting /dev/foo on /mnt/ with some combination of\n&rsquo;nodev&rsquo; and &rsquo;user&rsquo;. Matches\nonly:\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o\nro,atime /dev/foo /mnt <br>\n$ mount -o nodev /dev/foo /mnt <br>\n$ mount -o user /dev/foo /mnt <br>\n$ mount -o nodev,user /dev/foo /mnt\n\n<b>Pivot Root\nRules</b> <br>\nAppArmor mediates changing of the root filesystem through\nthe <a href=\"https://man.page/2/pivot_root\">pivot_root(2)</a> system call. The syntax of\n&rsquo;pivot_root&rsquo; rules in AppArmor is based on the\n<a href=\"https://man.page/2/pivot_root\">pivot_root(2)</a> system call parameters with the notable\nexception that the ordering is reversed. The path\ncorresponding to the put_old parameter of\n<a href=\"https://man.page/2/pivot_root\">pivot_root(2)</a> is optionally specified in the\n&rsquo;pivot_root&rsquo; rule using the\n&rsquo;oldroot=&rsquo; prefix.\n\nAppArmor\n&rsquo;pivot_root&rsquo; rules can specify a profile\ntransition to occur during the <a href=\"https://man.page/2/pivot_root\">pivot_root(2)</a> system\ncall. Note that AppArmor will only transition the process\ncalling <a href=\"https://man.page/2/pivot_root\">pivot_root(2)</a> to the new profile.\n\nThe paths\nspecified in &rsquo;pivot_root&rsquo; rules must end with\n&rsquo;/&rsquo; since they are directories.\n\nHere are some\nexample &rsquo;pivot_root&rsquo; rules:\n\n# Allow any\npivot <br>\npivot_root, <br>\n# Allow pivoting to any new root directory and putting the\nold root <br>\n# directory at /mnt/root/old/ <br>\npivot_root oldroot=/mnt/root/old/, <br>\n# Allow pivoting the root directory to /mnt/root/ <br>\npivot_root /mnt/root/, <br>\n# Allow pivoting to /mnt/root/ and putting the old root\ndirectory at <br>\n# /mnt/root/old/ <br>\npivot_root oldroot=/mnt/root/old/ /mnt/root/, <br>\n# Allow pivoting to /mnt/root/, putting the old root\ndirectory at <br>\n# /mnt/root/old/ and transition to the /mnt/root/sbin/init\nprofile <br>\npivot_root oldroot=/mnt/root/old/ /mnt/root/ -&gt;\n/mnt/root/sbin/init,\n\n<b>PTrace\nrules</b> <br>\nAppArmor supports mediation of <a href=\"https://man.page/2/ptrace\">ptrace(2)</a>. AppArmor\nPTrace rules are accumulated so that the granted PTrace\npermissions are the union of all the listed PTrace rule\npermissions.\n\nAppArmor PTrace\npermissions are implied when a rule does not explicitly\nstate an access list. By default, all PTrace permissions are\nimplied.\n\nThe trace and\ntracedby permissions govern <a href=\"https://man.page/2/ptrace\">ptrace(2)</a> while read and\nreadby govern certain <a href=\"https://man.page/5/proc\">proc(5)</a> filesystem accesses,\n<a href=\"https://man.page/2/kcmp\">kcmp(2)</a>, futexes (<a href=\"https://man.page/2/get_robust_list\">get_robust_list(2)</a>) and perf\ntrace events.\n\nFor a ptrace\noperation to be allowed the profile of the tracing process\nand the profile of the target task must both have the\ncorrect permissions. For example, the profile of the process\nattaching to another task must have the trace permission for\nthe target task&rsquo;s profile, and the task being traced\nmust have the tracedby permission for the tracing\nprocess&rsquo; profile.\n\nExample\nAppArmor PTrace rules:\n\n# Allow all\nPTrace access <br>\nptrace, <br>\n# Explicitly allow all PTrace access, <br>\nptrace (read, readby, trace, tracedby), <br>\n# Explicitly deny use of ptrace(2) <br>\ndeny ptrace (trace), <br>\n# Allow unconfined processes (eg, a debugger) to ptrace us\n<br>\nptrace (readby, tracedby) peer=unconfined, <br>\n# Allow ptrace of a process running under the /usr/bin/foo\nprofile <br>\nptrace (trace) peer=/usr/bin/foo,\n\n<b>Signal\nrules</b> <br>\nAppArmor supports mediation of <a href=\"https://man.page/7/signal\">signal(7)</a>. AppArmor\nsignal rules are accumulated so that the granted signal\npermissions are the union of all the listed signal rule\npermissions.\n\nAppArmor signal\npermissions are implied when a rule does not explicitly\nstate an access list. By default, all signal permissions are\nimplied.\n\nFor the sending\nof a signal to be allowed, the profile of the sending\nprocess and the profile of the target task must both have\nthe correct permissions. For example, the profile of a\nprocess sending a signal to another task must have the send\npermission for the target task&rsquo;s profile, and the task\nreceiving the signal must have a receive permission for the\nsending process&rsquo; profile.\n\nExample\nAppArmor signal rules:\n\n# Allow all\nsignal access <br>\nsignal, <br>\n# Explicitly deny sending the HUP and INT signals <br>\ndeny signal (send) set=(hup, int), <br>\n# Allow unconfined processes to send us signals <br>\nsignal (receive) peer=unconfined, <br>\n# Allow sending of signals to a process running under the\n/usr/bin/foo <br>\n# profile <br>\nsignal (send) peer=/usr/bin/foo, <br>\n# Allow checking for PID existence <br>\nsignal (receive, send) set=(&quot;exists&quot;), <br>\n# Allow us to signal ourselves using the built-in\n@{profile_name} variable <br>\nsignal peer=@{profile_name}, <br>\n# Allow two real-time signals <br>\nsignal set=(rtmin+0 rtmin+32),\n\n<b>DBus\nrules</b> <br>\nAppArmor supports DBus mediation. The mediation is performed\nin conjunction with the DBus daemon. The DBus daemon\nverifies that communications over the bus are permitted by\nAppArmor policy.\n\nAppArmor DBus\nrules are accumulated so that the granted DBus permissions\nare the union of all the listed DBus rule permissions.\n\nAppArmor DBus\nrules are broad and general and become more restrictive as\nfurther information is specified. Policy may be specified\ndown to the interface member level (method or signal name),\nhowever the contents of messages are not examined.\n\nSome AppArmor\nDBus permissions are not compatible with all AppArmor DBus\nrules. The &rsquo;bind&rsquo; permission cannot be used in\nmessage rules. The &rsquo;send&rsquo; and\n&rsquo;receive&rsquo; permissions cannot be used in service\nrules. The &rsquo;eavesdrop&rsquo; permission cannot be used\nin rules containing any conditionals outside of the\n&rsquo;bus&rsquo; conditional.\n\n\n&rsquo;r&rsquo;\nand &rsquo;read&rsquo; are synonyms for\n&rsquo;receive&rsquo;. &rsquo;w&rsquo; and\n&rsquo;write&rsquo; are synonyms for &rsquo;send&rsquo;.\n&rsquo;rw&rsquo; is a synonym for both &rsquo;send&rsquo;\nand &rsquo;receive&rsquo;.\n\nAppArmor DBus\npermissions are implied when a rule does not explicitly\nstate an access list. By default, all DBus permissions are\nimplied. Only message permissions are implied for message\nrules and only service permissions are implied for service\nrules.\n\nExample\nAppArmor DBus rules:\n\n# Allow all\nDBus access <br>\ndbus, <br>\n# Explicitly allow all DBus access, <br>\ndbus (send, receive, bind), <br>\n# Deny send/receive/bind access to the session bus <br>\ndeny dbus bus=session, <br>\n# Allow bind access for a particular name on any bus <br>\ndbus bind name=com.example.ExampleName, <br>\n# Allow receive access for a particular path and interface\n<br>\ndbus receive path=/com/example/path\ninterface=com.example.Interface, <br>\n# Deny send/receive access to the system bus for a\nparticular interface <br>\ndeny dbus bus=system interface=com.example.ExampleInterface,\n<br>\n# Allow send access for a particular path, interface,\nmember, and pair of <br>\n# peer names: <br>\ndbus send <br>\nbus=session <br>\npath=/com/example/path <br>\ninterface=com.example.Interface <br>\nmember=ExampleMethod <br>\n\npeer=(name=(com.example.ExampleName1|com.example.ExampleName2)),\n<br>\n# Allow receive access for all unconfined peers <br>\ndbus receive peer=(label=unconfined), <br>\n# Allow eavesdropping on the system bus <br>\ndbus eavesdrop bus=system, <br>\n# Allow and audit all eavesdropping <br>\naudit dbus eavesdrop,\n\n<b>Unix socket\nrules</b> <br>\nAppArmor supports fine grained mediation of unix domain\nabstract and anonymous sockets. Unix domain sockets with\nfile system paths are mediated via file access rules.\n\nAbstract unix\ndomain sockets is a nonportable Linux extension of unix\ndomain sockets, see <a href=\"https://man.page/7/unix\">unix(7)</a> for more information.\n\n<i>Unix socket\naddress paths</i>\n\nThe sun_path\ncomponent (aka the socket address) of a unix domain socket\nis specified by the\n\naddr=\n\nconditional. If\nan address conditional is not specified as part of a rule\nthen the rule matches both abstract and anonymous\nsockets.\n\nIn apparmor the\naddress of an abstract unix domain socket begins with the\n<i>@</i> character, similar to how they are reported (as\npaths) by netstat -x. The address then follows and may\ncontain pattern matching and any characters including the\nnull character. In apparmor null characters must be\nspecified by using an escape sequence <i>\\000</i> or\n<i>\\x00</i>. The pattern matching is the same as is used by\nfile path matching so * will not match <i>/</i> even though\nit has no special meaning with in an abstract socket name.\nEg.\n\nunix\naddr=@*,\n\nAutobound unix\ndomain sockets have a unix sun_path assigned to them by the\nkernel, as such specifying a policy based address is not\npossible. The autobinding of sockets can be controlled by\nspecifying the special <i>auto</i> keyword. Eg.\n\nunix\naddr=auto,\n\nTo indicate\nthat the rule only applies to auto binding of unix domain\nsockets. It is important to note this only applies to the\n<i>bind</i> permission as once the socket is bound to an\naddress it is indistinguishable from a socket that have an\naddr bound with a specified name. When the <i>auto</i>\nkeyword is used with other permissions or as part of a peer\naddr it will be replaced with a pattern that can match an\nautobound socket. Eg. For some kernels\n\nunix rw\naddr=auto,\n\nis transformed\nto\n\nunix rw\naddr=@[a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9],\n\nIt is important\nto note, this pattern may match abstract sockets that were\nnot autobound but have an addr that fits what is generated\nby the kernel when autobinding a socket.\n\nAnonymous unix\ndomain sockets have no sun_path associated with the socket\naddress, however it can be specified with the special\n<i>none</i> keyword to indicate the rule only applies to\nanonymous unix domain sockets. Eg.\n\nunix\naddr=none,\n\nIf the address\ncomponent of a rule is not specified then the rule applies\nto autobind, abstract and anonymous sockets.\n\n<i>Unix socket\npermissions</i>\n\nUnix domain\nsocket rules are accumulated so that the granted unix socket\npermissions are the union of all the listed unix rule\npermissions.\n\nUnix domain\nsocket rules are broad and general and become more\nrestrictive as further information is specified. Policy may\nbe specified down to the socket address (aka sun_path) and\nlabel level. The content of the communication is not\nexamined.\n\nUnix socket\nrule permissions are implied when a rule does not explicitly\nstate an access list. By default if a rule does not have an\naccess list all permissions that are compatible with the\nspecified set of local and peer conditionals are\nimplied.\n\nThe create,\nbind, listen, shutdown, getattr, setattr, getopt, and setopt\npermissions are local socket permissions. They are only\napplied to the local socket and can&rsquo;t be specified in\nrules that have a peer component. The accept permission\napplies to the combination of a local and peer socket. The\nconnect, send, and receive permissions are peer socket\npermissions.\n\nOnly the peer\nsocket permissions will be applied to rules that don&rsquo;t\nspecify permissions and contain a peer component.\n\n<i>Example Unix\ndomain socket rules:</i>\n\n# Allow all\npermissions to unix sockets <br>\nunix, <br>\n# Explicitly allow all unix permissions <br>\nunix (create, listen, accept, connect, send, receive,\ngetattr, setattr, setopt, getopt), <br>\n# Explicitly deny unix socket access <br>\ndeny unix, <br>\n# Allow create and use of abstract and anonymous sockets for\nprofile_name <br>\nunix peer=(label=@{profile_name}), <br>\n# Allow receiving via unix sockets from unconfined <br>\nunix (receive) peer=(label=unconfined), <br>\n# Allow getattr and shutdown on anonymous sockets <br>\nunix (getattr, shutdown) addr=none, <br>\n# Allow SOCK_STREAM connect, receive and send on an abstract\nsocket @bar <br>\n# with peer running under profile '/foo' <br>\nunix (connect, receive, send) type=stream\npeer=(label=/foo,addr=&quot;@bar&quot;), <br>\n# Allow accepting connections from and receiving from peer\nrunning under <br>\n# profile '/bar' on abstract socket '@foo' <br>\nunix (accept, receive) addr=@foo peer=(label=/bar),\n\n<i>Abstract\nunix domain sockets autobind</i>\n\nAbstract unix\ndomain sockets can autobind to an address. The autobind\naddress is a unique 5 digit string of decimal numbers, eg.\n@00001. There is nothing that prevents a task from manually\nbinding to addresses with a similar pattern so it is\nimpossible to reliably identify autobind addresses from a\nregular address.\n\n<i>Interaction\nof network rules and fine grained unix domain socket\nrules</i>\n\nThe coarse\ngrained networking rules can be used to control unix domain\nsockets as well. When fine grained unix domain socket\nmediation is available the coarse grained network rule is\nmapped into the equivalent unix socket rule.\n\nE.G.\n\nnetwork unix,\n=&gt; unix, <br>\nnetwork unix stream, =&gt; unix stream,\n\nFine grained\nmediation rules however can not be losslessly converted back\nto the coarse grained network rule; e.g.\n\nunix bind\naddr=@example,\n\nHas no exact\nmatch under coarse grained network rules, the closest match\nis the much wider permission rule of\n\nnetwork\nunix,\n\n\n<b>change_profile\nrules</b> <br>\nAppArmor supports self directed profile transitions via the\nchange_profile api. Change_profile rules control which\npermissions for which profiles a confined task can\ntransition to. The profile name can contain apparmor pattern\nmatching to specify different profiles.\n\nchange_profile\n-&gt; **,\n\nThe\nchange_profile api allows the transition to be delayed until\nwhen a task executes another application. If an exec rule\ntransition is specified for the application and the\nchange_profile api is used to make a transition at exec\ntime, the transition specified by the change_profile api\ntakes precedence.\n\nThe\nChange_profile permission can restrict which profiles can be\ntransitioned to based off of the executable name by\nspecifying the exec condition.\n\nchange_profile\n/bin/bash -&gt; new_profile,\n\nThe restricting\nof the transition profile to a given executable at exec time\nis only useful when then current task is allowed to make\ndynamic decisions about what confinement should be, but the\ndecision set needs to be controlled. A list of profiles or\nmultiple rules can be used to specify the profiles in the\nset. Eg.\n\nchange_profile\n/bin/bash -&gt;\n{new_profile1,new_profile2,new_profile3},\n\nAn exec rule\ncan be used to specify a transition for the executable, if\nthe transition should be allowed even if the change_profile\napi has not been used to select a transition for those\navailable in the change_profile rule set. Eg.\n\n/bin/bash Px\n-&gt; new_profile1, <br>\nchange_profile /bin/bash -&gt;\n{new_profile1,new_profile2,new_profile3},\n\nThe exec mode\ndictates whether or not the Linux Kernel&rsquo;s\n<b>unsafe_exec</b> routines should be used to scrub the\nenvironment, similar to setuid programs. (See\n<b>ld.so</b>(8) for some information on setuid/setgid\nenvironment scrubbing.) The <b>safe</b> mode sets up\nenvironment scrubbing to occur when the new application is\nexecuted and <b>unsafe</b> mode disables AppArmor&rsquo;s\nrequirement for environment scrubbing (the kernel and/or\nlibc may still require environment scrubbing). An exec mode\ncan only be specified when an exec condition is present.\n\nchange_profile\nsafe /bin/bash -&gt; new_profile,\n\nNot all kernels\nsupport <b>safe</b> mode and the parser will downgrade rules\nto <b>unsafe</b> mode in that situation. If no exec mode is\nspecified, the default is <b>safe</b> mode in kernels that\nsupport it.\n\n<b>rlimit\nrules</b> <br>\nAppArmor can set and control the resource limits associated\nwith a profile as described in the <a href=\"https://man.page/2/setrlimit\">setrlimit(2)</a> man\npage.\n\nThe AppArmor\nrlimit controls allow setting of limits and restricting\nchanges of them and these actions can be audited.\nEnforcement of the set limits is handled by the standard\nkernel enforcement mechanism for rlimits and will not result\nin an audited apparmor message if the limit is enforced.\n\nIf a profile\ndoes not have an rlimit rule associated with a given rlimit\nthen the rlimit is left alone and regular access, including\nchanging the limit, is allowed. However if the profile sets\nan rlimit then the current limit is checked and if greater\nthan the limit specified in the rule it will be changed to\nthe specified limit.\n\nAppArmor rlimit\nrules control the hard limit of an application and ensure\nthat if the hard limit is lowered that the soft limit does\nnot exceed the hard limit value.\n\nEg.\n\nset rlimit data\n&lt;= 100M, <br>\nset rlimit nproc &lt;= 10, <br>\nset rlimit nice &lt;= 5,\n\n\n<b>Variables</b>\n<br>\nAppArmor&rsquo;s policy language allows embedding variables\ninto file rules to enable easier configuration for some\ncommon (and pervasive) setups. Variables may have multiple\nvalues assigned, but any variable assignments must be made\nbefore the start of the profile.\n\nThe parser will\nautomatically expand variables to include all values that\nthey have been assigned; it is an error to reference a\nvariable without setting at least one value. You can use\nempty quotes (&quot;&quot;) to explicitly add an empty\nvalue.\n\nAt the time of\nthis writing, the following variables are defined in the\nprovided AppArmor policy:\n\n@{HOME} <br>\n@{HOMEDIRS} <br>\n@{multiarch} <br>\n@{pid} <br>\n@{pids} <br>\n@{PROC} <br>\n@{securityfs} <br>\n@{apparmorfs} <br>\n@{sys} <br>\n@{tid} <br>\n@{run} <br>\n@{XDG_DESKTOP_DIR} <br>\n@{XDG_DOWNLOAD_DIR} <br>\n@{XDG_TEMPLATES_DIR} <br>\n@{XDG_PUBLICSHARE_DIR} <br>\n@{XDG_DOCUMENTS_DIR} <br>\n@{XDG_MUSIC_DIR} <br>\n@{XDG_PICTURES_DIR} <br>\n@{XDG_VIDEOS_DIR}\n\nThese are\ndefined in files in <i>/etc/apparmor.d/tunables</i> and are\nused in many of the abstractions described later.\n\nYou may also\nadd files in <i>/etc/apparmor.d/tunables/home.d</i> for\nsite-specific customization of <b>@{ <small>HOMEDIRS</small>\n}</b>, <i>/etc/apparmor.d/tunables/multiarch.d</i> for\n<b>@{multiarch}</b> and\n<i>/etc/apparmor.d/tunables/xdg-user-dirs.d</i> for\n<b>@{XDG_*}</b>.\n\nThe special\n<b>@{profile_name}</b> variable is set to the profile name\nand may be used in all policy.\n\n<b>Alias\nrules</b> <br>\nAppArmor also provides alias rules for remapping paths for\nsite-specific layouts. They are an alternative form of path\nrewriting to using variables, and are done after variable\nresolution. Alias rules must occur within the preamble of\nthe profile. System-wide aliases are found in\n<i>/etc/apparmor.d/tunables/alias</i>, which is included by\n<i>/etc/apparmor.d/tunables/global</i>.\n<i>/etc/apparmor.d/tunables/global</i> is typically included\nat the beginning of an AppArmor profile.\n\n\n<b>Globbing</b>\n<br>\nFile resources may be specified with a globbing syntax\nsimilar to that used by popular shells, such as\n<a href=\"https://man.page/1/csh\">csh(1)</a>, <a href=\"https://man.page/1/bash\">bash(1)</a>, <a href=\"https://man.page/1/zsh\">zsh(1)</a>.\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>*</b></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>can substitute for any number of characters, excepting\n&rsquo;/&rsquo; </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>**</b></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>can substitute for any number of characters, including\n&rsquo;/&rsquo; </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>?</b></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>can substitute for any single character excepting\n&rsquo;/&rsquo; </td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>[abc]</b>\n\n<p style=\"margin-left:17%;\">will substitute for the single\ncharacter a, b, or c\n\n<p style=\"margin-left:11%;\"><b>[a-c]</b>\n\n<p style=\"margin-left:17%;\">will substitute for the single\ncharacter a, b, or c\n\n<p style=\"margin-left:11%;\"><b>[^a-c]</b>\n\n<p style=\"margin-left:17%;\">will substitute for any single\ncharacter not matching a, b or c\n\n<p style=\"margin-left:11%;\"><b>{ab,cd}</b>\n\n<p style=\"margin-left:17%;\">will expand to one rule to\nmatch ab, one rule to match cd\n\nWhen AppArmor\nlooks up a directory the pathname being looked up will end\nwith a slash (e.g., <i>/var/tmp/</i>); otherwise it will not\nend with a slash. Only rules that match a trailing slash\nwill match directories. Some examples, none matching the\n<i>/tmp/</i> directory itself, are: <b><br>\n/tmp/*</b>\n\n<p style=\"margin-left:17%;\">Files directly in\n<i>/tmp</i>.\n\n<p style=\"margin-left:11%;\"><b>/tmp/*/</b>\n\n<p style=\"margin-left:17%;\">Directories directly in\n<i>/tmp</i>.\n\n<p style=\"margin-left:11%;\"><b>/tmp/**</b>\n\n<p style=\"margin-left:17%;\">Files and directories anywhere\nunderneath <i>/tmp</i>.\n\n<p style=\"margin-left:11%;\"><b>/tmp/**/</b>\n\n<p style=\"margin-left:17%;\">Directories anywhere underneath\n<i>/tmp</i>.\n\n<b>Rule\nQualifiers</b> <br>\nThere are several rule qualifiers that can be applied to\npermission rules. Rule qualifiers can modify the rule and/or\npermissions within the rule. <b><br>\nallow</b>\n\n<p style=\"margin-left:17%;\">Specifies that permissions\nrequests that match the rule are allowed. This is the\ndefault value for rules and does not need to be specified.\nConflicts with the <i>deny</i> qualifier.\n\n<p style=\"margin-left:11%;\"><b>audit</b>\n\n<p style=\"margin-left:17%;\">Specifies that permissions\nrequests that match the rule should be recorded to the audit\nlog.\n\n<p style=\"margin-left:11%;\"><b>deny</b>\n\n<p style=\"margin-left:17%;\">Specifies that permissions\nrequests that match the rule should be denied without\nlogging. Can be combined with &rsquo;audit&rsquo; to enable\nlogging. Conflicts with the <i>allow</i> qualifier.\n\n<p style=\"margin-left:11%;\"><b>owner</b>\n\n<p style=\"margin-left:17%;\">Specifies that the task must\nhave the same euid/fsuid as the object being referenced by\nthe permission check.\n\n<i>Qualifier\nBlocks</i>\n\nRule Qualifiers\ncan be applied to multiple rules at a time by grouping the\nrules into a rule block.\n\naudit { <br>\n/foo r, <br>\nnetwork, <br>\n}\n\n<b>#include\nmechanism</b> <br>\nAppArmor provides an easy abstraction mechanism to group\ncommon access requirements; this abstraction is an extremely\nflexible way to grant site-specific rights and makes writing\nnew AppArmor profiles very simple by assembling the needed\nbuilding blocks for any given program.\n\nThe use of\n&rsquo;#include&rsquo; is modelled directly after\n<a href=\"https://man.page/1/cpp\">cpp(1)</a>; its use will replace the\n&rsquo;#include&rsquo; statement with the specified\nfile&rsquo;s contents. The leading &rsquo;#&rsquo; is\noptional, and the &rsquo;#include&rsquo; keyword can be\nfollowed by an option conditional &rsquo;if exists&rsquo;\nthat specifies profile compilation should continue if the\nspecified file or directory is not found.\n\n<b>#include\n&quot;/absolute/path&quot;</b> specifies that\n<i>/absolute/path</i> should be used. <b>#include\n&quot;relative/path&quot;</b> specifies that\n<i>relative/path</i> should be used, where the path is\nrelative to the current working directory. <b>#include\n&lt;magic/path&gt;</b> is the most common usage; it will\nload <i>magic/path</i> relative to a directory specified to\n<b>apparmor_parser</b>(8). <i>/etc/apparmor.d/</i> is the\nAppArmor default.\n\nThe supplied\nAppArmor profiles follow several conventions; the\nabstractions stored in <i>/etc/apparmor.d/abstractions/</i>\nare some large clusters that are used in most profiles. What\nfollows are short descriptions of how some of the\nabstractions are used. <i><br>\nabstractions/audio</i>\n\n<p style=\"margin-left:17%;\">Includes accesses to device\nfiles used for audio applications.\n\n\n<p style=\"margin-left:11%;\"><i>abstractions/authentication</i>\n\n<p style=\"margin-left:17%;\">Includes access to files and\nservices typically necessary for services that perform user\nauthentication.\n\n<p style=\"margin-left:11%;\"><i>abstractions/base</i>\n\n<p style=\"margin-left:17%;\">Includes files that should be\nreadable and writable in all profiles.\n\n<p style=\"margin-left:11%;\"><i>abstractions/bash</i>\n\n<p style=\"margin-left:17%;\">Includes many files used by\nbash; useful for interactive shells and programs that call\n<a href=\"https://man.page/3/system\">system(3)</a>.\n\n\n<p style=\"margin-left:11%;\"><i>abstractions/consoles</i>\n\n<p style=\"margin-left:17%;\">Includes read and write access\nto the device files controlling the virtual console,\n<b>sshd</b>(8), <a href=\"https://man.page/1/xterm\">xterm(1)</a>, etc. This abstraction is\nneeded for many programs that interact with users.\n\n<p style=\"margin-left:11%;\"><i>abstractions/fonts</i>\n\n<p style=\"margin-left:17%;\">Includes access to fonts and\nthe font libraries.\n\n<p style=\"margin-left:11%;\"><i>abstractions/gnome</i>\n\n<p style=\"margin-left:17%;\">Includes read and write access\nto <small>GNOME</small> configuration files, as well as read\naccess to <small>GNOME</small> libraries.\n\n<p style=\"margin-left:11%;\"><i>abstractions/kde</i>\n\n<p style=\"margin-left:17%;\">Includes read and write access\nto <small>KDE</small> configuration files, as well as read\naccess to <small>KDE</small> libraries.\n\n\n<p style=\"margin-left:11%;\"><i>abstractions/kerberosclient</i>\n\n<p style=\"margin-left:17%;\">Includes file access rules\nneeded for common kerberos clients.\n\n\n<p style=\"margin-left:11%;\"><i>abstractions/nameservice</i>\n\n<p style=\"margin-left:17%;\">Includes file rules to allow\n<small>DNS, LDAP, NIS, SMB,</small> user and group password\ndatabases, services, and protocols lookups.\n\n<p style=\"margin-left:11%;\"><i>abstractions/perl</i>\n\n<p style=\"margin-left:17%;\">Includes read access to perl\nmodules.\n\n<p style=\"margin-left:11%;\"><i>abstractions/user-download\n<br>\nabstractions/user-mail <br>\nabstractions/user-manpages <br>\nabstractions/user-tmp <br>\nabstractions/user-write</i>\n\n<p style=\"margin-left:17%;\">Some profiles for typical\n&quot;user&quot; programs will use these include files to\ndescribe rights that users have in the system.\n\n<p style=\"margin-left:11%;\"><i>abstractions/wutmp</i>\n\n<p style=\"margin-left:17%;\">Includes write access to files\nused to maintain <a href=\"https://man.page/5/wtmp\">wtmp(5)</a> and <a href=\"https://man.page/5/utmp\">utmp(5)</a>\ndatabases, used with the w(1) and associated commands.\n\n<p style=\"margin-left:11%;\"><i>abstractions/X</i>\n\n<p style=\"margin-left:17%;\">Includes read access to\nlibraries, configuration files, X authentication files, and\nthe X socket.\n\nSome of the\nabstractions rely on variables that are set in files in the\n<i>/etc/apparmor.d/tunables/</i> directory. These variables\nare currently <b>@{ <small>HOME</small> }</b> and <b>@{\n<small>HOMEDIRS</small> }</b>. Variables cannot be set in\nprofile scope; they can only be set before the profile.\nTherefore, any profiles that use abstractions should either\n<b>#include &lt;tunables/global&gt;</b> or otherwise ensure\nthat <b>@{ <small>HOME</small> }</b> and <b>@{\n<small>HOMEDIRS</small> }</b> are set before starting the\nprofile definition. The <b>aa-autodep</b>(8) and\n<b>aa-genprof</b>(8) utilities will automatically emit\n<b>#include &lt;tunables/global&gt;</b> in generated\nprofiles.\n\n<b>Feature\n<small>ABI</small></b> <br>\nThe feature abi tells AppArmor which feature set the policy\nwas developed under. This is important to ensure that\nkernels with a different feature set don&rsquo;t enforce\nfeatures that the policy doesn&rsquo;t support, which can\nresult in unexpected application failures.\n\nWhen policy is\ncompiled both the kernel feature abi and policy feature abi\nare consulted to build a policy that will work for the\nsystem&rsquo;s kernel.\n\nIf the kernel\nsupports a feature not supported by the policy then policy\nwill be built so that the kernel does <small>NOT</small>\nenforce that feature.\n\nIf the policy\nsupports a feature not supported by the kernel the compile\nmay downgrade the rule with the feature to something the\nkernel supports, drop the rule completely, or fail the\ncompile.\n\nIf the policy\nabi is specified as <b>kernel</b> then the running\nkernel&rsquo;s abi will be used. This should never be used\nin shipped policy as it can cause system breakage when a new\nkernel is installed.\n\n\n<i><small>ABI</small>\ncompatibility with AppArmor 2.x</i>\n\nAppArmor 3\nremains compatible with AppArmor 2.x by detecting when a\nprofile does not have a feature <small>ABI</small>\nspecified. In this case the policy compile will either apply\nthe pinned feature <small>ABI</small> as specified by the\nconfig file or the command line, or if neither of those are\napplied by using a default feature <small>ABI.</small>\n\nIt is important\nto note that the default feature <small>ABI</small> does not\nsupport new features added in AppArmor 3 or later.\n\n<h2>EXAMPLE\n<a name=\"EXAMPLE\"></a>\n</h2>\n\n\nAn example\nAppArmor profile:\n\n# which feature\nabi the policy was developed with <br>\nabi &lt;abi/3.0&gt;, <br>\n# a variable definition in the preamble <br>\n@{HOME} = /home/*/ /root/ <br>\n# a comment about foo. <br>\n/usr/bin/foo { <br>\n/bin/mount ux, <br>\n/dev/{,u}random r, <br>\n/etc/ld.so.cache r, <br>\n/etc/foo.conf r, <br>\n/etc/foo/* r, <br>\n/lib/ld-*.so* rmix, <br>\n/lib/lib*.so* r, <br>\n/proc/[0-9]** r, <br>\n/usr/lib/** r, <br>\n/tmp/foo.pid wr, <br>\n/tmp/foo.* lrw, <br>\n/@{HOME}/.foo_file rw, <br>\n/usr/bin/baz Cx -&gt; baz, <br>\n# a comment about foo's hat (subprofile), bar. <br>\n^bar { <br>\n/lib/ld-*.so* rmix, <br>\n/usr/bin/bar rmix, <br>\n/var/spool/* rwl, <br>\n} <br>\n# a comment about foo's subprofile, baz. <br>\nprofile baz { <br>\n#include &lt;abstractions/bash&gt; <br>\nowner /proc/[0-9]*/stat r, <br>\n/bin/bash ixr, <br>\n/var/lib/baz/ r, <br>\nowner /var/lib/baz/* rw, <br>\n} <br>\n}\n\n<h2>FILES\n<a name=\"FILES\"></a>\n</h2>\n\n\n\n<i>/etc/init.d/boot.apparmor\n<br>\n/etc/apparmor.d/</i>\n\n<h2>KNOWN BUGS\n<a name=\"KNOWN BUGS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">Mount options support the use of\npattern matching but mount flags are not correctly\nintersected against specified patterns. Eg, &rsquo;mount\noptions=**,&rsquo; should be equivalent to\n&rsquo;mount,&rsquo;, but it is not. ( <small>LP:</small>\n#965690) </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The fstype may not be matched against when certain mount\ncommand flags are used. Specifically fstype matching\ncurrently only works when creating a new mount and not\nremount, bind, etc.</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Mount rules with multiple &rsquo;options&rsquo;\nconditionals are not applied as documented but instead\nmerged such that &rsquo;options in (ro,nodev) options in\n(atime)&rsquo; is equivalent to &rsquo;options in\n(ro,nodev,atime)&rsquo;. </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>When specifying mount options with the &rsquo;in&rsquo;\nconditional, both the positive and negative values match\nwhen specifying one or the other. Eg, &rsquo;rw&rsquo;\nmatches when &rsquo;ro&rsquo; is specified and\n&rsquo;dev&rsquo; matches when &rsquo;nodev&rsquo; is\nspecified such that &rsquo;options in (ro,nodev)&rsquo; is\nequivalent to &rsquo;options in (rw,dev)&rsquo;.</td></tr>\n</table>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<a href=\"https://man.page/7/apparmor\">apparmor(7)</a>,\n<b>apparmor_parser</b>(8), <a href=\"https://man.page/7/apparmor_xattrs\">apparmor_xattrs(7)</a>,\n<a href=\"https://man.page/1/aa-complain\">aa-complain(1)</a>, <a href=\"https://man.page/1/aa-enforce\">aa-enforce(1)</a>,\n<a href=\"https://man.page/2/aa_change_hat\">aa_change_hat(2)</a>, <a href=\"https://man.page/5/mod_apparmor\">mod_apparmor(5)</a>, and\n&lt;https://wiki.apparmor.net&gt;.","body":"\n\n<h1 align=\"center\">APPARMOR.D</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">apparmor.d -\nsyntax of security profiles for AppArmor.</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">AppArmor\nprofiles describe mandatory access rights granted to given\nprograms and are fed to the AppArmor policy enforcement\nmodule using <b>apparmor_parser</b>(8). This man page\ndescribes the format of the AppArmor configuration files;\nsee <a href=\"https://man.page/7/apparmor\">apparmor(7)</a> for an overview of AppArmor.</p>\n\n<h2>FORMAT\n<a name=\"FORMAT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">AppArmor policy\nis written in a declarative language, in which the order of\nrules within a given section or block does not matter.\nPolicy is by convention written so that it is contained in\nmultiple files, but this is not a requirement. It could just\nas easily be written in a single file. The policy language\nis compiled to a architecture independent binary format that\nis loaded into the kernel for enforcement.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The base unit\nof AppArmor confinement is the profile. It contains a set of\nrules which are enforced when the profile is associated with\na running program. The rules within the profile provide a\nwhitelist of different permission that are allowed, along\nwith a few other special rules.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The text in\nAppArmor policy is split into two sections, the preamble and\nthe profile definitions. The preamble must occur at the head\nof the file and once profile definitions begin, no more\npreamble rules are allowed (even in files that are included\ninto the profile). When AppArmor policy (set of profiles) is\nsplit across multiple files, each file can have its own\npreamble section, which may be the same or different from\nother files preamble. Files included within a profile\nsection can not have a preamble section.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nis a BNF-style description of AppArmor policy configuration\nfiles; see below for an example AppArmor policy file.\nAppArmor configuration files are line-oriented; <b>#</b>\nintroduces a comment, similar to shell scripting languages.\nThe exception to this rule is that <b>#include</b> will\n<i>include</i> the contents of a file inline to the policy;\nthis behaviour is modelled after <a href=\"https://man.page/1/cpp\">cpp(1)</a>.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PROFILE\nFILE</small></b> = ( [ <i><small>PREAMBLE</small></i> ] [\n<i><small>PROFILE</small></i> ] )*</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PREAMBLE</small></b>\n= ( <i><small>COMMENT</small></i> | <i><small>VARIABLE\nASSIGNMENT</small></i> | <i><small>ALIAS RULE</small></i> |\n<i><small>INCLUDE</small></i> | <i><small>ABI</small></i> )*\n<br>\nVariable assignment and alias rules must come before the\nprofile.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>VARIABLE\nASSIGNMENT</small></b> = <i><small>VARIABLE</small></i>\n(&rsquo;=&rsquo; | &rsquo;+=&rsquo;) (space separated\nvalues)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>VARIABLE</small></b>\n= &rsquo;@{&rsquo; <i><small>ALPHA</small></i> [ (\n<i><small>ALPHANUMERIC</small></i> | &rsquo;_&rsquo; ) ... ]\n&rsquo;}&rsquo;</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>ALIAS\nRULE</small></b> = &rsquo;alias&rsquo; <i><small>ABS\nPATH</small></i> &rsquo;-&gt;&rsquo; <i><small>REWRITTEN ABS\nPATH</small></i> &rsquo;,&rsquo;</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>INCLUDE</small></b>\n= ( &rsquo;#include&rsquo; | &rsquo;include&rsquo; ) [\n&rsquo;if exists&rsquo; ] ( <i><small>ABS PATH</small></i> |\n<i><small>MAGIC PATH</small></i> )</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>ABI</small></b>\n= ( &rsquo;abi&rsquo; ) ( <i><small>ABS PATH</small></i> |\n<i><small>MAGIC PATH</small></i> ) &rsquo;,&rsquo;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>ABS\nPATH</small></b> = &rsquo;&quot;&rsquo; path\n&rsquo;&quot;&rsquo; (the path is passed to\n<a href=\"https://man.page/2/open\">open(2)</a>)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>MAGIC\nPATH</small></b> = &rsquo;&lt;&rsquo; relative path\n&rsquo;&gt;&rsquo; <br>\nThe path is relative to <i>/etc/apparmor.d/</i>.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>COMMENT</small></b>\n= &rsquo;#&rsquo; <i><small>TEXT</small></i> [\n&rsquo;\\r&rsquo; ] &rsquo;\\n&rsquo;</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>TEXT</small></b>\n= any characters</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PROFILE</small></b>\n= ( <i><small>PROFILE HEAD</small></i> ) [\n<i><small>ATTACHMENT SPECIFICATION</small></i> ] [\n<i><small>PROFILE FLAG CONDS</small></i> ] &rsquo;{&rsquo; (\n<i><small>RULES</small></i> )* &rsquo;}&rsquo;</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PROFILE\nHEAD</small></b> = [ &rsquo;profile&rsquo; ]\n<i><small>FILEGLOB</small></i> | &rsquo;profile&rsquo;\n<i><small>PROFILE NAME</small></i></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>PROFILE\nNAME</b></small> ( <i><small>UNQUOTED PROFILE\nNAME</small></i> | <i><small>QUOTED PROFILE NAME</small></i>\n)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>QUOTED\nPROFILE NAME</small></b> = &rsquo;&quot;&rsquo;\n<i><small>UNQUOTED PROFILE NAME</small></i>\n&rsquo;&quot;&rsquo;</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNQUOTED\nPROFILE NAME</small></b> = (must start with alphanumeric\ncharacter (after variable expansion), or &rsquo;/&rsquo;\n<b><small>AARE</small></b> have special meanings; see below.\nMay include <i><small>VARIABLE</small></i> . Rules with\nembedded spaces or tabs must be quoted.)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>ATTACHMENT\nSPECIFICATION</small></b> = [\n<i><small>PROFILE_EXEC_COND</small></i> ] [\n<i><small>PROFILE XATTR CONDS</small></i> ]</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PROFILE_EXEC_COND</small></b>\n= <i><small>FILEGLOB</small></i></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>PROFILE\nXATTR CONDS</b></small> = [ &rsquo;xattrs=&rsquo; ]\n&rsquo;(&rsquo; comma or white space separated list of\n<i><small>PROFILE XATTR</small></i> &rsquo;)&rsquo;</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PROFILE\nXATTR</small></b> = extended attribute name &rsquo;=&rsquo;\n<i><small>XATTR VALUE FILEGLOB</small></i></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>XATTR\nVALUE FILEGLOB</b></small> =\n<i><small>FILEGLOB</small></i></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>PROFILE\nFLAG CONDS</b></small> = [ &rsquo;flags=&rsquo; ]\n&rsquo;(&rsquo; comma or white space separated list of\n<i><small>PROFILE FLAGS</small></i> &rsquo;)&rsquo;</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PROFILE\nFLAGS</small></b> = <i><small>PROFILE MODE</small></i> |\n<i><small>AUDIT_MODE</small></i> |\n&rsquo;mediate_deleted&rsquo; |\n&rsquo;attach_disconnected&rsquo; |\n&rsquo;chroot_relative&rsquo;</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PROFILE\nMODE</small></b> = &rsquo;enforce&rsquo; |\n&rsquo;complain&rsquo; | &rsquo;kill&rsquo; |\n&rsquo;unconfined&rsquo;</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>AUDIT\nMODE</small></b> = &rsquo;audit&rsquo;</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>RULES</small></b>\n= [ ( <i><small>LINE RULES</small></i> | <i><small>COMMA\nRULES</small></i> &rsquo;,&rsquo; | <i><small>BLOCK\nRULES</small></i> )</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>LINE\nRULES</small></b> = ( <i><small>COMMENT</small></i> |\n<i><small>INCLUDE</small></i> ) [ &rsquo;\\r&rsquo; ]\n&rsquo;\\n&rsquo;</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>COMMA\nRULES</small></b> = ( <i><small>CAPABILITY RULE</small></i>\n| <i><small>NETWORK RULE</small></i> | <i><small>MOUNT\nRULE</small></i> | <i><small>PIVOT ROOT RULE</small></i> |\n<i><small>UNIX RULE</small></i> | <i><small>FILE\nRULE</small></i> | <i><small>LINK RULE</small></i> |\n<i><small>CHANGE_PROFILE RULE</small></i> | <i><small>RLIMIT\nRULE</small></i> | <i><small>DBUS RULE</small></i> )</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>BLOCK\nRULES</small></b> = ( <i><small>SUBPROFILE</small></i> |\n<i><small>HAT</small></i> | <i><small>QUALIFIER\nBLOCK</small></i> )</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>SUBPROFILE</small></b>\n= &rsquo;profile&rsquo; <i><small>PROFILE NAME</small></i> [\n<i><small>ATTACHMENT SPECIFICATION</small></i> ] [\n<i><small>PROFILE FLAG CONDS</small></i> ] &rsquo;{&rsquo; (\n<i><small>RULES</small></i> )* &rsquo;}&rsquo;</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>HAT</small></b>\n= (&rsquo;hat&rsquo; | &rsquo;^&rsquo;)\n<i><small>HATNAME</small></i> [ <i><small>PROFILE FLAG\nCONDS</small></i> ] &rsquo;{&rsquo; (\n<i><small>RULES</small></i> )* &rsquo;}&rsquo;</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>HATNAME</small></b>\n= (must start with alphanumeric character. See\n<a href=\"https://man.page/2/aa_change_hat\">aa_change_hat(2)</a> for a description of how this\n&quot;hat&quot; is used. If &rsquo;^&rsquo; is used to start\na hat then there is no space between the &rsquo;^&rsquo; and\n<i><small>HATNAME</small></i> )</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>QUALIFIER\nBLOCK</small></b> = <i><small>QUALIFIERS\nBLOCK</small></i></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>ACCESS\nTYPE</b></small> = ( &rsquo;allow&rsquo; |\n&rsquo;deny&rsquo; )</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>QUALIFIERS</small></b>\n= [ &rsquo;audit&rsquo; ] [ <i><small>ACCESS\nTYPE</small></i> ]</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>CAPABILITY\nRULE</small></b> = [ <i><small>QUALIFIERS</small></i> ]\n&rsquo;capability&rsquo; [ <i><small>CAPABILITY\nLIST</small></i> ]</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>CAPABILITY\nLIST</small></b> = ( <i><small>CAPABILITY</small></i> )+</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>CAPABILITY</small></b>\n= (lowercase capability name without &rsquo;\n<small>CAP_</small> &rsquo; prefix; see\n<a href=\"https://man.page/7/capabilities\">capabilities(7)</a>)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>NETWORK\nRULE</small></b> = [ <i><small>QUALIFIERS</small></i> ]\n&rsquo;network&rsquo; [ <i><small>DOMAIN</small></i> ] [\n<i><small>TYPE</small></i> | <i><small>PROTOCOL</small></i>\n]</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DOMAIN</small></b>\n= ( &rsquo;unix&rsquo; | &rsquo;inet&rsquo; |\n&rsquo;ax25&rsquo; | &rsquo;ipx&rsquo; |\n&rsquo;appletalk&rsquo; | &rsquo;netrom&rsquo; |\n&rsquo;bridge&rsquo; | &rsquo;atmpvc&rsquo; |\n&rsquo;x25&rsquo; | &rsquo;inet6&rsquo; | &rsquo;rose&rsquo;\n| &rsquo;netbeui&rsquo; | &rsquo;security&rsquo; |\n&rsquo;key&rsquo; | &rsquo;netlink&rsquo; |\n&rsquo;packet&rsquo; | &rsquo;ash&rsquo; |\n&rsquo;econet&rsquo; | &rsquo;atmsvc&rsquo; |\n&rsquo;rds&rsquo; | &rsquo;sna&rsquo; | &rsquo;irda&rsquo; |\n&rsquo;pppox&rsquo; | &rsquo;wanpipe&rsquo; |\n&rsquo;llc&rsquo; | &rsquo;ib&rsquo; | &rsquo;mpls&rsquo; |\n&rsquo;can&rsquo; | &rsquo;tipc&rsquo; |\n&rsquo;bluetooth&rsquo; | &rsquo;iucv&rsquo; |\n&rsquo;rxrpc&rsquo; | &rsquo;isdn&rsquo; |\n&rsquo;phonet&rsquo; | &rsquo;ieee802154&rsquo; |\n&rsquo;caif&rsquo; | &rsquo;alg&rsquo; | &rsquo;nfc&rsquo; |\n&rsquo;vsock&rsquo; | &rsquo;kcm&rsquo; |\n&rsquo;qipcrtr&rsquo; | &rsquo;smc&rsquo; |\n&rsquo;xdp&rsquo; | &rsquo;mctp&rsquo; ) &rsquo;,&rsquo;</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>TYPE</small></b>\n= ( &rsquo;stream&rsquo; | &rsquo;dgram&rsquo; |\n&rsquo;seqpacket&rsquo; | &rsquo;rdm&rsquo; |\n&rsquo;raw&rsquo; | &rsquo;packet&rsquo; )</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PROTOCOL</small></b>\n= ( &rsquo;tcp&rsquo; | &rsquo;udp&rsquo; |\n&rsquo;icmp&rsquo; )</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>MOUNT\nRULE</small></b> = ( <i><small>MOUNT</small></i> |\n<i><small>REMOUNT</small></i> | <i><small>UMOUNT</small></i>\n)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>MOUNT</small></b>\n= [ <i><small>QUALIFIERS</small></i> ] &rsquo;mount&rsquo; [\n<i><small>MOUNT CONDITIONS</small></i> ] [ <i><small>SOURCE\nFILEGLOB</small></i> ] [ &rsquo;-&gt;&rsquo; [\n<i><small>MOUNTPOINT FILEGLOB</small></i> ]</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>REMOUNT</small></b>\n= [ <i><small>QUALIFIERS</small></i> ] &rsquo;remount&rsquo;\n[ <i><small>MOUNT CONDITIONS</small></i> ]\n<i><small>MOUNTPOINT FILEGLOB</small></i></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>UMOUNT</b></small>\n= [ <i><small>QUALIFIERS</small></i> ] &rsquo;umount&rsquo;\n[ <i><small>MOUNT CONDITIONS</small></i> ]\n<i><small>MOUNTPOINT FILEGLOB</small></i></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>MOUNT\nCONDITIONS</b></small> = [ ( &rsquo;fstype&rsquo; |\n&rsquo;vfstype&rsquo; ) ( &rsquo;=&rsquo; | &rsquo;in&rsquo;\n) <i><small>MOUNT FSTYPE EXPRESSION</small></i> ] [\n&rsquo;options&rsquo; ( &rsquo;=&rsquo; | &rsquo;in&rsquo; )\n<i><small>MOUNT FLAGS EXPRESSION</small></i> ]</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>MOUNT\nFSTYPE EXPRESSION</small></b> = ( <i><small>MOUNT FSTYPE\nLIST</small></i> | <i><small>MOUNT EXPRESSION</small></i>\n)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>MOUNT\nFSTYPE LIST</small></b> = Comma separated list of valid\nfilesystem and virtual filesystem types (eg ext4, debugfs,\ndevfs, etc)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>MOUNT\nFLAGS EXPRESSION</small></b> = ( <i><small>MOUNT FLAGS\nLIST</small></i> | <i><small>MOUNT EXPRESSION</small></i>\n)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>MOUNT\nFLAGS LIST</small></b> = Comma separated list of\n<i><small>MOUNT FLAGS</small></i> .</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>MOUNT\nFLAGS</small></b> = ( &rsquo;ro&rsquo; | &rsquo;rw&rsquo; |\n&rsquo;nosuid&rsquo; | &rsquo;suid&rsquo; |\n&rsquo;nodev&rsquo; | &rsquo;dev&rsquo; |\n&rsquo;noexec&rsquo; | &rsquo;exec&rsquo; |\n&rsquo;sync&rsquo; | &rsquo;async&rsquo; |\n&rsquo;remount&rsquo; | &rsquo;mand&rsquo; |\n&rsquo;nomand&rsquo; | &rsquo;dirsync&rsquo; |\n&rsquo;noatime&rsquo; | &rsquo;atime&rsquo; |\n&rsquo;nodiratime&rsquo; | &rsquo;diratime&rsquo; |\n&rsquo;bind&rsquo; | &rsquo;rbind&rsquo; |\n&rsquo;move&rsquo; | &rsquo;verbose&rsquo; |\n&rsquo;silent&rsquo; | &rsquo;loud&rsquo; |\n&rsquo;acl&rsquo; | &rsquo;noacl&rsquo; |\n&rsquo;unbindable&rsquo; | &rsquo;runbindable&rsquo; |\n&rsquo;private&rsquo; | &rsquo;rprivate&rsquo; |\n&rsquo;slave&rsquo; | &rsquo;rslave&rsquo; |\n&rsquo;shared&rsquo; | &rsquo;rshared&rsquo; |\n&rsquo;relatime&rsquo; | &rsquo;norelatime&rsquo; |\n&rsquo;iversion&rsquo; | &rsquo;noiversion&rsquo; |\n&rsquo;strictatime&rsquo; | &rsquo;nouser&rsquo; |\n&rsquo;user&rsquo; )</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>MOUNT\nEXPRESSION</small></b> = (\n<i><small>ALPHANUMERIC</small></i> |\n<i><small>AARE</small></i> ) ...</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PIVOT\nROOT RULE</small></b> = [ <i><small>QUALIFIERS</small></i> ]\npivot_root [ oldroot= <i><small>OLD PUT FILEGLOB</small></i>\n] [ <i><small>NEW ROOT FILEGLOB</small></i> ] [\n&rsquo;-&gt;&rsquo; <i><small>PROFILE NAME</small></i> ]</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>SOURCE\nFILEGLOB</small></b> = <i><small>FILEGLOB</small></i></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>MOUNTPOINT\nFILEGLOB</b></small> = <i><small>FILEGLOB</small></i></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>OLD\nPUT FILEGLOB</b></small> =\n<i><small>FILEGLOB</small></i></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>PTRACE_RULE</b></small>\n= [ <i><small>QUALIFIERS</small></i> ] &rsquo;ptrace&rsquo;\n[ <i><small>PTRACE ACCESS PERMISSIONS</small></i> ] [\n<i><small>PTRACE PEER</small></i> ]</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PTRACE\nACCESS PERMISSIONS</small></b> = <i><small>PTRACE\nACCESS</small></i> | <i><small>PTRACE ACCESS\nLIST</small></i></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>PTRACE\nACCESS LIST</b></small> = &rsquo;(&rsquo; Comma or space\nseparated list of <i><small>PTRACE ACCESS</small></i>\n&rsquo;)&rsquo;</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PTRACE\nACCESS</small></b> = ( &rsquo;r&rsquo; | &rsquo;w&rsquo; |\n&rsquo;rw&rsquo; | &rsquo;read&rsquo; | &rsquo;readby&rsquo;\n| &rsquo;trace&rsquo; | &rsquo;tracedby&rsquo; )</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PTRACE\nPEER</small></b> = &rsquo;peer&rsquo; &rsquo;=&rsquo;\n<i><small>AARE</small></i></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>SIGNAL_RULE</b></small>\n= [ <i><small>QUALIFIERS</small></i> ] &rsquo;signal&rsquo;\n[ <i><small>SIGNAL ACCESS PERMISSIONS</small></i> ] [\n<i><small>SIGNAL SET</small></i> ] [ <i><small>SIGNAL\nPEER</small></i> ]</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>SIGNAL\nACCESS PERMISSIONS</small></b> = <i><small>SIGNAL\nACCESS</small></i> | <i><small>SIGNAL ACCESS\nLIST</small></i></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>SIGNAL\nACCESS LIST</b></small> = &rsquo;(&rsquo; Comma or space\nseparated list of <i><small>SIGNAL ACCESS</small></i>\n&rsquo;)&rsquo;</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>SIGNAL\nACCESS</small></b> = ( &rsquo;r&rsquo; | &rsquo;w&rsquo; |\n&rsquo;rw&rsquo; | &rsquo;read&rsquo; | &rsquo;write&rsquo;\n| &rsquo;send&rsquo; | &rsquo;receive&rsquo; )</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>SIGNAL\nSET</small></b> = &rsquo;set&rsquo; &rsquo;=&rsquo;\n&rsquo;(&rsquo; <i><small>SIGNAL LIST</small></i>\n&rsquo;)&rsquo;</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>SIGNAL\nLIST</small></b> = Comma or space separated list of\n<i><small>SIGNALS</small></i></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>SIGNALS</b></small>\n= ( &rsquo;hup&rsquo; | &rsquo;int&rsquo; |\n&rsquo;quit&rsquo; | &rsquo;ill&rsquo; | &rsquo;trap&rsquo;\n| &rsquo;abrt&rsquo; | &rsquo;bus&rsquo; | &rsquo;fpe&rsquo;\n| &rsquo;kill&rsquo; | &rsquo;usr1&rsquo; |\n&rsquo;segv&rsquo; | &rsquo;usr2&rsquo; | &rsquo;pipe&rsquo;\n| &rsquo;alrm&rsquo; | &rsquo;term&rsquo; |\n&rsquo;stkflt&rsquo; | &rsquo;chld&rsquo; |\n&rsquo;cont&rsquo; | &rsquo;stop&rsquo; | &rsquo;stp&rsquo;\n| &rsquo;ttin&rsquo; | &rsquo;ttou&rsquo; |\n&rsquo;urg&rsquo; | &rsquo;xcpu&rsquo; | &rsquo;xfsz&rsquo;\n| &rsquo;vtalrm&rsquo; | &rsquo;prof&rsquo; |\n&rsquo;winch&rsquo; | &rsquo;io&rsquo; | &rsquo;pwr&rsquo; |\n&rsquo;sys&rsquo; | &rsquo;emt&rsquo; | &rsquo;exists&rsquo;\n| &rsquo;rtmin+0&rsquo; ... &rsquo;rtmin+32&rsquo; )</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>SIGNAL\nPEER</small></b> = &rsquo;peer&rsquo; &rsquo;=&rsquo;\n<i><small>AARE</small></i></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>DBUS\nRULE</b></small> = ( <i><small>DBUS MESSAGE RULE</small></i>\n| <i><small>DBUS SERVICE RULE</small></i> | <i><small>DBUS\nEAVESDROP RULE</small></i> | <i><small>DBUS COMBINED\nRULE</small></i> )</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nMESSAGE RULE</small></b> = [\n<i><small>QUALIFIERS</small></i> ] &rsquo;dbus&rsquo; [\n<i><small>DBUS ACCESS EXPRESSION</small></i> ] [\n<i><small>DBUS BUS</small></i> ] [ <i><small>DBUS\nPATH</small></i> ] [ <i><small>DBUS INTERFACE</small></i> ]\n[ <i><small>DBUS MEMBER</small></i> ] [ <i><small>DBUS\nPEER</small></i> ]</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nSERVICE RULE</small></b> = [\n<i><small>QUALIFIERS</small></i> ] &rsquo;dbus&rsquo; [\n<i><small>DBUS ACCESS EXPRESSION</small></i> ] [\n<i><small>DBUS BUS</small></i> ] [ <i><small>DBUS\nNAME</small></i> ]</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nEAVESDROP RULE</small></b> = [\n<i><small>QUALIFIERS</small></i> ] &rsquo;dbus&rsquo; [\n<i><small>DBUS ACCESS EXPRESSION</small></i> ] [\n<i><small>DBUS BUS</small></i> ]</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nCOMBINED RULE</small></b> = [\n<i><small>QUALIFIERS</small></i> ] &rsquo;dbus&rsquo; [\n<i><small>DBUS ACCESS EXPRESSION</small></i> ] [\n<i><small>DBUS BUS</small></i> ]</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nACCESS EXPRESSION</small></b> = ( <i><small>DBUS\nACCESS</small></i> | &rsquo;(&rsquo; <i><small>DBUS ACCESS\nLIST</small></i> &rsquo;)&rsquo; )</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nBUS</small></b> = &rsquo;bus&rsquo; &rsquo;=&rsquo;\n&rsquo;(&rsquo; &rsquo;system&rsquo; | &rsquo;session&rsquo;\n| &rsquo;&quot;&rsquo; <i><small>AARE</small></i>\n&rsquo;&quot;&rsquo; | <i><small>AARE</small></i>\n&rsquo;)&rsquo;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nPATH</small></b> = &rsquo;path&rsquo; &rsquo;=&rsquo;\n&rsquo;(&rsquo; &rsquo;&quot;&rsquo;\n<i><small>AARE</small></i> &rsquo;&quot;&rsquo; |\n<i><small>AARE</small></i> &rsquo;)&rsquo;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nINTERFACE</small></b> = &rsquo;interface&rsquo;\n&rsquo;=&rsquo; &rsquo;(&rsquo; &rsquo;&quot;&rsquo;\n<i><small>AARE</small></i> &rsquo;&quot;&rsquo; |\n<i><small>AARE</small></i> &rsquo;)&rsquo;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nMEMBER</small></b> = &rsquo;member&rsquo; &rsquo;=&rsquo;\n&rsquo;(&rsquo; &rsquo;&quot;&rsquo;\n<i><small>AARE</small></i> &rsquo;&quot;&rsquo; |\n<i><small>AARE</small></i> &rsquo;)&rsquo;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nPEER</small></b> = &rsquo;peer&rsquo; &rsquo;=&rsquo;\n&rsquo;(&rsquo; [ <i><small>DBUS NAME</small></i> ] [\n<i><small>DBUS LABEL</small></i> ] &rsquo;)&rsquo;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nNAME</small></b> = &rsquo;name&rsquo; &rsquo;=&rsquo;\n&rsquo;(&rsquo; &rsquo;&quot;&rsquo;\n<i><small>AARE</small></i> &rsquo;&quot;&rsquo; |\n<i><small>AARE</small></i> &rsquo;)&rsquo;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nLABEL</small></b> = &rsquo;label&rsquo; &rsquo;=&rsquo;\n&rsquo;(&rsquo; &rsquo;&quot;&rsquo;\n<i><small>AARE</small></i> &rsquo;&quot;&rsquo; |\n<i><small>AARE</small></i> &rsquo;)&rsquo;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>DBUS\nACCESS LIST</small></b> = Comma separated list of\n<i><small>DBUS ACCESS</small></i></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>DBUS\nACCESS</b></small> = ( &rsquo;send&rsquo; |\n&rsquo;receive&rsquo; | &rsquo;bind&rsquo; |\n&rsquo;eavesdrop&rsquo; | &rsquo;r&rsquo; |\n&rsquo;read&rsquo; | &rsquo;w&rsquo; | &rsquo;write&rsquo; |\n&rsquo;rw&rsquo; ) <br>\nSome accesses are incompatible with some rules; see\nbelow.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>AARE</small></b>\n= <b>?*[]{}^</b> <br>\nSee below for meanings.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nRULE</small></b> = [ <i><small>QUALIFIERS</small></i> ]\n&rsquo;unix&rsquo; [ <i><small>UNIX ACCESS EXPR</small></i>\n] [ <i><small>UNIX RULE CONDS</small></i> ] [ <i><small>UNIX\nLOCAL EXPR</small></i> ] [ <i><small>UNIX PEER\nEXPR</small></i> ]</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nACCESS EXPR</small></b> = ( <i><small>UNIX\nACCESS</small></i> | <i><small>UNIX ACCESS LIST</small></i>\n)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nACCESS</small></b> = ( &rsquo;create&rsquo; |\n&rsquo;bind&rsquo; | &rsquo;listen&rsquo; |\n&rsquo;accept&rsquo; | &rsquo;connect&rsquo; |\n&rsquo;shutdown&rsquo; | &rsquo;getattr&rsquo; |\n&rsquo;setattr&rsquo; | &rsquo;getopt&rsquo; |\n&rsquo;setopt&rsquo; | &rsquo;send&rsquo; |\n&rsquo;receive&rsquo; | &rsquo;r&rsquo; | &rsquo;w&rsquo; |\n&rsquo;rw&rsquo; ) <br>\nSome access modes are incompatible with some rules or\nrequire additional parameters.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nACCESS LIST</small></b> = &rsquo;(&rsquo; <i><small>UNIX\nACCESS</small></i> ( [&rsquo;,&rsquo;] <i><small>UNIX\nACCESS</small></i> )* &rsquo;)&rsquo;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nRULE CONDS</small></b> = ( <i><small>TYPE COND</small></i> |\n<i><small>PROTO COND</small></i> ) <br>\nEach cond can appear at most once.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>TYPE\nCOND</small></b> = &rsquo;type&rsquo; &rsquo;=&rsquo; (\n<i><small>AARE</small></i> | &rsquo;(&rsquo; (\n&rsquo;&quot;&rsquo; <i><small>AARE</small></i>\n&rsquo;&quot;&rsquo; | <i><small>AARE</small></i> )+\n&rsquo;)&rsquo; )</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>PROTO\nCOND</small></b> = &rsquo;protocol&rsquo; &rsquo;=&rsquo; (\n<i><small>AARE</small></i> | &rsquo;(&rsquo; (\n&rsquo;&quot;&rsquo; <i><small>AARE</small></i>\n&rsquo;&quot;&rsquo; | <i><small>AARE</small></i> )+\n&rsquo;)&rsquo; )</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nLOCAL EXPR</small></b> = ( <i><small>UNIX ADDRESS\nCOND</small></i> | <i><small>UNIX LABEL COND</small></i> |\n<i><small>UNIX ATTR COND</small></i> | <i><small>UNIX OPT\nCOND</small></i> )* <br>\nEach cond can appear at most once.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nPEER EXPR</small></b> = &rsquo;peer&rsquo; &rsquo;=&rsquo; (\n<i><small>UNIX ADDRESS COND</small></i> | <i><small>UNIX\nLABEL COND</small></i> )+ <br>\nEach cond can appear at most once.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nADDRESS COND</small></b> &rsquo;addr&rsquo; &rsquo;=&rsquo;\n( <i><small>AARE</small></i> | &rsquo;(&rsquo;\n&rsquo;&quot;&rsquo; <i><small>AARE</small></i>\n&rsquo;&quot;&rsquo; | <i><small>AARE</small></i>\n&rsquo;)&rsquo; )</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nLABEL COND</small></b> &rsquo;label&rsquo; &rsquo;=&rsquo; (\n<i><small>AARE</small></i> | &rsquo;(&rsquo;\n&rsquo;&quot;&rsquo; <i><small>AARE</small></i>\n&rsquo;&quot;&rsquo; | <i><small>AARE</small></i>\n&rsquo;)&rsquo; )</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nATTR COND</small></b> &rsquo;attr&rsquo; &rsquo;=&rsquo; (\n<i><small>AARE</small></i> | &rsquo;(&rsquo;\n&rsquo;&quot;&rsquo; <i><small>AARE</small></i>\n&rsquo;&quot;&rsquo; | <i><small>AARE</small></i>\n&rsquo;)&rsquo; )</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNIX\nOPT COND</small></b> &rsquo;opt&rsquo; &rsquo;=&rsquo; (\n<i><small>AARE</small></i> | &rsquo;(&rsquo;\n&rsquo;&quot;&rsquo; <i><small>AARE</small></i>\n&rsquo;&quot;&rsquo; | <i><small>AARE</small></i>\n&rsquo;)&rsquo; )</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>RLIMIT\nRULE</small></b> = &rsquo;set&rsquo; &rsquo;rlimit&rsquo; [\n<i><small>RLIMIT</small></i> &rsquo;&lt;=&rsquo;\n<i><small>RLIMIT VALUE</small></i> ]</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>RLIMIT</small></b>\n= ( &rsquo;cpu&rsquo; | &rsquo;fsize&rsquo; |\n&rsquo;data&rsquo; | &rsquo;stack&rsquo; |\n&rsquo;core&rsquo; | &rsquo;rss&rsquo; |\n&rsquo;nofile&rsquo; | &rsquo;ofile&rsquo; |\n&rsquo;as&rsquo; | &rsquo;nproc&rsquo; |\n&rsquo;memlock&rsquo; | &rsquo;locks&rsquo; |\n&rsquo;sigpending&rsquo; | &rsquo;msgqueue&rsquo; |\n&rsquo;nice&rsquo; | &rsquo;rtprio&rsquo; |\n&rsquo;rttime&rsquo; )</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>RLIMIT\nVALUE</small></b> = ( <i><small>RLIMIT SIZE</small></i> |\n<i><small>RLIMIT NUMBER</small></i> | <i><small>RLIMIT\nTIME</small></i> | <i><small>RLIMIT NICE</small></i> )</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>RLIMIT\nSIZE</small></b> = <i><small>NUMBER</small></i> (\n&rsquo;K&rsquo; | &rsquo;M&rsquo; | &rsquo;G&rsquo; ) <br>\nOnly applies to <small>RLIMIT</small> of\n&rsquo;fsize&rsquo;, &rsquo;data&rsquo;,\n&rsquo;stack&rsquo;, &rsquo;core&rsquo;, &rsquo;rss&rsquo;,\n&rsquo;as&rsquo;, &rsquo;memlock&rsquo;,\n&rsquo;msgqueue&rsquo;.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>RLIMIT\nNUMBER</small></b> = number from 0 to max rlimit value. <br>\nOnly applies to <small>RLIMIT</small> of\n&rsquo;ofile&rsquo;, &rsquo;nofile&rsquo;,\n&rsquo;locks&rsquo;, &rsquo;sigpending&rsquo;,\n&rsquo;nproc&rsquo;, &rsquo;rtprio&rsquo;.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>RLIMIT\nTIME</small></b> = <i><small>NUMBER</small></i> (\n&rsquo;us&rsquo; | &rsquo;microsecond&rsquo; |\n&rsquo;microseconds&rsquo; | &rsquo;ms&rsquo; |\n&rsquo;millisecond&rsquo; | &rsquo;milliseconds&rsquo; |\n&rsquo;s&rsquo; | &rsquo;sec&rsquo; | &rsquo;second&rsquo; |\n&rsquo;seconds&rsquo; | &rsquo;min&rsquo; |\n&rsquo;minute&rsquo; | &rsquo;minutes&rsquo; |\n&rsquo;h&rsquo; | &rsquo;hour&rsquo; | &rsquo;hours&rsquo; |\n&rsquo;d&rsquo; | &rsquo;day&rsquo; | &rsquo;days&rsquo; |\n&rsquo;week&rsquo; | &rsquo;weeks&rsquo; ) <br>\nOnly applies to <small>RLIMIT</small> of &rsquo;cpu&rsquo;\nand &rsquo;rttime&rsquo;. <small>RLIMIT</small>\n&rsquo;cpu&rsquo; only allows units &gt;=\n&rsquo;seconds&rsquo;.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>RLIMIT\nNICE</small></b> = a number between -20 and 19. <br>\nOnly applies to <small>RLIMIT</small> of\n&rsquo;nice&rsquo;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>FILE\nRULE</small></b> = [ <i><small>QUALIFIERS</small></i> ] [\n&rsquo;owner&rsquo; ] ( &rsquo;file&rsquo; | [\n&rsquo;file&rsquo; ] ( <i><small>FILEGLOB ACCESS</small></i>\n| <i><small>ACCESS FILEGLOB</small></i> ) [\n&rsquo;-&gt;&rsquo; <i><small>EXEC TARGET</small></i> ]\n)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>FILEGLOB</small></b>\n= ( <i><small>QUOTED FILEGLOB</small></i> |\n<i><small>UNQUOTED FILEGLOB</small></i> )</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>QUOTED\nFILEGLOB</small></b> = &rsquo;&quot;&rsquo;\n<i><small>UNQUOTED FILEGLOB</small></i>\n&rsquo;&quot;&rsquo;</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>UNQUOTED\nFILEGLOB</small></b> = (must start with &rsquo;/&rsquo;\n(after variable expansion), <b><small>AARE</small></b> have\nspecial meanings; see below. May include\n<i><small>VARIABLE</small></i> . Rules with embedded spaces\nor tabs must be quoted. Rules must end with &rsquo;/&rsquo;\nto apply to directories.)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>ACCESS</small></b>\n= ( &rsquo;r&rsquo; | &rsquo;w&rsquo; | &rsquo;a&rsquo; |\n&rsquo;l&rsquo; | &rsquo;k&rsquo; | &rsquo;m&rsquo; |\n<i><small>EXEC TRANSITION</small></i> )+ (not all\ncombinations are allowed; see below.)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>EXEC\nTRANSITION</small></b> = ( &rsquo;ix&rsquo; |\n&rsquo;ux&rsquo; | &rsquo;Ux&rsquo; | &rsquo;px&rsquo; |\n&rsquo;Px&rsquo; | &rsquo;cx&rsquo; | &rsquo;Cx&rsquo; |\n&rsquo;pix&rsquo; | &rsquo;Pix&rsquo; | &rsquo;cix&rsquo; |\n&rsquo;Cix&rsquo; | &rsquo;pux&rsquo; | &rsquo;PUx&rsquo; |\n&rsquo;cux&rsquo; | &rsquo;CUx&rsquo; | &rsquo;x&rsquo; )\n<br>\nA bare &rsquo;x&rsquo; is only allowed in rules with the\ndeny qualifier, everything else only without the deny\nqualifier.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>EXEC\nTARGET</small></b> = name <br>\nRequires <i><small>EXEC TRANSITION</small></i>\nspecified.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>LINK\nRULE</small></b> = <i><small>QUALIFIERS</small></i> [\n&rsquo;owner&rsquo; ] &rsquo;link&rsquo; [\n&rsquo;subset&rsquo; ] <i><small>FILEGLOB</small></i>\n&rsquo;-&gt;&rsquo; <i><small>FILEGLOB</small></i></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small><b>ALPHA</b></small>\n= (&rsquo;a&rsquo;, &rsquo;b&rsquo;, &rsquo;c&rsquo;, ...\n&rsquo;z&rsquo;, &rsquo;A&rsquo;, &rsquo;B&rsquo;, ...\n&rsquo;Z&rsquo;)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>ALPHANUMERIC</small></b>\n= (&rsquo;0&rsquo;, &rsquo;1&rsquo;, &rsquo;2&rsquo;, ...\n&rsquo;9&rsquo;, &rsquo;a&rsquo;, &rsquo;b&rsquo;,\n&rsquo;c&rsquo;, ... &rsquo;z&rsquo;, &rsquo;A&rsquo;,\n&rsquo;B&rsquo;, ... &rsquo;Z&rsquo;)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>CHANGE_PROFILE\nRULE</small></b> = &rsquo;change_profile&rsquo; [ [\n<i><small>EXEC MODE</small></i> ] <i><small>EXEC\nCOND</small></i> ] [ &rsquo;-&gt;&rsquo; <i><small>PROFILE\nNAME</small></i> ]</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>EXEC_MODE</small></b>\n= ( &rsquo;safe&rsquo; | &rsquo;unsafe&rsquo; )</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>EXEC\nCOND</small></b> = <i><small>FILEGLOB</small></i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All resources\nand programs need a full path. There may be any number of\nsubprofiles (aka child profiles) in a profile, limited only\nby kernel memory. Subprofile names are limited to 974\ncharacters. Child profiles can be used to confine an\napplication in a special way, or when you want the child to\nbe unconfined on the system, but confined when called from\nthe parent. Hats are a special child profile that can be\nused with the <a href=\"https://man.page/2/aa_change_hat\">aa_change_hat(2)</a> <small>API</small>\ncall. Applications written or modified to use\n<a href=\"https://man.page/2/aa_change_hat\">aa_change_hat(2)</a> can take advantage of subprofiles to\nrun under different confinements, dependent on program\nlogic. Several <a href=\"https://man.page/2/aa_change_hat\">aa_change_hat(2)</a>-aware applications\nexist, including an Apache module, <a href=\"https://man.page/5/mod_apparmor\">mod_apparmor(5)</a>; a\n<small>PAM</small> module, pam_apparmor; and a Tomcat valve,\ntomcat_apparmor. Applications written or modified to use\n<a href=\"https://man.page/2/change_profile\">change_profile(2)</a> transition permanently to the\nspecified profile. libvirt is one such application.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Profile\nHead</b> <br>\nThe profile head consists of a required name that is unique\nand optional attachment conditionals and control flags.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Name</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The name of the\nprofile is its identifier. It is what is displayed during\nintrospection (eg. ps -Z), and defines how the profile is\nreferenced by policy rules for any policy interaction via\nipc or domain changes. It is recommended that the name be\nkept short and have meaning for the application it is being\napplied eg. <i>firefox</i> for the firefox web browser or\nits functional role eg. log_admin.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the name is\nan applications full absolute path name eg.\n<i>/usr/bin/firefox</i> and an exec attachment conditional\nis not specified the name is also used as the\nprofile&rsquo;s exec attachment conditional. This use\nhowever has been deprecated and is discouraged as it makes\nfor long names that can make profile rules difficult to\nunderstand, and may not be fully displayed by some\nintrospection tools.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Attachment\nConditionals</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The attachment\nconditionals are used during profile changes to determine\nwhether a profile is a match for the proposed profile\ntransition. The attachment conditionals are optional, how\nand when they are applied is determined by the specific\ncondition(s) used.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When attachment\nconditionals are used, the attachment conditionals for all\nprofiles in the namespace will be evaluated. The profile\nwith the set of attachments that result in the best match\nwill become the new profile after a transition operation.\nAttachments that don&rsquo;t match will result in the\nprofile not being available for transition.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If no\nconditionals are specified the profile will only be used if\na transition explicitly specifies the profile name.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Exec Attachment\nConditional</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The exec\nattachment conditional governs how closely the profile\nmatches an executable program. This conditional is only used\nduring an exec operation when the matching exec rule\nspecifies either a <b>px</b> or <b>cx</b> (or their\nderivatives) transition type. The exec attachment\nconditional will also be used by tasks that are\n<i>unconfined</i> as they use a <b>pix</b> transition\nrule.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If there are no\nattachment matches then it is up to the exec rule to\ndetermine what happens (fail or a fallback option).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note: see\nprofile <i>Name</i> for information around using the profile\nname as an attachment conditional.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Exec attachment\nconditionals can contain variable names and pattern\nmatching. They use a longest left match heuristic to\ndeterime the winner in the case of multiple matches at run\ntime. The exact implementation of this resolution is kernel\nspecific and has improved over time, while retaining\nbackwards compatibility. If the heuristic can not determine\na winner between multiple matches the exec will be\ndenied.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Extended\nAttributes Attachment Conditional</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">AppArmor\nprofiles have the ability to target files based on their\n<a href=\"https://man.page/7/xattr\">xattr(7)</a> values in addition to their path. For\nexample, the following profile matches files in /usr/bin\nwith the attribute &quot;security.apparmor&quot; and value\n&quot;trusted&quot;:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/usr/bin/*\nxattrs(security.apparmor=&quot;trusted&quot;) { <br>\n# ... <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See\n<a href=\"https://man.page/7/apparmor_xattrs\">apparmor_xattrs(7)</a> for further details.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Flags</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The profile\nflags allow modifying the behavior of the profile. If a\nprofile flag is specified it takes priority over any\nconflicting flags that have been specified by rules in the\nprofile body.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Profile\nMode</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The profile\nmode allow controlling the enforcement behavior of the\nprofile rules.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If no mode is\nspecified the profile defaults to <i>enforce</i> mode.\n<b><br>\nenforce</b> For a given action, if the profile rules do not\ngrant <br>\npermission the action will be denied, with an\n<i><small>EACCES</small></i> or <i><small>EPERM</small></i>\nerror <br>\ncode returned to userspace, and the violation will be logged\nwith a tag <br>\nof the access being <b><small>DENIED</small></b> . <b><br>\nkill</b> This is a variant of enforce mode where in addition\nto returning <i><small><br>\nEACCES</small></i> or <i><small>EPERM</small></i> for a\nviolation, the task is also sent a signal to kill <br>\nit. <b><br>\ncomplain</b> For a given action, if the profile rules do not\ngrant <br>\npermission the action will be allowed, but the violation\nwill be logged <br>\nwith a tag of the access being <b><small>ALLOWED</small></b>\n. <b><br>\nunconfined</b> This mode allows a task confined by the\nprofile to behave as <br>\nthough they are <i>unconfined</i>. This mode allow for an\nunconfined behavior <br>\nthat can be later changed to confinement by using profile\nreplacement. <br>\nThis mode is should not be used under regular deployment but\ncan be <br>\nuseful during debugging and some system initialization\nscenarios.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Audit Mode</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The audit mode\nallows control of how AppArmor messages are are logged to\nthe audit system. <b><br>\naudit</b> This flag causes all actions whether allowed or\ndenied to be <br>\nlogged.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Misc modes\n<b><br>\nmediate_deleted</b> This forces AppArmor to mediate deleted\nfiles as if <br>\nthey still exist in the file system. <b><br>\nattach_disconnected</b> This forces AppArmor to attach\ndisconnected objects <br>\nto the task&rsquo;s namespace and mediate them as though\nthey are part of the <br>\nnamespace. <small>WARNING</small> this mode is unsafe and\ncan result in aliasing and <br>\naccess to objects that should not be allowed. Its intent is\na debug and <br>\npolicy development tool. <b><br>\nchroot_relative</b> This forces file names to be relative to\na chroot and <br>\nbehave as if the chroot is a mount namespace.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Access\nModes</b> <br>\nFile permission access modes consists of combinations of the\nfollowing modes:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>r</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- read</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>w</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- write -- conflicts with append</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>a</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- append -- conflicts with write</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ux</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- unconfined execute</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>Ux</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- unconfined execute -- scrub the environment</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>px</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- discrete profile execute</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>Px</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- discrete profile execute -- scrub the environment</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>cx</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- transition to subprofile on execute</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>Cx</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- transition to subprofile on execute -- scrub the\nenvironment</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ix</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- inherit execute</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>pix</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- discrete profile execute with inherit fallback</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>Pix</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- discrete profile execute with inherit fallback --\nscrub the environment</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>cix</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- transition to subprofile on execute with inherit\nfallback</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>Cix</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- transition to subprofile on execute with inherit\nfallback -- scrub the environment</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>pux</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- discrete profile execute with fallback to\nunconfined</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>PUx</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- discrete profile execute with fallback to unconfined\n-- scrub the environment</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>cux</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- transition to subprofile on execute with fallback to\nunconfined</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>CUx</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- transition to subprofile on execute with fallback to\nunconfined -- scrub the environment</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>deny x</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- disallow execute (in rules with the deny\nqualifier)</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>m</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- allow <small>PROT_EXEC</small> with <a href=\"https://man.page/2/mmap\">mmap(2)</a>\ncalls</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>l</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- link</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>k</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"77%\">\n\n\n<p>- lock</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Access Modes\nDetails <br>\nr - Read mode</b></p>\n\n<p style=\"margin-left:17%;\">Allows the program to have read\naccess to the file or directory listing. Read access is\nrequired for shell scripts and other interpreted\ncontent.</p>\n\n<p style=\"margin-left:11%;\"><b>w - Write mode</b></p>\n\n<p style=\"margin-left:17%;\">Allows the program to have\nwrite access to the file. Files and directories must have\nthis permission if they are to be unlinked (removed.) Write\nmode is not required on a directory to rename or create\nfiles within the directory.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This mode\nconflicts with append mode.</p>\n\n<p style=\"margin-left:11%;\"><b>a - Append mode</b></p>\n\n<p style=\"margin-left:17%;\">Allows the program to have a\nlimited appending only write access to the file. Append mode\nwill prevent an application from opening the file for write\nunless it passes the O_APPEND parameter flag on open.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The mode\nconflicts with Write mode.</p>\n\n<p style=\"margin-left:11%;\"><b>ux - Unconfined execute\nmode</b></p>\n\n<p style=\"margin-left:17%;\">Allows the program to execute\nthe program without any AppArmor profile being applied to\nthe program.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This mode is\nuseful when a confined program needs to be able to perform a\nprivileged operation, such as rebooting the machine. By\nplacing the privileged section in another executable and\ngranting unconfined execution rights, it is possible to\nbypass the mandatory constraints imposed on all confined\nprocesses. For more information on what is constrained, see\nthe <a href=\"https://man.page/7/apparmor\">apparmor(7)</a> man page.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>WARNING</small></b>\n&rsquo;ux&rsquo; should only be used in very special cases.\nIt enables the designated child processes to be run without\nany AppArmor protection. &rsquo;ux&rsquo; does not scrub the\nenvironment of variables such as <small>LD_PRELOAD</small> ;\nas a result, the calling domain may have an undue amount of\ninfluence over the callee. Use this mode only if the child\nabsolutely must be run unconfined and\n<small>LD_PRELOAD</small> must be used. Any profile using\nthis mode provides negligible security. Use at your own\nrisk.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Incompatible\nwith other exec transition modes and the deny qualifier.</p>\n\n<p style=\"margin-left:11%;\"><b>Ux - unconfined execute --\nscrub the environment</b></p>\n\n<p style=\"margin-left:17%;\">&rsquo;Ux&rsquo; allows the\nnamed program to run in &rsquo;ux&rsquo; mode, but AppArmor\nwill invoke the Linux Kernel&rsquo;s <b>unsafe_exec</b>\nroutines to scrub the environment, similar to setuid\nprograms. (See <b>ld.so</b>(8) for some information on\nsetuid/setgid environment scrubbing.)</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>WARNING</small></b>\n&rsquo;Ux&rsquo; should only be used in very special cases.\nIt enables the designated child processes to be run without\nany AppArmor protection. Use this mode only if the child\nabsolutely must be run unconfined. Use at your own risk.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Incompatible\nwith other exec transition modes and the deny qualifier.</p>\n\n<p style=\"margin-left:11%;\"><b>px - Discrete Profile\nexecute mode</b></p>\n\n<p style=\"margin-left:17%;\">This mode requires that a\ndiscrete security profile is defined for a program executed\nand forces an AppArmor domain transition. If there is no\nprofile defined then the access will be denied.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>WARNING</small></b>\n&rsquo;px&rsquo; does not scrub the environment of variables\nsuch as <small>LD_PRELOAD</small> ; as a result, the calling\ndomain may have an undue amount of influence over the\ncallee.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Incompatible\nwith other exec transition modes and the deny qualifier.</p>\n\n<p style=\"margin-left:11%;\"><b>Px - Discrete Profile\nexecute mode -- scrub the environment</b></p>\n\n<p style=\"margin-left:17%;\">&rsquo;Px&rsquo; allows the\nnamed program to run in &rsquo;px&rsquo; mode, but AppArmor\nwill invoke the Linux Kernel&rsquo;s <b>unsafe_exec</b>\nroutines to scrub the environment, similar to setuid\nprograms. (See <b>ld.so</b>(8) for some information on\nsetuid/setgid environment scrubbing.)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Incompatible\nwith other exec transition modes and the deny qualifier.</p>\n\n<p style=\"margin-left:11%;\"><b>cx - Transition to\nSubprofile execute mode</b></p>\n\n<p style=\"margin-left:17%;\">This mode requires that a local\nsecurity profile is defined and forces an AppArmor domain\ntransition to the named profile. If there is no profile\ndefined then the access will be denied.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b><small>WARNING</small></b>\n&rsquo;cx&rsquo; does not scrub the environment of variables\nsuch as <small>LD_PRELOAD</small> ; as a result, the calling\ndomain may have an undue amount of influence over the\ncallee.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Incompatible\nwith other exec transition modes and the deny qualifier.</p>\n\n<p style=\"margin-left:11%;\"><b>Cx - Transition to\nSubprofile execute mode -- scrub the environment</b></p>\n\n<p style=\"margin-left:17%;\">&rsquo;Cx&rsquo; allows the\nnamed program to run in &rsquo;cx&rsquo; mode, but AppArmor\nwill invoke the Linux Kernel&rsquo;s <b>unsafe_exec</b>\nroutines to scrub the environment, similar to setuid\nprograms. (See <b>ld.so</b>(8) for some information on\nsetuid/setgid environment scrubbing.)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Incompatible\nwith other exec transition modes and the deny qualifier.</p>\n\n<p style=\"margin-left:11%;\"><b>ix - Inherit execute\nmode</b></p>\n\n<p style=\"margin-left:17%;\">Prevent the normal AppArmor\ndomain transition on <a href=\"https://man.page/2/execve\">execve(2)</a> when the profiled\nprogram executes the named program. Instead, the executed\nresource will inherit the current profile.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This mode is\nuseful when a confined program needs to call another\nconfined program without gaining the permissions of the\ntarget&rsquo;s profile, or losing the permissions of the\ncurrent profile. There is no version to scrub the\nenvironment because &rsquo;ix&rsquo; executions don&rsquo;t\nchange privileges.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Incompatible\nwith other exec transition modes and the deny qualifier.</p>\n\n<p style=\"margin-left:11%;\"><b>Profile transition with\ninheritance fallback execute mode</b></p>\n\n<p style=\"margin-left:17%;\">These modes attempt to perform\na domain transition as specified by the matching permission\n(shown below) and if that transition fails to find the\nmatching profile the domain transition proceeds using the\n&rsquo;ix&rsquo; transition mode.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">'Pix' == 'Px'\nwith fallback to 'ix' <br>\n'pix' == 'px' with fallback to 'ix' <br>\n'Cix' == 'Cx' with fallback to 'ix' <br>\n'cix' == 'cx' with fallback to 'ix'</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Incompatible\nwith other exec transition modes and the deny qualifier.</p>\n\n<p style=\"margin-left:11%;\"><b>Profile transition with\nunconfined fallback execute mode</b></p>\n\n<p style=\"margin-left:17%;\">These modes attempt to perform\na domain transition as specified by the matching permission\n(shown below) and if that transition fails to find the\nmatching profile the domain transition proceeds using the\n&rsquo;ux&rsquo; transition mode if &rsquo;pux&rsquo;,\n&rsquo;cux&rsquo; or the &rsquo;Ux&rsquo; transition mode if\n&rsquo;PUx&rsquo;, &rsquo;CUx&rsquo; is used.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">'PUx' == 'Px'\nwith fallback to 'Ux' <br>\n'pux' == 'px' with fallback to 'ux' <br>\n'CUx' == 'Cx' with fallback to 'Ux' <br>\n'cux' == 'cx' with fallback to 'ux'</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Incompatible\nwith other exec transition modes and the deny qualifier.</p>\n\n<p style=\"margin-left:11%;\"><b>deny x - Deny\nexecute</b></p>\n\n<p style=\"margin-left:17%;\">For rules including the deny\nmodifier, only &rsquo;x&rsquo; is allowed to deny\nexecute.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\n&rsquo;ix&rsquo;, &rsquo;Px&rsquo;, &rsquo;px&rsquo;,\n&rsquo;Cx&rsquo;, &rsquo;cx&rsquo; and the fallback modes\nconflict with the deny modifier.</p>\n\n<p style=\"margin-left:11%;\"><b>Directed profile\ntransitions</b></p>\n\n<p style=\"margin-left:17%;\">The directed (&rsquo;px&rsquo;,\n&rsquo;Px&rsquo;, &rsquo;pix&rsquo;, &rsquo;Pix&rsquo;,\n&rsquo;pux&rsquo;, &rsquo;PUx&rsquo;) profile and subprofile\n(&rsquo;cx&rsquo;, &rsquo;Cx&rsquo;, &rsquo;cix&rsquo;,\n&rsquo;Cix&rsquo;, &rsquo;cux&rsquo;, &rsquo;CUx&rsquo;)\ntransitions normally determine the profile to transition to\nfrom the executable name. It is however possible to specify\nthe name of the profile that the transition should use.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The name of the\nprofile to transition to is specified using the\n&rsquo;-&gt;&rsquo; followed by the name of the profile to\ntransition to. Eg.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">/bin/** px\n-&gt; profile,</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Incompatible\nwith other exec transition modes.</p>\n\n<p style=\"margin-left:11%;\"><b>m - Allow executable\nmapping</b></p>\n\n<p style=\"margin-left:17%;\">This mode allows a file to be\nmapped into memory using <a href=\"https://man.page/2/mmap\">mmap(2)</a>&rsquo;s\n<small>PROT_EXEC</small> flag. This flag marks the pages\nexecutable; it is used on some architectures to provide\nnon-executable data pages, which can complicate exploit\nattempts. AppArmor uses this mode to limit which files a\nwell-behaved program (or all programs on architectures that\nenforce non-executable memory access controls) may use as\nlibraries, to limit the effect of invalid <b>-L</b> flags\ngiven to <a href=\"https://man.page/1/ld\">ld(1)</a> and <b><small>LD_PRELOAD</small></b> ,\n<b><small>LD_LIBRARY_PATH</small></b> , given to\n<b>ld.so</b>(8).</p>\n\n<p style=\"margin-left:11%;\"><b>l - Link mode</b></p>\n\n<p style=\"margin-left:17%;\">Allows the program to be able\nto create a link with this name. When a link is created, the\nnew link <b><small>MUST</small></b> have a subset of\npermissions as the original file (with the exception that\nthe destination does not have to have link access.) If there\nis an &rsquo;x&rsquo; rule on the new link, it must match\nthe original file exactly.</p>\n\n<p style=\"margin-left:11%;\"><b>k - lock mode</b></p>\n\n<p style=\"margin-left:17%;\">Allows the program to be able\nlock a file with this name. This permission covers both\nadvisory and mandatory locking.</p>\n\n<p style=\"margin-left:11%;\"><b>leading <small>OR</small>\ntrailing access permissions</b></p>\n\n<p style=\"margin-left:17%;\">File rules can be specified\nwith the access permission either leading or trailing the\nfile glob. Eg.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">rw /**, #\nleading permissions <br>\n/** rw, # trailing permissions</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When leading\npermissions are used further rule options and context may be\nallowed, Eg.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">l /foo -&gt;\n/bar, # lead 'l' link permission is equivalent to link\nrules</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Link\nrules</b> <br>\nLink rules allow specifying permission to form a hard link\nas a link target pair. If the subset condition is specified\nthen the permissions to access the link file must be a\nsubset of the profiles permissions to access the target\nfile. If there is an &rsquo;x&rsquo; rule on the new link,\nit must match the original file exactly.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Eg.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/file1 r, <br>\n/file2 rwk, <br>\n/link* rw, <br>\nlink subset /link* -&gt; /**,</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The link rule\nallows linking of /link to both /file1 or /file2 by name\nhowever because the /link file has &rsquo;rw&rsquo;\npermissions it is not allowed to link to /file1 because that\nwould grant an access path to /file1 with more permissions\nthan the &rsquo;r&rsquo; permissions the profile\nspecifies.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A link of /link\nto /file2 would be allowed because the &rsquo;rw&rsquo;\npermissions of /link are a subset of the &rsquo;rwk&rsquo;\npermissions for /file1.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The link rule\nis equivalent to specifying the &rsquo;l&rsquo; link\npermission as a leading permission with no other file access\npermissions. When this is done the link rule options can be\nspecified.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nlink rule is equivalent to the &rsquo;l&rsquo; permission\nfile rule</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">link /foo -&gt;\nbar, <br>\nl /foo -&gt; /bar,</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">File rules that\nspecify the &rsquo;l&rsquo; permission and don&rsquo;t\nspecify the extend link permissions map to link rules as\nfollows.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/foo l, <br>\nl /foo, <br>\nlink subset /foo -&gt; /**,</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Comments</b>\n<br>\nComments start with # and may begin at any place within a\nline. The comment ends when the line ends. This is the same\ncomment style as shell scripts.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Capabilities</b>\n<br>\nThe only capabilities a confined process may use may be\nenumerated; for the complete list, please refer to\n<a href=\"https://man.page/7/capabilities\">capabilities(7)</a>. Note that granting some capabilities\nrenders AppArmor confinement for that domain advisory; while\n<a href=\"https://man.page/2/open\">open(2)</a>, <a href=\"https://man.page/2/read\">read(2)</a>, <a href=\"https://man.page/2/write\">write(2)</a>, etc., will\nstill return error when access is not granted, some\ncapabilities allow loading kernel modules, arbitrary access\nto <small>IPC,</small> ability to bypass discretionary\naccess controls, and other operations that are typically\nreserved for the root user.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Network\nRules</b> <br>\nAppArmor supports simple coarse grained network mediation.\nThe network rule restrict all <a href=\"https://man.page/2/socket\">socket(2)</a> based\noperations. The mediation done is a coarse-grained check on\nwhether a socket of a given type and family can be created,\nread, or written. There is no mediation based of port number\nor protocol beyond tcp, udp, and raw. Network\n<a href=\"https://man.page/7/netlink\">netlink(7)</a> rules may only specify type\n&rsquo;dgram&rsquo; and &rsquo;raw&rsquo;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">AppArmor\nnetwork rules are accumulated so that the granted network\npermissions are the union of all the listed network rule\npermissions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">AppArmor\nnetwork rules are broad and general and become more\nrestrictive as further information is specified.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">eg.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">network, #allow\naccess to all networking <br>\nnetwork tcp, #allow access to tcp <br>\nnetwork inet tcp, #allow access to tcp only for inet4\naddresses <br>\nnetwork inet6 tcp, #allow access to tcp only for inet6\naddresses <br>\nnetwork netlink raw, #allow access to AF_NETLINK\nSOCK_RAW</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Mount\nRules</b> <br>\nAppArmor supports mount mediation and allows specifying\nfilesystem types and mount flags. The syntax of mount rules\nin AppArmor is based on the <b>mount</b>(8) command syntax.\nMount rules must contain one of the mount, remount or umount\nkeywords, but all mount conditions are optional. Unspecified\noptional conditionals are assumed to match all entries (eg,\nnot specifying fstype means all fstypes are matched). Due to\nthe complexity of the mount command and how options may be\nspecified, AppArmor allows specifying conditionals three\ndifferent ways:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>1.</p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>If a conditional is specified using &rsquo;=&rsquo;,\nthen the rule only grants permission for mounts matching the\nexactly specified options. For example, an AppArmor policy\nwith the following rule:</p></td></tr>\n</table>\n\n<p style=\"margin-left:17%; margin-top: 1em\">mount\noptions=ro /dev/foo -E&lt;gt&gt; /mnt/,</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Would\nmatch:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o ro\n/dev/foo /mnt</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">but not either\nof these:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o\nro,atime /dev/foo /mnt <br>\n$ mount -o rw /dev/foo /mnt</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\">2.</p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">If a conditional is specified\nusing &rsquo;in&rsquo;, then the rule grants permission for\nmounts matching any combination of the specified options.\nFor example, if an AppArmor policy has the following\nrule:</p> </td></tr>\n</table>\n\n<p style=\"margin-left:17%; margin-top: 1em\">mount options\nin (ro,atime) /dev/foo -&gt; /mnt/,</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">all of these\nmount commands will match:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o ro\n/dev/foo /mnt <br>\n$ mount -o ro,atime /dev/foo /mnt <br>\n$ mount -o atime /dev/foo /mnt</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">but none of\nthese will:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o\nro,sync /dev/foo /mnt <br>\n$ mount -o ro,atime,sync /dev/foo /mnt <br>\n$ mount -o rw /dev/foo /mnt <br>\n$ mount -o rw,noatime /dev/foo /mnt <br>\n$ mount /dev/foo /mnt</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\">3.</p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">If multiple conditionals are\nspecified in a single mount rule, then the rule grants\npermission for each set of options. This provides a\nshorthand when writing mount rules which might help to\nlogically break up a conditional. For example, if an\nAppArmor policy has the following rule:</p></td></tr>\n</table>\n\n<p style=\"margin-left:17%; margin-top: 1em\">mount\noptions=ro options=atime</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">both of these\nmount commands will match:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o ro\n/dev/foo /mnt <br>\n$ mount -o atime /dev/foo /mnt</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">but this one\nwill not:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o\nro,atime /dev/foo /mnt</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that\nseparate mount rules are distinct and the options do not\naccumulate. For example, these AppArmor mount rules:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">mount\noptions=ro, <br>\nmount options=atime,</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">are not\nequivalent to either of these mount rules:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">mount\noptions=(ro,atime), <br>\nmount options in (ro,atime),</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To help clarify\nthe flexibility and complexity of mount rules, here are some\nexample rules with accompanying matching commands: <b><br>\nmount,</b></p>\n\n<p style=\"margin-left:17%;\">the &rsquo;mount&rsquo; rule\nwithout any conditionals is the most generic and allows any\nmount. Equivalent to &rsquo;mount fstype=** options=** **\n-&gt; /**&rsquo;.</p>\n\n<p style=\"margin-left:11%;\"><b>mount /dev/foo,</b></p>\n\n<p style=\"margin-left:17%;\">allow mounting of /dev/foo\nanywhere with any options. Some matching mount commands:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount\n/dev/foo /mnt <br>\n$ mount -t ext3 /dev/foo /mnt <br>\n$ mount -t vfat /dev/foo /mnt <br>\n$ mount -o ro,atime,noexec,nodiratime /dev/foo\n/srv/some/mountpoint</p>\n\n<p style=\"margin-left:11%;\"><b>mount options=ro\n/dev/foo,</b></p>\n\n<p style=\"margin-left:17%;\">allow mounting of /dev/foo\nanywhere, as read only. Some matching mount commands:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o ro\n/dev/foo /mnt <br>\n$ mount -o ro /dev/foo /some/where/else</p>\n\n<p style=\"margin-left:11%;\"><b>mount options=(ro,atime)\n/dev/foo,</b></p>\n\n<p style=\"margin-left:17%;\">allow mount of /dev/foo\nanywhere, as read only and using inode access times. Some\nmatching mount commands:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o\nro,atime /dev/foo /mnt <br>\n$ mount -o ro,atime /dev/foo /some/where/else</p>\n\n<p style=\"margin-left:11%;\"><b>mount options in (ro,atime)\n/dev/foo,</b></p>\n\n<p style=\"margin-left:17%;\">allow mount of /dev/foo\nanywhere using some combination of &rsquo;ro&rsquo; and\n&rsquo;atime&rsquo; (see above). Some matching mount\ncommands:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o ro\n/dev/foo /mnt <br>\n$ mount -o atime /dev/foo /some/where/else <br>\n$ mount -o ro,atime /dev/foo /some/other/place</p>\n\n<p style=\"margin-left:11%;\"><b>mount options=ro /dev/foo,\nmount options=atime /dev/foo,</b></p>\n\n<p style=\"margin-left:17%;\">allow mount of /dev/foo\nanywhere as read only, and allow mount of /dev/foo anywhere\nusing inode access times. Note this is expressed as two\ndifferent rules. Matches:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o ro\n/dev/foo /mnt/1 <br>\n$ mount -o atime /dev/foo /mnt/2</p>\n\n<p style=\"margin-left:11%;\"><b>mount -&gt; /mnt/**,</b></p>\n\n<p style=\"margin-left:17%;\">allow mounting anything under a\ndirectory in /mnt/**. Some matching mount commands:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount\n/dev/foo1 /mnt/1 <br>\n$ mount -o ro,atime,noexec,nodiratime /dev/foo2\n/mnt/deep/path/foo2</p>\n\n<p style=\"margin-left:11%;\"><b>mount options=ro -&gt;\n/mnt/**,</b></p>\n\n<p style=\"margin-left:17%;\">allow mounting anything under\n/mnt/**, as read only. Some matching mount commands:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o ro\n/dev/foo1 /mnt/1 <br>\n$ mount -o ro /dev/foo2 /mnt/deep/path/foo2</p>\n\n<p style=\"margin-left:11%;\"><b>mount fstype=ext3\noptions=(rw,atime) /dev/sdb1 -&gt; /mnt/stick/,</b></p>\n\n<p style=\"margin-left:17%;\">allow mounting an ext3\nfilesystem in /dev/sdb1 on /mnt/stick as read/write and\nusing inode access times. Matches only:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o\nrw,atime /dev/sdb1 /mnt/stick</p>\n\n<p style=\"margin-left:11%;\"><b>mount options=(ro, atime)\noptions in (nodev, user) /dev/foo -&gt; /mnt/,</b></p>\n\n<p style=\"margin-left:17%;\">allow mounting /dev/foo on\n/mmt/ read only and using inode access times or allow\nmounting /dev/foo on /mnt/ with some combination of\n&rsquo;nodev&rsquo; and &rsquo;user&rsquo;. Matches\nonly:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ mount -o\nro,atime /dev/foo /mnt <br>\n$ mount -o nodev /dev/foo /mnt <br>\n$ mount -o user /dev/foo /mnt <br>\n$ mount -o nodev,user /dev/foo /mnt</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Pivot Root\nRules</b> <br>\nAppArmor mediates changing of the root filesystem through\nthe <a href=\"https://man.page/2/pivot_root\">pivot_root(2)</a> system call. The syntax of\n&rsquo;pivot_root&rsquo; rules in AppArmor is based on the\n<a href=\"https://man.page/2/pivot_root\">pivot_root(2)</a> system call parameters with the notable\nexception that the ordering is reversed. The path\ncorresponding to the put_old parameter of\n<a href=\"https://man.page/2/pivot_root\">pivot_root(2)</a> is optionally specified in the\n&rsquo;pivot_root&rsquo; rule using the\n&rsquo;oldroot=&rsquo; prefix.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">AppArmor\n&rsquo;pivot_root&rsquo; rules can specify a profile\ntransition to occur during the <a href=\"https://man.page/2/pivot_root\">pivot_root(2)</a> system\ncall. Note that AppArmor will only transition the process\ncalling <a href=\"https://man.page/2/pivot_root\">pivot_root(2)</a> to the new profile.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The paths\nspecified in &rsquo;pivot_root&rsquo; rules must end with\n&rsquo;/&rsquo; since they are directories.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Here are some\nexample &rsquo;pivot_root&rsquo; rules:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"># Allow any\npivot <br>\npivot_root, <br>\n# Allow pivoting to any new root directory and putting the\nold root <br>\n# directory at /mnt/root/old/ <br>\npivot_root oldroot=/mnt/root/old/, <br>\n# Allow pivoting the root directory to /mnt/root/ <br>\npivot_root /mnt/root/, <br>\n# Allow pivoting to /mnt/root/ and putting the old root\ndirectory at <br>\n# /mnt/root/old/ <br>\npivot_root oldroot=/mnt/root/old/ /mnt/root/, <br>\n# Allow pivoting to /mnt/root/, putting the old root\ndirectory at <br>\n# /mnt/root/old/ and transition to the /mnt/root/sbin/init\nprofile <br>\npivot_root oldroot=/mnt/root/old/ /mnt/root/ -&gt;\n/mnt/root/sbin/init,</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>PTrace\nrules</b> <br>\nAppArmor supports mediation of <a href=\"https://man.page/2/ptrace\">ptrace(2)</a>. AppArmor\nPTrace rules are accumulated so that the granted PTrace\npermissions are the union of all the listed PTrace rule\npermissions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">AppArmor PTrace\npermissions are implied when a rule does not explicitly\nstate an access list. By default, all PTrace permissions are\nimplied.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The trace and\ntracedby permissions govern <a href=\"https://man.page/2/ptrace\">ptrace(2)</a> while read and\nreadby govern certain <a href=\"https://man.page/5/proc\">proc(5)</a> filesystem accesses,\n<a href=\"https://man.page/2/kcmp\">kcmp(2)</a>, futexes (<a href=\"https://man.page/2/get_robust_list\">get_robust_list(2)</a>) and perf\ntrace events.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For a ptrace\noperation to be allowed the profile of the tracing process\nand the profile of the target task must both have the\ncorrect permissions. For example, the profile of the process\nattaching to another task must have the trace permission for\nthe target task&rsquo;s profile, and the task being traced\nmust have the tracedby permission for the tracing\nprocess&rsquo; profile.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Example\nAppArmor PTrace rules:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"># Allow all\nPTrace access <br>\nptrace, <br>\n# Explicitly allow all PTrace access, <br>\nptrace (read, readby, trace, tracedby), <br>\n# Explicitly deny use of ptrace(2) <br>\ndeny ptrace (trace), <br>\n# Allow unconfined processes (eg, a debugger) to ptrace us\n<br>\nptrace (readby, tracedby) peer=unconfined, <br>\n# Allow ptrace of a process running under the /usr/bin/foo\nprofile <br>\nptrace (trace) peer=/usr/bin/foo,</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Signal\nrules</b> <br>\nAppArmor supports mediation of <a href=\"https://man.page/7/signal\">signal(7)</a>. AppArmor\nsignal rules are accumulated so that the granted signal\npermissions are the union of all the listed signal rule\npermissions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">AppArmor signal\npermissions are implied when a rule does not explicitly\nstate an access list. By default, all signal permissions are\nimplied.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For the sending\nof a signal to be allowed, the profile of the sending\nprocess and the profile of the target task must both have\nthe correct permissions. For example, the profile of a\nprocess sending a signal to another task must have the send\npermission for the target task&rsquo;s profile, and the task\nreceiving the signal must have a receive permission for the\nsending process&rsquo; profile.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Example\nAppArmor signal rules:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"># Allow all\nsignal access <br>\nsignal, <br>\n# Explicitly deny sending the HUP and INT signals <br>\ndeny signal (send) set=(hup, int), <br>\n# Allow unconfined processes to send us signals <br>\nsignal (receive) peer=unconfined, <br>\n# Allow sending of signals to a process running under the\n/usr/bin/foo <br>\n# profile <br>\nsignal (send) peer=/usr/bin/foo, <br>\n# Allow checking for PID existence <br>\nsignal (receive, send) set=(&quot;exists&quot;), <br>\n# Allow us to signal ourselves using the built-in\n@{profile_name} variable <br>\nsignal peer=@{profile_name}, <br>\n# Allow two real-time signals <br>\nsignal set=(rtmin+0 rtmin+32),</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>DBus\nrules</b> <br>\nAppArmor supports DBus mediation. The mediation is performed\nin conjunction with the DBus daemon. The DBus daemon\nverifies that communications over the bus are permitted by\nAppArmor policy.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">AppArmor DBus\nrules are accumulated so that the granted DBus permissions\nare the union of all the listed DBus rule permissions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">AppArmor DBus\nrules are broad and general and become more restrictive as\nfurther information is specified. Policy may be specified\ndown to the interface member level (method or signal name),\nhowever the contents of messages are not examined.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Some AppArmor\nDBus permissions are not compatible with all AppArmor DBus\nrules. The &rsquo;bind&rsquo; permission cannot be used in\nmessage rules. The &rsquo;send&rsquo; and\n&rsquo;receive&rsquo; permissions cannot be used in service\nrules. The &rsquo;eavesdrop&rsquo; permission cannot be used\nin rules containing any conditionals outside of the\n&rsquo;bus&rsquo; conditional.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&rsquo;r&rsquo;\nand &rsquo;read&rsquo; are synonyms for\n&rsquo;receive&rsquo;. &rsquo;w&rsquo; and\n&rsquo;write&rsquo; are synonyms for &rsquo;send&rsquo;.\n&rsquo;rw&rsquo; is a synonym for both &rsquo;send&rsquo;\nand &rsquo;receive&rsquo;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">AppArmor DBus\npermissions are implied when a rule does not explicitly\nstate an access list. By default, all DBus permissions are\nimplied. Only message permissions are implied for message\nrules and only service permissions are implied for service\nrules.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Example\nAppArmor DBus rules:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"># Allow all\nDBus access <br>\ndbus, <br>\n# Explicitly allow all DBus access, <br>\ndbus (send, receive, bind), <br>\n# Deny send/receive/bind access to the session bus <br>\ndeny dbus bus=session, <br>\n# Allow bind access for a particular name on any bus <br>\ndbus bind name=com.example.ExampleName, <br>\n# Allow receive access for a particular path and interface\n<br>\ndbus receive path=/com/example/path\ninterface=com.example.Interface, <br>\n# Deny send/receive access to the system bus for a\nparticular interface <br>\ndeny dbus bus=system interface=com.example.ExampleInterface,\n<br>\n# Allow send access for a particular path, interface,\nmember, and pair of <br>\n# peer names: <br>\ndbus send <br>\nbus=session <br>\npath=/com/example/path <br>\ninterface=com.example.Interface <br>\nmember=ExampleMethod <br>\n\npeer=(name=(com.example.ExampleName1|com.example.ExampleName2)),\n<br>\n# Allow receive access for all unconfined peers <br>\ndbus receive peer=(label=unconfined), <br>\n# Allow eavesdropping on the system bus <br>\ndbus eavesdrop bus=system, <br>\n# Allow and audit all eavesdropping <br>\naudit dbus eavesdrop,</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Unix socket\nrules</b> <br>\nAppArmor supports fine grained mediation of unix domain\nabstract and anonymous sockets. Unix domain sockets with\nfile system paths are mediated via file access rules.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Abstract unix\ndomain sockets is a nonportable Linux extension of unix\ndomain sockets, see <a href=\"https://man.page/7/unix\">unix(7)</a> for more information.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Unix socket\naddress paths</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The sun_path\ncomponent (aka the socket address) of a unix domain socket\nis specified by the</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">addr=</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">conditional. If\nan address conditional is not specified as part of a rule\nthen the rule matches both abstract and anonymous\nsockets.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In apparmor the\naddress of an abstract unix domain socket begins with the\n<i>@</i> character, similar to how they are reported (as\npaths) by netstat -x. The address then follows and may\ncontain pattern matching and any characters including the\nnull character. In apparmor null characters must be\nspecified by using an escape sequence <i>\\000</i> or\n<i>\\x00</i>. The pattern matching is the same as is used by\nfile path matching so * will not match <i>/</i> even though\nit has no special meaning with in an abstract socket name.\nEg.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unix\naddr=@*,</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Autobound unix\ndomain sockets have a unix sun_path assigned to them by the\nkernel, as such specifying a policy based address is not\npossible. The autobinding of sockets can be controlled by\nspecifying the special <i>auto</i> keyword. Eg.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unix\naddr=auto,</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To indicate\nthat the rule only applies to auto binding of unix domain\nsockets. It is important to note this only applies to the\n<i>bind</i> permission as once the socket is bound to an\naddress it is indistinguishable from a socket that have an\naddr bound with a specified name. When the <i>auto</i>\nkeyword is used with other permissions or as part of a peer\naddr it will be replaced with a pattern that can match an\nautobound socket. Eg. For some kernels</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unix rw\naddr=auto,</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">is transformed\nto</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unix rw\naddr=@[a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9],</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It is important\nto note, this pattern may match abstract sockets that were\nnot autobound but have an addr that fits what is generated\nby the kernel when autobinding a socket.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Anonymous unix\ndomain sockets have no sun_path associated with the socket\naddress, however it can be specified with the special\n<i>none</i> keyword to indicate the rule only applies to\nanonymous unix domain sockets. Eg.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unix\naddr=none,</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the address\ncomponent of a rule is not specified then the rule applies\nto autobind, abstract and anonymous sockets.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Unix socket\npermissions</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Unix domain\nsocket rules are accumulated so that the granted unix socket\npermissions are the union of all the listed unix rule\npermissions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Unix domain\nsocket rules are broad and general and become more\nrestrictive as further information is specified. Policy may\nbe specified down to the socket address (aka sun_path) and\nlabel level. The content of the communication is not\nexamined.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Unix socket\nrule permissions are implied when a rule does not explicitly\nstate an access list. By default if a rule does not have an\naccess list all permissions that are compatible with the\nspecified set of local and peer conditionals are\nimplied.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The create,\nbind, listen, shutdown, getattr, setattr, getopt, and setopt\npermissions are local socket permissions. They are only\napplied to the local socket and can&rsquo;t be specified in\nrules that have a peer component. The accept permission\napplies to the combination of a local and peer socket. The\nconnect, send, and receive permissions are peer socket\npermissions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Only the peer\nsocket permissions will be applied to rules that don&rsquo;t\nspecify permissions and contain a peer component.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Example Unix\ndomain socket rules:</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"># Allow all\npermissions to unix sockets <br>\nunix, <br>\n# Explicitly allow all unix permissions <br>\nunix (create, listen, accept, connect, send, receive,\ngetattr, setattr, setopt, getopt), <br>\n# Explicitly deny unix socket access <br>\ndeny unix, <br>\n# Allow create and use of abstract and anonymous sockets for\nprofile_name <br>\nunix peer=(label=@{profile_name}), <br>\n# Allow receiving via unix sockets from unconfined <br>\nunix (receive) peer=(label=unconfined), <br>\n# Allow getattr and shutdown on anonymous sockets <br>\nunix (getattr, shutdown) addr=none, <br>\n# Allow SOCK_STREAM connect, receive and send on an abstract\nsocket @bar <br>\n# with peer running under profile '/foo' <br>\nunix (connect, receive, send) type=stream\npeer=(label=/foo,addr=&quot;@bar&quot;), <br>\n# Allow accepting connections from and receiving from peer\nrunning under <br>\n# profile '/bar' on abstract socket '@foo' <br>\nunix (accept, receive) addr=@foo peer=(label=/bar),</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Abstract\nunix domain sockets autobind</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Abstract unix\ndomain sockets can autobind to an address. The autobind\naddress is a unique 5 digit string of decimal numbers, eg.\n@00001. There is nothing that prevents a task from manually\nbinding to addresses with a similar pattern so it is\nimpossible to reliably identify autobind addresses from a\nregular address.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Interaction\nof network rules and fine grained unix domain socket\nrules</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The coarse\ngrained networking rules can be used to control unix domain\nsockets as well. When fine grained unix domain socket\nmediation is available the coarse grained network rule is\nmapped into the equivalent unix socket rule.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">E.G.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">network unix,\n=&gt; unix, <br>\nnetwork unix stream, =&gt; unix stream,</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Fine grained\nmediation rules however can not be losslessly converted back\nto the coarse grained network rule; e.g.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">unix bind\naddr=@example,</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Has no exact\nmatch under coarse grained network rules, the closest match\nis the much wider permission rule of</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">network\nunix,</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>change_profile\nrules</b> <br>\nAppArmor supports self directed profile transitions via the\nchange_profile api. Change_profile rules control which\npermissions for which profiles a confined task can\ntransition to. The profile name can contain apparmor pattern\nmatching to specify different profiles.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">change_profile\n-&gt; **,</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nchange_profile api allows the transition to be delayed until\nwhen a task executes another application. If an exec rule\ntransition is specified for the application and the\nchange_profile api is used to make a transition at exec\ntime, the transition specified by the change_profile api\ntakes precedence.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nChange_profile permission can restrict which profiles can be\ntransitioned to based off of the executable name by\nspecifying the exec condition.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">change_profile\n/bin/bash -&gt; new_profile,</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The restricting\nof the transition profile to a given executable at exec time\nis only useful when then current task is allowed to make\ndynamic decisions about what confinement should be, but the\ndecision set needs to be controlled. A list of profiles or\nmultiple rules can be used to specify the profiles in the\nset. Eg.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">change_profile\n/bin/bash -&gt;\n{new_profile1,new_profile2,new_profile3},</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">An exec rule\ncan be used to specify a transition for the executable, if\nthe transition should be allowed even if the change_profile\napi has not been used to select a transition for those\navailable in the change_profile rule set. Eg.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/bin/bash Px\n-&gt; new_profile1, <br>\nchange_profile /bin/bash -&gt;\n{new_profile1,new_profile2,new_profile3},</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The exec mode\ndictates whether or not the Linux Kernel&rsquo;s\n<b>unsafe_exec</b> routines should be used to scrub the\nenvironment, similar to setuid programs. (See\n<b>ld.so</b>(8) for some information on setuid/setgid\nenvironment scrubbing.) The <b>safe</b> mode sets up\nenvironment scrubbing to occur when the new application is\nexecuted and <b>unsafe</b> mode disables AppArmor&rsquo;s\nrequirement for environment scrubbing (the kernel and/or\nlibc may still require environment scrubbing). An exec mode\ncan only be specified when an exec condition is present.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">change_profile\nsafe /bin/bash -&gt; new_profile,</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Not all kernels\nsupport <b>safe</b> mode and the parser will downgrade rules\nto <b>unsafe</b> mode in that situation. If no exec mode is\nspecified, the default is <b>safe</b> mode in kernels that\nsupport it.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>rlimit\nrules</b> <br>\nAppArmor can set and control the resource limits associated\nwith a profile as described in the <a href=\"https://man.page/2/setrlimit\">setrlimit(2)</a> man\npage.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The AppArmor\nrlimit controls allow setting of limits and restricting\nchanges of them and these actions can be audited.\nEnforcement of the set limits is handled by the standard\nkernel enforcement mechanism for rlimits and will not result\nin an audited apparmor message if the limit is enforced.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If a profile\ndoes not have an rlimit rule associated with a given rlimit\nthen the rlimit is left alone and regular access, including\nchanging the limit, is allowed. However if the profile sets\nan rlimit then the current limit is checked and if greater\nthan the limit specified in the rule it will be changed to\nthe specified limit.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">AppArmor rlimit\nrules control the hard limit of an application and ensure\nthat if the hard limit is lowered that the soft limit does\nnot exceed the hard limit value.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Eg.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">set rlimit data\n&lt;= 100M, <br>\nset rlimit nproc &lt;= 10, <br>\nset rlimit nice &lt;= 5,</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Variables</b>\n<br>\nAppArmor&rsquo;s policy language allows embedding variables\ninto file rules to enable easier configuration for some\ncommon (and pervasive) setups. Variables may have multiple\nvalues assigned, but any variable assignments must be made\nbefore the start of the profile.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The parser will\nautomatically expand variables to include all values that\nthey have been assigned; it is an error to reference a\nvariable without setting at least one value. You can use\nempty quotes (&quot;&quot;) to explicitly add an empty\nvalue.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">At the time of\nthis writing, the following variables are defined in the\nprovided AppArmor policy:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">@{HOME} <br>\n@{HOMEDIRS} <br>\n@{multiarch} <br>\n@{pid} <br>\n@{pids} <br>\n@{PROC} <br>\n@{securityfs} <br>\n@{apparmorfs} <br>\n@{sys} <br>\n@{tid} <br>\n@{run} <br>\n@{XDG_DESKTOP_DIR} <br>\n@{XDG_DOWNLOAD_DIR} <br>\n@{XDG_TEMPLATES_DIR} <br>\n@{XDG_PUBLICSHARE_DIR} <br>\n@{XDG_DOCUMENTS_DIR} <br>\n@{XDG_MUSIC_DIR} <br>\n@{XDG_PICTURES_DIR} <br>\n@{XDG_VIDEOS_DIR}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">These are\ndefined in files in <i>/etc/apparmor.d/tunables</i> and are\nused in many of the abstractions described later.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">You may also\nadd files in <i>/etc/apparmor.d/tunables/home.d</i> for\nsite-specific customization of <b>@{ <small>HOMEDIRS</small>\n}</b>, <i>/etc/apparmor.d/tunables/multiarch.d</i> for\n<b>@{multiarch}</b> and\n<i>/etc/apparmor.d/tunables/xdg-user-dirs.d</i> for\n<b>@{XDG_*}</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The special\n<b>@{profile_name}</b> variable is set to the profile name\nand may be used in all policy.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Alias\nrules</b> <br>\nAppArmor also provides alias rules for remapping paths for\nsite-specific layouts. They are an alternative form of path\nrewriting to using variables, and are done after variable\nresolution. Alias rules must occur within the preamble of\nthe profile. System-wide aliases are found in\n<i>/etc/apparmor.d/tunables/alias</i>, which is included by\n<i>/etc/apparmor.d/tunables/global</i>.\n<i>/etc/apparmor.d/tunables/global</i> is typically included\nat the beginning of an AppArmor profile.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Globbing</b>\n<br>\nFile resources may be specified with a globbing syntax\nsimilar to that used by popular shells, such as\n<a href=\"https://man.page/1/csh\">csh(1)</a>, <a href=\"https://man.page/1/bash\">bash(1)</a>, <a href=\"https://man.page/1/zsh\">zsh(1)</a>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>*</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>can substitute for any number of characters, excepting\n&rsquo;/&rsquo;</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>**</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>can substitute for any number of characters, including\n&rsquo;/&rsquo;</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>?</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>can substitute for any single character excepting\n&rsquo;/&rsquo;</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>[abc]</b></p>\n\n<p style=\"margin-left:17%;\">will substitute for the single\ncharacter a, b, or c</p>\n\n<p style=\"margin-left:11%;\"><b>[a-c]</b></p>\n\n<p style=\"margin-left:17%;\">will substitute for the single\ncharacter a, b, or c</p>\n\n<p style=\"margin-left:11%;\"><b>[^a-c]</b></p>\n\n<p style=\"margin-left:17%;\">will substitute for any single\ncharacter not matching a, b or c</p>\n\n<p style=\"margin-left:11%;\"><b>{ab,cd}</b></p>\n\n<p style=\"margin-left:17%;\">will expand to one rule to\nmatch ab, one rule to match cd</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When AppArmor\nlooks up a directory the pathname being looked up will end\nwith a slash (e.g., <i>/var/tmp/</i>); otherwise it will not\nend with a slash. Only rules that match a trailing slash\nwill match directories. Some examples, none matching the\n<i>/tmp/</i> directory itself, are: <b><br>\n/tmp/*</b></p>\n\n<p style=\"margin-left:17%;\">Files directly in\n<i>/tmp</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>/tmp/*/</b></p>\n\n<p style=\"margin-left:17%;\">Directories directly in\n<i>/tmp</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>/tmp/**</b></p>\n\n<p style=\"margin-left:17%;\">Files and directories anywhere\nunderneath <i>/tmp</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>/tmp/**/</b></p>\n\n<p style=\"margin-left:17%;\">Directories anywhere underneath\n<i>/tmp</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Rule\nQualifiers</b> <br>\nThere are several rule qualifiers that can be applied to\npermission rules. Rule qualifiers can modify the rule and/or\npermissions within the rule. <b><br>\nallow</b></p>\n\n<p style=\"margin-left:17%;\">Specifies that permissions\nrequests that match the rule are allowed. This is the\ndefault value for rules and does not need to be specified.\nConflicts with the <i>deny</i> qualifier.</p>\n\n<p style=\"margin-left:11%;\"><b>audit</b></p>\n\n<p style=\"margin-left:17%;\">Specifies that permissions\nrequests that match the rule should be recorded to the audit\nlog.</p>\n\n<p style=\"margin-left:11%;\"><b>deny</b></p>\n\n<p style=\"margin-left:17%;\">Specifies that permissions\nrequests that match the rule should be denied without\nlogging. Can be combined with &rsquo;audit&rsquo; to enable\nlogging. Conflicts with the <i>allow</i> qualifier.</p>\n\n<p style=\"margin-left:11%;\"><b>owner</b></p>\n\n<p style=\"margin-left:17%;\">Specifies that the task must\nhave the same euid/fsuid as the object being referenced by\nthe permission check.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Qualifier\nBlocks</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Rule Qualifiers\ncan be applied to multiple rules at a time by grouping the\nrules into a rule block.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">audit { <br>\n/foo r, <br>\nnetwork, <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\nmechanism</b> <br>\nAppArmor provides an easy abstraction mechanism to group\ncommon access requirements; this abstraction is an extremely\nflexible way to grant site-specific rights and makes writing\nnew AppArmor profiles very simple by assembling the needed\nbuilding blocks for any given program.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The use of\n&rsquo;#include&rsquo; is modelled directly after\n<a href=\"https://man.page/1/cpp\">cpp(1)</a>; its use will replace the\n&rsquo;#include&rsquo; statement with the specified\nfile&rsquo;s contents. The leading &rsquo;#&rsquo; is\noptional, and the &rsquo;#include&rsquo; keyword can be\nfollowed by an option conditional &rsquo;if exists&rsquo;\nthat specifies profile compilation should continue if the\nspecified file or directory is not found.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&quot;/absolute/path&quot;</b> specifies that\n<i>/absolute/path</i> should be used. <b>#include\n&quot;relative/path&quot;</b> specifies that\n<i>relative/path</i> should be used, where the path is\nrelative to the current working directory. <b>#include\n&lt;magic/path&gt;</b> is the most common usage; it will\nload <i>magic/path</i> relative to a directory specified to\n<b>apparmor_parser</b>(8). <i>/etc/apparmor.d/</i> is the\nAppArmor default.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The supplied\nAppArmor profiles follow several conventions; the\nabstractions stored in <i>/etc/apparmor.d/abstractions/</i>\nare some large clusters that are used in most profiles. What\nfollows are short descriptions of how some of the\nabstractions are used. <i><br>\nabstractions/audio</i></p>\n\n<p style=\"margin-left:17%;\">Includes accesses to device\nfiles used for audio applications.</p>\n\n\n<p style=\"margin-left:11%;\"><i>abstractions/authentication</i></p>\n\n<p style=\"margin-left:17%;\">Includes access to files and\nservices typically necessary for services that perform user\nauthentication.</p>\n\n<p style=\"margin-left:11%;\"><i>abstractions/base</i></p>\n\n<p style=\"margin-left:17%;\">Includes files that should be\nreadable and writable in all profiles.</p>\n\n<p style=\"margin-left:11%;\"><i>abstractions/bash</i></p>\n\n<p style=\"margin-left:17%;\">Includes many files used by\nbash; useful for interactive shells and programs that call\n<a href=\"https://man.page/3/system\">system(3)</a>.</p>\n\n\n<p style=\"margin-left:11%;\"><i>abstractions/consoles</i></p>\n\n<p style=\"margin-left:17%;\">Includes read and write access\nto the device files controlling the virtual console,\n<b>sshd</b>(8), <a href=\"https://man.page/1/xterm\">xterm(1)</a>, etc. This abstraction is\nneeded for many programs that interact with users.</p>\n\n<p style=\"margin-left:11%;\"><i>abstractions/fonts</i></p>\n\n<p style=\"margin-left:17%;\">Includes access to fonts and\nthe font libraries.</p>\n\n<p style=\"margin-left:11%;\"><i>abstractions/gnome</i></p>\n\n<p style=\"margin-left:17%;\">Includes read and write access\nto <small>GNOME</small> configuration files, as well as read\naccess to <small>GNOME</small> libraries.</p>\n\n<p style=\"margin-left:11%;\"><i>abstractions/kde</i></p>\n\n<p style=\"margin-left:17%;\">Includes read and write access\nto <small>KDE</small> configuration files, as well as read\naccess to <small>KDE</small> libraries.</p>\n\n\n<p style=\"margin-left:11%;\"><i>abstractions/kerberosclient</i></p>\n\n<p style=\"margin-left:17%;\">Includes file access rules\nneeded for common kerberos clients.</p>\n\n\n<p style=\"margin-left:11%;\"><i>abstractions/nameservice</i></p>\n\n<p style=\"margin-left:17%;\">Includes file rules to allow\n<small>DNS, LDAP, NIS, SMB,</small> user and group password\ndatabases, services, and protocols lookups.</p>\n\n<p style=\"margin-left:11%;\"><i>abstractions/perl</i></p>\n\n<p style=\"margin-left:17%;\">Includes read access to perl\nmodules.</p>\n\n<p style=\"margin-left:11%;\"><i>abstractions/user-download\n<br>\nabstractions/user-mail <br>\nabstractions/user-manpages <br>\nabstractions/user-tmp <br>\nabstractions/user-write</i></p>\n\n<p style=\"margin-left:17%;\">Some profiles for typical\n&quot;user&quot; programs will use these include files to\ndescribe rights that users have in the system.</p>\n\n<p style=\"margin-left:11%;\"><i>abstractions/wutmp</i></p>\n\n<p style=\"margin-left:17%;\">Includes write access to files\nused to maintain <a href=\"https://man.page/5/wtmp\">wtmp(5)</a> and <a href=\"https://man.page/5/utmp\">utmp(5)</a>\ndatabases, used with the w(1) and associated commands.</p>\n\n<p style=\"margin-left:11%;\"><i>abstractions/X</i></p>\n\n<p style=\"margin-left:17%;\">Includes read access to\nlibraries, configuration files, X authentication files, and\nthe X socket.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Some of the\nabstractions rely on variables that are set in files in the\n<i>/etc/apparmor.d/tunables/</i> directory. These variables\nare currently <b>@{ <small>HOME</small> }</b> and <b>@{\n<small>HOMEDIRS</small> }</b>. Variables cannot be set in\nprofile scope; they can only be set before the profile.\nTherefore, any profiles that use abstractions should either\n<b>#include &lt;tunables/global&gt;</b> or otherwise ensure\nthat <b>@{ <small>HOME</small> }</b> and <b>@{\n<small>HOMEDIRS</small> }</b> are set before starting the\nprofile definition. The <b>aa-autodep</b>(8) and\n<b>aa-genprof</b>(8) utilities will automatically emit\n<b>#include &lt;tunables/global&gt;</b> in generated\nprofiles.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Feature\n<small>ABI</small></b> <br>\nThe feature abi tells AppArmor which feature set the policy\nwas developed under. This is important to ensure that\nkernels with a different feature set don&rsquo;t enforce\nfeatures that the policy doesn&rsquo;t support, which can\nresult in unexpected application failures.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When policy is\ncompiled both the kernel feature abi and policy feature abi\nare consulted to build a policy that will work for the\nsystem&rsquo;s kernel.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the kernel\nsupports a feature not supported by the policy then policy\nwill be built so that the kernel does <small>NOT</small>\nenforce that feature.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the policy\nsupports a feature not supported by the kernel the compile\nmay downgrade the rule with the feature to something the\nkernel supports, drop the rule completely, or fail the\ncompile.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the policy\nabi is specified as <b>kernel</b> then the running\nkernel&rsquo;s abi will be used. This should never be used\nin shipped policy as it can cause system breakage when a new\nkernel is installed.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i><small>ABI</small>\ncompatibility with AppArmor 2.x</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">AppArmor 3\nremains compatible with AppArmor 2.x by detecting when a\nprofile does not have a feature <small>ABI</small>\nspecified. In this case the policy compile will either apply\nthe pinned feature <small>ABI</small> as specified by the\nconfig file or the command line, or if neither of those are\napplied by using a default feature <small>ABI.</small></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It is important\nto note that the default feature <small>ABI</small> does not\nsupport new features added in AppArmor 3 or later.</p>\n\n<h2>EXAMPLE\n<a name=\"EXAMPLE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">An example\nAppArmor profile:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"># which feature\nabi the policy was developed with <br>\nabi &lt;abi/3.0&gt;, <br>\n# a variable definition in the preamble <br>\n@{HOME} = /home/*/ /root/ <br>\n# a comment about foo. <br>\n/usr/bin/foo { <br>\n/bin/mount ux, <br>\n/dev/{,u}random r, <br>\n/etc/ld.so.cache r, <br>\n/etc/foo.conf r, <br>\n/etc/foo/* r, <br>\n/lib/ld-*.so* rmix, <br>\n/lib/lib*.so* r, <br>\n/proc/[0-9]** r, <br>\n/usr/lib/** r, <br>\n/tmp/foo.pid wr, <br>\n/tmp/foo.* lrw, <br>\n/@{HOME}/.foo_file rw, <br>\n/usr/bin/baz Cx -&gt; baz, <br>\n# a comment about foo's hat (subprofile), bar. <br>\n^bar { <br>\n/lib/ld-*.so* rmix, <br>\n/usr/bin/bar rmix, <br>\n/var/spool/* rwl, <br>\n} <br>\n# a comment about foo's subprofile, baz. <br>\nprofile baz { <br>\n#include &lt;abstractions/bash&gt; <br>\nowner /proc/[0-9]*/stat r, <br>\n/bin/bash ixr, <br>\n/var/lib/baz/ r, <br>\nowner /var/lib/baz/* rw, <br>\n} <br>\n}</p>\n\n<h2>FILES\n<a name=\"FILES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>/etc/init.d/boot.apparmor\n<br>\n/etc/apparmor.d/</i></p>\n\n<h2>KNOWN BUGS\n<a name=\"KNOWN BUGS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">Mount options support the use of\npattern matching but mount flags are not correctly\nintersected against specified patterns. Eg, &rsquo;mount\noptions=**,&rsquo; should be equivalent to\n&rsquo;mount,&rsquo;, but it is not. ( <small>LP:</small>\n#965690)</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The fstype may not be matched against when certain mount\ncommand flags are used. Specifically fstype matching\ncurrently only works when creating a new mount and not\nremount, bind, etc.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Mount rules with multiple &rsquo;options&rsquo;\nconditionals are not applied as documented but instead\nmerged such that &rsquo;options in (ro,nodev) options in\n(atime)&rsquo; is equivalent to &rsquo;options in\n(ro,nodev,atime)&rsquo;.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>When specifying mount options with the &rsquo;in&rsquo;\nconditional, both the positive and negative values match\nwhen specifying one or the other. Eg, &rsquo;rw&rsquo;\nmatches when &rsquo;ro&rsquo; is specified and\n&rsquo;dev&rsquo; matches when &rsquo;nodev&rsquo; is\nspecified such that &rsquo;options in (ro,nodev)&rsquo; is\nequivalent to &rsquo;options in (rw,dev)&rsquo;.</p></td></tr>\n</table>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/7/apparmor\">apparmor(7)</a>,\n<b>apparmor_parser</b>(8), <a href=\"https://man.page/7/apparmor_xattrs\">apparmor_xattrs(7)</a>,\n<a href=\"https://man.page/1/aa-complain\">aa-complain(1)</a>, <a href=\"https://man.page/1/aa-enforce\">aa-enforce(1)</a>,\n<a href=\"https://man.page/2/aa_change_hat\">aa_change_hat(2)</a>, <a href=\"https://man.page/5/mod_apparmor\">mod_apparmor(5)</a>, and\n&lt;https://wiki.apparmor.net&gt;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#FORMAT\">FORMAT</a>","<a href=\"#EXAMPLE\">EXAMPLE</a>","<a href=\"#FILES\">FILES</a>","<a href=\"#KNOWN BUGS\">KNOWN BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"],"level":5}