{"name":"org.freedesktop.portable1","description":"org.freedesktop.portable1 - The D-Bus interface of systemd-portabled","body":"\n\n<h1 align=\"center\">ORG.FREEDESKTOP.PORTABLE1</h1>\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">org.freedesktop.portable1\n- The D-Bus interface of systemd-portabled</p>\n\n<h2>INTRODUCTION\n<a name=\"INTRODUCTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>systemd-portabled.service</b>(8)\nis a system service that may be used to attach, detach and\ninspect portable services. This page describes the D-Bus\ninterface.</p>\n\n<h2>THE MANAGER OBJECT\n<a name=\"THE MANAGER OBJECT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The service\nexposes the following interfaces on the Manager object on\nthe bus:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">node\n/org/freedesktop/portable1 { <br>\ninterface org.freedesktop.portable1.Manager { <br>\nmethods: <br>\nGetImage(in s image, <br>\nout o object); <br>\nListImages(out a(ssbtttso) images); <br>\nGetImageOSRelease(in s image, <br>\nout a{ss} os_release); <br>\nGetImageMetadata(in s image, <br>\nin as matches, <br>\nout s image, <br>\nout ay os_release, <br>\nout a{say} units); <br>\nGetImageMetadataWithExtensions(in s image, <br>\nin as extensions, <br>\nin as matches, <br>\nin t flags, <br>\nout s image, <br>\nout ay os_release, <br>\nout a{say} extensions, <br>\nout a{say} units); <br>\nGetImageState(in s image, <br>\nout s state); <br>\nAttachImage(in s image, <br>\nin as matches, <br>\nin s profile, <br>\nin b runtime, <br>\nin s copy_mode, <br>\nout a(sss) changes); <br>\nAttachImageWithExtensions(in s image, <br>\nin as extensions, <br>\nin as matches, <br>\nin s profile, <br>\nin s copy_mode, <br>\nin t flags, <br>\nout a(sss) changes); <br>\nDetachImage(in s image, <br>\nin b runtime, <br>\nout a(sss) changes); <br>\nDetachImageWithExtensions(in s image, <br>\nin as extensions, <br>\nin t flags, <br>\nout a(sss) changes); <br>\nReattachImage(in s image, <br>\nin as matches, <br>\nin s profile, <br>\nin b runtime, <br>\nin s copy_mode, <br>\nout a(sss) changes_removed, <br>\nout a(sss) changes_updated); <br>\nReattachImageWithExtensions(in s image, <br>\nin as extensions, <br>\nin as matches, <br>\nin s profile, <br>\nin s copy_mode, <br>\nin t flags, <br>\nout a(sss) changes_removed, <br>\nout a(sss) changes_updated); <br>\nRemoveImage(in s image); <br>\nMarkImageReadOnly(in s image, <br>\nin b read_only); <br>\nSetImageLimit(in s image, <br>\nin t limit); <br>\nSetPoolLimit(in t limit); <br>\nproperties: <br>\n\n@org.freedesktop.DBus.Property.EmitsChangedSignal(&quot;false&quot;)\n<br>\nreadonly s PoolPath = '...'; <br>\n\n@org.freedesktop.DBus.Property.EmitsChangedSignal(&quot;false&quot;)\n<br>\nreadonly t PoolUsage = ...; <br>\n\n@org.freedesktop.DBus.Property.EmitsChangedSignal(&quot;false&quot;)\n<br>\nreadonly t PoolLimit = ...; <br>\n\n@org.freedesktop.DBus.Property.EmitsChangedSignal(&quot;false&quot;)\n<br>\nreadonly as Profiles = ['...', ...]; <br>\n}; <br>\ninterface org.freedesktop.DBus.Peer { ... }; <br>\ninterface org.freedesktop.DBus.Introspectable { ... }; <br>\ninterface org.freedesktop.DBus.Properties { ... }; <br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Methods <br>\nGetImage()</b> may be used to get the image object path of\nthe image with the specified name.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ListImages()</b>\nreturns an array of all currently known images. The\nstructures in the array consist of the following fields:\nimage name, type, read-only flag, creation time,\nmodification time, current disk space, usage and image\nobject path.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>GetImageOSRelease()</b>\nretrieves the OS release information of an image. This\nmethod returns an array of key value pairs read from the\n<a href=\"https://man.page/5/os-release\">os-release(5)</a> file in the image and is useful to\nidentify the operating system used in a portable\nservice.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>GetImageMetadata()</b>\nretrieves metadata associated with an image. This method\nreturns the image name, the image's <a href=\"https://man.page/5/os-release\">os-release(5)</a>\ncontent in the form of a (streamable) array of bytes, and a\nlist of portable units contained in the image, in the form\nof a string (unit name) and an array of bytes with the\ncontent.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>GetImageMetadataWithExtensions()</b>\nretrieves metadata associated with an image. This method is\na superset of <b>GetImageMetadata()</b> with the addition of\na list of extensions as input parameter, which were overlaid\non top of the main image via\n<b>AttachImageWithExtensions()</b>. The path of each\nextension and an array of bytes with the content of the\nrespective extension-release file are returned, one such\nstructure for each extension named in the input\narguments.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>GetImageState()</b>\nretrieves the image state as one of the following\nstrings:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\ndetached</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nattached</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nattached-runtime</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nenabled</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nenabled-runtime</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nrunning</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nrunning-runtime</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>AttachImage()</b>\nattaches a portable image to the system. This method takes\nan image path or name, a list of strings that will be used\nto search for unit files inside the image (partial or\ncomplete matches), a string indicating which portable\nprofile to use for the image (see <i>Profiles</i> property\nfor a list of available profiles), a boolean indicating\nwhether to attach the image only for the current boot\nsession, and a string representing the preferred copy mode\n(whether to copy the image or to just symlink it) with the\nfollowing possible values:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\n(null)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; copy</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nsymlink</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This method\nreturns the list of changes applied to the system (for\nexample, which unit was added and is now available as a\nsystem service). Each change is represented as a triplet of\nstrings: the type of change applied, the path on which it\nwas applied, and the source (if any). The type of change\napplied will be one of the following possible values:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; copy</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nsymlink</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nwrite</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nmkdir</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that an\nimage cannot be attached if a unit that it contains is\nalready present on the system.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>AttachImageWithExtensions()</b>\nattaches a portable image to the system. This method is a\nsuperset of <b>AttachImage()</b> with the addition of a list\nof extensions as input parameter, which will be overlaid on\ntop of the main image. When this method is used, detaching\nmust be done by passing the same arguments via the\n<b>DetachImageWithExtensions()</b> method. For more details\non this functionality, see the <i>MountImages=</i> entry on\n<b>systemd.exec</b>(5) and <b>systemd-sysext</b>(8). The\n<i>flag</i> parameter is currently unused and reserved for\nfuture purposes.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>DetachImage()</b>\ndetaches a portable image from the system. This method takes\nan image path or name, and a boolean indicating whether the\nimage to detach was attached only for the current boot\nsession or persistently. This method returns the list of\nchanges applied to the system (for example, which unit was\nremoved and is no longer available as a system service).\nEach change is represented as a triplet of strings: the type\nof change applied, the path on which it was applied, and the\nsource (if any). The type of change applied will be one of\nthe following possible values:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nunlink</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that an\nimage cannot be detached if a unit that it contains is\nrunning.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>DetachImageWithExtensions()</b>\ndetaches a portable image from the system. This method is a\nsuperset of <b>DetachImage()</b> with the addition of a list\nof extensions as input parameter, which were overlaid on top\nof the main image via <b>AttachImageWithExtensions()</b>.\nThe <i>flag</i> parameter is currently unused and reserved\nfor future purposes.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ReattachImage()</b>\ncombines the effects of the <b>AttachImage()</b> method and\nthe <b>DetachImage()</b> method. The difference is that it\nis allowed to reattach an image while one or more of its\nunits are running. The reattach operation will fail if no\nmatching image is attached. The input parameters match the\n<b>AttachImage()</b> method, and the return parameters are\nthe combination of the return parameters of the\n<b>DetachImage()</b> method (first array, units that were\nremoved) and the <b>AttachImage()</b> method (second array,\nunits that were updated or added).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ReattachImageWithExtensions()</b>\nreattaches a portable image to the system. This method is a\nsuperset of <b>ReattachImage()</b> with the addition of a\nlist of extensions as input parameter, which will be\noverlaid on top of the main image. For more details on this\nfunctionality, see the <i>MountImages=</i> entry on\n<b>systemd.exec</b>(5) and <b>systemd-sysext</b>(8). The\n<i>flag</i> parameter is currently unused and reserved for\nfuture purposes</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>RemoveImage()</b>\nremoves the image with the specified name.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>MarkImageReadOnly()</b>\ntoggles the read-only flag of an image.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>SetPoolLimit()</b>\nsets an overall quota limit on the pool of images.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>SetImageLimit()</b>\nsets a per-image quota limit.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>AttachImageWithExtensions()</b>,\n<b>DetachImageWithExtensions()</b> and\n<b>ReattachImageWithExtensions()</b> methods take in options\nas flags instead of booleans to allow for extendability,\ndefined as follows:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">#define\nSD_SYSTEMD_PORTABLE_RUNTIME (UINT64_C(1) &lt;&lt; 0)</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Properties</b>\n<i><br>\nPoolPath</i> specifies the file system path where images are\nwritten to.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>PoolUsage</i>\nspecifies the current usage size of the image pool in\nbytes.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>PoolLimit</i>\nspecifies the size limit of the image pool in bytes.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Profiles</i>\nspecifies the available runtime profiles for portable\nservices.</p>\n\n<h2>THE IMAGE OBJECT\n<a name=\"THE IMAGE OBJECT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The service\nexposes the following interfaces on the Image object on the\nbus:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">node\n/org/freedesktop/portable1 { <br>\ninterface org.freedesktop.portable1.Image { <br>\nmethods: <br>\nGetOSRelease(out a{ss} os_release); <br>\nGetMetadata(in as matches, <br>\nout s image, <br>\nout ay os_release, <br>\nout a{say} units); <br>\nGetMetadataWithExtensions(in as extensions, <br>\nin as matches, <br>\nin t flags, <br>\nout s image, <br>\nout ay os_release, <br>\nout a{say} extensions, <br>\nout a{say} units); <br>\nGetState(out s state); <br>\nAttach(in as matches, <br>\nin s profile, <br>\nin b runtime, <br>\nin s copy_mode, <br>\nout a(sss) changes); <br>\nAttachWithExtensions(in as extensions, <br>\nin as matches, <br>\nin s profile, <br>\nin s copy_mode, <br>\nin t flags, <br>\nout a(sss) changes); <br>\nDetach(in b runtime, <br>\nout a(sss) changes); <br>\nDetachWithExtensions(in as extensions, <br>\nin t flags, <br>\nout a(sss) changes); <br>\nReattach(in as matches, <br>\nin s profile, <br>\nin b runtime, <br>\nin s copy_mode, <br>\nout a(sss) changes_removed, <br>\nout a(sss) changes_updated); <br>\nReattacheWithExtensions(in as extensions, <br>\nin as matches, <br>\nin s profile, <br>\nin s copy_mode, <br>\nin t flags, <br>\nout a(sss) changes_removed, <br>\nout a(sss) changes_updated); <br>\nRemove(); <br>\nMarkReadOnly(in b read_only); <br>\nSetLimit(in t limit); <br>\nproperties: <br>\n\n@org.freedesktop.DBus.Property.EmitsChangedSignal(&quot;false&quot;)\n<br>\nreadonly s Name = '...'; <br>\n\n@org.freedesktop.DBus.Property.EmitsChangedSignal(&quot;false&quot;)\n<br>\nreadonly s Path = '...'; <br>\n\n@org.freedesktop.DBus.Property.EmitsChangedSignal(&quot;false&quot;)\n<br>\nreadonly s Type = '...'; <br>\n\n@org.freedesktop.DBus.Property.EmitsChangedSignal(&quot;false&quot;)\n<br>\nreadonly b ReadOnly = ...; <br>\n\n@org.freedesktop.DBus.Property.EmitsChangedSignal(&quot;false&quot;)\n<br>\nreadonly t CreationTimestamp = ...; <br>\n\n@org.freedesktop.DBus.Property.EmitsChangedSignal(&quot;false&quot;)\n<br>\nreadonly t ModificationTimestamp = ...; <br>\n\n@org.freedesktop.DBus.Property.EmitsChangedSignal(&quot;false&quot;)\n<br>\nreadonly t Usage = ...; <br>\n\n@org.freedesktop.DBus.Property.EmitsChangedSignal(&quot;false&quot;)\n<br>\nreadonly t Limit = ...; <br>\n\n@org.freedesktop.DBus.Property.EmitsChangedSignal(&quot;false&quot;)\n<br>\nreadonly t UsageExclusive = ...; <br>\n\n@org.freedesktop.DBus.Property.EmitsChangedSignal(&quot;false&quot;)\n<br>\nreadonly t LimitExclusive = ...; <br>\n}; <br>\ninterface org.freedesktop.DBus.Peer { ... }; <br>\ninterface org.freedesktop.DBus.Introspectable { ... }; <br>\ninterface org.freedesktop.DBus.Properties { ... }; <br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Methods</b>\n<br>\nThe following methods implement the same operation as the\nrespective methods on the Manager object (see above).\nHowever, these methods operate on the image object and hence\ndoes not take an image name parameter. Invoking the methods\ndirectly on the Manager object has the advantage of not\nrequiring a <b>GetImage()</b> call to get the image object\nfor a specific image name. Calling the methods on the\nManager object is hence a round trip optimization. List of\nmethods:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nGetOSRelease()</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nGetMetadata()</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nGetMetadataWithExtensions()</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nGetState()</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nAttach()</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nAttachWithExtensions()</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nDetach()</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nDetachWithExtensions()</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nReattach()</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nReattacheWithExtensions()</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nRemove()</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nMarkReadOnly()</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nSetLimit()</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Properties</b>\n<i><br>\nName</i> specifies the image name.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Path</i>\nspecifies the file system path where image is stored.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Type</i>\nspecifies the image type.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>ReadOnly</i>\nspecifies whether the image is read-only.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>CreationTimestamp</i>\nspecifies the image creation timestamp.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>ModificationTimestamp</i>\nspecifies the image modification timestamp.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Usage</i>\nspecifies the image disk usage.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Limit</i>\nspecifies the image disk usage limit.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>UsageExclusive</i>\nspecifies the image disk usage (exclusive).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>LimitExclusive</i>\nspecifies the image disk usage limit (exclusive).</p>\n\n<h2>VERSIONING\n<a name=\"VERSIONING\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These D-Bus\ninterfaces follow <b><font color=\"#0000FF\">the usual\ninterface versioning guidelines</font></b>\n<small><font color=\"#000000\">[1]</font></small>\n<font color=\"#000000\">.</font></p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"12%\"></td>\n<td width=\"3%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">1.</font></p> </td>\n<td width=\"2%\"></td>\n<td width=\"63%\">\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">the usual\ninterface versioning guidelines</font></p></td>\n<td width=\"20%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">http://0pointer.de/blog/projects/versioning-dbus.html</font></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#INTRODUCTION\">INTRODUCTION</a>","<a href=\"#THE MANAGER OBJECT\">THE MANAGER OBJECT</a>","<a href=\"#THE IMAGE OBJECT\">THE IMAGE OBJECT</a>","<a href=\"#VERSIONING\">VERSIONING</a>","<a href=\"#NOTES\">NOTES</a>"],"level":5}