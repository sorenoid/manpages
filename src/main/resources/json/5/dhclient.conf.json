{"name":"dhclient.conf","body":"\n\n<h1 align=\"center\">dhclient.conf</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">dhclient.conf -\nDHCP client configuration file</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\ndhclient.conf file contains configuration information for\n<i>dhclient,</i> the Internet Systems Consortium DHCP\nClient.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\ndhclient.conf file is a free-form ASCII text file. It is\nparsed by the recursive-descent parser built into dhclient.\nThe file may contain extra tabs and newlines for formatting\npurposes. Keywords in the file are case-insensitive.\nComments may be placed anywhere within the file (except\nwithin quotes). Comments begin with the # character and end\nat the end of the line.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\ndhclient.conf file can be used to configure the behaviour of\nthe client in a wide variety of ways: protocol timing,\ninformation requested from the server, information required\nof the server, defaults to use if the server does not\nprovide certain information, values with which to override\ninformation provided by the server, or values to prepend or\nappend to information provided by the server. The\nconfiguration file can also be preinitialized with addresses\nto use on networks that don&rsquo;t have DHCP servers.</p>\n\n<h2>PROTOCOL TIMING\n<a name=\"PROTOCOL TIMING\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The timing\nbehaviour of the client need not be configured by the user.\nIf no timing configuration is provided by the user, a fairly\nreasonable timing behaviour will be used by default - one\nwhich results in fairly timely updates without placing an\ninordinate load on the server.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If required the\nfollowing statements can be used to adjust the timing\nbehaviour of the DHCPv4 client. The DHCPv6 protocol provides\nvalues to use and they are not currently configurable.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>The</i>\n<b>timeout</b> <i>statement</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>timeout</b>\n<i>time</i><b>;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>timeout</i> statement determines the amount of time that\nmust pass between the time that the client begins to try to\ndetermine its address and the time that it decides that\nit&rsquo;s not going to be able to contact a server. By\ndefault, this timeout is 300 seconds. After the timeout has\npassed, if there are any static leases defined in the\nconfiguration file, or any leases remaining in the lease\ndatabase that have not yet expired, the client will loop\nthrough these leases attempting to validate them, and if it\nfinds one that appears to be valid, it will use that\nlease&rsquo;s address. If there are no valid static leases\nor unexpired leases in the lease database, the client will\nrestart the protocol after the defined retry interval.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>The</i>\n<b>retry</b> <i>statement</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>retry</b>\n<i>time</i><b>;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>retry</i> statement determines the time that must pass\nafter the client has determined that there is no DHCP server\npresent before it tries again to contact a DHCP server. By\ndefault, this is five minutes.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>The</i>\n<b>select-timeout</b> <i>statement</i></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>select-timeout</b>\n<i>time</i><b>;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It is possible\n(some might say desirable) for there to be more than one\nDHCP server serving any given network. In this case, it is\npossible that a client may be sent more than one offer in\nresponse to its initial lease discovery message. It may be\nthat one of these offers is preferable to the other (e.g.,\none offer may have the address the client previously used,\nand the other may not).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>select-timeout</i> is the time after the client sends its\nfirst lease discovery request at which it stops waiting for\noffers from servers, assuming that it has received at least\none such offer. If no offers have been received by the time\nthe <i>select-timeout</i> has expired, the client will\naccept the first offer that arrives.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">By default, the\nselect-timeout is zero seconds - that is, the client will\ntake the first offer it sees.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>The</i>\n<b>reboot</b> <i>statement</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>reboot</b>\n<i>time</i><b>;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When the client\nis restarted, it first tries to reacquire the last address\nit had. This is called the INIT-REBOOT state. If it is still\nattached to the same network it was attached to when it last\nran, this is the quickest way to get started. The\n<i>reboot</i> statement sets the time that must elapse after\nthe client first tries to reacquire its old address before\nit gives up and tries to discover a new address. By default,\nthe reboot timeout is ten seconds.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>The</i>\n<b>backoff-cutoff</b> <i>statement</i></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>backoff-cutoff</b>\n<i>time</i><b>;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The client uses\nan exponential backoff algorithm with some randomness, so\nthat if many clients try to configure themselves at the same\ntime, they will not make their requests in lockstep. The\n<i>backoff-cutoff</i> statement determines the maximum\namount of time that the client is allowed to back off, the\nactual value will be evaluated randomly between 1/2 to 1 1/2\ntimes the <i>time</i> specified. It defaults to fifteen\nseconds.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>The</i>\n<b>initial-interval</b> <i>statement</i></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>initial-interval</b>\n<i>time</i><b>;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>initial-interval</i> statement sets the amount of time\nbetween the first attempt to reach a server and the second\nattempt to reach a server. Each time a message is sent, the\ninterval between messages is incremented by twice the\ncurrent interval multiplied by a random number between zero\nand one. If it is greater than the backoff-cutoff amount, it\nis set to that amount. It defaults to ten seconds.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>The\ninitial-delay statement</i></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>initial-delay</b>\n<i>time</i><b>;</b></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>initial-delay</i>\nparameter sets the maximum time client can wait after start\nbefore commencing first transmission. According to RFC2131\nSection 4.4.1, client should wait a random time between\nstartup and the actual first transmission. Previous versions\nof ISC DHCP client used to wait random time up to 5 seconds,\nbut that was unwanted due to impact on startup time. As\nsuch, new versions have the default initial delay set to 0.\nTo restore old behavior, please set initial-delay to 5.</p>\n\n<h2>DHCPv6 LEASE SELECTION\n<a name=\"DHCPv6 LEASE SELECTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the DHCPv6\nprotocol the client will wait a small amount of time to\nallow ADVERTISE messages from multiple servers to arrive. It\nwill then need to choose from all of the messages that may\nhave arrived before proceeding to making a request of the\nselected server.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The first\nselection criteria is the set of options and addresses in\nthe message. Messages that don&rsquo;t include an option\nspecified as required will be given a score of 0 and not\nused. If the <i>-R</i> option is given on the command line\nthen messages that don&rsquo;t include the correct number of\nbindings (IA-NA, IA-TA or IA-PD) will be discarded.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The next\ncriteria is the preference value from the message. With the\nhighest preference value being used even if leases with\nbetter addresses or options are available.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Finally the\nlease is scored and the lease with the highest score is\nselected. A lease&rsquo;s score is based on the number of\nbindings, number of addresses and number of options it\ncontains:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"85%\">\n\n\n<p>bindings * X + addresses * Y + options</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\">By default X = 10000 and Y =\n100, this will cause the client to select a lease with more\nbindings over a lease with less bindings but more addresses.\nThe weightings were changed as part of implementing RFC\n7550. Previously they were X = 50 and Y = 100 meaning more\naddresses were preferred over more bindings. If you wish to\ncontinue using the old style you may do so by editing the\nfile includes/site.h and uncommenting the define for\nUSE_ORIGINAL_CLIENT_LEASE_WEIGHTS.</p>\n\n<h2>LEASE REQUIREMENTS AND REQUESTS\n<a name=\"LEASE REQUIREMENTS AND REQUESTS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The DHCP\nprotocol allows the client to request that the server send\nit specific information, and not send it other information\nthat it is not prepared to accept. The protocol also allows\nthe client to reject offers from servers if they don&rsquo;t\ncontain information the client needs, or if the information\nprovided is not satisfactory.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">There is a\nvariety of data contained in offers that DHCP servers send\nto DHCP clients. The data that can be specifically requested\nis what are called <i>DHCP Options</i>. DHCP Options are\ndefined in <b><br>\ndhcp-options(5)</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>The</i>\n<b>request</b> <i>statement</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>[ also ]\nrequest [ [</b> <i>option-space</i> . ] <i>option</i> ]\n[<b>,</b> <i>... ]</i><b>;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The request\nstatement causes the client to request that any server\nresponding to the client send the client its values for the\nspecified options. Only the option names should be specified\nin the request statement - not option parameters. By\ndefault, the DHCPv4 client requests the subnet-mask,\nbroadcast-address, time-offset, routers, domain-name,\ndomain-name-servers and host-name options while the DHCPv6\nclient requests the dhcp6 name-servers and domain-search\noptions. Note that if you enter a &acute;request&acute;\nstatement, you over-ride these defaults and these options\nwill not be requested.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In some cases,\nit may be desirable to send no parameter request list at\nall. To do this, simply write the request statement but\nspecify no parameters:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"92%\">\n\n\n<p>request;</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In most cases,\nit is desirable to simply add one option to the request list\nwhich is of interest to the client in question. In this\ncase, it is best to &acute;also request&acute; the\nadditional options:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"92%\">\n\n\n<p>also request domain-search,\ndhcp6.sip-servers-addresses;</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>The</i>\n<b>require</b> <i>statement</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>[ also ]\nrequire [ [</b> <i>option-space</i> . ] <i>option</i> ]\n[<b>,</b> <i>... ]</i><b>;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The require\nstatement lists options that must be sent in order for an\noffer to be accepted. Offers that do not contain all the\nlisted options will be ignored. There is no default require\nlist.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n\n\n<p>require name-servers;</p></td>\n<td width=\"77%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n\n\n<p>interface eth0 {</p></td>\n<td width=\"77%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"8%\">\n</td>\n<td width=\"77%\">\n\n\n<p>also require domain-search;</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n\n\n<p>}</p></td>\n<td width=\"77%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>The</i>\n<b>send</b> <i>statement</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>send [</b>\n<i>option declaration</i> ] <b>;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The send\nstatement causes the client to send the specified option to\nthe server with the specified value. This is a full option\ndeclaration as described in <b>dhcp-options(5)</b>. Options\nthat are always sent in the DHCP protocol should not be\nspecified here, except that the client can specify a\nrequested <b>dhcp-lease-time</b> option other than the\ndefault requested lease time, which is two hours. The other\nobvious use for this statement is to send information to the\nserver that will allow it to differentiate between this\nclient and other clients or kinds of clients.</p>\n\n<h2>DYNAMIC DNS\n<a name=\"DYNAMIC DNS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The client now\nhas some very limited support for doing DNS updates when a\nlease is acquired. This is prototypical, and probably\ndoesn&rsquo;t do what you want. It also only works if you\nhappen to have control over your DNS server, which\nisn&rsquo;t very likely.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that\neverything in this section is true whether you are using\nDHCPv4 or DHCPv6. The exact same syntax is used for\nboth.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To make it\nwork, you have to declare a key and zone as in the DHCP\nserver (see <b>dhcpd.conf</b>(5) for details). You also need\nto configure the <i>fqdn</i> option on the client, as\nfollows:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">send fqdn.fqdn\n&quot;grosse.example.com.&quot;; <br>\nsend fqdn.encoded on; <br>\nsend fqdn.server-update off; <br>\nalso request fqdn, dhcp6.fqdn;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>fqdn.fqdn</i> option <b>MUST</b> be a fully-qualified\ndomain name. You <b>MUST</b> define a zone statement for the\nzone to be updated. The <i>fqdn.encoded</i> option may need\nto be set to <i>on</i> or <i>off</i>, depending on the DHCP\nserver you are using.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>The</i>\n<b>do-forward-updates</b> <i>statement</i></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>do-forward-updates\n[</b> <i>flag</i> ] <b>;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If you want to\ndo DNS updates in the DHCP client script (see\n<b>dhclient-script(8)</b>) rather than having the DHCP\nclient do the update directly (for example, if you want to\nuse SIG(0) authentication, which is not supported directly\nby the DHCP client, you can instruct the client not to do\nthe update using the <b>do-forward-updates</b> statement.\n<i>Flag</i> should be <b>true</b> if you want the DHCP\nclient to do the update, and <b>false</b> if you don&rsquo;t\nwant the DHCP client to do the update. By default, the DHCP\nclient will do the DNS update.</p>\n\n<h2>OPTION MODIFIERS\n<a name=\"OPTION MODIFIERS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">In some cases,\na client may receive option data from the server which is\nnot really appropriate for that client, or may not receive\ninformation that it needs, and for which a useful default\nvalue exists. It may also receive information which is\nuseful, but which needs to be supplemented with local\ninformation. To handle these needs, several option modifiers\nare available.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>The</i>\n<b>default</b> <i>statement</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>default\n[</b> <i>option declaration</i> ] <b>;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If for some\noption the client should use the value supplied by the\nserver, but needs to use some default value if no value was\nsupplied by the server, these values can be defined in the\n<b>default</b> statement.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>The</i>\n<b>supersede</b> <i>statement</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>supersede\n[</b> <i>option declaration</i> ] <b>;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If for some\noption the client should always use a locally-configured\nvalue or values rather than whatever is supplied by the\nserver, these values can be defined in the <b>supersede</b>\nstatement.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>The</i>\n<b>prepend</b> <i>statement</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>prepend\n[</b> <i>option declaration</i> ] <b>;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If for some set\nof options the client should use a value you supply, and\nthen use the values supplied by the server, if any, these\nvalues can be defined in the <b>prepend</b> statement. The\n<b>prepend</b> statement can only be used for options which\nallow more than one value to be given. This restriction is\nnot enforced - if you ignore it, the behaviour will be\nunpredictable.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>The</i>\n<b>append</b> <i>statement</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>append [</b>\n<i>option declaration</i> ] <b>;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If for some set\nof options the client should first use the values supplied\nby the server, if any, and then use values you supply, these\nvalues can be defined in the <b>append</b> statement. The\n<b>append</b> statement can only be used for options which\nallow more than one value to be given. This restriction is\nnot enforced - if you ignore it, the behaviour will be\nunpredictable.</p>\n\n<h2>LEASE DECLARATIONS\n<a name=\"LEASE DECLARATIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>The</i>\n<b>lease</b> <i>declaration</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>lease {</b>\n<i>lease-declaration</i> [ ... <i>lease-declaration ]</i>\n<b>}</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The DHCP client\nmay decide after some period of time (see <b>PROTOCOL\nTIMING</b>) that it is not going to succeed in contacting a\nserver. At that time, it consults its own database of old\nleases and tests each one that has not yet timed out by\npinging the listed router for that lease to see if that\nlease could work. It is possible to define one or more\n<i>fixed</i> leases in the client configuration file for\nnetworks where there is no DHCP or BOOTP service, so that\nthe client can still automatically configure its address.\nThis is done with the <b>lease</b> statement.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">NOTE: the lease\nstatement is also used in the dhclient.leases file in order\nto record leases that have been received from DHCP servers.\nSome of the syntax for leases as described below is only\nneeded in the dhclient.leases file. Such syntax is\ndocumented here for completeness.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A lease\nstatement consists of the lease keyword, followed by a left\ncurly brace, followed by one or more lease declaration\nstatements, followed by a right curly brace. The following\nlease declarations are possible:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>bootp;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>bootp</b> statement is used to indicate that the lease\nwas acquired using the BOOTP protocol rather than the DHCP\nprotocol. It is never necessary to specify this in the\nclient configuration file. The client uses this syntax in\nits lease database file.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>interface\n&quot;</b><i>string</i><b>&quot;;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>interface</b> lease statement is used to indicate the\ninterface on which the lease is valid. If set, this lease\nwill only be tried on a particular interface. When the\nclient receives a lease from a server, it always records the\ninterface number on which it received that lease. If\npredefined leases are specified in the dhclient.conf file,\nthe interface should also be specified, although this is not\nrequired.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>fixed-address</b>\n<i>ip-address</i><b>;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>fixed-address</b> statement is used to set the ip address\nof a particular lease. This is required for all lease\nstatements. The IP address must be specified as a dotted\nquad (e.g., 12.34.56.78).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>filename\n&quot;</b><i>string</i><b>&quot;;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>filename</b> statement specifies the name of the boot\nfilename to use. This is not used by the standard client\nconfiguration script, but is included for completeness.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>server-name\n&quot;</b><i>string</i><b>&quot;;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>server-name</b> statement specifies the name of the boot\nserver name to use. This is also not used by the standard\nclient configuration script.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>option</b>\n<i>option-declaration</i><b>;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>option</b> statement is used to specify the value of an\noption supplied by the server, or, in the case of predefined\nleases declared in dhclient.conf, the value that the user\nwishes the client configuration script to use if the\npredefined lease is used.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>script\n&quot;</b><i>script-name</i><b>&quot;;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>script</b> statement is used to specify the pathname of\nthe dhcp client configuration script. This script is used by\nthe dhcp client to set each interface&rsquo;s initial\nconfiguration prior to requesting an address, to test the\naddress once it has been offered, and to set the\ninterface&rsquo;s final configuration once a lease has been\nacquired. If no lease is acquired, the script is used to\ntest predefined leases, if any, and also called once if no\nvalid lease can be identified. For more information, see\n<b>dhclient-script(8).</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>vendor\noption space &quot;</b><i>name</i><b>&quot;;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <b>vendor\noption space</b> statement is used to specify which option\nspace should be used for decoding the\nvendor-encapsulate-options option if one is received. The\n<i>dhcp-vendor-identifier</i> can be used to request a\nspecific class of vendor options from the server. See\n<b>dhcp-options(5)</b> for details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>medium\n&quot;</b><i>media setup</i><b>&quot;;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>medium</b> statement can be used on systems where network\ninterfaces cannot automatically determine the type of\nnetwork to which they are connected. The media setup string\nis a system-dependent parameter which is passed to the dhcp\nclient configuration script when initializing the interface.\nOn Unix and Unix-like systems, the argument is passed on the\nifconfig command line when configuring the interface.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The dhcp client\nautomatically declares this parameter if it uses a media\ntype (see the <b>media</b> statement) when configuring the\ninterface in order to obtain a lease. This statement should\nbe used in predefined leases only if the network interface\nrequires media type configuration.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>renew</b>\n<i>date</i><b>;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>rebind</b>\n<i>date</i><b>;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>expire</b>\n<i>date</i><b>;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>renew</b> statement defines the time at which the dhcp\nclient should begin trying to contact its server to renew a\nlease that it is using. The <b>rebind</b> statement defines\nthe time at which the dhcp client should begin to try to\ncontact <i>any</i> dhcp server in order to renew its lease.\nThe <b>expire</b> statement defines the time at which the\ndhcp client must stop using a lease if it has not been able\nto contact a server in order to renew it.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">These\ndeclarations are automatically set in leases acquired by the\nDHCP client, but must also be configured in predefined\nleases - a predefined lease whose expiry time has passed\nwill not be used by the DHCP client.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Dates are\nspecified in one of two ways. The software will output times\nin these two formats depending on if the\n<b>db-time-format</b> configuration parameter has been set\nto <i>default</i> or <i>local</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If it is set to\n<i>default</i>, then <i>date</i> values appear as\nfollows:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>&lt;weekday&gt;\n&lt;year&gt;</i><b>/</b><i>&lt;month&gt;</i><b>/</b><i>&lt;day&gt;\n&lt;hour&gt;</i><b>:</b><i>&lt;minute&gt;</i><b>:</b><i>&lt;second&gt;</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The weekday is\npresent to make it easy for a human to tell when a lease\nexpires - it&rsquo;s specified as a number from zero to six,\nwith zero being Sunday. When declaring a predefined lease,\nit can always be specified as zero. The year is specified\nwith the century, so it should generally be four digits\nexcept for really long leases. The month is specified as a\nnumber starting with 1 for January. The day of the month is\nlikewise specified starting with 1. The hour is a number\nbetween 0 and 23, the minute a number between 0 and 59, and\nthe second also a number between 0 and 59.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\n<b>db-time-format</b> configuration was set to <i>local</i>,\nthen the <i>date</i> values appear as follows:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>epoch</b>\n<i>&lt;seconds-since-epoch&gt;</i><b>; #</b>\n<i>&lt;day-name&gt; &lt;month-name&gt; &lt;day-number&gt;\n&lt;hours&gt;</i><b>:</b><i>&lt;minutes&gt;</i><b>:</b><i>&lt;seconds&gt;\n&lt;year&gt;</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>seconds-since-epoch</i> is as according to the\nsystem&rsquo;s local clock (often referred to as &quot;unix\ntime&quot;). The <b>#</b> symbol supplies a comment that\ndescribes what actual time this is as according to the\nsystem&rsquo;s configured timezone, at the time the value\nwas written. It is provided only for human inspection, the\nepoch time is the only recommended value for machine\ninspection.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that when\ndefining a static lease, one may use either time format one\nwishes, and need not include the comment or values after\nit.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the time is\ninfinite in duration, then the <i>date</i> is <b>never</b>\ninstead of an actual date.</p>\n\n<h2>ALIAS DECLARATIONS\n<a name=\"ALIAS DECLARATIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>alias {</b>\n<i>declarations ...</i> <b>}</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Some DHCP\nclients running TCP/IP roaming protocols may require that in\naddition to the lease they may acquire via DHCP, their\ninterface also be configured with a predefined IP alias so\nthat they can have a permanent IP address even while\nroaming. The Internet Systems Consortium DHCP client\ndoesn&rsquo;t support roaming with fixed addresses directly,\nbut in order to facilitate such experimentation, the dhcp\nclient can be set up to configure an IP alias using the\n<b>alias</b> declaration.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The alias\ndeclaration resembles a lease declaration, except that\noptions other than the subnet-mask option are ignored by the\nstandard client configuration script, and expiry times are\nignored. A typical alias declaration includes an interface\ndeclaration, a fixed-address declaration for the IP alias\naddress, and a subnet-mask option declaration. A medium\nstatement should never be included in an alias\ndeclaration.</p>\n\n<h2>OTHER DECLARATIONS\n<a name=\"OTHER DECLARATIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>db-time-format</b>\n[ <i>default</i> | <i>local</i> ] <b>;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>db-time-format</b> option determines which of two output\nmethods are used for printing times in leases files. The\n<i>default</i> format provides day-and-time in UTC, whereas\n<i>local</i> uses a seconds-since-epoch to store the time\nvalue, and helpfully places a local timezone time in a\ncomment on the same line. The formats are described in\ndetail in this manpage, within the LEASE DECLARATIONS\nsection.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>lease-id-format</i> parameter</p>\n\n\n<p style=\"margin-left:14%; margin-top: 1em\"><b>lease-id-format</b>\n<i>format</i><b>;</b></p>\n\n<p style=\"margin-left:14%; margin-top: 1em\">The\n<i>format</i> parameter must be either <b>octal</b> or\n<b>hex</b>. This parameter governs the format used to write\ncertain values to lease files. With the default format,\noctal, values are written as quoted strings in which\nnon-printable characters are represented as octal escapes -\na backslash character followed by three octal digits. When\nthe hex format is specified, values are written as an\nunquoted series of hexadecimal digit pairs, separated by\ncolons.</p>\n\n<p style=\"margin-left:14%; margin-top: 1em\">Currently, the\nvalues written out based on lease-id-format are the\ndefault-duid and the IAID value (DHCPv6 only). The client\nautomatically reads the values in either format. Note that\nwhen the format is octal, rather than as an octal string,\nIAID is output as hex if it contains no printable characters\nor as a string if contains only printable characters. This\nis done to maintain backward compatibility.</p>\n\n<p style=\"margin-left:14%; margin-top: 1em\"><b>reject</b>\n<i>cidr-ip-address</i> [<b>,</b> <i>... cidr-ip-address</i>\n] <b>;</b></p>\n\n<p style=\"margin-left:14%; margin-top: 1em\">The\n<b>reject</b> statement causes the DHCP client to reject\noffers from servers whose server identifier matches any of\nthe specified hosts or subnets. This can be used to avoid\nbeing configured by rogue or misconfigured dhcp servers,\nalthough it should be a last resort - better to track down\nthe bad DHCP server and fix it.</p>\n\n<p style=\"margin-left:14%; margin-top: 1em\">The\n<i>cidr-ip-address</i> configuration type is of the form\n<i>ip-address</i>[<b>/</b><i>prefixlen</i>], where\n<i>ip-address</i> is a dotted quad IP address, and prefixlen\nis the CIDR prefix length of the subnet, counting the number\nof significant bits in the netmask starting from the\nleftmost end. Example configuration syntax:</p>\n\n<p style=\"margin-left:14%; margin-top: 1em\"><i>reject</i>\n192.168.0.0<b>/</b>16<b>,</b> 10.0.0.5<b>;</b></p>\n\n<p style=\"margin-left:14%; margin-top: 1em\">The above\nexample would cause offers from any server identifier in the\nentire RFC 1918 &quot;Class C&quot; network 192.168.0.0/16,\nor the specific single address 10.0.0.5, to be rejected.</p>\n\n<p style=\"margin-left:14%; margin-top: 1em\"><b>interface\n&quot;</b><i>name</i><b>&quot; {</b> <i>declarations ...</i>\n<b>}</b></p>\n\n<p style=\"margin-left:14%; margin-top: 1em\">A client with\nmore than one network interface may require different\nbehaviour depending on which interface is being configured.\nAll timing parameters and declarations other than lease and\nalias declarations can be enclosed in an interface\ndeclaration, and those parameters will then be used only for\nthe interface that matches the specified name. Interfaces\nfor which there is no interface declaration will use the\nparameters declared outside of any interface declaration, or\nthe default settings.</p>\n\n<p style=\"margin-left:14%; margin-top: 1em\"><b>Note\nwell:</b> ISC dhclient only maintains one list of\ninterfaces, which is either determined at startup from\ncommand line arguments, or otherwise is autodetected. If you\nsupplied the list of interfaces on the command line, this\nconfiguration clause will add the named interface to the\nlist in such a way that will cause it to be configured by\nDHCP. Which may not be the result you had intended. This is\nan undesirable side effect that will be addressed in a\nfuture release.</p>\n\n<p style=\"margin-left:14%; margin-top: 1em\"><b>pseudo\n&quot;</b><i>name</i>&quot; &quot;<i>real-name</i><b>&quot;\n{</b> <i>declarations ...</i> <b>}</b></p>\n\n<p style=\"margin-left:14%; margin-top: 1em\">Under some\ncircumstances it can be useful to declare a pseudo-interface\nand have the DHCP client acquire a configuration for that\ninterface. Each interface that the DHCP client is supporting\nnormally has a DHCP client state machine running on it to\nacquire and maintain its lease. A pseudo-interface is just\nanother state machine running on the interface named\n<i>real-name</i>, with its own lease and its own state. If\nyou use this feature, you must provide a client identifier\nfor both the pseudo-interface and the actual interface, and\nthe two identifiers must be different. You must also provide\na separate client script for the pseudo-interface to do what\nyou want with the IP address. For example:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n\n\n<p>interface &quot;ep0&quot; {</p></td>\n<td width=\"77%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"8%\">\n</td>\n<td width=\"77%\">\n\n\n<p>send dhcp-client-identifier\n&quot;my-client-ep0&quot;;</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n\n\n<p>}</p></td>\n<td width=\"77%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n\n\n<p>pseudo &quot;secondary&quot; &quot;ep0&quot; {</p></td>\n<td width=\"77%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"8%\">\n</td>\n<td width=\"77%\">\n\n\n<p>send dhcp-client-identifier\n&quot;my-client-ep0-secondary&quot;;</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"8%\">\n</td>\n<td width=\"77%\">\n\n\n<p>script &quot;/etc/dhclient-secondary&quot;;</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n\n\n<p>}</p></td>\n<td width=\"77%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:14%; margin-top: 1em\">The client\nscript for the pseudo-interface should not configure the\ninterface up or down - essentially, all it needs to handle\nare the states where a lease has been acquired or renewed,\nand the states where a lease has expired. See\n<b>dhclient-script(8)</b> for more information.</p>\n\n<p style=\"margin-left:14%; margin-top: 1em\"><b>media\n&quot;</b><i>media setup</i><b>&quot;</b> <i>[</i> <b>,\n&quot;</b><i>media setup</i><b>&quot;,</b> <i>...\n]</i><b>;</b></p>\n\n<p style=\"margin-left:14%; margin-top: 1em\">The\n<b>media</b> statement defines one or more media\nconfiguration parameters which may be tried while attempting\nto acquire an IP address. The dhcp client will cycle through\neach media setup string on the list, configuring the\ninterface using that setup and attempting to boot, and then\ntrying the next one. This can be used for network interfaces\nwhich aren&rsquo;t capable of sensing the media type unaided\n- whichever media type succeeds in getting a request to the\nserver and hearing the reply is probably right (no\nguarantees).</p>\n\n<p style=\"margin-left:14%; margin-top: 1em\">The media setup\nis only used for the initial phase of address acquisition\n(the DHCPDISCOVER and DHCPOFFER packets). Once an address\nhas been acquired, the dhcp client will record it in its\nlease database and will record the media type used to\nacquire the address. Whenever the client tries to renew the\nlease, it will use that same media type. The lease must\nexpire before the client will go back to cycling through\nmedia types.</p>\n\n\n<p style=\"margin-left:14%; margin-top: 1em\"><b>hardware</b>\n<i>link-type mac-address</i><b>;</b></p>\n\n<p style=\"margin-left:14%; margin-top: 1em\">The\n<b>hardware</b> statement defines the hardware MAC address\nto use for this interface, for DHCP servers or relays to\ndirect their replies. dhclient will determine the\ninterface&rsquo;s MAC address automatically, so use of this\nparameter is not recommended. The <i>link-type</i>\ncorresponds to the interface&rsquo;s link layer type\n(example: &acute;ethernet&acute;), while the\n<i>mac-address</i> is a string of colon-separated\nhexadecimal values for octets.</p>\n\n\n<p style=\"margin-left:14%; margin-top: 1em\"><b>anycast-mac</b>\n<i>link-type mac-address</i><b>;</b></p>\n\n<p style=\"margin-left:14%; margin-top: 1em\">The\n<b>anycast-mac</b> statement over-rides the all-ones\nbroadcast MAC address dhclient will use when it is\ntransmitting packets to the all-ones limited broadcast IPv4\naddress. This configuration parameter is useful to reduce\nthe number of broadcast packets transmitted by DHCP clients,\nbut is only useful if you know the DHCP service(s) anycast\nMAC address prior to configuring your client. The\n<i>link-type</i> and <i>mac-address</i> parameters are\nconfigured in a similar manner to the <b>hardware</b>\nstatement.</p>\n\n<h2>SAMPLE\n<a name=\"SAMPLE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nconfiguration file was used on a laptop running NetBSD 1.3,\nthough the domains have been modified. The laptop has an IP\nalias of 192.5.5.213, and has one interface, ep0 (a 3com\n3C589C). Booting intervals have been shortened somewhat from\nthe default, because the client is known to spend most of\nits time on networks with little DHCP activity. The laptop\ndoes roam to multiple networks.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">timeout 300;\n<br>\nretry 60; <br>\nreboot 10; <br>\nselect-timeout 5; <br>\ninitial-interval 2; <br>\nreject 192.33.137.209;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">interface\n&quot;ep0&quot; { <br>\nsend host-name &quot;andare.example.com&quot;; <br>\nhardware ethernet 00:a0:24:ab:fb:9c; <br>\nsend dhcp-client-identifier 1:0:a0:24:ab:fb:9c; <br>\nsend dhcp-lease-time 3600; <br>\nsupersede domain-search &quot;example.com&quot;,\n&quot;rc.isc.org&quot;, &quot;home.isc.org&quot;; <br>\nprepend domain-name-servers 127.0.0.1; <br>\nrequest subnet-mask, broadcast-address, time-offset,\nrouters,</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"92%\">\n\n\n<p>domain-name, domain-name-servers, host-name;</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\">require subnet-mask,\ndomain-name-servers; <br>\nscript &quot;/sbin/dhclient-script&quot;; <br>\nmedia &quot;media 10baseT/UTP&quot;, &quot;media\n10base2/BNC&quot;; <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">alias { <br>\ninterface &quot;ep0&quot;; <br>\nfixed-address 192.5.5.213; <br>\noption subnet-mask 255.255.255.255; <br>\n} <br>\nThis is a very complicated dhclient.conf file - in general,\nyours should be much simpler. In many cases, it&rsquo;s\nsufficient to just create an empty dhclient.conf file - the\ndefaults are usually fine.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">dhcp-options(5),\ndhcp-eval(5), dhclient.leases(5), dhcpd(8), dhcpd.conf(5),\nRFC2132, RFC2131.</p>\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>dhclient(8)</b>\nInformation about Internet Systems Consortium can be found\nat <b>https://www.isc.org.</b></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#PROTOCOL TIMING\">PROTOCOL TIMING</a>","<a href=\"#DHCPv6 LEASE SELECTION\">DHCPv6 LEASE SELECTION</a>","<a href=\"#LEASE REQUIREMENTS AND REQUESTS\">LEASE REQUIREMENTS AND REQUESTS</a>","<a href=\"#DYNAMIC DNS\">DYNAMIC DNS</a>","<a href=\"#OPTION MODIFIERS\">OPTION MODIFIERS</a>","<a href=\"#LEASE DECLARATIONS\">LEASE DECLARATIONS</a>","<a href=\"#ALIAS DECLARATIONS\">ALIAS DECLARATIONS</a>","<a href=\"#OTHER DECLARATIONS\">OTHER DECLARATIONS</a>","<a href=\"#SAMPLE\">SAMPLE</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#AUTHOR\">AUTHOR</a>"],"level":5}