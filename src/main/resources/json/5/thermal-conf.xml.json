{"name":"thermal-conf.xml","description":"thermal-conf.xml\n- Configuration file for thermal daemon","body":"\n\n<h1 align=\"center\">thermal-conf.xml</h1>\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">thermal-conf.xml\n- Configuration file for thermal daemon</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$(TDCONFDIR)/etc/thermald/thermal-conf.xml</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>thermal-conf.xml</b>\nis a configuration file for the thermal daemon. It is used\nto configure thermal sensors, zone and cooling devices.The\nlocation of this file depends on the configuration option\nused during build time.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The terminology\nused in this file conforms to &quot;Advanced Configuration\nand Power Interface Specification&quot;. The ACPI thermal\nmodel is based around conceptual platform regions called\nthermal zones that physically contain devices, thermal\nsensors, and cooling controls. For example of a thermal zone\ncan be a CPU or a laptop cover. A zone can contain multiple\nsensors for monitoring temperature. A cooling device\nprovides interface to reduce the temperature of a source\ndevice, which causes increase in the temperature. An example\nof a cooling device is a FAN or some Linux driver which can\nthrottle the source device.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A thermal zone\nconfiguration includes one or more trip points. A trip point\nis a temperature at which a cooling device needs to be\nactivated.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A cooling\ndevice can be either active or passive. An example of an\nactive device is a FAN, which will not reduce performance at\nthe cost of consuming more power and noise. A passive device\nuses performance throttling to control temperature. In\naddition to cooling devices present in the thermal sysfs,\nthe following cooling devices are built into the thermald,\nwhich can be used as valid cooling device type:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"85%\">\n\n\n<p>- rapl_controller</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"85%\">\n\n\n<p>- intel_pstate</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"85%\">\n\n\n<p>- cpufreq</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"85%\">\n\n\n<p>- LCD</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The thermal\nsysfs under Linux (/sys/class/thermal) provides a way to\nrepresent per platform ACPI configuration. The kernel\nthermal governor uses this data to keep the platform\nthermals under control. But there are some limitations,\nwhich thermald tries to resolve. For example: <br>\n- If the ACPI data is not optimized or buggy. In this case\n<br>\nthermal-conf.xml can be used to correct the behavior without\nchange in <br>\nBIOS.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">- There may be\nthermal zones exposed by the thermal sysfs without\nassociated cooling actions. In this case thermal conf.xml\ncan be used to tie the cooling devices to those zones.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">- The best\ncooling method may not be in the thermal sysfs. In this case\nthermal-conf.xml can be used to bind a zone to an external\ncooling device.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">- Specify\nthermal relationships. A zone can be influenced by multiple\nsource devices with varying degrees. In this case\nthermal-conf.xml can be used to define the relative\ninfluence for apply compensation.</p>\n\n<h2>FILE FORMAT\n<a name=\"FILE FORMAT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nconfiguration file format conforms to XML specifications. A\nset of tags defined to define platform, sensors, zones,\ncooling devices and trip points.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;ThermalConfiguration&gt;\n<br>\n&lt;Platform&gt; <br>\n&lt;Name&gt;Example Platform Name&lt;/Name&gt; <br>\n&lt;!-- UUID is optional, if present this will be matched.\nBoth product <br>\nname and UUID can contain wild card &quot;*&quot;, which\nmatches any <br>\nplatform. --&gt; <br>\n&lt;UUID&gt;Example UUID&lt;/UUID&gt; <br>\n&lt;!-- configuration file format conforms to XML\nspecifications. A <br>\nset of tags defined to define platform, sensors, zones,\ncooling <br>\ndevices and trip points. --&gt; <br>\n&lt;ProductName&gt;Example Product Name&lt;/ProductName&gt;\n<br>\n&lt;Preference&gt;QUIET|PERFORMANCE&lt;/Preference&gt; <br>\n&lt;!-- Quiet mode will only use passive cooling device.\n&quot;PERFORMANCE&quot; <br>\nwill only select active devices. --&gt; <br>\n&lt;ThermalSensors&gt; <br>\n&lt;ThermalSensor&gt; <br>\n&lt;!-- New Sensor with a type and path --&gt; <br>\n&lt;Type&gt;example_sensor_1&lt;/Type&gt; <br>\n&lt;Path&gt;/some_path&lt;/Path&gt; <br>\n&lt;AsyncCapable&gt;0&lt;/AsyncCapable&gt; <br>\n&lt;/ThermalSensor&gt; <br>\n&lt;ThermalSensor&gt; <br>\n&lt;!-- Already present in thermal sysfs, enable this or\n<br>\nadd/change config For example, here we are indicating <br>\nthat sensor can do async events to avoid polling. --&gt;\n<br>\n&lt;Type&gt;example_thermal_sysfs_sensor&lt;/Type&gt; <br>\n&lt;!-- If async capable, then we don&rsquo;t need to poll.\n--&gt; <br>\n&lt;AsyncCapable&gt;1&lt;/AsyncCapable&gt; <br>\n&lt;/ThermalSensor&gt; <br>\n&lt;/ThermalSensors&gt; <br>\n&lt;ThermalZones&gt; <br>\n&lt;ThermalZone&gt; <br>\n&lt;Type&gt;Example Zone type&lt;/Type&gt; <br>\n&lt;TripPoints&gt; <br>\n&lt;TripPoint&gt; <br>\n&lt;SensorType&gt;example_sensor_1&lt;/SensorType&gt; <br>\n&lt;!-- Temperature at which to take action. --&gt; <br>\n&lt;Temperature&gt; 75000 &lt;/Temperature&gt; <br>\n&lt;!-- max/passive/active If a MAX type is specified, then\n<br>\ndaemon will use PID control to aggressively throttle <br>\nto avoid reaching this temp. --&gt; <br>\n&lt;type&gt;max&lt;/type&gt; <br>\n&lt;!-- SEQUENTIAL | PARALLEL. When a trip point temp is\n<br>\nviolated, then number of cooling devices can be <br>\nactivated. If control type is SEQUENTIAL then, it <br>\nwill exhaust first cooling device <br>\nbefore trying next. --&gt; <br>\n&lt;ControlType&gt;SEQUENTIAL&lt;/ControlType&gt; <br>\n&lt;CoolingDevice&gt; <br>\n&lt;index&gt;1&lt;/index&gt; <br>\n&lt;type&gt;example_cooling_device&lt;/type&gt; <br>\n&lt;!-- Influence will be used order cooling devices. First\n<br>\ncooling device will be used, which has highest <br>\ninfluence. --&gt; <br>\n&lt;influence&gt; 100 &lt;/influence&gt; <br>\n&lt;!-- Delay in using this cdev, this takes some time too\n<br>\nactually cool a zone. --&gt; <br>\n&lt;SamplingPeriod&gt; 12 &lt;/SamplingPeriod&gt; <br>\n&lt;!-- Set a specific state of this cooling device when\nthis <br>\ntrip is violated. --&gt; <br>\n&lt;TargetState&gt; 6 &lt;/TargetState&gt; <br>\n&lt;/CoolingDevice&gt; <br>\n&lt;/TripPoint&gt; <br>\n&lt;/TripPoints&gt; <br>\n&lt;/ThermalZone&gt; <br>\n&lt;/ThermalZones&gt; <br>\n&lt;CoolingDevices&gt; <br>\n&lt;CoolingDevice&gt; <br>\n&lt;!-- Cooling device can be specified by a type and\noptionally <br>\na sysfs path. If the type is already present in thermal <br>\nsysfs, there is no need of a path. Compensation can use <br>\nmin/max and step size to increasing cool the system. <br>\nDebounce period can be used to force a waiting period <br>\nfor action. --&gt; <br>\n&lt;Type&gt;example_cooling_device&lt;/Type&gt; <br>\n&lt;MinState&gt;0&lt;/MinState&gt; <br>\n&lt;IncDecStep&gt;10&lt;/IncDecStep&gt; <br>\n&lt;ReadBack&gt; 0 &lt;/ReadBack&gt; <br>\n&lt;MaxState&gt;50&lt;/MaxState&gt; <br>\n&lt;DebouncePeriod&gt;5000&lt;/DebouncePeriod&gt; <br>\n&lt;!-- If there are no PID parameters, compensation\nincrease step <br>\nwise and exponentially (if single step is not able to <br>\nchange trend). <br>\nAlternatively a PID parameters can be specified then next\n<br>\nstep will use PID calculation using provided PID <br>\nconstants. --&gt; <br>\n&lt;PidControl&gt; <br>\n&lt;kp&gt;0.001&lt;/kp&gt; <br>\n&lt;kd&gt;0.0001&lt;/kd&gt; <br>\n&lt;ki&gt;0.0001&lt;/ki&gt; <br>\n&lt;/PidControl&gt; <br>\n&lt;!-- Write some prefix attached to state value, like\nbelow the <br>\nprefix is &quot;level &quot;. It will preserve spaces as\nentered <br>\nwhen writing to sysfs. --&gt; <br>\n&lt;WritePrefix&gt;level &lt;/WritePrefix&gt; <br>\n&lt;/CoolingDevice&gt; <br>\n&lt;/CoolingDevices&gt; <br>\n&lt;/Platform&gt; <br>\n&lt;/ThermalConfiguration&gt;</p>\n\n<h2>EXAMPLE CONFIGURATIONS\n<a name=\"EXAMPLE CONFIGURATIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Example\n1:</b> This is a very simple configuration, to change the\npassive limit on the CPU. Instead of default, this new\ntemperature 86C in the configuration is used. This will\nstart cooling, once the temperature reaches 86C.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;?xml\nversion=&quot;1.0&quot;?&gt; <br>\n&lt;ThermalConfiguration&gt; <br>\n&lt;Platform&gt; <br>\n&lt;Name&gt;Override CPU default passive&lt;/Name&gt; <br>\n&lt;ProductName&gt;*&lt;/ProductName&gt; <br>\n&lt;Preference&gt;QUIET&lt;/Preference&gt; <br>\n&lt;ThermalZones&gt; <br>\n&lt;ThermalZone&gt; <br>\n&lt;Type&gt;cpu&lt;/Type&gt; <br>\n&lt;TripPoints&gt; <br>\n&lt;TripPoint&gt; <br>\n&lt;Temperature&gt;86000&lt;/Temperature&gt; <br>\n&lt;type&gt;passive&lt;/type&gt; <br>\n&lt;/TripPoint&gt; <br>\n&lt;/TripPoints&gt; <br>\n&lt;/ThermalZone&gt; <br>\n&lt;/ThermalZones&gt; <br>\n&lt;/Platform&gt; <br>\n&lt;/ThermalConfiguration&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Example\n2:</b> In this configuration, we are controlling backlight\nwhen some sensor &quot;SEN2&quot; reaches 60C. Here\n&quot;LCD&quot; is a standard cooling device, which uses\nLinux backlight sysfs interface. &quot;LCD_Zone&quot; is a\nvalid thermal zone in Linux thermal sysfs on the test\nplatform, hence we don&rsquo;t need to provide path for\nsysfs for &quot;LCD_Zone&quot;. The Linux thermal sysfs is\nalready parsed and loaded by thermald program.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;?xml\nversion=&quot;1.0&quot;?&gt; <br>\n&lt;ThermalConfiguration&gt; <br>\n&lt;Platform&gt; <br>\n&lt;Name&gt;Change Backlight&lt;/Name&gt; <br>\n&lt;ProductName&gt;*&lt;/ProductName&gt; <br>\n&lt;Preference&gt;QUIET&lt;/Preference&gt; <br>\n&lt;ThermalZones&gt; <br>\n&lt;ThermalZone&gt; <br>\n&lt;Type&gt;LCD_Zone&lt;/Type&gt; <br>\n&lt;TripPoints&gt; <br>\n&lt;TripPoint&gt; <br>\n&lt;SensorType&gt;SEN2&lt;/SensorType&gt; <br>\n&lt;Temperature&gt;60000&lt;/Temperature&gt; <br>\n&lt;type&gt;passive&lt;/type&gt; <br>\n&lt;CoolingDevice&gt; <br>\n&lt;Type&gt;LCD&lt;/Type&gt; <br>\n&lt;/CoolingDevice&gt; <br>\n&lt;/TripPoint&gt; <br>\n&lt;/TripPoints&gt; <br>\n&lt;/ThermalZone&gt; <br>\n&lt;/ThermalZones&gt; <br>\n&lt;/Platform&gt; <br>\n&lt;/ThermalConfiguration&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Example\n3:</b> In this example Lenovo Thinkpad X220 and fan speed is\ncontrolled. Here a cooling device &quot;_Fan&quot;, can be\ncontrolled via sysfs\n/sys/devices/platform/thinkpad_hwmon/pwm1. When the\nx86_pkg_temp reaches 45C, Fan is started with increasing\nspeeds, if the temperature can&rsquo;t be controlled at\n45C.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;?xml\nversion=&quot;1.0&quot;?&gt; <br>\n&lt;ThermalConfiguration&gt; <br>\n&lt;Platform&gt; <br>\n&lt;Name&gt;Lenovo ThinkPad X220&lt;/Name&gt; <br>\n&lt;ProductName&gt;*&lt;/ProductName&gt; <br>\n&lt;Preference&gt;QUIET&lt;/Preference&gt; <br>\n&lt;ThermalZones&gt; <br>\n&lt;ThermalZone&gt; <br>\n&lt;Type&gt;x86_pkg_temp&lt;/Type&gt; <br>\n&lt;TripPoints&gt; <br>\n&lt;TripPoint&gt; <br>\n&lt;SensorType&gt;x86_pkg_temp&lt;/SensorType&gt; <br>\n&lt;Temperature&gt;45000&lt;/Temperature&gt; <br>\n&lt;type&gt;passive&lt;/type&gt; <br>\n&lt;ControlType&gt;SEQUENTIAL&lt;/ControlType&gt; <br>\n&lt;CoolingDevice&gt; <br>\n&lt;index&gt;1&lt;/index&gt; <br>\n&lt;type&gt;_Fan&lt;/type&gt; <br>\n&lt;influence&gt; 100 &lt;/influence&gt; <br>\n&lt;SamplingPeriod&gt; 12 &lt;/SamplingPeriod&gt; <br>\n&lt;/CoolingDevice&gt; <br>\n&lt;/TripPoint&gt; <br>\n&lt;/TripPoints&gt; <br>\n&lt;/ThermalZone&gt; <br>\n&lt;/ThermalZones&gt; <br>\n&lt;CoolingDevices&gt; <br>\n&lt;CoolingDevice&gt; <br>\n&lt;Type&gt;_Fan&lt;/Type&gt; <br>\n\n&lt;Path&gt;/sys/devices/platform/thinkpad_hwmon/pwm1&lt;/Path&gt;\n<br>\n&lt;MinState&gt;0&lt;/MinState&gt; <br>\n&lt;IncDecStep&gt;30&lt;/IncDecStep&gt; <br>\n&lt;ReadBack&gt; 0 &lt;/ReadBack&gt; <br>\n&lt;MaxState&gt;255&lt;/MaxState&gt; <br>\n&lt;DebouncePeriod&gt;5&lt;/DebouncePeriod&gt; <br>\n&lt;/CoolingDevice&gt; <br>\n&lt;/CoolingDevices&gt; <br>\n&lt;/Platform&gt; <br>\n&lt;/ThermalConfiguration&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Example\n4:</b> The following example shows how PID can be used. Here\nonce temperature exceeds 80C, compensation is calculated\nusing PID using 80C as set point of PID. The compensation\ndepends on error from the set point. Here the default built\nin processor cooling device is used with min state as 0 and\nmax state as 10.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;?xml\nversion=&quot;1.0&quot;?&gt; <br>\n&lt;ThermalConfiguration&gt; <br>\n&lt;Platform&gt; <br>\n&lt;Name&gt;Use PID param &lt;/Name&gt; <br>\n&lt;ProductName&gt;*&lt;/ProductName&gt; <br>\n&lt;Preference&gt;QUIET&lt;/Preference&gt; <br>\n&lt;ThermalZones&gt; <br>\n&lt;ThermalZone&gt; <br>\n&lt;Type&gt;x86_pkg_temp&lt;/Type&gt; <br>\n&lt;TripPoints&gt; <br>\n&lt;TripPoint&gt; <br>\n&lt;SensorType&gt;x86_pkg_temp&lt;/SensorType&gt; <br>\n&lt;Temperature&gt;80000&lt;/Temperature&gt; <br>\n&lt;type&gt;passive&lt;/type&gt; <br>\n&lt;ControlType&gt;SEQUENTIAL&lt;/ControlType&gt; <br>\n&lt;CoolingDevice&gt; <br>\n&lt;type&gt;Processor&lt;/type&gt; <br>\n&lt;/CoolingDevice&gt; <br>\n&lt;/TripPoint&gt; <br>\n&lt;/TripPoints&gt; <br>\n&lt;/ThermalZone&gt; <br>\n&lt;/ThermalZones&gt; <br>\n&lt;CoolingDevices&gt; <br>\n&lt;CoolingDevice&gt; <br>\n&lt;Type&gt;Processor&lt;/Type&gt; <br>\n&lt;PidControl&gt; <br>\n&lt;kp&gt;0.0002&lt;/kp&gt; <br>\n&lt;kd&gt;0&lt;/kd&gt; <br>\n&lt;ki&gt;0&lt;/ki&gt; <br>\n&lt;/PidControl&gt; <br>\n&lt;/CoolingDevice&gt; <br>\n&lt;/CoolingDevices&gt; <br>\n&lt;/Platform&gt; <br>\n&lt;/ThermalConfiguration&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Example\n5:</b> The following example shows how to control Fan when\nthe sysfs expects some string prefix. For example instead of\njust write a number to fan control sysfs, the interface\nrequires &quot;level &quot; in front of the speed index\nvalue.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;?xml\nversion=&quot;1.0&quot;?&gt; <br>\n&lt;ThermalConfiguration&gt; <br>\n&lt;Platform&gt; <br>\n&lt;Name&gt;Use Fan control first then CPU throttle\n&lt;/Name&gt; <br>\n&lt;ProductName&gt;*&lt;/ProductName&gt; <br>\n&lt;Preference&gt;QUIET&lt;/Preference&gt; <br>\n&lt;ThermalZones&gt; <br>\n&lt;ThermalZone&gt; <br>\n&lt;Type&gt;x86_pkg_temp&lt;/Type&gt; <br>\n&lt;TripPoints&gt; <br>\n&lt;TripPoint&gt; <br>\n&lt;SensorType&gt;x86_pkg_temp&lt;/SensorType&gt; <br>\n&lt;Temperature&gt;80000&lt;/Temperature&gt; <br>\n&lt;type&gt;passive&lt;/type&gt; <br>\n&lt;ControlType&gt;SEQUENTIAL&lt;/ControlType&gt; <br>\n&lt;CoolingDevice&gt; <br>\n&lt;type&gt;_fan_&lt;/type&gt; <br>\n&lt;/CoolingDevice&gt; <br>\n&lt;/TripPoint&gt; <br>\n&lt;/TripPoints&gt; <br>\n&lt;/ThermalZone&gt; <br>\n&lt;/ThermalZones&gt; <br>\n&lt;CoolingDevices&gt; <br>\n&lt;CoolingDevice&gt; <br>\n&lt;Type&gt;_fan_&lt;/Type&gt; <br>\n&lt;Path&gt;/proc/acpi/ibm/fan&lt;/Path&gt; <br>\n&lt;WritePrefix&gt;level &lt;/WritePrefix&gt; <br>\n&lt;MinState&gt;0&lt;/MinState&gt; <br>\n&lt;MaxState&gt;5&lt;/MaxState&gt; <br>\n&lt;DebouncePeriod&gt;10&lt;/DebouncePeriod&gt; <br>\n&lt;/CoolingDevice&gt; <br>\n&lt;/CoolingDevices&gt; <br>\n&lt;/Platform&gt; <br>\n&lt;/ThermalConfiguration&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Example 6:\nSimilar to example 5, but write different speeds at\ndifferent temperatures.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">&lt;?xml\nversion=&quot;1.0&quot;?&gt; <br>\n&lt;ThermalConfiguration&gt; <br>\n&lt;Platform&gt; <br>\n&lt;Name&gt;Use Fan control first then CPU throttle\n&lt;/Name&gt; <br>\n&lt;ProductName&gt;*&lt;/ProductName&gt; <br>\n&lt;Preference&gt;QUIET&lt;/Preference&gt; <br>\n&lt;ThermalZones&gt; <br>\n&lt;ThermalZone&gt; <br>\n&lt;Type&gt;x86_pkg_temp&lt;/Type&gt; <br>\n&lt;TripPoints&gt; <br>\n&lt;TripPoint&gt; <br>\n&lt;SensorType&gt;x86_pkg_temp&lt;/SensorType&gt; <br>\n&lt;Temperature&gt;80000&lt;/Temperature&gt; <br>\n&lt;type&gt;passive&lt;/type&gt; <br>\n&lt;CoolingDevice&gt; <br>\n&lt;type&gt;_fan_&lt;/type&gt; <br>\n&lt;TargetState&gt;1&lt;/TargetState&gt; <br>\n&lt;/CoolingDevice&gt; <br>\n&lt;/TripPoint&gt; <br>\n&lt;TripPoint&gt; <br>\n&lt;SensorType&gt;x86_pkg_temp&lt;/SensorType&gt; <br>\n&lt;Temperature&gt;85000&lt;/Temperature&gt; <br>\n&lt;type&gt;passive&lt;/type&gt; <br>\n&lt;CoolingDevice&gt; <br>\n&lt;type&gt;_fan_&lt;/type&gt; <br>\n&lt;TargetState&gt;2&lt;/TargetState&gt; <br>\n&lt;/CoolingDevice&gt; <br>\n&lt;/TripPoint&gt; <br>\n&lt;/TripPoints&gt; <br>\n&lt;/ThermalZone&gt; <br>\n&lt;/ThermalZones&gt; <br>\n&lt;CoolingDevices&gt; <br>\n&lt;CoolingDevice&gt; <br>\n&lt;Type&gt;_fan_&lt;/Type&gt; <br>\n&lt;Path&gt;/proc/acpi/ibm/fan&lt;/Path&gt; <br>\n&lt;WritePrefix&gt;level &lt;/WritePrefix&gt; <br>\n&lt;MinState&gt;0&lt;/MinState&gt; <br>\n&lt;MaxState&gt;5&lt;/MaxState&gt; <br>\n&lt;DebouncePeriod&gt;10&lt;/DebouncePeriod&gt; <br>\n&lt;/CoolingDevice&gt; <br>\n&lt;/CoolingDevices&gt; <br>\n&lt;/Platform&gt; <br>\n &lt;/ThermalConfiguration&gt;</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#FILE FORMAT\">FILE FORMAT</a>","<a href=\"#EXAMPLE CONFIGURATIONS\">EXAMPLE CONFIGURATIONS</a>"],"level":5}