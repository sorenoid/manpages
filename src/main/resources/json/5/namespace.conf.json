{"name":"namespace.conf","body":"\n\n<h1 align=\"center\">NAMESPACE.CONF</h1>\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">namespace.conf\n- the namespace configuration file</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>pam_namespace.so</i> module allows setup of private\nnamespaces with polyinstantiated directories. Directories\ncan be polyinstantiated based on user name or, in the case\nof SELinux, user name, sensitivity level or complete\nsecurity context. If an executable script\n/etc/security/namespace.init exists, it is used to\ninitialize the namespace every time an instance directory is\nset up and mounted. The script receives the polyinstantiated\ndirectory path and the instance directory path as its\narguments.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n/etc/security/namespace.conf file specifies which\ndirectories are polyinstantiated, how they are\npolyinstantiated, how instance directories would be named,\nand any users for whom polyinstantiation would not be\nperformed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When someone\nlogs in, the file namespace.conf is scanned. Comments are\nmarked by <i>#</i> characters. Each non comment line\nrepresents one polyinstantiated directory. The fields are\nseparated by spaces but can be quoted by <i>&quot;</i>\ncharacters also escape sequences <i>\\b</i>, <i>\\n</i>, and\n<i>\\t</i> are recognized. The fields are as follows:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>polydir\ninstance_prefix method list_of_uids</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The first\nfield, <i>polydir</i>, is the absolute pathname of the\ndirectory to polyinstantiate. The special string\n<i>$HOME</i> is replaced with the user's home directory, and\n<i>$USER</i> with the username. This field cannot be\nblank.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The second\nfield, <i>instance_prefix</i> is the string prefix used to\nbuild the pathname for the instantiation of &lt;polydir&gt;.\nDepending on the polyinstantiation <i>method</i> it is then\nappended with &quot;instance differentiation string&quot; to\ngenerate the final instance directory path. This directory\nis created if it did not exist already, and is then bind\nmounted on the &lt;polydir&gt; to provide an instance of\n&lt;polydir&gt; based on the &lt;method&gt; column. The\nspecial string <i>$HOME</i> is replaced with the user's home\ndirectory, and <i>$USER</i> with the username. This field\ncannot be blank.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The third\nfield, <i>method</i>, is the method used for\npolyinstantiation. It can take these values;\n&quot;user&quot; for polyinstantiation based on user name,\n&quot;level&quot; for polyinstantiation based on process MLS\nlevel and user name, &quot;context&quot; for\npolyinstantiation based on process security context and user\nname, &quot;tmpfs&quot; for mounting tmpfs filesystem as an\ninstance dir, and &quot;tmpdir&quot; for creating temporary\ndirectory as an instance dir which is removed when the\nuser's session is closed. Methods &quot;context&quot; and\n&quot;level&quot; are only available with SELinux. This\nfield cannot be blank.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The fourth\nfield, <i>list_of_uids</i>, is a comma separated list of\nuser names for whom the polyinstantiation is not performed.\nIf left blank, polyinstantiation will be performed for all\nusers. If the list is preceded with a single &quot;~&quot;\ncharacter, polyinstantiation is performed only for users in\nthe list.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>method</i> field can contain also following optional\nflags separated by <i>:</i> characters.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>create</i>=<i>mode</i>,<i>owner</i>,<i>group</i>\n- create the polyinstantiated directory. The mode, owner and\ngroup parameters are optional. The default for mode is\ndetermined by umask, the default owner is the user whose\nsession is opened, the default group is the primary group of\nthe user.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>iscript</i>=<i>path</i>\n- path to the instance directory init script. The base\ndirectory for relative paths is\n/etc/security/namespace.d.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>noinit</i> -\ninstance directory init script will not be executed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>shared</i> -\nthe instance directories for &quot;context&quot; and\n&quot;level&quot; methods will not contain the user name and\nwill be shared among all users.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>mntopts</i>=<i>value</i>\n- value of this flag is passed to the mount call when the\ntmpfs mount is done. It allows for example the specification\nof the maximum size of the tmpfs instance that is created by\nthe mount call. In addition to options specified in the\n<a href=\"https://man.page/5/tmpfs\">tmpfs(5)</a> manual the <i>nosuid</i>, <i>noexec</i>, and\n<i>nodev</i> flags can be used to respectively disable\nsetuid bit effect, disable running executables, and disable\ndevices to be interpreted on the mounted tmpfs\nfilesystem.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The directory\nwhere polyinstantiated instances are to be created, must\nexist and must have, by default, the mode of 0000. The\nrequirement that the instance parent be of mode 0000 can be\noverridden with the command line option\n<i>ignore_instance_parent_mode</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In case of\ncontext or level polyinstantiation the SELinux context which\nis used for polyinstantiation is the context used for\nexecuting a new process as obtained by getexeccon. This\ncontext must be set by the calling application or\npam_selinux.so module. If this context is not set the\npolyinstatiation will be based just on user name.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n&quot;instance differentiation string&quot; is &lt;user\nname&gt; for &quot;user&quot; method and &lt;user\nname&gt;_&lt;raw directory context&gt; for\n&quot;context&quot; and &quot;level&quot; methods. If the\nwhole string is too long the end of it is replaced with\nmd5sum of itself. Also when command line option\n<i>gen_hash</i> is used the whole string is replaced with\nmd5sum of itself.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These are some\nexample lines which might be specified in\n/etc/security/namespace.conf.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"># The following\nthree lines will polyinstantiate /tmp, <br>\n# /var/tmp and user's home directories. /tmp and /var/tmp\n<br>\n# will be polyinstantiated based on the security level <br>\n# as well as user name, whereas home directory will be <br>\n# polyinstantiated based on the full security context and\nuser name. <br>\n# Polyinstantiation will not be performed for user root <br>\n# and adm for directories /tmp and /var/tmp, whereas home\n<br>\n# directories will be polyinstantiated for all users. <br>\n# <br>\n# Note that instance directories do not have to reside\ninside <br>\n# the polyinstantiated directory. In the examples below,\n<br>\n# instances of /tmp will be created in /tmp-inst directory,\n<br>\n# where as instances of /var/tmp and users home directories\n<br>\n# will reside within the directories that are being <br>\n# polyinstantiated. <br>\n# <br>\n/tmp /tmp-inst/ level root,adm</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n\n\n<p>/var/tmp /var/tmp/tmp-inst/</p><td width=\"26%\"></td>\n<td width=\"-18%\"></td>\n<td width=\"54%\"></td>\n<td width=\"7%\"></td>\n<td width=\"31%\">\n\n\n<p>level root,adm</p></td></tr>\n</table>\n\n<p style=\"margin-left:17%;\">$HOME $HOME/$USER.inst/inst-\ncontext</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For the\n&lt;service&gt;s you need polyinstantiation (login for\nexample) put the following line in\n/etc/pam.d/&lt;service&gt; as the last line for session\ngroup:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">session\nrequired pam_namespace.so [arguments]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This module\nalso depends on pam_selinux.so setting the context.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>pam_namespace</b>(8),\n<b>pam.d</b>(5), <a href=\"https://man.page/7/pam\">pam(7)</a></p>\n\n<h2>AUTHORS\n<a name=\"AUTHORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nnamespace.conf manual page was written by Janak Desai\n&lt;janak@us.ibm.com&gt;. More features added by Tomas Mraz\n&lt;tmraz@redhat.com&gt;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#AUTHORS\">AUTHORS</a>"],"level":5}