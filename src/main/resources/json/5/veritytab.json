{"name":"veritytab","description":"veritytab -\nConfiguration for verity block devices","body":"\n\n<h1 align=\"center\">VERITYTAB</h1>\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">veritytab -\nConfiguration for verity block devices</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">/etc/veritytab</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n/etc/veritytab file describes verity protected block devices\nthat are set up during system boot.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Empty lines and\nlines starting with the &quot;#&quot; character are ignored.\nEach of the remaining lines describes one verity protected\nblock device. Fields are delimited by white space.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Each line is in\nthe form</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><i>volume-name\ndata-device hash-device roothash options</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The first four\nfields are mandatory, the remaining one is optional.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The first field\ncontains the name of the resulting verity volume; its block\ndevice is set up below /dev/mapper/.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The second\nfield contains a path to the underlying block data device,\nor a specification of a block device via &quot;UUID=&quot;\nfollowed by the UUID.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The third field\ncontains a path to the underlying block hash device, or a\nspecification of a block device via &quot;UUID=&quot;\nfollowed by the UUID.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The fourth\nfield is the &quot;roothash&quot; in hexadecimal.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The fifth\nfield, if present, is a comma-delimited list of options. The\nfollowing options are recognized:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ignore-corruption</b>,\n<b>restart-on-corruption</b>, <b>panic-on-corruption</b></p>\n\n<p style=\"margin-left:17%;\">Defines what to do if a data\nverity problem is detected (data corruption). Without these\noptions kernel fails the IO operation with I/O error. With\n&quot;--ignore-corruption&quot; option the corruption is\nonly logged. With &quot;--restart-on-corruption&quot; or\n&quot;--panic-on-corruption&quot; the kernel is restarted\n(panicked) immediately. (You have to provide way how to\navoid restart loops.)</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ignore-zero-blocks</b></p>\n\n<p style=\"margin-left:17%;\">Instruct kernel to not verify\nblocks that are expected to contain zeroes and always\ndirectly return zeroes instead. WARNING: Use this option\nonly in very specific cases. This option is available since\nLinux kernel version 4.5.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>check-at-most-once</b></p>\n\n<p style=\"margin-left:17%;\">Instruct kernel to verify\nblocks only the first time they are read from the data\ndevice, rather than every time. WARNING: It provides a\nreduced level of security because only offline tampering of\nthe data device's content will be detected, not online\ntampering. This option is available since Linux kernel\nversion 4.17.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>root-hash-signature=</b></p>\n\n<p style=\"margin-left:17%;\">A base64 string encoding the\nroot hash signature prefixed by &quot;base64:&quot; or a\npath to roothash signature file used to verify the root hash\n(in kernel). This feature requires Linux kernel version 5.4\nor more recent.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>_netdev</b></p>\n\n<p style=\"margin-left:17%;\">Marks this veritysetup device\nas requiring network. It will be started after the network\nis available, similarly to <b>systemd.mount</b>(5) units\nmarked with <b>_netdev</b>. The service unit to set up this\ndevice will be ordered between remote-fs-pre.target and\nremote-veritysetup.target, instead of veritysetup-pre.target\nand veritysetup.target.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Hint: if this\ndevice is used for a mount point that is specified in\n<a href=\"https://man.page/5/fstab\">fstab(5)</a>, the <b>_netdev</b> option should also be\nused for the mount point. Otherwise, a dependency loop might\nbe created where the mount point will be pulled in by\nlocal-fs.target, while the service to configure the network\nis usually only started <i>after</i> the local file system\nhas been mounted.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>noauto</b></p>\n\n<p style=\"margin-left:17%;\">This device will not be added\nto veritysetup.target. This means that it will not be\nautomatically enabled on boot, unless something else pulls\nit in. In particular, if the device is used for a mount\npoint, it'll be enabled automatically during boot, unless\nthe mount point itself is also disabled with\n<b>noauto</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>nofail</b></p>\n\n<p style=\"margin-left:17%;\">This device will not be a hard\ndependency of veritysetup.target. It'll still be pulled in\nand started, but the system will not wait for the device to\nshow up and be enabled, and boot will not fail if this is\nunsuccessful. Note that other units that depend on the\nenabled device may still fail. In particular, if the device\nis used for a mount point, the mount point itself also needs\nto have the <b>nofail</b> option, or the boot will fail if\nthe device is not enabled successfully.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>x-initrd.attach</b></p>\n\n<p style=\"margin-left:17%;\">Setup this verity protected\nblock device in the initramfs, similarly to\n<b>systemd.mount</b>(5) units marked with\n<b>x-initrd.mount</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Although it's\nnot necessary to mark the mount entry for the root file\nsystem with <b>x-initrd.mount</b>, <b>x-initrd.attach</b> is\nstill recommended with the verity protected block device\ncontaining the root file system as otherwise systemd will\nattempt to detach the device during the regular system\nshutdown while it's still in use. With this option the\ndevice will still be detached but later after the root file\nsystem is unmounted.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">All other\nverity protected block devices that contain file systems\nmounted in the initramfs should use this option.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">At early boot\nand when the system manager configuration is reloaded, this\nfile is translated into native systemd units by\n<b>systemd-veritysetup-generator</b>(8).</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Example&nbsp;1.&nbsp;/etc/veritytab\nexample</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Set up two\nverity protected block devices. One using device blocks,\nanother using files.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">usr\nPARTUUID=783e45ae-7aa3-484a-beef-a80ff9c19cbb\nPARTUUID=21dc1dfe-4c33-8b48-98a9-918a22eb3e37\n36e3f740ad502e2c25e2a23d9c7c17bf0fdad2300b7580842d4b7ec1fb0fa263\nauto <br>\ndata /etc/data /etc/hash\na5ee4b42f70ae1f46a08a7c92c2e0a20672ad2f514792730f5d49d7606ab8fdf\nauto</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/systemd\">systemd(1)</a>,\n<b>systemd-veritysetup@.service</b>(8),\n<b>systemd-veritysetup-generator</b>(8), <a href=\"https://man.page/5/fstab\">fstab(5)</a>,\n<b>veritysetup</b>(8),</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"],"level":5}