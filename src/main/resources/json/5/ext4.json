{"name":"ext4","body":"\n\n<h1 align=\"center\">EXT4</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">ext2 - the\nsecond extended file system <br>\next3 - the third extended file system <br>\next4 - the fourth extended file system</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The second,\nthird, and fourth extended file systems, or ext2, ext3, and\next4 as they are commonly known, are Linux file systems that\nhave historically been the default file system for many\nLinux distributions. They are general purpose file systems\nthat have been designed for extensibility and backwards\ncompatibility. In particular, file systems previously\nintended for use with the ext2 and ext3 file systems can be\nmounted using the ext4 file system driver, and indeed in\nmany modern Linux distributions, the ext4 file system driver\nhas been configured to handle mount requests for ext2 and\next3 file systems.</p>\n\n<h2>FILE SYSTEM FEATURES\n<a name=\"FILE SYSTEM FEATURES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">A file system\nformatted for ext2, ext3, or ext4 can have some collection\nof the following file system feature flags enabled. Some of\nthese features are not supported by all implementations of\nthe ext2, ext3, and ext4 file system drivers, depending on\nLinux kernel version in use. On other operating systems,\nsuch as the GNU/HURD or FreeBSD, only a very restrictive set\nof file system features may be supported in their\nimplementations of ext2.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>64bit</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>Enables the file system to be larger than 2^32 blocks.\nThis feature is set automatically, as needed, but it can be\nuseful to specify this feature explicitly if the file system\nmight need to be resized larger than 2^32 blocks, even if it\nwas smaller than that threshold when it was originally\ncreated. Note that some older kernels and older versions of\ne2fsprogs will not support file systems with this ext4\nfeature enabled.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>bigalloc</b></p>\n\n<p style=\"margin-left:22%;\">This ext4 feature enables\nclustered block allocation, so that the unit of allocation\nis a power of two number of blocks. That is, each bit in the\nwhat had traditionally been known as the block allocation\nbitmap now indicates whether a cluster is in use or not,\nwhere a cluster is by default composed of 16 blocks. This\nfeature can decrease the time spent on doing block\nallocation and brings smaller fragmentation, especially for\nlarge files. The size can be specified using the <b>mke2fs\n-C</b> option.</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>Warning:</b>\nThe bigalloc feature is still under development, and may not\nbe fully supported with your kernel or may have various\nbugs. Please see the web page\nhttp://ext4.wiki.kernel.org/index.php/Bigalloc for details.\nMay clash with delayed allocation (see <b>nodelalloc</b>\nmount option).</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">This feature\nrequires that the <b>extent</b> feature be enabled.</p>\n\n<p style=\"margin-left:11%;\"><b>casefold</b></p>\n\n<p style=\"margin-left:22%;\">This ext4 feature provides file\nsystem level character encoding support for directories with\nthe casefold (+F) flag enabled. This feature is\nname-preserving on the disk, but it allows applications to\nlookup for a file in the file system using an encoding\nequivalent version of the file name.</p>\n\n<p style=\"margin-left:11%;\"><b>dir_index</b></p>\n\n<p style=\"margin-left:22%;\">Use hashed b-trees to speed up\nname lookups in large directories. This feature is supported\nby ext3 and ext4 file systems, and is ignored by ext2 file\nsystems.</p>\n\n<p style=\"margin-left:11%;\"><b>dir_nlink</b></p>\n\n<p style=\"margin-left:22%;\">Normally, ext4 allows an inode\nto have no more than 65,000 hard links. This applies to\nregular files as well as directories, which means that there\ncan be no more than 64,998 subdirectories in a directory\n(because each of the &rsquo;.&rsquo; and &rsquo;..&rsquo;\nentries, as well as the directory entry for the directory in\nits parent directory counts as a hard link). This feature\nlifts this limit by causing ext4 to use a link count of 1 to\nindicate that the number of hard links to a directory is not\nknown when the link count might exceed the maximum count\nlimit.</p>\n\n<p style=\"margin-left:11%;\"><b>ea_inode</b></p>\n\n<p style=\"margin-left:22%;\">Normally, a file&rsquo;s\nextended attributes and associated metadata must fit within\nthe inode or the inode&rsquo;s associated extended attribute\nblock. This feature allows the value of each extended\nattribute to be placed in the data blocks of a separate\ninode if necessary, increasing the limit on the size and\nnumber of extended attributes per file.</p>\n\n<p style=\"margin-left:11%;\"><b>encrypt</b></p>\n\n<p style=\"margin-left:22%;\">Enables support for file-system\nlevel encryption of data blocks and file names. The inode\nmetadata (timestamps, file size, user/group ownership, etc.)\nis <i>not</i> encrypted.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">This feature is\nmost useful on file systems with multiple users, or where\nnot all files should be encrypted. In many use cases,\nespecially on single-user systems, encryption at the block\ndevice layer using dm-crypt may provide much better\nsecurity.</p>\n\n<p style=\"margin-left:11%;\"><b>ext_attr</b></p>\n\n<p style=\"margin-left:22%;\">This feature enables the use of\nextended attributes. This feature is supported by ext2,\next3, and ext4.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>extent</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>This ext4 feature allows the mapping of logical block\nnumbers for a particular inode to physical blocks on the\nstorage device to be stored using an extent tree, which is a\nmore efficient data structure than the traditional indirect\nblock scheme used by the ext2 and ext3 file systems. The use\nof the extent tree decreases metadata block overhead,\nimproves file system performance, and decreases the needed\nto run <b>e2fsck</b>(8) on the file system. (Note: both\n<b>extent</b> and <b>extents</b> are accepted as valid names\nfor this feature for historical/backwards compatibility\nreasons.)</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>extra_isize</b></p>\n\n<p style=\"margin-left:22%;\">This ext4 feature reserves a\nspecific amount of space in each inode for extended metadata\nsuch as nanosecond timestamps and file creation time, even\nif the current kernel does not currently need to reserve\nthis much space. Without this feature, the kernel will\nreserve the amount of space for features it currently needs,\nand the rest may be consumed by extended attributes.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">For this\nfeature to be useful the inode size must be 256 bytes in\nsize or larger.</p>\n\n<p style=\"margin-left:11%;\"><b>filetype</b></p>\n\n<p style=\"margin-left:22%;\">This feature enables the\nstorage of file type information in directory entries. This\nfeature is supported by ext2, ext3, and ext4.</p>\n\n<p style=\"margin-left:11%;\"><b>flex_bg</b></p>\n\n<p style=\"margin-left:22%;\">This ext4 feature allows the\nper-block group metadata (allocation bitmaps and inode\ntables) to be placed anywhere on the storage media. In\naddition, <b>mke2fs</b> will place the per-block group\nmetadata together starting at the first block group of each\n&quot;flex_bg group&quot;. The size of the flex_bg group can\nbe specified using the <b>-G</b> option.</p>\n\n<p style=\"margin-left:11%;\"><b>has_journal</b></p>\n\n<p style=\"margin-left:22%;\">Create a journal to ensure file\nsystem consistency even across unclean shutdowns. Setting\nthe file system feature is equivalent to using the <b>-j</b>\noption with <b>mke2fs</b> or <b>tune2fs.</b> This feature is\nsupported by ext3 and ext4, and ignored by the ext2 file\nsystem driver.</p>\n\n<p style=\"margin-left:11%;\"><b>huge_file</b></p>\n\n<p style=\"margin-left:22%;\">This ext4 feature allows files\nto be larger than 2 terabytes in size.</p>\n\n<p style=\"margin-left:11%;\"><b>inline_data</b></p>\n\n<p style=\"margin-left:22%;\">Allow data to be stored in the\ninode and extended attribute area.</p>\n\n<p style=\"margin-left:11%;\"><b>journal_dev</b></p>\n\n<p style=\"margin-left:22%;\">This feature is enabled on the\nsuperblock found on an external journal device. The block\nsize for the external journal must be the same as the file\nsystem which uses it.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The external\njournal device can be used by a file system by specifying\nthe <b>-J device=</b>&lt;external-device&gt; option to\n<b>mke2fs</b>(8) or <b>tune2fs(8)</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>large_dir</b></p>\n\n<p style=\"margin-left:22%;\">This feature increases the\nlimit on the number of files per directory by raising the\nmaximum size of directories and, for hashed b-tree\ndirectories (see <b>dir_index</b>), the maximum height of\nthe hashed b-tree used to store the directory entries.</p>\n\n<p style=\"margin-left:11%;\"><b>large_file</b></p>\n\n<p style=\"margin-left:22%;\">This feature flag is set\nautomatically by modern kernels when a file larger than 2\ngigabytes is created. Very old kernels could not handle\nlarge files, so this feature flag was used to prohibit those\nkernels from mounting file systems that they could not\nunderstand.</p>\n\n<p style=\"margin-left:11%;\"><b>metadata_csum</b></p>\n\n<p style=\"margin-left:22%;\">This ext4 feature enables\nmetadata checksumming. This feature stores checksums for all\nof the file system metadata (superblock, group descriptor\nblocks, inode and block bitmaps, directories, and extent\ntree blocks). The checksum algorithm used for the metadata\nblocks is different than the one used for group descriptors\nwith the <b>uninit_bg</b> feature. These two features are\nincompatible and <b>metadata_csum</b> will be used\npreferentially instead of <b>uninit_bg</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>metadata_csum_seed</b></p>\n\n<p style=\"margin-left:22%;\">This feature allows the file\nsystem to store the metadata checksum seed in the\nsuperblock, which allows the administrator to change the\nUUID of a file system using the <b>metadata_csum</b> feature\nwhile it is mounted.</p>\n\n<p style=\"margin-left:11%;\"><b>meta_bg</b></p>\n\n<p style=\"margin-left:22%;\">This ext4 feature allows file\nsystems to be resized on-line without explicitly needing to\nreserve space for growth in the size of the block group\ndescriptors. This scheme is also used to resize file systems\nwhich are larger than 2^32 blocks. It is not recommended\nthat this feature be set when a file system is created,\nsince this alternate method of storing the block group\ndescriptors will slow down the time needed to mount the file\nsystem, and newer kernels can automatically set this feature\nas necessary when doing an online resize and no more\nreserved space is available in the resize inode.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p><b>mmp</b></p></td>\n<td width=\"7%\"></td>\n<td width=\"78%\">\n\n\n<p>This ext4 feature provides multiple mount protection\n(MMP). MMP helps to protect the file system from being\nmultiply mounted and is useful in shared storage\nenvironments.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>project</b></p>\n\n<p style=\"margin-left:22%;\">This ext4 feature provides\nproject quota support. With this feature, the project ID of\ninode will be managed when the file system is mounted.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>quota</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>Create quota inodes (inode #3 for userquota and inode #4\nfor group quota) and set them in the superblock. With this\nfeature, the quotas will be enabled automatically when the\nfile system is mounted.</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Causes the\nquota files (i.e., user.quota and group.quota which existed\nin the older quota design) to be hidden inodes.</p>\n\n<p style=\"margin-left:11%;\"><b>resize_inode</b></p>\n\n<p style=\"margin-left:22%;\">This file system feature\nindicates that space has been reserved so that the block\ngroup descriptor table can be extended while resizing a\nmounted file system. The online resize operation is carried\nout by the kernel, triggered by <b>resize2fs</b>(8). By\ndefault <b>mke2fs</b> will attempt to reserve enough space\nso that the file system may grow to 1024 times its initial\nsize. This can be changed using the <b>resize</b> extended\noption.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">This feature\nrequires that the <b>sparse_super</b> or\n<b>sparse_super2</b> feature be enabled.</p>\n\n<p style=\"margin-left:11%;\"><b>sparse_super</b></p>\n\n<p style=\"margin-left:22%;\">This file system feature is set\non all modern ext2, ext3, and ext4 file systems. It\nindicates that backup copies of the superblock and block\ngroup descriptors are present only in a few block groups,\nnot all of them.</p>\n\n<p style=\"margin-left:11%;\"><b>sparse_super2</b></p>\n\n<p style=\"margin-left:22%;\">This feature indicates that\nthere will only be at most two backup superblocks and block\ngroup descriptors. The block groups used to store the backup\nsuperblock(s) and blockgroup descriptor(s) are stored in the\nsuperblock, but typically, one will be located at the\nbeginning of block group #1, and one in the last block group\nin the file system. This feature is essentially a more\nextreme version of sparse_super and is designed to allow a\nmuch larger percentage of the disk to have contiguous blocks\navailable for data files.</p>\n\n<p style=\"margin-left:11%;\"><b>stable_inodes</b></p>\n\n<p style=\"margin-left:22%;\">Marks the file system&rsquo;s\ninode numbers and UUID as stable. <b>resize2fs</b>(8) will\nnot allow shrinking a file system with this feature, nor\nwill <b>tune2fs</b>(8) allow changing its UUID. This feature\nallows the use of specialized encryption settings that make\nuse of the inode numbers and UUID. Note that the\n<b>encrypt</b> feature still needs to be enabled separately.\n<b>stable_inodes</b> is a &quot;compat&quot; feature, so old\nkernels will allow it.</p>\n\n<p style=\"margin-left:11%;\"><b>uninit_bg</b></p>\n\n<p style=\"margin-left:22%;\">This ext4 file system feature\nindicates that the block group descriptors will be protected\nusing checksums, making it safe for <b>mke2fs</b>(8) to\ncreate a file system without initializing all of the block\ngroups. The kernel will keep a high watermark of unused\ninodes, and initialize inode tables and blocks lazily. This\nfeature speeds up the time to check the file system using\n<b>e2fsck</b>(8), and it also speeds up the time required\nfor <b>mke2fs</b>(8) to create the file system.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>verity</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Enables support for verity protected files. Verity files\nare readonly, and their data is transparently verified\nagainst a Merkle tree hidden past the end of the file. Using\nthe Merkle tree&rsquo;s root hash, a verity file can be\nefficiently authenticated, independent of the file&rsquo;s\nsize.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">This feature is\nmost useful for authenticating important read-only files on\nread-write file systems. If the file system itself is\nread-only, then using dm-verity to authenticate the entire\nblock device may provide much better security.</p>\n\n<h2>MOUNT OPTIONS\n<a name=\"MOUNT OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This section\ndescribes mount options which are specific to ext2, ext3,\nand ext4. Other generic mount options may be used as well;\nsee <b>mount</b>(8) for details.</p>\n\n<h2>Mount options for ext2\n<a name=\"Mount options for ext2\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n&rsquo;ext2&rsquo; file system is the standard Linux file\nsystem. Since Linux 2.5.46, for most mount options the\ndefault is determined by the file system superblock. Set\nthem with <b>tune2fs</b>(8). <b><br>\nacl</b>|<b>noacl</b></p>\n\n<p style=\"margin-left:22%;\">Support POSIX Access Control\nLists (or not). See the <a href=\"https://man.page/5/acl\">acl(5)</a> manual page.</p>\n\n\n<p style=\"margin-left:11%;\"><b>bsddf</b>|<b>minixdf</b></p>\n\n<p style=\"margin-left:22%;\">Set the behavior for the\n<i>statfs</i> system call. The <b>minixdf</b> behavior is to\nreturn in the <i>f_blocks</i> field the total number of\nblocks of the file system, while the <b>bsddf</b> behavior\n(which is the default) is to subtract the overhead blocks\nused by the ext2 file system and not available for file\nstorage. Thus</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">% mount /k -o\nminixdf; df /k; umount /k</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3494431.png\" alt=\"Image grohtml-3494431.png\"></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">% mount /k -o\nbsddf; df /k; umount /k</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3494432.png\" alt=\"Image grohtml-3494432.png\"></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">(Note that this\nexample shows that one can add command line options to the\noptions given in <i>/etc/fstab</i>.)</p>\n\n<p style=\"margin-left:11%;\"><b>check=none</b> or\n<b>nocheck</b></p>\n\n<p style=\"margin-left:22%;\">No checking is done at mount\ntime. This is the default. This is fast. It is wise to\ninvoke <b>e2fsck</b>(8) every now and then, e.g. at boot\ntime. The non-default behavior is unsupported (check=normal\nand check=strict options have been removed). Note that these\nmount options don&rsquo;t have to be supported if ext4\nkernel driver is used for ext2 and ext3 file systems.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>debug</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"63%\">\n\n\n<p>Print debugging info upon each (re)mount.</p></td>\n<td width=\"15%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>errors=</b>{<b>continue</b>|<b>remount-ro</b>|<b>panic</b>}</p>\n\n<p style=\"margin-left:22%;\">Define the behavior when an\nerror is encountered. (Either ignore errors and just mark\nthe file system erroneous and continue, or remount the file\nsystem read-only, or panic and halt the system.) The default\nis set in the file system superblock, and can be changed\nusing <b>tune2fs</b>(8).</p>\n\n<p style=\"margin-left:11%;\"><b>grpid</b>|<b>bsdgroups</b>\nand <b>nogrpid</b>|<b>sysvgroups</b></p>\n\n<p style=\"margin-left:22%;\">These options define what group\nid a newly created file gets. When <b>grpid</b> is set, it\ntakes the group id of the directory in which it is created;\notherwise (the default) it takes the fsgid of the current\nprocess, unless the directory has the setgid bit set, in\nwhich case it takes the gid from the parent directory, and\nalso gets the setgid bit set if it is a directory\nitself.</p>\n\n\n<p style=\"margin-left:11%;\"><b>grpquota</b>|<b>noquota</b>|<b>quota</b>|<b>usrquota</b></p>\n\n<p style=\"margin-left:22%;\">The usrquota (same as quota)\nmount option enables user quota support on the file system.\ngrpquota enables group quotas support. You need the quota\nutilities to actually enable and manage the quota\nsystem.</p>\n\n<p style=\"margin-left:11%;\"><b>nouid32</b></p>\n\n<p style=\"margin-left:22%;\">Disables 32-bit UIDs and GIDs.\nThis is for interoperability with older kernels which only\nstore and expect 16-bit values.</p>\n\n<p style=\"margin-left:11%;\"><b>oldalloc</b> or\n<b>orlov</b></p>\n\n<p style=\"margin-left:22%;\">Use old allocator or Orlov\nallocator for new inodes. Orlov is default.</p>\n\n<p style=\"margin-left:11%;\"><b>resgid=</b><i>n</i> and\n<b>resuid=</b><i>n</i></p>\n\n<p style=\"margin-left:22%;\">The ext2 file system reserves a\ncertain percentage of the available space (by default 5%,\nsee <b>mke2fs</b>(8) and <b>tune2fs</b>(8)). These options\ndetermine who can use the reserved blocks. (Roughly: whoever\nhas the specified uid, or belongs to the specified\ngroup.)</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"6%\">\n\n\n<p><b>sb=</b><i>n</i></p></td>\n<td width=\"5%\"></td>\n<td width=\"78%\">\n\n\n<p>Instead of using the normal superblock, use an\nalternative superblock specified by <i>n</i>. This option is\nnormally used when the primary superblock has been\ncorrupted. The location of backup superblocks is dependent\non the file system&rsquo;s blocksize, the number of blocks\nper group, and features such as <b>sparse_super</b>.</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Additional\nbackup superblocks can be determined by using the\n<b>mke2fs</b> program using the <b>-n</b> option to print\nout where the superblocks exist, supposing <b>mke2fs</b> is\nsupplied with arguments that are consistent with the file\nsystem&rsquo;s layout (e.g. blocksize, blocks per group,\n<b>sparse_super</b>, etc.).</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The block\nnumber here uses 1&nbsp;k units. Thus, if you want to use\nlogical block 32768 on a file system with 4&nbsp;k blocks,\nuse &quot;sb=131072&quot;.</p>\n\n\n<p style=\"margin-left:11%;\"><b>user_xattr</b>|<b>nouser_xattr</b></p>\n\n<p style=\"margin-left:22%;\">Support &quot;user.&quot;\nextended attributes (or not).</p>\n\n<h2>Mount options for ext3\n<a name=\"Mount options for ext3\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The ext3 file\nsystem is a version of the ext2 file system which has been\nenhanced with journaling. It supports the same options as\next2 as well as the following additions: <b><br>\njournal_dev=devnum</b>/<b>journal_path=path</b></p>\n\n<p style=\"margin-left:22%;\">When the external journal\ndevice&rsquo;s major/minor numbers have changed, these\noptions allow the user to specify the new journal location.\nThe journal device is identified either through its new\nmajor/minor numbers encoded in devnum, or via a path to the\ndevice.</p>\n\n\n<p style=\"margin-left:11%;\"><b>norecovery</b>/<b>noload</b></p>\n\n<p style=\"margin-left:22%;\">Don&rsquo;t load the journal on\nmounting. Note that if the file system was not unmounted\ncleanly, skipping the journal replay will lead to the file\nsystem containing inconsistencies that can lead to any\nnumber of problems.</p>\n\n\n<p style=\"margin-left:11%;\"><b>data=</b>{<b>journal</b>|<b>ordered</b>|<b>writeback</b>}</p>\n\n<p style=\"margin-left:22%;\">Specifies the journaling mode\nfor file data. Metadata is always journaled. To use modes\nother than <b>ordered</b> on the root file system, pass the\nmode to the kernel as boot parameter, e.g.\n<i>rootflags=data=journal</i>. <b><br>\njournal</b></p>\n\n<p style=\"margin-left:32%;\">All data is committed into the\njournal prior to being written into the main file\nsystem.</p>\n\n<p style=\"margin-left:22%;\"><b>ordered</b></p>\n\n<p style=\"margin-left:32%;\">This is the default mode. All\ndata is forced directly out to the main file system prior to\nits metadata being committed to the journal.</p>\n\n<p style=\"margin-left:22%;\"><b>writeback</b></p>\n\n<p style=\"margin-left:32%;\">Data ordering is not preserved\n&ndash; data may be written into the main file system after\nits metadata has been committed to the journal. This is\nrumoured to be the highest-throughput option. It guarantees\ninternal file system integrity, however it can allow old\ndata to appear in files after a crash and journal\nrecovery.</p>\n\n<p style=\"margin-left:11%;\"><b>data_err=ignore</b></p>\n\n<p style=\"margin-left:22%;\">Just print an error message if\nan error occurs in a file data buffer in ordered mode.</p>\n\n<p style=\"margin-left:11%;\"><b>data_err=abort</b></p>\n\n<p style=\"margin-left:22%;\">Abort the journal if an error\noccurs in a file data buffer in ordered mode.</p>\n\n<p style=\"margin-left:11%;\"><b>barrier=0</b> /\n<b>barrier=1</b></p>\n\n<p style=\"margin-left:22%;\">This disables / enables the use\nof write barriers in the jbd code. barrier=0 disables,\nbarrier=1 enables (default). This also requires an IO stack\nwhich can support barriers, and if jbd gets an error on a\nbarrier write, it will disable barriers again with a\nwarning. Write barriers enforce proper on-disk ordering of\njournal commits, making volatile disk write caches safe to\nuse, at some performance penalty. If your disks are\nbattery-backed in one way or another, disabling barriers may\nsafely improve performance.</p>\n\n<p style=\"margin-left:11%;\"><b>commit=</b><i>nrsec</i></p>\n\n<p style=\"margin-left:22%;\">Start a journal commit every\n<i>nrsec</i> seconds. The default value is 5 seconds. Zero\nmeans default.</p>\n\n<p style=\"margin-left:11%;\"><b>user_xattr</b></p>\n\n<p style=\"margin-left:22%;\">Enable Extended User\nAttributes. See the <a href=\"https://man.page/5/attr\">attr(5)</a> manual page.</p>\n\n\n<p style=\"margin-left:11%;\"><b>jqfmt=</b>{<b>vfsold</b>|<b>vfsv0</b>|<b>vfsv1</b>}</p>\n\n<p style=\"margin-left:22%;\">Apart from the old quota system\n(as in ext2, jqfmt=vfsold aka version 1 quota) ext3 also\nsupports journaled quotas (version 2 quota). jqfmt=vfsv0 or\njqfmt=vfsv1 enables journaled quotas. Journaled quotas have\nthe advantage that even after a crash no quota check is\nrequired. When the <b>quota</b> file system feature is\nenabled, journaled quotas are used automatically, and this\nmount option is ignored.</p>\n\n\n<p style=\"margin-left:11%;\"><b>usrjquota=aquota.user</b>|<b>grpjquota=aquota.group</b></p>\n\n<p style=\"margin-left:22%;\">For journaled quotas\n(jqfmt=vfsv0 or jqfmt=vfsv1), the mount options\nusrjquota=aquota.user and grpjquota=aquota.group are\nrequired to tell the quota system which quota database files\nto use. When the <b>quota</b> file system feature is\nenabled, journaled quotas are used automatically, and this\nmount option is ignored.</p>\n\n<h2>Mount options for ext4\n<a name=\"Mount options for ext4\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The ext4 file\nsystem is an advanced level of the ext3 file system which\nincorporates scalability and reliability enhancements for\nsupporting large file system.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The options\n<b>journal_dev, journal_path, norecovery, noload, data,\ncommit, orlov, oldalloc, [no]user_xattr, [no]acl, bsddf,\nminixdf, debug, errors, data_err, grpid, bsdgroups, nogrpid,\nsysvgroups, resgid, resuid, sb, quota, noquota, nouid32,\ngrpquota, usrquota, usrjquota, grpjquota, and jqfmt are\nbackwardly compatible with ext3 or ext2. <br>\njournal_checksum | nojournal_checksum</b></p>\n\n<p style=\"margin-left:22%;\">The journal_checksum option\nenables checksumming of the journal transactions. This will\nallow the recovery code in e2fsck and the kernel to detect\ncorruption in the kernel. It is a compatible change and will\nbe ignored by older kernels.</p>\n\n\n<p style=\"margin-left:11%;\"><b>journal_async_commit</b></p>\n\n<p style=\"margin-left:22%;\">Commit block can be written to\ndisk without waiting for descriptor blocks. If enabled older\nkernels cannot mount the device. This will enable\n&rsquo;journal_checksum&rsquo; internally.</p>\n\n<p style=\"margin-left:11%;\"><b>barrier=0</b> /\n<b>barrier=1</b> / <b>barrier</b> / <b>nobarrier</b></p>\n\n<p style=\"margin-left:22%;\">These mount options have the\nsame effect as in ext3. The mount options\n&quot;barrier&quot; and &quot;nobarrier&quot; are added for\nconsistency with other ext4 mount options.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The ext4 file\nsystem enables write barriers by default.</p>\n\n\n<p style=\"margin-left:11%;\"><b>inode_readahead_blks=</b><i>n</i></p>\n\n<p style=\"margin-left:22%;\">This tuning parameter controls\nthe maximum number of inode table blocks that ext4&rsquo;s\ninode table readahead algorithm will pre-read into the\nbuffer cache. The value must be a power of 2. The default\nvalue is 32 blocks.</p>\n\n<p style=\"margin-left:11%;\"><b>stripe=</b><i>n</i></p>\n\n<p style=\"margin-left:22%;\">Number of file system blocks\nthat mballoc will try to use for allocation size and\nalignment. For RAID5/6 systems this should be the number of\ndata disks * RAID chunk size in file system blocks.</p>\n\n<p style=\"margin-left:11%;\"><b>delalloc</b></p>\n\n<p style=\"margin-left:22%;\">Deferring block allocation\nuntil write-out time.</p>\n\n<p style=\"margin-left:11%;\"><b>nodelalloc</b></p>\n\n<p style=\"margin-left:22%;\">Disable delayed allocation.\nBlocks are allocated when data is copied from user to page\ncache.</p>\n\n\n<p style=\"margin-left:11%;\"><b>max_batch_time=</b><i>usec</i></p>\n\n<p style=\"margin-left:22%;\">Maximum amount of time ext4\nshould wait for additional file system operations to be\nbatch together with a synchronous write operation. Since a\nsynchronous write operation is going to force a commit and\nthen a wait for the I/O complete, it doesn&rsquo;t cost\nmuch, and can be a huge throughput win, we wait for a small\namount of time to see if any other transactions can\npiggyback on the synchronous write. The algorithm used is\ndesigned to automatically tune for the speed of the disk, by\nmeasuring the amount of time (on average) that it takes to\nfinish committing a transaction. Call this time the\n&quot;commit time&quot;. If the time that the transaction\nhas been running is less than the commit time, ext4 will try\nsleeping for the commit time to see if other operations will\njoin the transaction. The commit time is capped by the\nmax_batch_time, which defaults to 15000&nbsp;&micro;s\n(15&nbsp;ms). This optimization can be turned off entirely\nby setting max_batch_time to 0.</p>\n\n\n<p style=\"margin-left:11%;\"><b>min_batch_time=</b><i>usec</i></p>\n\n<p style=\"margin-left:22%;\">This parameter sets the commit\ntime (as described above) to be at least min_batch_time. It\ndefaults to zero microseconds. Increasing this parameter may\nimprove the throughput of multi-threaded, synchronous\nworkloads on very fast disks, at the cost of increasing\nlatency.</p>\n\n\n<p style=\"margin-left:11%;\"><b>journal_ioprio=</b><i>prio</i></p>\n\n<p style=\"margin-left:22%;\">The I/O priority (from 0 to 7,\nwhere 0 is the highest priority) which should be used for\nI/O operations submitted by kjournald2 during a commit\noperation. This defaults to 3, which is a slightly higher\npriority than the default I/O priority.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>abort</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>Simulate the effects of calling ext4_abort() for\ndebugging purposes. This is normally used while remounting a\nfile system which is already mounted.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>auto_da_alloc</b>|<b>noauto_da_alloc</b></p>\n\n<p style=\"margin-left:22%;\">Many broken applications\ndon&rsquo;t use fsync() when replacing existing files via\npatterns such as</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">fd =\nopen(&quot;foo.new&quot;)/write(fd,...)/close(fd)/\nrename(&quot;foo.new&quot;, &quot;foo&quot;)</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">or worse\nyet</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">fd =\nopen(&quot;foo&quot;, O_TRUNC)/write(fd,...)/close(fd).</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">If\nauto_da_alloc is enabled, ext4 will detect the\nreplace-via-rename and replace-via-truncate patterns and\nforce that any delayed allocation blocks are allocated such\nthat at the next journal commit, in the default data=ordered\nmode, the data blocks of the new file are forced to disk\nbefore the rename() operation is committed. This provides\nroughly the same level of guarantees as ext3, and avoids the\n&quot;zero-length&quot; problem that can happen when a\nsystem crashes before the delayed allocation blocks are\nforced to disk.</p>\n\n<p style=\"margin-left:11%;\"><b>noinit_itable</b></p>\n\n<p style=\"margin-left:22%;\">Do not initialize any\nuninitialized inode table blocks in the background. This\nfeature may be used by installation CD&rsquo;s so that the\ninstall process can complete as quickly as possible; the\ninode table initialization process would then be deferred\nuntil the next time the file system is mounted.</p>\n\n<p style=\"margin-left:11%;\"><b>init_itable=n</b></p>\n\n<p style=\"margin-left:22%;\">The lazy itable init code will\nwait n times the number of milliseconds it took to zero out\nthe previous block group&rsquo;s inode table. This minimizes\nthe impact on system performance while the file\nsystem&rsquo;s inode table is being initialized.</p>\n\n\n<p style=\"margin-left:11%;\"><b>discard</b>/<b>nodiscard</b></p>\n\n<p style=\"margin-left:22%;\">Controls whether ext4 should\nissue discard/TRIM commands to the underlying block device\nwhen blocks are freed. This is useful for SSD devices and\nsparse/thinly-provisioned LUNs, but it is off by default\nuntil sufficient testing has been done.</p>\n\n\n<p style=\"margin-left:11%;\"><b>block_validity</b>/<b>noblock_validity</b></p>\n\n<p style=\"margin-left:22%;\">This option enables/disables\nthe in-kernel facility for tracking file system metadata\nblocks within internal data structures. This allows\nmulti-block allocator and other routines to quickly locate\nextents which might overlap with file system metadata\nblocks. This option is intended for debugging purposes and\nsince it negatively affects the performance, it is off by\ndefault.</p>\n\n\n<p style=\"margin-left:11%;\"><b>dioread_lock</b>/<b>dioread_nolock</b></p>\n\n<p style=\"margin-left:22%;\">Controls whether or not ext4\nshould use the DIO read locking. If the dioread_nolock\noption is specified ext4 will allocate uninitialized extent\nbefore buffer write and convert the extent to initialized\nafter IO completes. This approach allows ext4 code to avoid\nusing inode mutex, which improves scalability on high speed\nstorages. However this does not work with data journaling\nand dioread_nolock option will be ignored with kernel\nwarning. Note that dioread_nolock code path is only used for\nextent-based files. Because of the restrictions this options\ncomprises it is off by default (e.g. dioread_lock).</p>\n\n<p style=\"margin-left:11%;\"><b>max_dir_size_kb=n</b></p>\n\n<p style=\"margin-left:22%;\">This limits the size of the\ndirectories so that any attempt to expand them beyond the\nspecified limit in kilobytes will cause an ENOSPC error.\nThis is useful in memory-constrained environments, where a\nvery large directory can cause severe performance problems\nor even provoke the Out Of Memory killer. (For example, if\nthere is only 512&nbsp;MB memory available, a 176&nbsp;MB\ndirectory may seriously cramp the system&rsquo;s style.)</p>\n\n<p style=\"margin-left:11%;\"><b>i_version</b></p>\n\n<p style=\"margin-left:22%;\">Enable 64-bit inode version\nsupport. This option is off by default.</p>\n\n<p style=\"margin-left:11%;\"><b>nombcache</b></p>\n\n<p style=\"margin-left:22%;\">This option disables use of\nmbcache for extended attribute deduplication. On systems\nwhere extended attributes are rarely or never shared between\nfiles, use of mbcache for deduplication adds unnecessary\ncomputational overhead.</p>\n\n<p style=\"margin-left:11%;\"><b>prjquota</b></p>\n\n<p style=\"margin-left:22%;\">The prjquota mount option\nenables project quota support on the file system. You need\nthe quota utilities to actually enable and manage the quota\nsystem. This mount option requires the <b>project</b> file\nsystem feature.</p>\n\n<h2>FILE ATTRIBUTES\n<a name=\"FILE ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The ext2, ext3,\nand ext4 file systems support setting the following file\nattributes on Linux systems using the <a href=\"https://man.page/1/chattr\">chattr(1)</a>\nutility:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>a</b> -\nappend only</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>A</b> - no\natime updates</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>d</b> - no\ndump</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>D</b> -\nsynchronous directory updates</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>i</b> -\nimmutable</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>S</b> -\nsynchronous updates</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>u</b> -\nundeletable</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In addition,\nthe ext3 and ext4 file systems support the following\nflag:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>j</b> - data\njournaling</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Finally, the\next4 file system also supports the following flag:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>e</b> -\nextents format</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For\ndescriptions of these attribute flags, please refer to the\n<a href=\"https://man.page/1/chattr\">chattr(1)</a> man page.</p>\n\n<h2>KERNEL SUPPORT\n<a name=\"KERNEL SUPPORT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This section\nlists the file system driver (e.g., ext2, ext3, ext4) and\nupstream kernel version where a particular file system\nfeature was supported. Note that in some cases the feature\nwas present in earlier kernel versions, but there were\nknown, serious bugs. In other cases the feature may still be\nconsidered in an experimental state. Finally, note that some\ndistributions may have backported features into older\nkernels; in particular the kernel versions in certain\n&quot;enterprise distributions&quot; can be extremely\nmisleading.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>filetype</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext2, 2.2.0</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>sparse_super</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext2, 2.2.0</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>large_file</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext2, 2.2.0</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>has_journal</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext3, 2.4.15</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>ext_attr</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext2/ext3, 2.6.0</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>dir_index</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext3, 2.6.0</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>resize_inode</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext3, 2.6.10 (online resizing)</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>64bit</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 2.6.28</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>dir_nlink</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 2.6.28</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>extent</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 2.6.28</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>extra_isize</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 2.6.28</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>flex_bg</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 2.6.28</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>huge_file</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 2.6.28</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>meta_bg</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 2.6.28</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>uninit_bg</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 2.6.28</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>mmp</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 3.0</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>bigalloc</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 3.2</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>quota</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 3.6</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>inline_data</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 3.8</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>sparse_super2</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 3.16</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>metadata_csum</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 3.18</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>encrypt</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 4.1</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>metadata_csum_seed</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 4.4</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>project</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 4.5</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>ea_inode</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 4.13</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>large_dir</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 4.13</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>casefold</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 5.2</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>verity</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 5.4</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"27%\">\n\n\n<p><b>stable_inodes</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"46%\">\n\n\n<p>ext4, 5.5</p></td>\n<td width=\"12%\">\n</td></tr>\n</table>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>mke2fs</b>(8),\n<b>mke2fs.conf</b>(5), <b>e2fsck</b>(8), <b>dumpe2fs</b>(8),\n<b>tune2fs</b>(8), <b>debugfs</b>(8), <b>mount</b>(8),\n<a href=\"https://man.page/1/chattr\">chattr(1)</a></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#FILE SYSTEM FEATURES\">FILE SYSTEM FEATURES</a>","<a href=\"#MOUNT OPTIONS\">MOUNT OPTIONS</a>","<a href=\"#Mount options for ext2\">Mount options for ext2</a>","<a href=\"#Mount options for ext3\">Mount options for ext3</a>","<a href=\"#Mount options for ext4\">Mount options for ext4</a>","<a href=\"#FILE ATTRIBUTES\">FILE ATTRIBUTES</a>","<a href=\"#KERNEL SUPPORT\">KERNEL SUPPORT</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"],"level":5}