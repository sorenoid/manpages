{"name":"gitignore","description":"gitignore - Specifies intentionally untracked files to ignore","body":"\n\n<h1 align=\"center\">GITIGNORE</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gitignore -\nSpecifies intentionally untracked files to ignore</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$XDG_CONFIG_HOME/git/ignore,\n$GIT_DIR/info/exclude, .gitignore</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">A\n<b>gitignore</b> file specifies intentionally untracked\nfiles that Git should ignore. Files already tracked by Git\nare not affected; see the NOTES below for details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Each line in a\n<b>gitignore</b> file specifies a pattern. When deciding\nwhether to ignore a path, Git normally checks\n<b>gitignore</b> patterns from multiple sources, with the\nfollowing order of precedence, from highest to lowest\n(within one level of precedence, the last matching pattern\ndecides the outcome):</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Patterns\nread from the command line for those commands that support\nthem.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Patterns\nread from a <b>.gitignore</b> file in the same directory as\nthe path, or in any parent directory (up to the top-level of\nthe working tree), with patterns in the higher level files\nbeing overridden by those in lower level files down to the\ndirectory containing the file. These patterns match relative\nto the location of the <b>.gitignore</b> file. A project\nnormally includes such <b>.gitignore</b> files in its\nrepository, containing patterns for files generated as part\nof the project build.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Patterns\nread from <b>$GIT_DIR/info/exclude</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Patterns\nread from the file specified by the configuration variable\n<b>core.excludesFile</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Which file to\nplace a pattern in depends on how the pattern is meant to be\nused.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Patterns\nwhich should be version-controlled and distributed to other\nrepositories via clone (i.e., files that all developers will\nwant to ignore) should go into a <b>.gitignore</b> file.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Patterns\nwhich are specific to a particular repository but which do\nnot need to be shared with other related repositories (e.g.,\nauxiliary files that live inside the repository but are\nspecific to one user&rsquo;s workflow) should go into the\n<b>$GIT_DIR/info/exclude</b> file.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Patterns\nwhich a user wants Git to ignore in all situations (e.g.,\nbackup or temporary files generated by the user&rsquo;s\neditor of choice) generally go into a file specified by\n<b>core.excludesFile</b> in the user&rsquo;s\n<b>~/.gitconfig</b>. Its default value is\n$XDG_CONFIG_HOME/git/ignore. If $XDG_CONFIG_HOME is either\nnot set or empty, $HOME/.config/git/ignore is used\ninstead.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The underlying\nGit plumbing tools, such as <i>git ls-files</i> and <i>git\nread-tree</i>, read <b>gitignore</b> patterns specified by\ncommand-line options, or from files specified by\ncommand-line options. Higher-level Git tools, such as <i>git\nstatus</i> and <i>git add</i>, use patterns from the sources\nspecified above.</p>\n\n<h2>PATTERN FORMAT\n<a name=\"PATTERN FORMAT\"></a>\n</h2>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; A blank\nline matches no files, so it can serve as a separator for\nreadability.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; A line\nstarting with # serves as a comment. Put a backslash\n(&quot;<b>\\</b>&quot;) in front of the first hash for\npatterns that begin with a hash.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Trailing\nspaces are ignored unless they are quoted with backslash\n(&quot;<b>\\</b>&quot;).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; An\noptional prefix &quot;<b>!</b>&quot; which negates the\npattern; any matching file excluded by a previous pattern\nwill become included again. It is not possible to re-include\na file if a parent directory of that file is excluded. Git\ndoesn&rsquo;t list excluded directories for performance\nreasons, so any patterns on contained files have no effect,\nno matter where they are defined. Put a backslash\n(&quot;<b>\\</b>&quot;) in front of the first\n&quot;<b>!</b>&quot; for patterns that begin with a literal\n&quot;<b>!</b>&quot;, for example,\n&quot;<b>\\!important!.txt</b>&quot;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; The\nslash <i>/</i> is used as the directory separator.\nSeparators may occur at the beginning, middle or end of the\n<b>.gitignore</b> search pattern.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; If there\nis a separator at the beginning or middle (or both) of the\npattern, then the pattern is relative to the directory level\nof the particular <b>.gitignore</b> file itself. Otherwise\nthe pattern may also match at any level below the\n<b>.gitignore</b> level.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; If there\nis a separator at the end of the pattern then the pattern\nwill only match directories, otherwise the pattern can match\nboth files and directories.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; For\nexample, a pattern <b>doc/frotz/</b> matches\n<b>doc/frotz</b> directory, but not <b>a/doc/frotz</b>\ndirectory; however <b>frotz/</b> matches <b>frotz</b> and\n<b>a/frotz</b> that is a directory (all paths are relative\nfrom the <b>.gitignore</b> file).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; An\nasterisk &quot;<b>*</b>&quot; matches anything except a\nslash. The character &quot;<b>?</b>&quot; matches any one\ncharacter except &quot;<b>/</b>&quot;. The range notation,\ne.g. <b>[a-zA-Z]</b>, can be used to match one of the\ncharacters in a range. See fnmatch(3) and the FNM_PATHNAME\nflag for a more detailed description.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Two consecutive\nasterisks (&quot;<b>**</b>&quot;) in patterns matched\nagainst full pathname may have special meaning:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; A\nleading &quot;<b>**</b>&quot; followed by a slash means\nmatch in all directories. For example,\n&quot;<b>**/foo</b>&quot; matches file or directory\n&quot;<b>foo</b>&quot; anywhere, the same as pattern\n&quot;<b>foo</b>&quot;. &quot;<b>**/foo/bar</b>&quot;\nmatches file or directory &quot;<b>bar</b>&quot; anywhere\nthat is directly under directory &quot;<b>foo</b>&quot;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; A\ntrailing &quot;<b>/**</b>&quot; matches everything inside.\nFor example, &quot;<b>abc/**</b>&quot; matches all files\ninside directory &quot;<b>abc</b>&quot;, relative to the\nlocation of the <b>.gitignore</b> file, with infinite\ndepth.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; A slash\nfollowed by two consecutive asterisks then a slash matches\nzero or more directories. For example,\n&quot;<b>a/**/b</b>&quot; matches &quot;<b>a/b</b>&quot;,\n&quot;<b>a/x/b</b>&quot;, &quot;<b>a/x/y/b</b>&quot; and so\non.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Other\nconsecutive asterisks are considered regular asterisks and\nwill match according to the previous rules.</p>\n\n<h2>CONFIGURATION\n<a name=\"CONFIGURATION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The optional\nconfiguration variable <b>core.excludesFile</b> indicates a\npath to a file containing patterns of file names to exclude,\nsimilar to <b>$GIT_DIR/info/exclude</b>. Patterns in the\nexclude file are used in addition to those in\n<b>$GIT_DIR/info/exclude</b>.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The purpose of\ngitignore files is to ensure that certain files not tracked\nby Git remain untracked.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To stop\ntracking a file that is currently tracked, use <i>git rm\n--cached</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Git does not\nfollow symbolic links when accessing a <b>.gitignore</b>\nfile in the working tree. This keeps behavior consistent\nwhen the file is accessed from the index or a tree versus\nfrom the filesystem.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; The\npattern <b>hello.*</b> matches any file or directory whose\nname begins with <b>hello.</b>. If one wants to restrict\nthis only to the directory and not in its subdirectories,\none can prepend the pattern with a slash, i.e.\n<b>/hello.*</b>; the pattern now matches <b>hello.txt</b>,\n<b>hello.c</b> but not <b>a/hello.java</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; The\npattern <b>foo/</b> will match a directory <b>foo</b> and\npaths underneath it, but will not match a regular file or a\nsymbolic link <b>foo</b> (this is consistent with the way\nhow pathspec works in general in Git)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; The\npattern <b>doc/frotz</b> and <b>/doc/frotz</b> have the same\neffect in any <b>.gitignore</b> file. In other words, a\nleading slash is not relevant if there is already a middle\nslash in the pattern.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; The\npattern &quot;foo/*&quot;, matches &quot;foo/test.json&quot;\n(a regular file), &quot;foo/bar&quot; (a directory), but it\ndoes not match &quot;foo/bar/hello.c&quot; (a regular file),\nas the asterisk in the pattern does not match\n&quot;bar/hello.c&quot; which has a slash in it.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git status\n<br>\n[...] <br>\n# Untracked files: <br>\n[...] <br>\n# Documentation/foo.html <br>\n# Documentation/gitignore.html <br>\n# file.o <br>\n# lib.a <br>\n# src/internal.o <br>\n[...] <br>\n$ cat .git/info/exclude <br>\n# ignore objects and archives, anywhere in the tree. <br>\n*.[oa] <br>\n$ cat Documentation/.gitignore <br>\n# ignore generated html files, <br>\n*.html <br>\n# except foo.html which is maintained by hand <br>\n!foo.html <br>\n$ git status <br>\n[...] <br>\n# Untracked files: <br>\n[...] <br>\n# Documentation/foo.html <br>\n[...]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Another\nexample:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ cat\n.gitignore <br>\nvmlinux* <br>\n$ ls arch/foo/kernel/vm* <br>\narch/foo/kernel/vmlinux.lds.S <br>\n$ echo '!/vmlinux*' &gt;arch/foo/kernel/.gitignore</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The second\n.gitignore prevents Git from ignoring\n<b>arch/foo/kernel/vmlinux.lds.S</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Example to\nexclude everything except a specific directory\n<b>foo/bar</b> (note the <b>/*</b> - without the slash, the\nwildcard would also exclude everything within\n<b>foo/bar</b>):</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ cat\n.gitignore <br>\n# exclude everything except directory foo/bar <br>\n/* <br>\n!/foo <br>\n/foo/* <br>\n!/foo/bar</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/git-rm\">git-rm(1)</a>,\n<a href=\"https://man.page/5/gitrepository-layout\">gitrepository-layout(5)</a>,\n<a href=\"https://man.page/1/git-check-ignore\">git-check-ignore(1)</a></p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Part of the\n<a href=\"https://man.page/1/git\">git(1)</a> suite</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#PATTERN FORMAT\">PATTERN FORMAT</a>","<a href=\"#CONFIGURATION\">CONFIGURATION</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#GIT\">GIT</a>"],"level":5}