{"name":"utmp","body":"\n\n<h1 align=\"center\">UTMP</h1>\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">utmp, wtmp -\nlogin records</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;utmp.h&gt;</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <i>utmp</i>\nfile allows one to discover information about who is\ncurrently using the system. There may be more users\ncurrently using the system, because not all programs use\nutmp logging.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Warning:</b>\n<i>utmp</i> must not be writable by the user class\n&quot;other&quot;, because many system programs (foolishly)\ndepend on its integrity. You risk faked system logfiles and\nmodifications of system files if you leave <i>utmp</i>\nwritable to any user other than the owner and group owner of\nthe file.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The file is a\nsequence of <i>utmp</i> structures, declared as follows in\n<i>&lt;utmp.h&gt;</i> (note that this is only one of several\ndefinitions around; details depend on the version of\nlibc):</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">/* Values for\nut_type field, below */</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">#define EMPTY 0\n/* Record does not contain valid info <br>\n(formerly known as UT_UNKNOWN on Linux) */ <br>\n#define RUN_LVL 1 /* Change in system run-level (see <b><br>\ninit</b>(1)) */ <br>\n#define BOOT_TIME 2 /* Time of system boot (in <i>ut_tv</i>)\n*/ <br>\n#define NEW_TIME 3 /* Time after system clock change <br>\n(in <i>ut_tv</i>) */ <br>\n#define OLD_TIME 4 /* Time before system clock change <br>\n(in <i>ut_tv</i>) */ <br>\n#define INIT_PROCESS 5 /* Process spawned by <a href=\"https://man.page/1/init\">init(1)</a>\n*/ <br>\n#define LOGIN_PROCESS 6 /* Session leader process for user\nlogin */ <br>\n#define USER_PROCESS 7 /* Normal process */ <br>\n#define DEAD_PROCESS 8 /* Terminated process */ <br>\n#define ACCOUNTING 9 /* Not implemented */</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">#define\nUT_LINESIZE 32 <br>\n#define UT_NAMESIZE 32 <br>\n#define UT_HOSTSIZE 256</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct\nexit_status { /* Type for ut_exit, below */ <br>\nshort e_termination; /* Process termination status */ <br>\nshort e_exit; /* Process exit status */ <br>\n};</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct utmp {\n<br>\nshort ut_type; /* Type of record */ <br>\npid_t ut_pid; /* PID of login process */ <br>\nchar ut_line[UT_LINESIZE]; /* Device name of tty -\n&quot;/dev/&quot; */ <br>\nchar ut_id[4]; /* Terminal name suffix, <br>\nor inittab(5) ID */ <br>\nchar ut_user[UT_NAMESIZE]; /* Username */ <br>\nchar ut_host[UT_HOSTSIZE]; /* Hostname for remote login, or\n<br>\nkernel version for run-level <br>\nmessages */ <br>\nstruct exit_status ut_exit; /* Exit status of a process <br>\nmarked as DEAD_PROCESS; not <br>\nused by Linux init(1) */ <br>\n/* The ut_session and ut_tv fields must be the same size\nwhen <br>\ncompiled 32- and 64-bit. This allows data files and shared\n<br>\nmemory to be shared between 32- and 64-bit applications. */\n<br>\n#if __WORDSIZE == 64 &amp;&amp; defined __WORDSIZE_COMPAT32\n<br>\nint32_t ut_session; /* Session ID (<a href=\"https://man.page/2/getsid\">getsid(2)</a>), <br>\nused for windowing */ <br>\nstruct { <br>\nint32_t tv_sec; /* Seconds */ <br>\nint32_t tv_usec; /* Microseconds */ <br>\n} ut_tv; /* Time entry was made */ <br>\n#else <br>\nlong ut_session; /* Session ID */ <br>\nstruct timeval ut_tv; /* Time entry was made */ <br>\n#endif</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">int32_t\nut_addr_v6[4]; /* Internet address of remote <br>\nhost; IPv4 address uses <br>\njust ut_addr_v6[0] */ <br>\nchar __unused[20]; /* Reserved for future use */ <br>\n};</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">/* Backward\ncompatibility hacks */ <br>\n#define ut_name ut_user <br>\n#ifndef _NO_UT_TIME <br>\n#define ut_time ut_tv.tv_sec <br>\n#endif <br>\n#define ut_xtime ut_tv.tv_sec <br>\n#define ut_addr ut_addr_v6[0]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This structure\ngives the name of the special file associated with the\nuser&rsquo;s terminal, the user&rsquo;s login name, and the\ntime of login in the form of <a href=\"https://man.page/2/time\">time(2)</a>. String fields\nare terminated by a null byte ('\\0') if they are shorter\nthan the size of the field.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The first\nentries ever created result from <a href=\"https://man.page/1/init\">init(1)</a> processing\n<a href=\"https://man.page/5/inittab\">inittab(5)</a>. Before an entry is processed, though,\n<a href=\"https://man.page/1/init\">init(1)</a> cleans up utmp by setting <i>ut_type</i> to\n<b>DEAD_PROCESS</b>, clearing <i>ut_user</i>,\n<i>ut_host</i>, and <i>ut_time</i> with null bytes for each\nrecord which <i>ut_type</i> is not <b>DEAD_PROCESS</b> or\n<b>RUN_LVL</b> and where no process with PID <i>ut_pid</i>\nexists. If no empty record with the needed <i>ut_id</i> can\nbe found, <a href=\"https://man.page/1/init\">init(1)</a> creates a new one. It sets\n<i>ut_id</i> from the inittab, <i>ut_pid</i> and\n<i>ut_time</i> to the current values, and <i>ut_type</i> to\n<b>INIT_PROCESS</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>mingetty</b>(8)\n(or <b>agetty</b>(8)) locates the entry by the PID, changes\n<i>ut_type</i> to <b>LOGIN_PROCESS</b>, changes\n<i>ut_time</i>, sets <i>ut_line</i>, and waits for\nconnection to be established. <a href=\"https://man.page/1/login\">login(1)</a>, after a user\nhas been authenticated, changes <i>ut_type</i> to\n<b>USER_PROCESS</b>, changes <i>ut_time</i>, and sets\n<i>ut_host</i> and <i>ut_addr</i>. Depending on\n<b>mingetty</b>(8) (or <b>agetty</b>(8)) and\n<a href=\"https://man.page/1/login\">login(1)</a>, records may be located by <i>ut_line</i>\ninstead of the preferable <i>ut_pid</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When\n<a href=\"https://man.page/1/init\">init(1)</a> finds that a process has exited, it locates\nits utmp entry by <i>ut_pid</i>, sets <i>ut_type</i> to\n<b>DEAD_PROCESS</b>, and clears <i>ut_user</i>,\n<i>ut_host</i>, and <i>ut_time</i> with null bytes.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/xterm\">xterm(1)</a>\nand other terminal emulators directly create a\n<b>USER_PROCESS</b> record and generate the <i>ut_id</i> by\nusing the string that suffix part of the terminal name (the\ncharacters following <i>/dev/[pt]ty</i>). If they find a\n<b>DEAD_PROCESS</b> for this ID, they recycle it, otherwise\nthey create a new entry. If they can, they will mark it as\n<b>DEAD_PROCESS</b> on exiting and it is advised that they\nnull <i>ut_line</i>, <i>ut_time</i>, <i>ut_user</i>, and\n<i>ut_host</i> as well.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>telnetd</b>(8)\nsets up a <b>LOGIN_PROCESS</b> entry and leaves the rest to\n<a href=\"https://man.page/1/login\">login(1)</a> as usual. After the telnet session ends,\n<b>telnetd</b>(8) cleans up utmp in the described way.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <i>wtmp</i>\nfile records all logins and logouts. Its format is exactly\nlike <i>utmp</i> except that a null username indicates a\nlogout on the associated terminal. Furthermore, the terminal\nname <b>~</b> with username <b>shutdown</b> or <b>reboot</b>\nindicates a system shutdown or reboot and the pair of\nterminal names <b>|</b>/<b>}</b> logs the old/new system\ntime when <a href=\"https://man.page/1/date\">date(1)</a> changes it. <i>wtmp</i> is\nmaintained by <a href=\"https://man.page/1/login\">login(1)</a>, <a href=\"https://man.page/1/init\">init(1)</a>, and some\nversions of <b>getty</b>(8) (e.g., <b>mingetty</b>(8) or\n<b>agetty</b>(8)). None of these programs creates the file,\nso if it is removed, record-keeping is turned off.</p>\n\n<h2>FILES\n<a name=\"FILES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>/var/run/utmp\n<br>\n/var/log/wtmp</i></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1 does\nnot specify a <i>utmp</i> structure, but rather one named\n<i>utmpx</i>, with specifications for the fields\n<i>ut_type</i>, <i>ut_pid</i>, <i>ut_line</i>, <i>ut_id</i>,\n<i>ut_user</i>, and <i>ut_tv</i>. POSIX.1 does not specify\nthe lengths of the <i>ut_line</i> and <i>ut_user</i>\nfields.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Linux defines\nthe <i>utmpx</i> structure to be the same as the <i>utmp</i>\nstructure.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Comparison\nwith historical systems</b> <br>\nLinux utmp entries conform neither to v7/BSD nor to System\nV; they are a mix of the two.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">v7/BSD has\nfewer fields; most importantly it lacks <i>ut_type</i>,\nwhich causes native v7/BSD-like programs to display (for\nexample) dead or login entries. Further, there is no\nconfiguration file which allocates slots to sessions. BSD\ndoes so because it lacks <i>ut_id</i> fields.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In Linux (as in\nSystem V), the <i>ut_id</i> field of a record will never\nchange once it has been set, which reserves that slot\nwithout needing a configuration file. Clearing <i>ut_id</i>\nmay result in race conditions leading to corrupted utmp\nentries and potential security holes. Clearing the\nabovementioned fields by filling them with null bytes is not\nrequired by System V semantics, but makes it possible to run\nmany programs which assume BSD semantics and which do not\nmodify utmp. Linux uses the BSD conventions for line\ncontents, as documented above.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">System V has no\n<i>ut_host</i> or <i>ut_addr_v6</i> fields.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Unlike various\nother systems, where utmp logging can be disabled by\nremoving the file, utmp must always exist on Linux. If you\nwant to disable <a href=\"https://man.page/1/who\">who(1)</a>, then do not make utmp world\nreadable.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The file format\nis machine-dependent, so it is recommended that it be\nprocessed only on the machine architecture where it was\ncreated.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that on\n<i>biarch</i> platforms, that is, systems which can run both\n32-bit and 64-bit applications (x86-64, ppc64, s390x, etc.),\n<i>ut_tv</i> is the same size in 32-bit mode as in 64-bit\nmode. The same goes for <i>ut_session</i> and <i>ut_time</i>\nif they are present. This allows data files and shared\nmemory to be shared between 32-bit and 64-bit applications.\nThis is achieved by changing the type of <i>ut_session</i>\nto <i>int32_t</i>, and that of <i>ut_tv</i> to a struct with\ntwo <i>int32_t</i> fields <i>tv_sec</i> and <i>tv_usec</i>.\nSince <i>ut_tv</i> may not be the same as <i>struct\ntimeval</i>, then instead of the call:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">gettimeofday((struct\ntimeval *) &amp;ut.ut_tv, NULL);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">the following\nmethod of setting this field is recommended:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct utmp ut;\n<br>\nstruct timeval tv;</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">gettimeofday(&amp;tv,\nNULL); <br>\nut.ut_tv.tv_sec = tv.tv_sec; <br>\nut.ut_tv.tv_usec = tv.tv_usec;</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/ac\">ac(1)</a>,\n<a href=\"https://man.page/1/date\">date(1)</a>, <a href=\"https://man.page/1/init\">init(1)</a>, <a href=\"https://man.page/1/last\">last(1)</a>,\n<a href=\"https://man.page/1/login\">login(1)</a>, <a href=\"https://man.page/1/logname\">logname(1)</a>, <a href=\"https://man.page/1/lslogins\">lslogins(1)</a>,\n<a href=\"https://man.page/1/users\">users(1)</a>, <a href=\"https://man.page/1/utmpdump\">utmpdump(1)</a>, <a href=\"https://man.page/1/who\">who(1)</a>,\n<a href=\"https://man.page/3/getutent\">getutent(3)</a>, <a href=\"https://man.page/3/getutmp\">getutmp(3)</a>, <a href=\"https://man.page/3/login\">login(3)</a>,\n<a href=\"https://man.page/3/logout\">logout(3)</a>, <a href=\"https://man.page/3/logwtmp\">logwtmp(3)</a>, <a href=\"https://man.page/3/updwtmp\">updwtmp(3)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#FILES\">FILES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":5}