{"name":"scr_dump","body":"\n\n<h1 align=\"center\">scr_dump</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">scr_dump -\nformat of curses screen-dumps.</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>scr_dump</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The curses\nlibrary provides applications with the ability to write the\ncontents of a window to an external file using\n<b>scr_dump</b> or <b>putwin</b>, and read it back using\n<b>scr_restore</b> or <b>getwin</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>putwin</b> and <b>getwin</b> functions do the work; while\n<b>scr_dump</b> and <b>scr_restore</b> conveniently save and\nrestore the whole screen, i.e., <b>stdscr</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ncurses6</b>\n<br>\nA longstanding implementation of screen-dump was revised\nwith ncurses6 to remedy problems with the earlier\napproach:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>A &ldquo;magic number&rdquo; is written to the beginning\nof the dump file, allowing applications (such as\n<a href=\"https://man.page/1/file\">file(1)</a>) to recognize curses dump files.</p></td></tr>\n</table>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Because\nncurses6 uses a new format, that requires a new magic number\nwas unused by other applications. This 16-bit number was\nunused:</p>\n\n<pre style=\"margin-left:23%; margin-top: 1em\">0x8888 (octal &ldquo;\\210\\210&rdquo;)</pre>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">but to be more\ncertain, this 32-bit number was chosen:</p>\n\n<pre style=\"margin-left:23%; margin-top: 1em\">0x88888888 (octal &ldquo;\\210\\210\\210\\210&rdquo;)</pre>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">This is the\npattern submitted to the maintainers of the <b>file</b>\nprogram:</p>\n\n<pre style=\"margin-left:23%; margin-top: 1em\">#\n# ncurses5 (and before) did not use a magic number,\n# making screen dumps &quot;data&quot;.\n#\n# ncurses6 (2015) uses this format, ignoring byte-order\n0    string    \\210\\210\\210\\210ncurses    ncurses6 screen image\n#</pre>\n\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">The screen dumps are written in\ntextual form, so that internal data sizes are not directly\nrelated to the dump-format, and enabling the library to read\ndumps from either narrow- or wide-character-\nconfigurations.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\n<i>narrow</i> library configuration holds characters and\nvideo attributes in a 32-bit <b>chtype</b>, while the\n<i>wide-character</i> library stores this information in the\n<b>cchar_t</b> structure, which is much larger than\n32-bits.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">It is possible to read a screen\ndump into a terminal with a different screen-size, because\nthe library truncates or fills the screen as necessary.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The ncurses6 <b>getwin</b> reads the legacy screen dumps\nfrom ncurses5.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ncurses5\n(legacy)</b> <br>\nThe screen-dump feature was added to ncurses in June 1995.\nWhile there were fixes and improvements in succeeding years,\nthe basic scheme was unchanged:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">The <b>WINDOW</b> structure was\nwritten in binary form.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The <b>WINDOW</b> structure refers to lines of data,\nwhich were written as an array of binary data following the\n<b>WINDOW</b>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>When <b>getwin</b> restored the window, it would keep\ntrack of offsets into the array of line-data and adjust the\n<b>WINDOW</b> structure which was read back into memory.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This is similar\nto Unix SystemV, but does not write a &ldquo;magic\nnumber&rdquo; to identify the file format.</p>\n\n<h2>PORTABILITY\n<a name=\"PORTABILITY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">There is no\nstandard format for <b>putwin</b>. This section gives a\nbrief description of the existing formats.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>X/Open\nCurses</b> <br>\nRefer to <i>X/Open Curses, Issue 7</i> (2009).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">X/Open&rsquo;s\ndocumentation for <i>enhanced curses</i> says only:</p>\n\n<p style=\"margin-left:15%; margin-top: 1em\">The\n<i>getwin(&nbsp;)</i> function reads window-related data\nstored in the file by <i>putwin(&nbsp;)</i>. The function\nthen creates and initializes a new window using that\ndata.</p>\n\n<p style=\"margin-left:15%; margin-top: 1em\">The\n<i>putwin(&nbsp;)</i> function writes all data associated\nwith <i>win</i> into the <i>stdio</i> stream to which\n<i>filep</i> points, using an <b>unspecified format</b>.\nThis information can be retrieved later using\n<i>getwin(&nbsp;)</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the\nmid-1990s when the X/Open Curses document was written, there\nwere still systems using older, less capable curses\nlibraries (aside from the BSD curses library which was not\nrelevant to X/Open because it did not meet the criteria for\n<i>base curses</i>). The document explained the term\n&ldquo;enhanced&rdquo; as follows:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"2%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">Shading is used to identify\n<i>X/Open Enhanced Curses</i> material, relating to\ninterfaces included to provide enhanced capabilities for\napplications originally written to be compiled on systems\nbased on the UNIX operating system. Therefore, the features\ndescribed may not be present on systems that conform to\n<b>XPG4 or to earlier XPG releases</b>. The relevant\nreference pages may provide additional or more specific\nportability warnings about use of the material.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the\nforegoing, emphasis was added to <b>unspecified format</b>\nand to <b>XPG4 or to earlier XPG releases</b>, for\nclarity.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Unix\nSystemV</b> <br>\nUnix SystemV curses identified the file format by writing a\n&ldquo;magic number&rdquo; at the beginning of the dump. The\n<b>WINDOW</b> data and the lines of text follow, all in\nbinary form.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The Solaris\ncurses source has these definitions:</p>\n<pre style=\"margin-left:17%; margin-top: 1em\">/* terminfo magic number */\n#define MAGNUM  0432\n\n\n/* curses screen dump magic number */\n#define SVR2_DUMP_MAGIC_NUMBER  0433\n#define SVR3_DUMP_MAGIC_NUMBER  0434</pre>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">That is, the\nfeature was likely introduced in SVr2 (1984), and improved\nin SVr3 (1987). The Solaris curses source has no magic\nnumber for SVr4 (1989). Other operating systems (AIX and\nHPUX) use a magic number which would correspond to this\ndefinition:</p>\n\n<pre style=\"margin-left:17%; margin-top: 1em\">/* curses screen dump magic number */\n#define SVR4_DUMP_MAGIC_NUMBER  0435</pre>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">That octal\nnumber in bytes is 001, 035. Because most Unix vendors use\nbig-endian hardware, the magic number is written with the\nhigh-order byte first, e.g.,</p>\n<pre style=\"margin-left:17%; margin-top: 1em\"> 01 35</pre>\n\n<p style=\"margin-left:11%; margin-top: 1em\">After the magic\nnumber, the <b>WINDOW</b> structure and line-data are\nwritten in binary format. While the magic number used by the\nUnix systems can be seen using <a href=\"https://man.page/1/od\">od(1)</a>, none of the\nUnix systems documents the format used for screen-dumps.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The Unix\nsystems do not use identical formats. While collecting\ninformation for for this manual page, the <i>savescreen</i>\ntest-program produced dumps of different size (all on 64-bit\nhardware, on 40x80 screens):</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"37%\">\n\n\n<p style=\"margin-top: 1em\">AIX (51817 bytes)</p></td>\n<td width=\"46%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"37%\">\n\n\n<p>HPUX (90093 bytes)</p></td>\n<td width=\"46%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"37%\">\n\n\n<p>Solaris 10 (13273 bytes)</p></td>\n<td width=\"46%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"37%\">\n\n\n<p>ncurses5 (12888 bytes)</p></td>\n<td width=\"46%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Solaris</b>\n<br>\nAs noted above, Solaris curses has no magic number\ncorresponding to SVr4 curses. This is odd since Solaris was\nthe first operating system to pass the SVr4 guidelines.\nSolaris has two versions of curses:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">The default curses library uses\nthe SVr3 magic number.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>There is an alternate curses library in\n<b>/usr/xpg4</b>. This uses a textual format with no magic\nnumber.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:17%; margin-top: 1em\">According to\nthe copyright notice, the <i>xpg4</i> Solaris curses library\nwas developed by MKS (Mortice Kern Systems) from 1990 to\n1995.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Like ncurses6,\nthere is a file-header with parameters. Unlike ncurses6, the\ncontents of the window are written piecemeal, with\ncoordinates and attributes for each chunk of text rather\nthan writing the whole window from top to bottom.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>PDCurses</b>\n<br>\nPDCurses added support for screen dumps in version 2.7\n(2005). Like Unix SystemV and ncurses5, it writes the\n<b>WINDOW</b> structure in binary, but begins the file with\nits three-byte identifier &ldquo;PDC&rdquo;, followed by a\none-byte version, e.g.,</p>\n\n<pre style=\"margin-left:17%; margin-top: 1em\">     &ldquo;PDC\\001&rdquo;</pre>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>NetBSD</b>\n<br>\nAs of April 2017, NetBSD curses does not support\n<b>scr_dump</b> and <b>scr_restore</b> (or <b>scr_init</b>,\n<b>scr_set</b>), although it has <b>putwin</b> and\n<b>getwin</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Like ncurses5,\nNetBSD <b>putwin</b> does not identify its dumps with a\nuseful magic number. It writes</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">the curses shared library major\nand minor versions as the first two bytes (e.g., 7 and\n1),</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>followed by a binary dump of the <b>WINDOW</b>,</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>some data for wide-characters referenced by the\n<b>WINDOW</b> structure, and</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>finally, lines as done by other implementations.</p></td></tr>\n</table>\n\n<h2>EXAMPLE\n<a name=\"EXAMPLE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Given a simple\nprogram which writes text to the screen (and for the sake of\nexample, limiting the screen-size to 10x20):</p>\n<pre style=\"margin-left:17%; margin-top: 1em\">#include &lt;curses.h&gt;\n\n\nint\nmain(void)\n{\n    putenv(&quot;LINES=10&quot;);\n    putenv(&quot;COLUMNS=20&quot;);\n    initscr();\n    start_color();\n    init_pair(1, COLOR_WHITE, COLOR_BLUE);\n    init_pair(2, COLOR_RED, COLOR_BLACK);\n    bkgd(COLOR_PAIR(1));\n    move(4, 5);\n    attron(A_BOLD);\n    addstr(&quot;Hello&quot;);\n    move(5, 5);\n    attroff(A_BOLD);\n    attrset(A_REVERSE | COLOR_PAIR(2));\n    addstr(&quot;World!&quot;);\n    refresh();\n    scr_dump(&quot;foo.out&quot;);\n    endwin();\n    return 0;\n}</pre>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">When run using\nncurses6, the output looks like this:</p>\n\n<pre style=\"margin-left:17%; margin-top: 1em\">\\210\\210\\210\\210ncurses 6.0.20170415\n_cury=5\n_curx=11\n_maxy=9\n_maxx=19\n_flags=14\n_attrs=\\{REVERSE|C2}\nflag=_idcok\n_delay=-1\n_regbottom=9\n_bkgrnd=\\{NORMAL|C1}\\s\nrows:\n1:\\{NORMAL|C1}\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\n2:\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\n3:\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\n4:\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\n5:\\s\\s\\s\\s\\s\\{BOLD}Hello\\{NORMAL}\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\n6:\\s\\s\\s\\s\\s\\{REVERSE|C2}World!\\{NORMAL|C1}\\s\\s\\s\\s\\s\\s\\s\\s\\s\n7:\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\n8:\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\n9:\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\n10:\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s\\s</pre>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The first four\noctal escapes are actually nonprinting characters, while the\nremainder of the file is printable text. You may notice:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">The actual color pair values are\nnot written to the file.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>All characters are shown in printable form; spaces are\n&ldquo;\\s&rdquo; to ensure they are not overlooked.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Attributes are written in escaped curly braces, e.g.,\n&ldquo;\\{BOLD}&rdquo;, and may include a color-pair (C1 or\nC2 in this example).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The parameters in the header are written out only if\nthey are nonzero. When reading back, order does not\nmatter.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Running the\nsame program with Solaris <i>xpg4</i> curses gives this\ndump:</p>\n\n<pre style=\"margin-left:17%; margin-top: 1em\">MAX=10,20\nBEG=0,0\nSCROLL=0,10\nVMIN=1\nVTIME=0\nFLAGS=0x1000\nFG=0,0\nBG=0,0,\n0,0,0,1,\n0,19,0,0,\n1,0,0,1,\n1,19,0,0,\n2,0,0,1,\n2,19,0,0,\n3,0,0,1,\n3,19,0,0,\n4,0,0,1,\n4,5,0x20,0,Hello\n4,10,0,1,\n4,19,0,0,\n5,0,0,1,\n5,5,0x4,2,World!\n5,11,0,1,\n5,19,0,0,\n6,0,0,1,\n6,19,0,0,\n7,0,0,1,\n7,19,0,0,\n8,0,0,1,\n8,19,0,0,\n9,0,0,1,\n9,19,0,0,\nCUR=11,5</pre>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Solaris\n<b>getwin</b> requires that all parameters are present, and\nin the same order. The <i>xpg4</i> curses library does not\nknow about the <b>bce</b> (back color erase) capability, and\ndoes not color the window background.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On the other\nhand, the SVr4 curses library does know about the background\ncolor. However, its screen dumps are in binary. Here is the\ncorresponding dump (using &ldquo;od -t x1&rdquo;):</p>\n\n<pre style=\"margin-left:17%; margin-top: 1em\">0000000 1c 01 c3 d6 f3 58 05 00 0b 00 0a 00 14 00 00 00\n0000020 00 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00\n0000040 00 00 b8 1a 06 08 cc 1a 06 08 00 00 09 00 10 00\n0000060 00 00 00 80 00 00 20 00 00 00 ff ff ff ff 00 00\n0000100 ff ff ff ff 00 00 00 00 20 80 00 00 20 80 00 00\n0000120 20 80 00 00 20 80 00 00 20 80 00 00 20 80 00 00\n*\n0000620 20 80 00 00 20 80 00 00 20 80 00 00 48 80 00 04\n0000640 65 80 00 04 6c 80 00 04 6c 80 00 04 6f 80 00 04\n0000660 20 80 00 00 20 80 00 00 20 80 00 00 20 80 00 00\n*\n0000740 20 80 00 00 20 80 00 00 20 80 00 00 57 00 81 00\n0000760 6f 00 81 00 72 00 81 00 6c 00 81 00 64 00 81 00\n0001000 21 00 81 00 20 80 00 00 20 80 00 00 20 80 00 00\n0001020 20 80 00 00 20 80 00 00 20 80 00 00 20 80 00 00\n*\n0001540 20 80 00 00 20 80 00 00 00 00 f6 d1 01 00 f6 d1\n0001560 08 00 00 00 40 00 00 00 00 00 00 00 00 00 00 07\n0001600 00 04 00 01 00 01 00 00 00 01 00 00 00 00 00 00\n0001620 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n*\n0002371</pre>\n\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>scr_dump</b>(3NCURSES),\n<b>util</b>(3NCURSES).</p>\n\n<h2>AUTHORS\n<a name=\"AUTHORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Thomas E.\nDickey <br>\nextended screen-dump format for ncurses 6.0 (2015)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Eric S. Raymond\n<br>\nscreen dump feature in ncurses 1.9.2d (1995)</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#PORTABILITY\">PORTABILITY</a>","<a href=\"#EXAMPLE\">EXAMPLE</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#AUTHORS\">AUTHORS</a>"],"level":5}