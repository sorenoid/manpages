{"name":"strfromd","description":"strfromd,\nstrfromf, strfroml - convert a floating-point value into a\nstring","body":"\n\n<h1 align=\"center\">STRFROMD</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">strfromd,\nstrfromf, strfroml - convert a floating-point value into a\nstring</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;stdlib.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nstrfromd(char *restrict</b> <i>str</i><b>, size_t</b>\n<i>n</i><b>, <br>\nconst char *restrict</b> <i>format</i><b>, double</b>\n<i>fp</i><b>); <br>\nint strfromf(char *restrict</b> <i>str</i><b>, size_t</b>\n<i>n</i><b>, <br>\nconst char *restrict</b> <i>format</i><b>, float</b>\n<i>fp</i><b>); <br>\nint strfroml(char *restrict</b> <i>str</i><b>, size_t</b>\n<i>n</i><b>, <br>\nconst char *restrict</b> <i>format</i><b>, long double</b>\n<i>fp</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>strfromd</b>(),\n<b>strfromf</b>(), <b>strfroml</b>():</p>\n\n\n<p style=\"margin-left:17%;\">__STDC_WANT_IEC_60559_BFP_EXT__</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These functions\nconvert a floating-point value, <i>fp</i>, into a string of\ncharacters, <i>str</i>, with a configurable <i>format</i>\nstring. At most <i>n</i> characters are stored into\n<i>str</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The terminating\nnull byte (&rsquo;\\0&rsquo;) is written if and only if\n<i>n</i> is sufficiently large, otherwise the written string\nis truncated at <i>n</i> characters.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>strfromd</b>(), <b>strfromf</b>(), and <b>strfroml</b>()\nfunctions are equivalent to</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">snprintf(str,\nn, format, fp);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">except for the\n<i>format</i> string.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Format of\nthe format string</b> <br>\nThe <i>format</i> string must start with the character '%'.\nThis is followed by an optional precision which starts with\nthe period character (.), followed by an optional decimal\ninteger. If no integer is specified after the period\ncharacter, a precision of zero is used. Finally, the format\nstring should have one of the conversion specifiers\n<b>a</b>, <b>A</b>, <b>e</b>, <b>E</b>, <b>f</b>, <b>F</b>,\n<b>g</b>, or <b>G</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The conversion\nspecifier is applied based on the floating-point type\nindicated by the function suffix. Therefore, unlike\n<b>snprintf</b>(), the format string does not have a length\nmodifier character. See <a href=\"https://man.page/3/snprintf\">snprintf(3)</a> for a detailed\ndescription of these conversion specifiers.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nimplementation conforms to the C99 standard on conversion of\nNaN and infinity values:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">If <i>fp</i> is\na NaN, +NaN, or -NaN, and <b>f</b> (or <b>a</b>, <b>e</b>,\n<b>g</b>) is the conversion specifier, the conversion is to\n&quot;nan&quot;, &quot;nan&quot;, or &quot;-nan&quot;,\nrespectively. If <b>F</b> (or <b>A</b>, <b>E</b>, <b>G</b>)\nis the conversion specifier, the conversion is to\n&quot;NAN&quot; or &quot;-NAN&quot;.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Likewise if\n<i>fp</i> is infinity, it is converted to [-]inf or\n[-]INF.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A malformed\n<i>format</i> string results in undefined behavior.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>strfromd</b>(), <b>strfromf</b>(), and <b>strfroml</b>()\nfunctions return the number of characters that would have\nbeen written in <i>str</i> if <i>n</i> had enough space, not\ncounting the terminating null byte. Thus, a return value of\n<i>n</i> or greater means that the output was truncated.</p>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>strfromd</b>(), <b>strfromf</b>(), and <b>strfroml</b>()\nfunctions are available in glibc since version 2.25.</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a> and the <b>POSIX Safety Concepts</b>\nsection in GNU C Library manual.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"16%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"31%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"16%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"31%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"16%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"31%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"16%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"31%\">\n</td></tr>\n</table>\n\n\n<p align=\"center\"><img src=\"grohtml-3360911.png\" alt=\"Image grohtml-3360911.png\"></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note: these\nattributes are preliminary.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">C99, ISO/IEC TS\n18661-1.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>strfromd</b>(), <b>strfromf</b>(), and <b>strfroml</b>()\nfunctions take account of the <b>LC_NUMERIC</b> category of\nthe current locale.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">To convert the\nvalue 12.1 as a float type to a string using decimal\nnotation, resulting in &quot;12.100000&quot;:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">#define\n__STDC_WANT_IEC_60559_BFP_EXT__ <br>\n#include &lt;stdlib.h&gt; <br>\nint ssize = 10; <br>\nchar s[ssize]; <br>\nstrfromf(s, ssize, &quot;%f&quot;, 12.1);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To convert the\nvalue 12.3456 as a float type to a string using decimal\nnotation with two digits of precision, resulting in\n&quot;12.35&quot;:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">#define\n__STDC_WANT_IEC_60559_BFP_EXT__ <br>\n#include &lt;stdlib.h&gt; <br>\nint ssize = 10; <br>\nchar s[ssize]; <br>\nstrfromf(s, ssize, &quot;%.2f&quot;, 12.3456);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To convert the\nvalue 12.345e19 as a double type to a string using\nscientific notation with zero digits of precision, resulting\nin &quot;1E+20&quot;:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">#define\n__STDC_WANT_IEC_60559_BFP_EXT__ <br>\n#include &lt;stdlib.h&gt; <br>\nint ssize = 10; <br>\nchar s[ssize]; <br>\nstrfromd(s, ssize, &quot;%.E&quot;, 12.345e19);</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/atof\">atof(3)</a>,\n<a href=\"https://man.page/3/snprintf\">snprintf(3)</a>, <a href=\"https://man.page/3/strtod\">strtod(3)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}