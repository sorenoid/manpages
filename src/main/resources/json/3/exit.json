{"name":"exit","body":"\n\n<h1 align=\"center\">EXIT</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">exit - cause\nnormal process termination</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;stdlib.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>void\nexit(int</b> <i>status</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>exit</b>() function causes normal process termination and\nthe least significant byte of <i>status</i> (i.e., <i>status\n&amp; 0xFF</i>) is returned to the parent (see\n<a href=\"https://man.page/2/wait\">wait(2)</a>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All functions\nregistered with <a href=\"https://man.page/3/atexit\">atexit(3)</a> and <a href=\"https://man.page/3/on_exit\">on_exit(3)</a> are\ncalled, in the reverse order of their registration. (It is\npossible for one of these functions to use <a href=\"https://man.page/3/atexit\">atexit(3)</a>\nor <a href=\"https://man.page/3/on_exit\">on_exit(3)</a> to register an additional function to\nbe executed during exit processing; the new registration is\nadded to the front of the list of functions that remain to\nbe called.) If one of these functions does not return (e.g.,\nit calls <a href=\"https://man.page/2/_exit\">_exit(2)</a>, or kills itself with a signal),\nthen none of the remaining functions is called, and further\nexit processing (in particular, flushing of <a href=\"https://man.page/3/stdio\">stdio(3)</a>\nstreams) is abandoned. If a function has been registered\nmultiple times using <a href=\"https://man.page/3/atexit\">atexit(3)</a> or <a href=\"https://man.page/3/on_exit\">on_exit(3)</a>,\nthen it is called as many times as it was registered.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All open\n<a href=\"https://man.page/3/stdio\">stdio(3)</a> streams are flushed and closed. Files\ncreated by <a href=\"https://man.page/3/tmpfile\">tmpfile(3)</a> are removed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The C standard\nspecifies two constants, <b>EXIT_SUCCESS</b> and\n<b>EXIT_FAILURE</b>, that may be passed to <b>exit</b>() to\nindicate successful or unsuccessful termination,\nrespectively.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>exit</b>() function does not return.</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n</table>\n\n\n<p align=\"center\"><img src=\"grohtml-3349401.png\" alt=\"Image grohtml-3349401.png\"></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>exit</b>() function uses a global variable that is not\nprotected, so it is not thread-safe.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008, C89, C99, SVr4, 4.3BSD.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The behavior is\nundefined if one of the functions registered using\n<a href=\"https://man.page/3/atexit\">atexit(3)</a> and <a href=\"https://man.page/3/on_exit\">on_exit(3)</a> calls either\n<b>exit</b>() or <a href=\"https://man.page/3/longjmp\">longjmp(3)</a>. Note that a call to\n<a href=\"https://man.page/2/execve\">execve(2)</a> removes registrations created using\n<a href=\"https://man.page/3/atexit\">atexit(3)</a> and <a href=\"https://man.page/3/on_exit\">on_exit(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The use of\n<b>EXIT_SUCCESS</b> and <b>EXIT_FAILURE</b> is slightly more\nportable (to non-UNIX environments) than the use of 0 and\nsome nonzero value like 1 or -1. In particular, VMS uses a\ndifferent convention.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">BSD has\nattempted to standardize exit codes (which some C libraries\nsuch as the GNU C library have also adopted); see the file\n<i>&lt;sysexits.h&gt;</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">After\n<b>exit</b>(), the exit status must be transmitted to the\nparent process. There are three cases:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>If the parent has set <b>SA_NOCLDWAIT</b>, or has set\nthe <b>SIGCHLD</b> handler to <b>SIG_IGN</b>, the status is\ndiscarded and the child dies immediately.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>If the parent was waiting on the child, it is notified\nof the exit status and the child dies immediately.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>Otherwise, the child becomes a &quot;zombie&quot;\nprocess: most of the process resources are recycled, but a\nslot containing minimal information about the child process\n(termination status, resource usage statistics) is retained\nin process table. This allows the parent to subsequently use\n<a href=\"https://man.page/2/waitpid\">waitpid(2)</a> (or similar) to learn the termination\nstatus of the child; at that point the zombie process slot\nis released.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\nimplementation supports the <b>SIGCHLD</b> signal, this\nsignal is sent to the parent. If the parent has set\n<b>SA_NOCLDWAIT</b>, it is undefined whether a\n<b>SIGCHLD</b> signal is sent.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Signals sent\nto other processes</b> <br>\nIf the exiting process is a session leader and its\ncontrolling terminal is the controlling terminal of the\nsession, then each process in the foreground process group\nof this controlling terminal is sent a <b>SIGHUP</b> signal,\nand the terminal is disassociated from this session,\nallowing it to be acquired by a new controlling process.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the exit of\nthe process causes a process group to become orphaned, and\nif any member of the newly orphaned process group is\nstopped, then a <b>SIGHUP</b> signal followed by a\n<b>SIGCONT</b> signal will be sent to each process in this\nprocess group. See <a href=\"https://man.page/2/setpgid\">setpgid(2)</a> for an explanation of\norphaned process groups.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Except in the\nabove cases, where the signalled processes may be children\nof the terminating process, termination of a process does\n<i>not</i> in general cause a signal to be sent to children\nof that process. However, a process can use the\n<a href=\"https://man.page/2/prctl\">prctl(2)</a> <b>PR_SET_PDEATHSIG</b> operation to arrange\nthat it receives a signal if its parent terminates.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/_exit\">_exit(2)</a>,\n<a href=\"https://man.page/2/get_robust_list\">get_robust_list(2)</a>, <a href=\"https://man.page/2/setpgid\">setpgid(2)</a>,\n<a href=\"https://man.page/2/wait\">wait(2)</a>, <a href=\"https://man.page/3/atexit\">atexit(3)</a>, <a href=\"https://man.page/3/on_exit\">on_exit(3)</a>,\n<a href=\"https://man.page/3/tmpfile\">tmpfile(3)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}