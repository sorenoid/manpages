{"name":"lwp::membermixin","description":"LWP::MemberMixin\n- Member access mixin class","body":"\n\n<h1 align=\"center\">LWP::MemberMixin</h1>\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">LWP::MemberMixin\n- Member access mixin class</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">package Foo;\n<br>\nuse parent qw(LWP::MemberMixin);</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">A mixin class\nto get methods that provide easy access to member variables\nin the %$self. Ideally there should be better Perl language\nsupport for this.</p>\n\n<h2>METHODS\n<a name=\"METHODS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">There is only\none method provided:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>_elem</b>\n<br>\n_elem($elem [, $val])</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Internal method\nto get/set the value of member variable $elem. If $val is\npresent it is used as the new value for the member variable.\nIf it is not present the current value is not touched. In\nboth cases the previous value of the member variable is\nreturned.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#METHODS\">METHODS</a>"],"level":3}