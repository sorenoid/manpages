{"name":"posix_memalign","description":"posix_memalign, aligned_alloc, memalign, valloc, pvalloc - allocate aligned memory","body":"\n\n<h1 align=\"center\">POSIX_MEMALIGN</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">posix_memalign,\naligned_alloc, memalign, valloc, pvalloc - allocate aligned\nmemory</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;stdlib.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nposix_memalign(void **</b><i>memptr</i><b>, size_t</b>\n<i>alignment</i><b>, size_t</b> <i>size</i><b>); <br>\nvoid *aligned_alloc(size_t</b> <i>alignment</i><b>,\nsize_t</b> <i>size</i><b>); <br>\nvoid *valloc(size_t</b> <i>size</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;malloc.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>void\n*memalign(size_t</b> <i>alignment</i><b>, size_t</b>\n<i>size</i><b>); <br>\nvoid *pvalloc(size_t</b> <i>size</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>posix_memalign</b>():\n_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200112L</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>aligned_alloc</b>():\n_ISOC11_SOURCE</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>valloc</b>():</p>\n\n<p style=\"margin-left:17%;\">Since glibc 2.12:</p>\n\n\n<p style=\"margin-left:23%;\">(_XOPEN_SOURCE&nbsp;&gt;=&nbsp;500)\n&amp;&amp; !(_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200112L) <br>\n|| /* Glibc since 2.19: */ _DEFAULT_SOURCE <br>\n|| /* Glibc versions &lt;= 2.19: */ _SVID_SOURCE ||\n_BSD_SOURCE</p>\n\n<p style=\"margin-left:17%;\">Before glibc 2.12:</p>\n\n<p style=\"margin-left:23%;\">_BSD_SOURCE ||\n_XOPEN_SOURCE&nbsp;&gt;=&nbsp;500 <br>\n(The (nonstandard) header file <i>&lt;malloc.h&gt;</i> also\nexposes the declaration of <b>valloc</b>(); no feature test\nmacros are required.)</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The function\n<b>posix_memalign</b>() allocates <i>size</i> bytes and\nplaces the address of the allocated memory in\n<i>*memptr</i>. The address of the allocated memory will be\na multiple of <i>alignment</i>, which must be a power of two\nand a multiple of <i>sizeof(void&nbsp;*)</i>. This address\ncan later be successfully passed to <a href=\"https://man.page/3/free\">free(3)</a>. If\n<i>size</i> is 0, then the value placed in <i>*memptr</i> is\neither NULL or a unique pointer value.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The obsolete\nfunction <b>memalign</b>() allocates <i>size</i> bytes and\nreturns a pointer to the allocated memory. The memory\naddress will be a multiple of <i>alignment</i>, which must\nbe a power of two.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The function\n<b>aligned_alloc</b>() is the same as <b>memalign</b>(),\nexcept for the added restriction that <i>size</i> should be\na multiple of <i>alignment</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The obsolete\nfunction <b>valloc</b>() allocates <i>size</i> bytes and\nreturns a pointer to the allocated memory. The memory\naddress will be a multiple of the page size. It is\nequivalent to\n<i>memalign(sysconf(_SC_PAGESIZE),size)</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The obsolete\nfunction <b>pvalloc</b>() is similar to <b>valloc</b>(), but\nrounds the size of the allocation up to the next multiple of\nthe system page size.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For all of\nthese functions, the memory is not zeroed.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>aligned_alloc</b>(),\n<b>memalign</b>(), <b>valloc</b>(), and <b>pvalloc</b>()\nreturn a pointer to the allocated memory on success. On\nerror, NULL is returned, and <i>errno</i> is set to indicate\nthe cause of the error.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>posix_memalign</b>()\nreturns zero on success, or one of the error values listed\nin the next section on failure. The value of <i>errno</i> is\nnot set. On Linux (and other systems),\n<b>posix_memalign</b>() does not modify <i>memptr</i> on\nfailure. A requirement standardizing this behavior was added\nin POSIX.1-2008 TC2.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">The <i>alignment</i> argument\nwas not a power of two, or was not a multiple of\n<i>sizeof(void&nbsp;*)</i>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOMEM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>There was insufficient memory to fulfill the allocation\nrequest.</p> </td></tr>\n</table>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The functions\n<b>memalign</b>(), <b>valloc</b>(), and <b>pvalloc</b>()\nhave been available since at least glibc 2.0.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The function\n<b>aligned_alloc</b>() was added to glibc in version\n2.16.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The function\n<b>posix_memalign</b>() is available since glibc 2.1.91.</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3335511.png\" alt=\"Image grohtml-3335511.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The function\n<b>valloc</b>() appeared in 3.0BSD. It is documented as\nbeing obsolete in 4.3BSD, and as legacy in SUSv2. It does\nnot appear in POSIX.1.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The function\n<b>pvalloc</b>() is a GNU extension.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The function\n<b>memalign</b>() appears in SunOS 4.1.3 but not in\n4.4BSD.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The function\n<b>posix_memalign</b>() comes from POSIX.1d and is specified\nin POSIX.1-2001 and POSIX.1-2008.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The function\n<b>aligned_alloc</b>() is specified in the C11 standard.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Headers</b>\n<br>\nEverybody agrees that <b>posix_memalign</b>() is declared in\n<i>&lt;stdlib.h&gt;</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On some systems\n<b>memalign</b>() is declared in <i>&lt;stdlib.h&gt;</i>\ninstead of <i>&lt;malloc.h&gt;</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">According to\nSUSv2, <b>valloc</b>() is declared in\n<i>&lt;stdlib.h&gt;</i>. Glibc declares it in\n<i>&lt;malloc.h&gt;</i>, and also in <i>&lt;stdlib.h&gt;</i>\nif suitable feature test macros are defined (see above).</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On many systems\nthere are alignment restrictions, for example, on buffers\nused for direct block device I/O. POSIX specifies the\n<i>pathconf(path,_PC_REC_XFER_ALIGN)</i> call that tells\nwhat alignment is needed. Now one can use\n<b>posix_memalign</b>() to satisfy this requirement.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>posix_memalign</b>()\nverifies that <i>alignment</i> matches the requirements\ndetailed above. <b>memalign</b>() may not check that the\n<i>alignment</i> argument is correct.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX requires\nthat memory obtained from <b>posix_memalign</b>() can be\nfreed using <a href=\"https://man.page/3/free\">free(3)</a>. Some systems provide no way to\nreclaim memory allocated with <b>memalign</b>() or\n<b>valloc</b>() (because one can pass to <a href=\"https://man.page/3/free\">free(3)</a> only\na pointer obtained from <a href=\"https://man.page/3/malloc\">malloc(3)</a>, while, for\nexample, <b>memalign</b>() would call <a href=\"https://man.page/3/malloc\">malloc(3)</a> and\nthen align the obtained value). The glibc implementation\nallows memory obtained from any of these functions to be\nreclaimed with <a href=\"https://man.page/3/free\">free(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The glibc\n<a href=\"https://man.page/3/malloc\">malloc(3)</a> always returns 8-byte aligned memory\naddresses, so these functions are needed only if you require\nlarger alignment values.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/brk\">brk(2)</a>,\n<a href=\"https://man.page/2/getpagesize\">getpagesize(2)</a>, <a href=\"https://man.page/3/free\">free(3)</a>, <a href=\"https://man.page/3/malloc\">malloc(3)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}