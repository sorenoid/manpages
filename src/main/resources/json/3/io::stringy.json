{"name":"io::stringy","description":"IO-stringy -\nI/O on in-core objects like strings and arrays","body":"\n\n<h1 align=\"center\">IO::Stringy</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">IO-stringy -\nI/O on in-core objects like strings and arrays</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">IO:: <br>\n::AtomicFile adpO Write a file which is updated atomically\nERYQ <br>\n::Lines bdpO I/O handle to read/write to array of lines ERYQ\n<br>\n::Scalar RdpO I/O handle to read/write to a string ERYQ <br>\n::ScalarArray RdpO I/O handle to read/write to array of\nscalars ERYQ <br>\n::Wrap RdpO Wrap old-style FHs in standard OO interface ERYQ\n<br>\n::WrapTie adpO Tie your handles &amp; retain full OO\ninterface ERYQ</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This toolkit\nprimarily provides modules for performing both traditional\nand object-oriented i/o) on things <i>other</i> than normal\nfilehandles; in particular, IO::Scalar, IO::ScalarArray, and\nIO::Lines.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the\nmore-traditional IO::Handle front, we have IO::AtomicFile\nwhich may be used to painlessly create files which are\nupdated atomically.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">And in the\n&quot;this-may-prove-useful&quot; corner, we have IO::Wrap,\nwhose exported <b>wraphandle()</b> function will clothe\nanything that&rsquo;s not a blessed object in an\nIO::Handle-like wrapper... so you can just use\n<small>OO</small> syntax and stop worrying about whether\nyour function&rsquo;s caller handed you a string, a globref,\nor a FileHandle.</p>\n\n<h2>WARNINGS\n<a name=\"WARNINGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Perl&rsquo;s\n<small>TIEHANDLE</small> spec was incomplete prior to\n5.005_57; it was missing support for &quot;seek()&quot;,\n&quot;tell()&quot;, and &quot;eof()&quot;. Attempting to use\nthese functions with an IO::Scalar, IO::ScalarArray,\nIO::Lines, etc. <b>will not work</b> prior to 5.005_57. None\nof the relevant methods will be invoked by Perl; and even\nworse, this kind of bug can lie dormant for a while. If you\nturn warnings on (via $^W or &quot;perl -w&quot;), and you\nsee something like this...</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">seek() on\nunopened file</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">...then you are\nprobably trying to use one of these functions on one of our\n<small>IO::</small> classes with an old Perl. The remedy is\nto simply use the <small>OO</small> version; e.g.:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$SH-&gt;seek(0,0);\n### GOOD: will work on any 5.005 <br>\nseek($SH,0,0); ### WARNING: will only work on 5.005_57 and\nbeyond</p>\n\n<h2>INSTALLATION\n<a name=\"INSTALLATION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Requirements</b>\n<br>\nAs of version 2.x, this toolkit requires Perl 5.005 for the\nIO::Handle subclasses, and 5.005_57 or better is\n<b>strongly</b> recommended. See &quot;\n<small>WARNINGS&quot;</small> for details.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Directions</b>\n<br>\nMost of you already know the drill...</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">perl\nMakefile.PL <br>\nmake <br>\nmake test <br>\nmake install</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For everyone\nelse out there... if you&rsquo;ve never installed Perl code\nbefore, or you&rsquo;re trying to use this in an environment\nwhere your sysadmin or <small>ISP</small> won&rsquo;t let\nyou do interesting things, <b>relax:</b> since this module\ncontains no binary extensions, you can cheat. That means\ncopying the directory tree under my &quot;./lib&quot;\ndirectory into someplace where your script can\n&quot;see&quot; it. For example, under Linux:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">cp -r\nIO-stringy-1.234/lib/* /path/to/my/perl/</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Now, in your\nPerl code, do this:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">use lib\n&quot;/path/to/my/perl&quot;; <br>\nuse IO::Scalar; ### or whatever</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Ok, now\nyou&rsquo;ve been told. At this point, anyone who whines\nabout not being given enough information gets an\nunflattering haiku written about them in the next change\nlog. I&rsquo;ll do it. Don&rsquo;t think I won&rsquo;t.</p>\n\n<h2>VERSION\n<a name=\"VERSION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$Id:\nStringy.pm,v 1.3 2005/02/10 21:24:05 dfs Exp $</p>\n\n<h2>TO DO\n<a name=\"TO DO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">(2000/08/02)\nFinalize $/ support</p>\n\n<p style=\"margin-left:17%;\">Graham Barr submitted this\npatch half a <i>year</i> ago; Like a moron, I lost his\nmessage under a ton of others, and only now have the\nexperimental implementation done.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Will the sudden\nsensitivity to $/ hose anyone out there? I&rsquo;m worried,\nso you have to enable it explicitly in 1.x. It will be on by\ndefault in 2.x, though only IO::Scalar has been\nimplemented.</p>\n\n<p style=\"margin-left:11%;\">(2001/08/08) Remove IO::WrapTie\nfrom new <small>IO::</small> classes</p>\n\n<p style=\"margin-left:17%;\">It&rsquo;s not needed.\nBackwards compatibility could be maintained by having\n<b>new_tie()</b> be identical to <b>new()</b>. Heck,\nI&rsquo;ll bet that IO::WrapTie should be reimplemented so\nthe returned object is just like an IO::Scalar in its use of\nglobrefs.</p>\n\n<h2>CHANGE LOG\n<a name=\"CHANGE LOG\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Version 2.110\n(2005/02/10)</p>\n\n<p style=\"margin-left:17%;\">Maintainership taken over by\n<small>DSKOLL</small> &lt;dfs@roaringpenguin.com&gt;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Closed the\nfollowing bugs at\nhttps://rt.cpan.org/NoAuth/Bugs.html?Dist=IO-stringy:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">2208\nIO::ScalarArray-&gt;getline does not return undef for EOF if\nundef($/) <br>\n7132 IO-stringy/Makefile.PL bug - name should be module name\n<br>\n11249 IO::Scalar flush shouldn't return undef <br>\n2172 $\\ (output record separator) not respected <br>\n8605 IO::InnerFile::seek() should return 1 on success <br>\n4798 *.html in lib/ <br>\n4369 Improvement: handling of fixed-size reads in IO::Scalar\n<br>\n(Actually, bug 4369 was closed in Version 2.109)</p>\n\n<p style=\"margin-left:11%;\">Version 2.109 (2003/12/21)</p>\n\n<p style=\"margin-left:17%;\">IO::Scalar::getline now works\nwith ref to int. <i>Thanks to Dominique Quatravaux for this\npatch.</i></p>\n\n<p style=\"margin-left:11%;\">Version 2.108 (2001/08/20)</p>\n\n<p style=\"margin-left:17%;\">The terms-of-use have been\nplaced in the distribution file &quot;\n<small>COPYING&quot;.</small> Also, small documentation\ntweaks were made.</p>\n\n<p style=\"margin-left:11%;\">Version 2.105 (2001/08/09)</p>\n\n<p style=\"margin-left:17%;\">Added support for various\n<b>seek()</b> whences to IO::ScalarArray.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Added support\nfor consulting $/ in IO::Scalar and IO::ScalarArray. The old\n&quot;use_RS()&quot; is not even an option. Unsupported\nrecord separators will cause a <b>croak()</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Added a lot of\nregression tests to supoprt the above.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Better on-line\ndocs (hyperlinks to individual functions).</p>\n\n<p style=\"margin-left:11%;\">Version 2.103 (2001/08/08)</p>\n\n<p style=\"margin-left:17%;\">After sober consideration I\nhave reimplemented <b>IO::Scalar::print()</b> so that it\nonce again always seeks to the end of the string. Benchmarks\nshow the new implementation to be just as fast as\nJuergen&rsquo;s contributed patch; until someone can\nconvince me otherwise, the current, safer implementation\nstays.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">I thought more\nabout giving IO::Scalar two separate handles, one for\nreading and one for writing, as suggested by Binkley. His\npoints about what <b>tell()</b> and <b>eof()</b> return are,\nI think, show-stoppers for this feature. Even the manpages\nfor stdio&rsquo;s <b>fseek()</b> seem to imply a\n<i>single</i> file position indicator, not two. So I think I\nwill take this off the <small>TO DO</small> list.\n<b>Remedy:</b> you can always have two handles open on the\nsame scalar, one which you only write to, and one which you\nonly read from. That should give the same effect.</p>\n\n<p style=\"margin-left:11%;\">Version 2.101 (2001/08/07)</p>\n\n<p style=\"margin-left:17%;\"><b>Alpha release.</b> This is\nthe initial release of the &quot;IO::Scalar and friends are\nnow subclasses of IO::Handle&quot;. I&rsquo;m flinging it\nagainst the wall. Please tell me if the banana sticks. When\nit does, the banana will be called 2.2x.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">First off,\n<i>many many thanks to Doug Wilson</i>, who has provided an\n<i>invaluable</i> service by patching IO::Scalar and friends\nso that they (1) inherit from IO::Handle, (2) automatically\ntie themselves so that the &quot;new()&quot; objects can be\nused in native i/o constructs, and (3) doing it so that the\nwhole damn thing passes its regression tests. As Doug knows,\nmy globref Kung-Fu was not up to the task; he graciously\nprovided the patches. This has earned him a seat at the\nCo-Authors table, and the right to have me address him as\n<i>sensei</i>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Performance of\n<b>IO::Scalar::print()</b> has been improved by as much as\n2x for lots of little prints, with the cost of forcing those\nwho print-then-seek-then-print to explicitly seek to\nend-of-string before printing again. <i>Thanks to Juergen\nZeller for this patch.</i></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Added the\n<small>COPYING</small> file, which had been missing from\nprior versions. <i>Thanks to Albert Chin-A-Young for\npointing this out.</i></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">IO::Scalar\nconsults $/ by default (1.x ignored it by default). Yes, I\nstill need to support IO::ScalarArray.</p>\n\n<p style=\"margin-left:11%;\">Version 1.221 (2001/08/07)</p>\n\n<p style=\"margin-left:17%;\">I threatened in &quot;\n<small>INSTALLATION&quot;</small> to write an unflattering\nhaiku about anyone who whined that I gave them insufficient\ninformation... but it turns out that I left out a crucial\ndirection. D&rsquo; <small>OH</small> ! <i>Thanks to David\nBeroff for the &quot;patch&quot; and the haiku...</i></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Enough info\nthere? <br>\nHere's unflattering haiku: <br>\nForgot the line, &quot;make&quot;! ;-)</p>\n\n<p style=\"margin-left:11%;\">Version 1.220 (2001/04/03)</p>\n\n<p style=\"margin-left:17%;\">Added untested <small>SEEK,\nTELL,</small> and <small>EOF</small> methods to IO::Scalar\nand IO::ScalarArray to support corresponding functions for\ntied filehandles: untested, because I&rsquo;m still running\n5.00556 and Perl is complaining about &quot;<b>tell()</b> on\nunopened file&quot;. <i>Thanks to Graham Barr for the\nsuggestion.</i></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Removed\nnot-fully-blank lines from modules; these were causing lots\nof POD-related warnings. <i>Thanks to Nicolas Joly for the\nsuggestion.</i></p>\n\n<p style=\"margin-left:11%;\">Version 1.219 (2001/02/23)</p>\n\n<p style=\"margin-left:17%;\">IO::Scalar objects can now be\nmade sensitive to $/ . Pains were taken to keep the fast\ncode fast while adding this feature. <i>Cheers to Graham\nBarr for submitting his patch; jeers to me for losing his\nemail for 6 months.</i></p>\n\n<p style=\"margin-left:11%;\">Version 1.218 (2001/02/23)</p>\n\n<p style=\"margin-left:17%;\">IO::Scalar has a new\n<b>sysseek()</b> method. <i>Thanks again to Richard\nJones.</i></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">New &quot;\n<small>TO DO&quot;</small> section, because people who\nsubmit patches/ideas should at least know that they&rsquo;re\nin the system... and that I won&rsquo;t lose their stuff.\nPlease read it.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">New entries in\n&quot; <small>AUTHOR&quot;</small> . Please read those\ntoo.</p>\n\n<p style=\"margin-left:11%;\">Version 1.216 (2000/09/28)</p>\n\n<p style=\"margin-left:17%;\"><b>IO::Scalar and\nIO::ScalarArray now inherit from IO::Handle.</b> I thought\nI&rsquo;d remembered a problem with this ages ago, related\nto the fact that these <small>IO::</small> modules\ndon&rsquo;t have &quot;real&quot; filehandles, but the\nproblem apparently isn&rsquo;t surfacing now. If you\nsuddenly encounter Perl warnings during global destruction\n(especially if you&rsquo;re using tied filehandles), then\nplease let me know! <i>Thanks to B. K. Oxley (binkley) for\nthis.</i></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>Nasty bug\nfixed in IO::Scalar::write().</b> Apparently, the offset and\nthe number-of-bytes arguments were, for all practical\npurposes, <i>reversed.</i> You were okay if you did all your\nwriting with <b>print()</b>, but boy was <i>this</i> a\nstupid bug! <i>Thanks to Richard Jones for finding this one.\nFor you, Rich, a double-length haiku:</i></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Newspaper\nheadline <br>\ntypeset by dyslexic man <br>\nloses urgency <br>\nBABY EATS FISH is <br>\nsimply not equivalent <br>\nto FISH EATS BABY</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>New sysread\nand syswrite methods for IO::Scalar.</b> <i>Thanks again to\nRichard Jones for this.</i></p>\n\n<p style=\"margin-left:11%;\">Version 1.215 (2000/09/05)</p>\n\n<p style=\"margin-left:17%;\">Added &rsquo;bool&rsquo;\noverload to &rsquo;&quot;&quot;&rsquo; overload, so object\nalways evaluates to true. (Whew. Glad I caught this before\nit went to <small>CPAN.</small> )</p>\n\n<p style=\"margin-left:11%;\">Version 1.214 (2000/09/03)</p>\n\n<p style=\"margin-left:17%;\">Evaluating an IO::Scalar in a\nstring context now yields the underlying string. <i>Thanks\nto B. K. Oxley (binkley) for this.</i></p>\n\n<p style=\"margin-left:11%;\">Version 1.213 (2000/08/16)</p>\n\n<p style=\"margin-left:17%;\">Minor documentation fixes.</p>\n\n<p style=\"margin-left:11%;\">Version 1.212 (2000/06/02)</p>\n\n<p style=\"margin-left:17%;\">Fixed IO::InnerFile\nincompatibility with Perl5.004. <i>Thanks to many folks for\nreporting this.</i></p>\n\n<p style=\"margin-left:11%;\">Version 1.210 (2000/04/17)</p>\n\n<p style=\"margin-left:17%;\">Added <b>flush()</b> and other\nno-op methods. <i>Thanks to Doru Petrescu for suggesting\nthis.</i></p>\n\n<p style=\"margin-left:11%;\">Version 1.209 (2000/03/17)</p>\n\n<p style=\"margin-left:17%;\">Small bug fixes.</p>\n\n<p style=\"margin-left:11%;\">Version 1.208 (2000/03/14)</p>\n\n<p style=\"margin-left:17%;\">Incorporated a number of\ncontributed patches and extensions, mostly related to speed\nhacks, support for &quot;offset&quot;, and\n<small>WRITE/CLOSE</small> methods. <i>Thanks to Richard\nJones, Doru Petrescu, and many others.</i></p>\n\n<p style=\"margin-left:11%;\">Version 1.206 (1999/04/18)</p>\n\n<p style=\"margin-left:17%;\">Added creation of ./testout\nwhen Makefile.PL is run.</p>\n\n<p style=\"margin-left:11%;\">Version 1.205 (1999/01/15)</p>\n\n<p style=\"margin-left:17%;\">Verified for Perl5.005.</p>\n\n<p style=\"margin-left:11%;\">Version 1.202 (1998/04/18)</p>\n\n<p style=\"margin-left:17%;\">New IO::WrapTie and\nIO::AtomicFile added.</p>\n\n<p style=\"margin-left:11%;\">Version 1.110</p>\n\n<p style=\"margin-left:17%;\">Added IO::WrapTie.</p>\n\n<p style=\"margin-left:11%;\">Version 1.107</p>\n\n<p style=\"margin-left:17%;\">Added IO::Lines, and made some\nbug fixes to IO::ScalarArray. Also, added <b>getc()</b>.</p>\n\n<p style=\"margin-left:11%;\">Version 1.105</p>\n\n<p style=\"margin-left:17%;\">No real changes; just upgraded\nIO::Wrap to have a $VERSION string.</p>\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Primary\nMaintainer</p>\n\n<p style=\"margin-left:17%;\">Dianne Skoll\n(<i>dfs@roaringpenguin.com</i>).</p>\n\n<p style=\"margin-left:11%;\">Original Author</p>\n\n<p style=\"margin-left:17%;\">Eryq (<i>eryq@zeegee.com</i>).\nPresident, ZeeGee Software Inc\n(<i>http://www.zeegee.com</i>).</p>\n\n<p style=\"margin-left:11%;\">Co-Authors</p>\n\n<p style=\"margin-left:17%;\">For all their bug reports and\npatch submissions, the following are officially\nrecognized:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Richard Jones\n<br>\nB. K. Oxley (binkley) <br>\nDoru Petrescu <br>\nDoug Wilson (for picking up the ball I dropped, and doing\ntie() right)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Go to\n<i>http://www.zeegee.com</i> for the latest downloads and\non-line documentation for this module.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Enjoy. Yell if\nit breaks.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#WARNINGS\">WARNINGS</a>","<a href=\"#INSTALLATION\">INSTALLATION</a>","<a href=\"#VERSION\">VERSION</a>","<a href=\"#TO DO\">TO DO</a>","<a href=\"#CHANGE LOG\">CHANGE LOG</a>","<a href=\"#AUTHOR\">AUTHOR</a>"],"level":3}