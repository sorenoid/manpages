{"name":"lwp::debug","description":"LWP::Debug -\ndeprecated\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\nThis module has\nbeen deprecated. Please see LWP::ConsoleLogger for your\ndebugging needs.\n\nLWP::Debug is\nused to provide tracing facilities, but these are not used\nby <small>LWP</small> any more. The code in this module is\nkept around (undocumented) so that 3rd party code that\nhappens to use the old interfaces continue to run.\n\nOne useful\nfeature that LWP::Debug provided (in an imprecise and\ntroublesome way) was network traffic monitoring. The\nfollowing section provides some hints about recommended\nreplacements.\n\n<b>Network\ntraffic monitoring</b> <br>\nThe best way to monitor the network traffic that\n<small>LWP</small> generates is to use an external\n<small>TCP</small> monitoring program. The WireShark\n&lt;http://www.wireshark.org/&gt; program is highly\nrecommended for this.\n\nAnother\napproach it to use a debugging <small>HTTP</small> proxy\nserver and make <small>LWP</small> direct all its traffic\nvia this one. Call &quot;$ua-&gt;proxy&quot; to set it up\nand then just use <small>LWP</small> as before.\n\nFor less\nprecise monitoring needs just setting up a few simple\nhandlers might do. The following example sets up handlers to\ndump the request and response objects that pass through\n<small>LWP:</small>\n\nuse\nLWP::UserAgent; <br>\n$ua = LWP::UserAgent-&gt;new; <br>\n$ua-&gt;default_header('Accept-Encoding' =&gt; scalar\nHTTP::Message::decodable()); <br>\n$ua-&gt;add_handler(&quot;request_send&quot;, sub {\nshift-&gt;dump; return }); <br>\n$ua-&gt;add_handler(&quot;response_done&quot;, sub {\nshift-&gt;dump; return }); <br>\n$ua-&gt;get(&quot;http://www.example.com&quot;);\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\nLWP::ConsoleLogger,\nLWP::ConsoleLogger::Everywhere, LWP::UserAgent","body":"\n\n<h1 align=\"center\">LWP::Debug</h1>\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">LWP::Debug -\ndeprecated</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This module has\nbeen deprecated. Please see LWP::ConsoleLogger for your\ndebugging needs.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">LWP::Debug is\nused to provide tracing facilities, but these are not used\nby <small>LWP</small> any more. The code in this module is\nkept around (undocumented) so that 3rd party code that\nhappens to use the old interfaces continue to run.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">One useful\nfeature that LWP::Debug provided (in an imprecise and\ntroublesome way) was network traffic monitoring. The\nfollowing section provides some hints about recommended\nreplacements.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Network\ntraffic monitoring</b> <br>\nThe best way to monitor the network traffic that\n<small>LWP</small> generates is to use an external\n<small>TCP</small> monitoring program. The WireShark\n&lt;http://www.wireshark.org/&gt; program is highly\nrecommended for this.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Another\napproach it to use a debugging <small>HTTP</small> proxy\nserver and make <small>LWP</small> direct all its traffic\nvia this one. Call &quot;$ua-&gt;proxy&quot; to set it up\nand then just use <small>LWP</small> as before.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For less\nprecise monitoring needs just setting up a few simple\nhandlers might do. The following example sets up handlers to\ndump the request and response objects that pass through\n<small>LWP:</small></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">use\nLWP::UserAgent; <br>\n$ua = LWP::UserAgent-&gt;new; <br>\n$ua-&gt;default_header('Accept-Encoding' =&gt; scalar\nHTTP::Message::decodable()); <br>\n$ua-&gt;add_handler(&quot;request_send&quot;, sub {\nshift-&gt;dump; return }); <br>\n$ua-&gt;add_handler(&quot;response_done&quot;, sub {\nshift-&gt;dump; return }); <br>\n$ua-&gt;get(&quot;http://www.example.com&quot;);</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">LWP::ConsoleLogger,\nLWP::ConsoleLogger::Everywhere, LWP::UserAgent</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"],"level":3}