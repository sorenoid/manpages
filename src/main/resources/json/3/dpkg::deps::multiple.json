{"name":"dpkg::deps::multiple","description":"Dpkg::Deps::Multiple - base module to represent multiple dependencies","body":"\n\n<h1 align=\"center\">Dpkg::Deps::Multiple</h1>\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Dpkg::Deps::Multiple\n- base module to represent multiple dependencies</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nDpkg::Deps::Multiple module provides objects implementing\nvarious types of dependencies. It is the base class for\nDpkg::Deps::{ <small>AND,OR</small> ,Union}.</p>\n\n<h2>METHODS\n<a name=\"METHODS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$dep =\nDpkg::Deps::Multiple-&gt;new(%opts);</p>\n\n<p style=\"margin-left:17%;\">Creates a new object.</p>\n\n<p style=\"margin-left:11%;\">$dep-&gt;<b>reset()</b></p>\n\n<p style=\"margin-left:17%;\">Clears any dependency\ninformation stored in $dep so that\n$dep-&gt;<b>is_empty()</b> returns true.</p>\n\n<p style=\"margin-left:11%;\">$dep-&gt;add(@deps)</p>\n\n<p style=\"margin-left:17%;\">Adds new dependency objects at\nthe end of the list.</p>\n\n<p style=\"margin-left:11%;\">$dep-&gt;<b>get_deps()</b></p>\n\n<p style=\"margin-left:17%;\">Returns a list of\nsub-dependencies.</p>\n\n<p style=\"margin-left:11%;\">$dep-&gt;<b>sort()</b></p>\n\n<p style=\"margin-left:17%;\">Sorts alphabetically the\ninternal list of dependencies.</p>\n\n\n<p style=\"margin-left:11%;\">$dep-&gt;arch_is_concerned($arch)</p>\n\n<p style=\"margin-left:17%;\">Returns true if at least one of\nthe sub-dependencies apply to this architecture.</p>\n\n\n<p style=\"margin-left:11%;\">$dep-&gt;reduce_arch($arch)</p>\n\n<p style=\"margin-left:17%;\">Simplifies the dependencies to\ncontain only information relevant to the given architecture.\nThe non-relevant sub-dependencies are simply removed.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This trims off\nthe architecture restriction list of Dpkg::Deps::Simple\nobjects.</p>\n\n\n<p style=\"margin-left:11%;\">$dep-&gt;<b>has_arch_restriction()</b></p>\n\n<p style=\"margin-left:17%;\">Returns the list of package\nnames that have such a restriction.</p>\n\n\n<p style=\"margin-left:11%;\">$dep-&gt;<b>profile_is_concerned()</b></p>\n\n<p style=\"margin-left:17%;\">Returns true if at least one of\nthe sub-dependencies apply to this profile.</p>\n\n\n<p style=\"margin-left:11%;\">$dep-&gt;<b>reduce_profiles()</b></p>\n\n<p style=\"margin-left:17%;\">Simplifies the dependencies to\ncontain only information relevant to the given profile. The\nnon-relevant sub-dependencies are simply removed.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This trims off\nthe profile restriction list of Dpkg::Deps::Simple\nobjects.</p>\n\n<p style=\"margin-left:11%;\">$dep-&gt;<b>is_empty()</b></p>\n\n<p style=\"margin-left:17%;\">Returns true if the dependency\nis empty and doesn&rsquo;t contain any useful information.\nThis is true when a (descendant of) Dpkg::Deps::Multiple\ncontains an empty list of dependencies.</p>\n\n\n<p style=\"margin-left:11%;\">$dep-&gt;merge_union($other_dep)</p>\n\n<p style=\"margin-left:17%;\">This method is not meaningful\nfor this object, and will always croak.</p>\n\n<h2>CHANGES\n<a name=\"CHANGES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.02\n(dpkg 1.17.10)</b> <br>\nNew methods: Add $dep-&gt;<b>profile_is_concerned()</b> and\n$dep-&gt;<b>reduce_profiles()</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.01\n(dpkg 1.16.1)</b> <br>\nNew method: Add $dep-&gt;<b>reset()</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.00\n(dpkg 1.15.6)</b> <br>\nMark the module as public.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#METHODS\">METHODS</a>","<a href=\"#CHANGES\">CHANGES</a>"],"level":3}