{"name":"glib::genpod","description":"Glib::GenPod - POD generation utilities for Glib-based modules","body":"\n\n<h1 align=\"center\">Glib::GenPod</h1>\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Glib::GenPod -\nPOD generation utilities for Glib-based modules</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">use\nGlib::GenPod; <br>\n# use the defaults: <br>\nxsdoc2pod ($xsdocparse_output_file, $destination_dir); <br>\n# or take matters into your own hands <br>\nrequire $xsdocparse_output_file; <br>\nforeach my $package (sort keys %$data) { <br>\nprint &quot;=head1 NAME\\n\\n$package\\n\\n&quot;; <br>\nprint &quot;=head1 METHODS\\n\\n&quot; . podify_methods\n($package) . &quot;\\n\\n&quot;; <br>\n}</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This module\nincludes several utilities for creating pod for xs-based\nPerl modules which build on the Glib module&rsquo;s\nfoundations. The most important bits are the logic to\nconvert the data structures created by xsdocparse.pl to\ndescribe xsubs and pods into method docs, with call\nsignatures and argument descriptions, and converting C type\nnames into Perl type names. The rest of the module is mostly\nboiler-plate code to format and pretty-print information\nthat may be queried from the Glib type system.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To make life\neasy for module maintainers, we also include a do-it-all\nfunction, <b>xsdoc2pod()</b>, which does pretty much\neverything for you. All of the pieces it uses are publically\nusable, so you can do whatever you like if you don&rsquo;t\nlike the default output.</p>\n\n<h2>DOCUMENTING THE XS FILES\n<a name=\"DOCUMENTING THE XS FILES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">All of the\ninformation used as input to the methods included here comes\nfrom the <small>XS</small> files of your project, and is\nextracted by Glib::ParseXSDoc&rsquo;s\n&quot;xsdocparse&quot;. This function creates an file\ncontaining Perl code that may be eval&rsquo;d or\nrequire&rsquo;d to recreate the parsed data structures,\nwhich are a list of pods from the verbatim C portion of the\n<small>XS</small> file (the xs api docs), and a hash of the\nremaining data, keyed by package name, and including the\npods and xsubs read from the rest of each <small>XS</small>\nfile following the first <small>MODULE</small> line.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Several custom\n<small>POD</small> directives are recognized in the XSubs\nsection. Note that each one is sought as a paragraph\nstarter, and must follow a &quot;=cut&quot; directive. <br>\n=for object Package::Name</p>\n\n<p style=\"margin-left:17%;\">All xsubs and pod from here\nuntil the next object directive or <small>MODULE</small>\nline will be placed under the key\n&rsquo;<i>Package::Name</i>&rsquo; in xsdocparse&rsquo;s\ndata structure. Everything from this line to the next\n&quot;=cut&quot; is included as a description\n<small>POD.</small></p>\n\n<p style=\"margin-left:11%;\">=for object Package::Name\n(Other::Package::Name)</p>\n\n<p style=\"margin-left:17%;\">Generate <small>POD</small> in\n<i>Package::Name</i> but for the package\n<i>Other::Package::Name</i>. This is useful if you want\n<small>POD</small> to appear in a different namespace but\nstill want the automatically generated hierarchy, signal and\nproperty listing, etc. from the original namespace. For\nexample:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">=for object\nGnome2::PanelApplet::main (Gnome2::PanelApplet) <br>\n=cut</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This will\ncreate Gnome2/PanelApplet/main.pod containing the\nautomatically generated documentation for\nGnome2::PanelApplet (hierarchy, signals, etc.) plus the\nmethod listing from the current <small>XS</small> file.</p>\n\n<p style=\"margin-left:11%;\">=for enum Package::Name <br>\n=for flags Package::Name</p>\n\n<p style=\"margin-left:17%;\">This causes xsdoc2pod to call\n&quot;podify_values&quot; on <i>Package::Name</i> when\nwriting the pod for the current package (as set by an object\ndirective or <small>MODULE</small> line). Any text in this\nparagraph, to the next &quot;=cut&quot;, is included in that\nsection.</p>\n\n<p style=\"margin-left:11%;\">=for deprecated_by\nPackage::Name</p>\n\n<p style=\"margin-left:17%;\">Used to add a deprecation\nwarning, indicating <i>Package::Name</i> as an alternative\nway to achieve the same functionality. There may be any\nnumber these in each package.</p>\n\n<p style=\"margin-left:11%;\">=for see_also\nsome_thing_to_see</p>\n\n<p style=\"margin-left:17%;\">Used to add extra see alsos\nonto the end of the parents, if any, for a given object.\nAnything following the space behind see_also up to the end\nof the line will be placed onto the list of &quot;see\nalso&quot;s. There may be any number of these in each\npackage.</p>\n\n<p style=\"margin-left:11%;\">=for apidoc <br>\n=for apidoc Full::Symbol::name</p>\n\n<p style=\"margin-left:17%;\">Paragraphs of this type\ndocument xsubs, and are associated with the xsubs by\nxsdocparse.pl. If the full symbol name is not included, the\nparagraph must be attached to the xsub declaration (no blank\nlines between &quot;=cut&quot; and the xsub).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Within the\napidoc PODs, we recognize a few special directives (the\n&quot;for\\s+&quot; is optional on these): <br>\n=for signature ...</p>\n\n<p style=\"margin-left:23%;\">Override the generated call\nsignature with the ... text. If you include multiple\nsignature directives, they will all be used. This is handy\nwhen you want to change the return type or list different\nways to invoke an overloaded method, like this:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">=for apidoc\n<br>\n=signature bool Class-&gt;foo <br>\n=signature ($thing, @other) = $object-&gt;foo ($it,\n$something) <br>\nText in here is included in the generated documentation.\n<br>\nYou can actually include signature and arg directives <br>\nat any point in this pod -- they are stripped after. <br>\nIn fact, any pod is valid in here, until the =cut. <br>\n=cut <br>\nvoid foo (...) <br>\nPPCODE: <br>\n/* crazy code follows */</p>\n\n<p style=\"margin-left:17%;\">=for arg name (type)\ndescription <br>\n=for arg name description</p>\n\n<p style=\"margin-left:23%;\">The arg directive adds or\noverrides an argument description. The description text is\noptional, as is the type specification (the part in\nparentheses). If you want to hide an argument, specify\n&quot;__hide__&quot; as its type. The arg name does\n<i>not</i> need to include a sigil, as dollar signs will be\nadded. <small>FIXME</small> what about @ for lists?</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Also, we honor\na couple of &quot;modifiers&quot; on the =for apidoc line,\nfollowing the symbol name, if present: <br>\n- __hide__</p>\n\n<p style=\"margin-left:23%;\">Do not document this xsub. This\nis handy in certain situations, e.g., for private functions.\n<small>DESTROY</small> always has this turned on, for\nexample.</p>\n\n<p style=\"margin-left:17%;\">- __gerror__</p>\n\n<p style=\"margin-left:23%;\">This function or method can\ngenerate a Glib::Error exception.</p>\n\n<p style=\"margin-left:17%;\">- __function__</p>\n\n<p style=\"margin-left:23%;\">Generate a function-style\nsignature for this xsub. The default is to generate\nmethod-style signatures.</p>\n\n<p style=\"margin-left:17%;\">- __deprecated__</p>\n\n<p style=\"margin-left:23%;\">This function or method is\ndeprecated and should not be used in newly written code.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">(These are\nactually handled by Glib::ParseXSDoc, but we list them here\nbecause, well, they&rsquo;re an important part of how you\ndocument the <small>XS</small> files.)</p>\n\n<h2>FUNCTIONS\n<a name=\"FUNCTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">xsdoc2pod\n($datafile, $outdir=&rsquo;blib/lib&rsquo;, index=undef)</p>\n\n<p style=\"margin-left:17%;\">Given a <i>$datafile</i>\ncontaining the output of xsdocparse.pl, create in\n<i>$outdir</i> a pod file for each package, containing\neverything we can think of for that module. Output is\ncontrolled by the &quot;=for object&quot; directives and\nsuch in the source code.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If you\ndon&rsquo;t want each package to create a separate pod file,\nthen use this function&rsquo;s code as a starting point for\nyour own pretty-printer.</p>\n\n<p style=\"margin-left:11%;\">add_types (@filenames)</p>\n\n<p style=\"margin-left:17%;\">Parse the given\n<i>@filenames</i> for entries to add to the %basic_types\nused for C type name to Perl package name mappings of types\nthat are not registered with the Glib type system. The file\nformat is dead simple: blank lines are ignored; /#.*$/ is\nstripped from each line as comments; the first token on each\nline is considered to be a C type name, and the remaining\ntokens are the description of that type. For example, a\nvalid file may look like this:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"># a couple of\nspecial types <br>\nFooBar Foo::Bar <br>\nFrob localized frobnicator</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">C type\ndecorations such as &quot;const&quot; and &quot;*&quot; are\nimplied (do not include them), and the _ornull variant is\nhandled for you.</p>\n\n<p style=\"margin-left:11%;\">$string = podify_properties\n($packagename)</p>\n\n<p style=\"margin-left:17%;\">Pretty-print the object\nproperties owned by the Glib::Object derivative\n<i>$packagename</i> and return the text as a string. Returns\nundef if there are no properties or <i>$package</i> is not a\nGlib::Object.</p>\n\n<p style=\"margin-left:11%;\">$string =\npodify_child_properties ($packagename)</p>\n\n<p style=\"margin-left:17%;\">Pretty-print the child\nproperties owned by the Gtk2::Container derivative\n<i>$packagename</i> and return the text as a string. Returns\nundef if there are no child properties or <i>$package</i> is\nnot a Gtk2::Container or similar class with a\n&quot;list_child_properties()&quot; method.</p>\n\n<p style=\"margin-left:11%;\">$string =\npodify_style_properties ($packagename)</p>\n\n<p style=\"margin-left:17%;\">Pretty-print the style\nproperties owned by the Gtk2::Widget derivative\n<i>$packagename</i> and return the text as a string. Returns\nundef if there are no style properties or <i>$package</i> is\nnot a Gtk2::Widget or similar class with a\n&quot;list_style_properties()&quot; method.</p>\n\n<p style=\"margin-left:11%;\">$string = podify_values\n($packagename)</p>\n\n<p style=\"margin-left:17%;\">List and pretty-print the\nvalues of the GEnum or GFlags type <i>$packagename</i>, and\nreturn the text as a string. Returns undef if\n<i>$packagename</i> isn&rsquo;t an enum or flags type.</p>\n\n<p style=\"margin-left:11%;\">$string = podify_signals\n($packagename)</p>\n\n<p style=\"margin-left:17%;\">Query, list, and pretty-print\nthe signals associated with <i>$packagename</i>. Returns the\ntext as a string, or undef if there are no signals or\n<i>$packagename</i> is not a Glib::Object derivative.</p>\n\n<p style=\"margin-left:11%;\">$string = podify_deprecated_by\n($packagename, @deprecated_by)</p>\n\n<p style=\"margin-left:17%;\">Creates a deprecation warning\nfor $packagename, suggesting using the items inside\n@deprecated_by instead.</p>\n\n<p style=\"margin-left:11%;\">$string = podify_pods ($pods,\n$position)</p>\n\n<p style=\"margin-left:17%;\">Helper function to allow\nspecific placement of generic pod within the auto generated\npages. Pod sections starting out with =for position\n<small>XXX,</small> where <small>XXX</small> is one of the\nfollowing will be placed at a specified position. In the\ncase of pod that is to be placed after a particular section\nthat doesn&rsquo;t exist, that pod will be still be placed\nthere.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This function\nis called at all of the specified points through out the\nprocess of generating pod for a page. Any pod matching the\n<i>position</i> passed will be returned, undef if no matches\nwere found. If <i>position</i> is undef all pods without\nspecific position information will be returned. <i>pods</i>\nis a reference to an array of pod hashes.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"12%\">\n\n\n<p><small>SYNOPSIS</small></p></td>\n<td width=\"65%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:23%; margin-top: 1em\">After the\n<small>NAME</small> section</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"17%\">\n\n\n<p style=\"margin-top: 1em\"><small>DESCRIPTION</small></p></td>\n<td width=\"60%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:23%; margin-top: 1em\">After the\n<small>SYNOPSIS</small> section.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"22%\">\n\n\n<p style=\"margin-top: 1em\">post_hierarchy</p></td>\n<td width=\"55%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:23%; margin-top: 1em\">After the\n<small>HIERARCHY</small> section.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"23%\">\n\n\n<p style=\"margin-top: 1em\">post_interfaces</p></td>\n<td width=\"54%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:23%; margin-top: 1em\">After the\n<small>INTERFACE</small> section.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"19%\">\n\n\n<p style=\"margin-top: 1em\">post_methods</p></td>\n<td width=\"58%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:23%; margin-top: 1em\">After the\n<small>METHODS</small> section.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"23%\">\n\n\n<p style=\"margin-top: 1em\">post_properties</p></td>\n<td width=\"54%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:23%; margin-top: 1em\">After the\n<small>PROPERTIES</small> section.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"19%\">\n\n\n<p style=\"margin-top: 1em\">post_signals</p></td>\n<td width=\"58%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:23%; margin-top: 1em\">After the\n<small>SIGNALS</small> section.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"15%\">\n\n\n<p style=\"margin-top: 1em\">post_enums</p></td>\n<td width=\"62%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:23%; margin-top: 1em\">After the\n<small>ENUMS AND FLAGS</small> section.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"12%\">\n\n\n<p style=\"margin-top: 1em\"><small>SEE_ALSO</small></p></td>\n<td width=\"65%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Replacing the\nautogenerated <small>SEE ALSO</small> section\ncompletely.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"14%\">\n\n\n<p style=\"margin-top: 1em\"><small>COPYRIGHT</small></p></td>\n<td width=\"63%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Replacing the\nautogenerated <small>COPYRIGHT</small> section\ncompletely.</p>\n\n<p style=\"margin-left:11%;\">$string = podify_ancestors\n($packagename)</p>\n\n<p style=\"margin-left:17%;\">Pretty-prints the ancestry of\n<i>$packagename</i> from the Glib type system&rsquo;s point\nof view. This uses Glib::Type-&gt;list_ancestors; see that\nfunction&rsquo;s docs for an explanation of why that&rsquo;s\ndifferent from looking at @ISA.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Returns the new\ntext as a string, or undef if <i>$packagename</i> is not a\nregistered GType.</p>\n\n<p style=\"margin-left:11%;\">$string = podify_interfaces\n($packagename)</p>\n\n<p style=\"margin-left:17%;\">Pretty-print the list of\nGInterfaces that <i>$packagename</i> implements. Returns the\ntext as a string, or undef if the type implements no\ninterfaces.</p>\n\n<p style=\"margin-left:11%;\">$string = podify_methods\n($packagename)</p>\n\n<p style=\"margin-left:17%;\">Call &quot;xsub_to_pod&quot; on\nall the xsubs under the key <i>$packagename</i> in the data\nextracted by xsdocparse.pl.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Returns the new\ntext as a string, or undef if there are no xsubs in\n<i>$packagename</i>.</p>\n\n<p style=\"margin-left:11%;\">$string = podify_see_alsos\n(@entries)</p>\n\n<p style=\"margin-left:17%;\">Creates a list of links to be\nplaced in the <small>SEE ALSO</small> section of the page.\nReturns undef if nothing is in the input list.</p>\n\n<p style=\"margin-left:11%;\">$string = get_copyright</p>\n\n<p style=\"margin-left:17%;\">Returns a string that\nwill/should be placed on each page. You can control the text\nof this string by calling the class method\n<i>set_copyright</i>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If no text has\nbeen set, we will attempt to create one for you, using what\nhas been passed to <i>set_year</i>, <i>set_authors</i>, and\n<i>set_main_mod</i>. The year defaults to the current year,\nthe authors default to &rsquo;The Gtk2-Perl Team&rsquo;, and\nthe main mod is empty by default. You want the main mod to\nbe set to the main module of your extension for the\n<small>SEE ALSO</small> section, and on the assumption that\na decent license notice can be found in that module&rsquo;s\ndoc, we point the reader there.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">So, in general,\nyou will want to specify at least one of these, so that you\ndon&rsquo;t credit your work to us under the\n<small>LGPL.</small></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">To set them do\nsomething similar to the following in the first part of your\npostamble section in Makefile.PL. All occurrences of\n&lt;br&gt; in the copyright are replaced with newlines, to\nmake it easier to put in a multi-line string.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">POD_SET=Glib::GenPod::set_copyright(qq{Copyright\n1999 team-foobar&lt;br&gt;LGPL});</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>Glib::MakeHelper::postamble_docs_full()</b>\ndoes this sort of thing for you.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Helpers</b>\n<br>\n$perl_type = convert_type ($ctypestring)</p>\n\n<p style=\"margin-left:17%;\">Convert a C type name to a Perl\ntype name.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Uses\n%Glib::GenPod::basic_types to look for some known basic\ntypes, and uses Glib::Type-&gt;package_from_cname to look up\nthe registered package corresponding to a C type name. If no\nsuitable mapping can be found, this just returns the input\nstring.</p>\n\n<p style=\"margin-left:11%;\">$string = xsub_to_pod ($xsub,\n$sigprefix=&rsquo;&rsquo;)</p>\n\n<p style=\"margin-left:17%;\">Convert an xsub hash into a\nstring of pod describing it. Includes the call signature,\nargument listing, and description, honoring special switches\nin the description pod (arg and signature overrides).</p>\n\n<p style=\"margin-left:11%;\">$string = compile_signature\n($xsub)</p>\n\n<p style=\"margin-left:17%;\">Given an xsub hash, return a\nstring with the call signature for that xsub.</p>\n\n<p style=\"margin-left:11%;\">$string = fixup_arg_name\n($name)</p>\n\n<p style=\"margin-left:17%;\">Prepend a $ to anything\nthat&rsquo;s not the literal ellipsis string\n&rsquo;...&rsquo;.</p>\n\n<p style=\"margin-left:11%;\">fixup_default</p>\n\n<p style=\"margin-left:17%;\">Mangle default parameter values\nfrom C to Perl values. Mostly, this does <small>NULL</small>\n=&gt; undef.</p>\n\n<p style=\"margin-left:11%;\">convert_arg_type</p>\n\n<p style=\"margin-left:17%;\">C type to Perl type conversion\nfor argument types.</p>\n\n\n<p style=\"margin-left:11%;\">convert_return_type_to_name</p>\n\n<p style=\"margin-left:17%;\">C type to Perl type conversion\nsuitable for return types.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Glib::ParseXSDoc</p>\n\n<h2>AUTHORS\n<a name=\"AUTHORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">muppet bashed\nout the xsub signature generation in a few hours on a\nwednesday night when band practice was cancelled at the last\nminute; he and ross mcfarland hacked this module together\nvia irc and email over the next few days.</p>\n\n<h2>COPYRIGHT AND LICENSE\n<a name=\"COPYRIGHT AND LICENSE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright (C)\n2003-2004, 2010-2013 by the gtk2-perl team</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This library is\nfree software; you can redistribute it and/or modify it\nunder the terms of the Lesser General Public License (\n<small>LGPL</small> ). For more information, see\nhttp://www.fsf.org/licenses/lgpl.txt</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#DOCUMENTING THE XS FILES\">DOCUMENTING THE XS FILES</a>","<a href=\"#FUNCTIONS\">FUNCTIONS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#AUTHORS\">AUTHORS</a>","<a href=\"#COPYRIGHT AND LICENSE\">COPYRIGHT AND LICENSE</a>"],"level":3}