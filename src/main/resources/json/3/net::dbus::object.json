{"name":"net::dbus::object","description":"Net::DBus::Object\n- Implement objects to export to the bus","body":"\n\n<h1 align=\"center\">Net::DBus::Object</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Net::DBus::Object\n- Implement objects to export to the bus</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"># Connecting an\nobject to the bus, under a service <br>\npackage main; <br>\nuse Net::DBus; <br>\n# Attach to the bus <br>\nmy $bus = Net::DBus-&gt;find; <br>\n# Acquire a service 'org.demo.Hello' <br>\nmy $service =\n$bus-&gt;export_service(&quot;org.demo.Hello&quot;); <br>\n# Export our object within the service <br>\nmy $object = Demo::HelloWorld-&gt;new($service); <br>\n....rest of program... <br>\n# Define a new package for the object we're going <br>\n# to export <br>\npackage Demo::HelloWorld; <br>\n# Specify the main interface provided by our object <br>\nuse Net::DBus::Exporter qw(org.example.demo.Greeter); <br>\n# We're going to be a DBus object <br>\nuse base qw(Net::DBus::Object); <br>\n# Export a 'Greeting' signal taking a stringl string\nparameter <br>\ndbus_signal(&quot;Greeting&quot;, [&quot;string&quot;]);\n<br>\n# Export 'Hello' as a method accepting a single string <br>\n# parameter, and returning a single string value <br>\ndbus_method(&quot;Hello&quot;, [&quot;string&quot;],\n[&quot;string&quot;]); <br>\nsub new { <br>\nmy $class = shift; <br>\nmy $service = shift; <br>\nmy $self = $class-&gt;SUPER::new($service,\n&quot;/org/demo/HelloWorld&quot;); <br>\nbless $self, $class; <br>\nreturn $self; <br>\n} <br>\nsub Hello { <br>\nmy $self = shift; <br>\nmy $name = shift; <br>\n$self-&gt;emit_signal(&quot;Greeting&quot;, &quot;Hello\n$name&quot;); <br>\nreturn &quot;Said hello to $name&quot;; <br>\n} <br>\n# Export 'Goodbye' as a method accepting a single string\n<br>\n# parameter, and returning a single string, but put it <br>\n# in the 'org.exaple.demo.Farewell' interface <br>\ndbus_method(&quot;Goodbye&quot;, [&quot;string&quot;],\n[&quot;string&quot;],\n&quot;org.example.demo.Farewell&quot;); <br>\nsub Goodbye { <br>\nmy $self = shift; <br>\nmy $name = shift; <br>\n$self-&gt;emit_signal(&quot;Greeting&quot;, &quot;Goodbye\n$name&quot;); <br>\nreturn &quot;Said goodbye to $name&quot;; <br>\n}</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This the base\nfor implementing objects which are directly exported to the\nbus. The methods implemented in a subclass are mapped to\nmethods on the bus. By using this class, an application is\ndirectly tieing the <small>RPC</small> functionality into\nits object model. Applications may thus prefer to use the\n&quot;Net::DBus::ProxyObject&quot; class which allows the\n<small>RPC</small> functionality to be maintained separately\nfrom the core object model, by proxying <small>RPC</small>\nmethod calls.</p>\n\n<h2>METHODS\n<a name=\"METHODS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">my $object =\nNet::DBus::Object-&gt;new($service, $path)</p>\n\n<p style=\"margin-left:17%;\">This creates a new DBus object\nwith an path of $path registered within the service\n$service. The $path parameter should be a string complying\nwith the usual DBus requirements for object paths, while the\n$service parameter should be an instance of\nNet::DBus::Service. The latter is typically obtained by\ncalling the &quot;export_service&quot; method on the\nNet::DBus object.</p>\n\n<p style=\"margin-left:11%;\">my $object =\nNet::DBus::Object-&gt;new($parentobj, $subpath)</p>\n\n<p style=\"margin-left:17%;\">This creates a new DBus child\nobject with an path of $subpath relative to its parent\n$parentobj. The $subpath parameter should be a string\ncomplying with the usual DBus requirements for object paths,\nwhile the $parentobj parameter should be an instance of\nNet::DBus::BaseObject or a subclass.</p>\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Daniel P.\nBerrange</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright (C)\n2005-2011 Daniel P. Berrange</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Net::DBus,\nNet::DBus::Service, Net::DBus::BaseObject,\nNet::DBus::ProxyObject, Net::DBus::Exporter,\nNet::DBus::RemoteObject</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#METHODS\">METHODS</a>","<a href=\"#AUTHOR\">AUTHOR</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"],"level":3}