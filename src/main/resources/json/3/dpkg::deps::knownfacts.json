{"name":"dpkg::deps::knownfacts","description":"Dpkg::Deps::KnownFacts\n- list of installed real and virtual packages\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\nThis class\nrepresents a list of installed packages and a list of\nvirtual packages provided (by the set of installed\npackages).\n\n<h2>METHODS\n<a name=\"METHODS\"></a>\n</h2>\n\n\n$facts =\nDpkg::Deps::KnownFacts-&gt;<b>new()</b>;\n\n<p style=\"margin-left:17%;\">Creates a new object.\n\n\n<p style=\"margin-left:11%;\">$facts-&gt;add_installed_package($package,\n$version, $arch, $multiarch)\n\n<p style=\"margin-left:17%;\">Records that the given version\nof the package is installed. If $version/$arch is undefined\nwe know that the package is installed but we don&rsquo;t\nknow which version/architecture it is. $multiarch is the\nMulti-Arch field of the package. If $multiarch is undef, it\nwill be equivalent to &quot;Multi-Arch: no&quot;.\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that\n$multiarch is only used if $arch is provided.\n\n\n<p style=\"margin-left:11%;\">$facts-&gt;add_provided_package($virtual,\n$relation, $version, $by)\n\n<p style=\"margin-left:17%;\">Records that the\n&quot;$by&quot; package provides the $virtual package.\n$relation and $version correspond to the associated relation\ngiven in the Provides field (if present).\n\n\n<p style=\"margin-left:11%;\">$facts-&gt;<b>evaluate_simple_dep()</b>\n\n<p style=\"margin-left:17%;\">This method is private and\nshould not be used except from within Dpkg::Deps.\n\n<h2>CHANGES\n<a name=\"CHANGES\"></a>\n</h2>\n\n\n<b>Version 2.00\n(dpkg 1.20.0)</b> <br>\nRemove method: $facts-&gt;<b>check_package()</b>.\n\n<b>Version 1.01\n(dpkg 1.16.1)</b> <br>\nNew option:\nDpkg::Deps::KnownFacts-&gt;<b>add_installed_package()</b>\nnow accepts 2 supplementary parameters ($arch and\n$multiarch).\n\nDeprecated\nmethod: Dpkg::Deps::KnownFacts-&gt;<b>check_package()</b> is\nobsolete, it should not have been part of the public\n<small>API.</small>\n\n<b>Version 1.00\n(dpkg 1.15.6)</b> <br>\nMark the module as public.","body":"\n\n<h1 align=\"center\">Dpkg::Deps::KnownFacts</h1>\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Dpkg::Deps::KnownFacts\n- list of installed real and virtual packages</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This class\nrepresents a list of installed packages and a list of\nvirtual packages provided (by the set of installed\npackages).</p>\n\n<h2>METHODS\n<a name=\"METHODS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$facts =\nDpkg::Deps::KnownFacts-&gt;<b>new()</b>;</p>\n\n<p style=\"margin-left:17%;\">Creates a new object.</p>\n\n\n<p style=\"margin-left:11%;\">$facts-&gt;add_installed_package($package,\n$version, $arch, $multiarch)</p>\n\n<p style=\"margin-left:17%;\">Records that the given version\nof the package is installed. If $version/$arch is undefined\nwe know that the package is installed but we don&rsquo;t\nknow which version/architecture it is. $multiarch is the\nMulti-Arch field of the package. If $multiarch is undef, it\nwill be equivalent to &quot;Multi-Arch: no&quot;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that\n$multiarch is only used if $arch is provided.</p>\n\n\n<p style=\"margin-left:11%;\">$facts-&gt;add_provided_package($virtual,\n$relation, $version, $by)</p>\n\n<p style=\"margin-left:17%;\">Records that the\n&quot;$by&quot; package provides the $virtual package.\n$relation and $version correspond to the associated relation\ngiven in the Provides field (if present).</p>\n\n\n<p style=\"margin-left:11%;\">$facts-&gt;<b>evaluate_simple_dep()</b></p>\n\n<p style=\"margin-left:17%;\">This method is private and\nshould not be used except from within Dpkg::Deps.</p>\n\n<h2>CHANGES\n<a name=\"CHANGES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 2.00\n(dpkg 1.20.0)</b> <br>\nRemove method: $facts-&gt;<b>check_package()</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.01\n(dpkg 1.16.1)</b> <br>\nNew option:\nDpkg::Deps::KnownFacts-&gt;<b>add_installed_package()</b>\nnow accepts 2 supplementary parameters ($arch and\n$multiarch).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Deprecated\nmethod: Dpkg::Deps::KnownFacts-&gt;<b>check_package()</b> is\nobsolete, it should not have been part of the public\n<small>API.</small></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.00\n(dpkg 1.15.6)</b> <br>\nMark the module as public.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#METHODS\">METHODS</a>","<a href=\"#CHANGES\">CHANGES</a>"],"level":3}