{"name":"date::format","description":"Date::Format -\nDate formating subroutines","body":"\n\n<h1 align=\"center\">Date::Format</h1>\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Date::Format -\nDate formating subroutines</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">use\nDate::Format; <br>\n@lt = localtime(time); <br>\nprint time2str($template, time); <br>\nprint strftime($template, @lt); <br>\nprint time2str($template, time, $zone); <br>\nprint strftime($template, @lt, $zone); <br>\nprint ctime(time); <br>\nprint asctime(@lt); <br>\nprint ctime(time, $zone); <br>\nprint asctime(@lt, $zone);</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This module\nprovides routines to format dates into <small>ASCII</small>\nstrings. They correspond to the C library routines\n&quot;strftime&quot; and &quot;ctime&quot;. <br>\ntime2str( <small>TEMPLATE, TIME</small> [,\n<small>ZONE</small> ])</p>\n\n<p style=\"margin-left:17%;\">&quot;time2str&quot; converts\n&quot;TIME&quot; into an <small>ASCII</small> string using\nthe conversion specification given in &quot;TEMPLATE&quot;.\n&quot;ZONE&quot; if given specifies the zone which the\noutput is required to be in, &quot;ZONE&quot; defaults to\nyour current zone.</p>\n\n<p style=\"margin-left:11%;\">strftime( <small>TEMPLATE,\nTIME</small> [, <small>ZONE</small> ])</p>\n\n<p style=\"margin-left:17%;\">&quot;strftime&quot; is similar\nto &quot;time2str&quot; with the exception that the time is\npassed as an array, such as the array returned by\n&quot;localtime&quot;.</p>\n\n<p style=\"margin-left:11%;\">ctime( <small>TIME</small> [,\n<small>ZONE</small> ])</p>\n\n<p style=\"margin-left:17%;\">&quot;ctime&quot; calls\n&quot;time2str&quot; with the given arguments using the\nconversion specification &quot;%a %b %e %T %Y\\n&quot;</p>\n\n<p style=\"margin-left:11%;\">asctime( <small>TIME</small> [,\n<small>ZONE</small> ])</p>\n\n<p style=\"margin-left:17%;\">&quot;asctime&quot; calls\n&quot;time2str&quot; with the given arguments using the\nconversion specification &quot;%a %b %e %T %Y\\n&quot;</p>\n\n<h2>MULTI-LANGUAGE SUPPORT\n<a name=\"MULTI-LANGUAGE SUPPORT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Date::Format is\ncapable of formating into several languages by creating a\nlanguage specific object and calling methods, see\nDate::Language</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">my $lang =\nDate::Language-&gt;new('German'); <br>\n$lang-&gt;time2str(&quot;%a %b %e %T %Y\\n&quot;, time);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">I am open to\nsuggestions on this.</p>\n\n<h2>CONVERSION SPECIFICATION\n<a name=\"CONVERSION SPECIFICATION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Each conversion\nspecification is replaced by appropriate characters as\ndescribed in the following list. The appropriate characters\nare determined by the <small>LC_TIME</small> category of the\nprogram&rsquo;s locale.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">%% PERCENT <br>\n%a day of the week abbr <br>\n%A day of the week <br>\n%b month abbr <br>\n%B month <br>\n%c MM/DD/YY HH:MM:SS <br>\n%C ctime format: Sat Nov 19 21:05:57 1994 <br>\n%d numeric day of the month, with leading zeros (eg 01..31)\n<br>\n%e like %d, but a leading zero is replaced by a space (eg\n1..32) <br>\n%D MM/DD/YY <br>\n%G GPS week number (weeks since January 6, 1980) <br>\n%h month abbr <br>\n%H hour, 24 hour clock, leading 0's) <br>\n%I hour, 12 hour clock, leading 0's) <br>\n%j day of the year <br>\n%k hour <br>\n%l hour, 12 hour clock <br>\n%L month number, starting with 1 <br>\n%m month number, starting with 01 <br>\n%M minute, leading 0's <br>\n%n NEWLINE <br>\n%o ornate day of month -- &quot;1st&quot;, &quot;2nd&quot;,\n&quot;25th&quot;, etc. <br>\n%p AM or PM <br>\n%P am or pm (Yes %p and %P are backwards :) <br>\n%q Quarter number, starting with 1 <br>\n%r time format: 09:05:57 PM <br>\n%R time format: 21:05 <br>\n%s seconds since the Epoch, UCT <br>\n%S seconds, leading 0's <br>\n%t TAB <br>\n%T time format: 21:05:57 <br>\n%U week number, Sunday as first day of week <br>\n%w day of the week, numerically, Sunday == 0 <br>\n%W week number, Monday as first day of week <br>\n%x date format: 11/19/94 <br>\n%X time format: 21:05:57 <br>\n%y year (2 digits) <br>\n%Y year (4 digits) <br>\n%Z timezone in ascii. eg: PST <br>\n%z timezone in format -/+0000</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">%d, %e, %H, %I,\n%j, %k, %l, %m, %M, %q, %y and %Y can be output in Roman\nnumerals by prefixing the letter with &quot;O&quot;, e.g.\n%OY will output the year as roman numerals.</p>\n\n<h2>LIMITATION\n<a name=\"LIMITATION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The functions\nin this module are limited to the time range that can be\nrepresented by the time_t data type, i.e. 1901-12-13\n20:45:53 <small>GMT</small> to 2038-01-19 03:14:07\n<small>GMT.</small></p>\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Graham Barr\n&lt;gbarr@pobox.com&gt;</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright (c)\n1995-2009 Graham Barr. This program is free software; you\ncan redistribute it and/or modify it under the same terms as\nPerl itself.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#MULTI-LANGUAGE SUPPORT\">MULTI-LANGUAGE SUPPORT</a>","<a href=\"#CONVERSION SPECIFICATION\">CONVERSION SPECIFICATION</a>","<a href=\"#LIMITATION\">LIMITATION</a>","<a href=\"#AUTHOR\">AUTHOR</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"],"level":3}