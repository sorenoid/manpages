{"name":"flockfile","description":"flockfile, ftrylockfile, funlockfile - lock FILE for stdio","body":"\n\n<h1 align=\"center\">FLOCKFILE</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">flockfile,\nftrylockfile, funlockfile - lock FILE for stdio</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;stdio.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>void\nflockfile(FILE *</b><i>filehandle</i><b>); <br>\nint ftrylockfile(FILE *</b><i>filehandle</i><b>); <br>\nvoid funlockfile(FILE *</b><i>filehandle</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All functions\nshown above:</p>\n\n<p style=\"margin-left:17%;\">/* Since glibc 2.24: */\n_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;199309L <br>\n|| /* Glibc versions &lt;= 2.23: */ _POSIX_C_SOURCE <br>\n|| /* Glibc versions &lt;= 2.19: */ _BSD_SOURCE ||\n_SVID_SOURCE</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The stdio\nfunctions are thread-safe. This is achieved by assigning to\neach <i>FILE</i> object a lockcount and (if the lockcount is\nnonzero) an owning thread. For each library call, these\nfunctions wait until the <i>FILE</i> object is no longer\nlocked by a different thread, then lock it, do the requested\nI/O, and unlock the object again.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">(Note: this\nlocking has nothing to do with the file locking done by\nfunctions like <a href=\"https://man.page/2/flock\">flock(2)</a> and <a href=\"https://man.page/3/lockf\">lockf(3)</a>.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All this is\ninvisible to the C-programmer, but there may be two reasons\nto wish for more detailed control. On the one hand, maybe a\nseries of I/O actions by one thread belongs together, and\nshould not be interrupted by the I/O of some other thread.\nOn the other hand, maybe the locking overhead should be\navoided for greater efficiency.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To this end, a\nthread can explicitly lock the <i>FILE</i> object, then do\nits series of I/O actions, then unlock. This prevents other\nthreads from coming in between. If the reason for doing this\nwas to achieve greater efficiency, one does the I/O with the\nnonlocking versions of the stdio functions: with\n<a href=\"https://man.page/3/getc_unlocked\">getc_unlocked(3)</a> and <a href=\"https://man.page/3/putc_unlocked\">putc_unlocked(3)</a> instead\nof <a href=\"https://man.page/3/getc\">getc(3)</a> and <a href=\"https://man.page/3/putc\">putc(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>flockfile</b>() function waits for <i>*filehandle</i> to\nbe no longer locked by a different thread, then makes the\ncurrent thread owner of <i>*filehandle</i>, and increments\nthe lockcount.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>funlockfile</b>() function decrements the lock count.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>ftrylockfile</b>() function is a nonblocking version of\n<b>flockfile</b>(). It does nothing in case some other\nthread owns <i>*filehandle</i>, and it obtains ownership and\nincrements the lockcount otherwise.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>ftrylockfile</b>() function returns zero for success (the\nlock was obtained), and nonzero for failure.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">None.</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n</table>\n\n\n<p align=\"center\"><img src=\"grohtml-3331731.png\" alt=\"Image grohtml-3331731.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">These functions\nare available when <b>_POSIX_THREAD_SAFE_FUNCTIONS</b> is\ndefined.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/unlocked_stdio\">unlocked_stdio(3)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}