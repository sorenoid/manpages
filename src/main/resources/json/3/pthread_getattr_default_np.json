{"name":"pthread_getattr_default_np","body":"\n\n<h1 align=\"center\">PTHREAD_GETATTR_DEFAULT_NP</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">pthread_getattr_default_np,\npthread_setattr_default_np, - get or set default\nthread-creation attributes</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#define\n_GNU_SOURCE</b> /* See feature_test_macros(7) */ <b><br>\n#include &lt;pthread.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\npthread_getattr_default_np(pthread_attr_t\n*</b><i>attr</i><b>); <br>\nint pthread_setattr_default_np(pthread_attr_t\n*</b><i>attr</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Compile and\nlink with <i>-pthread</i>.</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>pthread_setattr_default_np</b>() function sets the\ndefault attributes used for creation of a new\nthread&mdash;that is, the attributes that are used when\n<a href=\"https://man.page/3/pthread_create\">pthread_create(3)</a> is called with a second argument\nthat is NULL. The default attributes are set using the\nattributes supplied in <i>*attr</i>, a previously\ninitialized thread attributes object. Note the following\ndetails about the supplied attributes object:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>The attribute settings in the object must be valid.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>The <i>stack address</i> attribute must not be set in\nthe object.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>Setting the <i>stack size</i> attribute to zero means\nleave the default stack size unchanged.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>pthread_getattr_default_np</b>() function initializes the\nthread attributes object referred to by <i>attr</i> so that\nit contains the default attributes used for thread\ncreation.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n\n<p style=\"margin-top: 1em\">(<b>pthread_setattr_default_np</b>())\nOne of the attribute settings in <i>attr</i> is invalid, or\nthe stack address attribute is set in <i>attr</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOMEM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>(<b>pthread_setattr_default_np</b>()) Insufficient\nmemory.</p> </td></tr>\n</table>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These functions\nare available in glibc since version 2.18.</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3421571.png\" alt=\"Image grohtml-3421571.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These functions\nare nonstandard GNU extensions; hence the suffix\n&quot;_np&quot; (nonportable) in their names.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The program\nbelow uses <b>pthread_getattr_default_np</b>() to fetch the\ndefault thread-creation attributes and then displays various\nsettings from the returned thread attributes object. When\nrunning the program, we see the following output:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$\n<b>./a.out</b> <br>\nStack size: 8388608 <br>\nGuard size: 4096 <br>\nScheduling policy: SCHED_OTHER <br>\nScheduling priority: 0 <br>\nDetach state: JOINABLE <br>\nInherit scheduler: INHERIT</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Program\nsource</b> <br>\n#define _GNU_SOURCE <br>\n#include &lt;pthread.h&gt; <br>\n#include &lt;stdio.h&gt; <br>\n#include &lt;stdlib.h&gt; <br>\n#include &lt;errno.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#define\nerrExitEN(en, msg) \\ <br>\ndo { errno = en; perror(msg); \\ <br>\nexit(EXIT_FAILURE); } while (0)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">static void\n<br>\ndisplay_pthread_attr(pthread_attr_t *attr) <br>\n{ <br>\nint s; <br>\nsize_t stacksize; <br>\nsize_t guardsize; <br>\nint policy; <br>\nstruct sched_param schedparam; <br>\nint detachstate; <br>\nint inheritsched;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">s =\npthread_attr_getstacksize(attr, &amp;stacksize); <br>\nif (s != 0) <br>\nerrExitEN(s, &quot;pthread_attr_getstacksize&quot;); <br>\nprintf(&quot;Stack size: %zd\\n&quot;, stacksize);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">s =\npthread_attr_getguardsize(attr, &amp;guardsize); <br>\nif (s != 0) <br>\nerrExitEN(s, &quot;pthread_attr_getguardsize&quot;); <br>\nprintf(&quot;Guard size: %zd\\n&quot;, guardsize);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">s =\npthread_attr_getschedpolicy(attr, &amp;policy); <br>\nif (s != 0) <br>\nerrExitEN(s, &quot;pthread_attr_getschedpolicy&quot;); <br>\nprintf(&quot;Scheduling policy: %s\\n&quot;, <br>\n(policy == SCHED_FIFO) ? &quot;SCHED_FIFO&quot; : <br>\n(policy == SCHED_RR) ? &quot;SCHED_RR&quot; : <br>\n(policy == SCHED_OTHER) ? &quot;SCHED_OTHER&quot; :\n&quot;[unknown]&quot;);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">s =\npthread_attr_getschedparam(attr, &amp;schedparam); <br>\nif (s != 0) <br>\nerrExitEN(s, &quot;pthread_attr_getschedparam&quot;); <br>\nprintf(&quot;Scheduling priority: %d\\n&quot;,\nschedparam.sched_priority);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">s =\npthread_attr_getdetachstate(attr, &amp;detachstate); <br>\nif (s != 0) <br>\nerrExitEN(s, &quot;pthread_attr_getdetachstate&quot;); <br>\nprintf(&quot;Detach state: %s\\n&quot;, <br>\n(detachstate == PTHREAD_CREATE_DETACHED) ?\n&quot;DETACHED&quot; : <br>\n(detachstate == PTHREAD_CREATE_JOINABLE) ?\n&quot;JOINABLE&quot; : <br>\n&quot;???&quot;);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">s =\npthread_attr_getinheritsched(attr, &amp;inheritsched); <br>\nif (s != 0) <br>\nerrExitEN(s, &quot;pthread_attr_getinheritsched&quot;); <br>\nprintf(&quot;Inherit scheduler: %s\\n&quot;, <br>\n(inheritsched == PTHREAD_INHERIT_SCHED) ?\n&quot;INHERIT&quot; : <br>\n(inheritsched == PTHREAD_EXPLICIT_SCHED) ?\n&quot;EXPLICIT&quot; : <br>\n&quot;???&quot;); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(int argc, char *argv[]) <br>\n{ <br>\nint s; <br>\npthread_attr_t attr;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">s =\npthread_getattr_default_np(&amp;attr); <br>\nif (s != 0) <br>\nerrExitEN(s, &quot;pthread_getattr_default_np&quot;);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">display_pthread_attr(&amp;attr);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">exit(EXIT_SUCCESS);\n<br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/pthread_attr_getaffinity_np\">pthread_attr_getaffinity_np(3)</a>,\n<a href=\"https://man.page/3/pthread_attr_getdetachstate\">pthread_attr_getdetachstate(3)</a>,\n<a href=\"https://man.page/3/pthread_attr_getguardsize\">pthread_attr_getguardsize(3)</a>,\n<a href=\"https://man.page/3/pthread_attr_getinheritsched\">pthread_attr_getinheritsched(3)</a>,\n<a href=\"https://man.page/3/pthread_attr_getschedparam\">pthread_attr_getschedparam(3)</a>,\n<a href=\"https://man.page/3/pthread_attr_getschedpolicy\">pthread_attr_getschedpolicy(3)</a>,\n<a href=\"https://man.page/3/pthread_attr_getscope\">pthread_attr_getscope(3)</a>,\n<a href=\"https://man.page/3/pthread_attr_getstack\">pthread_attr_getstack(3)</a>,\n<a href=\"https://man.page/3/pthread_attr_getstackaddr\">pthread_attr_getstackaddr(3)</a>,\n<a href=\"https://man.page/3/pthread_attr_getstacksize\">pthread_attr_getstacksize(3)</a>,\n<a href=\"https://man.page/3/pthread_attr_init\">pthread_attr_init(3)</a>, <a href=\"https://man.page/3/pthread_create\">pthread_create(3)</a>,\n<a href=\"https://man.page/7/pthreads\">pthreads(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}