{"name":"dpkg::interface::storable","description":"Dpkg::Interface::Storable\n- common methods related to object serialization\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\nDpkg::Interface::Storable\nis only meant to be used as parent class for other classes.\nIt provides common methods that are all implemented on top\nof two basic methods <b>parse()</b> and <b>output()</b>.\n\n<h2>BASE METHODS\n<a name=\"BASE METHODS\"></a>\n</h2>\n\n\nThose methods\nmust be provided by the class that wish to inherit from\nDpkg::Interface::Storable so that the methods provided can\nwork. <br>\n$obj-&gt;parse($fh[, $desc])\n\n<p style=\"margin-left:17%;\">This methods initialize the\nobject with the data stored in the filehandle. $desc is\noptional and is a textual description of the filehandle used\nin error messages.\n\n<p style=\"margin-left:11%;\">$string =\n$obj-&gt;output([$fh])\n\n<p style=\"margin-left:17%;\">This method returns a string\nrepresentation of the object in $string and it writes the\nsame string to $fh (if it&rsquo;s defined).\n\n<h2>PROVIDED METHODS\n<a name=\"PROVIDED METHODS\"></a>\n</h2>\n\n\n\n$obj-&gt;load($filename,\n%opts)\n\n<p style=\"margin-left:17%;\">Initialize the object with the\ndata stored in the file. The file can be compressed, it will\nbe decompressed on the fly by using a\nDpkg::Compression::FileHandle object. If $opts{compression}\nis false the decompression support will be disabled. If\n$filename is &quot;-&quot;, then the standard input is read\n(no compression is allowed in that case).\n\n<p style=\"margin-left:11%;\">$obj-&gt;save($filename,\n%opts)\n\n<p style=\"margin-left:17%;\">Store the object in the file.\nIf the filename ends with a known compression extension, it\nwill be compressed on the fly by using a\nDpkg::Compression::FileHandle object. If $opts{compression}\nis false the compression support will be disabled. If\n$filename is &quot;-&quot;, then the standard output is used\n(data are written uncompressed in that case).\n\n<p style=\"margin-left:11%;\">&quot;$obj&quot;\n\n<p style=\"margin-left:17%;\">Return a string representation\nof the object.\n\n<h2>CHANGES\n<a name=\"CHANGES\"></a>\n</h2>\n\n\n<b>Version 1.01\n(dpkg 1.19.0)</b> <br>\nNew options: The $obj-&gt;<b>load()</b> and\n$obj-&gt;<b>save()</b> methods support a new compression\noption.\n\n<b>Version 1.00\n(dpkg 1.15.6)</b> <br>\nMark the module as public.","body":"\n\n<h1 align=\"center\">Dpkg::Interface::Storable</h1>\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Dpkg::Interface::Storable\n- common methods related to object serialization</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Dpkg::Interface::Storable\nis only meant to be used as parent class for other classes.\nIt provides common methods that are all implemented on top\nof two basic methods <b>parse()</b> and <b>output()</b>.</p>\n\n<h2>BASE METHODS\n<a name=\"BASE METHODS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Those methods\nmust be provided by the class that wish to inherit from\nDpkg::Interface::Storable so that the methods provided can\nwork. <br>\n$obj-&gt;parse($fh[, $desc])</p>\n\n<p style=\"margin-left:17%;\">This methods initialize the\nobject with the data stored in the filehandle. $desc is\noptional and is a textual description of the filehandle used\nin error messages.</p>\n\n<p style=\"margin-left:11%;\">$string =\n$obj-&gt;output([$fh])</p>\n\n<p style=\"margin-left:17%;\">This method returns a string\nrepresentation of the object in $string and it writes the\nsame string to $fh (if it&rsquo;s defined).</p>\n\n<h2>PROVIDED METHODS\n<a name=\"PROVIDED METHODS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$obj-&gt;load($filename,\n%opts)</p>\n\n<p style=\"margin-left:17%;\">Initialize the object with the\ndata stored in the file. The file can be compressed, it will\nbe decompressed on the fly by using a\nDpkg::Compression::FileHandle object. If $opts{compression}\nis false the decompression support will be disabled. If\n$filename is &quot;-&quot;, then the standard input is read\n(no compression is allowed in that case).</p>\n\n<p style=\"margin-left:11%;\">$obj-&gt;save($filename,\n%opts)</p>\n\n<p style=\"margin-left:17%;\">Store the object in the file.\nIf the filename ends with a known compression extension, it\nwill be compressed on the fly by using a\nDpkg::Compression::FileHandle object. If $opts{compression}\nis false the compression support will be disabled. If\n$filename is &quot;-&quot;, then the standard output is used\n(data are written uncompressed in that case).</p>\n\n<p style=\"margin-left:11%;\">&quot;$obj&quot;</p>\n\n<p style=\"margin-left:17%;\">Return a string representation\nof the object.</p>\n\n<h2>CHANGES\n<a name=\"CHANGES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.01\n(dpkg 1.19.0)</b> <br>\nNew options: The $obj-&gt;<b>load()</b> and\n$obj-&gt;<b>save()</b> methods support a new compression\noption.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.00\n(dpkg 1.15.6)</b> <br>\nMark the module as public.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#BASE METHODS\">BASE METHODS</a>","<a href=\"#PROVIDED METHODS\">PROVIDED METHODS</a>","<a href=\"#CHANGES\">CHANGES</a>"],"level":3}