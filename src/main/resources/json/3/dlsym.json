{"name":"dlsym","body":"\n\n<h1 align=\"center\">DLSYM</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">dlsym, dlvsym -\nobtain address of a symbol in a shared object or\nexecutable</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;dlfcn.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>void\n*dlsym(void *</b><i>handle</i><b>, const char\n*</b><i>symbol</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#define\n_GNU_SOURCE <br>\n#include &lt;dlfcn.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>void\n*dlvsym(void *</b><i>handle</i><b>, char\n*</b><i>symbol</i><b>, char *</b><i>version</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Link with\n<i>-ldl</i>.</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The function\n<b>dlsym</b>() takes a &quot;handle&quot; of a dynamic\nloaded shared object returned by <a href=\"https://man.page/3/dlopen\">dlopen(3)</a> along with\na null-terminated symbol name, and returns the address where\nthat symbol is loaded into memory. If the symbol is not\nfound, in the specified object or any of the shared objects\nthat were automatically loaded by <a href=\"https://man.page/3/dlopen\">dlopen(3)</a> when that\nobject was loaded, <b>dlsym</b>() returns NULL. (The search\nperformed by <b>dlsym</b>() is breadth first through the\ndependency tree of these shared objects.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In unusual\ncases (see NOTES) the value of the symbol could actually be\nNULL. Therefore, a NULL return from <b>dlsym</b>() need not\nindicate an error. The correct way to distinguish an error\nfrom a symbol whose value is NULL is to call\n<a href=\"https://man.page/3/dlerror\">dlerror(3)</a> to clear any old error conditions, then\ncall <b>dlsym</b>(), and then call <a href=\"https://man.page/3/dlerror\">dlerror(3)</a> again,\nsaving its return value into a variable, and check whether\nthis saved value is not NULL.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">There are two\nspecial pseudo-handles that may be specified in\n<i>handle</i>: <b><br>\nRTLD_DEFAULT</b></p>\n\n<p style=\"margin-left:22%;\">Find the first occurrence of\nthe desired symbol using the default shared object search\norder. The search will include global symbols in the\nexecutable and its dependencies, as well as symbols in\nshared objects that were dynamically loaded with the\n<b>RTLD_GLOBAL</b> flag.</p>\n\n<p style=\"margin-left:11%;\"><b>RTLD_NEXT</b></p>\n\n<p style=\"margin-left:22%;\">Find the next occurrence of the\ndesired symbol in the search order after the current object.\nThis allows one to provide a wrapper around a function in\nanother shared object, so that, for example, the definition\nof a function in a preloaded shared object (see\n<b>LD_PRELOAD</b> in <b>ld.so</b>(8)) can find and invoke\nthe &quot;real&quot; function provided in another shared\nobject (or for that matter, the &quot;next&quot; definition\nof the function in cases where there are multiple layers of\npreloading).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>_GNU_SOURCE</b> feature test macro must be defined in\norder to obtain the definitions of <b>RTLD_DEFAULT</b> and\n<b>RTLD_NEXT</b> from <i>&lt;dlfcn.h&gt;</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The function\n<b>dlvsym</b>() does the same as <b>dlsym</b>() but takes a\nversion string as an additional argument.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\nthese functions return the address associated with\n<i>symbol</i>. On failure, they return NULL; the cause of\nthe error can be diagnosed using <a href=\"https://man.page/3/dlerror\">dlerror(3)</a>.</p>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>dlsym</b>()\nis present in glibc 2.0 and later. <b>dlvsym</b>() first\nappeared in glibc 2.1.</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n</table>\n\n\n<p align=\"center\"><img src=\"grohtml-3375741.png\" alt=\"Image grohtml-3375741.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001\ndescribes <b>dlsym</b>(). The <b>dlvsym</b>() function is a\nGNU extension.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">There are\nseveral scenarios when the address of a global symbol is\nNULL. For example, a symbol can be placed at zero address by\nthe linker, via a linker script or with <i>--defsym</i>\ncommand-line option. Undefined weak symbols also have NULL\nvalue. Finally, the symbol value may be the result of a GNU\nindirect function (IFUNC) resolver function that returns\nNULL as the resolved value. In the latter case,\n<b>dlsym</b>() also returns NULL without error. However, in\nthe former two cases, the behavior of GNU dynamic linker is\ninconsistent: relocation processing succeeds and the symbol\ncan be observed to have NULL value, but <b>dlsym</b>() fails\nand <b>dlerror</b>() indicates a lookup error.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>History</b>\n<br>\nThe <b>dlsym</b>() function is part of the dlopen API,\nderived from SunOS. That system does not have\n<b>dlvsym</b>().</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">See\n<a href=\"https://man.page/3/dlopen\">dlopen(3)</a>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/dl_iterate_phdr\">dl_iterate_phdr(3)</a>,\n<a href=\"https://man.page/3/dladdr\">dladdr(3)</a>, <a href=\"https://man.page/3/dlerror\">dlerror(3)</a>, <a href=\"https://man.page/3/dlinfo\">dlinfo(3)</a>,\n<a href=\"https://man.page/3/dlopen\">dlopen(3)</a>, <b>ld.so</b>(8)</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}