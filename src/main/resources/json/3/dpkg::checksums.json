{"name":"dpkg::checksums","description":"Dpkg::Checksums - generate and manipulate file checksums","body":"\n\n<h1 align=\"center\">Dpkg::Checksums</h1>\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Dpkg::Checksums\n- generate and manipulate file checksums</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This module\nprovides a class that can generate and manipulate various\nfile checksums as well as some methods to query information\nabout supported checksums.</p>\n\n<h2>FUNCTIONS\n<a name=\"FUNCTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">@list =\n<b>checksums_get_list()</b></p>\n\n<p style=\"margin-left:17%;\">Returns the list of supported\nchecksums algorithms.</p>\n\n<p style=\"margin-left:11%;\">$bool =\nchecksums_is_supported($alg)</p>\n\n<p style=\"margin-left:17%;\">Returns a boolean indicating\nwhether the given checksum algorithm is supported. The\nchecksum algorithm is case-insensitive.</p>\n\n<p style=\"margin-left:11%;\">$value =\nchecksums_get_property($alg, $property)</p>\n\n<p style=\"margin-left:17%;\">Returns the requested property\nof the checksum algorithm. Returns undef if either the\nproperty or the checksum algorithm doesn&rsquo;t exist.\nValid properties currently include &quot;name&quot; (returns\nthe name of the digest algorithm), &quot;regex&quot; for the\nregular expression describing the common string\nrepresentation of the checksum, and &quot;strong&quot; for a\nboolean describing whether the checksum algorithm is\nconsidered cryptographically strong.</p>\n\n<h2>METHODS\n<a name=\"METHODS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$ck =\nDpkg::Checksums-&gt;<b>new()</b></p>\n\n<p style=\"margin-left:17%;\">Create a new Dpkg::Checksums\nobject. This object is able to store the checksums of\nseveral files to later export them or verify them.</p>\n\n<p style=\"margin-left:11%;\">$ck-&gt;<b>reset()</b></p>\n\n<p style=\"margin-left:17%;\">Forget about all checksums\nstored. The object is again in the same state as if it was\nnewly created.</p>\n\n\n<p style=\"margin-left:11%;\">$ck-&gt;add_from_file($filename,\n%opts)</p>\n\n<p style=\"margin-left:17%;\">Add or verify checksums\ninformation for the file $filename. The file must exists for\nthe call to succeed. If you don&rsquo;t want the given\nfilename to appear when you later export the checksums you\nmight want to set the &quot;key&quot; option with the public\nname that you want to use. Also if you don&rsquo;t want to\ngenerate all the checksums, you can pass an array reference\nof the wanted checksums in the &quot;checksums&quot;\noption.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">It the object\nalready contains checksums information associated the\nfilename (or key), it will error out if the newly computed\ninformation does not match what&rsquo;s stored, and the\ncaller did not request that it be updated with the boolean\n&quot;update&quot; option.</p>\n\n<p style=\"margin-left:11%;\">$ck-&gt;add_from_string($alg,\n$value, %opts)</p>\n\n<p style=\"margin-left:17%;\">Add checksums of type $alg that\nare stored in the $value variable. $value can be\nmulti-lines, each line should be a space separated list of\nchecksum, file size and filename. Leading or trailing spaces\nare not allowed.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">It the object\nalready contains checksums information associated to the\nfilenames, it will error out if the newly read information\ndoes not match what&rsquo;s stored, and the caller did not\nrequest that it be updated with the boolean\n&quot;update&quot; option.</p>\n\n\n<p style=\"margin-left:11%;\">$ck-&gt;add_from_control($control,\n%opts)</p>\n\n<p style=\"margin-left:17%;\">Read checksums from Checksums-*\nfields stored in the Dpkg::Control object $control. It uses\n$self-&gt;<b>add_from_string()</b> on the field values to do\nthe actual work.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If the option\n&quot;use_files_for_md5&quot; evaluates to true, then the\n&quot;Files&quot; field is used in place of the\n&quot;Checksums-Md5&quot; field. By default the option is\nfalse.</p>\n\n<p style=\"margin-left:11%;\">@files =\n$ck-&gt;<b>get_files()</b></p>\n\n<p style=\"margin-left:17%;\">Return the list of files whose\nchecksums are stored in the object.</p>\n\n<p style=\"margin-left:11%;\">$bool =\n$ck-&gt;has_file($file)</p>\n\n<p style=\"margin-left:17%;\">Return true if we have\nchecksums for the given file. Returns false otherwise.</p>\n\n<p style=\"margin-left:11%;\">$ck-&gt;remove_file($file)</p>\n\n<p style=\"margin-left:17%;\">Remove all checksums of the\ngiven file.</p>\n\n<p style=\"margin-left:11%;\">$checksum =\n$ck-&gt;get_checksum($file, $alg)</p>\n\n<p style=\"margin-left:17%;\">Return the checksum of type\n$alg for the requested $file. This will not compute the\nchecksum but only return the checksum stored in the object,\nif any.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If $alg is not\ndefined, it returns a reference to a hash: keys are the\nchecksum algorithms and values are the checksums themselves.\nThe hash returned must not be modified, it&rsquo;s internal\nto the object.</p>\n\n<p style=\"margin-left:11%;\">$size =\n$ck-&gt;get_size($file)</p>\n\n<p style=\"margin-left:17%;\">Return the size of the\nrequested file if it&rsquo;s available in the object.</p>\n\n<p style=\"margin-left:11%;\">$bool =\n$ck-&gt;has_strong_checksums($file)</p>\n\n<p style=\"margin-left:17%;\">Return a boolean on whether the\nfile has a strong checksum.</p>\n\n<p style=\"margin-left:11%;\">$ck-&gt;export_to_string($alg,\n%opts)</p>\n\n<p style=\"margin-left:17%;\">Return a multi-line string\ncontaining the checksums of type $alg. The string can be\nstored as-is in a Checksum-* field of a Dpkg::Control\nobject.</p>\n\n\n<p style=\"margin-left:11%;\">$ck-&gt;export_to_control($control,\n%opts)</p>\n\n<p style=\"margin-left:17%;\">Export the checksums in the\nChecksums-* fields of the Dpkg::Control $control object.</p>\n\n<h2>CHANGES\n<a name=\"CHANGES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.04\n(dpkg 1.20.0)</b> <br>\nRemove warning: For obsolete property\n&rsquo;program&rsquo;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.03\n(dpkg 1.18.5)</b> <br>\nNew property: Add new &rsquo;strong&rsquo; property.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">New member:\n$ck-&gt;<b>has_strong_checksums()</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.02\n(dpkg 1.18.0)</b> <br>\nObsolete property: Getting the &rsquo;program&rsquo;\nchecksum property will warn and return undef, the Digest\nmodule is used internally now.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">New property:\nAdd new &rsquo;name&rsquo; property with the name of the\nDigest algorithm to use.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.01\n(dpkg 1.17.6)</b> <br>\nNew argument: Accept an options argument in\n$ck-&gt;<b>export_to_string()</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">New option:\nAccept new option &rsquo;update&rsquo; in\n$ck-&gt;<b>add_from_file()</b> and\n$ck-&gt;<b>add_from_control()</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.00\n(dpkg 1.15.6)</b> <br>\nMark the module as public.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#FUNCTIONS\">FUNCTIONS</a>","<a href=\"#METHODS\">METHODS</a>","<a href=\"#CHANGES\">CHANGES</a>"],"level":3}