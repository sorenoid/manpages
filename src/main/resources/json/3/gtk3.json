{"name":"gtk3","description":"Gtk3 - Perl interface to the 3.x series of the gtk+ toolkit","body":"\n\n<h1 align=\"center\">Gtk3</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Gtk3 - Perl\ninterface to the 3.x series of the gtk+ toolkit</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">use Gtk3 -init;\n<br>\nmy $window = Gtk3::Window-&gt;new ('toplevel'); <br>\nmy $button = Gtk3::Button-&gt;new ('Quit'); <br>\n$button-&gt;signal_connect (clicked =&gt; sub {\nGtk3::main_quit }); <br>\n$window-&gt;add ($button); <br>\n$window-&gt;show_all; <br>\nGtk3::main;</p>\n\n<h2>ABSTRACT\n<a name=\"ABSTRACT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Perl bindings\nto the 3.x series of the gtk+ toolkit. This module allows\nyou to write graphical user interfaces in a Perlish and\nobject-oriented way, freeing you from the casting and memory\nmanagement in C, yet remaining very close in spirit to\noriginal <small>API.</small></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n&quot;Gtk3&quot; module allows a Perl developer to use the\ngtk+ graphical user interface library. Find out more about\ngtk+ at &lt;http://www.gtk.org&gt;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The gtk+\nreference manual is also a handy companion when writing\n&quot;Gtk3&quot; programs in Perl:\n&lt;http://developer.gnome.org/gtk3/stable/&gt;. The Perl\nbindings follow the C <small>API</small> very closely, and\nthe C reference documentation should be considered the\ncanonical source. The principles underlying the mapping from\nC to Perl are explained in the documentation of\nGlib::Object::Introspection, on which &quot;Gtk3&quot; is\nbased.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Glib::Object::Introspection\nalso comes with the &quot;perli11ndoc&quot; program which\ndisplays the <small>API</small> reference documentation of\nall installed libraries organized in accordance with these\nprinciples.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Wrapped\nlibraries</b> <br>\n&quot;Gtk3&quot; automatically sets up the following\ncorrespondence between C libraries and Perl packages:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Library |\nPackage <br>\n--------------+---------- <br>\nGtk-3.0 | Gtk3 <br>\nGdk-3.0 | Gtk3::Gdk <br>\nGdkPixbuf-2.0 | Gtk3::Gdk <br>\nGdkPixdata-2.0| Gtk3::Gdk <br>\nPango-1.0 | Pango</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Import\narguments</b> <br>\nWhen importing &quot;Gtk3&quot;, you can pass\n&quot;-init&quot; as in &quot;use Gtk3 -init;&quot; to have\n&quot;Gtk3::init&quot; automatically called. You can also\npass a version number to require a certain version of\n&quot;Gtk3&quot;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Customizations\nand overrides</b> <br>\nIn order to make things more Perlish or to make porting from\n&quot;Gtk2&quot; to &quot;Gtk3&quot; easier,\n&quot;Gtk3&quot; customizes the <small>API</small> generated\nby Glib::Object::Introspection in a few spots:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The array ref normally returned by the following\nfunctions is flattened into a list:</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:17%;\">Gtk3::ActionGroup::list_actions\n<br>\nGtk3::Builder::get_objects <br>\nGtk3::CellLayout::get_cells <br>\nGtk3::Container::get_children <br>\nGtk3::SizeGroup::get_widgets <br>\nGtk3::TreePath::get_indices <br>\nGtk3::TreeView::get_columns <br>\nGtk3::UIManager::get_action_groups <br>\nGtk3::UIManager::get_toplevels <br>\nGtk3::Window::list_toplevels <br>\nGtk3::stock_list_ids <br>\nGtk3::Gdk::Pixbuf::get_formats</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The following functions normally return a boolean and\nadditional out arguments, where the boolean indicates\nwhether the out arguments are valid. They are altered such\nthat when the boolean is true, only the additional out\narguments are returned, and when the boolean is false, an\nempty list is returned.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:17%;\">Gtk3::TextBuffer::get_selection_bounds\n<br>\nGtk3::TreeModel::get_iter <br>\nGtk3::TreeModel::get_iter_first <br>\nGtk3::TreeModel::get_iter_from_string <br>\nGtk3::TreeModel::iter_children <br>\nGtk3::TreeModel::iter_nth_child <br>\nGtk3::TreeModel::iter_parent <br>\nGtk3::TreeModelFilter::convert_child_iter_to_iter <br>\nGtk3::TreeModelSort::convert_child_iter_to_iter <br>\nGtk3::TreeSelection::get_selected <br>\nGtk3::TreeView::get_dest_row_at_pos <br>\nGtk3::TreeView::get_path_at_pos <br>\nGtk3::TreeView::get_tooltip_context <br>\nGtk3::TreeView::get_visible_range <br>\nGtk3::TreeViewColumn::cell_get_position <br>\nGtk3::stock_lookup <br>\nGtk3::Gdk::Event::get_axis <br>\nGtk3::Gdk::Event::get_button <br>\nGtk3::Gdk::Event::get_click_count <br>\nGtk3::Gdk::Event::get_coords <br>\nGtk3::Gdk::Event::get_keycode <br>\nGtk3::Gdk::Event::get_keyval <br>\nGtk3::Gdk::Event::get_scroll_direction <br>\nGtk3::Gdk::Event::get_scroll_deltas <br>\nGtk3::Gdk::Event::get_state <br>\nGtk3::Gdk::Event::get_root_coords <br>\nGtk3::Gdk::Window::get_origin</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Values of type Gtk3::ResponseType are converted to and\nfrom nick names if possible, while still allowing raw IDs,\nin the following places:</p></td></tr>\n</table>\n\n<p style=\"margin-left:17%;\">- For Gtk3::Dialog and\nGtk3::InfoBar: the signal &quot;response&quot; as well <br>\nas the methods &quot;add_action_widget&quot;,\n&quot;add_button&quot;, &quot;add_buttons&quot;, <br>\n&quot;response&quot;, &quot;set_default_response&quot; and\n&quot;set_response_sensitive&quot;. <br>\n- For Gtk3::Dialog: the methods\n&quot;get_response_for_widget&quot;, <br>\n&quot;get_widget_for_response&quot;, &quot;run&quot; and\n<br>\n&quot;set_alternative_button_order&quot;.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Values of type Gtk3::IconSize are converted to and from\nnick names if possible, while still allowing raw IDs, in the\nfollowing places:</p></td></tr>\n</table>\n\n<p style=\"margin-left:17%;\">- Gtk3::Image: the constructors\nnew_from_stock, new_from_icon_set, <br>\nnew_from_icon_name and new_from_gicon, the getters\nget_stock, <br>\nget_icon_set, get_icon_name and get_gicon and the setters\n<br>\nset_from_stock, set_from_icon_set, set_from_icon_name, <br>\nset_from_gicon. <br>\n- Gtk3::Widget: the method render_icon.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The constants &quot;Gtk3::EVENT_PROPAGATE&quot; and\n&quot;Gtk3::EVENT_STOP&quot; can be used in handlers for\nevent signals like &quot;key-press-event&quot; to indicate\nwhether or not the event should continue propagating through\nthe widget hierarchy.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The records corresponding to the various\nGtk3::Gdk::Event types, like &quot;expose&quot; or\n&quot;key-release&quot;, are represented as objects blessed\ninto specific Perl packages, like\n&quot;Gtk3::Gdk::EventExpose&quot; or\n&quot;Gtk3::Gdk::EventKey&quot;, that all inherit from\n&quot;Gtk3::Gdk::Event&quot;. This allows you to seemlessly\naccess type-specific fields as well as common fields, as in\n&quot;$event-&gt;window&quot; or\n&quot;$event-&gt;keyval&quot;.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Gtk3::Gdk::Atom has overloads for the &quot;==&quot; and\n&quot;!=&quot; operators that check for equality of the\nunderlying atoms.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>For backwards compatibility, the functions\n&quot;Gtk3::get_version_info&quot; and\n&quot;Gtk3::GET_VERSION_INFO&quot; are provided, and the\nfunctions &quot;Gtk3::CHECK_VERSION&quot;,\n&quot;Gtk3::check_version&quot;, &quot;Gtk3::init&quot;,\n&quot;Gtk3::init_check&quot;, &quot;Gtk3::main&quot;,\n&quot;Gtk3::main_level&quot; and &quot;Gtk3::main_quit&quot;\ncan be called as class-static or as normal functions: for\nexample, &quot;Gtk3-&gt;main_quit&quot; and\n&quot;Gtk3::main_quit&quot; are both supported.\nAdditionally, &quot;Gtk3::init&quot; and\n&quot;Gtk3::init_check&quot; automatically handle passing\nand updating @ARGV as appropriate.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>A Perl reimplementation of\n&quot;Gtk3::show_about_dialog&quot; is provided.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Perl reimplementations of\n&quot;Gtk3::ActionGroup::add_actions&quot;,\n&quot;add_radio_actions&quot; and\n&quot;add_toggle_actions&quot; are provided.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::Builder::add_objects_from_file&quot; and\n&quot;add_objects_from_string&quot; also accept a list of\nobjects instead of an array ref.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::Builder::add_objects_from_string&quot; and\n&quot;add_from_string&quot; don&rsquo;t take length\narguments, as they are computed automatically.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>A Perl reimplementation of\n&quot;Gtk3::Builder::connect_signals&quot; is provided.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The default &quot;new&quot; constructors of\nGtk3::Button, Gtk3::CheckButton, Gtk3::ColorButton,\nGtk3::FontButton and Gtk3::ToggleButton reroute to\n&quot;new_with_mnemonic&quot; if given an extra\nargument.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The default &quot;new&quot; constructor of\nGtk3::CheckMenuItem reroutes to\n&quot;new_with_mnemonic&quot; if given an extra\nargument.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The &quot;length&quot; argument of\n&quot;Gtk3::Clipboard::set_text&quot; is optional.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Perl reimplementations of\n&quot;Gtk3::Container::add_with_properties&quot;,\n&quot;Gtk3::Container::child_get&quot; and\n&quot;Gtk3::Container::child_set&quot; are provided.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::Container::find_child_property&quot; and\n&quot;Gtk3::Container::list_child_properties&quot; are\nforwarded to the corresponding functions in\n&quot;Gtk3::ContainerClass&quot;.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::Container::get_focus_chain&quot; returns a\nlist of widgets, or an empty list.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::Container::set_focus_chain&quot; also\naccepts a list of widgets.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::CssProvider::load_from_data&quot; also\naccepts a string.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>For Gtk3::Dialog and Gtk3::InfoBar, a Perl\nimplementation of &quot;add_buttons&quot; is provided.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::Dialog::new&quot; can optionally be called\nas &quot;Gtk3::Dialog-&gt;new (TITLE, PARENT, FLAGS,\n...)&quot; where &quot;...&quot; is a series of button text\nand response id pairs.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>A Perl implementation of\n&quot;Gtk3::Dialog::new_with_buttons&quot; is provided.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The &quot;length&quot; argument of\n&quot;Gtk3::Editable::insert_text&quot; is optional.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>A Perl implementation of\n&quot;Gtk3::FileChooserDialog::new&quot; is provided.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::HBox::new&quot; uses the defaults\nhomogeneous = <small>FALSE</small> and spacing = 5.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The default &quot;new&quot; constructor of\nGtk3::ImageMenuItem reroutes to\n&quot;new_with_mnemonic&quot; if given an extra\nargument.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::InfoBar::new&quot; can optionally be called\nas &quot;Gtk3::InfoBar-&gt;new (...)&quot; where\n&quot;...&quot; is a series of button text and response id\npairs.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>A Perl reimplementation of\n&quot;Gtk3::InfoBar::new_with_buttons&quot; is provided.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The default &quot;new&quot; constructor of\nGtk3::LinkButton reroutes to &quot;new_with_label&quot; if\ngiven an extra argument.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::ListStore::new&quot; also accepts a list of\ntype names.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Gtk3::ListStore has a &quot;get&quot; method that calls\n&quot;Gtk3::TreeModel::get&quot; instead of\n&quot;Glib::Object::get&quot;.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::ListStore::insert_with_values&quot; also\naccepts a list of &quot;column =&gt; value&quot; pairs and\nreroutes to &quot;insert_with_valuesv&quot;.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::ListStore::set&quot; also accepts a list of\n&quot;column =&gt; value&quot; pairs.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::Menu::popup&quot; reroutes to\n&quot;popup_for_device&quot; for better callback\nhandling.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::Menu::popup_for_device&quot; allows the\ngiven menu position func to return only x and y coordinates,\ndefaulting &quot;push_in&quot; to <small>FALSE.</small></p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The default &quot;new&quot; constructor of\nGtk3::MenuItem reroutes to &quot;new_with_mnemonic&quot; if\ngiven an extra argument.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>A Perl reimplementation of\n&quot;Gtk3::MessageDialog::new&quot; is provided.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>A Perl reimplementation of\n&quot;Gtk3::MessageDialog::new_with_markup&quot; is\nprovided.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>A Perl reimplementation of\n&quot;Gtk3::MessageDialog::format_secondary_text&quot; and\n&quot;Gtk3::MessageDialog::format_secondary_markup&quot; is\nprovided</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The group handling in the constructors and accessors of\nGtk3::RadioAction, Gtk3::RadioButton, Gtk3::RadioMenuItem\nand Gtk3::RadioToolButton is amended to work correctly when\ngiven array refs of group members or single group\nmembers.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Perl reimplementations of\n&quot;Gtk3::RecentChooserDialog::new&quot; and\n&quot;new_for_manager&quot; are provided.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Redirects are provided from\n&quot;Gtk3::Stock::[function]&quot; to\n&quot;Gtk3::stock_[function]&quot; for &quot;add&quot;,\n&quot;add_static&quot;, &quot;list_ids&quot;,\n&quot;lookup&quot; and &quot;set_translate_func&quot;.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>A Perl reimplementation of\n&quot;Gtk3::StyleContext::get&quot; is provided.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>An override for &quot;Gtk3::TargetEntry::new&quot; is\nprovided that automatically handles the conversion of the\n&quot;flags&quot; argument.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>A Perl reimplementation of\n&quot;Gtk3::TextBuffer::create_tag&quot; is provided.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The &quot;length&quot; arguments of\n&quot;Gtk3::TextBuffer::insert&quot;,\n&quot;insert_at_cursor&quot;,\n&quot;insert_interactive&quot;,\n&quot;insert_interactive_at_cursor&quot;,\n&quot;insert_markup&quot; and &quot;set_text&quot; are\noptional.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Perl reimplementations of\n&quot;Gtk3::TextBuffer::insert_with_tags&quot; and\n&quot;insert_with_tags_by_name&quot; are provided which do\nnot require a &quot;length&quot; argument.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>A Perl reimplementation of\n&quot;Gtk3::TreeModel::get&quot; is provided.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>A redirect is added from\n&quot;Gtk3::TreeModelFilter::new&quot; to\n&lt;Gtk3::TreeModel::filter_new&gt; so that\nGtk3::TreeModelFilter objects can be constructed\nnormally.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Gtk3::TreeModelFilter has a &quot;get&quot; method that\ncalls &quot;Gtk3::TreeModel::get&quot; instead of\n&quot;Glib::Object::get&quot;.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Prior to gtk+ 3.24.14, a redirect is added from\n&quot;Gtk3::TreeModelSort::new_with_model&quot; to\n&lt;Gtk3::TreeModel::sort_new_with_model&gt; so that\nGtk3::TreeModelSort objects can be constructed normally.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Gtk3::TreeModelSort has a &quot;get&quot; method that\ncalls &quot;Gtk3::TreeModel::get&quot; instead of\n&quot;Glib::Object::get&quot;.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::TreePath::new&quot; redirects to\n&quot;new_from_string&quot; if an additional argument is\ngiven.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>A Perl reimplementation of\n&quot;Gtk3::TreePath::new_from_indices&quot; is\nprovided.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::TreeStore::new&quot; also accepts a list of\ntype names.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Gtk3::TreeStore has a &quot;get&quot; method that calls\n&quot;Gtk3::TreeModel::get&quot; instead of\n&quot;Glib::Object::get&quot;.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::TreeStore::insert_with_values&quot; also\naccepts a list of &quot;column =&gt; value&quot; pairs.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::TreeStore::set&quot; also accepts a list of\n&quot;column =&gt; value&quot; pairs.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::TreeView::new&quot; redirects to\n&quot;new_with_model&quot; if an additional argument is\ngiven.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>A Perl reimplementation of\n&quot;Gtk3::TreeView::insert_column_with_attributes&quot; is\nprovided.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>A Perl reimplementation of\n&quot;Gtk3::TreeViewColumn::new_with_attributes&quot; is\nprovided.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Perl reimplementations of\n&quot;Gtk3::TreeViewColumn::set_attributes&quot; and\n&quot;Gtk3::CellLayout::set_attributes&quot; are\nprovided.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::UIManager::add_ui_from_string&quot; takes no\n&quot;length&quot; argument.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::VBox::new&quot; uses the defaults\nhomogeneous = <small>FALSE</small> and spacing = 5.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::Widget::add_events&quot; and\n&quot;Gtk3::Widget::set_events&quot; also accept strings,\narray references and &quot;Gtk3::Gdk::EventMask&quot;\nobjects for the &quot;events&quot; parameter.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::Widget::get_events&quot; returns a\n&quot;Gtk3::Gdk::EventMask&quot; object that can also be\ncompared to numeric values with &quot;==&quot; and\n&quot;&gt;=&quot;.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::Widget::find_style_property&quot; and\n&quot;Gtk3::Widget::list_style_properties&quot; are\nforwarded to the corresponding functions in\n&quot;Gtk3::WidgetClass&quot;.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>A Perl reimplementation of\n&quot;Gtk3::Widget::style_get&quot; is provided.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::Window::new&quot; uses the default type =\n&rsquo;toplevel&rsquo;.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>A constructor &quot;Gtk3::Gdk::RGBA::new&quot; is\nprovided that can be called as &quot;Gtk3::Gdk::RGBA-&gt;new\n(r, g, b, a)&quot;.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::Gdk::RGBA::parse&quot; can be called as a\nfunction returning a new instance (&quot;$rgba =\nGtk3::Gdk::RGBA::parse ($spec)&quot;) or as a method\n(&quot;$rgba-&gt;parse ($spec)&quot;).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::Gdk::Window::new&quot; optionally computes\nthe &quot;attr_mask&quot; automatically from the given\n&quot;attr&quot;.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::Gdk::Pixbuf::get_pixels&quot; returns a byte\nstring.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::Gdk::Pixbuf::new_from_data&quot; is\nreimplemented in terms of &quot;new_from_bytes&quot; (with\ngdk-pixbuf &gt;= 2.32) or &quot;new_from_inline&quot; (with\ngtk-pixbuf &lt; 2.32) for correct memory management. No\n&quot;destroy_fn&quot; and &quot;destroy_fn_data&quot;\narguments are needed.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::Gdk::Pixbuf::new_from_inline&quot; does not\ntake a &quot;copy_pixels&quot; argument. It is always set to\n<small>TRUE</small> for correct memory management.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::Gdk::Pixbuf::new_from_xpm_data&quot; also\naccepts a list of <small>XPM</small> lines.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>&quot;Gtk3::Gdk::Pixbuf::save&quot;,\n&quot;save_to_buffer&quot; and &quot;save_to_callback&quot;\nalso accept &quot;key =&gt; value&quot; pairs and invoke the\ncorrect C function as appropriate for the current gdk-pixbuf\nversion.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The &quot;length&quot; arguments of\n&quot;Pango::Layout::set_text&quot; and\n&quot;set_markup&quot; are optional.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Perl\ncompatibility</b> <br>\nAs of 5.20.0, perl does not automatically re-check the\nlocale environment for changes. If a function thus changes\nthe locale behind perl&rsquo;s back, problems might arise\nwhenever numbers are formatted, for example when checking\nversions. To ensure perl&rsquo;s assumption about the locale\nare up-to-date, the functions &quot;Gtk3::init&quot;,\n&quot;init_check&quot;, &quot;init_with_args&quot; and\n&quot;parse_args&quot; are amended to let perl know of any\nchanges.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Porting from\nGtk2 to Gtk3</b> <br>\nThe majority of the <small>API</small> has not changed, so\nas a first approximation you can run\n&quot;s/Gtk2/Gtk3/&quot; on your application. A big\nexception to this rule is APIs that were deprecated in gtk+\n2.x -- these were all removed from gtk+ 3.0 and thus from\nGtk3. The migration guide at\n&lt;http://developer.gnome.org/gtk3/stable/migrating.html&gt;\ndescribes what to use instead. Apart from this, here is a\nlist of some other incompatible differences between Gtk2 and\nGtk3:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">The call syntax for class-static\nmethods is now always &quot;Gtk3::Stock::lookup&quot;\ninstead of &quot;Gtk3::Stock-&gt;lookup&quot;.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The %Gtk2::Gdk::Keysyms hash is gone; instead of\n&quot;Gtk2::Gdk::Keysyms{XYZ}&quot;, use\n&quot;Gtk3::Gdk::KEY_XYZ&quot;.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The Gtk2::Pango compatibility wrapper was not carried\nover; simply use the namespace &quot;Pango&quot; everywhere.\nIt gets set up automatically when loading Gtk3.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>The types Gtk3::Allocation and Gtk3::Gdk::Rectangle are\nnow aliases for Cairo::RectangleInt, and as such they are\nrepresented as plain hashes with keys &rsquo;width&rsquo;,\n&rsquo;height&rsquo;, &rsquo;x&rsquo; and\n&rsquo;y&rsquo;.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Gtk3::Editable: Callbacks connected to the\n&quot;insert-text&quot; signal do not have as many options\nanymore as they had in Gtk2. Changes to arguments will not\nbe propagated to the next signal handler, and only the\nupdated position can and must be returned.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Gtk3::Menu: In gtk+ &lt; 3.16, the position callback\npassed to <b>popup()</b> does not receive x and y\nparameters.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Gtk3::RadioAction: The constructor now follows the C\n<small>API.</small></p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Gtk3::TreeModel: <b>iter_next()</b> is now a method that\nis modifying the iter directly, instead of returning a new\none. <b>rows_reordered()</b> and the\n&quot;rows-reordered&quot; signal are currently\nunusable.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Gtk3::TreeSelection: <b>get_selected_rows()</b> now\nreturns two values: an array ref containing the selected\npaths, and the model. <b>get_user_data()</b> is not\navailable currently.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Gtk3::TreeSortable: <b>get_sort_column_id()</b> has an\nadditional boolean return value.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Gtk3::TreeStore, Gtk3::ListStore: <b>reorder()</b> is\ncurrently unusable.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Gtk3::Widget: <b>grab_add()</b> and <b>grab_remove()</b>\nare methods now: &quot;$widget-&gt;grab_add&quot;,\n&quot;$widget-&gt;grab_remove&quot;.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Gtk3::Gdk::Atom: The constructor <b>new()</b> is not\nprovided anymore, and the class function <b>intern()</b>\nmust now be called as &quot;Gtk3::Gdk::Atom::intern (name,\nonly_if_exists)&quot;.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Implementations of Gtk3::TreeModel: Gtk3::TreeIter now\nhas a constructor called <b>new()</b> expecting &quot;key\n=&gt; value&quot; pairs; <b>new_from_arrayref()</b> does not\nexist anymore. To access the contents of Gtk3::TreeIter, use\n<b>stamp()</b>, <b>user_data()</b>, <b>user_data2()</b> and\n<b>user_data3()</b>; <b>to_arrayref()</b> does not exist\nanymore. <b><small>GET_ITER</small> ()</b>,\n<b><small>ITER_CHILDREN</small> ()</b>,\n<b><small>ITER_NTH_CHILD</small> ()</b> and\n<b><small>ITER_PARENT</small> ()</b> must return an\nadditional boolean value. <b><small>ITER_NEXT</small> ()</b>\nmust modify the iter and return a boolean rather than return\na new iter. <b><small>GET_VALUE</small> ()</b> must return\nthe value wrapped with\n&quot;Glib::Object::Introspection::GValueWrapper-&gt;new&quot;.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Implementations of Gtk3::CellLayout:\n<b><small>GET_CELLS</small> ()</b> now needs to return an\narray ref instead of a list.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note also that\nGtk3::CHECK_VERSION will always fail when passed 2.y.z, so\nif you have any existing version checks in your code, you\nwill most likely need to remove them.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">To discuss Gtk3 and ask\nquestions join gtk-perl-list@gnome.org at\n&lt;http://mail.gnome.org/mailman/listinfo/gtk-perl-list&gt;.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Also have a look at the gtk2-perl website and\nsourceforge project page,\n&lt;http://gtk2-perl.sourceforge.net&gt;.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Glib</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"83%\">\n\n\n<p>Glib::Object::Introspection</p></td></tr>\n</table>\n\n<h2>AUTHORS\n<a name=\"AUTHORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Torsten\nSch&Atilde;&para;nfeld &lt;kaffeetisch@gmx.de&gt;</p>\n\n<h2>COPYRIGHT AND LICENSE\n<a name=\"COPYRIGHT AND LICENSE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright (C)\n2011-2015 by Torsten Schoenfeld\n&lt;kaffeetisch@gmx.de&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This library is\nfree software; you can redistribute it and/or modify it\nunder the terms of the <small>GNU</small> Library General\nPublic License as published by the Free Software Foundation;\neither version 2.1 of the License, or (at your option) any\nlater version.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#ABSTRACT\">ABSTRACT</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#AUTHORS\">AUTHORS</a>","<a href=\"#COPYRIGHT AND LICENSE\">COPYRIGHT AND LICENSE</a>"],"level":3}