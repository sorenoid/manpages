{"name":"mtrace","description":"mtrace,\nmuntrace - malloc tracing","body":"\n\n<h1 align=\"center\">MTRACE</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">mtrace,\nmuntrace - malloc tracing</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;mcheck.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>void\nmtrace(void);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>void\nmuntrace(void);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>mtrace</b>() function installs hook functions for the\nmemory-allocation functions (<a href=\"https://man.page/3/malloc\">malloc(3)</a>,\n<a href=\"https://man.page/3/realloc\">realloc(3)</a> <a href=\"https://man.page/3/memalign\">memalign(3)</a>, <a href=\"https://man.page/3/free\">free(3)</a>). These\nhook functions record tracing information about memory\nallocation and deallocation. The tracing information can be\nused to discover memory leaks and attempts to free\nnonallocated memory in a program.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>muntrace</b>() function disables the hook functions\ninstalled by <b>mtrace</b>(), so that tracing information is\nno longer recorded for the memory-allocation functions. If\nno hook functions were successfully installed by\n<b>mtrace</b>(), <b>muntrace</b>() does nothing.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When\n<b>mtrace</b>() is called, it checks the value of the\nenvironment variable <b>MALLOC_TRACE</b>, which should\ncontain the pathname of a file in which the tracing\ninformation is to be recorded. If the pathname is\nsuccessfully opened, it is truncated to zero length.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<b>MALLOC_TRACE</b> is not set, or the pathname it specifies\nis invalid or not writable, then no hook functions are\ninstalled, and <b>mtrace</b>() has no effect. In set-user-ID\nand set-group-ID programs, <b>MALLOC_TRACE</b> is ignored,\nand <b>mtrace</b>() has no effect.</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n</table>\n\n\n<p align=\"center\"><img src=\"grohtml-3364691.png\" alt=\"Image grohtml-3364691.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These functions\nare GNU extensions.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">In normal\nusage, <b>mtrace</b>() is called once at the start of\nexecution of a program, and <b>muntrace</b>() is never\ncalled.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The tracing\noutput produced after a call to <b>mtrace</b>() is textual,\nbut not designed to be human readable. The GNU C library\nprovides a Perl script, <a href=\"https://man.page/1/mtrace\">mtrace(1)</a>, that interprets\nthe trace log and produces human-readable output. For best\nresults, the traced program should be compiled with\ndebugging enabled, so that line-number information is\nrecorded in the executable.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The tracing\nperformed by <b>mtrace</b>() incurs a performance penalty\n(if <b>MALLOC_TRACE</b> points to a valid, writable\npathname).</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The line-number\ninformation produced by <a href=\"https://man.page/1/mtrace\">mtrace(1)</a> is not always\nprecise: the line number references may refer to the\nprevious or following (nonblank) line of the source\ncode.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The shell\nsession below demonstrates the use of the <b>mtrace</b>()\nfunction and the <a href=\"https://man.page/1/mtrace\">mtrace(1)</a> command in a program that\nhas memory leaks at two different locations. The\ndemonstration uses the following program:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ <b>cat\nt_mtrace.c</b> <br>\n#include &lt;mcheck.h&gt; <br>\n#include &lt;stdlib.h&gt; <br>\n#include &lt;stdio.h&gt;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">int <br>\nmain(int argc, char *argv[]) <br>\n{ <br>\nmtrace();</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">for (int j = 0;\nj &lt; 2; j++) <br>\nmalloc(100); /* Never freed--a memory leak */</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">calloc(16, 16);\n/* Never freed--a memory leak */ <br>\nexit(EXIT_SUCCESS); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When we run the\nprogram as follows, we see that <b>mtrace</b>() diagnosed\nmemory leaks at two different locations in the program:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ <b>cc -g\nt_mtrace.c -o t_mtrace</b> <br>\n$ <b>export MALLOC_TRACE=/tmp/t</b> <br>\n$ <b>./t_mtrace</b> <br>\n$ <b>mtrace ./t_mtrace $MALLOC_TRACE</b> <br>\nMemory not freed: <br>\n----------------- <br>\nAddress Size Caller <br>\n0x084c9378 0x64 at /home/cecilia/t_mtrace.c:12 <br>\n0x084c93e0 0x64 at /home/cecilia/t_mtrace.c:12 <br>\n0x084c9448 0x100 at /home/cecilia/t_mtrace.c:16</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The first two\nmessages about unfreed memory correspond to the two\n<a href=\"https://man.page/3/malloc\">malloc(3)</a> calls inside the <i>for</i> loop. The final\nmessage corresponds to the call to <a href=\"https://man.page/3/calloc\">calloc(3)</a> (which\nin turn calls <a href=\"https://man.page/3/malloc\">malloc(3)</a>).</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/mtrace\">mtrace(1)</a>,\n<a href=\"https://man.page/3/malloc\">malloc(3)</a>, <a href=\"https://man.page/3/malloc_hook\">malloc_hook(3)</a>,\n<a href=\"https://man.page/3/mcheck\">mcheck(3)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}