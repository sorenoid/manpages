{"name":"dpkg::build::types","description":"Dpkg::Build::Types - track build types","body":"\n\n<h1 align=\"center\">Dpkg::Build::Types</h1>\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Dpkg::Build::Types\n- track build types</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nDpkg::Build::Types module is used by various tools to track\nand decide what artifacts need to be built.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The build types\nare bit constants that are exported by default. Multiple\ntypes can be ORed.</p>\n\n<h2>CONSTANTS\n<a name=\"CONSTANTS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><small>BUILD_DEFAULT</small></p>\n\n<p style=\"margin-left:17%;\">This build is the default.</p>\n\n\n<p style=\"margin-left:11%;\"><small>BUILD_SOURCE</small></p>\n\n<p style=\"margin-left:17%;\">This build includes source\nartifacts.</p>\n\n\n<p style=\"margin-left:11%;\"><small>BUILD_ARCH_DEP</small></p>\n\n<p style=\"margin-left:17%;\">This build includes\narchitecture dependent binary artifacts.</p>\n\n\n<p style=\"margin-left:11%;\"><small>BUILD_ARCH_INDEP</small></p>\n\n<p style=\"margin-left:17%;\">This build includes\narchitecture independent binary artifacts.</p>\n\n\n<p style=\"margin-left:11%;\"><small>BUILD_BINARY</small></p>\n\n<p style=\"margin-left:17%;\">This build includes binary\nartifacts.</p>\n\n<p style=\"margin-left:11%;\"><small>BUILD_FULL</small></p>\n\n<p style=\"margin-left:17%;\">This build includes source and\nbinary artifacts.</p>\n\n<h2>FUNCTIONS\n<a name=\"FUNCTIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">build_has_any($bits)</p>\n\n<p style=\"margin-left:17%;\">Return a boolean indicating\nwhether the current build type has any of the specified\n$bits.</p>\n\n<p style=\"margin-left:11%;\">build_has_all($bits)</p>\n\n<p style=\"margin-left:17%;\">Return a boolean indicating\nwhether the current build type has all the specified\n$bits.</p>\n\n<p style=\"margin-left:11%;\">build_has_none($bits)</p>\n\n<p style=\"margin-left:17%;\">Return a boolean indicating\nwhether the current build type has none of the specified\n$bits.</p>\n\n<p style=\"margin-left:11%;\">build_is($bits)</p>\n\n<p style=\"margin-left:17%;\">Return a boolean indicating\nwhether the current build type is the specified set of\n$bits.</p>\n\n<p style=\"margin-left:11%;\">set_build_type($build_type,\n$build_option, %opts)</p>\n\n<p style=\"margin-left:17%;\">Set the current build type to\n$build_type, which was specified via the $build_option\ncommand-line option.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The function\nwill check and abort on incompatible build type assignments,\nthis behavior can be disabled by using the boolean option\n&quot;nocheck&quot;.</p>\n\n\n<p style=\"margin-left:11%;\">set_build_type_from_options($build_types,\n$build_option, %opts)</p>\n\n<p style=\"margin-left:17%;\">Set the current build type from\na list of comma-separated build type components.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The function\nwill check and abort on incompatible build type assignments,\nthis behavior can be disabled by using the boolean option\n&quot;nocheck&quot;.</p>\n\n\n<p style=\"margin-left:11%;\">set_build_type_from_targets($build_targets,\n$build_option, %opts)</p>\n\n<p style=\"margin-left:17%;\">Set the current build type from\na list of comma-separated build target components.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The function\nwill check and abort on incompatible build type assignments,\nthis behavior can be disabled by using the boolean option\n&quot;nocheck&quot;.</p>\n\n\n<p style=\"margin-left:11%;\"><b>get_build_options_from_type()</b></p>\n\n<p style=\"margin-left:17%;\">Get the current build type as a\nset of comma-separated string options.</p>\n\n<h2>CHANGES\n<a name=\"CHANGES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version\n0.xx</b> <br>\nThis is a private module.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#CONSTANTS\">CONSTANTS</a>","<a href=\"#FUNCTIONS\">FUNCTIONS</a>","<a href=\"#CHANGES\">CHANGES</a>"],"level":3}