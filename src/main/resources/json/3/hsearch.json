{"name":"hsearch","description":"hcreate,\nhdestroy, hsearch, hcreate_r, hdestroy_r, hsearch_r - hash\ntable management","body":"\n\n<h1 align=\"center\">HSEARCH</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">hcreate,\nhdestroy, hsearch, hcreate_r, hdestroy_r, hsearch_r - hash\ntable management</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;search.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nhcreate(size_t</b> <i>nel</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ENTRY\n*hsearch(ENTRY</b> <i>item</i><b>, ACTION</b>\n<i>action</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>void\nhdestroy(void);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#define\n_GNU_SOURCE</b> /* See feature_test_macros(7) */ <b><br>\n#include &lt;search.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nhcreate_r(size_t</b> <i>nel</i><b>, struct hsearch_data\n*</b><i>htab</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nhsearch_r(ENTRY</b> <i>item</i><b>, ACTION</b>\n<i>action</i><b>, ENTRY **</b><i>retval</i><b>, <br>\nstruct hsearch_data *</b><i>htab</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>void\nhdestroy_r(struct hsearch_data *</b><i>htab</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The three\nfunctions <b>hcreate</b>(), <b>hsearch</b>(), and\n<b>hdestroy</b>() allow the caller to create and manage a\nhash search table containing entries consisting of a key (a\nstring) and associated data. Using these functions, only one\nhash table can be used at a time.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The three\nfunctions <b>hcreate_r</b>(), <b>hsearch_r</b>(),\n<b>hdestroy_r</b>() are reentrant versions that allow a\nprogram to use more than one hash search table at the same\ntime. The last argument, <i>htab</i>, points to a structure\nthat describes the table on which the function is to\noperate. The programmer should treat this structure as\nopaque (i.e., do not attempt to directly access or modify\nthe fields in this structure).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">First a hash\ntable must be created using <b>hcreate</b>(). The argument\n<i>nel</i> specifies the maximum number of entries in the\ntable. (This maximum cannot be changed later, so choose it\nwisely.) The implementation may adjust this value upward to\nimprove the performance of the resulting hash table.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>hcreate_r</b>() function performs the same task as\n<b>hcreate</b>(), but for the table described by the\nstructure <i>*htab</i>. The structure pointed to by\n<i>htab</i> must be zeroed before the first call to\n<b>hcreate_r</b>().</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The function\n<b>hdestroy</b>() frees the memory occupied by the hash\ntable that was created by <b>hcreate</b>(). After calling\n<b>hdestroy</b>(), a new hash table can be created using\n<b>hcreate</b>(). The <b>hdestroy_r</b>() function performs\nthe analogous task for a hash table described by\n<i>*htab</i>, which was previously created using\n<b>hcreate_r</b>().</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>hsearch</b>() function searches the hash table for an\nitem with the same key as <i>item</i> (where &quot;the\nsame&quot; is determined using <a href=\"https://man.page/3/strcmp\">strcmp(3)</a>), and if\nsuccessful returns a pointer to it.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The argument\n<i>item</i> is of type <i>ENTRY</i>, which is defined in\n<i>&lt;search.h&gt;</i> as follows:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">typedef struct\nentry { <br>\nchar *key; <br>\nvoid *data; <br>\n} ENTRY;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The field\n<i>key</i> points to a null-terminated string which is the\nsearch key. The field <i>data</i> points to data that is\nassociated with that key.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The argument\n<i>action</i> determines what <b>hsearch</b>() does after an\nunsuccessful search. This argument must either have the\nvalue <b>ENTER</b>, meaning insert a copy of <i>item</i>\n(and return a pointer to the new hash table entry as the\nfunction result), or the value <b>FIND</b>, meaning that\nNULL should be returned. (If <i>action</i> is <b>FIND</b>,\nthen <i>data</i> is ignored.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>hsearch_r</b>() function is like <b>hsearch</b>() but\noperates on the hash table described by <i>*htab</i>. The\n<b>hsearch_r</b>() function differs from <b>hsearch</b>() in\nthat a pointer to the found item is returned in\n<i>*retval</i>, rather than as the function result.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>hcreate</b>()\nand <b>hcreate_r</b>() return nonzero on success. They\nreturn 0 on error, with <i>errno</i> set to indicate the\ncause of the error.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\n<b>hsearch</b>() returns a pointer to an entry in the hash\ntable. <b>hsearch</b>() returns NULL on error, that is, if\n<i>action</i> is <b>ENTER</b> and the hash table is full, or\n<i>action</i> is <b>FIND</b> and <i>item</i> cannot be found\nin the hash table. <b>hsearch_r</b>() returns nonzero on\nsuccess, and 0 on error. In the event of an error, these two\nfunctions set <i>errno</i> to indicate the cause of the\nerror.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>hcreate_r</b>()\nand <b>hdestroy_r</b>() can fail for the following\nreasons:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"20%\">\n\n\n<p><i>htab</i> is NULL.</p></td>\n<td width=\"58%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>hsearch</b>()\nand <b>hsearch_r</b>() can fail for the following\nreasons:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>ENOMEM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\"><i>action</i> was <b>ENTER</b>,\n<i>key</i> was not found in the table, and there was no room\nin the table to add a new entry.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ESRCH</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>action</i> was <b>FIND</b>, and <i>key</i> was not\nfound in the table.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1\nspecifies only the <b>ENOMEM</b> error.</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3316561.png\" alt=\"Image grohtml-3316561.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The functions\n<b>hcreate</b>(), <b>hsearch</b>(), and <b>hdestroy</b>()\nare from SVr4, and are described in POSIX.1-2001 and\nPOSIX.1-2008.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The functions\n<b>hcreate_r</b>(), <b>hsearch_r</b>(), and\n<b>hdestroy_r</b>() are GNU extensions.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Hash table\nimplementations are usually more efficient when the table\ncontains enough free space to minimize collisions.\nTypically, this means that <i>nel</i> should be at least 25%\nlarger than the maximum number of elements that the caller\nexpects to store in the table.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>hdestroy</b>() and <b>hdestroy_r</b>() functions do not\nfree the buffers pointed to by the <i>key</i> and\n<i>data</i> elements of the hash table entries. (It\ncan&rsquo;t do this because it doesn&rsquo;t know whether\nthese buffers were allocated dynamically.) If these buffers\nneed to be freed (perhaps because the program is repeatedly\ncreating and destroying hash tables, rather than creating a\nsingle table whose lifetime matches that of the program),\nthen the program must maintain bookkeeping data structures\nthat allow it to free them.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">SVr4 and\nPOSIX.1-2001 specify that <i>action</i> is significant only\nfor unsuccessful searches, so that an <b>ENTER</b> should\nnot do anything for a successful search. In libc and glibc\n(before version 2.3), the implementation violates the\nspecification, updating the <i>data</i> for the given\n<i>key</i> in this case.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Individual hash\ntable entries can be added, but not deleted.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nprogram inserts 24 items into a hash table, then prints some\nof them.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#include\n&lt;stdio.h&gt; <br>\n#include &lt;stdlib.h&gt; <br>\n#include &lt;search.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">static char\n*data[] = { &quot;alpha&quot;, &quot;bravo&quot;,\n&quot;charlie&quot;, &quot;delta&quot;, <br>\n&quot;echo&quot;, &quot;foxtrot&quot;, &quot;golf&quot;,\n&quot;hotel&quot;, &quot;india&quot;, &quot;juliet&quot;,\n<br>\n&quot;kilo&quot;, &quot;lima&quot;, &quot;mike&quot;,\n&quot;november&quot;, &quot;oscar&quot;, &quot;papa&quot;,\n<br>\n&quot;quebec&quot;, &quot;romeo&quot;, &quot;sierra&quot;,\n&quot;tango&quot;, &quot;uniform&quot;, <br>\n&quot;victor&quot;, &quot;whisky&quot;, &quot;x-ray&quot;,\n&quot;yankee&quot;, &quot;zulu&quot; <br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(void) <br>\n{ <br>\nENTRY e; <br>\nENTRY *ep;</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">hcreate(30);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">for (int i = 0;\ni &lt; 24; i++) { <br>\ne.key = data[i]; <br>\n/* data is just an integer, instead of a <br>\npointer to something */ <br>\ne.data = (void *) i; <br>\nep = hsearch(e, ENTER); <br>\n/* there should be no failures */ <br>\nif (ep == NULL) { <br>\nfprintf(stderr, &quot;entry failed\\n&quot;); <br>\nexit(EXIT_FAILURE); <br>\n} <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">for (int i =\n22; i &lt; 26; i++) { <br>\n/* print two entries from the table, and <br>\nshow that two are not in the table */ <br>\ne.key = data[i]; <br>\nep = hsearch(e, FIND); <br>\nprintf(&quot;%9.9s -&gt; %9.9s:%d\\n&quot;, e.key, <br>\nep ? ep-&gt;key : &quot;NULL&quot;, ep ? (int)(ep-&gt;data)\n: 0); <br>\n} <br>\nhdestroy(); <br>\nexit(EXIT_SUCCESS); <br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/bsearch\">bsearch(3)</a>,\n<a href=\"https://man.page/3/lsearch\">lsearch(3)</a>, <a href=\"https://man.page/3/malloc\">malloc(3)</a>, <a href=\"https://man.page/3/tsearch\">tsearch(3)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}