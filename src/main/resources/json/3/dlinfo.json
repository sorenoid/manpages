{"name":"dlinfo","body":"\n\n<h1 align=\"center\">DLINFO</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">dlinfo - obtain\ninformation about a dynamically loaded object</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#define\n_GNU_SOURCE <br>\n#include &lt;link.h&gt; <br>\n#include &lt;dlfcn.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\ndlinfo(void *</b>handle<b>, int</b> request<b>, void\n*</b>info<b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Link with\n<i>-ldl</i>.</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>dlinfo</b>() function obtains information about the\ndynamically loaded object referred to by <i>handle</i>\n(typically obtained by an earlier call to <a href=\"https://man.page/3/dlopen\">dlopen(3)</a>\nor <a href=\"https://man.page/3/dlmopen\">dlmopen(3)</a>). The <i>request</i> argument specifies\nwhich information is to be returned. The <i>info</i>\nargument is a pointer to a buffer used to store information\nreturned by the call; the type of this argument depends on\n<i>request</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nvalues are supported for <i>request</i> (with the\ncorresponding type for <i>info</i> shown in parentheses):\n<b><br>\nRTLD_DI_LMID</b> (<i>Lmid_t *</i>)</p>\n\n<p style=\"margin-left:22%;\">Obtain the ID of the link-map\nlist (namespace) in which <i>handle</i> is loaded.</p>\n\n<p style=\"margin-left:11%;\"><b>RTLD_DI_LINKMAP</b>\n(<i>struct link_map **</i>)</p>\n\n<p style=\"margin-left:22%;\">Obtain a pointer to the\n<i>link_map</i> structure corresponding to <i>handle</i>.\nThe <i>info</i> argument points to a pointer to a\n<i>link_map</i> structure, defined in <i>&lt;link.h&gt;</i>\nas:</p>\n\n<p style=\"margin-left:28%; margin-top: 1em\">struct link_map\n{ <br>\nElfW(Addr) l_addr; /* Difference between the <br>\naddress in the ELF file and <br>\nthe address in memory */ <br>\nchar *l_name; /* Absolute pathname where <br>\nobject was found */ <br>\nElfW(Dyn) *l_ld; /* Dynamic section of the <br>\nshared object */ <br>\nstruct link_map *l_next, *l_prev; <br>\n/* Chain of loaded objects */</p>\n\n<p style=\"margin-left:28%; margin-top: 1em\">/* Plus\nadditional fields private to the <br>\nimplementation */ <br>\n};</p>\n\n<p style=\"margin-left:11%;\"><b>RTLD_DI_ORIGIN</b> (<i>char\n*</i>)</p>\n\n<p style=\"margin-left:22%;\">Copy the pathname of the origin\nof the shared object corresponding to <i>handle</i> to the\nlocation pointed to by <i>info</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>RTLD_DI_SERINFO</b>\n(<i>Dl_serinfo *</i>)</p>\n\n<p style=\"margin-left:22%;\">Obtain the library search paths\nfor the shared object referred to by <i>handle</i>. The\n<i>info</i> argument is a pointer to a <i>Dl_serinfo</i>\nthat contains the search paths. Because the number of search\npaths may vary, the size of the structure pointed to by\n<i>info</i> can vary. The <b>RTLD_DI_SERINFOSIZE</b> request\ndescribed below allows applications to size the buffer\nsuitably. The caller must perform the following steps:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>1.</p></td>\n<td width=\"1%\"></td>\n<td width=\"74%\">\n\n\n<p>Use a <b>RTLD_DI_SERINFOSIZE</b> request to populate a\n<i>Dl_serinfo</i> structure with the size (<i>dls_size</i>)\nof the structure needed for the subsequent\n<b>RTLD_DI_SERINFO</b> request.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>2.</p></td>\n<td width=\"1%\"></td>\n<td width=\"74%\">\n\n\n<p>Allocate a <i>Dl_serinfo</i> buffer of the correct size\n(<i>dls_size</i>).</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>3.</p></td>\n<td width=\"1%\"></td>\n<td width=\"74%\">\n\n\n<p>Use a further <b>RTLD_DI_SERINFOSIZE</b> request to\npopulate the <i>dls_size</i> and <i>dls_cnt</i> fields of\nthe buffer allocated in the previous step.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"3%\">\n\n\n<p>4.</p></td>\n<td width=\"1%\"></td>\n<td width=\"74%\">\n\n\n<p>Use a <b>RTLD_DI_SERINFO</b> to obtain the library\nsearch paths.</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The\n<i>Dl_serinfo</i> structure is defined as follows:</p>\n\n<p style=\"margin-left:28%; margin-top: 1em\">typedef struct\n{ <br>\nsize_t dls_size; /* Size in bytes of <br>\nthe whole buffer */ <br>\nunsigned int dls_cnt; /* Number of elements <br>\nin 'dls_serpath' */ <br>\nDl_serpath dls_serpath[1]; /* Actually longer, <br>\n'dls_cnt' elements */ <br>\n} Dl_serinfo;</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Each of the\n<i>dls_serpath</i> elements in the above structure is a\nstructure of the following form:</p>\n\n<p style=\"margin-left:28%; margin-top: 1em\">typedef struct\n{ <br>\nchar *dls_name; /* Name of library search <br>\npath directory */ <br>\nunsigned int dls_flags; /* Indicates where this <br>\ndirectory came from */ <br>\n} Dl_serpath;</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The\n<i>dls_flags</i> field is currently unused, and always\ncontains zero.</p>\n\n<p style=\"margin-left:11%;\"><b>RTLD_DI_SERINFOSIZE</b>\n(<i>Dl_serinfo *</i>)</p>\n\n<p style=\"margin-left:22%;\">Populate the <i>dls_size</i>\nand <i>dls_cnt</i> fields of the <i>Dl_serinfo</i> structure\npointed to by <i>info</i> with values suitable for\nallocating a buffer for use in a subsequent\n<b>RTLD_DI_SERINFO</b> request.</p>\n\n<p style=\"margin-left:11%;\"><b>RTLD_DI_TLS_MODID</b>\n(<i>size_t *</i>, since glibc 2.4)</p>\n\n<p style=\"margin-left:22%;\">Obtain the module ID of this\nshared object&rsquo;s TLS (thread-local storage) segment, as\nused in TLS relocations. If this object does not define a\nTLS segment, zero is placed in <i>*info</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>RTLD_DI_TLS_DATA</b>\n(<i>void **</i>, since glibc 2.4)</p>\n\n<p style=\"margin-left:22%;\">Obtain a pointer to the calling\nthread&rsquo;s TLS block corresponding to this shared\nobject&rsquo;s TLS segment. If this object does not define a\nPT_TLS segment, or if the calling thread has not allocated a\nblock for it, NULL is placed in <i>*info</i>.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\n<b>dlinfo</b>() returns 0. On failure, it returns -1; the\ncause of the error can be diagnosed using\n<a href=\"https://man.page/3/dlerror\">dlerror(3)</a>.</p>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>dlinfo</b>()\nfirst appeared in glibc 2.3.3.</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n</table>\n\n\n<p align=\"center\"><img src=\"grohtml-3351391.png\" alt=\"Image grohtml-3351391.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This function\nis a nonstandard GNU extension.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This function\nderives from the Solaris function of the same name and also\nappears on some other systems. The sets of requests\nsupported by the various implementations overlaps only\npartially.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The program\nbelow opens a shared objects using <a href=\"https://man.page/3/dlopen\">dlopen(3)</a> and then\nuses the <b>RTLD_DI_SERINFOSIZE</b> and\n<b>RTLD_DI_SERINFO</b> requests to obtain the library search\npath list for the library. Here is an example of what we\nmight see when running the program:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ <b>./a.out\n/lib64/libm.so.6</b> <br>\ndls_serpath[0].dls_name = /lib64 <br>\ndls_serpath[1].dls_name = /usr/lib64</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Program\nsource</b> <br>\n#define _GNU_SOURCE <br>\n#include &lt;dlfcn.h&gt; <br>\n#include &lt;link.h&gt; <br>\n#include &lt;stdio.h&gt; <br>\n#include &lt;stdlib.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(int argc, char *argv[]) <br>\n{ <br>\nvoid *handle; <br>\nDl_serinfo serinfo; <br>\nDl_serinfo *sip;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (argc != 2)\n{ <br>\nfprintf(stderr, &quot;Usage: %s &lt;libpath&gt;\\n&quot;,\nargv[0]); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Obtain a\nhandle for shared object specified on command line */</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">handle =\ndlopen(argv[1], RTLD_NOW); <br>\nif (handle == NULL) { <br>\nfprintf(stderr, &quot;dlopen() failed: %s\\n&quot;,\ndlerror()); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Discover the\nsize of the buffer that we must pass to <br>\nRTLD_DI_SERINFO */</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if\n(dlinfo(handle, RTLD_DI_SERINFOSIZE, &amp;serinfo) == -1) {\n<br>\nfprintf(stderr, &quot;RTLD_DI_SERINFOSIZE failed:\n%s\\n&quot;, dlerror()); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Allocate the\nbuffer for use with RTLD_DI_SERINFO */</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">sip =\nmalloc(serinfo.dls_size); <br>\nif (sip == NULL) { <br>\nperror(&quot;malloc&quot;); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Initialize\nthe 'dls_size' and 'dls_cnt' fields in the newly <br>\nallocated buffer */</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if\n(dlinfo(handle, RTLD_DI_SERINFOSIZE, sip) == -1) { <br>\nfprintf(stderr, &quot;RTLD_DI_SERINFOSIZE failed:\n%s\\n&quot;, dlerror()); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Fetch and\nprint library search list */</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if\n(dlinfo(handle, RTLD_DI_SERINFO, sip) == -1) { <br>\nfprintf(stderr, &quot;RTLD_DI_SERINFO failed: %s\\n&quot;,\ndlerror()); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">for (int j = 0;\nj &lt; serinfo.dls_cnt; j++) <br>\nprintf(&quot;dls_serpath[%d].dls_name = %s\\n&quot;, <br>\nj, sip-&gt;dls_serpath[j].dls_name);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">exit(EXIT_SUCCESS);\n<br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/dl_iterate_phdr\">dl_iterate_phdr(3)</a>,\n<a href=\"https://man.page/3/dladdr\">dladdr(3)</a>, <a href=\"https://man.page/3/dlerror\">dlerror(3)</a>, <a href=\"https://man.page/3/dlopen\">dlopen(3)</a>,\n<a href=\"https://man.page/3/dlsym\">dlsym(3)</a>, <b>ld.so</b>(8)</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}