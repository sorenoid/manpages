{"name":"parser::style::objects","body":"\n\n<h1 align=\"center\">Parser::Style::Objects</h1>\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">XML::Parser::Style::Objects\n- Objects styler parser</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">use\nXML::Parser; <br>\nmy $p = XML::Parser-&gt;new(Style =&gt; 'Objects', Pkg =&gt;\n'MyNode'); <br>\nmy $tree = $p-&gt;parsefile('foo.xml');</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This module\nimplements XML::Parser&rsquo;s Objects style parser.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This is similar\nto the Tree style, except that a hash object is created for\neach element. The corresponding object will be in the class\nwhose name is created by appending &quot;::&quot; and the\nelement name to the package set with the Pkg option.\nNon-markup text will be in the ::Characters class. The\ncontents of the corresponding object will be in an anonymous\narray that is the value of the Kids property for that\nobject.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">XML::Parser::Style::Tree</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"],"level":3}