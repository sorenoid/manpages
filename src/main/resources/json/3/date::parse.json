{"name":"date::parse","body":"\n\n<h1 align=\"center\">Date::Parse</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Date::Parse -\nParse date strings into time values</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">use\nDate::Parse; <br>\n$time = str2time($date); <br>\n($ss,$mm,$hh,$day,$month,$year,$zone) = strptime($date);</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&quot;Date::Parse&quot;\nprovides two routines for parsing date strings into time\nvalues. <br>\nstr2time( <small>DATE</small> [, <small>ZONE</small> ])</p>\n\n<p style=\"margin-left:17%;\">&quot;str2time&quot; parses\n&quot;DATE&quot; and returns a unix time value, or undef\nupon failure. &quot;ZONE&quot;, if given, specifies the\ntimezone to assume when parsing if the date string does not\nspecify a timezone.</p>\n\n<p style=\"margin-left:11%;\">strptime( <small>DATE</small>\n[, <small>ZONE</small> ])</p>\n\n<p style=\"margin-left:17%;\">&quot;strptime&quot; takes the\nsame arguments as str2time but returns an array of values\n&quot;($ss,$mm,$hh,$day,$month,$year,$zone,$century)&quot;.\nElements are only defined if they could be extracted from\nthe date string. The $zone element is the timezone offset in\nseconds from <small>GMT.</small> An empty array is returned\nupon failure.</p>\n\n<h2>MULTI-LANGUAGE SUPPORT\n<a name=\"MULTI-LANGUAGE SUPPORT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Date::Parse is\ncapable of parsing dates in several languages, these include\nEnglish, French, German and Italian.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">$lang =\nDate::Language-&gt;new('German'); <br>\n$lang-&gt;str2time(&quot;25 Jun 1996 21:09:55\n+0100&quot;);</p>\n\n<h2>EXAMPLE DATES\n<a name=\"EXAMPLE DATES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Below is a\nsample list of dates that are known to be parsable with\nDate::Parse</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">1995:01:24T09:08:17.1823213\nISO-8601 <br>\n1995-01-24T09:08:17.1823213 <br>\nWed, 16 Jun 94 07:29:35 CST Comma and day name are optional\n<br>\nThu, 13 Oct 94 10:13:13 -0700 <br>\nWed, 9 Nov 1994 09:50:32 -0500 (EST) Text in ()'s will be\nignored. <br>\n21 dec 17:05 Will be parsed in the current time zone <br>\n21-dec 17:05 <br>\n21/dec 17:05 <br>\n21/dec/93 17:05 <br>\n1999 10:02:18 &quot;GMT&quot; <br>\n16 Nov 94 22:28:20 PST</p>\n\n<h2>LIMITATION\n<a name=\"LIMITATION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Date::Parse\nuses Time::Local internally, so is limited to only parsing\ndates which result in valid values for\nTime::Local::timelocal. This generally means dates between\n1901-12-17 00:00:00 <small>GMT</small> and 2038-01-16\n23:59:59 <small>GMT</small></p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">When both the\nmonth and the date are specified in the date as numbers they\nare always parsed assuming that the month number comes\nbefore the date. This is the usual format used in American\ndates.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The reason why\nit is like this and not dynamic is that it must be\ndeterministic. Several people have suggested using the\ncurrent locale, but this will not work as the date being\nparsed may not be in the format of the current locale.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">My plans to\naddress this, which will be in a future release, is to allow\nthe programmer to state what order they want these values\nparsed in.</p>\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Graham Barr\n&lt;gbarr@pobox.com&gt;</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright (c)\n1995-2009 Graham Barr. This program is free software; you\ncan redistribute it and/or modify it under the same terms as\nPerl itself.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#MULTI-LANGUAGE SUPPORT\">MULTI-LANGUAGE SUPPORT</a>","<a href=\"#EXAMPLE DATES\">EXAMPLE DATES</a>","<a href=\"#LIMITATION\">LIMITATION</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#AUTHOR\">AUTHOR</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"],"level":3}