{"name":"xml::xpathengine::number","description":"XML::XPathEngine::Number - Simple numeric values.","body":"\n\n<h1 align=\"center\">XML::XPathEngine::Number</h1>\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">XML::XPathEngine::Number\n- Simple numeric values.</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This class\nholds simple numeric values. It doesn&rsquo;t support -0,\n+/- Infinity, or NaN, as the XPath spec says it should, but\nI&rsquo;m not hurting anyone I don&rsquo;t think.</p>\n\n<h2>API\n<a name=\"API\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>new($num)</b>\n<br>\nCreates a new XML::XPathEngine::Number object, with the\nvalue in $num. Does some rudimentary numeric checking on\n$num to ensure it actually is a number.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>value()</i>\n<br>\nAlso as overloaded stringification. Returns the numeric\nvalue held.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#API\">API</a>"],"level":3}