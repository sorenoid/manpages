{"name":"lwp::robotua","description":"LWP::RobotUA -\na class for well-behaved Web robots","body":"\n\n<h1 align=\"center\">LWP::RobotUA</h1>\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">LWP::RobotUA -\na class for well-behaved Web robots</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">use\nLWP::RobotUA; <br>\nmy $ua = LWP::RobotUA-&gt;new('my-robot/0.1', 'me@foo.com');\n<br>\n$ua-&gt;delay(10); # be very nice -- max one hit every ten\nminutes! <br>\n... <br>\n# Then just use it just like a normal LWP::UserAgent: <br>\nmy $response = $ua-&gt;get('http://whatever.int/...'); <br>\n...</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This class\nimplements a user agent that is suitable for robot\napplications. Robots should be nice to the servers they\nvisit. They should consult the <i>/robots.txt</i> file to\nensure that they are welcomed and they should not make\nrequests too frequently.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">But before you\nconsider writing a robot, take a look at\n&lt;http://www.robotstxt.org/&gt;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When you use an\n<i>LWP::RobotUA</i> object as your user agent, then you do\nnot really have to think about these things yourself;\n&quot;robots.txt&quot; files are automatically consulted and\nobeyed, the server isn&rsquo;t queried too rapidly, and so\non. Just send requests as you do when you are using a normal\n<i>LWP::UserAgent</i> object (using\n&quot;$ua-&gt;get(...)&quot;, &quot;$ua-&gt;head(...)&quot;,\n&quot;$ua-&gt;request(...)&quot;, etc.), and this special\nagent will make sure you are nice.</p>\n\n<h2>METHODS\n<a name=\"METHODS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nLWP::RobotUA is a sub-class of LWP::UserAgent and implements\nthe same methods. In addition the following methods are\nprovided:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>new</b> <br>\nmy $ua = LWP::RobotUA-&gt;new( %options ) <br>\nmy $ua = LWP::RobotUA-&gt;new( $agent, $from ) <br>\nmy $ua = LWP::RobotUA-&gt;new( $agent, $from, $rules )</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nLWP::UserAgent options &quot;agent&quot; and\n&quot;from&quot; are mandatory. The options\n&quot;delay&quot;, &quot;use_sleep&quot; and\n&quot;rules&quot; initialize attributes private to the\nRobotUA. If &quot;rules&quot; are not provided, then\nWWW::RobotRules is instantiated providing an internal\ndatabase of <i>robots.txt</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It is also\npossible to just pass the value of &quot;agent&quot;,\n&quot;from&quot; and optionally &quot;rules&quot; as plain\npositional arguments.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>delay</b>\n<br>\nmy $delay = $ua-&gt;delay; <br>\n$ua-&gt;delay( $minutes );</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Get/set the\nminimum delay between requests to the same server, in\n<i>minutes</i>. The default is 1 minute. Note that this\nnumber doesn&rsquo;t have to be an integer; for example,\nthis sets the delay to 10 seconds:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$ua-&gt;delay(10/60);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>use_sleep</b>\n<br>\nmy $bool = $ua-&gt;use_sleep; <br>\n$ua-&gt;use_sleep( $boolean );</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Get/set a value\nindicating whether the <small>UA</small> should\n&quot;sleep&quot; in LWP::RobotUA if requests arrive too\nfast, defined as &quot;$ua-&gt;delay&quot; minutes not\npassed since last request to the given server. The default\nis true. If this value is false then an internal\n&quot;SERVICE_UNAVAILABLE&quot; response will be generated.\nIt will have a &quot;Retry-After&quot; header that indicates\nwhen it is <small>OK</small> to send another request to this\nserver.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>rules</b>\n<br>\nmy $rules = $ua-&gt;rules; <br>\n$ua-&gt;rules( $rules );</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Set/get which\n<i>WWW::RobotRules</i> object to use.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>no_visits</b>\n<br>\nmy $num = $ua-&gt;no_visits( $netloc )</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Returns the\nnumber of documents fetched from this server host. Yeah I\nknow, this method should probably have been named\n&quot;num_visits&quot; or something like that. :-(</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>host_wait</b>\n<br>\nmy $num = $ua-&gt;host_wait( $netloc )</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Returns the\nnumber of <i>seconds</i> (from now) you must wait before you\ncan make a new request to this host.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>as_string</b>\n<br>\nmy $string = $ua-&gt;as_string;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Returns a\nstring that describes the state of the <small>UA.</small>\nMainly useful for debugging.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">LWP::UserAgent,\nWWW::RobotRules</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright\n1996-2004 Gisle Aas.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This library is\nfree software; you can redistribute it and/or modify it\nunder the same terms as Perl itself.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#METHODS\">METHODS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"],"level":3}