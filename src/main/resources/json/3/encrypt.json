{"name":"encrypt","body":"\n\n<h1 align=\"center\">ENCRYPT</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">encrypt,\nsetkey, encrypt_r, setkey_r - encrypt 64-bit messages</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#define\n_XOPEN_SOURCE</b> /* See feature_test_macros(7) */ <b><br>\n#include &lt;unistd.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>void\nencrypt(char</b> <i>block</i><b>[64], int</b>\n<i>edflag</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#define\n_XOPEN_SOURCE</b> /* See feature_test_macros(7) */ <b><br>\n#include &lt;stdlib.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>void\nsetkey(const char *</b><i>key</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#define\n_GNU_SOURCE</b> /* See feature_test_macros(7) */ <b><br>\n#include &lt;crypt.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>void\nsetkey_r(const char *</b><i>key</i><b>, struct crypt_data\n*</b><i>data</i><b>); <br>\nvoid encrypt_r(char *</b><i>block</i><b>, int</b>\n<i>edflag</i><b>, struct crypt_data\n*</b><i>data</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Each of these\nrequires linking with <i>-lcrypt</i>.</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These functions\nencrypt and decrypt 64-bit messages. The <b>setkey</b>()\nfunction sets the key used by <b>encrypt</b>(). The\n<i>key</i> argument used here is an array of 64 bytes, each\nof which has numerical value 1 or 0. The bytes key[n] where\nn=8*i-1 are ignored, so that the effective key length is 56\nbits.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>encrypt</b>() function modifies the passed buffer,\nencoding if <i>edflag</i> is 0, and decoding if 1 is being\npassed. Like the <i>key</i> argument, also <i>block</i> is a\nbit vector representation of the actual value that is\nencoded. The result is returned in that same vector.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">These two\nfunctions are not reentrant, that is, the key data is kept\nin static storage. The functions <b>setkey_r</b>() and\n<b>encrypt_r</b>() are the reentrant versions. They use the\nfollowing structure to hold the key data:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct\ncrypt_data { <br>\nchar keysched[16 * 8]; <br>\nchar sb0[32768]; <br>\nchar sb1[32768]; <br>\nchar sb2[32768]; <br>\nchar sb3[32768]; <br>\nchar crypt_3_buf[14]; <br>\nchar current_salt[2]; <br>\nlong current_saltbits; <br>\nint direction; <br>\nint initialized; <br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Before calling\n<b>setkey_r</b>() set <i>data-&gt;initialized</i> to\nzero.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These functions\ndo not return any value.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Set\n<i>errno</i> to zero before calling the above functions. On\nsuccess, it is unchanged.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOSYS</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The function is not provided. (For example because of\nformer USA export restrictions.)</p></td></tr>\n</table>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Because they\nemploy the DES block cipher, which is no longer considered\nsecure, <b>crypt</b>(), <b>crypt_r</b>(), <b>setkey</b>(),\nand <b>setkey_r</b>() were removed in glibc 2.28.\nApplications should switch to a modern cryptography library,\nsuch as <b>libgcrypt</b>.</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3396841.png\" alt=\"Image grohtml-3396841.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>encrypt</b>(),\n<b>setkey</b>(): POSIX.1-2001, POSIX.1-2008, SUS, SVr4.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The functions\n<b>encrypt_r</b>() and <b>setkey_r</b>() are GNU\nextensions.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Availability\nin glibc</b> <br>\nSee <a href=\"https://man.page/3/crypt\">crypt(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Features in\nglibc</b> <br>\nIn glibc 2.2, these functions use the DES algorithm.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">#define\n_XOPEN_SOURCE <br>\n#include &lt;stdio.h&gt; <br>\n#include &lt;stdlib.h&gt; <br>\n#include &lt;unistd.h&gt; <br>\n#include &lt;crypt.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(void) <br>\n{ <br>\nchar key[64]; <br>\nchar orig[9] = &quot;eggplant&quot;; <br>\nchar buf[64]; <br>\nchar txt[9];</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">for (int i = 0;\ni &lt; 64; i++) { <br>\nkey[i] = rand() &amp; 1; <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">for (int i = 0;\ni &lt; 8; i++) { <br>\nfor (int j = 0; j &lt; 8; j++) { <br>\nbuf[i * 8 + j] = orig[i] &gt;&gt; j &amp; 1; <br>\n} <br>\nsetkey(key); <br>\n} <br>\nprintf(&quot;Before encrypting: %s\\n&quot;, orig);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">encrypt(buf,\n0); <br>\nfor (int i = 0; i &lt; 8; i++) { <br>\nfor (int j = 0, txt[i] = '\\0'; j &lt; 8; j++) { <br>\ntxt[i] |= buf[i * 8 + j] &lt;&lt; j; <br>\n} <br>\ntxt[8] = '\\0'; <br>\n} <br>\nprintf(&quot;After encrypting: %s\\n&quot;, txt);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">encrypt(buf,\n1); <br>\nfor (int i = 0; i &lt; 8; i++) { <br>\nfor (int j = 0, txt[i] = '\\0'; j &lt; 8; j++) { <br>\ntxt[i] |= buf[i * 8 + j] &lt;&lt; j; <br>\n} <br>\ntxt[8] = '\\0'; <br>\n} <br>\nprintf(&quot;After decrypting: %s\\n&quot;, txt); <br>\nexit(EXIT_SUCCESS); <br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/cbc_crypt\">cbc_crypt(3)</a>,\n<a href=\"https://man.page/3/crypt\">crypt(3)</a>, <a href=\"https://man.page/3/ecb_crypt\">ecb_crypt(3)</a>,</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}