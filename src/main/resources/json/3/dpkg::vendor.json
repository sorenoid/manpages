{"name":"dpkg::vendor","body":"\n\n<h1 align=\"center\">Dpkg::Vendor</h1>\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Dpkg::Vendor -\nget access to some vendor specific information</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The files in\n$Dpkg::CONFDIR/origins/ can provide information about\nvarious vendors who are providing Debian packages. Currently\nthose files look like this:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Vendor: Debian\n<br>\nVendor-URL: https://www.debian.org/ <br>\nBugs: debbugs://bugs.debian.org</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the vendor\nderives from another vendor, the file should document the\nrelationship by listing the base distribution in the Parent\nfield:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Parent:\nDebian</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The file should\nbe named according to the vendor name. The usual convention\nis to name the vendor file using the vendor name in all\nlowercase, but some variation is permitted. Namely, spaces\nare mapped to dashes (&rsquo;-&rsquo;), and the file can\nhave the same casing as the Vendor field, or it can be\ncapitalized.</p>\n\n<h2>FUNCTIONS\n<a name=\"FUNCTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$dir =\n<b>get_vendor_dir()</b></p>\n\n<p style=\"margin-left:17%;\">Returns the current dpkg\norigins directory name, where the vendor files are\nstored.</p>\n\n<p style=\"margin-left:11%;\">$fields =\nget_vendor_info($name)</p>\n\n<p style=\"margin-left:17%;\">Returns a Dpkg::Control object\nwith the information parsed from the corresponding vendor\nfile in $Dpkg::CONFDIR/origins/. If $name is omitted, it\nwill use $Dpkg::CONFDIR/origins/default which is supposed to\nbe a symlink to the vendor of the currently installed\noperating system. Returns undef if there&rsquo;s no file for\nthe given vendor.</p>\n\n<p style=\"margin-left:11%;\">$name =\nget_vendor_file($name)</p>\n\n<p style=\"margin-left:17%;\">Check if there&rsquo;s a file\nfor the given vendor and returns its name.</p>\n\n<p style=\"margin-left:11%;\">$name =\n<b>get_current_vendor()</b></p>\n\n<p style=\"margin-left:17%;\">Returns the name of the current\nvendor. If <small>DEB_VENDOR</small> is set, it uses that\nfirst, otherwise it falls back to parsing\n$Dpkg::CONFDIR/origins/default. If that file doesn&rsquo;t\nexist, it returns undef.</p>\n\n<p style=\"margin-left:11%;\">$object =\nget_vendor_object($name)</p>\n\n<p style=\"margin-left:17%;\">Return the Dpkg::Vendor::*\nobject of the corresponding vendor. If $name is omitted,\nreturn the object of the current vendor. If no vendor can be\nidentified, then return the Dpkg::Vendor::Default\nobject.</p>\n\n<p style=\"margin-left:11%;\">run_vendor_hook($hookid,\n@params)</p>\n\n<p style=\"margin-left:17%;\">Run a hook implemented by the\ncurrent vendor object.</p>\n\n<h2>CHANGES\n<a name=\"CHANGES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.01\n(dpkg 1.17.0)</b> <br>\nNew function: <b>get_vendor_dir()</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.00\n(dpkg 1.16.1)</b> <br>\nMark the module as public.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/5/deb-origin\">deb-origin(5)</a>.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#FUNCTIONS\">FUNCTIONS</a>","<a href=\"#CHANGES\">CHANGES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"],"level":3}