{"name":"pthread_setaffinity_np","description":"pthread_setaffinity_np,\npthread_getaffinity_np - set/get CPU affinity of a\nthread","body":"\n\n<h1 align=\"center\">PTHREAD_SETAFFINITY_NP</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">pthread_setaffinity_np,\npthread_getaffinity_np - set/get CPU affinity of a\nthread</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#define\n_GNU_SOURCE</b> /* See feature_test_macros(7) */ <b><br>\n#include &lt;pthread.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\npthread_setaffinity_np(pthread_t</b> <i>thread</i><b>,\nsize_t</b> <i>cpusetsize</i><b>, <br>\nconst cpu_set_t *</b><i>cpuset</i><b>); <br>\nint pthread_getaffinity_np(pthread_t</b> <i>thread</i><b>,\nsize_t</b> <i>cpusetsize</i><b>, <br>\ncpu_set_t *</b><i>cpuset</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Compile and\nlink with <i>-pthread</i>.</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>pthread_setaffinity_np</b>() function sets the CPU\naffinity mask of the thread <i>thread</i> to the CPU set\npointed to by <i>cpuset</i>. If the call is successful, and\nthe thread is not currently running on one of the CPUs in\n<i>cpuset</i>, then it is migrated to one of those CPUs.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>pthread_getaffinity_np</b>() function returns the CPU\naffinity mask of the thread <i>thread</i> in the buffer\npointed to by <i>cpuset</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For more\ndetails on CPU affinity masks, see\n<a href=\"https://man.page/2/sched_setaffinity\">sched_setaffinity(2)</a>. For a description of a set of\nmacros that can be used to manipulate and inspect CPU sets,\nsee <a href=\"https://man.page/3/CPU_SET\">CPU_SET(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The argument\n<i>cpusetsize</i> is the length (in bytes) of the buffer\npointed to by <i>cpuset</i>. Typically, this argument would\nbe specified as <i>sizeof(cpu_set_t)</i>. (It may be some\nother value, if using the macros described in\n<a href=\"https://man.page/3/CPU_SET\">CPU_SET(3)</a> for dynamically allocating a CPU set.)</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\nthese functions return 0; on error, they return a nonzero\nerror number.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EFAULT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">A supplied memory address was\ninvalid.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>(<b>pthread_setaffinity_np</b>()) The affinity bit mask\n<i>mask</i> contains no processors that are currently\nphysically on the system and permitted to the thread\naccording to any restrictions that may be imposed by the\n&quot;cpuset&quot; mechanism described in\n<a href=\"https://man.page/7/cpuset\">cpuset(7)</a>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>(<b>pthread_setaffinity_np</b>()) <i>cpuset</i>\nspecified a CPU that was outside the set supported by the\nkernel. (The kernel configuration option\n<b>CONFIG_NR_CPUS</b> defines the range of the set supported\nby the kernel data type used to represent CPU sets.)</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>(<b>pthread_getaffinity_np</b>()) <i>cpusetsize</i> is\nsmaller than the size of the affinity mask used by the\nkernel.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ESRCH</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>No thread with the ID <i>thread</i> could be found.</p></td></tr>\n</table>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These functions\nare provided by glibc since version 2.3.4.</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3314881.png\" alt=\"Image grohtml-3314881.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These functions\nare nonstandard GNU extensions; hence the suffix\n&quot;_np&quot; (nonportable) in the names.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">After a call to\n<b>pthread_setaffinity_np</b>(), the set of CPUs on which\nthe thread will actually run is the intersection of the set\nspecified in the <i>cpuset</i> argument and the set of CPUs\nactually present on the system. The system may further\nrestrict the set of CPUs on which the thread runs if the\n&quot;cpuset&quot; mechanism described in <a href=\"https://man.page/7/cpuset\">cpuset(7)</a>\nis being used. These restrictions on the actual set of CPUs\non which the thread will run are silently imposed by the\nkernel.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">These functions\nare implemented on top of the <a href=\"https://man.page/2/sched_setaffinity\">sched_setaffinity(2)</a>\nand <a href=\"https://man.page/2/sched_getaffinity\">sched_getaffinity(2)</a> system calls.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In glibc 2.3.3\nonly, versions of these functions were provided that did not\nhave a <i>cpusetsize</i> argument. Instead the CPU set size\ngiven to the underlying system calls was always\n<i>sizeof(cpu_set_t)</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A new thread\ncreated by <a href=\"https://man.page/3/pthread_create\">pthread_create(3)</a> inherits a copy of its\ncreator&rsquo;s CPU affinity mask.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the\nfollowing program, the main thread uses\n<b>pthread_setaffinity_np</b>() to set its CPU affinity mask\nto include CPUs 0 to 7 (which may not all be available on\nthe system), and then calls <b>pthread_getaffinity_np</b>()\nto check the resulting CPU affinity mask of the thread.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#define\n_GNU_SOURCE <br>\n#include &lt;pthread.h&gt; <br>\n#include &lt;stdio.h&gt; <br>\n#include &lt;stdlib.h&gt; <br>\n#include &lt;errno.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#define\nhandle_error_en(en, msg) \\ <br>\ndo { errno = en; perror(msg); exit(EXIT_FAILURE); } while\n(0)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(int argc, char *argv[]) <br>\n{ <br>\nint s; <br>\ncpu_set_t cpuset; <br>\npthread_t thread;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">thread =\npthread_self();</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Set affinity\nmask to include CPUs 0 to 7 */</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">CPU_ZERO(&amp;cpuset);\n<br>\nfor (int j = 0; j &lt; 8; j++) <br>\nCPU_SET(j, &amp;cpuset);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">s =\npthread_setaffinity_np(thread, sizeof(cpuset), &amp;cpuset);\n<br>\nif (s != 0) <br>\nhandle_error_en(s, &quot;pthread_setaffinity_np&quot;);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Check the\nactual affinity mask assigned to the thread */</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">s =\npthread_getaffinity_np(thread, sizeof(cpuset), &amp;cpuset);\n<br>\nif (s != 0) <br>\nhandle_error_en(s, &quot;pthread_getaffinity_np&quot;);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">printf(&quot;Set\nreturned by pthread_getaffinity_np() contained:\\n&quot;);\n<br>\nfor (int j = 0; j &lt; CPU_SETSIZE; j++) <br>\nif (CPU_ISSET(j, &amp;cpuset)) <br>\nprintf(&quot; CPU %d\\n&quot;, j);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">exit(EXIT_SUCCESS);\n<br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/sched_setaffinity\">sched_setaffinity(2)</a>,\n<a href=\"https://man.page/3/CPU_SET\">CPU_SET(3)</a>, <a href=\"https://man.page/3/pthread_attr_setaffinity_np\">pthread_attr_setaffinity_np(3)</a>,\n<a href=\"https://man.page/3/pthread_self\">pthread_self(3)</a>, <a href=\"https://man.page/3/sched_getcpu\">sched_getcpu(3)</a>,\n<a href=\"https://man.page/7/cpuset\">cpuset(7)</a>, <a href=\"https://man.page/7/pthreads\">pthreads(7)</a>, <a href=\"https://man.page/7/sched\">sched(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}