{"name":"dpkg::index","description":"Dpkg::Index - generic index of control information","body":"\n\n<h1 align=\"center\">Dpkg::Index</h1>\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Dpkg::Index -\ngeneric index of control information</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This class\nrepresent a set of Dpkg::Control objects.</p>\n\n<h2>METHODS\n<a name=\"METHODS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$index =\nDpkg::Index-&gt;new(%opts)</p>\n\n<p style=\"margin-left:17%;\">Creates a new empty index. See\n<b>set_options()</b> for more details.</p>\n\n\n<p style=\"margin-left:11%;\">$index-&gt;set_options(%opts)</p>\n\n<p style=\"margin-left:17%;\">The &quot;type&quot; option is\nchecked first to define default values for other options.\nHere are the relevant options: &quot;get_key_func&quot; is a\nfunction returning a key for the item passed in parameters,\n&quot;unique_tuple_key&quot; is a boolean requesting whether\nthe default key should be the unique tuple (default to\ntrue), &quot;item_opts&quot; is a hash reference that will\nbe passed to the item constructor in the <b>new_item()</b>\nmethod. The index can only contain one item with a given\nkey. The &quot;get_key_func&quot; function used depends on\nthe type:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"77%\">\n\n\n<p>for <small>CTRL_INFO_SRC,</small> it is the Source\nfield;</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"77%\">\n\n\n<p>for <small>CTRL_INDEX_SRC</small> and\n<small>CTRL_PKG_SRC</small> it is the Package and Version\nfields (concatenated with &quot;_&quot;) when\n&quot;unique_tuple_key&quot; is true (the default), or\notherwise the Package field;</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"77%\">\n\n\n<p>for <small>CTRL_INFO_PKG</small> it is simply the\nPackage field;</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"77%\">\n\n\n<p>for <small>CTRL_INDEX_PKG</small> and\n<small>CTRL_PKG_DEB</small> it is the Package, Version and\nArchitecture fields (concatenated with &quot;_&quot;) when\n&quot;unique_tuple_key&quot; is true (the default) or\notherwise the Package field;</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"77%\">\n\n\n<p>for <small>CTRL_CHANGELOG</small> it is the Source and\nthe Version fields (concatenated with an intermediary\n&quot;_&quot;);</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"77%\">\n\n\n<p>for <small>CTRL_TESTS</small> is either the Tests or\nTest-Command fields;</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"77%\">\n\n\n<p>for <small>CTRL_FILE_CHANGES</small> it is the Source,\nVersion and Architecture fields (concatenated with\n&quot;_&quot;);</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"77%\">\n\n\n<p>for <small>CTRL_FILE_VENDOR</small> it is the Vendor\nfield;</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"77%\">\n\n\n<p>for <small>CTRL_FILE_STATUS</small> it is the Package\nand Architecture fields (concatenated with\n&quot;_&quot;);</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"77%\">\n\n\n<p>otherwise it is the Package field by default.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\">$index-&gt;<b>get_type()</b></p>\n\n<p style=\"margin-left:17%;\">Returns the type of control\ninformation stored. See the type parameter set during\n<b>new()</b>.</p>\n\n<p style=\"margin-left:11%;\">$index-&gt;add($item,\n[$key])</p>\n\n<p style=\"margin-left:17%;\">Add a new item in the index. If\nthe $key parameter is omitted, the key will be generated\nwith the get_key_func function (see <b>set_options()</b> for\ndetails).</p>\n\n<p style=\"margin-left:11%;\">$index-&gt;parse($fh,\n$desc)</p>\n\n<p style=\"margin-left:17%;\">Reads the filehandle and\ncreates all items parsed. When called multiple times, the\nparsed stanzas are accumulated.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Returns the\nnumber of items parsed.</p>\n\n<p style=\"margin-left:11%;\">$index-&gt;load($file)</p>\n\n<p style=\"margin-left:17%;\">Reads the file and creates all\nitems parsed. Returns the number of items parsed. Handles\ncompressed files transparently based on their\nextensions.</p>\n\n<p style=\"margin-left:11%;\">$item =\n$index-&gt;<b>new_item()</b></p>\n\n<p style=\"margin-left:17%;\">Creates a new item. Mainly\nuseful for derived objects that would want to override this\nmethod to return something else than a Dpkg::Control\nobject.</p>\n\n<p style=\"margin-left:11%;\">$item =\n$index-&gt;get_by_key($key)</p>\n\n<p style=\"margin-left:17%;\">Returns the item identified by\n$key or undef.</p>\n\n<p style=\"margin-left:11%;\">@keys =\n$index-&gt;get_keys(%criteria)</p>\n\n<p style=\"margin-left:17%;\">Returns the keys of items that\nmatches all the criteria. The key of the %criteria hash is a\nfield name and the value is either a regex that needs to\nmatch the field value, or a reference to a function that\nmust return true and that receives the field value as single\nparameter, or a scalar that must be equal to the field\nvalue.</p>\n\n<p style=\"margin-left:11%;\">@items =\n$index-&gt;get(%criteria)</p>\n\n<p style=\"margin-left:17%;\">Returns all the items that\nmatches all the criteria.</p>\n\n\n<p style=\"margin-left:11%;\">$index-&gt;remove_by_key($key)</p>\n\n<p style=\"margin-left:17%;\">Remove the item identified by\nthe given key.</p>\n\n<p style=\"margin-left:11%;\">@items =\n$index-&gt;remove(%criteria)</p>\n\n<p style=\"margin-left:17%;\">Returns and removes all the\nitems that matches all the criteria.</p>\n\n<p style=\"margin-left:11%;\">$index-&gt;merge($other_index,\n%opts)</p>\n\n<p style=\"margin-left:17%;\">Merge the entries of the other\nindex. While merging, the keys of the merged index are used,\nthey are not re-computed (unless you have set the options\n&quot;keep_keys&quot; to &quot;0&quot;). It&rsquo;s your\nresponsibility to ensure that they have been computed with\nthe same function.</p>\n\n\n<p style=\"margin-left:11%;\">$index-&gt;sort(\\&amp;sortfunc)</p>\n\n<p style=\"margin-left:17%;\">Sort the index with the given\nsort function. If no function is given, an alphabetic sort\nis done based on the keys. The sort function receives the\nitems themselves as parameters and not the keys.</p>\n\n<p style=\"margin-left:11%;\">$str = $index-&gt;output([$fh])\n<br>\n&quot;$index&quot;</p>\n\n<p style=\"margin-left:17%;\">Get a string representation of\nthe index. The Dpkg::Control objects are output in the order\nwhich they have been read or added except if the order have\nbeen changed with <b>sort()</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Print the\nstring representation of the index to a filehandle if $fh\nhas been passed.</p>\n\n<p style=\"margin-left:11%;\">$index-&gt;save($file)</p>\n\n<p style=\"margin-left:17%;\">Writes the content of the index\nin a file. Auto-compresses files based on their\nextensions.</p>\n\n<h2>CHANGES\n<a name=\"CHANGES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 2.01\n(dpkg 1.20.6)</b> <br>\nNew option: Add new &quot;item_opts&quot; option.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 2.00\n(dpkg 1.20.0)</b> <br>\nChange behavior: The &quot;unique_tuple_key&quot; option now\ndefaults to true.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.01\n(dpkg 1.19.0)</b> <br>\nNew option: Add new &quot;unique_tuple_key&quot; option to\n$index-&gt;<b>set_options()</b> to set better default\n&quot;get_key_func&quot; options, which will become the\ndefault behavior in 1.20.x.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.00\n(dpkg 1.15.6)</b> <br>\nMark the module as public.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#METHODS\">METHODS</a>","<a href=\"#CHANGES\">CHANGES</a>"],"level":3}