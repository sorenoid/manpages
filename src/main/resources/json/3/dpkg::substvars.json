{"name":"dpkg::substvars","body":"\n\n<h1 align=\"center\">Dpkg::Substvars</h1>\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Dpkg::Substvars\n- handle variable substitution in strings</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">It provides a\nclass which is able to substitute variables in strings.</p>\n\n<h2>METHODS\n<a name=\"METHODS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$s =\nDpkg::Substvars-&gt;new($file)</p>\n\n<p style=\"margin-left:23%;\">Create a new object that can do\nsubstitutions. By default it contains generic substitutions\nlike ${Newline}, ${Space}, ${Tab}, ${dpkg:Version} and\n${dpkg:Upstream-Version}.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Additional\nsubstitutions will be read from the $file passed as\nparameter.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">It keeps track\nof which substitutions were actually used (only counting\n<b>substvars()</b>, not <b>get()</b>), and warns about\nunused substvars when asked to. The substitutions that are\nalways present are not included in these warnings.</p>\n\n<p style=\"margin-left:11%;\">$s-&gt;set($key, $value)</p>\n\n<p style=\"margin-left:23%;\">Add/replace a substitution.</p>\n\n<p style=\"margin-left:11%;\">$s-&gt;set_as_used($key,\n$value)</p>\n\n<p style=\"margin-left:23%;\">Add/replace a substitution and\nmark it as used (no warnings will be produced even if\nunused).</p>\n\n<p style=\"margin-left:11%;\">$s-&gt;set_as_auto($key,\n$value)</p>\n\n<p style=\"margin-left:23%;\">Add/replace a substitution and\nmark it as used and automatic (no warnings will be produced\neven if unused).</p>\n\n<p style=\"margin-left:11%;\">$s-&gt;get($key)</p>\n\n<p style=\"margin-left:23%;\">Get the value of a given\nsubstitution.</p>\n\n<p style=\"margin-left:11%;\">$s-&gt;delete($key)</p>\n\n<p style=\"margin-left:23%;\">Remove a given\nsubstitution.</p>\n\n<p style=\"margin-left:11%;\">$s-&gt;mark_as_used($key)</p>\n\n<p style=\"margin-left:23%;\">Prevents warnings about a\nunused substitution, for example if it is provided by\ndefault.</p>\n\n<p style=\"margin-left:11%;\">$s-&gt;parse($fh, $desc)</p>\n\n<p style=\"margin-left:23%;\">Add new substitutions read from\nthe filehandle. $desc is used to identify the filehandle in\nerror messages.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Returns the\nnumber of substitutions that have been parsed with\nsuccess.</p>\n\n<p style=\"margin-left:11%;\">$s-&gt;load($file)</p>\n\n<p style=\"margin-left:23%;\">Add new substitutions read from\n$file.</p>\n\n\n<p style=\"margin-left:11%;\">$s-&gt;set_version_substvars($sourceversion,\n$binaryversion)</p>\n\n<p style=\"margin-left:23%;\">Defines ${binary:Version},\n${source:Version} and ${source:Upstream-Version} based on\nthe given version strings.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">These will\nnever be warned about when unused.</p>\n\n\n<p style=\"margin-left:11%;\">$s-&gt;<b>set_arch_substvars()</b></p>\n\n<p style=\"margin-left:23%;\">Defines architecture variables:\n${Arch}.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">This will never\nbe warned about when unused.</p>\n\n\n<p style=\"margin-left:11%;\">$s-&gt;<b>set_vendor_substvars()</b></p>\n\n<p style=\"margin-left:23%;\">Defines vendor variables:\n${vendor:Name} and ${vendor:Id}.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">These will\nnever be warned about when unused.</p>\n\n\n<p style=\"margin-left:11%;\">$s-&gt;<b>set_desc_substvars()</b></p>\n\n<p style=\"margin-left:23%;\">Defines source description\nvariables: ${source:Synopsis} and\n${source:Extended-Description}.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">These will\nnever be warned about when unused.</p>\n\n\n<p style=\"margin-left:11%;\">$s-&gt;set_field_substvars($ctrl,\n$prefix)</p>\n\n<p style=\"margin-left:23%;\">Defines field variables from a\nDpkg::Control object, with each variable having the form\n&quot;${$prefix:$field}&quot;.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">They will never\nbe warned about when unused.</p>\n\n<p style=\"margin-left:11%;\">$newstring =\n$s-&gt;substvars($string)</p>\n\n<p style=\"margin-left:23%;\">Substitutes variables in\n$string and return the result in $newstring.</p>\n\n\n<p style=\"margin-left:11%;\">$s-&gt;<b>warn_about_unused()</b></p>\n\n<p style=\"margin-left:23%;\">Issues warning about any\nvariables that were set, but not used.</p>\n\n\n<p style=\"margin-left:11%;\">$s-&gt;set_msg_prefix($prefix)</p>\n\n<p style=\"margin-left:23%;\">Define a prefix displayed\nbefore all warnings/error messages output by the module.</p>\n\n<p style=\"margin-left:11%;\">$s-&gt;filter(remove =&gt;\n$rmfunc) <br>\n$s-&gt;filter(keep =&gt; $keepfun)</p>\n\n<p style=\"margin-left:23%;\">Filter the substitution\nvariables, either removing or keeping all those that return\ntrue when $rmfunc-&gt;($key) or $keepfunc-&gt;($key) is\ncalled.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"6%\">\n\n\n<p>&quot;$s&quot;</p></td>\n<td width=\"6%\"></td>\n<td width=\"77%\">\n\n\n<p>Return a string representation of all substitutions\nvariables except the automatic ones.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\">$str = $s-&gt;output([$fh])</p>\n\n<p style=\"margin-left:23%;\">Return all substitutions\nvariables except the automatic ones. If $fh is passed print\nthem into the filehandle.</p>\n\n<p style=\"margin-left:11%;\">$s-&gt;save($file)</p>\n\n<p style=\"margin-left:23%;\">Store all substitutions\nvariables except the automatic ones in the indicated\nfile.</p>\n\n<h2>CHANGES\n<a name=\"CHANGES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 2.00\n(dpkg 1.20.0)</b> <br>\nRemove method: $s-&gt;<b>no_warn()</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">New method:\n$s-&gt;<b>set_vendor_substvars()</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.06\n(dpkg 1.19.0)</b> <br>\nNew method: $s-&gt;<b>set_desc_substvars()</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.05\n(dpkg 1.18.11)</b> <br>\nObsolete substvar: Emit an error on Source-Version substvar\nusage.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">New return:\n$s-&gt;<b>parse()</b> now returns the number of parsed\nsubstvars.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">New method:\n$s-&gt;<b>set_field_substvars()</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.04\n(dpkg 1.18.0)</b> <br>\nNew method: $s-&gt;<b>filter()</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.03\n(dpkg 1.17.11)</b> <br>\nNew method: $s-&gt;<b>set_as_auto()</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.02\n(dpkg 1.16.5)</b> <br>\nNew argument: Accept a $binaryversion in\n$s-&gt;<b>set_version_substvars()</b>, passing a single\nargument is still supported.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">New method:\n$s-&gt;<b>mark_as_used()</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Deprecated\nmethod: $s-&gt;<b>no_warn()</b>, use\n$s-&gt;<b>mark_as_used()</b> instead.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.01\n(dpkg 1.16.4)</b> <br>\nNew method: $s-&gt;<b>set_as_used()</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.00\n(dpkg 1.15.6)</b> <br>\nMark the module as public.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#METHODS\">METHODS</a>","<a href=\"#CHANGES\">CHANGES</a>"],"level":3}