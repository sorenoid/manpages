{"name":"getipnodebyname","description":"getipnodebyname,\ngetipnodebyaddr, freehostent - get network hostnames and\naddresses","body":"\n\n<h1 align=\"center\">GETIPNODEBYNAME</h1>\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">getipnodebyname,\ngetipnodebyaddr, freehostent - get network hostnames and\naddresses</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/types.h&gt; <br>\n#include &lt;sys/socket.h&gt; <br>\n#include &lt;netdb.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>struct\nhostent *getipnodebyname(const char *</b><i>name</i><b>,\nint</b> <i>af</i><b>, <br>\nint</b> <i>flags</i><b>, int\n*</b><i>error_num</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>struct\nhostent *getipnodebyaddr(const void *</b><i>addr</i><b>,\nsize_t</b> <i>len</i><b>, <br>\nint</b> <i>af</i><b>, int *</b><i>error_num</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>void\nfreehostent(struct hostent *</b><i>ip</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These functions\nare deprecated (and unavailable in glibc). Use\n<a href=\"https://man.page/3/getaddrinfo\">getaddrinfo(3)</a> and <a href=\"https://man.page/3/getnameinfo\">getnameinfo(3)</a> instead.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>getipnodebyname</b>() and <b>getipnodebyaddr</b>()\nfunctions return the names and addresses of a network host.\nThese functions return a pointer to the following\nstructure:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct hostent\n{ <br>\nchar *h_name; <br>\nchar **h_aliases; <br>\nint h_addrtype; <br>\nint h_length; <br>\nchar **h_addr_list; <br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">These functions\nreplace the <a href=\"https://man.page/3/gethostbyname\">gethostbyname(3)</a> and\n<a href=\"https://man.page/3/gethostbyaddr\">gethostbyaddr(3)</a> functions, which could access only\nthe IPv4 network address family. The\n<b>getipnodebyname</b>() and <b>getipnodebyaddr</b>()\nfunctions can access multiple network address families.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Unlike the\n<b>gethostby</b> functions, these functions return pointers\nto dynamically allocated memory. The <b>freehostent</b>()\nfunction is used to release the dynamically allocated memory\nafter the caller no longer needs the <i>hostent</i>\nstructure.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>getipnodebyname()\narguments</b> <br>\nThe <b>getipnodebyname</b>() function looks up network\naddresses for the host specified by the <i>name</i>\nargument. The <i>af</i> argument specifies one of the\nfollowing values: <b><br>\nAF_INET</b></p>\n\n<p style=\"margin-left:22%;\">The <i>name</i> argument points\nto a dotted-quad IPv4 address or a name of an IPv4 network\nhost.</p>\n\n<p style=\"margin-left:11%;\"><b>AF_INET6</b></p>\n\n<p style=\"margin-left:22%;\">The <i>name</i> argument points\nto a hexadecimal IPv6 address or a name of an IPv6 network\nhost.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>flags</i> argument specifies additional options. More\nthan one option can be specified by bitwise OR-ing them\ntogether. <i>flags</i> should be set to 0 if no options are\ndesired. <b><br>\nAI_V4MAPPED</b></p>\n\n<p style=\"margin-left:22%;\">This flag is used with\n<b>AF_INET6</b> to request a query for IPv4 addresses\ninstead of IPv6 addresses; the IPv4 addresses will be mapped\nto IPv6 addresses.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>AI_ALL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>This flag is used with <b>AI_V4MAPPED</b> to request a\nquery for both IPv4 and IPv6 addresses. Any IPv4 address\nfound will be mapped to an IPv6 address.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>AI_ADDRCONFIG</b></p>\n\n<p style=\"margin-left:22%;\">This flag is used with\n<b>AF_INET6</b> to further request that queries for IPv6\naddresses should not be made unless the system has at least\none IPv6 address assigned to a network interface, and that\nqueries for IPv4 addresses should not be made unless the\nsystem has at least one IPv4 address assigned to a network\ninterface. This flag may be used by itself or with the\n<b>AI_V4MAPPED</b> flag.</p>\n\n<p style=\"margin-left:11%;\"><b>AI_DEFAULT</b></p>\n\n<p style=\"margin-left:22%;\">This flag is equivalent to\n<b>(AI_ADDRCONFIG | AI_V4MAPPED)</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>getipnodebyaddr()\narguments</b> <br>\nThe <b>getipnodebyaddr</b>() function looks up the name of\nthe host whose network address is specified by the\n<i>addr</i> argument. The <i>af</i> argument specifies one\nof the following values: <b><br>\nAF_INET</b></p>\n\n<p style=\"margin-left:22%;\">The <i>addr</i> argument points\nto a <i>struct in_addr</i> and <i>len</i> must be set to\n<i>sizeof(struct in_addr)</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>AF_INET6</b></p>\n\n<p style=\"margin-left:22%;\">The <i>addr</i> argument points\nto a <i>struct in6_addr</i> and <i>len</i> must be set to\n<i>sizeof(struct in6_addr)</i>.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">NULL is\nreturned if an error occurred, and <i>error_num</i> will\ncontain an error code from the following list: <b><br>\nHOST_NOT_FOUND</b></p>\n\n<p style=\"margin-left:22%;\">The hostname or network address\nwas not found.</p>\n\n<p style=\"margin-left:11%;\"><b>NO_ADDRESS</b></p>\n\n<p style=\"margin-left:22%;\">The domain name server\nrecognized the network address or name, but no answer was\nreturned. This can happen if the network host has only IPv4\naddresses and a request has been made for IPv6 information\nonly, or vice versa.</p>\n\n<p style=\"margin-left:11%;\"><b>NO_RECOVERY</b></p>\n\n<p style=\"margin-left:22%;\">The domain name server returned\na permanent failure response.</p>\n\n<p style=\"margin-left:11%;\"><b>TRY_AGAIN</b></p>\n\n<p style=\"margin-left:22%;\">The domain name server returned\na temporary failure response. You might have better luck\nnext time.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A successful\nquery returns a pointer to a <i>hostent</i> structure that\ncontains the following fields:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><i>h_name</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>This is the official name of this network host.</p></td>\n<td width=\"6%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><i>h_aliases</i></p>\n\n<p style=\"margin-left:22%;\">This is an array of pointers to\nunofficial aliases for the same host. The array is\nterminated by a null pointer.</p>\n\n<p style=\"margin-left:11%;\"><i>h_addrtype</i></p>\n\n<p style=\"margin-left:22%;\">This is a copy of the <i>af</i>\nargument to <b>getipnodebyname</b>() or\n<b>getipnodebyaddr</b>(). <i>h_addrtype</i> will always be\n<b>AF_INET</b> if the <i>af</i> argument was <b>AF_INET</b>.\n<i>h_addrtype</i> will always be <b>AF_INET6</b> if the\n<i>af</i> argument was <b>AF_INET6</b>.</p>\n\n<p style=\"margin-left:11%;\"><i>h_length</i></p>\n\n<p style=\"margin-left:22%;\">This field will be set to\n<i>sizeof(struct in_addr)</i> if <i>h_addrtype</i> is\n<b>AF_INET</b>, and to <i>sizeof(struct in6_addr)</i> if\n<i>h_addrtype</i> is <b>AF_INET6</b>.</p>\n\n<p style=\"margin-left:11%;\"><i>h_addr_list</i></p>\n\n<p style=\"margin-left:22%;\">This is an array of one or more\npointers to network address structures for the network host.\nThe array is terminated by a null pointer.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">RFC&nbsp;2553.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These functions\nwere present in glibc 2.1.91-95, but were removed again.\nSeveral UNIX-like systems support them, but all call them\ndeprecated.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/getaddrinfo\">getaddrinfo(3)</a>,\n<a href=\"https://man.page/3/getnameinfo\">getnameinfo(3)</a>, <a href=\"https://man.page/3/inet_ntop\">inet_ntop(3)</a>,\n<a href=\"https://man.page/3/inet_pton\">inet_pton(3)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}