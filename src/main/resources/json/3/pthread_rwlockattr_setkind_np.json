{"name":"pthread_rwlockattr_setkind_np","description":"pthread_rwlockattr_setkind_np, pthread_rwlockattr_getkind_np - set/get the read-write lock kind of the thread read-write lock attribute object","body":"\n\n<h1 align=\"center\">PTHREAD_RWLOCKATTR_SETKIND_NP</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">pthread_rwlockattr_setkind_np,\npthread_rwlockattr_getkind_np - set/get the read-write lock\nkind of the thread read-write lock attribute object</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;pthread.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\npthread_rwlockattr_setkind_np(pthread_rwlockattr_t\n*</b><i>attr</i><b>, <br>\nint</b> <i>pref</i><b>); <br>\nint pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t\n*</b><i>attr</i><b>, <br>\nint *</b><i>pref</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Compile and\nlink with <i>-pthread</i>.</p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>pthread_rwlockattr_setkind_np</b>(),\n<b>pthread_rwlockattr_getkind_np</b>():</p>\n\n\n<p style=\"margin-left:17%;\">_XOPEN_SOURCE&nbsp;&gt;=&nbsp;500\n|| _POSIX_C_SOURCE &gt;= 200809L</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>pthread_rwlockattr_setkind_np</b>() function sets the\n&quot;lock kind&quot; attribute of the read-write lock\nattribute object referred to by <i>attr</i> to the value\nspecified in <i>pref</i>. The argument <i>pref</i> may be\nset to one of the following: <b><br>\nPTHREAD_RWLOCK_PREFER_READER_NP</b></p>\n\n<p style=\"margin-left:22%;\">This is the default. A thread\nmay hold multiple read locks; that is, read locks are\nrecursive. According to The Single Unix Specification, the\nbehavior is unspecified when a reader tries to place a lock,\nand there is no write lock but writers are waiting. Giving\npreference to the reader, as is set by\n<b>PTHREAD_RWLOCK_PREFER_READER_NP</b>, implies that the\nreader will receive the requested lock, even if a writer is\nwaiting. As long as there are readers, the writer will be\nstarved.</p>\n\n\n<p style=\"margin-left:11%;\"><b>PTHREAD_RWLOCK_PREFER_WRITER_NP</b></p>\n\n<p style=\"margin-left:22%;\">This is intended as the write\nlock analog of <b>PTHREAD_RWLOCK_PREFER_READER_NP</b>. This\nis ignored by glibc because the POSIX requirement to support\nrecursive read locks would cause this option to create\ntrivial deadlocks; instead use\n<b>PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP</b> which\nensures the application developer will not take recursive\nread locks thus avoiding deadlocks.</p>\n\n\n<p style=\"margin-left:11%;\"><b>PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP</b></p>\n\n<p style=\"margin-left:22%;\">Setting the lock kind to this\navoids writer starvation as long as any read locking is not\ndone in a recursive fashion.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>pthread_rwlockattr_getkind_np</b>() function returns the\nvalue of the lock kind attribute of the read-write lock\nattribute object referred to by <i>attr</i> in the pointer\n<i>pref</i>.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\nthese functions return 0. Given valid pointer arguments,\n<b>pthread_rwlockattr_getkind_np</b>() always succeeds. On\nerror, <b>pthread_rwlockattr_setkind_np</b>() returns a\nnonzero error number.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"55%\">\n\n\n<p style=\"margin-top: 1em\"><i>pref</i> specifies an\nunsupported value.</p></td>\n<td width=\"23%\">\n</td></tr>\n</table>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>pthread_rwlockattr_getkind_np</b>() and\n<b>pthread_rwlockattr_setkind_np</b>() functions first\nappeared in glibc 2.1.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These functions\nare non-standard GNU extensions; hence the suffix\n&quot;_np&quot; (nonportable) in the names.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/7/pthreads\">pthreads(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}