{"name":"fpclassify","description":"fpclassify,\nisfinite, isnormal, isnan, isinf - floating-point\nclassification macros","body":"\n\n<h1 align=\"center\">FPCLASSIFY</h1>\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">fpclassify,\nisfinite, isnormal, isnan, isinf - floating-point\nclassification macros</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;math.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nfpclassify(</b><i>x</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nisfinite(</b><i>x</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nisnormal(</b><i>x</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nisnan(</b><i>x</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nisinf(</b><i>x</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Link with\n<i>-lm</i>.</p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>fpclassify</b>(),\n<b>isfinite</b>(), <b>isnormal</b>():</p>\n\n<p style=\"margin-left:17%;\">_ISOC99_SOURCE ||\n_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200112L</p>\n\n<p style=\"margin-left:11%;\"><b>isnan</b>():</p>\n\n<p style=\"margin-left:17%;\">_ISOC99_SOURCE ||\n_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200112L <br>\n|| _XOPEN_SOURCE <br>\n|| /* Since glibc 2.19: */ _DEFAULT_SOURCE <br>\n|| /* Glibc versions &lt;= 2.19: */ _BSD_SOURCE ||\n_SVID_SOURCE</p>\n\n<p style=\"margin-left:11%;\"><b>isinf</b>():</p>\n\n<p style=\"margin-left:17%;\">_ISOC99_SOURCE ||\n_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200112L <br>\n|| /* Since glibc 2.19: */ _DEFAULT_SOURCE <br>\n|| /* Glibc versions &lt;= 2.19: */ _BSD_SOURCE ||\n_SVID_SOURCE</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Floating point\nnumbers can have special values, such as infinite or NaN.\nWith the macro <b>fpclassify(</b><i>x</i><b>)</b> you can\nfind out what type <i>x</i> is. The macro takes any\nfloating-point expression as argument. The result is one of\nthe following values:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"18%\">\n\n\n<p><b>FP_NAN</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p><i>x</i> is &quot;Not a Number&quot;.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"18%\">\n\n\n<p><b>FP_INFINITE</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p><i>x</i> is either positive infinity or negative\ninfinity.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"18%\">\n\n\n<p><b>FP_ZERO</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p><i>x</i> is zero.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"18%\">\n\n\n<p><b>FP_SUBNORMAL</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p><i>x</i> is too small to be represented in normalized\nformat.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"18%\">\n\n\n<p><b>FP_NORMAL</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"68%\">\n\n\n<p>if nothing of the above is correct then it must be a\nnormal floating-point number.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The other\nmacros provide a short answer to some standard\nquestions.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"17%\">\n\n\n\n<p style=\"margin-top: 1em\"><b>isfinite(</b><i>x</i><b>)</b></p> </td>\n<td width=\"4%\"></td>\n<td width=\"40%\">\n\n\n<p style=\"margin-top: 1em\">returns a nonzero value if</p></td>\n<td width=\"28%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:32%;\">(fpclassify(x) != FP_NAN\n&amp;&amp; fpclassify(x) != FP_INFINITE)</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"17%\">\n\n\n\n<p style=\"margin-top: 1em\"><b>isnormal(</b><i>x</i><b>)</b></p> </td>\n<td width=\"4%\"></td>\n<td width=\"68%\">\n\n\n<p style=\"margin-top: 1em\">returns a nonzero value if\n(fpclassify(x) == FP_NORMAL)</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"17%\">\n\n\n<p><b>isnan(</b><i>x</i><b>)</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"68%\">\n\n\n<p>returns a nonzero value if (fpclassify(x) == FP_NAN)</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"17%\">\n\n\n<p><b>isinf(</b><i>x</i><b>)</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"68%\">\n\n\n<p>returns 1 if <i>x</i> is positive infinity, and -1 if\n<i>x</i> is negative infinity.</p></td></tr>\n</table>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3325681.png\" alt=\"Image grohtml-3325681.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008, C99.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For\n<b>isinf</b>(), the standards merely say that the return\nvalue is nonzero if and only if the argument has an infinite\nvalue.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">In glibc 2.01\nand earlier, <b>isinf</b>() returns a nonzero value\n(actually: 1) if <i>x</i> is positive infinity or negative\ninfinity. (This is all that C99 requires.)</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/finite\">finite(3)</a>,\n<a href=\"https://man.page/3/INFINITY\">INFINITY(3)</a>, <a href=\"https://man.page/3/isgreater\">isgreater(3)</a>,\n<a href=\"https://man.page/3/signbit\">signbit(3)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}