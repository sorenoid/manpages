{"name":"getsubopt","description":"getsubopt - parse suboption arguments from a string","body":"\n\n<h1 align=\"center\">GETSUBOPT</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">getsubopt -\nparse suboption arguments from a string</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;stdlib.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\ngetsubopt(char **</b><i>optionp</i><b>, char * const\n*</b><i>tokens</i><b>, char **</b><i>valuep</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>getsubopt</b>():</p>\n\n<p style=\"margin-left:17%;\">_XOPEN_SOURCE&nbsp;&gt;= 500\n<br>\n|| /* Since glibc 2.12: */\n_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200809L</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>getsubopt</b>()\nparses the list of comma-separated suboptions provided in\n<i>optionp</i>. (Such a suboption list is typically produced\nwhen <a href=\"https://man.page/3/getopt\">getopt(3)</a> is used to parse a command line; see\nfor example the <i>-o</i> option of <b>mount</b>(8).) Each\nsuboption may include an associated value, which is\nseparated from the suboption name by an equal sign. The\nfollowing is an example of the kind of string that might be\npassed in <i>optionp</i>:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>ro,name=xyz</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>tokens</i> argument is a pointer to a NULL-terminated\narray of pointers to the tokens that <b>getsubopt</b>() will\nlook for in <i>optionp</i>. The tokens should be distinct,\nnull-terminated strings containing at least one character,\nwith no embedded equal signs or commas.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Each call to\n<b>getsubopt</b>() returns information about the next\nunprocessed suboption in <i>optionp</i>. The first equal\nsign in a suboption (if any) is interpreted as a separator\nbetween the name and the value of that suboption. The value\nextends to the next comma, or (for the last suboption) to\nthe end of the string. If the name of the suboption matches\na known name from <i>tokens</i>, and a value string was\nfound, <b>getsubopt</b>() sets <i>*valuep</i> to the address\nof that string. The first comma in <i>optionp</i> is\noverwritten with a null byte, so <i>*valuep</i> is precisely\nthe &quot;value string&quot; for that suboption.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\nsuboption is recognized, but no value string was found,\n<i>*valuep</i> is set to NULL.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When\n<b>getsubopt</b>() returns, <i>optionp</i> points to the\nnext suboption, or to the null byte ('\\0') at the end of the\nstring if the last suboption was just processed.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the first\nsuboption in <i>optionp</i> is recognized,\n<b>getsubopt</b>() returns the index of the matching\nsuboption element in <i>tokens</i>. Otherwise, -1 is\nreturned and <i>*valuep</i> is the entire\n<i>name</i><b>[=</b><i>value</i><b>]</b> string.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Since\n<i>*optionp</i> is changed, the first suboption before the\ncall to <b>getsubopt</b>() is not (necessarily) the same as\nthe first suboption after <b>getsubopt</b>().</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3407891.png\" alt=\"Image grohtml-3407891.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Since\n<b>getsubopt</b>() overwrites any commas it finds in the\nstring <i>*optionp</i>, that string must be writable; it\ncannot be a string constant.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nprogram expects suboptions following a &quot;-o&quot;\noption.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#define\n_XOPEN_SOURCE 500 <br>\n#include &lt;stdlib.h&gt; <br>\n#include &lt;assert.h&gt; <br>\n#include &lt;stdio.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(int argc, char **argv) <br>\n{ <br>\nenum { <br>\nRO_OPT = 0, <br>\nRW_OPT, <br>\nNAME_OPT <br>\n}; <br>\nchar *const token[] = { <br>\n[RO_OPT] = &quot;ro&quot;, <br>\n[RW_OPT] = &quot;rw&quot;, <br>\n[NAME_OPT] = &quot;name&quot;, <br>\nNULL <br>\n}; <br>\nchar *subopts; <br>\nchar *value; <br>\nint opt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int readonly =\n0; <br>\nint readwrite = 0; <br>\nchar *name = NULL; <br>\nint errfnd = 0;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">while ((opt =\ngetopt(argc, argv, &quot;o:&quot;)) != -1) { <br>\nswitch (opt) { <br>\ncase 'o': <br>\nsubopts = optarg; <br>\nwhile (*subopts != '\\0' &amp;&amp; !errfnd) {</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">switch\n(getsubopt(&amp;subopts, token, &amp;value)) { <br>\ncase RO_OPT: <br>\nreadonly = 1; <br>\nbreak;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">case RW_OPT:\n<br>\nreadwrite = 1; <br>\nbreak;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">case NAME_OPT:\n<br>\nif (value == NULL) { <br>\nfprintf(stderr, &quot;Missing value for &quot; <br>\n&quot;suboption '%s'\\n&quot;, token[NAME_OPT]); <br>\nerrfnd = 1; <br>\ncontinue; <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">name = value;\n<br>\nbreak;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">default: <br>\nfprintf(stderr, &quot;No match found &quot; <br>\n&quot;for token: /%s/\\n&quot;, value); <br>\nerrfnd = 1; <br>\nbreak; <br>\n} <br>\n} <br>\nif (readwrite &amp;&amp; readonly) { <br>\nfprintf(stderr, &quot;Only one of '%s' and '%s' can be\n&quot; <br>\n&quot;specified\\n&quot;, token[RO_OPT], token[RW_OPT]); <br>\nerrfnd = 1; <br>\n} <br>\nbreak;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">default: <br>\nerrfnd = 1; <br>\n} <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (errfnd ||\nargc == 1) { <br>\nfprintf(stderr, &quot;\\nUsage: %s -o\n&lt;suboptstring&gt;\\n&quot;, argv[0]); <br>\nfprintf(stderr, &quot;suboptions are 'ro', 'rw', &quot; <br>\n&quot;and 'name=&lt;value&gt;'\\n&quot;); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Remainder of\nprogram... */</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">exit(EXIT_SUCCESS);\n<br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/getopt\">getopt(3)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}