{"name":"gethostbyname","body":"\n\n<h1 align=\"center\">GETHOSTBYNAME</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gethostbyname,\ngethostbyaddr, sethostent, gethostent, endhostent, h_errno,\nherror, hstrerror, gethostbyaddr_r, gethostbyname2,\ngethostbyname2_r, gethostbyname_r, gethostent_r - get\nnetwork host entry</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;netdb.h&gt; <br>\nextern int h_errno;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>struct\nhostent *gethostbyname(const char\n*</b><i>name</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/socket.h&gt;</b> /* for AF_INET */ <b><br>\nstruct hostent *gethostbyaddr(const void\n*</b><i>addr</i><b>, <br>\nsocklen_t</b> <i>len</i><b>, int</b>\n<i>type</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>void\nsethostent(int</b> <i>stayopen</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>void\nendhostent(void);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>void\nherror(const char *</b><i>s</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>const char\n*hstrerror(int</b> <i>err</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* System\nV/POSIX extension */ <b><br>\nstruct hostent *gethostent(void);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* GNU\nextensions */ <b><br>\nstruct hostent *gethostbyname2(const char\n*</b><i>name</i><b>, int</b> <i>af</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\ngethostent_r( <br>\nstruct hostent *</b><i>ret</i><b>, char *</b><i>buf</i><b>,\nsize_t</b> <i>buflen</i><b>, <br>\nstruct hostent **</b><i>result</i><b>, int\n*</b><i>h_errnop</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\ngethostbyaddr_r(const void *</b><i>addr</i><b>,\nsocklen_t</b> <i>len</i><b>, int</b> <i>type</i><b>, <br>\nstruct hostent *</b><i>ret</i><b>, char *</b><i>buf</i><b>,\nsize_t</b> <i>buflen</i><b>, <br>\nstruct hostent **</b><i>result</i><b>, int\n*</b><i>h_errnop</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\ngethostbyname_r(const char *</b><i>name</i><b>, <br>\nstruct hostent *</b><i>ret</i><b>, char *</b><i>buf</i><b>,\nsize_t</b> <i>buflen</i><b>, <br>\nstruct hostent **</b><i>result</i><b>, int\n*</b><i>h_errnop</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\ngethostbyname2_r(const char *</b><i>name</i><b>, int</b>\n<i>af,</i> <b><br>\nstruct hostent *</b><i>ret</i><b>, char *</b><i>buf</i><b>,\nsize_t</b> <i>buflen</i><b>, <br>\nstruct hostent **</b><i>result</i><b>, int\n*</b><i>h_errnop</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>gethostbyname2</b>(),\n<b>gethostent_r</b>(), <b>gethostbyaddr_r</b>(),\n<b>gethostbyname_r</b>(), <b>gethostbyname2_r</b>():</p>\n\n<p style=\"margin-left:17%;\">Since glibc 2.19:</p>\n\n<p style=\"margin-left:23%;\">_DEFAULT_SOURCE</p>\n\n<p style=\"margin-left:17%;\">Glibc versions up to and\nincluding 2.19:</p>\n\n<p style=\"margin-left:23%;\">_BSD_SOURCE || _SVID_SOURCE</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>herror</b>(),\n<b>hstrerror</b>():</p>\n\n<p style=\"margin-left:17%;\">Since glibc 2.19:</p>\n\n<p style=\"margin-left:23%;\">_DEFAULT_SOURCE</p>\n\n<p style=\"margin-left:17%;\">Glibc 2.8 to 2.19:</p>\n\n<p style=\"margin-left:23%;\">_BSD_SOURCE || _SVID_SOURCE</p>\n\n<p style=\"margin-left:17%;\">Before glibc 2.8:</p>\n\n<p style=\"margin-left:23%;\">none</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>h_errno</b>:</p>\n\n<p style=\"margin-left:17%;\">Since glibc 2.19</p>\n\n<p style=\"margin-left:23%;\">_DEFAULT_SOURCE ||\n_POSIX_C_SOURCE &lt; 200809L</p>\n\n<p style=\"margin-left:17%;\">Glibc 2.12 to 2.19:</p>\n\n<p style=\"margin-left:23%;\">_BSD_SOURCE || _SVID_SOURCE ||\n_POSIX_C_SOURCE &lt; 200809L</p>\n\n<p style=\"margin-left:17%;\">Before glibc 2.12:</p>\n\n<p style=\"margin-left:23%;\">none</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>gethostbyname*</b>(), <b>gethostbyaddr*</b>(),\n<b>herror</b>(), and <b>hstrerror</b>() functions are\nobsolete. Applications should use <a href=\"https://man.page/3/getaddrinfo\">getaddrinfo(3)</a>,\n<a href=\"https://man.page/3/getnameinfo\">getnameinfo(3)</a>, and <a href=\"https://man.page/3/gai_strerror\">gai_strerror(3)</a>\ninstead.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>gethostbyname</b>() function returns a structure of type\n<i>hostent</i> for the given host <i>name</i>. Here\n<i>name</i> is either a hostname or an IPv4 address in\nstandard dot notation (as for <a href=\"https://man.page/3/inet_addr\">inet_addr(3)</a>). If\n<i>name</i> is an IPv4 address, no lookup is performed and\n<b>gethostbyname</b>() simply copies <i>name</i> into the\n<i>h_name</i> field and its <i>struct in_addr</i> equivalent\ninto the <i>h_addr_list[0]</i> field of the returned\n<i>hostent</i> structure. If <i>name</i> doesn&rsquo;t end\nin a dot and the environment variable <b>HOSTALIASES</b> is\nset, the alias file pointed to by <b>HOSTALIASES</b> will\nfirst be searched for <i>name</i> (see <a href=\"https://man.page/7/hostname\">hostname(7)</a>\nfor the file format). The current domain and its parents are\nsearched unless <i>name</i> ends in a dot.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>gethostbyaddr</b>() function returns a structure of type\n<i>hostent</i> for the given host address <i>addr</i> of\nlength <i>len</i> and address type <i>type</i>. Valid\naddress types are <b>AF_INET</b> and <b>AF_INET6</b>. The\nhost address argument is a pointer to a struct of a type\ndepending on the address type, for example a <i>struct\nin_addr *</i> (probably obtained via a call to\n<a href=\"https://man.page/3/inet_addr\">inet_addr(3)</a>) for address type <b>AF_INET</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>sethostent</b>() function specifies, if <i>stayopen</i>\nis true (1), that a connected TCP socket should be used for\nthe name server queries and that the connection should\nremain open during successive queries. Otherwise, name\nserver queries will use UDP datagrams.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>endhostent</b>() function ends the use of a TCP\nconnection for name server queries.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The (obsolete)\n<b>herror</b>() function prints the error message associated\nwith the current value of <i>h_errno</i> on\n<i>stderr</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The (obsolete)\n<b>hstrerror</b>() function takes an error number (typically\n<i>h_errno</i>) and returns the corresponding message\nstring.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The domain name\nqueries carried out by <b>gethostbyname</b>() and\n<b>gethostbyaddr</b>() rely on the Name Service Switch\n(<b>nsswitch.conf</b>(5)) configured sources or a local name\nserver (<b>named</b>(8)). The default action is to query the\nName Service Switch (<b>nsswitch.conf</b>(5)) configured\nsources, failing that, a local name server\n(<b>named</b>(8)).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Historical</b>\n<br>\nThe <b>nsswitch.conf</b>(5) file is the modern way of\ncontrolling the order of host lookups.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In glibc 2.4\nand earlier, the <i>order</i> keyword was used to control\nthe order of host lookups as defined in\n<i>/etc/host.conf</i> (<b>host.conf</b>(5)).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>hostent</i> structure is defined in\n<i>&lt;netdb.h&gt;</i> as follows:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct hostent\n{ <br>\nchar *h_name; /* official name of host */ <br>\nchar **h_aliases; /* alias list */ <br>\nint h_addrtype; /* host address type */ <br>\nint h_length; /* length of address */ <br>\nchar **h_addr_list; /* list of addresses */ <br>\n} <br>\n#define h_addr h_addr_list[0] /* for backward compatibility\n*/</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The members of\nthe <i>hostent</i> structure are:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><i>h_name</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"46%\">\n\n\n<p>The official name of the host.</p></td>\n<td width=\"32%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><i>h_aliases</i></p>\n\n<p style=\"margin-left:22%;\">An array of alternative names\nfor the host, terminated by a null pointer.</p>\n\n<p style=\"margin-left:11%;\"><i>h_addrtype</i></p>\n\n<p style=\"margin-left:22%;\">The type of address; always\n<b>AF_INET</b> or <b>AF_INET6</b> at present.</p>\n\n<p style=\"margin-left:11%;\"><i>h_length</i></p>\n\n<p style=\"margin-left:22%;\">The length of the address in\nbytes.</p>\n\n<p style=\"margin-left:11%;\"><i>h_addr_list</i></p>\n\n<p style=\"margin-left:22%;\">An array of pointers to network\naddresses for the host (in network byte order), terminated\nby a null pointer.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><i>h_addr</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The first address in <i>h_addr_list</i> for backward\ncompatibility.</p> </td></tr>\n</table>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>gethostbyname</b>() and <b>gethostbyaddr</b>() functions\nreturn the <i>hostent</i> structure or a null pointer if an\nerror occurs. On error, the <i>h_errno</i> variable holds an\nerror number. When non-NULL, the return value may point at\nstatic data, see the notes below.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The variable\n<i>h_errno</i> can have the following values: <b><br>\nHOST_NOT_FOUND</b></p>\n\n<p style=\"margin-left:22%;\">The specified host is\nunknown.</p>\n\n<p style=\"margin-left:11%;\"><b>NO_DATA</b></p>\n\n<p style=\"margin-left:22%;\">The requested name is valid but\ndoes not have an IP address. Another type of request to the\nname server for this domain may return an answer. The\nconstant <b>NO_ADDRESS</b> is a synonym for\n<b>NO_DATA</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>NO_RECOVERY</b></p>\n\n<p style=\"margin-left:22%;\">A nonrecoverable name server\nerror occurred.</p>\n\n<p style=\"margin-left:11%;\"><b>TRY_AGAIN</b></p>\n\n<p style=\"margin-left:22%;\">A temporary error occurred on\nan authoritative name server. Try again later.</p>\n\n<h2>FILES\n<a name=\"FILES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>/etc/host.conf</i></p>\n\n<p style=\"margin-left:22%;\">resolver configuration file</p>\n\n<p style=\"margin-left:11%;\"><i>/etc/hosts</i></p>\n\n<p style=\"margin-left:22%;\">host database file</p>\n\n<p style=\"margin-left:11%;\"><i>/etc/nsswitch.conf</i></p>\n\n<p style=\"margin-left:22%;\">name service switch\nconfiguration</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3432551.png\" alt=\"Image grohtml-3432551.png\"></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the above\ntable, <i>hostent</i> in <i>race:hostent</i> signifies that\nif any of the functions <b>sethostent</b>(),\n<b>gethostent</b>(), <b>gethostent_r</b>(), or\n<b>endhostent</b>() are used in parallel in different\nthreads of a program, then data races could occur.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001\nspecifies <b>gethostbyname</b>(), <b>gethostbyaddr</b>(),\n<b>sethostent</b>(), <b>endhostent</b>(),\n<b>gethostent</b>(), and <i>h_errno</i>;\n<b>gethostbyname</b>(), <b>gethostbyaddr</b>(), and\n<i>h_errno</i> are marked obsolescent in that standard.\nPOSIX.1-2008 removes the specifications of\n<b>gethostbyname</b>(), <b>gethostbyaddr</b>(), and\n<i>h_errno</i>, recommending the use of\n<a href=\"https://man.page/3/getaddrinfo\">getaddrinfo(3)</a> and <a href=\"https://man.page/3/getnameinfo\">getnameinfo(3)</a> instead.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The functions\n<b>gethostbyname</b>() and <b>gethostbyaddr</b>() may return\npointers to static data, which may be overwritten by later\ncalls. Copying the <i>struct hostent</i> does not suffice,\nsince it contains pointers; a deep copy is required.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the original\nBSD implementation the <i>len</i> argument of\n<b>gethostbyname</b>() was an <i>int</i>. The SUSv2 standard\nis buggy and declares the <i>len</i> argument of\n<b>gethostbyaddr</b>() to be of type <i>size_t</i>. (That is\nwrong, because it has to be <i>int</i>, and <i>size_t</i> is\nnot. POSIX.1-2001 makes it <i>socklen_t</i>, which is OK.)\nSee also <a href=\"https://man.page/2/accept\">accept(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The BSD\nprototype for <b>gethostbyaddr</b>() uses <i>const\nchar&nbsp;*</i> for the first argument.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>System\nV/POSIX extension</b> <br>\nPOSIX requires the <b>gethostent</b>() call, which should\nreturn the next entry in the host data base. When using\nDNS/BIND this does not make much sense, but it may be\nreasonable if the host data base is a file that can be read\nline by line. On many systems, a routine of this name reads\nfrom the file <i>/etc/hosts</i>. It may be available only\nwhen the library was built without DNS support. The glibc\nversion will ignore ipv6 entries. This function is not\nreentrant, and glibc adds a reentrant version\n<b>gethostent_r</b>().</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>GNU\nextensions</b> <br>\nGlibc2 also has a <b>gethostbyname2</b>() that works like\n<b>gethostbyname</b>(), but permits to specify the address\nfamily to which the address must belong.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Glibc2 also has\nreentrant versions <b>gethostent_r</b>(),\n<b>gethostbyaddr_r</b>(), <b>gethostbyname_r</b>(), and\n<b>gethostbyname2_r</b>(). The caller supplies a\n<i>hostent</i> structure <i>ret</i> which will be filled in\non success, and a temporary work buffer <i>buf</i> of size\n<i>buflen</i>. After the call, <i>result</i> will point to\nthe result on success. In case of an error or if no entry is\nfound <i>result</i> will be NULL. The functions return 0 on\nsuccess and a nonzero error number on failure. In addition\nto the errors returned by the nonreentrant versions of these\nfunctions, if <i>buf</i> is too small, the functions will\nreturn <b>ERANGE</b>, and the call should be retried with a\nlarger buffer. The global variable <i>h_errno</i> is not\nmodified, but the address of a variable in which to store\nerror numbers is passed in <i>h_errnop</i>.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>gethostbyname</b>()\ndoes not recognize components of a dotted IPv4 address\nstring that are expressed in hexadecimal.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/getaddrinfo\">getaddrinfo(3)</a>,\n<a href=\"https://man.page/3/getnameinfo\">getnameinfo(3)</a>, <a href=\"https://man.page/3/inet\">inet(3)</a>, <a href=\"https://man.page/3/inet_ntop\">inet_ntop(3)</a>,\n<a href=\"https://man.page/3/inet_pton\">inet_pton(3)</a>, <a href=\"https://man.page/3/resolver\">resolver(3)</a>, <a href=\"https://man.page/5/hosts\">hosts(5)</a>,\n<b>nsswitch.conf</b>(5), <a href=\"https://man.page/7/hostname\">hostname(7)</a>,\n<b>named</b>(8)</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#FILES\">FILES</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}