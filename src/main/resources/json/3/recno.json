{"name":"recno","body":"\n\n<h1 align=\"center\">RECNO</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">recno - record\nnumber database access method</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/types.h&gt; <br>\n#include &lt;db.h&gt;</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><i>Note\nwell</i></b>: This page documents interfaces provided in\nglibc up until version 2.1. Since version 2.2, glibc no\nlonger provides these interfaces. Probably, you are looking\nfor the APIs provided by the <i>libdb</i> library\ninstead.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The routine\n<a href=\"https://man.page/3/dbopen\">dbopen(3)</a> is the library interface to database files.\nOne of the supported file formats is record number files.\nThe general description of the database access methods is in\n<a href=\"https://man.page/3/dbopen\">dbopen(3)</a>, this manual page describes only the\nrecno-specific information.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The record\nnumber data structure is either variable or fixed-length\nrecords stored in a flat-file format, accessed by the\nlogical record number. The existence of record number five\nimplies the existence of records one through four, and the\ndeletion of record number one causes record number five to\nbe renumbered to record number four, as well as the cursor,\nif positioned after record number one, to shift down one\nrecord.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The recno\naccess-method-specific data structure provided to\n<a href=\"https://man.page/3/dbopen\">dbopen(3)</a> is defined in the <i>&lt;db.h&gt;</i>\ninclude file as follows:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">typedef struct\n{ <br>\nunsigned long flags; <br>\nunsigned int cachesize; <br>\nunsigned int psize; <br>\nint lorder; <br>\nsize_t reclen; <br>\nunsigned char bval; <br>\nchar *bfname; <br>\n} RECNOINFO;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The elements of\nthis structure are defined as follows:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><i>flags</i></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>The flag value is specified by ORing any of the\nfollowing values:</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%;\"><b>R_FIXEDLEN</b></p>\n\n<p style=\"margin-left:32%;\">The records are fixed-length,\nnot byte delimited. The structure element <i>reclen</i>\nspecifies the length of the record, and the structure\nelement <i>bval</i> is used as the pad character. Any\nrecords, inserted into the database, that are less than\n<i>reclen</i> bytes long are automatically padded.</p>\n\n<p style=\"margin-left:22%;\"><b>R_NOKEY</b></p>\n\n<p style=\"margin-left:32%;\">In the interface specified by\n<a href=\"https://man.page/3/dbopen\">dbopen(3)</a>, the sequential record retrieval fills in\nboth the caller&rsquo;s key and data structures. If the\n<b>R_NOKEY</b> flag is specified, the <i>cursor</i> routines\nare not required to fill in the key structure. This permits\napplications to retrieve records at the end of files without\nreading all of the intervening records.</p>\n\n<p style=\"margin-left:22%;\"><b>R_SNAPSHOT</b></p>\n\n<p style=\"margin-left:32%;\">This flag requires that a\nsnapshot of the file be taken when <a href=\"https://man.page/3/dbopen\">dbopen(3)</a> is\ncalled, instead of permitting any unmodified records to be\nread from the original file.</p>\n\n<p style=\"margin-left:11%;\"><i>cachesize</i></p>\n\n<p style=\"margin-left:22%;\">A suggested maximum size, in\nbytes, of the memory cache. This value is <b>only</b>\nadvisory, and the access method will allocate more memory\nrather than fail. If <i>cachesize</i> is 0 (no size is\nspecified), a default cache is used.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><i>psize</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The recno access method stores the in-memory copies of\nits records in a btree. This value is the size (in bytes) of\nthe pages used for nodes in that tree. If <i>psize</i> is 0\n(no page size is specified), a page size is chosen based on\nthe underlying filesystem I/O block size. See\n<a href=\"https://man.page/3/btree\">btree(3)</a> for more information.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><i>lorder</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The byte order for integers in the stored database\nmetadata. The number should represent the order as an\ninteger; for example, big endian order would be the number\n4,321. If <i>lorder</i> is 0 (no order is specified), the\ncurrent host order is used.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><i>reclen</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The length of a fixed-length record.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><i>bval</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The delimiting byte to be used to mark the end of a\nrecord for variable-length records, and the pad character\nfor fixed-length records. If no value is specified, newlines\n(&quot;\\n&quot;) are used to mark the end of variable-length\nrecords and fixed-length records are padded with spaces.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><i>bfname</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The recno access method stores the in-memory copies of\nits records in a btree. If <i>bfname</i> is non-NULL, it\nspecifies the name of the btree file, as if specified as the\nfilename for a <a href=\"https://man.page/3/dbopen\">dbopen(3)</a> of a btree file.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The data part\nof the key/data pair used by the <i>recno</i> access method\nis the same as other access methods. The key is different.\nThe <i>data</i> field of the key should be a pointer to a\nmemory location of type <i>recno_t</i>, as defined in the\n<i>&lt;db.h&gt;</i> include file. This type is normally the\nlargest unsigned integral type available to the\nimplementation. The <i>size</i> field of the key should be\nthe size of that type.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Because there\ncan be no metadata associated with the underlying recno\naccess method files, any changes made to the default values\n(e.g., fixed record length or byte separator value) must be\nexplicitly specified each time the file is opened.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the\ninterface specified by <a href=\"https://man.page/3/dbopen\">dbopen(3)</a>, using the\n<i>put</i> interface to create a new record will cause the\ncreation of multiple, empty records if the record number is\nmore than one greater than the largest record currently in\nthe database.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>recno</i> access method routines may fail and set\n<i>errno</i> for any of the errors specified for the library\nroutine <a href=\"https://man.page/3/dbopen\">dbopen(3)</a> or the following:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">An attempt was made to add a\nrecord to a fixed-length database that was too large to\nfit.</p> </td></tr>\n</table>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Only big and\nlittle endian byte order is supported.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/btree\">btree(3)</a>,\n<a href=\"https://man.page/3/dbopen\">dbopen(3)</a>, <a href=\"https://man.page/3/hash\">hash(3)</a>, <a href=\"https://man.page/3/mpool\">mpool(3)</a></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Document\nProcessing in a Relational Database System</i>, Michael\nStonebraker, Heidi Stettner, Joseph Kalash, Antonin Guttman,\nNadene Lynn, Memorandum No. UCB/ERL M82/32, May 1982.</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}