{"name":"newlocale","description":"newlocale, freelocale - create, modify, and free a locale object","body":"\n\n<h1 align=\"center\">NEWLOCALE</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">newlocale,\nfreelocale - create, modify, and free a locale object</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;locale.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>locale_t\nnewlocale(int</b> <i>category_mask</i><b>, const char\n*</b><i>locale</i><b>, <br>\nlocale_t</b> <i>base</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>void\nfreelocale(locale_t</b> <i>locobj</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>newlocale</b>(),\n<b>freelocale</b>():</p>\n\n<p style=\"margin-left:17%;\">Since glibc 2.10:</p>\n\n\n<p style=\"margin-left:28%;\">_XOPEN_SOURCE&nbsp;&gt;=&nbsp;700</p>\n\n<p style=\"margin-left:17%;\">Before glibc 2.10:</p>\n\n<p style=\"margin-left:28%;\">_GNU_SOURCE</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>newlocale</b>() function creates a new locale object, or\nmodifies an existing object, returning a reference to the\nnew or modified object as the function result. Whether the\ncall creates a new object or modifies an existing object is\ndetermined by the value of <i>base</i>:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>If <i>base</i> is <i>(locale_t)&nbsp;0</i>, a new object\nis created.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>If <i>base</i> refers to valid existing locale object\n(i.e., an object returned by a previous call to\n<b>newlocale</b>() or <a href=\"https://man.page/3/duplocale\">duplocale(3)</a>), then that object\nis modified by the call. If the call is successful, the\ncontents of <i>base</i> are unspecified (in particular, the\nobject referred to by <i>base</i> may be freed, and a new\nobject created). Therefore, the caller should ensure that it\nstops using <i>base</i> before the call to\n<b>newlocale</b>(), and should subsequently refer to the\nmodified object via the reference returned as the function\nresult. If the call fails, the contents of <i>base</i>\nremain valid and unchanged.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If <i>base</i>\nis the special locale object <b>LC_GLOBAL_LOCALE</b> (see\n<a href=\"https://man.page/3/duplocale\">duplocale(3)</a>), or is not <i>(locale_t)&nbsp;0</i> and\nis not a valid locale object handle, the behavior is\nundefined.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>category_mask</i> argument is a bit mask that specifies\nthe locale categories that are to be set in a newly created\nlocale object or modified in an existing object. The mask is\nconstructed by a bitwise OR of the constants\n<b>LC_ADDRESS_MASK</b>, <b>LC_CTYPE_MASK</b>,\n<b>LC_COLLATE_MASK</b>, <b>LC_IDENTIFICATION_MASK</b>,\n<b>LC_MEASUREMENT_MASK</b>, <b>LC_MESSAGES_MASK</b>,\n<b>LC_MONETARY_MASK</b>, <b>LC_NUMERIC_MASK</b>,\n<b>LC_NAME_MASK</b>, <b>LC_PAPER_MASK</b>,\n<b>LC_TELEPHONE_MASK</b>, and <b>LC_TIME_MASK</b>.\nAlternatively, the mask can be specified as\n<b>LC_ALL_MASK</b>, which is equivalent to ORing all of the\npreceding constants.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For each\ncategory specified in <i>category_mask</i>, the locale data\nfrom <i>locale</i> will be used in the object returned by\n<b>newlocale</b>(). If a new locale object is being created,\ndata for all categories not specified in\n<i>category_mask</i> is taken from the default\n(&quot;POSIX&quot;) locale.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\npreset values of <i>locale</i> are defined for all\ncategories that can be specified in <i>category_mask</i>:\n<br>\n&quot;POSIX&quot;</p>\n\n<p style=\"margin-left:22%;\">A minimal locale environment\nfor C language programs.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p>&quot;C&quot;</p></td>\n<td width=\"7%\"></td>\n<td width=\"78%\">\n\n\n<p>Equivalent to &quot;POSIX&quot;.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"4%\">\n\n\n<p>&quot;&quot;</p></td>\n<td width=\"7%\"></td>\n<td width=\"78%\">\n\n\n<p>An implementation-defined native environment\ncorresponding to the values of the <b>LC_*</b> and\n<b>LANG</b> environment variables (see\n<a href=\"https://man.page/7/locale\">locale(7)</a>).</p> </td></tr>\n</table>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>freelocale()</b>\n<br>\nThe <b>freelocale</b>() function deallocates the resources\nassociated with <i>locobj</i>, a locale object previously\nreturned by a call to <b>newlocale</b>() or\n<a href=\"https://man.page/3/duplocale\">duplocale(3)</a>. If <i>locobj</i> is\n<b>LC_GLOBAL_LOCALE</b> or is not valid locale object\nhandle, the results are undefined.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Once a locale\nobject has been freed, the program should make no further\nuse of it.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\n<b>newlocale</b>() returns a handle that can be used in\ncalls to <a href=\"https://man.page/3/duplocale\">duplocale(3)</a>, <b>freelocale</b>(), and other\nfunctions that take a <i>locale_t</i> argument. On error,\n<b>newlocale</b>() returns <i>(locale_t)&nbsp;0</i>, and\nsets <i>errno</i> to indicate the cause of the error.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">One or more bits in\n<i>category_mask</i> do not correspond to a valid locale\ncategory.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>locale</i> is NULL.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOENT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>locale</i> is not a string pointer referring to a\nvalid locale.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOMEM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Insufficient memory to create a locale object.</p></td></tr>\n</table>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>newlocale</b>() and <b>freelocale</b>() functions first\nappeared in version 2.3 of the GNU C library.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2008.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Each locale\nobject created by <b>newlocale</b>() should be deallocated\nusing <b>freelocale</b>().</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The program\nbelow takes up to two command-line arguments, which each\nidentify locales. The first argument is required, and is\nused to set the <b>LC_NUMERIC</b> category in a locale\nobject created using <b>newlocale</b>(). The second\ncommand-line argument is optional; if it is present, it is\nused to set the <b>LC_TIME</b> category of the locale\nobject.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Having created\nand initialized the locale object, the program then applies\nit using <a href=\"https://man.page/3/uselocale\">uselocale(3)</a>, and then tests the effect of\nthe locale changes by:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\">1.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p style=\"margin-top: 1em\">Displaying a floating-point\nnumber with a fractional part. This output will be affected\nby the <b>LC_NUMERIC</b> setting. In many European-language\nlocales, the fractional part of the number is separated from\nthe integer part using a comma, rather than a period.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>2.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>Displaying the date. The format and language of the\noutput will be affected by the <b>LC_TIME</b> setting.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nshell sessions show some example runs of this program.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Set the\n<b>LC_NUMERIC</b> category to <i>fr_FR</i> (French):</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ <b>./a.out\nfr_FR</b> <br>\n123456,789 <br>\nFri Mar 7 00:25:08 2014</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Set the\n<b>LC_NUMERIC</b> category to <i>fr_FR</i> (French), and the\n<b>LC_TIME</b> category to <i>it_IT</i> (Italian):</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ <b>./a.out\nfr_FR it_IT</b> <br>\n123456,789 <br>\nven 07 mar 2014 00:26:01 CET</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Specify the\n<b>LC_TIME</b> setting as an empty string, which causes the\nvalue to be taken from environment variable settings (which,\nhere, specify <i>mi_NZ</i>, New Zealand M&Auml;ori):</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ LC_ALL=mi_NZ\n./a.out fr_FR &quot;&quot; <br>\n123456,789 <br>\nTe Paraire, te 07 o Pout&Aring;&laquo;-te-rangi, 2014\n00:38:44 CET</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Program\nsource</b> <br>\n#define _XOPEN_SOURCE 700 <br>\n#include &lt;stdio.h&gt; <br>\n#include &lt;stdlib.h&gt; <br>\n#include &lt;locale.h&gt; <br>\n#include &lt;time.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#define\nerrExit(msg) do { perror(msg); exit(EXIT_FAILURE); \\ <br>\n} while (0)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(int argc, char *argv[]) <br>\n{ <br>\nchar buf[100]; <br>\ntime_t t; <br>\nsize_t s; <br>\nstruct tm *tm; <br>\nlocale_t loc, nloc;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (argc &lt;\n2) { <br>\nfprintf(stderr, &quot;Usage: %s locale1 [locale2]\\n&quot;,\nargv[0]); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Create a new\nlocale object, taking the LC_NUMERIC settings <br>\nfrom the locale specified in argv[1] */</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">loc =\nnewlocale(LC_NUMERIC_MASK, argv[1], (locale_t) 0); <br>\nif (loc == (locale_t) 0) <br>\nerrExit(&quot;newlocale&quot;);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* If a second\ncommand-line argument was specified, modify the <br>\nlocale object to take the LC_TIME settings from the locale\n<br>\nspecified in argv[2]. We assign the result of this\nnewlocale() <br>\ncall to 'nloc' rather than 'loc', since in some cases, we\nmight <br>\nwant to preserve 'loc' if this call fails. */</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (argc &gt;\n2) { <br>\nnloc = newlocale(LC_TIME_MASK, argv[2], loc); <br>\nif (nloc == (locale_t) 0) <br>\nerrExit(&quot;newlocale&quot;); <br>\nloc = nloc; <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Apply the\nnewly created locale to this thread */</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">uselocale(loc);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Test effect\nof LC_NUMERIC */</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">printf(&quot;%8.3f\\n&quot;,\n123456.789);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Test effect\nof LC_TIME */</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">t = time(NULL);\n<br>\ntm = localtime(&amp;t); <br>\nif (tm == NULL) <br>\nerrExit(&quot;time&quot;);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">s =\nstrftime(buf, sizeof(buf), &quot;%c&quot;, tm); <br>\nif (s == 0) <br>\nerrExit(&quot;strftime&quot;);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">printf(&quot;%s\\n&quot;,\nbuf);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Free the\nlocale object */</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">uselocale(LC_GLOBAL_HANDLE);\n/* So 'loc' is no longer in use */ <br>\nfreelocale(loc);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">exit(EXIT_SUCCESS);\n<br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/locale\">locale(1)</a>,\n<a href=\"https://man.page/3/duplocale\">duplocale(3)</a>, <a href=\"https://man.page/3/setlocale\">setlocale(3)</a>,\n<a href=\"https://man.page/3/uselocale\">uselocale(3)</a>, <a href=\"https://man.page/5/locale\">locale(5)</a>, <a href=\"https://man.page/7/locale\">locale(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}