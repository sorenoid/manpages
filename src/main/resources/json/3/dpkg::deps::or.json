{"name":"dpkg::deps::or","description":"Dpkg::Deps::OR\n- list of OR dependencies\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\nThis class\nrepresents a list of dependencies of which only one must be\nmet for the dependency to be true. It inherits from\nDpkg::Deps::Multiple.\n\n<h2>METHODS\n<a name=\"METHODS\"></a>\n</h2>\n\n\n\n$dep-&gt;output([$fh])\n\n<p style=\"margin-left:17%;\">The output method uses &quot; |\n&quot; to join the list of sub-dependencies.\n\n\n<p style=\"margin-left:11%;\">$dep-&gt;implies($other_dep)\n\n<p style=\"margin-left:17%;\">Returns 1 when $dep implies\n$other_dep. Returns 0 when $dep implies <small>NOT</small>\n($other_dep). Returns undef when there&rsquo;s no\nimplication. $dep and $other_dep do not need to be of the\nsame type.\n\n\n<p style=\"margin-left:11%;\">$dep-&gt;get_evaluation($facts)\n\n<p style=\"margin-left:17%;\">Evaluates the dependency given\na list of installed packages and a list of virtual packages\nprovided. These lists are part of the Dpkg::Deps::KnownFacts\nobject given as parameters.\n\n<p style=\"margin-left:17%; margin-top: 1em\">Returns 1 when\nit&rsquo;s true, 0 when it&rsquo;s false, undef when some\ninformation is lacking to conclude.\n\n<p style=\"margin-left:11%;\">$dep-&gt;simplify_deps($facts,\n@assumed_deps)\n\n<p style=\"margin-left:17%;\">Simplifies the dependency as\nmuch as possible given the list of facts (see object\nDpkg::Deps::KnownFacts) and a list of other dependencies\nthat are known to be true.\n\n<h2>CHANGES\n<a name=\"CHANGES\"></a>\n</h2>\n\n\n<b>Version 1.00\n(dpkg 1.15.6)</b> <br>\nMark the module as public.","body":"\n\n<h1 align=\"center\">Dpkg::Deps::OR</h1>\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Dpkg::Deps::OR\n- list of OR dependencies</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This class\nrepresents a list of dependencies of which only one must be\nmet for the dependency to be true. It inherits from\nDpkg::Deps::Multiple.</p>\n\n<h2>METHODS\n<a name=\"METHODS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$dep-&gt;output([$fh])</p>\n\n<p style=\"margin-left:17%;\">The output method uses &quot; |\n&quot; to join the list of sub-dependencies.</p>\n\n\n<p style=\"margin-left:11%;\">$dep-&gt;implies($other_dep)</p>\n\n<p style=\"margin-left:17%;\">Returns 1 when $dep implies\n$other_dep. Returns 0 when $dep implies <small>NOT</small>\n($other_dep). Returns undef when there&rsquo;s no\nimplication. $dep and $other_dep do not need to be of the\nsame type.</p>\n\n\n<p style=\"margin-left:11%;\">$dep-&gt;get_evaluation($facts)</p>\n\n<p style=\"margin-left:17%;\">Evaluates the dependency given\na list of installed packages and a list of virtual packages\nprovided. These lists are part of the Dpkg::Deps::KnownFacts\nobject given as parameters.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Returns 1 when\nit&rsquo;s true, 0 when it&rsquo;s false, undef when some\ninformation is lacking to conclude.</p>\n\n<p style=\"margin-left:11%;\">$dep-&gt;simplify_deps($facts,\n@assumed_deps)</p>\n\n<p style=\"margin-left:17%;\">Simplifies the dependency as\nmuch as possible given the list of facts (see object\nDpkg::Deps::KnownFacts) and a list of other dependencies\nthat are known to be true.</p>\n\n<h2>CHANGES\n<a name=\"CHANGES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.00\n(dpkg 1.15.6)</b> <br>\nMark the module as public.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#METHODS\">METHODS</a>","<a href=\"#CHANGES\">CHANGES</a>"],"level":3}