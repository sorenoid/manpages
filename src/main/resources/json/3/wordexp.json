{"name":"wordexp","body":"\n\n<h1 align=\"center\">WORDEXP</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">wordexp,\nwordfree - perform word expansion like a posix-shell</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;wordexp.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nwordexp(const char *</b><i>s</i><b>, wordexp_t\n*</b><i>p</i><b>, int</b> <i>flags</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>void\nwordfree(wordexp_t *</b><i>p</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>wordexp</b>(),\n<b>wordfree</b>(): _XOPEN_SOURCE</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The function\n<b>wordexp</b>() performs a shell-like expansion of the\nstring <i>s</i> and returns the result in the structure\npointed to by <i>p</i>. The data type <i>wordexp_t</i> is a\nstructure that at least has the fields <i>we_wordc</i>,\n<i>we_wordv</i>, and <i>we_offs</i>. The field\n<i>we_wordc</i> is a <i>size_t</i> that gives the number of\nwords in the expansion of <i>s</i>. The field\n<i>we_wordv</i> is a <i>char&nbsp;**</i> that points to the\narray of words found. The field <i>we_offs</i> of type\n<i>size_t</i> is sometimes (depending on <i>flags</i>, see\nbelow) used to indicate the number of initial elements in\nthe <i>we_wordv</i> array that should be filled with\nNULLs.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The function\n<b>wordfree</b>() frees the allocated memory again. More\nprecisely, it does not free its argument, but it frees the\narray <i>we_wordv</i> and the strings that points to.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The string\nargument</b> <br>\nSince the expansion is the same as the expansion by the\nshell (see <a href=\"https://man.page/1/sh\">sh(1)</a>) of the parameters to a command, the\nstring <i>s</i> must not contain characters that would be\nillegal in shell command parameters. In particular, there\nmust not be any unescaped newline or |, &amp;, ;, &lt;,\n&gt;, (, ), {, } characters outside a command substitution\nor parameter substitution context.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the argument\n<i>s</i> contains a word that starts with an unquoted\ncomment character #, then it is unspecified whether that\nword and all following words are ignored, or the # is\ntreated as a non-comment character.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The\nexpansion</b> <br>\nThe expansion done consists of the following stages: tilde\nexpansion (replacing ~user by user&rsquo;s home directory),\nvariable substitution (replacing $FOO by the value of the\nenvironment variable FOO), command substitution (replacing\n$(command) or `command` by the output of command),\narithmetic expansion, field splitting, wildcard expansion,\nquote removal.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The result of\nexpansion of special parameters ($@, $*, $#, $?, $-, $$, $!,\n$0) is unspecified.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Field splitting\nis done using the environment variable $IFS. If it is not\nset, the field separators are space, tab and newline.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The output\narray</b> <br>\nThe array <i>we_wordv</i> contains the words found, followed\nby a NULL.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The flags\nargument</b> <br>\nThe <i>flag</i> argument is a bitwise inclusive OR of the\nfollowing values: <b><br>\nWRDE_APPEND</b></p>\n\n<p style=\"margin-left:22%;\">Append the words found to the\narray resulting from a previous call.</p>\n\n<p style=\"margin-left:11%;\"><b>WRDE_DOOFFS</b></p>\n\n<p style=\"margin-left:22%;\">Insert <i>we_offs</i> initial\nNULLs in the array <i>we_wordv</i>. (These are not counted\nin the returned <i>we_wordc</i>.)</p>\n\n<p style=\"margin-left:11%;\"><b>WRDE_NOCMD</b></p>\n\n<p style=\"margin-left:22%;\">Don&rsquo;t do command\nsubstitution.</p>\n\n<p style=\"margin-left:11%;\"><b>WRDE_REUSE</b></p>\n\n<p style=\"margin-left:22%;\">The argument <i>p</i> resulted\nfrom a previous call to <b>wordexp</b>(), and\n<b>wordfree</b>() was not called. Reuse the allocated\nstorage.</p>\n\n<p style=\"margin-left:11%;\"><b>WRDE_SHOWERR</b></p>\n\n<p style=\"margin-left:22%;\">Normally during command\nsubstitution <i>stderr</i> is redirected to\n<i>/dev/null</i>. This flag specifies that <i>stderr</i> is\nnot to be redirected.</p>\n\n<p style=\"margin-left:11%;\"><b>WRDE_UNDEF</b></p>\n\n<p style=\"margin-left:22%;\">Consider it an error if an\nundefined shell variable is expanded.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">In case of\nsuccess 0 is returned. In case of error one of the following\nfive values is returned. <b><br>\nWRDE_BADCHAR</b></p>\n\n<p style=\"margin-left:22%;\">Illegal occurrence of newline\nor one of |, &amp;, ;, &lt;, &gt;, (, ), {, }.</p>\n\n<p style=\"margin-left:11%;\"><b>WRDE_BADVAL</b></p>\n\n<p style=\"margin-left:22%;\">An undefined shell variable was\nreferenced, and the <b>WRDE_UNDEF</b> flag told us to\nconsider this an error.</p>\n\n<p style=\"margin-left:11%;\"><b>WRDE_CMDSUB</b></p>\n\n<p style=\"margin-left:22%;\">Command substitution requested,\nbut the <b>WRDE_NOCMD</b> flag told us to consider this an\nerror.</p>\n\n<p style=\"margin-left:11%;\"><b>WRDE_NOSPACE</b></p>\n\n<p style=\"margin-left:22%;\">Out of memory.</p>\n\n<p style=\"margin-left:11%;\"><b>WRDE_SYNTAX</b></p>\n\n<p style=\"margin-left:22%;\">Shell syntax error, such as\nunbalanced parentheses or unmatched quotes.</p>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>wordexp</b>()\nand <b>wordfree</b>() are provided in glibc since version\n2.1.</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n</table>\n\n\n<p align=\"center\"><img src=\"grohtml-3382891.png\" alt=\"Image grohtml-3382891.png\"></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the above\ntable, <i>utent</i> in <i>race:utent</i> signifies that if\nany of the functions <a href=\"https://man.page/3/setutent\">setutent(3)</a>, <a href=\"https://man.page/3/getutent\">getutent(3)</a>,\nor <a href=\"https://man.page/3/endutent\">endutent(3)</a> are used in parallel in different\nthreads of a program, then data races could occur.\n<b>wordexp</b>() calls those functions, so we use race:utent\nto remind users.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The output of\nthe following example program is approximately that of\n&quot;ls [a-c]*.c&quot;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#include\n&lt;stdio.h&gt; <br>\n#include &lt;stdlib.h&gt; <br>\n#include &lt;wordexp.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(int argc, char **argv) <br>\n{ <br>\nwordexp_t p; <br>\nchar **w;</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">wordexp(&quot;[a-c]*.c&quot;,\n&amp;p, 0); <br>\nw = p.we_wordv; <br>\nfor (int i = 0; i &lt; p.we_wordc; i++) <br>\nprintf(&quot;%s\\n&quot;, w[i]); <br>\nwordfree(&amp;p); <br>\nexit(EXIT_SUCCESS); <br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/fnmatch\">fnmatch(3)</a>,\n<a href=\"https://man.page/3/glob\">glob(3)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}