{"name":"matherr","body":"\n\n<h1 align=\"center\">MATHERR</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">matherr - SVID\nmath library exception handling</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;math.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nmatherr(struct exception *</b><i>exc</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>extern\n_LIB_VERSION_TYPE _LIB_VERSION;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Link with\n<i>-lm</i>.</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Note</i>:\nthe mechanism described in this page is no longer supported\nby glibc. Before glibc 2.27, it had been marked as obsolete.\nSince glibc 2.27, the mechanism has been removed altogether.\nNew applications should use the techniques described in\n<a href=\"https://man.page/7/math_error\">math_error(7)</a> and <a href=\"https://man.page/3/fenv\">fenv(3)</a>. This page documents\nthe <b>matherr</b>() mechanism as an aid for maintaining and\nporting older applications.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The System V\nInterface Definition (SVID) specifies that various math\nfunctions should invoke a function called <b>matherr</b>()\nif a math exception is detected. This function is called\nbefore the math function returns; after <b>matherr</b>()\nreturns, the system then returns to the math function, which\nin turn returns to the caller.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To employ\n<b>matherr</b>(), the programmer must define the\n<b>_SVID_SOURCE</b> feature test macro (before including\n<i>any</i> header files), and assign the value <b>_SVID_</b>\nto the external variable <b>_LIB_VERSION</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The system\nprovides a default version of <b>matherr</b>(). This version\ndoes nothing, and returns zero (see below for the\nsignificance of this). The default <b>matherr</b>() can be\noverridden by a programmer-defined version, which will be\ninvoked when an exception occurs. The function is invoked\nwith one argument, a pointer to an <i>exception</i>\nstructure, defined as follows:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct\nexception { <br>\nint type; /* Exception type */ <br>\nchar *name; /* Name of function causing exception */ <br>\ndouble arg1; /* 1st argument to function */ <br>\ndouble arg2; /* 2nd argument to function */ <br>\ndouble retval; /* Function return value */ <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <i>type</i>\nfield has one of the following values:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"14%\">\n\n\n<p><b>DOMAIN</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"71%\">\n\n\n<p>A domain error occurred (the function argument was\noutside the range for which the function is defined). The\nreturn value depends on the function; <i>errno</i> is set to\n<b>EDOM</b>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"14%\">\n\n\n<p><b>SING</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"71%\">\n\n\n<p>A pole error occurred (the function result is an\ninfinity). The return value in most cases is <b>HUGE</b>\n(the largest single precision floating-point number),\nappropriately signed. In most cases, <i>errno</i> is set to\n<b>EDOM</b>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"14%\">\n\n\n<p><b>OVERFLOW</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"71%\">\n\n\n<p>An overflow occurred. In most cases, the value\n<b>HUGE</b> is returned, and <i>errno</i> is set to\n<b>ERANGE</b>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"14%\">\n\n\n<p><b>UNDERFLOW</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"71%\">\n\n\n<p>An underflow occurred. 0.0 is returned, and <i>errno</i>\nis set to <b>ERANGE</b>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"14%\">\n\n\n<p><b>TLOSS</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"71%\">\n\n\n<p>Total loss of significance. 0.0 is returned, and\n<i>errno</i> is set to <b>ERANGE</b>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"14%\">\n\n\n<p><b>PLOSS</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"71%\">\n\n\n<p>Partial loss of significance. This value is unused on\nglibc (and many other systems).</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <i>arg1</i>\nand <i>arg2</i> fields are the arguments supplied to the\nfunction (<i>arg2</i> is undefined for functions that take\nonly one argument).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>retval</i> field specifies the return value that the math\nfunction will return to its caller. The programmer-defined\n<b>matherr</b>() can modify this field to change the return\nvalue of the math function.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\n<b>matherr</b>() function returns zero, then the system sets\n<i>errno</i> as described above, and may print an error\nmessage on standard error (see below).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\n<b>matherr</b>() function returns a nonzero value, then the\nsystem does not set <i>errno</i>, and doesn&rsquo;t print an\nerror message.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Math\nfunctions that employ matherr()</b> <br>\nThe table below lists the functions and circumstances in\nwhich <b>matherr</b>() is called. The &quot;Type&quot;\ncolumn indicates the value assigned to <i>exc-&gt;type</i>\nwhen calling <b>matherr</b>(). The &quot;Result&quot; column\nis the default return value assigned to\n<i>exc-&gt;retval</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n&quot;Msg?&quot; and &quot;errno&quot; columns describe the\ndefault behavior if <b>matherr</b>() returns zero. If the\n&quot;Msg?&quot; columns contains &quot;y&quot;, then the\nsystem prints an error message on standard error.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The table uses\nthe following notations and abbreviations:</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3295421.png\" alt=\"Image grohtml-3295421.png\"></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">&nbsp; &nbsp;\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\n\n\n<p align=\"center\"><img src=\"grohtml-3295422.png\" alt=\"Image grohtml-3295422.png\"></p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3295423.png\" alt=\"Image grohtml-3295423.png\"></p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The example\nprogram demonstrates the use of <b>matherr</b>() when\ncalling <a href=\"https://man.page/3/log\">log(3)</a>. The program takes up to three\ncommand-line arguments. The first argument is the\nfloating-point number to be given to <a href=\"https://man.page/3/log\">log(3)</a>. If the\noptional second argument is provided, then\n<b>_LIB_VERSION</b> is set to <b>_SVID_</b> so that\n<b>matherr</b>() is called, and the integer supplied in the\ncommand-line argument is used as the return value from\n<b>matherr</b>(). If the optional third command-line\nargument is supplied, then it specifies an alternative\nreturn value that <b>matherr</b>() should assign as the\nreturn value of the math function.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nexample run, where <a href=\"https://man.page/3/log\">log(3)</a> is given an argument of\n0.0, does not use <b>matherr</b>():</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ <b>./a.out\n0.0</b> <br>\nerrno: Numerical result out of range <br>\nx=-inf</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the\nfollowing run, <b>matherr</b>() is called, and returns\n0:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ <b>./a.out\n0.0 0</b> <br>\nmatherr SING exception in log() function <br>\nargs: 0.000000, 0.000000 <br>\nretval: -340282346638528859811704183484516925440.000000 <br>\nlog: SING error <br>\nerrno: Numerical argument out of domain <br>\nx=-340282346638528859811704183484516925440.000000</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The message\n&quot;log: SING error&quot; was printed by the C\nlibrary.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the\nfollowing run, <b>matherr</b>() is called, and returns a\nnonzero value:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ <b>./a.out\n0.0 1</b> <br>\nmatherr SING exception in log() function <br>\nargs: 0.000000, 0.000000 <br>\nretval: -340282346638528859811704183484516925440.000000 <br>\nx=-340282346638528859811704183484516925440.000000</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In this case,\nthe C library did not print a message, and <i>errno</i> was\nnot set.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the\nfollowing run, <b>matherr</b>() is called, changes the\nreturn value of the math function, and returns a nonzero\nvalue:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ <b>./a.out\n0.0 1 12345.0</b> <br>\nmatherr SING exception in log() function <br>\nargs: 0.000000, 0.000000 <br>\nretval: -340282346638528859811704183484516925440.000000 <br>\nx=12345.000000</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Program\nsource</b> <br>\n#define _SVID_SOURCE <br>\n#include &lt;errno.h&gt; <br>\n#include &lt;math.h&gt; <br>\n#include &lt;stdio.h&gt; <br>\n#include &lt;stdlib.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">static int\nmatherr_ret = 0; /* Value that matherr() <br>\nshould return */ <br>\nstatic int change_retval = 0; /* Should matherr() change\n<br>\nfunction's return value? */ <br>\nstatic double new_retval; /* New function return value\n*/</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmatherr(struct exception *exc) <br>\n{ <br>\nfprintf(stderr, &quot;matherr %s exception in %s()\nfunction\\n&quot;, <br>\n(exc-&gt;type == DOMAIN) ? &quot;DOMAIN&quot; : <br>\n(exc-&gt;type == OVERFLOW) ? &quot;OVERFLOW&quot; : <br>\n(exc-&gt;type == UNDERFLOW) ? &quot;UNDERFLOW&quot; : <br>\n(exc-&gt;type == SING) ? &quot;SING&quot; : <br>\n(exc-&gt;type == TLOSS) ? &quot;TLOSS&quot; : <br>\n(exc-&gt;type == PLOSS) ? &quot;PLOSS&quot; :\n&quot;???&quot;, <br>\nexc-&gt;name); <br>\nfprintf(stderr, &quot; args: %f, %f\\n&quot;, <br>\nexc-&gt;arg1, exc-&gt;arg2); <br>\nfprintf(stderr, &quot; retval: %f\\n&quot;,\nexc-&gt;retval);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if\n(change_retval) <br>\nexc-&gt;retval = new_retval;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">return\nmatherr_ret; <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(int argc, char *argv[]) <br>\n{ <br>\ndouble x;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (argc &lt;\n2) { <br>\nfprintf(stderr, &quot;Usage: %s &lt;argval&gt;&quot; <br>\n&quot; [&lt;matherr-ret&gt;\n[&lt;new-func-retval&gt;]]\\n&quot;, argv[0]); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (argc &gt;\n2) { <br>\n_LIB_VERSION = _SVID_; <br>\nmatherr_ret = atoi(argv[2]); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (argc &gt;\n3) { <br>\nchange_retval = 1; <br>\nnew_retval = atof(argv[3]); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">x =\nlog(atof(argv[1])); <br>\nif (errno != 0) <br>\nperror(&quot;errno&quot;);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">printf(&quot;x=%f\\n&quot;,\nx); <br>\nexit(EXIT_SUCCESS); <br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/fenv\">fenv(3)</a>,\n<a href=\"https://man.page/7/math_error\">math_error(7)</a>, <a href=\"https://man.page/7/standards\">standards(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}