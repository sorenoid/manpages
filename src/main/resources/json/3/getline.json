{"name":"getline","description":"getline, getdelim - delimited string input","body":"\n\n<h1 align=\"center\">GETLINE</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">getline,\ngetdelim - delimited string input</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;stdio.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ssize_t\ngetline(char **</b><i>lineptr</i><b>, size_t\n*</b><i>n</i><b>, FILE *</b><i>stream</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ssize_t\ngetdelim(char **</b><i>lineptr</i><b>, size_t\n*</b><i>n</i><b>, int</b> <i>delim</i><b>, FILE\n*</b><i>stream</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>getline</b>(),\n<b>getdelim</b>():</p>\n\n<p style=\"margin-left:17%;\">Since glibc 2.10:</p>\n\n\n<p style=\"margin-left:23%;\">_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200809L</p>\n\n<p style=\"margin-left:17%;\">Before glibc 2.10:</p>\n\n<p style=\"margin-left:23%;\">_GNU_SOURCE</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>getline</b>()\nreads an entire line from <i>stream</i>, storing the address\nof the buffer containing the text into <i>*lineptr</i>. The\nbuffer is null-terminated and includes the newline\ncharacter, if one was found.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>*lineptr</i> is set to NULL and <i>*n</i> is set 0 before\nthe call, then <b>getline</b>() will allocate a buffer for\nstoring the line. This buffer should be freed by the user\nprogram even if <b>getline</b>() failed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Alternatively,\nbefore calling <b>getline</b>(), <i>*lineptr</i> can contain\na pointer to a <a href=\"https://man.page/3/malloc\">malloc(3)</a>-allocated buffer <i>*n</i>\nbytes in size. If the buffer is not large enough to hold the\nline, <b>getline</b>() resizes it with <a href=\"https://man.page/3/realloc\">realloc(3)</a>,\nupdating <i>*lineptr</i> and <i>*n</i> as necessary.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In either case,\non a successful call, <i>*lineptr</i> and <i>*n</i> will be\nupdated to reflect the buffer address and allocated size\nrespectively.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>getdelim</b>()\nworks like <b>getline</b>(), except that a line delimiter\nother than newline can be specified as the <i>delimiter</i>\nargument. As with <b>getline</b>(), a delimiter character is\nnot added if one was not present in the input before end of\nfile was reached.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\n<b>getline</b>() and <b>getdelim</b>() return the number of\ncharacters read, including the delimiter character, but not\nincluding the terminating null byte ('\\0'). This value can\nbe used to handle embedded null bytes in the line read.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Both functions\nreturn -1 on failure to read a line (including end-of-file\ncondition). In the event of an error, <i>errno</i> is set to\nindicate the cause.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">Bad arguments (<i>n</i> or\n<i>lineptr</i> is NULL, or <i>stream</i> is not valid).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOMEM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Allocation or reallocation of the line buffer\nfailed.</p> </td></tr>\n</table>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3429911.png\" alt=\"Image grohtml-3429911.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Both\n<b>getline</b>() and <b>getdelim</b>() were originally GNU\nextensions. They were standardized in POSIX.1-2008.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">#define\n_GNU_SOURCE <br>\n#include &lt;stdio.h&gt; <br>\n#include &lt;stdlib.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(int argc, char *argv[]) <br>\n{ <br>\nFILE *stream; <br>\nchar *line = NULL; <br>\nsize_t len = 0; <br>\nssize_t nread;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (argc != 2)\n{ <br>\nfprintf(stderr, &quot;Usage: %s &lt;file&gt;\\n&quot;,\nargv[0]); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">stream =\nfopen(argv[1], &quot;r&quot;); <br>\nif (stream == NULL) { <br>\nperror(&quot;fopen&quot;); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">while ((nread =\ngetline(&amp;line, &amp;len, stream)) != -1) { <br>\nprintf(&quot;Retrieved line of length %zd:\\n&quot;, nread);\n<br>\nfwrite(line, nread, 1, stdout); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">free(line);\n<br>\nfclose(stream); <br>\nexit(EXIT_SUCCESS); <br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/read\">read(2)</a>,\n<a href=\"https://man.page/3/fgets\">fgets(3)</a>, <a href=\"https://man.page/3/fopen\">fopen(3)</a>, <a href=\"https://man.page/3/fread\">fread(3)</a>,\n<a href=\"https://man.page/3/scanf\">scanf(3)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}