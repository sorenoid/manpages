{"name":"iconv","description":"Text::Iconv - Perl interface to iconv() codeset conversion function","body":"\n\n<h1 align=\"center\">Iconv</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Text::Iconv -\nPerl interface to iconv() codeset conversion function</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">use\nText::Iconv; <br>\n$converter = Text::Iconv-&gt;new(&quot;fromcode&quot;,\n&quot;tocode&quot;); <br>\n$converted = $converter-&gt;convert(&quot;Text to\nconvert&quot;);</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>Text::Iconv</b> module provides a Perl interface to the\n<b>iconv()</b> function as defined by the Single\n<small>UNIX</small> Specification.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>convert()</b> method converts the encoding of characters\nin the input string from the <i>fromcode</i> codeset to the\n<i>tocode</i> codeset, and returns the result.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Settings of\n<i>fromcode</i> and <i>tocode</i> and their permitted\ncombinations are implementation-dependent. Valid values are\nspecified in the system documentation; the <a href=\"https://man.page/1/iconv\">iconv(1)</a>\nutility should also provide a <b>-l</b> option that lists\nall supported codesets.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Utility\nmethods <br>\nText::Iconv</b> objects also provide the following\nmethods:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>retval()</b>\nreturns the return value of the underlying <b>iconv()</b>\nfunction for the last conversion; according to the Single\n<small>UNIX</small> Specification, this value indicates\n&quot;the number of non-identical conversions\nperformed.&quot; Note, however, that iconv implementations\nvary widely in the interpretation of this specification.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This method can\nbe called after calling <b>convert()</b>, e.g.:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">$result =\n$converter-&gt;convert(&quot;lorem ipsum dolor sit\namet&quot;); <br>\n$retval = $converter-&gt;retval;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When called\nbefore the first call to <b>convert()</b>, or if an error\noccured during the conversion, <b>retval()</b> returns\n<b>undef</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>get_attr()</b>:\nThis method is only available with <small>GNU</small>\nlibiconv, otherwise it throws an exception. The\n<b>get_attr()</b> method allows you to query various\nattributes which influence the behavior of <b>convert()</b>.\nThe currently supported attributes are <i>trivialp</i>,\n<i>transliterate</i>, and <i>discard_ilseq</i>, e.g.:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">$state =\n$converter-&gt;get_attr(&quot;transliterate&quot;);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See\n<a href=\"https://man.page/3/iconvctl\">iconvctl(3)</a> for details. To ensure portability to\nother iconv implementations you should first check for the\navailability of this method using <b>eval {}</b>, e.g.:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">eval {\n$conv-&gt;get_attr(&quot;trivialp&quot;) }; <br>\nif ($@) <br>\n{ <br>\n# get_attr() is not available <br>\n} <br>\nelse <br>\n{ <br>\n# get_attr() is available <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This method\nshould be considered experimental.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>set_attr()</b>:\nThis method is only available with <small>GNU</small>\nlibiconv, otherwise it throws an exception. The\n<b>set_attr()</b> method allows you to set various\nattributes which influence the behavior of <b>convert()</b>.\nThe currently supported attributes are <i>transliterate</i>\nand <i>discard_ilseq</i>, e.g.:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">$state =\n$converter-&gt;set_attr(&quot;transliterate&quot;);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See\n<a href=\"https://man.page/3/iconvctl\">iconvctl(3)</a> for details. To ensure portability to\nother iconv implementations you should first check for the\navailability of this method using <b>eval {}</b>, cf. the\ndescription of <b>set_attr()</b> above.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This method\nshould be considered experimental.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\nconversion can&rsquo;t be initialized an exception is raised\n(using <b>croak()</b>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Handling of\nconversion errors</b> <i><br>\nText::Iconv</i> provides a class attribute\n<b>raise_error</b> and a corresponding class method for\nsetting and getting its value. The handling of errors during\nconversion depends on the setting of this attribute. If\n<b>raise_error</b> is set to a true value, an exception is\nraised; otherwise, the <b>convert()</b> method only returns\n<b>undef</b>. By default <b>raise_error</b> is false.\nExample usage:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Text::Iconv-&gt;raise_error(1);\n# Conversion errors raise exceptions <br>\nText::Iconv-&gt;raise_error(0); # Conversion errors return\nundef <br>\n$a = Text::Iconv-&gt;raise_error(); # Get current\nsetting</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Per-object\nhandling of conversion errors</b> <br>\nAs an experimental feature, <i>Text::Iconv</i> also provides\nan instance attribute <b>raise_error</b> and a corresponding\nmethod for setting and getting its value. If\n<b>raise_error</b> is <b>undef</b>, the class-wide settings\napply. If <b>raise_error</b> is 1 or 0 (true or false), the\nobject settings override the class-wide settings.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Consult\n<a href=\"https://man.page/3/iconv\">iconv(3)</a> for details on errors that might occur.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Conversion\nof undef</b> <br>\nConverting <b>undef</b>, e.g.,</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">$converted =\n$converter-&gt;convert(undef);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">always returns\n<b>undef</b>. This is not considered an error.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The supported\ncodesets, their names, the supported conversions, and the\nquality of the conversions are all system-dependent.</p>\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Michael\nPiotrowski &lt;mxp@dynalabs.de&gt;</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/iconv\">iconv(1)</a>,\n<a href=\"https://man.page/3/iconv\">iconv(3)</a></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#AUTHOR\">AUTHOR</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"],"level":3}