{"name":"html::headparser","description":"HTML::HeadParser - Parse &lt;HEAD&gt; section of a HTML document","body":"\n\n<h1 align=\"center\">HTML::HeadParser</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">HTML::HeadParser\n- Parse &lt;HEAD&gt; section of a HTML document</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">require\nHTML::HeadParser; <br>\n$p = HTML::HeadParser-&gt;new; <br>\n$p-&gt;parse($text) and print &quot;not finished&quot;; <br>\n$p-&gt;header('Title') # to access\n&lt;title&gt;....&lt;/title&gt; <br>\n$p-&gt;header('Content-Base') # to access &lt;base\nhref=&quot;http://...&quot;&gt; <br>\n$p-&gt;header('Foo') # to access &lt;meta\nhttp-equiv=&quot;Foo&quot; content=&quot;...&quot;&gt; <br>\n$p-&gt;header('X-Meta-Author') # to access &lt;meta\nname=&quot;author&quot; content=&quot;...&quot;&gt; <br>\n$p-&gt;header('X-Meta-Charset') # to access &lt;meta\ncharset=&quot;...&quot;&gt;</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n&quot;HTML::HeadParser&quot; is a specialized (and\nlightweight) &quot;HTML::Parser&quot; that will only parse\nthe &lt; <small>HEAD</small> &gt;...&lt;/HEAD&gt; section of\nan <small>HTML</small> document. The <b>parse()</b> method\nwill return a <small>FALSE</small> value as soon as some\n&lt; <small>BODY</small> &gt; element or body text are\nfound, and should not be called again after this.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that the\n&quot;HTML::HeadParser&quot; might get confused if raw\nundecoded <small>UTF-8</small> is passed to the\n<b>parse()</b> method. Make sure the strings are properly\ndecoded before passing them on.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n&quot;HTML::HeadParser&quot; keeps a reference to a header\nobject, and the parser will update this header object as the\nvarious elements of the &lt; <small>HEAD</small> &gt;\nsection of the <small>HTML</small> document are recognized.\nThe following header fields are affected: <br>\nContent-Base:</p>\n\n<p style=\"margin-left:17%;\">The <i>Content-Base</i> header\nis initialized from the &lt;base href=&quot;...&quot;&gt;\nelement.</p>\n\n<p style=\"margin-left:11%;\">Title:</p>\n\n<p style=\"margin-left:17%;\">The <i>Title</i> header is\ninitialized from the &lt;title&gt;...&lt;/title&gt;\nelement.</p>\n\n<p style=\"margin-left:11%;\">Isindex:</p>\n\n<p style=\"margin-left:17%;\">The <i>Isindex</i> header will\nbe added if there is a &lt;isindex&gt; element in the\n&lt;head&gt;. The header value is initialized from the\n<i>prompt</i> attribute if it is present. If no\n<i>prompt</i> attribute is given it will have\n&rsquo;?&rsquo; as the value.</p>\n\n<p style=\"margin-left:11%;\">X-Meta-Foo:</p>\n\n<p style=\"margin-left:17%;\">All &lt;meta&gt; elements\ncontaining a &quot;name&quot; attribute will result in\nheaders using the prefix &quot;X-Meta-&quot; appended with\nthe value of the &quot;name&quot; attribute as the name of\nthe header, and the value of the &quot;content&quot;\nattribute as the pushed header value.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&lt;meta&gt;\nelements containing a &quot;http-equiv&quot; attribute will\nresult in headers as in above, but without the\n&quot;X-Meta-&quot; prefix in the header name.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&lt;meta&gt;\nelements containing a &quot;charset&quot; attribute will\nresult in an &quot;X-Meta-Charset&quot; header, using the\nvalue of the &quot;charset&quot; attribute as the pushed\nheader value.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\n&rsquo;:&rsquo; character can&rsquo;t be represented in\nheader field names, so if the meta element contains this\nchar it&rsquo;s substituted with &rsquo;-&rsquo; before\nforming the field name.</p>\n\n<h2>METHODS\n<a name=\"METHODS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nmethods (in addition to those provided by the superclass)\nare available: <br>\n$hp = HTML::HeadParser-&gt;new <br>\n$hp = HTML::HeadParser-&gt;new( $header )</p>\n\n<p style=\"margin-left:17%;\">The object constructor. The\noptional $header argument should be a reference to an object\nthat implement the <b>header()</b> and <b>push_header()</b>\nmethods as defined by the &quot;HTTP::Headers&quot; class.\nNormally it will be of some class that is a or delegates to\nthe &quot;HTTP::Headers&quot; class.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">If no $header\nis given &quot;HTML::HeadParser&quot; will create an\n&quot;HTTP::Headers&quot; object by itself (initially\nempty).</p>\n\n<p style=\"margin-left:11%;\">$hp-&gt;header;</p>\n\n<p style=\"margin-left:17%;\">Returns a reference to the\nheader object.</p>\n\n<p style=\"margin-left:11%;\">$hp-&gt;header( $key )</p>\n\n<p style=\"margin-left:17%;\">Returns a header value. It is\njust a shorter way to write\n&quot;$hp-&gt;header-&gt;header($key)&quot;.</p>\n\n<h2>EXAMPLE\n<a name=\"EXAMPLE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$h =\nHTTP::Headers-&gt;new; <br>\n$p = HTML::HeadParser-&gt;new($h); <br>\n$p-&gt;parse(&lt;&lt;EOT); <br>\n&lt;title&gt;Stupid example&lt;/title&gt; <br>\n&lt;base href=&quot;http://www.linpro.no/lwp/&quot;&gt; <br>\nNormal text starts here. <br>\nEOT <br>\nundef $p; <br>\nprint $h-&gt;title; # should print &quot;Stupid\nexample&quot;</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">HTML::Parser,\nHTTP::Headers</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n&quot;HTTP::Headers&quot; class is distributed as part of\nthe <i>libwww-perl</i> package. If you don&rsquo;t have that\ndistribution installed you need to provide the $header\nargument to the &quot;HTML::HeadParser&quot; constructor\nwith your own object that implements the documented\nprotocol.</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright\n1996-2001 Gisle Aas. All rights reserved.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This library is\nfree software; you can redistribute it and/or modify it\nunder the same terms as Perl itself.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#METHODS\">METHODS</a>","<a href=\"#EXAMPLE\">EXAMPLE</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"],"level":3}