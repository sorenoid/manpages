{"name":"net::dbus::binding::bus","description":"Net::DBus::Binding::Bus - Handle to a well-known message bus instance","body":"\n\n<h1 align=\"center\">Net::DBus::Binding::Bus</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Net::DBus::Binding::Bus\n- Handle to a well-known message bus instance</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">use\nNet::DBus::Binding::Bus; <br>\n# Get a handle to the system bus <br>\nmy $bus = Net::DBus::Binding::Bus-&gt;new(type =&gt;\n&amp;Net::DBus::Binding::Bus::SYSTEM);</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This is a\nspecialization of the Net::DBus::Binding::Connection module\nproviding convenience constructor for connecting to one of\nthe well-known bus types. There is no reason to use this\nmodule directly, instead get a handle to the bus with the\n&quot;session&quot; or &quot;system&quot; methods in\nNet::DBus.</p>\n\n<h2>METHODS\n<a name=\"METHODS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">my $bus =\nNet::DBus::Binding::Bus-&gt;new(type =&gt; $type); <br>\nmy $bus = Net::DBus::Binding::Bus-&gt;new(address =&gt;\n$addr);</p>\n\n<p style=\"margin-left:17%;\">Open a connection to a message\nbus, either a well known bus type specified using the\n&quot;type&quot; parameter, or an arbitrary bus specified\nusing the &quot;address&quot; parameter. If the\n&quot;private&quot; parameter is set to a true value, then a\nprivate connection to the bus is obtained. The caller must\nexplicitly disconnect this bus instance before releasing the\nlast instance of the object.</p>\n\n\n<p style=\"margin-left:11%;\">$bus-&gt;request_name($service_name)</p>\n\n<p style=\"margin-left:17%;\">Send a request to the bus\nregistering the well known name specified in the\n$service_name parameter. If another client already owns the\nname, registration will be queued up, pending the exit of\nthe other client.</p>\n\n<p style=\"margin-left:11%;\">my $name =\n$bus-&gt;get_unique_name</p>\n\n<p style=\"margin-left:17%;\">Returns the unique name by\nwhich this processes&rsquo; connection to the bus is known.\nUnique names are never re-used for the entire lifetime of\nthe bus daemon.</p>\n\n<p style=\"margin-left:11%;\">$bus-&gt;add_match($rule)</p>\n\n<p style=\"margin-left:17%;\">Register a signal match rule\nwith the bus controller, allowing matching broadcast signals\nto routed to this client.</p>\n\n\n<p style=\"margin-left:11%;\">$bus-&gt;remove_match($rule)</p>\n\n<p style=\"margin-left:17%;\">Unregister a signal match rule\nwith the bus controller, preventing further broadcast\nsignals being routed to this client</p>\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Daniel P.\nBerrange</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright (C)\n2004-2011 Daniel P. Berrange</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Net::DBus::Binding::Connection,\nNet::DBus</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#METHODS\">METHODS</a>","<a href=\"#AUTHOR\">AUTHOR</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"],"level":3}