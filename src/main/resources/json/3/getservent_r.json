{"name":"getservent_r","description":"getservent_r, getservbyname_r, getservbyport_r - get service entry (reentrant)","body":"\n\n<h1 align=\"center\">GETSERVENT_R</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">getservent_r,\ngetservbyname_r, getservbyport_r - get service entry\n(reentrant)</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;netdb.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\ngetservent_r(struct servent *</b><i>result_buf</i><b>, char\n*</b><i>buf</i><b>, <br>\nsize_t</b> <i>buflen</i><b>, struct servent\n**</b><i>result</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\ngetservbyname_r(const char *</b><i>name</i><b>, const char\n*</b><i>proto</i><b>, <br>\nstruct servent *</b><i>result_buf</i><b>, char\n*</b><i>buf</i><b>, <br>\nsize_t</b> <i>buflen</i><b>, struct servent\n**</b><i>result</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\ngetservbyport_r(int</b> <i>port</i><b>, const char\n*</b><i>proto</i><b>, <br>\nstruct servent *</b><i>result_buf</i><b>, char\n*</b><i>buf</i><b>, <br>\nsize_t</b> <i>buflen</i><b>, struct servent\n**</b><i>result</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>getservent_r</b>(),\n<b>getservbyname_r</b>(), <b>getservbyport_r</b>(): <br>\nSince glibc 2.19: <br>\n_DEFAULT_SOURCE <br>\nGlibc 2.19 and earlier: <br>\n_BSD_SOURCE || _SVID_SOURCE</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>getservent_r</b>(), <b>getservbyname_r</b>(), and\n<b>getservbyport_r</b>() functions are the reentrant\nequivalents of, respectively, <a href=\"https://man.page/3/getservent\">getservent(3)</a>,\n<a href=\"https://man.page/3/getservbyname\">getservbyname(3)</a>, and <a href=\"https://man.page/3/getservbyport\">getservbyport(3)</a>. They\ndiffer in the way that the <i>servent</i> structure is\nreturned, and in the function calling signature and return\nvalue. This manual page describes just the differences from\nthe nonreentrant functions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Instead of\nreturning a pointer to a statically allocated <i>servent</i>\nstructure as the function result, these functions copy the\nstructure into the location pointed to by\n<i>result_buf</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <i>buf</i>\narray is used to store the string fields pointed to by the\nreturned <i>servent</i> structure. (The nonreentrant\nfunctions allocate these strings in static storage.) The\nsize of this array is specified in <i>buflen</i>. If\n<i>buf</i> is too small, the call fails with the error\n<b>ERANGE</b>, and the caller must try again with a larger\nbuffer. (A buffer of length 1024 bytes should be sufficient\nfor most applications.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the function\ncall successfully obtains a service record, then\n<i>*result</i> is set pointing to <i>result_buf</i>;\notherwise, <i>*result</i> is set to NULL.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\nthese functions return 0. On error, they return one of the\npositive error numbers listed in errors.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On error,\nrecord not found (<b>getservbyname_r</b>(),\n<b>getservbyport_r</b>()), or end of input\n(<b>getservent_r</b>()) <i>result</i> is set to NULL.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>ENOENT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">(<b>getservent_r</b>()) No more\nrecords in database.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ERANGE</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>buf</i> is too small. Try again with a larger buffer\n(and increased <i>buflen</i>).</p></td></tr>\n</table>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3286921.png\" alt=\"Image grohtml-3286921.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These functions\nare GNU extensions. Functions with similar names exist on\nsome other systems, though typically with different calling\nsignatures.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The program\nbelow uses <b>getservbyport_r</b>() to retrieve the service\nrecord for the port and protocol named in its first\ncommand-line argument. If a third (integer) command-line\nargument is supplied, it is used as the initial value for\n<i>buflen</i>; if <b>getservbyport_r</b>() fails with the\nerror <b>ERANGE</b>, the program retries with larger buffer\nsizes. The following shell session shows a couple of sample\nruns:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ <b>./a.out 7\ntcp 1</b> <br>\nERANGE! Retrying with larger buffer <br>\ngetservbyport_r() returned: 0 (success) (buflen=87) <br>\ns_name=echo; s_proto=tcp; s_port=7; aliases= <br>\n$ <b>./a.out 77777 tcp</b> <br>\ngetservbyport_r() returned: 0 (success) (buflen=1024) <br>\nCall failed/record not found</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Program\nsource</b> <br>\n#define _GNU_SOURCE <br>\n#include &lt;ctype.h&gt; <br>\n#include &lt;netdb.h&gt; <br>\n#include &lt;stdlib.h&gt; <br>\n#include &lt;stdio.h&gt; <br>\n#include &lt;errno.h&gt; <br>\n#include &lt;string.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#define MAX_BUF\n10000</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(int argc, char *argv[]) <br>\n{ <br>\nint buflen, erange_cnt, port, s; <br>\nstruct servent result_buf; <br>\nstruct servent *result; <br>\nchar buf[MAX_BUF]; <br>\nchar *protop;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (argc &lt;\n3) { <br>\nprintf(&quot;Usage: %s port-num proto-name [buflen]\\n&quot;,\nargv[0]); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">port =\nhtons(atoi(argv[1])); <br>\nprotop = (strcmp(argv[2], &quot;null&quot;) == 0 || <br>\nstrcmp(argv[2], &quot;NULL&quot;) == 0) ? NULL :\nargv[2];</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">buflen = 1024;\n<br>\nif (argc &gt; 3) <br>\nbuflen = atoi(argv[3]);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (buflen &gt;\nMAX_BUF) { <br>\nprintf(&quot;Exceeded buffer limit (%d)\\n&quot;, MAX_BUF);\n<br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">erange_cnt = 0;\n<br>\ndo { <br>\ns = getservbyport_r(port, protop, &amp;result_buf, <br>\nbuf, buflen, &amp;result); <br>\nif (s == ERANGE) { <br>\nif (erange_cnt == 0) <br>\nprintf(&quot;ERANGE! Retrying with larger buffer\\n&quot;);\n<br>\nerange_cnt++;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Increment a\nbyte at a time so we can see exactly <br>\nwhat size buffer was required */</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">buflen++;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (buflen &gt;\nMAX_BUF) { <br>\nprintf(&quot;Exceeded buffer limit (%d)\\n&quot;, MAX_BUF);\n<br>\nexit(EXIT_FAILURE); <br>\n} <br>\n} <br>\n} while (s == ERANGE);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">printf(&quot;getservbyport_r()\nreturned: %s (buflen=%d)\\n&quot;, <br>\n(s == 0) ? &quot;0 (success)&quot; : (s == ENOENT) ?\n&quot;ENOENT&quot; : <br>\nstrerror(s), buflen);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (s != 0 ||\nresult == NULL) { <br>\nprintf(&quot;Call failed/record not found\\n&quot;); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">printf(&quot;s_name=%s;\ns_proto=%s; s_port=%d; aliases=&quot;, <br>\nresult_buf.s_name, result_buf.s_proto, <br>\nntohs(result_buf.s_port)); <br>\nfor (char **p = result_buf.s_aliases; *p != NULL; p++) <br>\nprintf(&quot;%s &quot;, *p); <br>\nprintf(&quot;\\n&quot;);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">exit(EXIT_SUCCESS);\n<br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/getservent\">getservent(3)</a>,\n<a href=\"https://man.page/5/services\">services(5)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}