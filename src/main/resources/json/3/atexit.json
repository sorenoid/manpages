{"name":"atexit","description":"atexit -\nregister a function to be called at normal process\ntermination","body":"\n\n<h1 align=\"center\">ATEXIT</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">atexit -\nregister a function to be called at normal process\ntermination</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;stdlib.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\natexit(void (*</b><i>function</i><b>)(void));</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>atexit</b>() function registers the given <i>function</i>\nto be called at normal process termination, either via\n<a href=\"https://man.page/3/exit\">exit(3)</a> or via return from the program&rsquo;s\n<i>main</i>(). Functions so registered are called in the\nreverse order of their registration; no arguments are\npassed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The same\nfunction may be registered multiple times: it is called once\nfor each registration.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1\nrequires that an implementation allow at least\n<b>ATEXIT_MAX</b> (32) such functions to be registered. The\nactual limit supported by an implementation can be obtained\nusing <a href=\"https://man.page/3/sysconf\">sysconf(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When a child\nprocess is created via <a href=\"https://man.page/2/fork\">fork(2)</a>, it inherits copies of\nits parent&rsquo;s registrations. Upon a successful call to\none of the <a href=\"https://man.page/3/exec\">exec(3)</a> functions, all registrations are\nremoved.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>atexit</b>() function returns the value 0 if successful;\notherwise it returns a nonzero value.</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n</table>\n\n\n<p align=\"center\"><img src=\"grohtml-3359141.png\" alt=\"Image grohtml-3359141.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008, C89, C99, SVr4, 4.3BSD.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Functions\nregistered using <b>atexit</b>() (and <a href=\"https://man.page/3/on_exit\">on_exit(3)</a>) are\nnot called if a process terminates abnormally because of the\ndelivery of a signal.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If one of the\nregistered functions calls <a href=\"https://man.page/2/_exit\">_exit(2)</a>, then any\nremaining functions are not invoked, and the other process\ntermination steps performed by <a href=\"https://man.page/3/exit\">exit(3)</a> are not\nperformed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1 says\nthat the result of calling <a href=\"https://man.page/3/exit\">exit(3)</a> more than once\n(i.e., calling <a href=\"https://man.page/3/exit\">exit(3)</a> within a function registered\nusing <b>atexit</b>()) is undefined. On some systems (but\nnot Linux), this can result in an infinite recursion;\nportable programs should not invoke <a href=\"https://man.page/3/exit\">exit(3)</a> inside a\nfunction registered using <b>atexit</b>().</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>atexit</b>() and <a href=\"https://man.page/3/on_exit\">on_exit(3)</a> functions register\nfunctions on the same list: at normal process termination,\nthe registered functions are invoked in reverse order of\ntheir registration by these two functions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">According to\nPOSIX.1, the result is undefined if <a href=\"https://man.page/3/longjmp\">longjmp(3)</a> is\nused to terminate execution of one of the functions\nregistered using <b>atexit</b>().</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Linux\nnotes</b> <br>\nSince glibc 2.2.3, <b>atexit</b>() (and <a href=\"https://man.page/3/on_exit\">on_exit(3)</a>)\ncan be used within a shared library to establish functions\nthat are called when the shared library is unloaded.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">#include\n&lt;stdio.h&gt; <br>\n#include &lt;stdlib.h&gt; <br>\n#include &lt;unistd.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">void <br>\nbye(void) <br>\n{ <br>\nprintf(&quot;That was all, folks\\n&quot;); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(void) <br>\n{ <br>\nlong a; <br>\nint i;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">a =\nsysconf(_SC_ATEXIT_MAX); <br>\nprintf(&quot;ATEXIT_MAX = %ld\\n&quot;, a);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">i =\natexit(bye); <br>\nif (i != 0) { <br>\nfprintf(stderr, &quot;cannot set exit function\\n&quot;);\n<br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">exit(EXIT_SUCCESS);\n<br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/_exit\">_exit(2)</a>,\n<a href=\"https://man.page/3/dlopen\">dlopen(3)</a>, <a href=\"https://man.page/3/exit\">exit(3)</a>, <a href=\"https://man.page/3/on_exit\">on_exit(3)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}