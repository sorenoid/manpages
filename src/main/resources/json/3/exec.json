{"name":"exec","description":"execl, execlp,\nexecle, execv, execvp, execvpe - execute a file","body":"\n\n<h1 align=\"center\">EXEC</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">execl, execlp,\nexecle, execv, execvp, execvpe - execute a file</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;unistd.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>extern char\n**environ;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nexecl(const char *</b><i>pathname</i><b>, const char\n*</b><i>arg</i><b>, ... <br>\n/* (char *) NULL */); <br>\nint execlp(const char *</b><i>file</i><b>, const char\n*</b><i>arg</i><b>, ... <br>\n/* (char *) NULL */); <br>\nint execle(const char *</b><i>pathname</i><b>, const char\n*</b><i>arg</i><b>, ... <br>\n/*, (char *) NULL, char *const</b> <i>envp</i><b>[] */);\n<br>\nint execv(const char *</b><i>pathname</i><b>, char\n*const</b> <i>argv</i><b>[]); <br>\nint execvp(const char *</b><i>file</i><b>, char *const</b>\n<i>argv</i><b>[]); <br>\nint execvpe(const char *</b><i>file</i><b>, char *const</b>\n<i>argv</i><b>[], <br>\nchar *const</b> <i>envp</i><b>[]);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>execvpe</b>():\n_GNU_SOURCE</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>exec</b>() family of functions replaces the current\nprocess image with a new process image. The functions\ndescribed in this manual page are layered on top of\n<a href=\"https://man.page/2/execve\">execve(2)</a>. (See the manual page for <a href=\"https://man.page/2/execve\">execve(2)</a>\nfor further details about the replacement of the current\nprocess image.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The initial\nargument for these functions is the name of a file that is\nto be executed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The functions\ncan be grouped based on the letters following the\n&quot;exec&quot; prefix.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>l - execl(),\nexeclp(), execle()</b> <br>\nThe <i>const char&nbsp;*arg</i> and subsequent ellipses can\nbe thought of as <i>arg0</i>, <i>arg1</i>, ..., <i>argn</i>.\nTogether they describe a list of one or more pointers to\nnull-terminated strings that represent the argument list\navailable to the executed program. The first argument, by\nconvention, should point to the filename associated with the\nfile being executed. The list of arguments <i>must</i> be\nterminated by a null pointer, and, since these are variadic\nfunctions, this pointer must be cast <i>(char&nbsp;*)\nNULL</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">By contrast\nwith the &rsquo;l&rsquo; functions, the &rsquo;v&rsquo;\nfunctions (below) specify the command-line arguments of the\nexecuted program as a vector.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>v - execv(),\nexecvp(), execvpe()</b> <br>\nThe <i>char&nbsp;*const argv[]</i> argument is an array of\npointers to null-terminated strings that represent the\nargument list available to the new program. The first\nargument, by convention, should point to the filename\nassociated with the file being executed. The array of\npointers <i>must</i> be terminated by a null pointer.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>e -\nexecle(), execvpe()</b> <br>\nThe environment of the caller is specified via the argument\n<i>envp</i>. The <i>envp</i> argument is an array of\npointers to null-terminated strings and <i>must</i> be\nterminated by a null pointer.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All other\n<b>exec</b>() functions (which do not include\n&rsquo;e&rsquo; in the suffix) take the environment for the\nnew process image from the external variable <i>environ</i>\nin the calling process.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>p -\nexeclp(), execvp(), execvpe()</b> <br>\nThese functions duplicate the actions of the shell in\nsearching for an executable file if the specified filename\ndoes not contain a slash (/) character. The file is sought\nin the colon-separated list of directory pathnames specified\nin the <b>PATH</b> environment variable. If this variable\nisn&rsquo;t defined, the path list defaults to a list that\nincludes the directories returned by\n<i>confstr(_CS_PATH)</i> (which typically returns the value\n&quot;/bin:/usr/bin&quot;) and possibly also the current\nworking directory; see NOTES for further details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\nspecified filename includes a slash character, then\n<b>PATH</b> is ignored, and the file at the specified\npathname is executed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In addition,\ncertain errors are treated specially.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If permission\nis denied for a file (the attempted <a href=\"https://man.page/2/execve\">execve(2)</a> failed\nwith the error <b>EACCES</b>), these functions will continue\nsearching the rest of the search path. If no other file is\nfound, however, they will return with <i>errno</i> set to\n<b>EACCES</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the header\nof a file isn&rsquo;t recognized (the attempted\n<a href=\"https://man.page/2/execve\">execve(2)</a> failed with the error <b>ENOEXEC</b>),\nthese functions will execute the shell (<i>/bin/sh</i>) with\nthe path of the file as its first argument. (If this attempt\nfails, no further searching is done.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All other\n<b>exec</b>() functions (which do not include\n&rsquo;p&rsquo; in the suffix) take as their first argument\na (relative or absolute) pathname that identifies the\nprogram to be executed.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>exec</b>() functions return only if an error has\noccurred. The return value is -1, and <i>errno</i> is set to\nindicate the error.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">All of these\nfunctions may fail and set <i>errno</i> for any of the\nerrors specified for <a href=\"https://man.page/2/execve\">execve(2)</a>.</p>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>execvpe</b>() function first appeared in glibc 2.11.</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n</table>\n\n\n<p align=\"center\"><img src=\"grohtml-3430241.png\" alt=\"Image grohtml-3430241.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>execvpe</b>() function is a GNU extension.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The default\nsearch path (used when the environment does not contain the\nvariable <b>PATH</b>) shows some variation across systems.\nIt generally includes <i>/bin</i> and <i>/usr/bin</i> (in\nthat order) and may also include the current working\ndirectory. On some other systems, the current working is\nincluded after <i>/bin</i> and <i>/usr/bin</i>, as an\nanti-Trojan-horse measure. The glibc implementation long\nfollowed the traditional default where the current working\ndirectory is included at the start of the search path.\nHowever, some code refactoring during the development of\nglibc 2.24 caused the current working directory to be\ndropped altogether from the default search path. This\naccidental behavior change is considered mildly beneficial,\nand won&rsquo;t be reverted.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The behavior of\n<b>execlp</b>() and <b>execvp</b>() when errors occur while\nattempting to execute the file is historic practice, but has\nnot traditionally been documented and is not specified by\nthe POSIX standard. BSD (and possibly other systems) do an\nautomatic sleep and retry if <b>ETXTBSY</b> is encountered.\nLinux treats it as a hard error and returns immediately.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Traditionally,\nthe functions <b>execlp</b>() and <b>execvp</b>() ignored\nall errors except for the ones described above and\n<b>ENOMEM</b> and <b>E2BIG</b>, upon which they returned.\nThey now return if any error other than the ones described\nabove occurs.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Before glibc\n2.24, <b>execl</b>() and <b>execle</b>() employed\n<a href=\"https://man.page/3/realloc\">realloc(3)</a> internally and were consequently not\nasync-signal-safe, in violation of the requirements of\nPOSIX.1. This was fixed in glibc 2.24.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Architecture-specific\ndetails</b> <br>\nOn sparc and sparc64, <b>execv</b>() is provided as a system\ncall by the kernel (with the prototype shown above) for\ncompatibility with SunOS. This function is <i>not</i>\nemployed by the <b>execv</b>() wrapper function on those\narchitectures.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/sh\">sh(1)</a>,\n<a href=\"https://man.page/2/execve\">execve(2)</a>, <a href=\"https://man.page/2/execveat\">execveat(2)</a>, <a href=\"https://man.page/2/fork\">fork(2)</a>,\n<a href=\"https://man.page/2/ptrace\">ptrace(2)</a>, <a href=\"https://man.page/3/fexecve\">fexecve(3)</a>, <a href=\"https://man.page/3/system\">system(3)</a>,\n<a href=\"https://man.page/7/environ\">environ(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}