{"name":"getnameinfo","description":"getnameinfo - address-to-name translation in protocol-independent manner","body":"\n\n<h1 align=\"center\">GETNAMEINFO</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">getnameinfo -\naddress-to-name translation in protocol-independent\nmanner</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/socket.h&gt; <br>\n#include &lt;netdb.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\ngetnameinfo(const struct sockaddr *</b><i>addr</i><b>,\nsocklen_t</b> <i>addrlen</i><b>, <br>\nchar *</b><i>host</i><b>, socklen_t</b> <i>hostlen</i><b>,\n<br>\nchar *</b><i>serv</i><b>, socklen_t</b> <i>servlen</i><b>,\nint</b> <i>flags</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>getnameinfo</b>():\n<br>\nSince glibc 2.22: _POSIX_C_SOURCE &gt;= 200112L <br>\nGlibc 2.21 and earlier: _POSIX_C_SOURCE</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>getnameinfo</b>() function is the inverse of\n<a href=\"https://man.page/3/getaddrinfo\">getaddrinfo(3)</a>: it converts a socket address to a\ncorresponding host and service, in a protocol-independent\nmanner. It combines the functionality of\n<a href=\"https://man.page/3/gethostbyaddr\">gethostbyaddr(3)</a> and <a href=\"https://man.page/3/getservbyport\">getservbyport(3)</a>, but\nunlike those functions, <b>getnameinfo</b>() is reentrant\nand allows programs to eliminate IPv4-versus-IPv6\ndependencies.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <i>addr</i>\nargument is a pointer to a generic socket address structure\n(of type <i>sockaddr_in</i> or <i>sockaddr_in6</i>) of size\n<i>addrlen</i> that holds the input IP address and port\nnumber. The arguments <i>host</i> and <i>serv</i> are\npointers to caller-allocated buffers (of size <i>hostlen</i>\nand <i>servlen</i> respectively) into which\n<b>getnameinfo</b>() places null-terminated strings\ncontaining the host and service names respectively.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The caller can\nspecify that no hostname (or no service name) is required by\nproviding a NULL <i>host</i> (or <i>serv</i>) argument or a\nzero <i>hostlen</i> (or <i>servlen</i>) argument. However,\nat least one of hostname or service name must be\nrequested.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>flags</i> argument modifies the behavior of\n<b>getnameinfo</b>() as follows: <b><br>\nNI_NAMEREQD</b></p>\n\n<p style=\"margin-left:22%;\">If set, then an error is\nreturned if the hostname cannot be determined.</p>\n\n<p style=\"margin-left:11%;\"><b>NI_DGRAM</b></p>\n\n<p style=\"margin-left:22%;\">If set, then the service is\ndatagram (UDP) based rather than stream (TCP) based. This is\nrequired for the few ports (512&ndash;514) that have\ndifferent services for UDP and TCP.</p>\n\n<p style=\"margin-left:11%;\"><b>NI_NOFQDN</b></p>\n\n<p style=\"margin-left:22%;\">If set, return only the\nhostname part of the fully qualified domain name for local\nhosts.</p>\n\n<p style=\"margin-left:11%;\"><b>NI_NUMERICHOST</b></p>\n\n<p style=\"margin-left:22%;\">If set, then the numeric form\nof the hostname is returned. (When not set, this will still\nhappen in case the node&rsquo;s name cannot be\ndetermined.)</p>\n\n<p style=\"margin-left:11%;\"><b>NI_NUMERICSERV</b></p>\n\n<p style=\"margin-left:22%;\">If set, then the numeric form\nof the service address is returned. (When not set, this will\nstill happen in case the service&rsquo;s name cannot be\ndetermined.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Extensions\nto getnameinfo() for Internationalized Domain Names</b> <br>\nStarting with glibc 2.3.4, <b>getnameinfo</b>() has been\nextended to selectively allow hostnames to be transparently\nconverted to and from the Internationalized Domain Name\n(IDN) format (see RFC 3490, <i>Internationalizing Domain\nNames in Applications (IDNA)</i>). Three new flags are\ndefined:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>NI_IDN</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>If this flag is used, then the name found in the lookup\nprocess is converted from IDN format to the locale&rsquo;s\nencoding if necessary. ASCII-only names are not affected by\nthe conversion, which makes this flag usable in existing\nprograms and environments.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>NI_IDN_ALLOW_UNASSIGNED</b>,\n<b>NI_IDN_USE_STD3_ASCII_RULES</b></p>\n\n<p style=\"margin-left:22%;\">Setting these flags will enable\nthe IDNA_ALLOW_UNASSIGNED (allow unassigned Unicode code\npoints) and IDNA_USE_STD3_ASCII_RULES (check output to make\nsure it is a STD3 conforming hostname) flags respectively to\nbe used in the IDNA handling.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success, 0\nis returned, and node and service names, if requested, are\nfilled with null-terminated strings, possibly truncated to\nfit the specified buffer lengths. On error, one of the\nfollowing nonzero error codes is returned: <b><br>\nEAI_AGAIN</b></p>\n\n<p style=\"margin-left:22%;\">The name could not be resolved\nat this time. Try again later.</p>\n\n<p style=\"margin-left:11%;\"><b>EAI_BADFLAGS</b></p>\n\n<p style=\"margin-left:22%;\">The <i>flags</i> argument has\nan invalid value.</p>\n\n<p style=\"margin-left:11%;\"><b>EAI_FAIL</b></p>\n\n<p style=\"margin-left:22%;\">A nonrecoverable error\noccurred.</p>\n\n<p style=\"margin-left:11%;\"><b>EAI_FAMILY</b></p>\n\n<p style=\"margin-left:22%;\">The address family was not\nrecognized, or the address length was invalid for the\nspecified family.</p>\n\n<p style=\"margin-left:11%;\"><b>EAI_MEMORY</b></p>\n\n<p style=\"margin-left:22%;\">Out of memory.</p>\n\n<p style=\"margin-left:11%;\"><b>EAI_NONAME</b></p>\n\n<p style=\"margin-left:22%;\">The name does not resolve for\nthe supplied arguments. <b>NI_NAMEREQD</b> is set and the\nhost&rsquo;s name cannot be located, or neither hostname nor\nservice name were requested.</p>\n\n<p style=\"margin-left:11%;\"><b>EAI_OVERFLOW</b></p>\n\n<p style=\"margin-left:22%;\">The buffer pointed to by\n<i>host</i> or <i>serv</i> was too small.</p>\n\n<p style=\"margin-left:11%;\"><b>EAI_SYSTEM</b></p>\n\n<p style=\"margin-left:22%;\">A system error occurred. The\nerror code can be found in <i>errno</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<a href=\"https://man.page/3/gai_strerror\">gai_strerror(3)</a> function translates these error codes\nto a human readable string, suitable for error\nreporting.</p>\n\n<h2>FILES\n<a name=\"FILES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>/etc/hosts\n<br>\n/etc/nsswitch.conf <br>\n/etc/resolv.conf</i></p>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i><b>getnameinfo</b></i>()\nis provided in glibc since version 2.1.</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3310441.png\" alt=\"Image grohtml-3310441.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008, RFC&nbsp;2553.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">In order to\nassist the programmer in choosing reasonable sizes for the\nsupplied buffers, <i>&lt;netdb.h&gt;</i> defines the\nconstants</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">#define\nNI_MAXHOST 1025 <br>\n#define NI_MAXSERV 32</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Since glibc\n2.8, these definitions are exposed only if suitable feature\ntest macros are defined, namely: <b>_GNU_SOURCE</b>,\n<b>_DEFAULT_SOURCE</b> (since glibc 2.19), or (in glibc\nversions up to and including 2.19) <b>_BSD_SOURCE</b> or\n<b>_SVID_SOURCE</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The former is\nthe constant <b>MAXDNAME</b> in recent versions of\nBIND&rsquo;s <i>&lt;arpa/nameser.h&gt;</i> header file. The\nlatter is a guess based on the services listed in the\ncurrent Assigned Numbers RFC.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Before glibc\nversion 2.2, the <i>hostlen</i> and <i>servlen</i> arguments\nwere typed as <i>size_t</i>.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\ncode tries to get the numeric hostname and service name, for\na given socket address. Note that there is no hardcoded\nreference to a particular address family.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct sockaddr\n*addr; /* input */ <br>\nsocklen_t addrlen; /* input */ <br>\nchar hbuf[NI_MAXHOST], sbuf[NI_MAXSERV];</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">if\n(getnameinfo(addr, addrlen, hbuf, sizeof(hbuf), sbuf, <br>\nsizeof(sbuf), NI_NUMERICHOST | NI_NUMERICSERV) == 0) <br>\nprintf(&quot;host=%s, serv=%s\\n&quot;, hbuf, sbuf);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nversion checks if the socket address has a reverse address\nmapping.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct sockaddr\n*addr; /* input */ <br>\nsocklen_t addrlen; /* input */ <br>\nchar hbuf[NI_MAXHOST];</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">if\n(getnameinfo(addr, addrlen, hbuf, sizeof(hbuf), <br>\nNULL, 0, NI_NAMEREQD)) <br>\nprintf(&quot;could not resolve hostname&quot;); <br>\nelse <br>\nprintf(&quot;host=%s\\n&quot;, hbuf);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">An example\nprogram using <b>getnameinfo</b>() can be found in\n<a href=\"https://man.page/3/getaddrinfo\">getaddrinfo(3)</a>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/accept\">accept(2)</a>,\n<a href=\"https://man.page/2/getpeername\">getpeername(2)</a>, <a href=\"https://man.page/2/getsockname\">getsockname(2)</a>,\n<a href=\"https://man.page/2/recvfrom\">recvfrom(2)</a>, <a href=\"https://man.page/2/socket\">socket(2)</a>, <a href=\"https://man.page/3/getaddrinfo\">getaddrinfo(3)</a>,\n<a href=\"https://man.page/3/gethostbyaddr\">gethostbyaddr(3)</a>, <a href=\"https://man.page/3/getservbyname\">getservbyname(3)</a>,\n<a href=\"https://man.page/3/getservbyport\">getservbyport(3)</a>, <a href=\"https://man.page/3/inet_ntop\">inet_ntop(3)</a>,\n<a href=\"https://man.page/5/hosts\">hosts(5)</a>, <a href=\"https://man.page/5/services\">services(5)</a>, <a href=\"https://man.page/7/hostname\">hostname(7)</a>,\n<b>named</b>(8)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">R. Gilligan, S.\nThomson, J. Bound and W. Stevens, <i>Basic Socket Interface\nExtensions for IPv6</i>, RFC&nbsp;2553, March 1999.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Tatsuya Jinmei\nand Atsushi Onoe, <i>An Extension of Format for IPv6 Scoped\nAddresses</i>, internet draft, work in progress\n<a href=\"ftp://ftp.ietf.org/internet-drafts/draft-ietf-ipngwg-scopedaddr-format-02.txt\">ftp://ftp.ietf.org/internet-drafts/draft-ietf-ipngwg-scopedaddr-format-02.txt</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Craig Metz,\n<i>Protocol Independence Using the Sockets API</i>,\nProceedings of the freenix track: 2000 USENIX annual\ntechnical conference, June 2000\n<a href=\"http://www.usenix.org/publications/library/proceedings/usenix2000/freenix/metzprotocol.html\">http://www.usenix.org/publications/library/proceedings/usenix2000/freenix/metzprotocol.html</a>.</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#FILES\">FILES</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}