{"name":"pthread_exit","description":"pthread_exit -\nterminate calling thread","body":"\n\n<h1 align=\"center\">PTHREAD_EXIT</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">pthread_exit -\nterminate calling thread</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;pthread.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>void\npthread_exit(void *</b><i>retval</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Compile and\nlink with <i>-pthread</i>.</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>pthread_exit</b>() function terminates the calling thread\nand returns a value via <i>retval</i> that (if the thread is\njoinable) is available to another thread in the same process\nthat calls <a href=\"https://man.page/3/pthread_join\">pthread_join(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Any clean-up\nhandlers established by <a href=\"https://man.page/3/pthread_cleanup_push\">pthread_cleanup_push(3)</a> that\nhave not yet been popped, are popped (in the reverse of the\norder in which they were pushed) and executed. If the thread\nhas any thread-specific data, then, after the clean-up\nhandlers have been executed, the corresponding destructor\nfunctions are called, in an unspecified order.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When a thread\nterminates, process-shared resources (e.g., mutexes,\ncondition variables, semaphores, and file descriptors) are\nnot released, and functions registered using\n<a href=\"https://man.page/3/atexit\">atexit(3)</a> are not called.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">After the last\nthread in a process terminates, the process terminates as by\ncalling <a href=\"https://man.page/3/exit\">exit(3)</a> with an exit status of zero; thus,\nprocess-shared resources are released and functions\nregistered using <a href=\"https://man.page/3/atexit\">atexit(3)</a> are called.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This function\ndoes not return to the caller.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This function\nalways succeeds.</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n</table>\n\n\n<p align=\"center\"><img src=\"grohtml-3310981.png\" alt=\"Image grohtml-3310981.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Performing a\nreturn from the start function of any thread other than the\nmain thread results in an implicit call to\n<b>pthread_exit</b>(), using the function&rsquo;s return\nvalue as the thread&rsquo;s exit status.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To allow other\nthreads to continue execution, the main thread should\nterminate by calling <b>pthread_exit</b>() rather than\n<a href=\"https://man.page/3/exit\">exit(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The value\npointed to by <i>retval</i> should not be located on the\ncalling thread&rsquo;s stack, since the contents of that\nstack are undefined after the thread terminates.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Currently,\nthere are limitations in the kernel implementation logic for\n<a href=\"https://man.page/2/wait\">wait(2)</a>ing on a stopped thread group with a dead\nthread group leader. This can manifest in problems such as a\nlocked terminal if a stop signal is sent to a foreground\nprocess whose thread group leader has already called\n<b>pthread_exit</b>().</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/pthread_create\">pthread_create(3)</a>,\n<a href=\"https://man.page/3/pthread_join\">pthread_join(3)</a>, <a href=\"https://man.page/7/pthreads\">pthreads(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}