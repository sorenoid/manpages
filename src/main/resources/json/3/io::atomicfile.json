{"name":"io::atomicfile","description":"IO::AtomicFile - write a file which is updated atomically","body":"\n\n<h1 align=\"center\">IO::AtomicFile</h1>\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">IO::AtomicFile\n- write a file which is updated atomically</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">use\nIO::AtomicFile; <br>\n### Write a temp file, and have it install itself when\nclosed: <br>\nmy $FH = IO::AtomicFile-&gt;open(&quot;bar.dat&quot;,\n&quot;w&quot;); <br>\nprint $FH &quot;Hello!\\n&quot;; <br>\n$FH-&gt;close || die &quot;couldn't install atomic file:\n$!&quot;; <br>\n### Write a temp file, but delete it before it gets\ninstalled: <br>\nmy $FH = IO::AtomicFile-&gt;open(&quot;bar.dat&quot;,\n&quot;w&quot;); <br>\nprint $FH &quot;Hello!\\n&quot;; <br>\n$FH-&gt;delete; <br>\n### Write a temp file, but neither install it nor delete it:\n<br>\nmy $FH = IO::AtomicFile-&gt;open(&quot;bar.dat&quot;,\n&quot;w&quot;); <br>\nprint $FH &quot;Hello!\\n&quot;; <br>\n$FH-&gt;detach;</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This module is\nintended for people who need to update files reliably in the\nface of unexpected program termination.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For example,\nyou generally don&rsquo;t want to be halfway in the middle\nof writing <i>/etc/passwd</i> and have your program\nterminate! Even the act of writing a single scalar to a\nfilehandle is <i>not</i> atomic.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">But this module\ngives you true atomic updates, via <b>rename()</b>. When you\nopen a file <i>/foo/bar.dat</i> via this module, you are\n<i>actually</i> opening a temporary file\n<i>/foo/bar.dat..TMP</i>, and writing your output there. The\nact of closing this file (either explicitly via\n<b>close()</b>, or implicitly via the destruction of the\nobject) will cause <b>rename()</b> to be called...\ntherefore, from the point of view of the outside world, the\nfile&rsquo;s contents are updated in a single time\nquantum.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To ensure that\nproblems do not go undetected, the &quot;close&quot; method\ndone by the destructor will raise a fatal exception if the\n<b>rename()</b> fails. The explicit <b>close()</b> just\nreturns undef.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">You can also\ndecide at any point to trash the file you&rsquo;ve been\nbuilding.</p>\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Primary\nMaintainer</b> <br>\nDianne Skoll (<i>dfs@roaringpenguin.com</i>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Original\nAuthor</b> <br>\nEryq (<i>eryq@zeegee.com</i>). President, ZeeGee Software\nInc (<i>http://www.zeegee.com</i>).</p>\n\n<h2>REVISION\n<a name=\"REVISION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$Revision: 1.2\n$</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#AUTHOR\">AUTHOR</a>","<a href=\"#REVISION\">REVISION</a>"],"level":3}