{"name":"glob","description":"glob, globfree - find pathnames matching a pattern, free memory from glob()","body":"\n\n<h1 align=\"center\">GLOB</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">glob, globfree\n- find pathnames matching a pattern, free memory from\nglob()</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;glob.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nglob(const char *</b><i>pattern</i><b>, int</b>\n<i>flags</i><b>, <br>\nint (*</b><i>errfunc</i><b>) (const char\n*</b><i>epath</i><b>, int</b> <i>eerrno</i><b>), <br>\nglob_t *</b><i>pglob</i><b>); <br>\nvoid globfree(glob_t *</b><i>pglob</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>glob</b>() function searches for all the pathnames\nmatching <i>pattern</i> according to the rules used by the\nshell (see <a href=\"https://man.page/7/glob\">glob(7)</a>). No tilde expansion or parameter\nsubstitution is done; if you want these, use\n<a href=\"https://man.page/3/wordexp\">wordexp(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>globfree</b>() function frees the dynamically allocated\nstorage from an earlier call to <b>glob</b>().</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The results of\na <b>glob</b>() call are stored in the structure pointed to\nby <i>pglob</i>. This structure is of type <i>glob_t</i>\n(declared in <i>&lt;glob.h&gt;</i>) and includes the\nfollowing elements defined by POSIX.2 (more may be present\nas an extension):</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">typedef struct\n{ <br>\nsize_t gl_pathc; /* Count of paths matched so far */ <br>\nchar **gl_pathv; /* List of matched pathnames. */ <br>\nsize_t gl_offs; /* Slots to reserve in <i>gl_pathv</i>. */\n<br>\n} glob_t;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Results are\nstored in dynamically allocated storage.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The argument\n<i>flags</i> is made up of the bitwise OR of zero or more\nthe following symbolic constants, which modify the behavior\nof <b>glob</b>(): <b><br>\nGLOB_ERR</b></p>\n\n<p style=\"margin-left:22%;\">Return upon a read error\n(because a directory does not have read permission, for\nexample). By default, <b>glob</b>() attempts carry on\ndespite errors, reading all of the directories that it\ncan.</p>\n\n<p style=\"margin-left:11%;\"><b>GLOB_MARK</b></p>\n\n<p style=\"margin-left:22%;\">Append a slash to each path\nwhich corresponds to a directory.</p>\n\n<p style=\"margin-left:11%;\"><b>GLOB_NOSORT</b></p>\n\n<p style=\"margin-left:22%;\">Don&rsquo;t sort the returned\npathnames. The only reason to do this is to save processing\ntime. By default, the returned pathnames are sorted.</p>\n\n<p style=\"margin-left:11%;\"><b>GLOB_DOOFFS</b></p>\n\n<p style=\"margin-left:22%;\">Reserve\n<i>pglob-&gt;gl_offs</i> slots at the beginning of the list\nof strings in <i>pglob-&gt;pathv</i>. The reserved slots\ncontain null pointers.</p>\n\n<p style=\"margin-left:11%;\"><b>GLOB_NOCHECK</b></p>\n\n<p style=\"margin-left:22%;\">If no pattern matches, return\nthe original pattern. By default, <b>glob</b>() returns\n<b>GLOB_NOMATCH</b> if there are no matches.</p>\n\n<p style=\"margin-left:11%;\"><b>GLOB_APPEND</b></p>\n\n<p style=\"margin-left:22%;\">Append the results of this call\nto the vector of results returned by a previous call to\n<b>glob</b>(). Do not set this flag on the first invocation\nof <b>glob</b>().</p>\n\n<p style=\"margin-left:11%;\"><b>GLOB_NOESCAPE</b></p>\n\n<p style=\"margin-left:22%;\">Don&rsquo;t allow backslash\n('\\') to be used as an escape character. Normally, a\nbackslash can be used to quote the following character,\nproviding a mechanism to turn off the special meaning\nmetacharacters.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>flags</i>\nmay also include any of the following, which are GNU\nextensions and not defined by POSIX.2: <b><br>\nGLOB_PERIOD</b></p>\n\n<p style=\"margin-left:22%;\">Allow a leading period to be\nmatched by metacharacters. By default, metacharacters\ncan&rsquo;t match a leading period.</p>\n\n<p style=\"margin-left:11%;\"><b>GLOB_ALTDIRFUNC</b></p>\n\n<p style=\"margin-left:22%;\">Use alternative functions\n<i>pglob-&gt;gl_closedir</i>, <i>pglob-&gt;gl_readdir</i>,\n<i>pglob-&gt;gl_opendir</i>, <i>pglob-&gt;gl_lstat</i>, and\n<i>pglob-&gt;gl_stat</i> for filesystem access instead of\nthe normal library functions.</p>\n\n<p style=\"margin-left:11%;\"><b>GLOB_BRACE</b></p>\n\n<p style=\"margin-left:22%;\">Expand <a href=\"https://man.page/1/csh\">csh(1)</a> style\nbrace expressions of the form <b>{a,b}</b>. Brace\nexpressions can be nested. Thus, for example, specifying the\npattern &quot;{foo/{,cat,dog},bar}&quot; would return the\nsame results as four separate <b>glob</b>() calls using the\nstrings: &quot;foo/&quot;, &quot;foo/cat&quot;,\n&quot;foo/dog&quot;, and &quot;bar&quot;.</p>\n\n<p style=\"margin-left:11%;\"><b>GLOB_NOMAGIC</b></p>\n\n<p style=\"margin-left:22%;\">If the pattern contains no\nmetacharacters, then it should be returned as the sole\nmatching word, even if there is no file with that name.</p>\n\n<p style=\"margin-left:11%;\"><b>GLOB_TILDE</b></p>\n\n<p style=\"margin-left:22%;\">Carry out tilde expansion. If a\ntilde ('~') is the only character in the pattern, or an\ninitial tilde is followed immediately by a slash ('/'), then\nthe home directory of the caller is substituted for the\ntilde. If an initial tilde is followed by a username (e.g.,\n&quot;~andrea/bin&quot;), then the tilde and username are\nsubstituted by the home directory of that user. If the\nusername is invalid, or the home directory cannot be\ndetermined, then no substitution is performed.</p>\n\n<p style=\"margin-left:11%;\"><b>GLOB_TILDE_CHECK</b></p>\n\n<p style=\"margin-left:22%;\">This provides behavior similar\nto that of <b>GLOB_TILDE</b>. The difference is that if the\nusername is invalid, or the home directory cannot be\ndetermined, then instead of using the pattern itself as the\nname, <b>glob</b>() returns <b>GLOB_NOMATCH</b> to indicate\nan error.</p>\n\n<p style=\"margin-left:11%;\"><b>GLOB_ONLYDIR</b></p>\n\n<p style=\"margin-left:22%;\">This is a <i>hint</i> to\n<b>glob</b>() that the caller is interested only in\ndirectories that match the pattern. If the implementation\ncan easily determine file-type information, then\nnondirectory files are not returned to the caller. However,\nthe caller must still check that returned files are\ndirectories. (The purpose of this flag is merely to optimize\nperformance when the caller is interested only in\ndirectories.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>errfunc</i> is not NULL, it will be called in case of an\nerror with the arguments <i>epath</i>, a pointer to the path\nwhich failed, and <i>eerrno</i>, the value of <i>errno</i>\nas returned from one of the calls to <a href=\"https://man.page/3/opendir\">opendir(3)</a>,\n<a href=\"https://man.page/3/readdir\">readdir(3)</a>, or <a href=\"https://man.page/2/stat\">stat(2)</a>. If <i>errfunc</i>\nreturns nonzero, or if <b>GLOB_ERR</b> is set, <b>glob</b>()\nwill terminate after the call to <i>errfunc</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Upon successful\nreturn, <i>pglob-&gt;gl_pathc</i> contains the number of\nmatched pathnames and <i>pglob-&gt;gl_pathv</i> contains a\npointer to the list of pointers to matched pathnames. The\nlist of pointers is terminated by a null pointer.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It is possible\nto call <b>glob</b>() several times. In that case, the\n<b>GLOB_APPEND</b> flag has to be set in <i>flags</i> on the\nsecond and later invocations.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">As a GNU\nextension, <i>pglob-&gt;gl_flags</i> is set to the flags\nspecified, <b>or</b>ed with <b>GLOB_MAGCHAR</b> if any\nmetacharacters were found.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On successful\ncompletion, <b>glob</b>() returns zero. Other possible\nreturns are: <b><br>\nGLOB_NOSPACE</b></p>\n\n<p style=\"margin-left:22%;\">for running out of memory,</p>\n\n<p style=\"margin-left:11%;\"><b>GLOB_ABORTED</b></p>\n\n<p style=\"margin-left:22%;\">for a read error, and</p>\n\n<p style=\"margin-left:11%;\"><b>GLOB_NOMATCH</b></p>\n\n<p style=\"margin-left:22%;\">for no found matches.</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n</table>\n\n\n<p align=\"center\"><img src=\"grohtml-3306091.png\" alt=\"Image grohtml-3306091.png\"></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the above\ntable, <i>utent</i> in <i>race:utent</i> signifies that if\nany of the functions <a href=\"https://man.page/3/setutent\">setutent(3)</a>, <a href=\"https://man.page/3/getutent\">getutent(3)</a>,\nor <a href=\"https://man.page/3/endutent\">endutent(3)</a> are used in parallel in different\nthreads of a program, then data races could occur.\n<b>glob</b>() calls those functions, so we use race:utent to\nremind users.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008, POSIX.2.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The structure\nelements <i>gl_pathc</i> and <i>gl_offs</i> are declared as\n<i>size_t</i> in glibc 2.1, as they should be according to\nPOSIX.2, but are declared as <i>int</i> in glibc 2.0.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>glob</b>() function may fail due to failure of underlying\nfunction calls, such as <a href=\"https://man.page/3/malloc\">malloc(3)</a> or\n<a href=\"https://man.page/3/opendir\">opendir(3)</a>. These will store their error code in\n<i>errno</i>.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">One example of\nuse is the following code, which simulates typing</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">ls -l *.c\n../*.c</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">in the\nshell:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">glob_t\nglobbuf;</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">globbuf.gl_offs\n= 2; <br>\nglob(&quot;*.c&quot;, GLOB_DOOFFS, NULL, &amp;globbuf); <br>\nglob(&quot;../*.c&quot;, GLOB_DOOFFS | GLOB_APPEND, NULL,\n&amp;globbuf); <br>\nglobbuf.gl_pathv[0] = &quot;ls&quot;; <br>\nglobbuf.gl_pathv[1] = &quot;-l&quot;; <br>\nexecvp(&quot;ls&quot;, &amp;globbuf.gl_pathv[0]);</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/ls\">ls(1)</a>,\n<a href=\"https://man.page/1/sh\">sh(1)</a>, <a href=\"https://man.page/2/stat\">stat(2)</a>, <a href=\"https://man.page/3/exec\">exec(3)</a>,\n<a href=\"https://man.page/3/fnmatch\">fnmatch(3)</a>, <a href=\"https://man.page/3/malloc\">malloc(3)</a>, <a href=\"https://man.page/3/opendir\">opendir(3)</a>,\n<a href=\"https://man.page/3/readdir\">readdir(3)</a>, <a href=\"https://man.page/3/wordexp\">wordexp(3)</a>, <a href=\"https://man.page/7/glob\">glob(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}