{"name":"xml::xpathengine::nodeset","description":"XML::XPathEngine::NodeSet - a list of XML document nodes","body":"\n\n<h1 align=\"center\">XML::XPathEngine::NodeSet</h1>\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">XML::XPathEngine::NodeSet\n- a list of XML document nodes</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">An\nXML::XPathEngine::NodeSet object contains an ordered list of\nnodes. The nodes each take the same format as described in\nXML::XPathEngine::XMLParser.</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">my $results =\n$xp-&gt;find('//someelement'); <br>\nif (!$results-&gt;isa('XML::XPathEngine::NodeSet')) { <br>\nprint &quot;Found $results\\n&quot;; <br>\nexit; <br>\n} <br>\nforeach my $context ($results-&gt;get_nodelist) { <br>\nmy $newresults = $xp-&gt;find('./other/element', $context);\n<br>\n... <br>\n}</p>\n\n<h2>API\n<a name=\"API\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>new()</i>\n<br>\nYou will almost never have to create a new NodeSet object,\nas it is all done for you by XPath.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>get_nodelist()</i>\n<br>\nReturns a list of nodes. See XML::XPathEngine::XMLParser for\nthe format of the nodes.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>string_value()</i>\n<br>\nReturns the string-value of the first node in the list. See\nthe XPath specification for what &quot;string-value&quot;\nmeans.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>string_values()</i>\n<br>\nReturns a list of the string-values of all the nodes in the\nlist.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>to_literal()</i>\n<br>\nReturns the concatenation of all the string-values of all\nthe nodes in the list.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>get_node($pos)</b>\n<br>\nReturns the node at $pos. The node position in XPath is\nbased at 1, not 0.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>size()</i>\n<br>\nReturns the number of nodes in the NodeSet.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>pop()</i>\n<br>\nEquivalent to perl&rsquo;s pop function.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>push(@nodes)</b>\n<br>\nEquivalent to perl&rsquo;s push function.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>append($nodeset)</b>\n<br>\nGiven a nodeset, appends the list of nodes in $nodeset to\nthe end of the current list.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>shift()</i>\n<br>\nEquivalent to perl&rsquo;s shift function.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>unshift(@nodes)</b>\n<br>\nEquivalent to perl&rsquo;s unshift function.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>prepend($nodeset)</b>\n<br>\nGiven a nodeset, prepends the list of nodes in $nodeset to\nthe front of the current list.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#API\">API</a>"],"level":3}