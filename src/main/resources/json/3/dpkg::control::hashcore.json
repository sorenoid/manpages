{"name":"dpkg::control::hashcore","body":"\n\n<h1 align=\"center\">Dpkg::Control::HashCore</h1>\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Dpkg::Control::HashCore\n- parse and manipulate a block of RFC822-like fields</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nDpkg::Control::Hash class is a hash-like representation of a\nset of RFC822-like fields. The fields names are case\ninsensitive and are always capitalized the same when output\n(see field_capitalize function in Dpkg::Control::Fields).\nThe order in which fields have been set is remembered and is\nused to be able to dump back the same content. The output\norder can also be overridden if needed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">You can store\narbitrary values in the hash, they will always be properly\nescaped in the output to conform to the syntax of control\nfiles. This is relevant mainly for multilines values: while\nthe first line is always output unchanged directly after the\nfield name, supplementary lines are modified. Empty lines\nand lines containing only dots are prefixed with &quot;\n.&quot; (space + dot) while other lines are prefixed with a\nsingle space.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">During parsing,\ntrailing spaces are stripped on all lines while leading\nspaces are stripped only on the first line of each\nfield.</p>\n\n<h2>METHODS\n<a name=\"METHODS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$c =\nDpkg::Control::Hash-&gt;new(%opts)</p>\n\n<p style=\"margin-left:17%;\">Creates a new object with the\nindicated options. Supported options are: <br>\nallow_pgp</p>\n\n<p style=\"margin-left:29%;\">Configures the parser to accept\nOpenPGP signatures around the control information. Value can\nbe 0 (default) or 1.</p>\n\n<p style=\"margin-left:17%;\">allow_duplicate</p>\n\n<p style=\"margin-left:29%;\">Configures the parser to allow\nduplicate fields in the control information. The last value\noverrides any previous values. Value can be 0 (default) or\n1.</p>\n\n<p style=\"margin-left:17%;\">keep_duplicate</p>\n\n<p style=\"margin-left:29%;\">Configure the parser to keep\nvalues for duplicate fields found in the control information\n(when <b>allow_duplicate</b> is enabled), as array\nreferences. Value can be 0 (default) or 1.</p>\n\n<p style=\"margin-left:17%;\">drop_empty</p>\n\n<p style=\"margin-left:29%;\">Defines if empty fields are\ndropped during the output. Value can be 0 (default) or\n1.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"17%\"></td>\n<td width=\"6%\">\n\n\n<p>name</p></td>\n<td width=\"6%\"></td>\n<td width=\"71%\">\n\n\n<p>The user friendly name of the information stored in the\nobject. It might be used in some error messages or warnings.\nA default name might be set depending on the type.</p></td></tr>\n</table>\n\n<p style=\"margin-left:17%;\">is_pgp_signed</p>\n\n<p style=\"margin-left:29%;\">Set by the parser (starting in\ndpkg 1.17.0) if it finds an OpenPGP signature around the\ncontrol information. Value can be 0 (default) or 1, and\nundef when the option is not supported by the code (in\nversions older than dpkg 1.17.0).</p>\n\n<p style=\"margin-left:11%;\">$c-&gt;set_options($option,\n%opts)</p>\n\n<p style=\"margin-left:17%;\">Changes the value of one or\nmore options.</p>\n\n<p style=\"margin-left:11%;\">$value =\n$c-&gt;get_option($option)</p>\n\n<p style=\"margin-left:17%;\">Returns the value of the\ncorresponding option.</p>\n\n<p style=\"margin-left:11%;\">$c-&gt;parse_error($file, $fmt,\n...)</p>\n\n<p style=\"margin-left:17%;\">Prints an error message and\ndies on syntax parse errors.</p>\n\n<p style=\"margin-left:11%;\">$c-&gt;parse($fh,\n$description)</p>\n\n<p style=\"margin-left:17%;\">Parse a control file from the\ngiven filehandle. Exits in case of errors. $description is\nused to describe the filehandle, ideally it&rsquo;s a\nfilename or a description of where the data comes from.\nIt&rsquo;s used in error messages. When called multiple\ntimes, the parsed fields are accumulated.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Returns true if\nsome fields have been parsed.</p>\n\n<p style=\"margin-left:11%;\">$c-&gt;load($file)</p>\n\n<p style=\"margin-left:17%;\">Parse the content of $file.\nExits in case of errors. Returns true if some fields have\nbeen parsed.</p>\n\n\n<p style=\"margin-left:11%;\">$c-&gt;find_custom_field($name)</p>\n\n<p style=\"margin-left:17%;\">Scan the fields and look for a\nuser specific field whose name matches the following regex:\n/X[ <small>SBC</small> ]*-$name/i. Return the name of the\nfield found or undef if nothing has been found.</p>\n\n\n<p style=\"margin-left:11%;\">$c-&gt;get_custom_field($name)</p>\n\n<p style=\"margin-left:17%;\">Identify a user field and\nretrieve its value.</p>\n\n<p style=\"margin-left:11%;\">$str = $c-&gt;<b>output()</b>\n<br>\n&quot;$c&quot;</p>\n\n<p style=\"margin-left:17%;\">Get a string representation of\nthe control information. The fields are sorted in the order\nin which they have been read or set except if the order has\nbeen overridden with <b>set_output_order()</b>.</p>\n\n<p style=\"margin-left:11%;\">$c-&gt;output($fh)</p>\n\n<p style=\"margin-left:17%;\">Print the string representation\nof the control information to a filehandle.</p>\n\n<p style=\"margin-left:11%;\">$c-&gt;save($filename)</p>\n\n<p style=\"margin-left:17%;\">Write the string representation\nof the control information to a file.</p>\n\n\n<p style=\"margin-left:11%;\">$c-&gt;set_output_order(@fields)</p>\n\n<p style=\"margin-left:17%;\">Define the order in which\nfields will be displayed in the <b>output()</b> method.</p>\n\n\n<p style=\"margin-left:11%;\">$c-&gt;apply_substvars($substvars)</p>\n\n<p style=\"margin-left:17%;\">Update all fields by replacing\nthe variables references with the corresponding value stored\nin the Dpkg::Substvars object.</p>\n\n<h2>CHANGES\n<a name=\"CHANGES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.02\n(dpkg 1.21.0)</b> <br>\nNew option: &quot;keep_duplicate&quot; in <b>new()</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.01\n(dpkg 1.17.2)</b> <br>\nNew method: $c-&gt;<b>parse_error()</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.00\n(dpkg 1.17.0)</b> <br>\nMark the module as public.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#METHODS\">METHODS</a>","<a href=\"#CHANGES\">CHANGES</a>"],"level":3}