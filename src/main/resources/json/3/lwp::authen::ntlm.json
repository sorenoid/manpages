{"name":"lwp::authen::ntlm","description":"LWP::Authen::Ntlm - Library for enabling NTLM authentication (Microsoft) in LWP","body":"\n\n<h1 align=\"center\">LWP::Authen::Ntlm</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">LWP::Authen::Ntlm\n- Library for enabling NTLM authentication (Microsoft) in\nLWP</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">use\nLWP::UserAgent; <br>\nuse HTTP::Request::Common; <br>\nmy $url = 'http://www.company.com/protected_page.html'; <br>\n# Set up the ntlm client and then the base64 encoded ntlm\nhandshake message <br>\nmy $ua = LWP::UserAgent-&gt;new(keep_alive=&gt;1); <br>\n$ua-&gt;credentials('www.company.com:80', '',\n&quot;MyDomain\\\\MyUserCode&quot;, 'MyPassword'); <br>\n$request = GET $url; <br>\nprint &quot;--Performing request now...-----------\\n&quot;;\n<br>\n$response = $ua-&gt;request($request); <br>\nprint &quot;--Done with request-------------------\\n&quot;;\n<br>\nif ($response-&gt;is_success) {print &quot;It\nworked!-&gt;&quot; . $response-&gt;code . &quot;\\n&quot;}\n<br>\nelse {print &quot;It didn't work!-&gt;&quot; .\n$response-&gt;code . &quot;\\n&quot;}</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">LWP::Authen::Ntlm\nallows <small>LWP</small> to authenticate against servers\nthat are using the <small>NTLM</small> authentication scheme\npopularized by Microsoft. This type of authentication is\ncommon on intranets of Microsoft-centric organizations.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The module\ntakes advantage of the Authen::NTLM module by Mark Bush.\nSince there is also another Authen::NTLM module available\nfrom <small>CPAN</small> by Yee Man Chan with an entirely\ndifferent interface, it is necessary to ensure that you have\nthe correct <small>NTLM</small> module.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In addition,\nthere have been problems with incompatibilities between\ndifferent versions of Mime::Base64, which Bush&rsquo;s\nAuthen::NTLM makes use of. Therefore, it is necessary to\nensure that your Mime::Base64 module supports exporting of\nthe &quot;encode_base64&quot; and &quot;decode_base64&quot;\nfunctions.</p>\n\n<h2>USAGE\n<a name=\"USAGE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The module is\nused indirectly through <small>LWP,</small> rather than\nincluding it directly in your code. The <small>LWP</small>\nsystem will invoke the <small>NTLM</small> authentication\nwhen it encounters the authentication scheme while\nattempting to retrieve a <small>URL</small> from a server.\nIn order for the <small>NTLM</small> authentication to work,\nyou must have a few things set up in your code prior to\nattempting to retrieve the <small>URL:</small></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"52%\">\n\n\n<p>Enable persistent <small>HTTP</small> connections</p></td>\n<td width=\"31%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:17%; margin-top: 1em\">To do this,\npass the &quot;keep_alive=&gt;1&quot; option to the\nLWP::UserAgent when creating it, like this:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">my $ua =\nLWP::UserAgent-&gt;new(keep_alive=&gt;1);</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"5%\"></td>\n<td width=\"66%\">\n\n\n<p style=\"margin-top: 1em\">Set the credentials on the\nUserAgent object</p></td>\n<td width=\"17%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The credentials\nmust be set like this:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ua-&gt;credentials('www.company.com:80',\n'', &quot;MyDomain\\\\MyUserCode&quot;, 'MyPassword');</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that you\ncannot use the HTTP::Request object&rsquo;s\n&quot;authorization_basic()&quot; method to set the\ncredentials. Note, too, that the 'www.company.com:80'\nportion only sets credentials on the specified port\n<small>AND</small> it is case-sensitive (this is due to the\nway <small>LWP</small> is coded, and has nothing to do with\nLWP::Authen::Ntlm)</p>\n\n<h2>AVAILABILITY\n<a name=\"AVAILABILITY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">General queries\nregarding <small>LWP</small> should be made to the\n<small>LWP</small> Mailing List.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Questions\nspecific to LWP::Authen::Ntlm can be forwarded to\njtillman@bigfoot.com</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright (c)\n2002 James Tillman. All rights reserved. This program is\nfree software; you can redistribute it and/or modify it\nunder the same terms as Perl itself.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><small>LWP</small>\n, LWP::UserAgent, lwpcook.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#USAGE\">USAGE</a>","<a href=\"#AVAILABILITY\">AVAILABILITY</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"],"level":3}