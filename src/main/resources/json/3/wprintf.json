{"name":"wprintf","description":"wprintf, fwprintf, swprintf, vwprintf, vfwprintf, vswprintf - formatted wide-character output conversion","body":"\n\n<h1 align=\"center\">WPRINTF</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">wprintf,\nfwprintf, swprintf, vwprintf, vfwprintf, vswprintf -\nformatted wide-character output conversion</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;stdio.h&gt; <br>\n#include &lt;wchar.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nwprintf(const wchar_t *</b><i>format</i><b>, ...); <br>\nint fwprintf(FILE *</b><i>stream</i><b>, const wchar_t\n*</b><i>format</i><b>, ...); <br>\nint swprintf(wchar_t *</b><i>wcs</i><b>, size_t</b>\n<i>maxlen</i><b>, <br>\nconst wchar_t *</b><i>format</i><b>, ...);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nvwprintf(const wchar_t *</b><i>format</i><b>, va_list</b>\n<i>args</i><b>); <br>\nint vfwprintf(FILE *</b><i>stream</i><b>, const wchar_t\n*</b><i>format</i><b>, va_list</b> <i>args</i><b>); <br>\nint vswprintf(wchar_t *</b><i>wcs</i><b>, size_t</b>\n<i>maxlen</i><b>, <br>\nconst wchar_t *</b><i>format</i><b>, va_list</b>\n<i>args</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All functions\nshown above:</p>\n\n\n<p style=\"margin-left:17%;\">_XOPEN_SOURCE&nbsp;&gt;=&nbsp;500\n|| _ISOC99_SOURCE || <br>\n_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200112L</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>wprintf</b>() family of functions is the wide-character\nequivalent of the <a href=\"https://man.page/3/printf\">printf(3)</a> family of functions. It\nperforms formatted output of wide characters.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>wprintf</b>() and <b>vwprintf</b>() functions perform\nwide-character output to <i>stdout</i>. <i>stdout</i> must\nnot be byte oriented; see <a href=\"https://man.page/3/fwide\">fwide(3)</a> for more\ninformation.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>fwprintf</b>() and <b>vfwprintf</b>() functions perform\nwide-character output to <i>stream</i>. <i>stream</i> must\nnot be byte oriented; see <a href=\"https://man.page/3/fwide\">fwide(3)</a> for more\ninformation.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>swprintf</b>() and <b>vswprintf</b>() functions perform\nwide-character output to an array of wide characters. The\nprogrammer must ensure that there is room for at least\n<i>maxlen</i> wide characters at <i>wcs</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">These functions\nare like the <a href=\"https://man.page/3/printf\">printf(3)</a>, <a href=\"https://man.page/3/vprintf\">vprintf(3)</a>,\n<a href=\"https://man.page/3/fprintf\">fprintf(3)</a>, <a href=\"https://man.page/3/vfprintf\">vfprintf(3)</a>, <a href=\"https://man.page/3/sprintf\">sprintf(3)</a>,\n<a href=\"https://man.page/3/vsprintf\">vsprintf(3)</a> functions except for the following\ndifferences:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p><b>&bull;</b></p></td>\n<td width=\"10%\"></td>\n<td width=\"78%\">\n\n\n<p>The <i>format</i> string is a wide-character string.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p><b>&bull;</b></p></td>\n<td width=\"10%\"></td>\n<td width=\"78%\">\n\n\n<p>The output consists of wide characters, not bytes.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p><b>&bull;</b></p></td>\n<td width=\"10%\"></td>\n<td width=\"78%\">\n\n\n<p><b>swprintf</b>() and <b>vswprintf</b>() take a\n<i>maxlen</i> argument, <a href=\"https://man.page/3/sprintf\">sprintf(3)</a> and\n<a href=\"https://man.page/3/vsprintf\">vsprintf(3)</a> do not. (<a href=\"https://man.page/3/snprintf\">snprintf(3)</a> and\n<a href=\"https://man.page/3/vsnprintf\">vsnprintf(3)</a> take a <i>maxlen</i> argument, but these\nfunctions do not return -1 upon buffer overflow on\nLinux.)</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The treatment\nof the conversion characters <b>c</b> and <b>s</b> is\ndifferent:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\"><b>c</b></p></td>\n<td width=\"10%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">If no <b>l</b> modifier is\npresent, the <i>int</i> argument is converted to a wide\ncharacter by a call to the <a href=\"https://man.page/3/btowc\">btowc(3)</a> function, and the\nresulting wide character is written. If an <b>l</b> modifier\nis present, the <i>wint_t</i> (wide character) argument is\nwritten.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p><b>s</b></p></td>\n<td width=\"10%\"></td>\n<td width=\"78%\">\n\n\n<p>If no <b>l</b> modifier is present: the\n<i>const&nbsp;char&nbsp;*</i> argument is expected to be a\npointer to an array of character type (pointer to a string)\ncontaining a multibyte character sequence beginning in the\ninitial shift state. Characters from the array are converted\nto wide characters (each by a call to the <a href=\"https://man.page/3/mbrtowc\">mbrtowc(3)</a>\nfunction with a conversion state starting in the initial\nstate before the first byte). The resulting wide characters\nare written up to (but not including) the terminating null\nwide character (L'\\0'). If a precision is specified, no more\nwide characters than the number specified are written. Note\nthat the precision determines the number of <i>wide\ncharacters</i> written, not the number of <i>bytes</i> or\n<i>screen positions</i>. The array must contain a\nterminating null byte ('\\0'), unless a precision is given\nand it is so small that the number of converted wide\ncharacters reaches it before the end of the array is\nreached. If an <b>l</b> modifier is present: the\n<i>const&nbsp;wchar_t&nbsp;*</i> argument is expected to be\na pointer to an array of wide characters. Wide characters\nfrom the array are written up to (but not including) a\nterminating null wide character. If a precision is\nspecified, no more than the number specified are written.\nThe array must contain a terminating null wide character,\nunless a precision is given and it is smaller than or equal\nto the number of wide characters in the array.</p></td></tr>\n</table>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The functions\nreturn the number of wide characters written, excluding the\nterminating null wide character in case of the functions\n<b>swprintf</b>() and <b>vswprintf</b>(). They return -1\nwhen an error occurs.</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3421151.png\" alt=\"Image grohtml-3421151.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008, C99.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The behavior of\n<b>wprintf</b>() et al. depends on the <b>LC_CTYPE</b>\ncategory of the current locale.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\n<i>format</i> string contains non-ASCII wide characters, the\nprogram will work correctly only if the <b>LC_CTYPE</b>\ncategory of the current locale at run time is the same as\nthe <b>LC_CTYPE</b> category of the current locale at\ncompile time. This is because the <i>wchar_t</i>\nrepresentation is platform- and locale-dependent. (The glibc\nrepresents wide characters using their Unicode (ISO-10646)\ncode point, but other platforms don&rsquo;t do this. Also,\nthe use of C99 universal character names of the form \\unnnn\ndoes not solve this problem.) Therefore, in\ninternationalized programs, the <i>format</i> string should\nconsist of ASCII wide characters only, or should be\nconstructed at run time in an internationalized way (e.g.,\nusing <a href=\"https://man.page/3/gettext\">gettext(3)</a> or <a href=\"https://man.page/3/iconv\">iconv(3)</a>, followed by\n<a href=\"https://man.page/3/mbstowcs\">mbstowcs(3)</a>).</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/fprintf\">fprintf(3)</a>,\n<a href=\"https://man.page/3/fputwc\">fputwc(3)</a>, <a href=\"https://man.page/3/fwide\">fwide(3)</a>, <a href=\"https://man.page/3/printf\">printf(3)</a>,\n<a href=\"https://man.page/3/snprintf\">snprintf(3)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}