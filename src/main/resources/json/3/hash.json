{"name":"hash","description":"hash - hash database access method","body":"\n\n<h1 align=\"center\">HASH</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">hash - hash\ndatabase access method</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/types.h&gt; <br>\n#include &lt;db.h&gt;</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><i>Note\nwell</i></b>: This page documents interfaces provided in\nglibc up until version 2.1. Since version 2.2, glibc no\nlonger provides these interfaces. Probably, you are looking\nfor the APIs provided by the <i>libdb</i> library\ninstead.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The routine\n<a href=\"https://man.page/3/dbopen\">dbopen(3)</a> is the library interface to database files.\nOne of the supported file formats is hash files. The general\ndescription of the database access methods is in\n<a href=\"https://man.page/3/dbopen\">dbopen(3)</a>, this manual page describes only the\nhash-specific information.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The hash data\nstructure is an extensible, dynamic hashing scheme.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\naccess-method-specific data structure provided to\n<a href=\"https://man.page/3/dbopen\">dbopen(3)</a> is defined in the <i>&lt;db.h&gt;</i>\ninclude file as follows:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">typedef struct\n{ <br>\nunsigned int bsize; <br>\nunsigned int ffactor; <br>\nunsigned int nelem; <br>\nunsigned int cachesize; <br>\nuint32_t (*hash)(const void *, size_t); <br>\nint lorder; <br>\n} HASHINFO;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The elements of\nthis structure are as follows:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"14%\">\n\n\n<p><i>bsize</i></p></td>\n<td width=\"1%\"></td>\n<td width=\"74%\">\n\n\n<p>defines the hash table bucket size, and is, by default,\n256 bytes. It may be preferable to increase the page size\nfor disk-resident tables and tables with large data\nitems.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"14%\">\n\n\n<p><i>ffactor</i></p></td>\n<td width=\"1%\"></td>\n<td width=\"74%\">\n\n\n<p>indicates a desired density within the hash table. It is\nan approximation of the number of keys allowed to accumulate\nin any one bucket, determining when the hash table grows or\nshrinks. The default value is 8.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"14%\">\n\n\n<p><i>nelem</i></p></td>\n<td width=\"1%\"></td>\n<td width=\"74%\">\n\n\n<p>is an estimate of the final size of the hash table. If\nnot set or set too low, hash tables will expand gracefully\nas keys are entered, although a slight performance\ndegradation may be noticed. The default value is 1.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"14%\">\n\n\n<p><i>cachesize</i></p></td>\n<td width=\"1%\"></td>\n<td width=\"74%\">\n\n\n<p>is the suggested maximum size, in bytes, of the memory\ncache. This value is <i>only advisory</i>, and the access\nmethod will allocate more memory rather than fail.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"14%\">\n\n\n<p><i>hash</i></p></td>\n<td width=\"1%\"></td>\n<td width=\"74%\">\n\n\n<p>is a user-defined hash function. Since no hash function\nperforms equally well on all possible data, the user may\nfind that the built-in hash function does poorly on a\nparticular data set. A user-specified hash functions must\ntake two arguments (a pointer to a byte string and a length)\nand return a 32-bit quantity to be used as the hash\nvalue.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"14%\">\n\n\n<p><i>lorder</i></p></td>\n<td width=\"1%\"></td>\n<td width=\"74%\">\n\n\n<p>is the byte order for integers in the stored database\nmetadata. The number should represent the order as an\ninteger; for example, big endian order would be the number\n4,321. If <i>lorder</i> is 0 (no order is specified), the\ncurrent host order is used. If the file already exists, the\nspecified value is ignored and the value specified when the\ntree was created is used.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the file\nalready exists (and the <b>O_TRUNC</b> flag is not\nspecified), the values specified for <i>bsize</i>,\n<i>ffactor</i>, <i>lorder</i>, and <i>nelem</i> are ignored\nand the values specified when the tree was created are\nused.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If a hash\nfunction is specified, <i>hash_open</i> attempts to\ndetermine if the hash function specified is the same as the\none with which the database was created, and fails if it is\nnot.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Backward-compatible\ninterfaces to the routines described in <a href=\"https://man.page/3/dbm\">dbm(3)</a>, and\n<a href=\"https://man.page/3/ndbm\">ndbm(3)</a> are provided, however these interfaces are\nnot compatible with previous file formats.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <i>hash</i>\naccess method routines may fail and set <i>errno</i> for any\nof the errors specified for the library routine\n<a href=\"https://man.page/3/dbopen\">dbopen(3)</a>.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Only big and\nlittle endian byte order are supported.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/btree\">btree(3)</a>,\n<a href=\"https://man.page/3/dbopen\">dbopen(3)</a>, <a href=\"https://man.page/3/mpool\">mpool(3)</a>, <a href=\"https://man.page/3/recno\">recno(3)</a></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Dynamic Hash\nTables</i>, Per-Ake Larson, Communications of the ACM, April\n1988.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>A New Hash\nPackage for UNIX</i>, Margo Seltzer, USENIX Proceedings,\nWinter 1991.</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}