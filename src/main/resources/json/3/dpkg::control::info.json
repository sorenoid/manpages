{"name":"dpkg::control::info","body":"\n\n<h1 align=\"center\">Dpkg::Control::Info</h1>\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Dpkg::Control::Info\n- parse files like debian/control</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">It provides a\nclass to access data of files that follow the same syntax as\n<i>debian/control</i>.</p>\n\n<h2>METHODS\n<a name=\"METHODS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">$c =\nDpkg::Control::Info-&gt;new(%opts)</p>\n\n<p style=\"margin-left:17%;\">Create a new\nDpkg::Control::Info object. Loads the file from the filename\noption, if no option is specified filename defaults to\n<i>debian/control</i>. If a scalar is passed instead, it\nwill be used as the filename. If filename is &quot;-&quot;,\nit parses the standard input. If filename is undef no\nloading will be performed.</p>\n\n<p style=\"margin-left:11%;\">$c-&gt;<b>reset()</b></p>\n\n<p style=\"margin-left:17%;\">Resets what got read.</p>\n\n<p style=\"margin-left:11%;\">$c-&gt;parse($fh,\n$description)</p>\n\n<p style=\"margin-left:17%;\">Parse a control file from the\ngiven filehandle. Exits in case of errors. $description is\nused to describe the filehandle, ideally it&rsquo;s a\nfilename or a description of where the data comes from. It\nis used in error messages. The data in the object is reset\nbefore parsing new control files.</p>\n\n<p style=\"margin-left:11%;\">$c-&gt;load($file)</p>\n\n<p style=\"margin-left:17%;\">Load the content of $file.\nExits in case of errors. If file is &quot;-&quot;, it loads\nfrom the standard input.</p>\n\n<p style=\"margin-left:11%;\">$c-&gt;[0] <br>\n$c-&gt;<b>get_source()</b></p>\n\n<p style=\"margin-left:17%;\">Returns a Dpkg::Control object\ncontaining the fields concerning the source package.</p>\n\n\n<p style=\"margin-left:11%;\">$c-&gt;get_pkg_by_idx($idx)</p>\n\n<p style=\"margin-left:17%;\">Returns a Dpkg::Control object\ncontaining the fields concerning the binary package numbered\n$idx (starting at 1).</p>\n\n\n<p style=\"margin-left:11%;\">$c-&gt;get_pkg_by_name($name)</p>\n\n<p style=\"margin-left:17%;\">Returns a Dpkg::Control object\ncontaining the fields concerning the binary package named\n$name.</p>\n\n\n<p style=\"margin-left:11%;\">$c-&gt;<b>get_packages()</b></p>\n\n<p style=\"margin-left:17%;\">Returns a list containing the\nDpkg::Control objects for all binary packages.</p>\n\n<p style=\"margin-left:11%;\">$str = $c-&gt;output([$fh])</p>\n\n<p style=\"margin-left:17%;\">Return the content info into a\nstring. If $fh is specified print it into the\nfilehandle.</p>\n\n<p style=\"margin-left:11%;\">&quot;$c&quot;</p>\n\n<p style=\"margin-left:17%;\">Return a string representation\nof the content.</p>\n\n<p style=\"margin-left:11%;\">@{$c}</p>\n\n<p style=\"margin-left:17%;\">Return a list of Dpkg::Control\nobjects, the first one is corresponding to source\ninformation and the following ones are the binary packages\ninformation.</p>\n\n<h2>CHANGES\n<a name=\"CHANGES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.01\n(dpkg 1.18.0)</b> <br>\nNew argument: The $c-&gt;<b>new()</b> constructor accepts an\n%opts argument.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Version 1.00\n(dpkg 1.15.6)</b> <br>\nMark the module as public.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#METHODS\">METHODS</a>","<a href=\"#CHANGES\">CHANGES</a>"],"level":3}