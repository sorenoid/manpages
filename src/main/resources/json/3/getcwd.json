{"name":"getcwd","description":"getcwd, getwd,\nget_current_dir_name - get current working directory","body":"\n\n<h1 align=\"center\">GETCWD</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">getcwd, getwd,\nget_current_dir_name - get current working directory</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;unistd.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>char\n*getcwd(char *</b><i>buf</i><b>, size_t</b>\n<i>size</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>char\n*getwd(char *</b><i>buf</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>char\n*get_current_dir_name(void);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>get_current_dir_name</b>():</p>\n\n<p style=\"margin-left:22%;\">_GNU_SOURCE</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>getwd</b>():</p>\n\n<p style=\"margin-left:17%;\">Since glibc 2.12:</p>\n\n\n<p style=\"margin-left:23%;\">(_XOPEN_SOURCE&nbsp;&gt;=&nbsp;500)\n&amp;&amp; ! (_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200809L) <br>\n|| /* Glibc since 2.19: */ _DEFAULT_SOURCE <br>\n|| /* Glibc versions &lt;= 2.19: */ _BSD_SOURCE</p>\n\n<p style=\"margin-left:17%;\">Before glibc 2.12:</p>\n\n<p style=\"margin-left:23%;\">_BSD_SOURCE ||\n_XOPEN_SOURCE&nbsp;&gt;=&nbsp;500</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These functions\nreturn a null-terminated string containing an absolute\npathname that is the current working directory of the\ncalling process. The pathname is returned as the function\nresult and via the argument <i>buf</i>, if present.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>getcwd</b>() function copies an absolute pathname of the\ncurrent working directory to the array pointed to by\n<i>buf</i>, which is of length <i>size</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the length\nof the absolute pathname of the current working directory,\nincluding the terminating null byte, exceeds <i>size</i>\nbytes, NULL is returned, and <i>errno</i> is set to\n<b>ERANGE</b>; an application should check for this error,\nand allocate a larger buffer if necessary.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">As an extension\nto the POSIX.1-2001 standard, glibc&rsquo;s <b>getcwd</b>()\nallocates the buffer dynamically using <a href=\"https://man.page/3/malloc\">malloc(3)</a> if\n<i>buf</i> is NULL. In this case, the allocated buffer has\nthe length <i>size</i> unless <i>size</i> is zero, when\n<i>buf</i> is allocated as big as necessary. The caller\nshould <a href=\"https://man.page/3/free\">free(3)</a> the returned buffer.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>get_current_dir_name</b>()\nwill <a href=\"https://man.page/3/malloc\">malloc(3)</a> an array big enough to hold the\nabsolute pathname of the current working directory. If the\nenvironment variable <b>PWD</b> is set, and its value is\ncorrect, then that value will be returned. The caller should\n<a href=\"https://man.page/3/free\">free(3)</a> the returned buffer.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>getwd</b>()\ndoes not <a href=\"https://man.page/3/malloc\">malloc(3)</a> any memory. The <i>buf</i>\nargument should be a pointer to an array at least\n<b>PATH_MAX</b> bytes long. If the length of the absolute\npathname of the current working directory, including the\nterminating null byte, exceeds <b>PATH_MAX</b> bytes, NULL\nis returned, and <i>errno</i> is set to <b>ENAMETOOLONG</b>.\n(Note that on some systems, <b>PATH_MAX</b> may not be a\ncompile-time constant; furthermore, its value may depend on\nthe filesystem, see <a href=\"https://man.page/3/pathconf\">pathconf(3)</a>.) For portability and\nsecurity reasons, use of <b>getwd</b>() is deprecated.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\nthese functions return a pointer to a string containing the\npathname of the current working directory. In the case of\n<b>getcwd</b>() and <b>getwd</b>() this is the same value as\n<i>buf</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On failure,\nthese functions return NULL, and <i>errno</i> is set to\nindicate the error. The contents of the array pointed to by\n<i>buf</i> are undefined on error.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EACCES</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">Permission to read or search a\ncomponent of the filename was denied.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EFAULT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>buf</i> points to a bad address.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The <i>size</i> argument is zero and <i>buf</i> is not a\nnull pointer.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><b>getwd</b>(): <i>buf</i> is NULL.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ENAMETOOLONG</b></p>\n\n<p style=\"margin-left:22%;\"><b>getwd</b>(): The size of the\nnull-terminated absolute pathname string exceeds\n<b>PATH_MAX</b> bytes.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOENT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The current working directory has been unlinked.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOMEM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Out of memory.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ERANGE</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The <i>size</i> argument is less than the length of the\nabsolute pathname of the working directory, including the\nterminating null byte. You need to allocate a bigger array\nand try again.</p></td></tr>\n</table>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3336801.png\" alt=\"Image grohtml-3336801.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>getcwd</b>()\nconforms to POSIX.1-2001. Note however that POSIX.1-2001\nleaves the behavior of <b>getcwd</b>() unspecified if\n<i>buf</i> is NULL.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>getwd</b>()\nis present in POSIX.1-2001, but marked LEGACY. POSIX.1-2008\nremoves the specification of <b>getwd</b>(). Use\n<b>getcwd</b>() instead. POSIX.1-2001 does not define any\nerrors for <b>getwd</b>().</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>get_current_dir_name</b>()\nis a GNU extension.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Under Linux,\nthese functions make use of the <b>getcwd</b>() system call\n(available since Linux 2.1.92). On older systems they would\nquery <i>/proc/self/cwd</i>. If both system call and proc\nfilesystem are missing, a generic implementation is called.\nOnly in that case can these calls fail under Linux with\n<b>EACCES</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">These functions\nare often used to save the location of the current working\ndirectory for the purpose of returning to it later. Opening\nthe current directory (&quot;.&quot;) and calling\n<a href=\"https://man.page/2/fchdir\">fchdir(2)</a> to return is usually a faster and more\nreliable alternative when sufficiently many file descriptors\nare available, especially on platforms other than Linux.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>C\nlibrary/kernel differences</b> <br>\nOn Linux, the kernel provides a <b>getcwd</b>() system call,\nwhich the functions described in this page will use if\npossible. The system call takes the same arguments as the\nlibrary function of the same name, but is limited to\nreturning at most <b>PATH_MAX</b> bytes. (Before Linux 3.12,\nthe limit on the size of the returned pathname was the\nsystem page size. On many architectures, <b>PATH_MAX</b> and\nthe system page size are both 4096 bytes, but a few\narchitectures have a larger page size.) If the length of the\npathname of the current working directory exceeds this\nlimit, then the system call fails with the error\n<b>ENAMETOOLONG</b>. In this case, the library functions\nfall back to a (slower) alternative implementation that\nreturns the full pathname.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Following a\nchange in Linux 2.6.36, the pathname returned by the\n<b>getcwd</b>() system call will be prefixed with the string\n&quot;(unreachable)&quot; if the current directory is not\nbelow the root directory of the current process (e.g.,\nbecause the process set a new filesystem root using\n<a href=\"https://man.page/2/chroot\">chroot(2)</a> without changing its current directory into\nthe new root). Such behavior can also be caused by an\nunprivileged user by changing the current directory into\nanother mount namespace. When dealing with pathname from\nuntrusted sources, callers of the functions described in\nthis page should consider checking whether the returned\npathname starts with &rsquo;/&rsquo; or &rsquo;(&rsquo; to\navoid misinterpreting an unreachable path as a relative\npathname.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Since the Linux\n2.6.36 change that added &quot;(unreachable)&quot; in the\ncircumstances described above, the glibc implementation of\n<b>getcwd</b>() has failed to conform to POSIX and returned\na relative pathname when the API contract requires an\nabsolute pathname. With glibc 2.27 onwards this is\ncorrected; calling <b>getcwd</b>() from such a pathname will\nnow result in failure with <b>ENOENT</b>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/pwd\">pwd(1)</a>,\n<a href=\"https://man.page/2/chdir\">chdir(2)</a>, <a href=\"https://man.page/2/fchdir\">fchdir(2)</a>, <a href=\"https://man.page/2/open\">open(2)</a>,\n<a href=\"https://man.page/2/unlink\">unlink(2)</a>, <a href=\"https://man.page/3/free\">free(3)</a>, <a href=\"https://man.page/3/malloc\">malloc(3)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}