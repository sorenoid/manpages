{"name":"pthread_attr_setstackaddr","description":"pthread_attr_setstackaddr,\npthread_attr_getstackaddr - set/get stack address attribute\nin thread attributes object","body":"\n\n<h1 align=\"center\">PTHREAD_ATTR_SETSTACKADDR</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">pthread_attr_setstackaddr,\npthread_attr_getstackaddr - set/get stack address attribute\nin thread attributes object</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;pthread.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\npthread_attr_setstackaddr(pthread_attr_t\n*</b><i>attr</i><b>, void *</b><i>stackaddr</i><b>); <br>\nint pthread_attr_getstackaddr(const pthread_attr_t\n*</b><i>attr</i><b>, <br>\nvoid **</b><i>stackaddr</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Compile and\nlink with <i>-pthread</i>.</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These functions\nare obsolete: <b>do not use them.</b> Use\n<a href=\"https://man.page/3/pthread_attr_setstack\">pthread_attr_setstack(3)</a> and\n<a href=\"https://man.page/3/pthread_attr_getstack\">pthread_attr_getstack(3)</a> instead.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>pthread_attr_setstackaddr</b>() function sets the stack\naddress attribute of the thread attributes object referred\nto by <i>attr</i> to the value specified in\n<i>stackaddr</i>. This attribute specifies the location of\nthe stack that should be used by a thread that is created\nusing the thread attributes object <i>attr</i>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>stackaddr</i>\nshould point to a buffer of at least\n<b>PTHREAD_STACK_MIN</b> bytes that was allocated by the\ncaller. The pages of the allocated buffer should be both\nreadable and writable.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>pthread_attr_getstackaddr</b>() function returns the\nstack address attribute of the thread attributes object\nreferred to by <i>attr</i> in the buffer pointed to by\n<i>stackaddr</i>.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\nthese functions return 0; on error, they return a nonzero\nerror number.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">No errors are\ndefined (but applications should nevertheless handle a\npossible error return).</p>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These functions\nare provided by glibc since version 2.1.</p>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"8%\">\n</td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n</table>\n\n\n<p align=\"center\"><img src=\"grohtml-3283061.png\" alt=\"Image grohtml-3283061.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001\nspecifies these functions but marks them as obsolete.\nPOSIX.1-2008 removes the specification of these\nfunctions.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Do not use\nthese functions!</i> They cannot be portably used, since\nthey provide no way of specifying the direction of growth or\nthe range of the stack. For example, on architectures with a\nstack that grows downward, <i>stackaddr</i> specifies the\nnext address past the <i>highest</i> address of the\nallocated stack area. However, on architectures with a stack\nthat grows upward, <i>stackaddr</i> specifies the\n<i>lowest</i> address in the allocated stack area. By\ncontrast, the <i>stackaddr</i> used by\n<a href=\"https://man.page/3/pthread_attr_setstack\">pthread_attr_setstack(3)</a> and\n<a href=\"https://man.page/3/pthread_attr_getstack\">pthread_attr_getstack(3)</a>, is always a pointer to the\nlowest address in the allocated stack area (and the\n<i>stacksize</i> argument specifies the range of the\nstack).</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/pthread_attr_init\">pthread_attr_init(3)</a>,\n<a href=\"https://man.page/3/pthread_attr_setstack\">pthread_attr_setstack(3)</a>,\n<a href=\"https://man.page/3/pthread_attr_setstacksize\">pthread_attr_setstacksize(3)</a>,\n<a href=\"https://man.page/3/pthread_create\">pthread_create(3)</a>, <a href=\"https://man.page/7/pthreads\">pthreads(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":3}