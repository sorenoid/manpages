{"name":"accept","description":"accept, accept4\n- accept a connection on a socket","body":"\n\n<h1 align=\"center\">ACCEPT</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">accept, accept4\n- accept a connection on a socket</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/types.h&gt;</b> /* See NOTES */ <b><br>\n#include &lt;sys/socket.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\naccept(int</b> <i>sockfd</i><b>, struct sockaddr\n*</b><i>addr</i><b>, socklen_t\n*</b><i>addrlen</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#define\n_GNU_SOURCE</b> /* See feature_test_macros(7) */ <b><br>\n#include &lt;sys/socket.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\naccept4(int</b> <i>sockfd</i><b>, struct sockaddr\n*</b><i>addr</i><b>, <br>\nsocklen_t *</b><i>addrlen</i><b>, int</b>\n<i>flags</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>accept</b>() system call is used with connection-based\nsocket types (<b>SOCK_STREAM</b>, <b>SOCK_SEQPACKET</b>). It\nextracts the first connection request on the queue of\npending connections for the listening socket, <i>sockfd</i>,\ncreates a new connected socket, and returns a new file\ndescriptor referring to that socket. The newly created\nsocket is not in the listening state. The original socket\n<i>sockfd</i> is unaffected by this call.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The argument\n<i>sockfd</i> is a socket that has been created with\n<a href=\"https://man.page/2/socket\">socket(2)</a>, bound to a local address with\n<a href=\"https://man.page/2/bind\">bind(2)</a>, and is listening for connections after a\n<a href=\"https://man.page/2/listen\">listen(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The argument\n<i>addr</i> is a pointer to a <i>sockaddr</i> structure.\nThis structure is filled in with the address of the peer\nsocket, as known to the communications layer. The exact\nformat of the address returned <i>addr</i> is determined by\nthe socket&rsquo;s address family (see <a href=\"https://man.page/2/socket\">socket(2)</a> and\nthe respective protocol man pages). When <i>addr</i> is\nNULL, nothing is filled in; in this case, <i>addrlen</i> is\nnot used, and should also be NULL.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>addrlen</i> argument is a value-result argument: the\ncaller must initialize it to contain the size (in bytes) of\nthe structure pointed to by <i>addr</i>; on return it will\ncontain the actual size of the peer address.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The returned\naddress is truncated if the buffer provided is too small; in\nthis case, <i>addrlen</i> will return a value greater than\nwas supplied to the call.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If no pending\nconnections are present on the queue, and the socket is not\nmarked as nonblocking, <b>accept</b>() blocks the caller\nuntil a connection is present. If the socket is marked\nnonblocking and no pending connections are present on the\nqueue, <b>accept</b>() fails with the error <b>EAGAIN</b> or\n<b>EWOULDBLOCK</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In order to be\nnotified of incoming connections on a socket, you can use\n<a href=\"https://man.page/2/select\">select(2)</a>, <a href=\"https://man.page/2/poll\">poll(2)</a>, or <a href=\"https://man.page/7/epoll\">epoll(7)</a>. A\nreadable event will be delivered when a new connection is\nattempted and you may then call <b>accept</b>() to get a\nsocket for that connection. Alternatively, you can set the\nsocket to deliver <b>SIGIO</b> when activity occurs on a\nsocket; see <a href=\"https://man.page/7/socket\">socket(7)</a> for details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If <i>flags</i>\nis 0, then <b>accept4</b>() is the same as <b>accept</b>().\nThe following values can be bitwise ORed in <i>flags</i> to\nobtain different behavior:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"20%\">\n\n\n<p><b>SOCK_NONBLOCK</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"65%\">\n\n\n<p>Set the <b>O_NONBLOCK</b> file status flag on the open\nfile description (see <a href=\"https://man.page/2/open\">open(2)</a>) referred to by the new\nfile descriptor. Using this flag saves extra calls to\n<a href=\"https://man.page/2/fcntl\">fcntl(2)</a> to achieve the same result.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"20%\">\n\n\n<p><b>SOCK_CLOEXEC</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"65%\">\n\n\n<p>Set the close-on-exec (<b>FD_CLOEXEC</b>) flag on the\nnew file descriptor. See the description of the\n<b>O_CLOEXEC</b> flag in <a href=\"https://man.page/2/open\">open(2)</a> for reasons why this\nmay be useful.</p></td></tr>\n</table>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\nthese system calls return a file descriptor for the accepted\nsocket (a nonnegative integer). On error, -1 is returned,\n<i>errno</i> is set appropriately, and <i>addrlen</i> is\nleft unchanged.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Error\nhandling</b> <br>\nLinux <b>accept</b>() (and <b>accept4</b>()) passes\nalready-pending network errors on the new socket as an error\ncode from <b>accept</b>(). This behavior differs from other\nBSD socket implementations. For reliable operation the\napplication should detect the network errors defined for the\nprotocol after <b>accept</b>() and treat them like\n<b>EAGAIN</b> by retrying. In the case of TCP/IP, these are\n<b>ENETDOWN</b>, <b>EPROTO</b>, <b>ENOPROTOOPT</b>,\n<b>EHOSTDOWN</b>, <b>ENONET</b>, <b>EHOSTUNREACH</b>,\n<b>EOPNOTSUPP</b>, and <b>ENETUNREACH</b>.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>EAGAIN</b>\nor <b>EWOULDBLOCK</b></p>\n\n<p style=\"margin-left:22%;\">The socket is marked\nnonblocking and no connections are present to be accepted.\nPOSIX.1-2001 and POSIX.1-2008 allow either error to be\nreturned for this case, and do not require these constants\nto have the same value, so a portable application should\ncheck for both possibilities.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EBADF</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"58%\">\n\n\n<p><i>sockfd</i> is not an open file descriptor.</p></td>\n<td width=\"20%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ECONNABORTED</b></p>\n\n<p style=\"margin-left:22%;\">A connection has been\naborted.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EFAULT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The <i>addr</i> argument is not in a writable part of\nthe user address space.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINTR</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The system call was interrupted by a signal that was\ncaught before a valid connection arrived; see\n<a href=\"https://man.page/7/signal\">signal(7)</a>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Socket is not listening for connections, or\n<i>addrlen</i> is invalid (e.g., is negative).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>(<b>accept4</b>()) invalid value in <i>flags</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EMFILE</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The per-process limit on the number of open file\ndescriptors has been reached.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENFILE</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The system-wide limit on the total number of open files\nhas been reached.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ENOBUFS</b>,\n<b>ENOMEM</b></p>\n\n<p style=\"margin-left:22%;\">Not enough free memory. This\noften means that the memory allocation is limited by the\nsocket buffer limits, not by the system memory.</p>\n\n<p style=\"margin-left:11%;\"><b>ENOTSOCK</b></p>\n\n<p style=\"margin-left:22%;\">The file descriptor\n<i>sockfd</i> does not refer to a socket.</p>\n\n<p style=\"margin-left:11%;\"><b>EOPNOTSUPP</b></p>\n\n<p style=\"margin-left:22%;\">The referenced socket is not of\ntype <b>SOCK_STREAM</b>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EPROTO</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"23%\">\n\n\n<p>Protocol error.</p></td>\n<td width=\"55%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In addition,\nLinux <b>accept</b>() may fail if:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p style=\"margin-top: 1em\"><b>EPERM</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"50%\">\n\n\n<p style=\"margin-top: 1em\">Firewall rules forbid\nconnection.</p> </td>\n<td width=\"28%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In addition,\nnetwork errors for the new socket and as defined for the\nprotocol may be returned. Various Linux kernels can return\nother errors such as <b>ENOSR</b>, <b>ESOCKTNOSUPPORT</b>,\n<b>EPROTONOSUPPORT</b>, <b>ETIMEDOUT</b>. The value\n<b>ERESTARTSYS</b> may be seen during a trace.</p>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>accept4</b>() system call is available starting with\nLinux 2.6.28; support in glibc is available starting with\nversion 2.10.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>accept</b>():\nPOSIX.1-2001, POSIX.1-2008, SVr4, 4.4BSD (<b>accept</b>()\nfirst appeared in 4.2BSD).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>accept4</b>()\nis a nonstandard Linux extension.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On Linux, the\nnew socket returned by <b>accept</b>() does <i>not</i>\ninherit file status flags such as <b>O_NONBLOCK</b> and\n<b>O_ASYNC</b> from the listening socket. This behavior\ndiffers from the canonical BSD sockets implementation.\nPortable programs should not rely on inheritance or\nnoninheritance of file status flags and always explicitly\nset all required flags on the socket returned from\n<b>accept</b>().</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001\ndoes not require the inclusion of\n<i>&lt;sys/types.h&gt;</i>, and this header file is not\nrequired on Linux. However, some historical (BSD)\nimplementations required this header file, and portable\napplications are probably wise to include it.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">There may not\nalways be a connection waiting after a <b>SIGIO</b> is\ndelivered or <a href=\"https://man.page/2/select\">select(2)</a>, <a href=\"https://man.page/2/poll\">poll(2)</a>, or\n<a href=\"https://man.page/7/epoll\">epoll(7)</a> return a readability event because the\nconnection might have been removed by an asynchronous\nnetwork error or another thread before <b>accept</b>() is\ncalled. If this happens, then the call will block waiting\nfor the next connection to arrive. To ensure that\n<b>accept</b>() never blocks, the passed socket\n<i>sockfd</i> needs to have the <b>O_NONBLOCK</b> flag set\n(see <a href=\"https://man.page/7/socket\">socket(7)</a>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For certain\nprotocols which require an explicit confirmation, such as\nDECnet, <b>accept</b>() can be thought of as merely\ndequeuing the next connection request and not implying\nconfirmation. Confirmation can be implied by a normal read\nor write on the new file descriptor, and rejection can be\nimplied by closing the new socket. Currently, only DECnet\nhas these semantics on Linux.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The\nsocklen_t type</b> <br>\nIn the original BSD sockets implementation (and on other\nolder systems) the third argument of <b>accept</b>() was\ndeclared as an <i>int&nbsp;*</i>. A POSIX.1g draft standard\nwanted to change it into a <i>size_t&nbsp;*</i>C; later\nPOSIX standards and glibc 2.x have <i>socklen_t&nbsp;*</i>\n.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">See\n<a href=\"https://man.page/2/bind\">bind(2)</a>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/bind\">bind(2)</a>,\n<a href=\"https://man.page/2/connect\">connect(2)</a>, <a href=\"https://man.page/2/listen\">listen(2)</a>, <a href=\"https://man.page/2/select\">select(2)</a>,\n<a href=\"https://man.page/2/socket\">socket(2)</a>, <a href=\"https://man.page/7/socket\">socket(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}