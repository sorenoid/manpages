{"name":"brk","description":"brk, sbrk - change data segment size","body":"\n\n<h1 align=\"center\">BRK</h1>\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">brk, sbrk -\nchange data segment size</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;unistd.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int brk(void\n*</b><i>addr</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>void\n*sbrk(intptr_t</b> <i>increment</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>brk</b>(),\n<b>sbrk</b>():</p>\n\n<p style=\"margin-left:17%;\">Since glibc 2.19:</p>\n\n<p style=\"margin-left:23%;\">_DEFAULT_SOURCE || <br>\n(_XOPEN_SOURCE&nbsp;&gt;=&nbsp;500) &amp;&amp; <br>\n! (_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200112L)</p>\n\n<p style=\"margin-left:17%;\">From glibc 2.12 to 2.19:</p>\n\n<p style=\"margin-left:23%;\">_BSD_SOURCE || _SVID_SOURCE ||\n<br>\n(_XOPEN_SOURCE&nbsp;&gt;=&nbsp;500) &amp;&amp; <br>\n! (_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200112L)</p>\n\n<p style=\"margin-left:17%;\">Before glibc 2.12:</p>\n\n<p style=\"margin-left:23%;\">_BSD_SOURCE || _SVID_SOURCE ||\n_XOPEN_SOURCE&nbsp;&gt;=&nbsp;500</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>brk</b>()\nand <b>sbrk</b>() change the location of the <i>program\nbreak</i>, which defines the end of the process&rsquo;s data\nsegment (i.e., the program break is the first location after\nthe end of the uninitialized data segment). Increasing the\nprogram break has the effect of allocating memory to the\nprocess; decreasing the break deallocates memory.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>brk</b>()\nsets the end of the data segment to the value specified by\n<i>addr</i>, when that value is reasonable, the system has\nenough memory, and the process does not exceed its maximum\ndata size (see <a href=\"https://man.page/2/setrlimit\">setrlimit(2)</a>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>sbrk</b>()\nincrements the program&rsquo;s data space by\n<i>increment</i> bytes. Calling <b>sbrk</b>() with an\n<i>increment</i> of 0 can be used to find the current\nlocation of the program break.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\n<b>brk</b>() returns zero. On error, -1 is returned, and\n<i>errno</i> is set to <b>ENOMEM</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\n<b>sbrk</b>() returns the previous program break. (If the\nbreak was increased, then this value is a pointer to the\nstart of the newly allocated memory). On error,\n<i>(void&nbsp;*)&nbsp;-1</i> is returned, and <i>errno</i>\nis set to <b>ENOMEM</b>.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">4.3BSD; SUSv1,\nmarked LEGACY in SUSv2, removed in POSIX.1-2001.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Avoid using\n<b>brk</b>() and <b>sbrk</b>(): the <a href=\"https://man.page/3/malloc\">malloc(3)</a> memory\nallocation package is the portable and comfortable way of\nallocating memory.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Various systems\nuse various types for the argument of <b>sbrk</b>(). Common\nare <i>int</i>, <i>ssize_t</i>, <i>ptrdiff_t</i>,\n<i>intptr_t</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>C\nlibrary/kernel differences</b> <br>\nThe return value described above for <b>brk</b>() is the\nbehavior provided by the glibc wrapper function for the\nLinux <b>brk</b>() system call. (On most other\nimplementations, the return value from <b>brk</b>() is the\nsame; this return value was also specified in SUSv2.)\nHowever, the actual Linux system call returns the new\nprogram break on success. On failure, the system call\nreturns the current break. The glibc wrapper function does\nsome work (i.e., checks whether the new break is less than\n<i>addr</i>) to provide the 0 and -1 return values described\nabove.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On Linux,\n<b>sbrk</b>() is implemented as a library function that uses\nthe <b>brk</b>() system call, and does some internal\nbookkeeping so that it can return the old break value.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/execve\">execve(2)</a>,\n<a href=\"https://man.page/2/getrlimit\">getrlimit(2)</a>, <a href=\"https://man.page/3/end\">end(3)</a>, <a href=\"https://man.page/3/malloc\">malloc(3)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}