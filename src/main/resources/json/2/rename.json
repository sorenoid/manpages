{"name":"rename","description":"rename,\nrenameat, renameat2 - change the name or location of a\nfile","body":"\n\n<h1 align=\"center\">RENAME</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">rename,\nrenameat, renameat2 - change the name or location of a\nfile</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;stdio.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nrename(const char *</b><i>oldpath</i><b>, const char\n*</b><i>newpath</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;fcntl.h&gt;</b> /* Definition of AT_* constants */\n<b><br>\n#include &lt;stdio.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nrenameat(int</b> <i>olddirfd</i><b>, const char\n*</b><i>oldpath</i><b>, <br>\nint</b> <i>newdirfd</i><b>, const char\n*</b><i>newpath</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nrenameat2(int</b> <i>olddirfd</i><b>, const char\n*</b><i>oldpath</i><b>, <br>\nint</b> <i>newdirfd</i><b>, const char\n*</b><i>newpath</i><b>, unsigned int</b>\n<i>flags</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>renameat</b>():</p>\n\n<p style=\"margin-left:17%;\">Since glibc 2.10:</p>\n\n\n<p style=\"margin-left:23%;\">_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200809L</p>\n\n<p style=\"margin-left:17%;\">Before glibc 2.10:</p>\n\n<p style=\"margin-left:23%;\">_ATFILE_SOURCE</p>\n\n<p style=\"margin-left:11%;\"><b>renameat2</b>():</p>\n\n<p style=\"margin-left:17%;\">_GNU_SOURCE</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>rename</b>()\nrenames a file, moving it between directories if required.\nAny other hard links to the file (as created using\n<a href=\"https://man.page/2/link\">link(2)</a>) are unaffected. Open file descriptors for\n<i>oldpath</i> are also unaffected.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Various\nrestrictions determine whether or not the rename operation\nsucceeds: see ERRORS below.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>newpath</i> already exists, it will be atomically\nreplaced, so that there is no point at which another process\nattempting to access <i>newpath</i> will find it missing.\nHowever, there will probably be a window in which both\n<i>oldpath</i> and <i>newpath</i> refer to the file being\nrenamed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>oldpath</i> and <i>newpath</i> are existing hard links\nreferring to the same file, then <b>rename</b>() does\nnothing, and returns a success status.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>newpath</i> exists but the operation fails for some\nreason, <b>rename</b>() guarantees to leave an instance of\n<i>newpath</i> in place.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>oldpath</i>\ncan specify a directory. In this case, <i>newpath</i> must\neither not exist, or it must specify an empty directory.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>oldpath</i> refers to a symbolic link, the link is\nrenamed; if <i>newpath</i> refers to a symbolic link, the\nlink will be overwritten.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>renameat()</b>\n<br>\nThe <b>renameat</b>() system call operates in exactly the\nsame way as <b>rename</b>(), except for the differences\ndescribed here.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the pathname\ngiven in <i>oldpath</i> is relative, then it is interpreted\nrelative to the directory referred to by the file descriptor\n<i>olddirfd</i> (rather than relative to the current working\ndirectory of the calling process, as is done by\n<b>rename</b>() for a relative pathname).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>oldpath</i> is relative and <i>olddirfd</i> is the\nspecial value <b>AT_FDCWD</b>, then <i>oldpath</i> is\ninterpreted relative to the current working directory of the\ncalling process (like <b>rename</b>()).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>oldpath</i> is absolute, then <i>olddirfd</i> is\nignored.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\ninterpretation of <i>newpath</i> is as for <i>oldpath</i>,\nexcept that a relative pathname is interpreted relative to\nthe directory referred to by the file descriptor\n<i>newdirfd</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See\n<a href=\"https://man.page/2/openat\">openat(2)</a> for an explanation of the need for\n<b>renameat</b>().</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>renameat2()\n<br>\nrenameat2</b>() has an additional <i>flags</i> argument. A\n<b>renameat2</b>() call with a zero <i>flags</i> argument is\nequivalent to <b>renameat</b>().</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>flags</i> argument is a bit mask consisting of zero or\nmore of the following flags: <b><br>\nRENAME_EXCHANGE</b></p>\n\n<p style=\"margin-left:22%;\">Atomically exchange\n<i>oldpath</i> and <i>newpath</i>. Both pathnames must exist\nbut may be of different types (e.g., one could be a\nnon-empty directory and the other a symbolic link).</p>\n\n<p style=\"margin-left:11%;\"><b>RENAME_NOREPLACE</b></p>\n\n<p style=\"margin-left:22%;\">Don&rsquo;t overwrite\n<i>newpath</i> of the rename. Return an error if\n<i>newpath</i> already exists.</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>RENAME_NOREPLACE</b>\ncan&rsquo;t be employed together with\n<b>RENAME_EXCHANGE</b>.</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>RENAME_NOREPLACE</b>\nrequires support from the underlying filesystem. Support for\nvarious filesystems was added as follows:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>ext4 (Linux 3.15);</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>btrfs, shmem, and cifs (Linux 3.17);</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>xfs (Linux 4.0);</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>Support for many other filesystems was added in Linux\n4.9, including ext2, minix, reiserfs, jfs, vfat, and\nbpf.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>RENAME_WHITEOUT</b> (since\nLinux 3.18)</p>\n\n<p style=\"margin-left:22%;\">This operation makes sense only\nfor overlay/union filesystem implementations.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Specifying\n<b>RENAME_WHITEOUT</b> creates a &quot;whiteout&quot; object\nat the source of the rename at the same time as performing\nthe rename. The whole operation is atomic, so that if the\nrename succeeds then the whiteout will also have been\ncreated.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">A\n&quot;whiteout&quot; is an object that has special meaning\nin union/overlay filesystem constructs. In these constructs,\nmultiple layers exist and only the top one is ever modified.\nA whiteout on an upper layer will effectively hide a\nmatching file in the lower layer, making it appear as if the\nfile didn&rsquo;t exist.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">When a file\nthat exists on the lower layer is renamed, the file is first\ncopied up (if not already on the upper layer) and then\nrenamed on the upper, read-write layer. At the same time,\nthe source file needs to be &quot;whiteouted&quot; (so that\nthe version of the source file in the lower layer is\nrendered invisible). The whole operation needs to be done\natomically.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">When not part\nof a union/overlay, the whiteout appears as a character\ndevice with a {0,0} device number. (Note that other\nunion/overlay implementations may employ different methods\nfor storing whiteout entries; specifically, BSD union mount\nemploys a separate inode type, <b>DT_WHT</b>, which, while\nsupported by some filesystems available in Linux, such as\nCODA and XFS, is ignored by the kernel&rsquo;s whiteout\nsupport code, as of Linux 4.19, at least.)</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>RENAME_WHITEOUT</b>\nrequires the same privileges as creating a device node\n(i.e., the <b>CAP_MKNOD</b> capability).</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>RENAME_WHITEOUT</b>\ncan&rsquo;t be employed together with\n<b>RENAME_EXCHANGE</b>.</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>RENAME_WHITEOUT</b>\nrequires support from the underlying filesystem. Among the\nfilesystems that provide that support are tmpfs (since Linux\n3.18), ext4 (since Linux 3.18), XFS (since Linux 4.1), f2fs\n(since Linux 4.2), btrfs (since Linux 4.7), and ubifs (since\nLinux 4.9).</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\nzero is returned. On error, -1 is returned, and <i>errno</i>\nis set appropriately.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EACCES</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">Write permission is denied for\nthe directory containing <i>oldpath</i> or <i>newpath</i>,\nor, search permission is denied for one of the directories\nin the path prefix of <i>oldpath</i> or <i>newpath</i>, or\n<i>oldpath</i> is a directory and does not allow write\npermission (needed to update the <i>..</i> entry). (See also\n<a href=\"https://man.page/7/path_resolution\">path_resolution(7)</a>.)</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EBUSY</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The rename fails because <i>oldpath</i> or\n<i>newpath</i> is a directory that is in use by some process\n(perhaps as current working directory, or as root directory,\nor because it was open for reading) or is in use by the\nsystem (for example as mount point), while the system\nconsiders this an error. (Note that there is no requirement\nto return <b>EBUSY</b> in such cases&mdash;there is nothing\nwrong with doing the rename anyway&mdash;but it is allowed\nto return <b>EBUSY</b> if the system cannot otherwise handle\nsuch situations.)</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EDQUOT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The user&rsquo;s quota of disk blocks on the filesystem\nhas been exhausted.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EFAULT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>oldpath</i> or <i>newpath</i> points outside your\naccessible address space.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The new pathname contained a path prefix of the old, or,\nmore generally, an attempt was made to make a directory a\nsubdirectory of itself.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EISDIR</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>newpath</i> is an existing directory, but\n<i>oldpath</i> is not a directory.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ELOOP</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Too many symbolic links were encountered in resolving\n<i>oldpath</i> or <i>newpath</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EMLINK</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>oldpath</i> already has the maximum number of links\nto it, or it was a directory and the directory containing\n<i>newpath</i> has the maximum number of links.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ENAMETOOLONG</b></p>\n\n<p style=\"margin-left:22%;\"><i>oldpath</i> or\n<i>newpath</i> was too long.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOENT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The link named by <i>oldpath</i> does not exist; or, a\ndirectory component in <i>newpath</i> does not exist; or,\n<i>oldpath</i> or <i>newpath</i> is an empty string.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOMEM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Insufficient kernel memory was available.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOSPC</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The device containing the file has no room for the new\ndirectory entry.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ENOTDIR</b></p>\n\n<p style=\"margin-left:22%;\">A component used as a directory\nin <i>oldpath</i> or <i>newpath</i> is not, in fact, a\ndirectory. Or, <i>oldpath</i> is a directory, and\n<i>newpath</i> exists but is not a directory.</p>\n\n<p style=\"margin-left:11%;\"><b>ENOTEMPTY</b> or\n<b>EEXIST</b></p>\n\n<p style=\"margin-left:22%;\"><i>newpath</i> is a nonempty\ndirectory, that is, contains entries other than\n&quot;.&quot; and &quot;..&quot;.</p>\n\n<p style=\"margin-left:11%;\"><b>EPERM</b> or\n<b>EACCES</b></p>\n\n<p style=\"margin-left:22%;\">The directory containing\n<i>oldpath</i> has the sticky bit (<b>S_ISVTX</b>) set and\nthe process&rsquo;s effective user ID is neither the user ID\nof the file to be deleted nor that of the directory\ncontaining it, and the process is not privileged (Linux:\ndoes not have the <b>CAP_FOWNER</b> capability); or\n<i>newpath</i> is an existing file and the directory\ncontaining it has the sticky bit set and the process&rsquo;s\neffective user ID is neither the user ID of the file to be\nreplaced nor that of the directory containing it, and the\nprocess is not privileged (Linux: does not have the\n<b>CAP_FOWNER</b> capability); or the filesystem containing\n<i>pathname</i> does not support renaming of the type\nrequested.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EROFS</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>The file is on a read-only filesystem.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EXDEV</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p><i>oldpath</i> and <i>newpath</i> are not on the same\nmounted filesystem. (Linux permits a filesystem to be\nmounted at multiple points, but <b>rename</b>() does not\nwork across different mount points, even if the same\nfilesystem is mounted on both.)</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nadditional errors can occur for <b>renameat</b>() and\n<b>renameat2</b>():</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p style=\"margin-top: 1em\"><b>EBADF</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\"><i>olddirfd</i> or\n<i>newdirfd</i> is not a valid file descriptor.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ENOTDIR</b></p>\n\n<p style=\"margin-left:22%;\"><i>oldpath</i> is relative and\n<i>olddirfd</i> is a file descriptor referring to a file\nother than a directory; or similar for <i>newpath</i> and\n<i>newdirfd</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nadditional errors can occur for <b>renameat2</b>():</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EEXIST</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>flags</i> contains <b>RENAME_NOREPLACE</b> and\n<i>newpath</i> already exists.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>An invalid flag was specified in <i>flags</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Both <b>RENAME_NOREPLACE</b> and <b>RENAME_EXCHANGE</b>\nwere specified in <i>flags</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Both <b>RENAME_WHITEOUT</b> and <b>RENAME_EXCHANGE</b>\nwere specified in <i>flags</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The filesystem does not support one of the flags in\n<i>flags</i>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOENT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>flags</i> contains <b>RENAME_EXCHANGE</b> and\n<i>newpath</i> does not exist.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><b>RENAME_WHITEOUT</b> was specified in <i>flags</i>,\nbut the caller does not have the <b>CAP_MKNOD</b>\ncapability.</p> </td></tr>\n</table>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>renameat</b>()\nwas added to Linux in kernel 2.6.16; library support was\nadded to glibc in version 2.4.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>renameat2</b>()\nwas added to Linux in kernel 3.15; library support was added\nin glibc 2.28.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>rename</b>():\n4.3BSD, C89, C99, POSIX.1-2001, POSIX.1-2008.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>renameat</b>():\nPOSIX.1-2008.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>renameat2</b>()\nis Linux-specific.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Glibc\nnotes</b> <br>\nOn older kernels where <b>renameat</b>() is unavailable, the\nglibc wrapper function falls back to the use of\n<b>rename</b>(). When <i>oldpath</i> and <i>newpath</i> are\nrelative pathnames, glibc constructs pathnames based on the\nsymbolic links in <i>/proc/self/fd</i> that correspond to\nthe <i>olddirfd</i> and <i>newdirfd</i> arguments.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On NFS\nfilesystems, you can not assume that if the operation\nfailed, the file was not renamed. If the server does the\nrename operation and then crashes, the retransmitted RPC\nwhich will be processed when the server is up again causes a\nfailure. The application is expected to deal with this. See\n<a href=\"https://man.page/2/link\">link(2)</a> for a similar problem.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/mv\">mv(1)</a>,\n<a href=\"https://man.page/1/rename\">rename(1)</a>, <a href=\"https://man.page/2/chmod\">chmod(2)</a>, <a href=\"https://man.page/2/link\">link(2)</a>,\n<a href=\"https://man.page/2/symlink\">symlink(2)</a>, <a href=\"https://man.page/2/unlink\">unlink(2)</a>,\n<a href=\"https://man.page/7/path_resolution\">path_resolution(7)</a>, <a href=\"https://man.page/7/symlink\">symlink(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}