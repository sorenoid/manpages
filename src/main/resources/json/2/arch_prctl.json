{"name":"arch_prctl","description":"arch_prctl - set architecture-specific thread state","body":"\n\n<h1 align=\"center\">ARCH_PRCTL</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">arch_prctl -\nset architecture-specific thread state</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;asm/prctl.h&gt; <br>\n#include &lt;sys/prctl.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\narch_prctl(int</b> <i>code</i><b>, unsigned long</b>\n<i>addr</i><b>); <br>\nint arch_prctl(int</b> <i>code</i><b>, unsigned long\n*</b><i>addr</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>arch_prctl</b>()\nsets architecture-specific process or thread state.\n<i>code</i> selects a subfunction and passes argument\n<i>addr</i> to it; <i>addr</i> is interpreted as either an\n<i>unsigned long</i> for the &quot;set&quot; operations, or\nas an <i>unsigned long&nbsp;*</i>, for the &quot;get&quot;\noperations.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Subfunctions\nfor both x86 and x86-64 are: <b><br>\nARCH_SET_CPUID</b> (since Linux 4.12)</p>\n\n<p style=\"margin-left:22%;\">Enable (<i>addr != 0</i>) or\ndisable (<i>addr == 0</i>) the <i>cpuid</i> instruction for\nthe calling thread. The instruction is enabled by default.\nIf disabled, any execution of a <i>cpuid</i> instruction\nwill instead generate a <b>SIGSEGV</b> signal. This feature\ncan be used to emulate <i>cpuid</i> results that differ from\nwhat the underlying hardware would have produced (e.g., in a\nparavirtualization setting).</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The\n<b>ARCH_SET_CPUID</b> setting is preserved across\n<a href=\"https://man.page/2/fork\">fork(2)</a> and <a href=\"https://man.page/2/clone\">clone(2)</a> but reset to the default\n(i.e., <i>cpuid</i> enabled) on <a href=\"https://man.page/2/execve\">execve(2)</a>.</p>\n\n<p style=\"margin-left:11%;\"><b>ARCH_GET_CPUID</b> (since\nLinux 4.12)</p>\n\n<p style=\"margin-left:22%;\">Return the setting of the flag\nmanipulated by <b>ARCH_SET_CPUID</b> as the result of the\nsystem call (1 for enabled, 0 for disabled). <i>addr</i> is\nignored.</p>\n\n<p style=\"margin-left:11%;\">Subfunctions for x86-64 only\nare: <b><br>\nARCH_SET_FS</b></p>\n\n<p style=\"margin-left:22%;\">Set the 64-bit base for the\n<i>FS</i> register to <i>addr</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>ARCH_GET_FS</b></p>\n\n<p style=\"margin-left:22%;\">Return the 64-bit base value\nfor the <i>FS</i> register of the calling thread in the\n<i>unsigned long</i> pointed to by <i>addr</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>ARCH_SET_GS</b></p>\n\n<p style=\"margin-left:22%;\">Set the 64-bit base for the\n<i>GS</i> register to <i>addr</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>ARCH_GET_GS</b></p>\n\n<p style=\"margin-left:22%;\">Return the 64-bit base value\nfor the <i>GS</i> register of the calling thread in the\n<i>unsigned long</i> pointed to by <i>addr</i>.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\n<b>arch_prctl</b>() returns 0; on error, -1 is returned, and\n<i>errno</i> is set to indicate the error.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EFAULT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\"><i>addr</i> points to an\nunmapped address or is outside the process address\nspace.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>code</i> is not a valid subcommand.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>addr</i> is outside the process address space.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENODEV</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><b>ARCH_SET_CPUID</b> was requested, but the underlying\nhardware does not support CPUID faulting.</p></td></tr>\n</table>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>arch_prctl</b>()\nis a Linux/x86-64 extension and should not be used in\nprograms intended to be portable.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>arch_prctl</b>()\nis supported only on Linux/x86-64 for 64-bit programs\ncurrently.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The 64-bit base\nchanges when a new 32-bit segment selector is loaded.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ARCH_SET_GS</b>\nis disabled in some kernels.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Context\nswitches for 64-bit segment bases are rather expensive. As\nan optimization, if a 32-bit TLS base address is used,\n<b>arch_prctl</b>() may use a real TLS entry as if\n<a href=\"https://man.page/2/set_thread_area\">set_thread_area(2)</a> had been called, instead of\nmanipulating the segment base register directly. Memory in\nthe first 2&nbsp;GB of address space can be allocated by\nusing <a href=\"https://man.page/2/mmap\">mmap(2)</a> with the <b>MAP_32BIT</b> flag.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Because of the\naforementioned optimization, using <b>arch_prctl</b>() and\n<a href=\"https://man.page/2/set_thread_area\">set_thread_area(2)</a> in the same thread is dangerous,\nas they may overwrite each other&rsquo;s TLS entries.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">As of version\n2.7, glibc provides no prototype for <b>arch_prctl</b>().\nYou have to declare it yourself for now. This may be fixed\nin future glibc versions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>FS</i> may\nbe already used by the threading library. Programs that use\n<b>ARCH_SET_FS</b> directly are very likely to crash.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/mmap\">mmap(2)</a>,\n<a href=\"https://man.page/2/modify_ldt\">modify_ldt(2)</a>, <a href=\"https://man.page/2/prctl\">prctl(2)</a>,\n<a href=\"https://man.page/2/set_thread_area\">set_thread_area(2)</a></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">AMD X86-64\nProgrammer&rsquo;s manual</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}