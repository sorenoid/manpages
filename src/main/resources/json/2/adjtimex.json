{"name":"adjtimex","description":"adjtimex,\nclock_adjtime, ntp_adjtime - tune kernel clock","body":"\n\n<h1 align=\"center\">ADJTIMEX</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">adjtimex,\nclock_adjtime, ntp_adjtime - tune kernel clock</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/timex.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nadjtimex(struct timex *</b><i>buf</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nclock_adjtime(clockid_t</b> <i>clk_id,</i> <b>struct timex\n*</b><i>buf</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nntp_adjtime(struct timex *</b><i>buf</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Linux uses\nDavid L. Mills&rsquo; clock adjustment algorithm (see\nRFC&nbsp;5905). The system call <b>adjtimex</b>() reads and\noptionally sets adjustment parameters for this algorithm. It\ntakes a pointer to a <i>timex</i> structure, updates kernel\nparameters from (selected) field values, and returns the\nsame structure updated with the current kernel values. This\nstructure is declared as follows:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct timex {\n<br>\nint modes; /* Mode selector */ <br>\nlong offset; /* Time offset; nanoseconds, if STA_NANO <br>\nstatus flag is set, otherwise <br>\nmicroseconds */ <br>\nlong freq; /* Frequency offset; see NOTES for units */ <br>\nlong maxerror; /* Maximum error (microseconds) */ <br>\nlong esterror; /* Estimated error (microseconds) */ <br>\nint status; /* Clock command/status */ <br>\nlong constant; /* PLL (phase-locked loop) time constant */\n<br>\nlong precision; /* Clock precision <br>\n(microseconds, read-only) */ <br>\nlong tolerance; /* Clock frequency tolerance (read-only);\n<br>\nsee NOTES for units */ <br>\nstruct timeval time; <br>\n/* Current time (read-only, except for <br>\nADJ_SETOFFSET); upon return, time.tv_usec <br>\ncontains nanoseconds, if STA_NANO status <br>\nflag is set, otherwise microseconds */ <br>\nlong tick; /* Microseconds between clock ticks */ <br>\nlong ppsfreq; /* PPS (pulse per second) frequency <br>\n(read-only); see NOTES for units */ <br>\nlong jitter; /* PPS jitter (read-only); nanoseconds, if <br>\nSTA_NANO status flag is set, otherwise <br>\nmicroseconds */ <br>\nint shift; /* PPS interval duration <br>\n(seconds, read-only) */ <br>\nlong stabil; /* PPS stability (read-only); <br>\nsee NOTES for units */ <br>\nlong jitcnt; /* PPS count of jitter limit exceeded <br>\nevents (read-only) */ <br>\nlong calcnt; /* PPS count of calibration intervals <br>\n(read-only) */ <br>\nlong errcnt; /* PPS count of calibration errors <br>\n(read-only) */ <br>\nlong stbcnt; /* PPS count of stability limit exceeded <br>\nevents (read-only) */ <br>\nint tai; /* TAI offset, as set by previous ADJ_TAI <br>\noperation (seconds, read-only, <br>\nsince Linux 2.6.26) */ <br>\n/* Further padding bytes to allow for future expansion */\n<br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>modes</i> field determines which parameters, if any, to\nset. (As described later in this page, the constants used\nfor <b>ntp_adjtime</b>() are equivalent but differently\nnamed.) It is a bit mask containing a bitwise-<i>or</i>\ncombination of zero or more of the following bits: <b><br>\nADJ_OFFSET</b></p>\n\n<p style=\"margin-left:22%;\">Set time offset from\n<i>buf.offset</i>. Since Linux 2.6.26, the supplied value is\nclamped to the range (-0.5s, +0.5s). In older kernels, an\n<b>EINVAL</b> error occurs if the supplied value is out of\nrange.</p>\n\n<p style=\"margin-left:11%;\"><b>ADJ_FREQUENCY</b></p>\n\n<p style=\"margin-left:22%;\">Set frequency offset from\n<i>buf.freq</i>. Since Linux 2.6.26, the supplied value is\nclamped to the range (-32768000, +32768000). In older\nkernels, an <b>EINVAL</b> error occurs if the supplied value\nis out of range.</p>\n\n<p style=\"margin-left:11%;\"><b>ADJ_MAXERROR</b></p>\n\n<p style=\"margin-left:22%;\">Set maximum time error from\n<i>buf.maxerror</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>ADJ_ESTERROR</b></p>\n\n<p style=\"margin-left:22%;\">Set estimated time error from\n<i>buf.esterror</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>ADJ_STATUS</b></p>\n\n<p style=\"margin-left:22%;\">Set clock status bits from\n<i>buf.status</i>. A description of these bits is provided\nbelow.</p>\n\n<p style=\"margin-left:11%;\"><b>ADJ_TIMECONST</b></p>\n\n<p style=\"margin-left:22%;\">Set PLL time constant from\n<i>buf.constant</i>. If the <b>STA_NANO</b> status flag (see\nbelow) is clear, the kernel adds 4 to this value.</p>\n\n<p style=\"margin-left:11%;\"><b>ADJ_SETOFFSET</b> (since\nLinux 2.6.39)</p>\n\n<p style=\"margin-left:22%;\">Add <i>buf.time</i> to the\ncurrent time. If <i>buf.status</i> includes the\n<b>ADJ_NANO</b> flag, then <i>buf.time.tv_usec</i> is\ninterpreted as a nanosecond value; otherwise it is\ninterpreted as microseconds.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The value of\n<i>buf.time</i> is the sum of its two fields, but the field\n<i>buf.time.tv_usec</i> must always be nonnegative. The\nfollowing example shows how to normalize a <i>timeval</i>\nwith nanosecond resolution.</p>\n\n<p style=\"margin-left:28%; margin-top: 1em\">while\n(buf.time.tv_usec &lt; 0) { <br>\nbuf.time.tv_sec -= 1; <br>\nbuf.time.tv_usec += 1000000000; <br>\n}</p>\n\n<p style=\"margin-left:11%;\"><b>ADJ_MICRO</b> (since Linux\n2.6.26)</p>\n\n<p style=\"margin-left:22%;\">Select microsecond\nresolution.</p>\n\n<p style=\"margin-left:11%;\"><b>ADJ_NANO</b> (since Linux\n2.6.26)</p>\n\n<p style=\"margin-left:22%;\">Select nanosecond resolution.\nOnly one of <b>ADJ_MICRO</b> and <b>ADJ_NANO</b> should be\nspecified.</p>\n\n<p style=\"margin-left:11%;\"><b>ADJ_TAI</b> (since Linux\n2.6.26)</p>\n\n<p style=\"margin-left:22%;\">Set TAI (Atomic International\nTime) offset from <i>buf.constant</i>.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>ADJ_TAI</b>\nshould not be used in conjunction with <b>ADJ_TIMECONST</b>,\nsince the latter mode also employs the <i>buf.constant</i>\nfield.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">For a complete\nexplanation of TAI and the difference between TAI and UTC,\nsee\n<a href=\"http://www.bipm.org/en/bipm/tai/tai.html\"><i>BIPM</i></a></p>\n\n<p style=\"margin-left:11%;\"><b>ADJ_TICK</b></p>\n\n<p style=\"margin-left:22%;\">Set tick value from\n<i>buf.tick</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Alternatively,\n<i>modes</i> can be specified as either of the following\n(multibit mask) values, in which case other bits should not\nbe specified in <i>modes</i>: <b><br>\nADJ_OFFSET_SINGLESHOT</b></p>\n\n<p style=\"margin-left:22%;\">Old-fashioned\n<a href=\"https://man.page/3/adjtime\">adjtime(3)</a>: (gradually) adjust time by value\nspecified in <i>buf.offset</i>, which specifies an\nadjustment in microseconds.</p>\n\n<p style=\"margin-left:11%;\"><b>ADJ_OFFSET_SS_READ</b>\n(functional since Linux 2.6.28)</p>\n\n<p style=\"margin-left:22%;\">Return (in <i>buf.offset</i>)\nthe remaining amount of time to be adjusted after an earlier\n<b>ADJ_OFFSET_SINGLESHOT</b> operation. This feature was\nadded in Linux 2.6.24, but did not work correctly until\nLinux 2.6.28.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Ordinary users\nare restricted to a value of either 0 or\n<b>ADJ_OFFSET_SS_READ</b> for <i>modes</i>. Only the\nsuperuser may set any parameters.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>buf.status</i> field is a bit mask that is used to set\nand/or retrieve status bits associated with the NTP\nimplementation. Some bits in the mask are both readable and\nsettable, while others are read-only. <b><br>\nSTA_PLL</b> (read-write)</p>\n\n<p style=\"margin-left:22%;\">Enable phase-locked loop (PLL)\nupdates via <b>ADJ_OFFSET</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>STA_PPSFREQ</b>\n(read-write)</p>\n\n<p style=\"margin-left:22%;\">Enable PPS (pulse-per-second)\nfrequency discipline.</p>\n\n<p style=\"margin-left:11%;\"><b>STA_PPSTIME</b>\n(read-write)</p>\n\n<p style=\"margin-left:22%;\">Enable PPS time discipline.</p>\n\n<p style=\"margin-left:11%;\"><b>STA_FLL</b> (read-write)</p>\n\n<p style=\"margin-left:22%;\">Select frequency-locked loop\n(FLL) mode.</p>\n\n<p style=\"margin-left:11%;\"><b>STA_INS</b> (read-write)</p>\n\n<p style=\"margin-left:22%;\">Insert a leap second after the\nlast second of the UTC day, thus extending the last minute\nof the day by one second. Leap-second insertion will occur\neach day, so long as this flag remains set.</p>\n\n<p style=\"margin-left:11%;\"><b>STA_DEL</b> (read-write)</p>\n\n<p style=\"margin-left:22%;\">Delete a leap second at the\nlast second of the UTC day. Leap second deletion will occur\neach day, so long as this flag remains set.</p>\n\n<p style=\"margin-left:11%;\"><b>STA_UNSYNC</b>\n(read-write)</p>\n\n<p style=\"margin-left:22%;\">Clock unsynchronized.</p>\n\n<p style=\"margin-left:11%;\"><b>STA_FREQHOLD</b>\n(read-write)</p>\n\n<p style=\"margin-left:22%;\">Hold frequency. Normally\nadjustments made via <b>ADJ_OFFSET</b> result in dampened\nfrequency adjustments also being made. So a single call\ncorrects the current offset, but as offsets in the same\ndirection are made repeatedly, the small frequency\nadjustments will accumulate to fix the long-term skew.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">This flag\nprevents the small frequency adjustment from being made when\ncorrecting for an <b>ADJ_OFFSET</b> value.</p>\n\n<p style=\"margin-left:11%;\"><b>STA_PPSSIGNAL</b>\n(read-only)</p>\n\n<p style=\"margin-left:22%;\">A valid PPS (pulse-per-second)\nsignal is present.</p>\n\n<p style=\"margin-left:11%;\"><b>STA_PPSJITTER</b>\n(read-only)</p>\n\n<p style=\"margin-left:22%;\">PPS signal jitter exceeded.</p>\n\n<p style=\"margin-left:11%;\"><b>STA_PPSWANDER</b>\n(read-only)</p>\n\n<p style=\"margin-left:22%;\">PPS signal wander exceeded.</p>\n\n<p style=\"margin-left:11%;\"><b>STA_PPSERROR</b>\n(read-only)</p>\n\n<p style=\"margin-left:22%;\">PPS signal calibration\nerror.</p>\n\n<p style=\"margin-left:11%;\"><b>STA_CLOCKERR</b>\n(read-only)</p>\n\n<p style=\"margin-left:22%;\">Clock hardware fault.</p>\n\n<p style=\"margin-left:11%;\"><b>STA_NANO</b> (read-only;\nsince Linux 2.6.26)</p>\n\n<p style=\"margin-left:22%;\">Resolution (0 = microsecond, 1\n= nanoseconds). Set via <b>ADJ_NANO</b>, cleared via\n<b>ADJ_MICRO</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>STA_MODE</b> (since Linux\n2.6.26)</p>\n\n<p style=\"margin-left:22%;\">Mode (0 = Phase Locked Loop, 1\n= Frequency Locked Loop).</p>\n\n<p style=\"margin-left:11%;\"><b>STA_CLK</b> (read-only;\nsince Linux 2.6.26)</p>\n\n<p style=\"margin-left:22%;\">Clock source (0 = A, 1 = B);\ncurrently unused.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Attempts to set\nread-only <i>status</i> bits are silently ignored.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>clock_adjtime\n()</b> <br>\nThe <b>clock_adjtime</b>() system call (added in Linux\n2.6.39) behaves like <b>adjtimex</b>() but takes an\nadditional <i>clk_id</i> argument to specify the particular\nclock on which to act.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ntp_adjtime\n()</b> <br>\nThe <b>ntp_adjtime</b>() library function (described in the\nNTP &quot;Kernel Application Program API&quot;, KAPI) is a\nmore portable interface for performing the same task as\n<b>adjtimex</b>(). Other than the following points, it is\nidentical to <b>adjtimex</b>():</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>The constants used in <i>modes</i> are prefixed with\n&quot;MOD_&quot; rather than &quot;ADJ_&quot;, and have the\nsame suffixes (thus, <b>MOD_OFFSET</b>,\n<b>MOD_FREQUENCY</b>, and so on), other than the exceptions\nnoted in the following points.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p><b>MOD_CLKA</b> is the synonym for\n<b>ADJ_OFFSET_SINGLESHOT</b>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p><b>MOD_CLKB</b> is the synonym for <b>ADJ_TICK</b>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>The is no synonym for <b>ADJ_OFFSET_SS_READ</b>, which\nis not described in the KAPI.</p></td></tr>\n</table>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\n<b>adjtimex</b>() and <b>ntp_adjtime</b>() return the clock\nstate; that is, one of the following values:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"15%\">\n\n\n<p style=\"margin-top: 1em\"><b>TIME_OK</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"71%\">\n\n\n<p style=\"margin-top: 1em\">Clock synchronized, no leap\nsecond adjustment pending.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"15%\">\n\n\n<p><b>TIME_INS</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"71%\">\n\n\n<p>Indicates that a leap second will be added at the end of\nthe UTC day.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"15%\">\n\n\n<p><b>TIME_DEL</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"71%\">\n\n\n<p>Indicates that a leap second will be deleted at the end\nof the UTC day.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"15%\">\n\n\n<p><b>TIME_OOP</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"71%\">\n\n\n<p>Insertion of a leap second is in progress.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"15%\">\n\n\n<p><b>TIME_WAIT</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"71%\">\n\n\n<p>A leap-second insertion or deletion has been completed.\nThis value will be returned until the next <b>ADJ_STATUS</b>\noperation clears the <b>STA_INS</b> and <b>STA_DEL</b>\nflags.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"15%\">\n\n\n<p><b>TIME_ERROR</b></p></td>\n<td width=\"3%\"></td>\n<td width=\"71%\">\n\n\n<p>The system clock is not synchronized to a reliable\nserver. This value is returned when any of the following\nholds true:</p></td></tr>\n</table>\n\n<p style=\"margin-left:29%;\">*</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"29%\"></td>\n<td width=\"2%\"></td>\n<td width=\"3%\"></td>\n<td width=\"66%\">\n\n\n<p style=\"margin-top: 1em\">Either <b>STA_UNSYNC</b> or\n<b>STA_CLOCKERR</b> is set.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"29%\"></td>\n<td width=\"2%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"66%\">\n\n\n<p><b>STA_PPSSIGNAL</b> is clear and either\n<b>STA_PPSFREQ</b> or <b>STA_PPSTIME</b> is set.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"29%\"></td>\n<td width=\"2%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"66%\">\n\n\n<p><b>STA_PPSTIME</b> and <b>STA_PPSJITTER</b> are both\nset.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"29%\"></td>\n<td width=\"2%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"66%\">\n\n\n<p><b>STA_PPSFREQ</b> is set and either\n<b>STA_PPSWANDER</b> or <b>STA_PPSJITTER</b> is set.</p></td></tr>\n</table>\n\n<p style=\"margin-left:29%; margin-top: 1em\">The symbolic\nname <b>TIME_BAD</b> is a synonym for <b>TIME_ERROR</b>,\nprovided for backward compatibility.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that\nstarting with Linux 3.4, the call operates asynchronously\nand the return value usually will not reflect a state change\ncaused by the call itself.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On failure,\nthese calls return -1 and set <i>errno</i>.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EFAULT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"58%\">\n\n\n<p style=\"margin-top: 1em\"><i>buf</i> does not point to\nwritable memory.</p></td>\n<td width=\"20%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>EINVAL</b> (kernels before\nLinux 2.6.26)</p>\n\n<p style=\"margin-left:22%;\">An attempt was made to set\n<i>buf.freq</i> to a value outside the range (-33554432,\n+33554432).</p>\n\n<p style=\"margin-left:11%;\"><b>EINVAL</b> (kernels before\nLinux 2.6.26)</p>\n\n<p style=\"margin-left:22%;\">An attempt was made to set\n<i>buf.offset</i> to a value outside the permitted range. In\nkernels before Linux 2.0, the permitted range was (-131072,\n+131072). From Linux 2.0 onwards, the permitted range was\n(-512000, +512000).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>An attempt was made to set <i>buf.status</i> to a value\nother than those listed above.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The <i>clk_id</i> given to <b>clock_adjtime</b>() is\ninvalid for one of two reasons. Either the System-V style\nhard-coded positive clock ID value is out of range, or the\ndynamic <i>clk_id</i> does not refer to a valid instance of\na clock object. See <a href=\"https://man.page/2/clock_gettime\">clock_gettime(2)</a> for a discussion\nof dynamic clocks.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>An attempt was made to set <i>buf.tick</i> to a value\noutside the range 900000/<b>HZ</b> to 1100000/<b>HZ</b>,\nwhere <b>HZ</b> is the system timer interrupt frequency.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENODEV</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The hot-pluggable device (like USB for example)\nrepresented by a dynamic <i>clk_id</i> has disappeared after\nits character device was opened. See <a href=\"https://man.page/2/clock_gettime\">clock_gettime(2)</a>\nfor a discussion of dynamic clocks.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>EOPNOTSUPP</b></p>\n\n<p style=\"margin-left:22%;\">The given <i>clk_id</i> does\nnot support adjustment.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p><i>buf.modes</i> is neither 0 nor\n<b>ADJ_OFFSET_SS_READ</b>, and the caller does not have\nsufficient privilege. Under Linux, the <b>CAP_SYS_TIME</b>\ncapability is required.</p></td></tr>\n</table>\n\n<h2>ATTRIBUTES\n<a name=\"ATTRIBUTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an\nexplanation of the terms used in this section, see\n<a href=\"https://man.page/7/attributes\">attributes(7)</a>.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3250581.png\" alt=\"Image grohtml-3250581.png\"></p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">None of these\ninterfaces is described in POSIX.1</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>adjtimex</b>()\nand <b>clock_adjtime</b>() are Linux-specific and should not\nbe used in programs intended to be portable.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The preferred\nAPI for the NTP daemon is <b>ntp_adjtime</b>().</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">In struct\n<i>timex</i>, <i>freq</i>, <i>ppsfreq</i>, and <i>stabil</i>\nare ppm (parts per million) with a 16-bit fractional part,\nwhich means that a value of 1 in one of those fields\nactually means 2^-16 ppm, and 2^16=65536 is 1 ppm. This is\nthe case for both input values (in the case of <i>freq</i>)\nand output values.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The leap-second\nprocessing triggered by <b>STA_INS</b> and <b>STA_DEL</b> is\ndone by the kernel in timer context. Thus, it will take one\ntick into the second for the leap second to be inserted or\ndeleted.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/clock_gettime\">clock_gettime(2)</a>,\n<a href=\"https://man.page/2/clock_settime\">clock_settime(2)</a>, <a href=\"https://man.page/2/settimeofday\">settimeofday(2)</a>,\n<a href=\"https://man.page/3/adjtime\">adjtime(3)</a>, <a href=\"https://man.page/3/ntp_gettime\">ntp_gettime(3)</a>,\n<a href=\"https://man.page/7/capabilities\">capabilities(7)</a>, <a href=\"https://man.page/7/time\">time(7)</a>, <b>adjtimex</b>(8),\n<b>hwclock</b>(8) <br>\n\n<a href=\"http://www.slac.stanford.edu/comp/unix/package/rtems/src/ssrlApps/ntpNanoclock/api.htm\">NTP\n&quot;Kernel Application Program Interface&quot;</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#ATTRIBUTES\">ATTRIBUTES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}