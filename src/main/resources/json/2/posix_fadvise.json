{"name":"posix_fadvise","description":"posix_fadvise - predeclare an access pattern for file data","body":"\n\n<h1 align=\"center\">POSIX_FADVISE</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">posix_fadvise -\npredeclare an access pattern for file data</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;fcntl.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nposix_fadvise(int</b> <i>fd</i><b>, off_t</b>\n<i>offset</i><b>, off_t</b> <i>len</i><b>, int</b>\n<i>advice</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>posix_fadvise</b>():</p>\n\n\n<p style=\"margin-left:17%;\">_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200112L</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Programs can\nuse <b>posix_fadvise</b>() to announce an intention to\naccess file data in a specific pattern in the future, thus\nallowing the kernel to perform appropriate\noptimizations.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>advice</i> applies to a (not necessarily existent) region\nstarting at <i>offset</i> and extending for <i>len</i> bytes\n(or until the end of the file if <i>len</i> is 0) within the\nfile referred to by <i>fd</i>. The <i>advice</i> is not\nbinding; it merely constitutes an expectation on behalf of\nthe application.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Permissible\nvalues for <i>advice</i> include: <b><br>\nPOSIX_FADV_NORMAL</b></p>\n\n<p style=\"margin-left:22%;\">Indicates that the application\nhas no advice to give about its access pattern for the\nspecified data. If no advice is given for an open file, this\nis the default assumption.</p>\n\n\n<p style=\"margin-left:11%;\"><b>POSIX_FADV_SEQUENTIAL</b></p>\n\n<p style=\"margin-left:22%;\">The application expects to\naccess the specified data sequentially (with lower offsets\nread before higher ones).</p>\n\n<p style=\"margin-left:11%;\"><b>POSIX_FADV_RANDOM</b></p>\n\n<p style=\"margin-left:22%;\">The specified data will be\naccessed in random order.</p>\n\n<p style=\"margin-left:11%;\"><b>POSIX_FADV_NOREUSE</b></p>\n\n<p style=\"margin-left:22%;\">The specified data will be\naccessed only once.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">In kernels\nbefore 2.6.18, <b>POSIX_FADV_NOREUSE</b> had the same\nsemantics as <b>POSIX_FADV_WILLNEED</b>. This was probably a\nbug; since kernel 2.6.18, this flag is a no-op.</p>\n\n<p style=\"margin-left:11%;\"><b>POSIX_FADV_WILLNEED</b></p>\n\n<p style=\"margin-left:22%;\">The specified data will be\naccessed in the near future.</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>POSIX_FADV_WILLNEED</b>\ninitiates a nonblocking read of the specified region into\nthe page cache. The amount of data read may be decreased by\nthe kernel depending on virtual memory load. (A few\nmegabytes will usually be fully satisfied, and more is\nrarely useful.)</p>\n\n<p style=\"margin-left:11%;\"><b>POSIX_FADV_DONTNEED</b></p>\n\n<p style=\"margin-left:22%;\">The specified data will not be\naccessed in the near future.</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>POSIX_FADV_DONTNEED</b>\nattempts to free cached pages associated with the specified\nregion. This is useful, for example, while streaming large\nfiles. A program may periodically request the kernel to free\ncached data that has already been used, so that more useful\ncached pages are not discarded instead.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Requests to\ndiscard partial pages are ignored. It is preferable to\npreserve needed data than discard unneeded data. If the\napplication requires that data be considered for discarding,\nthen <i>offset</i> and <i>len</i> must be page-aligned.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The\nimplementation <i>may</i> attempt to write back dirty pages\nin the specified region, but this is not guaranteed. Any\nunwritten dirty pages will not be freed. If the application\nwishes to ensure that dirty pages will be released, it\nshould call <a href=\"https://man.page/2/fsync\">fsync(2)</a> or <a href=\"https://man.page/2/fdatasync\">fdatasync(2)</a>\nfirst.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\nzero is returned. On error, an error number is returned.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EBADF</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">The <i>fd</i> argument was not a\nvalid file descriptor.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>An invalid value was specified for <i>advice</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ESPIPE</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The specified file descriptor refers to a pipe or FIFO.\n(<b>ESPIPE</b> is the error specified by POSIX, but before\nkernel version 2.6.16, Linux returned <b>EINVAL</b> in this\ncase.)</p> </td></tr>\n</table>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Kernel support\nfirst appeared in Linux 2.5.60; the underlying system call\nis called <b>fadvise64</b>(). Library support has been\nprovided since glibc version 2.2, via the wrapper function\n<b>posix_fadvise</b>().</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Since Linux\n3.18, support for the underlying system call is optional,\ndepending on the setting of the\n<b>CONFIG_ADVISE_SYSCALLS</b> configuration option.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008. Note that the type of the <i>len</i> argument\nwas changed from <i>size_t</i> to <i>off_t</i> in\nPOSIX.1-2001 TC1.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Under Linux,\n<b>POSIX_FADV_NORMAL</b> sets the readahead window to the\ndefault size for the backing device;\n<b>POSIX_FADV_SEQUENTIAL</b> doubles this size, and\n<b>POSIX_FADV_RANDOM</b> disables file readahead entirely.\nThese changes affect the entire file, not just the specified\nregion (but other open file handles to the same file are\nunaffected).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The contents of\nthe kernel buffer cache can be cleared via the\n<i>/proc/sys/vm/drop_caches</i> interface described in\n<a href=\"https://man.page/5/proc\">proc(5)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">One can obtain\na snapshot of which pages of a file are resident in the\nbuffer cache by opening a file, mapping it with\n<a href=\"https://man.page/2/mmap\">mmap(2)</a>, and then applying <a href=\"https://man.page/2/mincore\">mincore(2)</a> to the\nmapping.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>C\nlibrary/kernel differences</b> <br>\nThe name of the wrapper function in the C library is\n<b>posix_fadvise</b>(). The underlying system call is called\n<b>fadvise64</b>() (or, on some architectures,\n<b>fadvise64_64</b>()); the difference between the two is\nthat the former system call assumes that the type of the\n<i>len</i> argument is <i>size_t</i>, while the latter\nexpects <i>loff_t</i> there.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Architecture-specific\nvariants</b> <br>\nSome architectures require 64-bit arguments to be aligned in\na suitable pair of registers (see <a href=\"https://man.page/2/syscall\">syscall(2)</a> for\nfurther detail). On such architectures, the call signature\nof <b>posix_fadvise</b>() shown in the SYNOPSIS would force\na register to be wasted as padding between the <i>fd</i> and\n<i>offset</i> arguments. Therefore, these architectures\ndefine a version of the system call that orders the\narguments suitably, but is otherwise exactly the same as\n<b>posix_fadvise</b>().</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For example,\nsince Linux 2.6.14, ARM has the following system call:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>long\narm_fadvise64_64(int</b> <i>fd</i><b>, int</b>\n<i>advice</i><b>, <br>\nloff_t</b> <i>offset</i><b>, loff_t</b>\n<i>len</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">These\narchitecture-specific details are generally hidden from\napplications by the glibc <b>posix_fadvise</b>() wrapper\nfunction, which invokes the appropriate\narchitecture-specific system call.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">In kernels\nbefore 2.6.6, if <i>len</i> was specified as 0, then this\nwas interpreted literally as &quot;zero bytes&quot;, rather\nthan as meaning &quot;all bytes through to the end of the\nfile&quot;.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/fincore\">fincore(1)</a>,\n<a href=\"https://man.page/2/mincore\">mincore(2)</a>, <a href=\"https://man.page/2/readahead\">readahead(2)</a>,\n<a href=\"https://man.page/2/sync_file_range\">sync_file_range(2)</a>, <a href=\"https://man.page/3/posix_fallocate\">posix_fallocate(3)</a>,\n<a href=\"https://man.page/3/posix_madvise\">posix_madvise(3)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}