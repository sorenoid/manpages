{"name":"sendmmsg","body":"\n\n<h1 align=\"center\">SENDMMSG</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">sendmmsg - send\nmultiple messages on a socket</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#define\n_GNU_SOURCE</b> /* See feature_test_macros(7) */ <b><br>\n#include &lt;sys/socket.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nsendmmsg(int</b> <i>sockfd</i><b>, struct mmsghdr\n*</b><i>msgvec</i><b>, unsigned int</b> <i>vlen</i><b>, <br>\nint</b> <i>flags</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>sendmmsg</b>() system call is an extension of\n<a href=\"https://man.page/2/sendmsg\">sendmsg(2)</a> that allows the caller to transmit\nmultiple messages on a socket using a single system call.\n(This has performance benefits for some applications.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>sockfd</i> argument is the file descriptor of the socket\non which data is to be transmitted.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>msgvec</i> argument is a pointer to an array of\n<i>mmsghdr</i> structures. The size of this array is\nspecified in <i>vlen</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>mmsghdr</i> structure is defined in\n<i>&lt;sys/socket.h&gt;</i> as:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct mmsghdr\n{ <br>\nstruct msghdr msg_hdr; /* Message header */ <br>\nunsigned int msg_len; /* Number of bytes transmitted */ <br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>msg_hdr</i> field is a <i>msghdr</i> structure, as\ndescribed in <a href=\"https://man.page/2/sendmsg\">sendmsg(2)</a>. The <i>msg_len</i> field is\nused to return the number of bytes sent from the message in\n<i>msg_hdr</i> (i.e., the same as the return value from a\nsingle <a href=\"https://man.page/2/sendmsg\">sendmsg(2)</a> call).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>flags</i> argument contains flags ORed together. The\nflags are the same as for <a href=\"https://man.page/2/sendmsg\">sendmsg(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A blocking\n<b>sendmmsg</b>() call blocks until <i>vlen</i> messages\nhave been sent. A nonblocking call sends as many messages as\npossible (up to the limit specified by <i>vlen</i>) and\nreturns immediately.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On return from\n<b>sendmmsg</b>(), the <i>msg_len</i> fields of successive\nelements of <i>msgvec</i> are updated to contain the number\nof bytes transmitted from the corresponding <i>msg_hdr</i>.\nThe return value of the call indicates the number of\nelements of <i>msgvec</i> that have been updated.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\n<b>sendmmsg</b>() returns the number of messages sent from\n<i>msgvec</i>; if this is less than <i>vlen</i>, the caller\ncan retry with a further <b>sendmmsg</b>() call to send the\nremaining messages.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On error, -1 is\nreturned, and <i>errno</i> is set to indicate the error.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Errors are as\nfor <a href=\"https://man.page/2/sendmsg\">sendmsg(2)</a>. An error is returned only if no\ndatagrams could be sent. See also BUGS.</p>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>sendmmsg</b>() system call was added in Linux 3.0.\nSupport in glibc was added in version 2.14.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>sendmmsg</b>()\nis Linux-specific.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The value\nspecified in <i>vlen</i> is capped to <b>UIO_MAXIOV</b>\n(1024).</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">If an error\noccurs after at least one message has been sent, the call\nsucceeds, and returns the number of messages sent. The error\ncode is lost. The caller can retry the transmission,\nstarting at the first failed message, but there is no\nguarantee that, if an error is returned, it will be the same\nas the one that was lost on the previous call.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The example\nbelow uses <b>sendmmsg</b>() to send <i>onetwo</i> and\n<i>three</i> in two distinct UDP datagrams using one system\ncall. The contents of the first datagram originates from a\npair of buffers.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#define\n_GNU_SOURCE <br>\n#include &lt;netinet/ip.h&gt; <br>\n#include &lt;stdio.h&gt; <br>\n#include &lt;stdlib.h&gt; <br>\n#include &lt;string.h&gt; <br>\n#include &lt;sys/types.h&gt; <br>\n#include &lt;sys/socket.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(void) <br>\n{ <br>\nint sockfd; <br>\nstruct sockaddr_in addr; <br>\nstruct mmsghdr msg[2]; <br>\nstruct iovec msg1[2], msg2; <br>\nint retval;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">sockfd =\nsocket(AF_INET, SOCK_DGRAM, 0); <br>\nif (sockfd == -1) { <br>\nperror(&quot;socket()&quot;); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">addr.sin_family\n= AF_INET; <br>\naddr.sin_addr.s_addr = htonl(INADDR_LOOPBACK); <br>\naddr.sin_port = htons(1234); <br>\nif (connect(sockfd, (struct sockaddr *) &amp;addr,\nsizeof(addr)) == -1) { <br>\nperror(&quot;connect()&quot;); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">memset(msg1, 0,\nsizeof(msg1)); <br>\nmsg1[0].iov_base = &quot;one&quot;; <br>\nmsg1[0].iov_len = 3; <br>\nmsg1[1].iov_base = &quot;two&quot;; <br>\nmsg1[1].iov_len = 3;</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">memset(&amp;msg2,\n0, sizeof(msg2)); <br>\nmsg2.iov_base = &quot;three&quot;; <br>\nmsg2.iov_len = 5;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">memset(msg, 0,\nsizeof(msg)); <br>\nmsg[0].msg_hdr.msg_iov = msg1; <br>\nmsg[0].msg_hdr.msg_iovlen = 2;</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">msg[1].msg_hdr.msg_iov\n= &amp;msg2; <br>\nmsg[1].msg_hdr.msg_iovlen = 1;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">retval =\nsendmmsg(sockfd, msg, 2, 0); <br>\nif (retval == -1) <br>\nperror(&quot;sendmmsg()&quot;); <br>\nelse <br>\nprintf(&quot;%d messages sent\\n&quot;, retval);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">exit(0); <br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/recvmmsg\">recvmmsg(2)</a>,\n<a href=\"https://man.page/2/sendmsg\">sendmsg(2)</a>, <a href=\"https://man.page/2/socket\">socket(2)</a>, <a href=\"https://man.page/7/socket\">socket(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}