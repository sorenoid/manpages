{"name":"semctl","description":"semctl - System\nV semaphore control operations","body":"\n\n<h1 align=\"center\">SEMCTL</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">semctl - System\nV semaphore control operations</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/types.h&gt; <br>\n#include &lt;sys/ipc.h&gt; <br>\n#include &lt;sys/sem.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nsemctl(int</b> <i>semid</i><b>, int</b> <i>semnum</i><b>,\nint</b> <i>cmd</i><b>, ...);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>semctl</b>()\nperforms the control operation specified by <i>cmd</i> on\nthe System&nbsp;V semaphore set identified by <i>semid</i>,\nor on the <i>semnum</i>-th semaphore of that set. (The\nsemaphores in a set are numbered starting at 0.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This function\nhas three or four arguments, depending on <i>cmd</i>. When\nthere are four, the fourth has the type <i>union semun</i>.\nThe <i>calling program</i> must define this union as\nfollows:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">union semun {\n<br>\nint val; /* Value for SETVAL */ <br>\nstruct semid_ds *buf; /* Buffer for IPC_STAT, IPC_SET */\n<br>\nunsigned short *array; /* Array for GETALL, SETALL */ <br>\nstruct seminfo *__buf; /* Buffer for IPC_INFO <br>\n(Linux-specific) */ <br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>semid_ds</i> data structure is defined in\n<i>&lt;sys/sem.h&gt;</i> as follows:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct semid_ds\n{ <br>\nstruct ipc_perm sem_perm; /* Ownership and permissions */\n<br>\ntime_t sem_otime; /* Last semop time */ <br>\ntime_t sem_ctime; /* Creation time/time of last <br>\nmodification via semctl() */ <br>\nunsigned long sem_nsems; /* No. of semaphores in set */ <br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The fields of\nthe <i>semid_ds</i> structure are as follows:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"14%\">\n\n\n<p><i>sem_perm</i></p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p>This is an <i>ipc_perm</i> structure (see below) that\nspecifies the access permissions on the semaphore set.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"14%\">\n\n\n<p><i>sem_otime</i></p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p>Time of last <a href=\"https://man.page/2/semop\">semop(2)</a> system call.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"14%\">\n\n\n<p><i>sem_ctime</i></p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p>Time of creation of semaphore set or time of last\n<b>semctl</b>() <b>IPCSET</b>, <b>SETVAL</b>, or\n<b>SETALL</b> operation.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"14%\">\n\n\n<p><i>sem_nsems</i></p></td>\n<td width=\"3%\"></td>\n<td width=\"72%\">\n\n\n<p>Number of semaphores in the set. Each semaphore of the\nset is referenced by a nonnegative integer ranging from\n<b>0</b> to <i>sem_nsems-1</i>.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>ipc_perm</i> structure is defined as follows (the\nhighlighted fields are settable using <b>IPC_SET</b>):</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct ipc_perm\n{ <br>\nkey_t __key; /* Key supplied to semget(2) */ <br>\nuid_t <b>uid</b>; /* Effective UID of owner */ <br>\ngid_t <b>gid</b>; /* Effective GID of owner */ <br>\nuid_t cuid; /* Effective UID of creator */ <br>\ngid_t cgid; /* Effective GID of creator */ <br>\nunsigned short <b>mode</b>; /* Permissions */ <br>\nunsigned short __seq; /* Sequence number */ <br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The least\nsignificant 9 bits of the <i>mode</i> field of the\n<i>ipc_perm</i> structure define the access permissions for\nthe shared memory segment. The permission bits are as\nfollows:</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3243041.png\" alt=\"Image grohtml-3243041.png\"></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In effect,\n&quot;write&quot; means &quot;alter&quot; for a semaphore\nset. Bits 0100, 0010, and 0001 (the execute bits) are unused\nby the system.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Valid values\nfor <i>cmd</i> are: <b><br>\nIPC_STAT</b></p>\n\n<p style=\"margin-left:22%;\">Copy information from the\nkernel data structure associated with <i>semid</i> into the\n<i>semid_ds</i> structure pointed to by <i>arg.buf</i>. The\nargument <i>semnum</i> is ignored. The calling process must\nhave read permission on the semaphore set.</p>\n\n<p style=\"margin-left:11%;\"><b>IPC_SET</b></p>\n\n<p style=\"margin-left:22%;\">Write the values of some\nmembers of the <i>semid_ds</i> structure pointed to by\n<i>arg.buf</i> to the kernel data structure associated with\nthis semaphore set, updating also its <i>sem_ctime</i>\nmember.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The following\nmembers of the structure are updated: <i>sem_perm.uid</i>,\n<i>sem_perm.gid</i>, and (the least significant 9 bits of)\n<i>sem_perm.mode</i>.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The effective\nUID of the calling process must match the owner\n(<i>sem_perm.uid</i>) or creator (<i>sem_perm.cuid</i>) of\nthe semaphore set, or the caller must be privileged. The\nargument <i>semnum</i> is ignored.</p>\n\n<p style=\"margin-left:11%;\"><b>IPC_RMID</b></p>\n\n<p style=\"margin-left:22%;\">Immediately remove the\nsemaphore set, awakening all processes blocked in\n<a href=\"https://man.page/2/semop\">semop(2)</a> calls on the set (with an error return and\n<i>errno</i> set to <b>EIDRM</b>). The effective user ID of\nthe calling process must match the creator or owner of the\nsemaphore set, or the caller must be privileged. The\nargument <i>semnum</i> is ignored.</p>\n\n<p style=\"margin-left:11%;\"><b>IPC_INFO</b>\n(Linux-specific)</p>\n\n<p style=\"margin-left:22%;\">Return information about\nsystem-wide semaphore limits and parameters in the structure\npointed to by <i>arg.__buf</i>. This structure is of type\n<i>seminfo</i>, defined in <i>&lt;sys/sem.h&gt;</i> if the\n<b>_GNU_SOURCE</b> feature test macro is defined:</p>\n\n<p style=\"margin-left:28%; margin-top: 1em\">struct seminfo\n{ <br>\nint semmap; /* Number of entries in semaphore <br>\nmap; unused within kernel */ <br>\nint semmni; /* Maximum number of semaphore sets */ <br>\nint semmns; /* Maximum number of semaphores in all <br>\nsemaphore sets */ <br>\nint semmnu; /* System-wide maximum number of undo <br>\nstructures; unused within kernel */ <br>\nint semmsl; /* Maximum number of semaphores in a <br>\nset */ <br>\nint semopm; /* Maximum number of operations for <br>\nsemop(2) */ <br>\nint semume; /* Maximum number of undo entries per <br>\nprocess; unused within kernel */ <br>\nint semusz; /* Size of struct sem_undo */ <br>\nint semvmx; /* Maximum semaphore value */ <br>\nint semaem; /* Max. value that can be recorded for <br>\nsemaphore adjustment (SEM_UNDO) */ <br>\n};</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The\n<i>semmsl</i>, <i>semmns</i>, <i>semopm</i>, and\n<i>semmni</i> settings can be changed via\n<i>/proc/sys/kernel/sem</i>; see <a href=\"https://man.page/5/proc\">proc(5)</a> for\ndetails.</p>\n\n<p style=\"margin-left:11%;\"><b>SEM_INFO</b>\n(Linux-specific)</p>\n\n<p style=\"margin-left:22%;\">Return a <i>seminfo</i>\nstructure containing the same information as for\n<b>IPC_INFO</b>, except that the following fields are\nreturned with information about system resources consumed by\nsemaphores: the <i>semusz</i> field returns the number of\nsemaphore sets that currently exist on the system; and the\n<i>semaem</i> field returns the total number of semaphores\nin all semaphore sets on the system.</p>\n\n<p style=\"margin-left:11%;\"><b>SEM_STAT</b>\n(Linux-specific)</p>\n\n<p style=\"margin-left:22%;\">Return a <i>semid_ds</i>\nstructure as for <b>IPC_STAT</b>. However, the <i>semid</i>\nargument is not a semaphore identifier, but instead an index\ninto the kernel&rsquo;s internal array that maintains\ninformation about all semaphore sets on the system.</p>\n\n<p style=\"margin-left:11%;\"><b>SEM_STAT_ANY</b>\n(Linux-specific, since Linux 4.17)</p>\n\n<p style=\"margin-left:22%;\">Return a <i>seminfo</i>\nstructure containing the same information as for\n<b>SEM_STAT</b>. However, <i>sem_perm.mode</i> is not\nchecked for read access for <i>semid</i> meaning that any\nuser can employ this operation (just as any user may read\n<i>/proc/sysvipc/sem</i> to obtain the same\ninformation).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>GETALL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Return <b>semval</b> (i.e., the current value) for all\nsemaphores of the set into <i>arg.array</i>. The argument\n<i>semnum</i> is ignored. The calling process must have read\npermission on the semaphore set.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>GETNCNT</b></p>\n\n<p style=\"margin-left:22%;\">Return the <b>semncnt</b> value\nfor the <i>semnum</i>-th semaphore of the set (i.e., the\nnumber of processes waiting for the semaphore&rsquo;s value\nto increase). The calling process must have read permission\non the semaphore set.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>GETPID</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Return the <b>sempid</b> value for the <i>semnum</i>-th\nsemaphore of the set. This is the PID of the process that\nlast performed an operation on that semaphore (but see\nNOTES). The calling process must have read permission on the\nsemaphore set.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>GETVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Return <b>semval</b> (i.e., the semaphore value) for the\n<i>semnum</i>-th semaphore of the set. The calling process\nmust have read permission on the semaphore set.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>GETZCNT</b></p>\n\n<p style=\"margin-left:22%;\">Return the <b>semzcnt</b> value\nfor the <i>semnum</i>-th semaphore of the set (i.e., the\nnumber of processes waiting for the semaphore value to\nbecome 0). The calling process must have read permission on\nthe semaphore set.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>SETALL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Set the <b>semval</b> values for all semaphores of the\nset using <i>arg.array</i>, updating also the\n<i>sem_ctime</i> member of the <i>semid_ds</i> structure\nassociated with the set. Undo entries (see <a href=\"https://man.page/2/semop\">semop(2)</a>)\nare cleared for altered semaphores in all processes. If the\nchanges to semaphore values would permit blocked\n<a href=\"https://man.page/2/semop\">semop(2)</a> calls in other processes to proceed, then\nthose processes are woken up. The argument <i>semnum</i> is\nignored. The calling process must have alter (write)\npermission on the semaphore set.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>SETVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Set the semaphore value <b>(</b>semval<b>)</b> to\n<i>arg.val</i> for the <i>semnum</i>-th semaphore of the\nset, updating also the <i>sem_ctime</i> member of the\n<i>semid_ds</i> structure associated with the set. Undo\nentries are cleared for altered semaphores in all processes.\nIf the changes to semaphore values would permit blocked\n<a href=\"https://man.page/2/semop\">semop(2)</a> calls in other processes to proceed, then\nthose processes are woken up. The calling process must have\nalter permission on the semaphore set.</p></td></tr>\n</table>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On failure,\n<b>semctl</b>() returns -1 with <i>errno</i> indicating the\nerror.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Otherwise, the\nsystem call returns a nonnegative value depending on\n<i>cmd</i> as follows: <b><br>\nGETNCNT</b></p>\n\n<p style=\"margin-left:22%;\">the value of\n<b>semncnt</b>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>GETPID</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"30%\">\n\n\n<p>the value of <b>sempid</b>.</p></td>\n<td width=\"48%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>GETVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"30%\">\n\n\n<p>the value of <b>semval</b>.</p></td>\n<td width=\"48%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>GETZCNT</b></p>\n\n<p style=\"margin-left:22%;\">the value of\n<b>semzcnt</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>IPC_INFO</b></p>\n\n<p style=\"margin-left:22%;\">the index of the highest used\nentry in the kernel&rsquo;s internal array recording\ninformation about all semaphore sets. (This information can\nbe used with repeated <b>SEM_STAT</b> or <b>SEM_STAT_ANY</b>\noperations to obtain information about all semaphore sets on\nthe system.)</p>\n\n<p style=\"margin-left:11%;\"><b>SEM_INFO</b></p>\n\n<p style=\"margin-left:22%;\">as for <b>IPC_INFO</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>SEM_STAT</b></p>\n\n<p style=\"margin-left:22%;\">the identifier of the semaphore\nset whose index was given in <i>semid</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>SEM_STAT_ANY</b></p>\n\n<p style=\"margin-left:22%;\">as for <b>SEM_STAT</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All other\n<i>cmd</i> values return 0 on success.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On failure,\n<i>errno</i> will be set to one of the following:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EACCES</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The argument <i>cmd</i> has one of the values\n<b>GETALL</b>, <b>GETPID</b>, <b>GETVAL</b>, <b>GETNCNT</b>,\n<b>GETZCNT</b>, <b>IPC_STAT</b>, <b>SEM_STAT</b>,\n<b>SEM_STAT_ANY</b>, <b>SETALL</b>, or <b>SETVAL</b> and the\ncalling process does not have the required permissions on\nthe semaphore set and does not have the <b>CAP_IPC_OWNER</b>\ncapability in the user namespace that governs its IPC\nnamespace.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EFAULT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The address pointed to by <i>arg.buf</i> or\n<i>arg.array</i> isn&rsquo;t accessible.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EIDRM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The semaphore set was removed.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Invalid value for <i>cmd</i> or <i>semid</i>. Or: for a\n<b>SEM_STAT</b> operation, the index value specified in\n<i>semid</i> referred to an array slot that is currently\nunused.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The argument <i>cmd</i> has the value <b>IPC_SET</b> or\n<b>IPC_RMID</b> but the effective user ID of the calling\nprocess is not the creator (as found in\n<i>sem_perm.cuid</i>) or the owner (as found in\n<i>sem_perm.uid</i>) of the semaphore set, and the process\ndoes not have the <b>CAP_SYS_ADMIN</b> capability.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ERANGE</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The argument <i>cmd</i> has the value <b>SETALL</b> or\n<b>SETVAL</b> and the value to which <b>semval</b> is to be\nset (for some semaphore of the set) is less than 0 or\ngreater than the implementation limit <b>SEMVMX</b>.</p></td></tr>\n</table>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008, SVr4.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1\nspecifies the <i>sem_nsems</i> field of the <i>semid_ds</i>\nstructure as having the type <i>unsigned&nbsp;short</i>, and\nthe field is so defined on most other systems. It was also\nso defined on Linux 2.2 and earlier, but, since Linux 2.4,\nthe field has the type <i>unsigned&nbsp;long</i>.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The inclusion\nof <i>&lt;sys/types.h&gt;</i> and <i>&lt;sys/ipc.h&gt;</i>\nisn&rsquo;t required on Linux or by any version of POSIX.\nHowever, some old implementations required the inclusion of\nthese header files, and the SVID also documented their\ninclusion. Applications intended to be portable to such old\nsystems may need to include these header files.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>IPC_INFO</b>, <b>SEM_STAT</b>, and <b>SEM_INFO</b>\noperations are used by the <a href=\"https://man.page/1/ipcs\">ipcs(1)</a> program to provide\ninformation on allocated resources. In the future these may\nmodified or moved to a <i>/proc</i> filesystem\ninterface.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Various fields\nin a <i>struct semid_ds</i> were typed as <i>short</i> under\nLinux 2.2 and have become <i>long</i> under Linux 2.4. To\ntake advantage of this, a recompilation under glibc-2.1.91\nor later should suffice. (The kernel distinguishes old and\nnew calls by an <b>IPC_64</b> flag in <i>cmd</i>.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In some earlier\nversions of glibc, the <i>semun</i> union was defined in\n<i>&lt;sys/sem.h&gt;</i>, but POSIX.1 requires that the\ncaller define this union. On versions of glibc where this\nunion is <i>not</i> defined, the macro\n<b>_SEM_SEMUN_UNDEFINED</b> is defined in\n<i>&lt;sys/sem.h&gt;</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nsystem limit on semaphore sets affects a <b>semctl</b>()\ncall:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>SEMVMX</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">Maximum value for <b>semval</b>:\nimplementation dependent (32767).</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For greater\nportability, it is best to always call <b>semctl</b>() with\nfour arguments.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The sempid\nvalue</b> <br>\nPOSIX.1 defines <i>sempid</i> as the &quot;process ID of\n[the] last operation&quot; on a semaphore, and explicitly\nnotes that this value is set by a successful <a href=\"https://man.page/2/semop\">semop(2)</a>\ncall, with the implication that no other interface affects\nthe <i>sempid</i> value.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">While some\nimplementations conform to the behavior specified in\nPOSIX.1, others do not. (The fault here probably lies with\nPOSIX.1 inasmuch as it likely failed to capture the full\nrange of existing implementation behaviors.) Various other\nimplementations also update <i>sempid</i> for the other\noperations that update the value of a semaphore: the\n<b>SETVAL</b> and <b>SETALL</b> operations, as well as the\nsemaphore adjustments performed on process termination as a\nconsequence of the use of the <b>SEM_UNDO</b> flag (see\n<a href=\"https://man.page/2/semop\">semop(2)</a>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Linux also\nupdates <i>sempid</i> for <b>SETVAL</b> operations and\nsemaphore adjustments. However, somewhat inconsistently, up\nto and including Linux 4.5, the kernel did not update\n<i>sempid</i> for <b>SETALL</b> operations. This was\nrectified in Linux 4.6.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">See\n<a href=\"https://man.page/2/shmop\">shmop(2)</a>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/ipc\">ipc(2)</a>,\n<a href=\"https://man.page/2/semget\">semget(2)</a>, <a href=\"https://man.page/2/semop\">semop(2)</a>, <a href=\"https://man.page/7/capabilities\">capabilities(7)</a>,\n<a href=\"https://man.page/7/sem_overview\">sem_overview(7)</a>, <a href=\"https://man.page/7/sysvipc\">sysvipc(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}