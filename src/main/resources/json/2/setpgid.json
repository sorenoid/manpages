{"name":"setpgid","body":"\n\n<h1 align=\"center\">SETPGID</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">setpgid,\ngetpgid, setpgrp, getpgrp - set/get process group</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/types.h&gt; <br>\n#include &lt;unistd.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nsetpgid(pid_t</b> <i>pid</i><b>, pid_t</b> <i>pgid</i><b>);\n<br>\npid_t getpgid(pid_t</b> <i>pid</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>pid_t\ngetpgrp(void);</b> /* POSIX.1 version */ <b><br>\npid_t getpgrp(pid_t</b> <i>pid</i><b>);</b> /* BSD version\n*/</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nsetpgrp(void);</b> /* System V version */ <b><br>\nint setpgrp(pid_t</b> <i>pid</i><b>, pid_t</b>\n<i>pgid</i><b>);</b> /* BSD version */</p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>getpgid</b>():</p>\n\n\n<p style=\"margin-left:17%;\">_XOPEN_SOURCE&nbsp;&gt;=&nbsp;500\n<br>\n|| /* Since glibc 2.12: */\n_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200809L</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>setpgrp</b>()\n(POSIX.1): <br>\n_XOPEN_SOURCE&nbsp;&gt;=&nbsp;500 <br>\n|| /* Since glibc 2.19: */ _DEFAULT_SOURCE <br>\n|| /* Glibc versions &lt;= 2.19: */ _SVID_SOURCE</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>setpgrp</b>()&nbsp;(BSD),\n<b>getpgrp</b>()&nbsp;(BSD): <br>\n[These are available only before glibc 2.19] <br>\n_BSD_SOURCE &amp;&amp; <br>\n!&nbsp;(_POSIX_SOURCE || _POSIX_C_SOURCE || _XOPEN_SOURCE ||\n<br>\n_GNU_SOURCE || _SVID_SOURCE)</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">All of these\ninterfaces are available on Linux, and are used for getting\nand setting the process group ID (PGID) of a process. The\npreferred, POSIX.1-specified ways of doing this are:\n<b>getpgrp</b>(void), for retrieving the calling\nprocess&rsquo;s PGID; and <b>setpgid</b>(), for setting a\nprocess&rsquo;s PGID.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>setpgid</b>()\nsets the PGID of the process specified by <i>pid</i> to\n<i>pgid</i>. If <i>pid</i> is zero, then the process ID of\nthe calling process is used. If <i>pgid</i> is zero, then\nthe PGID of the process specified by <i>pid</i> is made the\nsame as its process ID. If <b>setpgid</b>() is used to move\na process from one process group to another (as is done by\nsome shells when creating pipelines), both process groups\nmust be part of the same session (see <a href=\"https://man.page/2/setsid\">setsid(2)</a> and\n<a href=\"https://man.page/7/credentials\">credentials(7)</a>). In this case, the <i>pgid</i>\nspecifies an existing process group to be joined and the\nsession ID of that group must match the session ID of the\njoining process.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The POSIX.1\nversion of <b>getpgrp</b>(), which takes no arguments,\nreturns the PGID of the calling process.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>getpgid</b>()\nreturns the PGID of the process specified by <i>pid</i>. If\n<i>pid</i> is zero, the process ID of the calling process is\nused. (Retrieving the PGID of a process other than the\ncaller is rarely necessary, and the POSIX.1 <b>getpgrp</b>()\nis preferred for that task.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nSystem&nbsp;V-style <b>setpgrp</b>(), which takes no\narguments, is equivalent to <i>setpgid(0,&nbsp;0)</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nBSD-specific <b>setpgrp</b>() call, which takes arguments\n<i>pid</i> and <i>pgid</i>, is a wrapper function that\ncalls</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">setpgid(pid,\npgid)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Since glibc\n2.19, the BSD-specific <b>setpgrp</b>() function is no\nlonger exposed by <i>&lt;unistd.h&gt;</i>; calls should be\nreplaced with the <b>setpgid</b>() call shown above.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nBSD-specific <b>getpgrp</b>() call, which takes a single\n<i>pid</i> argument, is a wrapper function that calls</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">getpgid(pid)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Since glibc\n2.19, the BSD-specific <b>getpgrp</b>() function is no\nlonger exposed by <i>&lt;unistd.h&gt;</i>; calls should be\nreplaced with calls to the POSIX.1 <b>getpgrp</b>() which\ntakes no arguments (if the intent is to obtain the\ncaller&rsquo;s PGID), or with the <b>getpgid</b>() call\nshown above.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\n<b>setpgid</b>() and <b>setpgrp</b>() return zero. On error,\n-1 is returned, and <i>errno</i> is set appropriately.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The POSIX.1\n<b>getpgrp</b>() always returns the PGID of the caller.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>getpgid</b>(),\nand the BSD-specific <b>getpgrp</b>() return a process group\non success. On error, -1 is returned, and <i>errno</i> is\nset appropriately.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EACCES</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">An attempt was made to change\nthe process group ID of one of the children of the calling\nprocess and the child had already performed an\n<a href=\"https://man.page/2/execve\">execve(2)</a> (<b>setpgid</b>(), <b>setpgrp</b>()).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>pgid</i> is less than 0 (<b>setpgid</b>(),\n<b>setpgrp</b>()).</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>An attempt was made to move a process into a process\ngroup in a different session, or to change the process group\nID of one of the children of the calling process and the\nchild was in a different session, or to change the process\ngroup ID of a session leader (<b>setpgid</b>(),\n<b>setpgrp</b>()).</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ESRCH</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>For <b>getpgid</b>(): <i>pid</i> does not match any\nprocess. For <b>setpgid</b>(): <i>pid</i> is not the calling\nprocess and not a child of the calling process.</p></td></tr>\n</table>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>setpgid</b>()\nand the version of <b>getpgrp</b>() with no arguments\nconform to POSIX.1-2001.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001\nalso specifies <b>getpgid</b>() and the version of\n<b>setpgrp</b>() that takes no arguments. (POSIX.1-2008\nmarks this <b>setpgrp</b>() specification as obsolete.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The version of\n<b>getpgrp</b>() with one argument and the version of\n<b>setpgrp</b>() that takes two arguments derive from\n4.2BSD, and are not specified by POSIX.1.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">A child created\nvia <a href=\"https://man.page/2/fork\">fork(2)</a> inherits its parent&rsquo;s process group\nID. The PGID is preserved across an <a href=\"https://man.page/2/execve\">execve(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Each process\ngroup is a member of a session and each process is a member\nof the session of which its process group is a member. (See\n<a href=\"https://man.page/7/credentials\">credentials(7)</a>.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A session can\nhave a controlling terminal. At any time, one (and only one)\nof the process groups in the session can be the foreground\nprocess group for the terminal; the remaining process groups\nare in the background. If a signal is generated from the\nterminal (e.g., typing the interrupt key to generate\n<b>SIGINT</b>), that signal is sent to the foreground\nprocess group. (See <a href=\"https://man.page/3/termios\">termios(3)</a> for a description of\nthe characters that generate signals.) Only the foreground\nprocess group may <a href=\"https://man.page/2/read\">read(2)</a> from the terminal; if a\nbackground process group tries to <a href=\"https://man.page/2/read\">read(2)</a> from the\nterminal, then the group is sent a <b>SIGTTIN</b> signal,\nwhich suspends it. The <a href=\"https://man.page/3/tcgetpgrp\">tcgetpgrp(3)</a> and\n<a href=\"https://man.page/3/tcsetpgrp\">tcsetpgrp(3)</a> functions are used to get/set the\nforeground process group of the controlling terminal.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>setpgid</b>() and <b>getpgrp</b>() calls are used by\nprograms such as <a href=\"https://man.page/1/bash\">bash(1)</a> to create process groups in\norder to implement shell job control.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\ntermination of a process causes a process group to become\norphaned, and if any member of the newly orphaned process\ngroup is stopped, then a <b>SIGHUP</b> signal followed by a\n<b>SIGCONT</b> signal will be sent to each process in the\nnewly orphaned process group. An orphaned process group is\none in which the parent of every member of process group is\neither itself also a member of the process group or is a\nmember of a process group in a different session (see also\n<a href=\"https://man.page/7/credentials\">credentials(7)</a>).</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/getuid\">getuid(2)</a>,\n<a href=\"https://man.page/2/setsid\">setsid(2)</a>, <a href=\"https://man.page/3/tcgetpgrp\">tcgetpgrp(3)</a>, <a href=\"https://man.page/3/tcsetpgrp\">tcsetpgrp(3)</a>,\n<a href=\"https://man.page/3/termios\">termios(3)</a>, <a href=\"https://man.page/7/credentials\">credentials(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}