{"name":"shmget","description":"shmget -\nallocates a System V shared memory segment","body":"\n\n<h1 align=\"center\">SHMGET</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">shmget -\nallocates a System V shared memory segment</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/ipc.h&gt; <br>\n#include &lt;sys/shm.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nshmget(key_t</b> <i>key</i><b>, size_t</b> <i>size</i><b>,\nint</b> <i>shmflg</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>shmget</b>()\nreturns the identifier of the System&nbsp;V shared memory\nsegment associated with the value of the argument\n<i>key</i>. It may be used either to obtain the identifier\nof a previously created shared memory segment (when\n<i>shmflg</i> is zero and <i>key</i> does not have the value\n<b>IPC_PRIVATE</b>), or to create a new set.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A new shared\nmemory segment, with size equal to the value of <i>size</i>\nrounded up to a multiple of <b>PAGE_SIZE</b>, is created if\n<i>key</i> has the value <b>IPC_PRIVATE</b> or <i>key</i>\nisn&rsquo;t <b>IPC_PRIVATE</b>, no shared memory segment\ncorresponding to <i>key</i> exists, and <b>IPC_CREAT</b> is\nspecified in <i>shmflg</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>shmflg</i> specifies both <b>IPC_CREAT</b> and\n<b>IPC_EXCL</b> and a shared memory segment already exists\nfor <i>key</i>, then <b>shmget</b>() fails with <i>errno</i>\nset to <b>EEXIST</b>. (This is analogous to the effect of\nthe combination <b>O_CREAT | O_EXCL</b> for\n<a href=\"https://man.page/2/open\">open(2)</a>.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The value\n<i>shmflg</i> is composed of: <b><br>\nIPC_CREAT</b></p>\n\n<p style=\"margin-left:22%;\">Create a new segment. If this\nflag is not used, then <b>shmget</b>() will find the segment\nassociated with <i>key</i> and check to see if the user has\npermission to access the segment.</p>\n\n<p style=\"margin-left:11%;\"><b>IPC_EXCL</b></p>\n\n<p style=\"margin-left:22%;\">This flag is used with\n<b>IPC_CREAT</b> to ensure that this call creates the\nsegment. If the segment already exists, the call fails.</p>\n\n<p style=\"margin-left:11%;\"><b>SHM_HUGETLB</b> (since Linux\n2.6)</p>\n\n<p style=\"margin-left:22%;\">Allocate the segment using\n&quot;huge pages.&quot; See the Linux kernel source file\n<i>Documentation/admin-guide/mm/hugetlbpage.rst</i> for\nfurther information.</p>\n\n<p style=\"margin-left:11%;\"><b>SHM_HUGE_2MB</b>,\n<b>SHM_HUGE_1GB</b> (since Linux 3.8)</p>\n\n<p style=\"margin-left:22%;\">Used in conjunction with\n<b>SHM_HUGETLB</b> to select alternative hugetlb page sizes\n(respectively, 2&nbsp;MB and 1&nbsp;GB) on systems that\nsupport multiple hugetlb page sizes.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">More generally,\nthe desired huge page size can be configured by encoding the\nbase-2 logarithm of the desired page size in the six bits at\nthe offset <b>SHM_HUGE_SHIFT</b>. Thus, the above two\nconstants are defined as:</p>\n\n<p style=\"margin-left:28%; margin-top: 1em\">#define\nSHM_HUGE_2MB (21 &lt;&lt; SHM_HUGE_SHIFT) <br>\n#define SHM_HUGE_1GB (30 &lt;&lt; SHM_HUGE_SHIFT)</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">For some\nadditional details, see the discussion of the similarly\nnamed constants in <a href=\"https://man.page/2/mmap\">mmap(2)</a>.</p>\n\n<p style=\"margin-left:11%;\"><b>SHM_NORESERVE</b> (since\nLinux 2.6.15)</p>\n\n<p style=\"margin-left:22%;\">This flag serves the same\npurpose as the <a href=\"https://man.page/2/mmap\">mmap(2)</a> <b>MAP_NORESERVE</b> flag. Do\nnot reserve swap space for this segment. When swap space is\nreserved, one has the guarantee that it is possible to\nmodify the segment. When swap space is not reserved one\nmight get <b>SIGSEGV</b> upon a write if no physical memory\nis available. See also the discussion of the file\n<i>/proc/sys/vm/overcommit_memory</i> in <a href=\"https://man.page/5/proc\">proc(5)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In addition to\nthe above flags, the least significant 9 bits of\n<i>shmflg</i> specify the permissions granted to the owner,\ngroup, and others. These bits have the same format, and the\nsame meaning, as the <i>mode</i> argument of <a href=\"https://man.page/2/open\">open(2)</a>.\nPresently, execute permissions are not used by the\nsystem.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When a new\nshared memory segment is created, its contents are\ninitialized to zero values, and its associated data\nstructure, <i>shmid_ds</i> (see <a href=\"https://man.page/2/shmctl\">shmctl(2)</a>), is\ninitialized as follows:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p><i>shm_perm.cuid</i> and <i>shm_perm.uid</i> are set to\nthe effective user ID of the calling process.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p><i>shm_perm.cgid</i> and <i>shm_perm.gid</i> are set to\nthe effective group ID of the calling process.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p>The least significant 9 bits of <i>shm_perm.mode</i> are\nset to the least significant 9 bit of <i>shmflg</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p><i>shm_segsz</i> is set to the value of <i>size</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p><i>shm_lpid</i>, <i>shm_nattch</i>, <i>shm_atime</i>,\nand <i>shm_dtime</i> are set to 0.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p><i>shm_ctime</i> is set to the current time.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the shared\nmemory segment already exists, the permissions are verified,\nand a check is made to see if it is marked for\ndestruction.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success, a\nvalid shared memory identifier is returned. On error, -1 is\nreturned, and <i>errno</i> is set to indicate the error.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On failure,\n<i>errno</i> is set to one of the following:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EACCES</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">The user does not have\npermission to access the shared memory segment, and does not\nhave the <b>CAP_IPC_OWNER</b> capability in the user\nnamespace that governs its IPC namespace.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EEXIST</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><b>IPC_CREAT</b> and <b>IPC_EXCL</b> were specified in\n<i>shmflg</i>, but a shared memory segment already exists\nfor <i>key</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>A new segment was to be created and <i>size</i> is less\nthan <b>SHMMIN</b> or greater than <b>SHMMAX</b>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>A segment for the given <i>key</i> exists, but\n<i>size</i> is greater than the size of that segment.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENFILE</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The system-wide limit on the total number of open files\nhas been reached.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOENT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>No segment exists for the given <i>key</i>, and\n<b>IPC_CREAT</b> was not specified.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOMEM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>No memory could be allocated for segment overhead.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOSPC</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>All possible shared memory IDs have been taken\n(<b>SHMMNI</b>), or allocating a segment of the requested\n<i>size</i> would cause the system to exceed the system-wide\nlimit on shared memory (<b>SHMALL</b>).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The <b>SHM_HUGETLB</b> flag was specified, but the\ncaller was not privileged (did not have the\n<b>CAP_IPC_LOCK</b> capability).</p></td></tr>\n</table>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008, SVr4.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>SHM_HUGETLB</b>\nand <b>SHM_NORESERVE</b> are Linux extensions.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The inclusion\nof <i>&lt;sys/types.h&gt;</i> and <i>&lt;sys/ipc.h&gt;</i>\nisn&rsquo;t required on Linux or by any version of POSIX.\nHowever, some old implementations required the inclusion of\nthese header files, and the SVID also documented their\ninclusion. Applications intended to be portable to such old\nsystems may need to include these header files.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>IPC_PRIVATE</b>\nisn&rsquo;t a flag field but a <i>key_t</i> type. If this\nspecial value is used for <i>key</i>, the system call\nignores all but the least significant 9 bits of\n<i>shmflg</i> and creates a new shared memory segment.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Shared\nmemory limits</b> <br>\nThe following limits on shared memory segment resources\naffect the <b>shmget</b>() call:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>SHMALL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">System-wide limit on the total\namount of shared memory, measured in units of the system\npage size.</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">On Linux, this\nlimit can be read and modified via\n<i>/proc/sys/kernel/shmall</i>. Since Linux 3.16, the\ndefault value for this limit is:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">ULONG_MAX -\n2^24</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The effect of\nthis value (which is suitable for both 32-bit and 64-bit\nsystems) is to impose no limitation on allocations. This\nvalue, rather than <b>ULONG_MAX</b>, was chosen as the\ndefault to prevent some cases where historical applications\nsimply raised the existing limit without first checking its\ncurrent value. Such applications would cause the value to\noverflow if the limit was set at <b>ULONG_MAX</b>.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">From Linux 2.4\nup to Linux 3.15, the default value for this limit was:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">SHMMAX /\nPAGE_SIZE * (SHMMNI / 16)</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">If\n<b>SHMMAX</b> and <b>SHMMNI</b> were not modified, then\nmultiplying the result of this formula by the page size (to\nget a value in bytes) yielded a value of 8&nbsp;GB as the\nlimit on the total memory used by all shared memory\nsegments.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>SHMMAX</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"76%\">\n\n\n<p style=\"margin-top: 1em\">Maximum size in bytes for a\nshared memory segment.</p></td>\n<td width=\"2%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">On Linux, this\nlimit can be read and modified via\n<i>/proc/sys/kernel/shmmax</i>. Since Linux 3.16, the\ndefault value for this limit is:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">ULONG_MAX -\n2^24</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The effect of\nthis value (which is suitable for both 32-bit and 64-bit\nsystems) is to impose no limitation on allocations. See the\ndescription of <b>SHMALL</b> for a discussion of why this\ndefault value (rather than <b>ULONG_MAX</b>) is used.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">From Linux 2.2\nup to Linux 3.15, the default value of this limit was\n0x2000000 (32&nbsp;MB).</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Because it is\nnot possible to map just part of a shared memory segment,\nthe amount of virtual memory places another limit on the\nmaximum size of a usable segment: for example, on i386 the\nlargest segments that can be mapped have a size of around\n2.8&nbsp;GB, and on x86-64 the limit is around 127 TB.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>SHMMIN</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">Minimum size in bytes for a\nshared memory segment: implementation dependent (currently 1\nbyte, though <b>PAGE_SIZE</b> is the effective minimum\nsize).</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>SHMMNI</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>System-wide limit on the number of shared memory\nsegments. In Linux 2.2, the default value for this limit was\n128; since Linux 2.4, the default value is 4096.</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">On Linux, this\nlimit can be read and modified via\n<i>/proc/sys/kernel/shmmni</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nimplementation has no specific limits for the per-process\nmaximum number of shared memory segments\n(<b>SHMSEG</b>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Linux\nnotes</b> <br>\nUntil version 2.3.30, Linux would return <b>EIDRM</b> for a\n<b>shmget</b>() on a shared memory segment scheduled for\ndeletion.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The name choice\n<b>IPC_PRIVATE</b> was perhaps unfortunate, <b>IPC_NEW</b>\nwould more clearly show its function.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">See\n<a href=\"https://man.page/2/shmop\">shmop(2)</a>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/memfd_create\">memfd_create(2)</a>,\n<a href=\"https://man.page/2/shmat\">shmat(2)</a>, <a href=\"https://man.page/2/shmctl\">shmctl(2)</a>, <a href=\"https://man.page/2/shmdt\">shmdt(2)</a>,\n<a href=\"https://man.page/3/ftok\">ftok(3)</a>, <a href=\"https://man.page/7/capabilities\">capabilities(7)</a>,\n<a href=\"https://man.page/7/shm_overview\">shm_overview(7)</a>, <a href=\"https://man.page/7/sysvipc\">sysvipc(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}