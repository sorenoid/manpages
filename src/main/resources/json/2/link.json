{"name":"link","description":"link, linkat -\nmake a new name for a file","body":"\n\n<h1 align=\"center\">LINK</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">link, linkat -\nmake a new name for a file</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;unistd.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nlink(const char *</b><i>oldpath</i><b>, const char\n*</b><i>newpath</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;fcntl.h&gt;</b> /* Definition of AT_* constants */\n<b><br>\n#include &lt;unistd.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nlinkat(int</b> <i>olddirfd</i><b>, const char\n*</b><i>oldpath</i><b>, <br>\nint</b> <i>newdirfd</i><b>, const char\n*</b><i>newpath</i><b>, int</b> <i>flags</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>linkat</b>():</p>\n\n<p style=\"margin-left:17%;\">Since glibc 2.10:</p>\n\n\n<p style=\"margin-left:23%;\">_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200809L</p>\n\n<p style=\"margin-left:17%;\">Before glibc 2.10:</p>\n\n<p style=\"margin-left:23%;\">_ATFILE_SOURCE</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>link</b>()\ncreates a new link (also known as a hard link) to an\nexisting file.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>newpath</i> exists, it will <i>not</i> be\noverwritten.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This new name\nmay be used exactly as the old one for any operation; both\nnames refer to the same file (and so have the same\npermissions and ownership) and it is impossible to tell\nwhich name was the &quot;original&quot;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>linkat()</b>\n<br>\nThe <b>linkat</b>() system call operates in exactly the same\nway as <b>link</b>(), except for the differences described\nhere.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the pathname\ngiven in <i>oldpath</i> is relative, then it is interpreted\nrelative to the directory referred to by the file descriptor\n<i>olddirfd</i> (rather than relative to the current working\ndirectory of the calling process, as is done by\n<b>link</b>() for a relative pathname).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>oldpath</i> is relative and <i>olddirfd</i> is the\nspecial value <b>AT_FDCWD</b>, then <i>oldpath</i> is\ninterpreted relative to the current working directory of the\ncalling process (like <b>link</b>()).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>oldpath</i> is absolute, then <i>olddirfd</i> is\nignored.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\ninterpretation of <i>newpath</i> is as for <i>oldpath</i>,\nexcept that a relative pathname is interpreted relative to\nthe directory referred to by the file descriptor\n<i>newdirfd</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nvalues can be bitwise ORed in <i>flags</i>: <b><br>\nAT_EMPTY_PATH</b> (since Linux 2.6.39)</p>\n\n<p style=\"margin-left:22%;\">If <i>oldpath</i> is an empty\nstring, create a link to the file referenced by\n<i>olddirfd</i> (which may have been obtained using the\n<a href=\"https://man.page/2/open\">open(2)</a> <b>O_PATH</b> flag). In this case,\n<i>olddirfd</i> can refer to any type of file except a\ndirectory. This will generally not work if the file has a\nlink count of zero (files created with <b>O_TMPFILE</b> and\nwithout <b>O_EXCL</b> are an exception). The caller must\nhave the <b>CAP_DAC_READ_SEARCH</b> capability in order to\nuse this flag. This flag is Linux-specific; define\n<b>_GNU_SOURCE</b> to obtain its definition.</p>\n\n<p style=\"margin-left:11%;\"><b>AT_SYMLINK_FOLLOW</b> (since\nLinux 2.6.18)</p>\n\n<p style=\"margin-left:22%;\">By default, <b>linkat</b>(),\ndoes not dereference <i>oldpath</i> if it is a symbolic link\n(like <b>link</b>()). The flag <b>AT_SYMLINK_FOLLOW</b> can\nbe specified in <i>flags</i> to cause <i>oldpath</i> to be\ndereferenced if it is a symbolic link. If procfs is mounted,\nthis can be used as an alternative to <b>AT_EMPTY_PATH</b>,\nlike this:</p>\n\n\n<p style=\"margin-left:28%; margin-top: 1em\">linkat(AT_FDCWD,\n&quot;/proc/self/fd/&lt;fd&gt;&quot;, newdirfd, <br>\nnewname, AT_SYMLINK_FOLLOW);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Before kernel\n2.6.18, the <i>flags</i> argument was unused, and had to be\nspecified as 0.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See\n<a href=\"https://man.page/2/openat\">openat(2)</a> for an explanation of the need for\n<b>linkat</b>().</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\nzero is returned. On error, -1 is returned, and <i>errno</i>\nis set appropriately.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EACCES</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">Write access to the directory\ncontaining <i>newpath</i> is denied, or search permission is\ndenied for one of the directories in the path prefix of\n<i>oldpath</i> or <i>newpath</i>. (See also\n<a href=\"https://man.page/7/path_resolution\">path_resolution(7)</a>.)</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EDQUOT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The user&rsquo;s quota of disk blocks on the filesystem\nhas been exhausted.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EEXIST</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>newpath</i> already exists.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EFAULT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>oldpath</i> or <i>newpath</i> points outside your\naccessible address space.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EIO</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>An I/O error occurred.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ELOOP</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Too many symbolic links were encountered in resolving\n<i>oldpath</i> or <i>newpath</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EMLINK</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The file referred to by <i>oldpath</i> already has the\nmaximum number of links to it. For example, on an\n<a href=\"https://man.page/5/ext4\">ext4(5)</a> filesystem that does not employ the\n<i>dir_index</i> feature, the limit on the number of hard\nlinks to a file is 65,000; on <a href=\"https://man.page/5/btrfs\">btrfs(5)</a>, the limit is\n65,535 links.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ENAMETOOLONG</b></p>\n\n<p style=\"margin-left:22%;\"><i>oldpath</i> or\n<i>newpath</i> was too long.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOENT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>A directory component in <i>oldpath</i> or\n<i>newpath</i> does not exist or is a dangling symbolic\nlink.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOMEM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Insufficient kernel memory was available.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOSPC</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The device containing the file has no room for the new\ndirectory entry.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ENOTDIR</b></p>\n\n<p style=\"margin-left:22%;\">A component used as a directory\nin <i>oldpath</i> or <i>newpath</i> is not, in fact, a\ndirectory.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p><i>oldpath</i> is a directory.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>The filesystem containing <i>oldpath</i> and\n<i>newpath</i> does not support the creation of hard\nlinks.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>EPERM</b> (since Linux\n3.6)</p>\n\n<p style=\"margin-left:22%;\">The caller does not have\npermission to create a hard link to this file (see the\ndescription of <i>/proc/sys/fs/protected_hardlinks</i> in\n<a href=\"https://man.page/5/proc\">proc(5)</a>).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p><i>oldpath</i> is marked immutable or append-only. (See\n<a href=\"https://man.page/2/ioctl_iflags\">ioctl_iflags(2)</a>.)</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EROFS</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>The file is on a read-only filesystem.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EXDEV</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p><i>oldpath</i> and <i>newpath</i> are not on the same\nmounted filesystem. (Linux permits a filesystem to be\nmounted at multiple points, but <b>link</b>() does not work\nacross different mount points, even if the same filesystem\nis mounted on both.)</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nadditional errors can occur for <b>linkat</b>():</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EBADF</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\"><i>olddirfd</i> or\n<i>newdirfd</i> is not a valid file descriptor.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>An invalid flag value was specified in <i>flags</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOENT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><b>AT_EMPTY_PATH</b> was specified in <i>flags</i>, but\nthe caller did not have the <b>CAP_DAC_READ_SEARCH</b>\ncapability.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOENT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>An attempt was made to link to the\n<i>/proc/self/fd/NN</i> file corresponding to a file\ndescriptor created with</p></td></tr>\n</table>\n\n<p style=\"margin-left:28%; margin-top: 1em\">open(path,\nO_TMPFILE | O_EXCL, mode);</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">See\n<a href=\"https://man.page/2/open\">open(2)</a>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>ENOENT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">An attempt was made to link to a\n<i>/proc/self/fd/NN</i> file corresponding to a file that\nhas been deleted.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOENT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>oldpath</i> is a relative pathname and\n<i>olddirfd</i> refers to a directory that has been deleted,\nor <i>newpath</i> is a relative pathname and <i>newdirfd</i>\nrefers to a directory that has been deleted.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ENOTDIR</b></p>\n\n<p style=\"margin-left:22%;\"><i>oldpath</i> is relative and\n<i>olddirfd</i> is a file descriptor referring to a file\nother than a directory; or similar for <i>newpath</i> and\n<i>newdirfd</i></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p><b>AT_EMPTY_PATH</b> was specified in <i>flags</i>,\n<i>oldpath</i> is an empty string, and <i>olddirfd</i>\nrefers to a directory.</p></td></tr>\n</table>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>linkat</b>()\nwas added to Linux in kernel 2.6.16; library support was\nadded to glibc in version 2.4.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>link</b>():\nSVr4, 4.3BSD, POSIX.1-2001 (but see NOTES),\nPOSIX.1-2008.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>linkat</b>():\nPOSIX.1-2008.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Hard links, as\ncreated by <b>link</b>(), cannot span filesystems. Use\n<a href=\"https://man.page/2/symlink\">symlink(2)</a> if this is required.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001\nsays that <b>link</b>() should dereference <i>oldpath</i> if\nit is a symbolic link. However, since kernel 2.0, Linux does\nnot do so: if <i>oldpath</i> is a symbolic link, then\n<i>newpath</i> is created as a (hard) link to the same\nsymbolic link file (i.e., <i>newpath</i> becomes a symbolic\nlink to the same file that <i>oldpath</i> refers to). Some\nother implementations behave in the same manner as Linux.\nPOSIX.1-2008 changes the specification of <b>link</b>(),\nmaking it implementation-dependent whether or not\n<i>oldpath</i> is dereferenced if it is a symbolic link. For\nprecise control over the treatment of symbolic links when\ncreating a link, use <b>linkat</b>().</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Glibc\nnotes</b> <br>\nOn older kernels where <b>linkat</b>() is unavailable, the\nglibc wrapper function falls back to the use of\n<b>link</b>(), unless the <b>AT_SYMLINK_FOLLOW</b> is\nspecified. When <i>oldpath</i> and <i>newpath</i> are\nrelative pathnames, glibc constructs pathnames based on the\nsymbolic links in <i>/proc/self/fd</i> that correspond to\nthe <i>olddirfd</i> and <i>newdirfd</i> arguments.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On NFS\nfilesystems, the return code may be wrong in case the NFS\nserver performs the link creation and dies before it can say\nso. Use <a href=\"https://man.page/2/stat\">stat(2)</a> to find out if the link got\ncreated.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/ln\">ln(1)</a>,\n<a href=\"https://man.page/2/open\">open(2)</a>, <a href=\"https://man.page/2/rename\">rename(2)</a>, <a href=\"https://man.page/2/stat\">stat(2)</a>,\n<a href=\"https://man.page/2/symlink\">symlink(2)</a>, <a href=\"https://man.page/2/unlink\">unlink(2)</a>,\n<a href=\"https://man.page/7/path_resolution\">path_resolution(7)</a>, <a href=\"https://man.page/7/symlink\">symlink(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}