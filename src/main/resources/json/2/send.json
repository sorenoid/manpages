{"name":"send","description":"send, sendto,\nsendmsg - send a message on a socket","body":"\n\n<h1 align=\"center\">SEND</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">send, sendto,\nsendmsg - send a message on a socket</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/types.h&gt; <br>\n#include &lt;sys/socket.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ssize_t\nsend(int</b> <i>sockfd</i><b>, const void\n*</b><i>buf</i><b>, size_t</b> <i>len</i><b>, int</b>\n<i>flags</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ssize_t\nsendto(int</b> <i>sockfd</i><b>, const void\n*</b><i>buf</i><b>, size_t</b> <i>len</i><b>, int</b>\n<i>flags</i><b>, <br>\nconst struct sockaddr *</b><i>dest_addr</i><b>,\nsocklen_t</b> <i>addrlen</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ssize_t\nsendmsg(int</b> <i>sockfd</i><b>, const struct msghdr\n*</b><i>msg</i><b>, int</b> <i>flags</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The system\ncalls <b>send</b>(), <b>sendto</b>(), and <b>sendmsg</b>()\nare used to transmit a message to another socket.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>send</b>() call may be used only when the socket is in a\n<i>connected</i> state (so that the intended recipient is\nknown). The only difference between <b>send</b>() and\n<a href=\"https://man.page/2/write\">write(2)</a> is the presence of <i>flags</i>. With a zero\n<i>flags</i> argument, <b>send</b>() is equivalent to\n<a href=\"https://man.page/2/write\">write(2)</a>. Also, the following call</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">send(sockfd,\nbuf, len, flags);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">is equivalent\nto</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">sendto(sockfd,\nbuf, len, flags, NULL, 0);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The argument\n<i>sockfd</i> is the file descriptor of the sending\nsocket.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<b>sendto</b>() is used on a connection-mode\n(<b>SOCK_STREAM</b>, <b>SOCK_SEQPACKET</b>) socket, the\narguments <i>dest_addr</i> and <i>addrlen</i> are ignored\n(and the error <b>EISCONN</b> may be returned when they are\nnot NULL and 0), and the error <b>ENOTCONN</b> is returned\nwhen the socket was not actually connected. Otherwise, the\naddress of the target is given by <i>dest_addr</i> with\n<i>addrlen</i> specifying its size. For <b>sendmsg</b>(),\nthe address of the target is given by <i>msg.msg_name</i>,\nwith <i>msg.msg_namelen</i> specifying its size.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For\n<b>send</b>() and <b>sendto</b>(), the message is found in\n<i>buf</i> and has length <i>len</i>. For <b>sendmsg</b>(),\nthe message is pointed to by the elements of the array\n<i>msg.msg_iov</i>. The <b>sendmsg</b>() call also allows\nsending ancillary data (also known as control\ninformation).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the message\nis too long to pass atomically through the underlying\nprotocol, the error <b>EMSGSIZE</b> is returned, and the\nmessage is not transmitted.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">No indication\nof failure to deliver is implicit in a <b>send</b>().\nLocally detected errors are indicated by a return value of\n-1.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When the\nmessage does not fit into the send buffer of the socket,\n<b>send</b>() normally blocks, unless the socket has been\nplaced in nonblocking I/O mode. In nonblocking mode it would\nfail with the error <b>EAGAIN</b> or <b>EWOULDBLOCK</b> in\nthis case. The <a href=\"https://man.page/2/select\">select(2)</a> call may be used to\ndetermine when it is possible to send more data.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The flags\nargument</b> <br>\nThe <i>flags</i> argument is the bitwise OR of zero or more\nof the following flags. <b><br>\nMSG_CONFIRM</b> (since Linux 2.3.15)</p>\n\n<p style=\"margin-left:22%;\">Tell the link layer that\nforward progress happened: you got a successful reply from\nthe other side. If the link layer doesn&rsquo;t get this it\nwill regularly reprobe the neighbor (e.g., via a unicast\nARP). Valid only on <b>SOCK_DGRAM</b> and <b>SOCK_RAW</b>\nsockets and currently implemented only for IPv4 and IPv6.\nSee <a href=\"https://man.page/7/arp\">arp(7)</a> for details.</p>\n\n<p style=\"margin-left:11%;\"><b>MSG_DONTROUTE</b></p>\n\n<p style=\"margin-left:22%;\">Don&rsquo;t use a gateway to\nsend out the packet, send to hosts only on directly\nconnected networks. This is usually used only by diagnostic\nor routing programs. This is defined only for protocol\nfamilies that route; packet sockets don&rsquo;t.</p>\n\n<p style=\"margin-left:11%;\"><b>MSG_DONTWAIT</b> (since\nLinux 2.2)</p>\n\n<p style=\"margin-left:22%;\">Enables nonblocking operation;\nif the operation would block, <b>EAGAIN</b> or\n<b>EWOULDBLOCK</b> is returned. This provides similar\nbehavior to setting the <b>O_NONBLOCK</b> flag (via the\n<a href=\"https://man.page/2/fcntl\">fcntl(2)</a> <b>F_SETFL</b> operation), but differs in\nthat <b>MSG_DONTWAIT</b> is a per-call option, whereas\n<b>O_NONBLOCK</b> is a setting on the open file description\n(see <a href=\"https://man.page/2/open\">open(2)</a>), which will affect all threads in the\ncalling process and as well as other processes that hold\nfile descriptors referring to the same open file\ndescription.</p>\n\n<p style=\"margin-left:11%;\"><b>MSG_EOR</b> (since Linux\n2.2)</p>\n\n<p style=\"margin-left:22%;\">Terminates a record (when this\nnotion is supported, as for sockets of type\n<b>SOCK_SEQPACKET</b>).</p>\n\n<p style=\"margin-left:11%;\"><b>MSG_MORE</b> (since Linux\n2.4.4)</p>\n\n<p style=\"margin-left:22%;\">The caller has more data to\nsend. This flag is used with TCP sockets to obtain the same\neffect as the <b>TCP_CORK</b> socket option (see\n<a href=\"https://man.page/7/tcp\">tcp(7)</a>), with the difference that this flag can be\nset on a per-call basis.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Since Linux\n2.6, this flag is also supported for UDP sockets, and\ninforms the kernel to package all of the data sent in calls\nwith this flag set into a single datagram which is\ntransmitted only when a call is performed that does not\nspecify this flag. (See also the <b>UDP_CORK</b> socket\noption described in <a href=\"https://man.page/7/udp\">udp(7)</a>.)</p>\n\n<p style=\"margin-left:11%;\"><b>MSG_NOSIGNAL</b> (since\nLinux 2.2)</p>\n\n<p style=\"margin-left:22%;\">Don&rsquo;t generate a\n<b>SIGPIPE</b> signal if the peer on a stream-oriented\nsocket has closed the connection. The <b>EPIPE</b> error is\nstill returned. This provides similar behavior to using\n<a href=\"https://man.page/2/sigaction\">sigaction(2)</a> to ignore <b>SIGPIPE</b>, but, whereas\n<b>MSG_NOSIGNAL</b> is a per-call feature, ignoring\n<b>SIGPIPE</b> sets a process attribute that affects all\nthreads in the process.</p>\n\n<p style=\"margin-left:11%;\"><b>MSG_OOB</b></p>\n\n<p style=\"margin-left:22%;\">Sends <i>out-of-band</i> data\non sockets that support this notion (e.g., of type\n<b>SOCK_STREAM</b>); the underlying protocol must also\nsupport <i>out-of-band</i> data.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>sendmsg()</b>\n<br>\nThe definition of the <i>msghdr</i> structure employed by\n<b>sendmsg</b>() is as follows:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct msghdr {\n<br>\nvoid *msg_name; /* Optional address */ <br>\nsocklen_t msg_namelen; /* Size of address */ <br>\nstruct iovec *msg_iov; /* Scatter/gather array */ <br>\nsize_t msg_iovlen; /* # elements in msg_iov */ <br>\nvoid *msg_control; /* Ancillary data, see below */ <br>\nsize_t msg_controllen; /* Ancillary data buffer len */ <br>\nint msg_flags; /* Flags (unused) */ <br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>msg_name</i> field is used on an unconnected socket to\nspecify the target address for a datagram. It points to a\nbuffer containing the address; the <i>msg_namelen</i> field\nshould be set to the size of the address. For a connected\nsocket, these fields should be specified as NULL and 0,\nrespectively.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>msg_iov</i> and <i>msg_iovlen</i> fields specify\nscatter-gather locations, as for <a href=\"https://man.page/2/writev\">writev(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">You may send\ncontrol information (ancillary data) using the\n<i>msg_control</i> and <i>msg_controllen</i> members. The\nmaximum control buffer length the kernel can process is\nlimited per socket by the value in\n<i>/proc/sys/net/core/optmem_max</i>; see <a href=\"https://man.page/7/socket\">socket(7)</a>.\nFor further information on the use of ancillary data in\nvarious socket domains, see <a href=\"https://man.page/7/unix\">unix(7)</a> and\n<a href=\"https://man.page/7/ip\">ip(7)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>msg_flags</i> field is ignored.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\nthese calls return the number of bytes sent. On error, -1 is\nreturned, and <i>errno</i> is set appropriately.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These are some\nstandard errors generated by the socket layer. Additional\nerrors may be generated and returned from the underlying\nprotocol modules; see their respective manual pages.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EACCES</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>(For UNIX domain sockets, which are identified by\npathname) Write permission is denied on the destination\nsocket file, or search permission is denied for one of the\ndirectories the path prefix. (See\n<a href=\"https://man.page/7/path_resolution\">path_resolution(7)</a>.)</p> </td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">(For UDP\nsockets) An attempt was made to send to a network/broadcast\naddress as though it was a unicast address.</p>\n\n<p style=\"margin-left:11%;\"><b>EAGAIN</b> or\n<b>EWOULDBLOCK</b></p>\n\n<p style=\"margin-left:22%;\">The socket is marked\nnonblocking and the requested operation would block.\nPOSIX.1-2001 allows either error to be returned for this\ncase, and does not require these constants to have the same\nvalue, so a portable application should check for both\npossibilities.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EAGAIN</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>(Internet domain datagram sockets) The socket referred\nto by <i>sockfd</i> had not previously been bound to an\naddress and, upon attempting to bind it to an ephemeral\nport, it was determined that all port numbers in the\nephemeral port range are currently in use. See the\ndiscussion of <i>/proc/sys/net/ipv4/ip_local_port_range</i>\nin <a href=\"https://man.page/7/ip\">ip(7)</a>.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>EALREADY</b></p>\n\n<p style=\"margin-left:22%;\">Another Fast Open is in\nprogress.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EBADF</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"66%\">\n\n\n<p><i>sockfd</i> is not a valid open file descriptor.</p></td>\n<td width=\"12%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ECONNRESET</b></p>\n\n<p style=\"margin-left:22%;\">Connection reset by peer.</p>\n\n<p style=\"margin-left:11%;\"><b>EDESTADDRREQ</b></p>\n\n<p style=\"margin-left:22%;\">The socket is not\nconnection-mode, and no peer address is set.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EFAULT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>An invalid user space address was specified for an\nargument.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINTR</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>A signal occurred before any data was transmitted; see\n<a href=\"https://man.page/7/signal\">signal(7)</a>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Invalid argument passed.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>EISCONN</b></p>\n\n<p style=\"margin-left:22%;\">The connection-mode socket was\nconnected already but a recipient was specified. (Now either\nthis error is returned, or the recipient specification is\nignored.)</p>\n\n<p style=\"margin-left:11%;\"><b>EMSGSIZE</b></p>\n\n<p style=\"margin-left:22%;\">The socket type requires that\nmessage be sent atomically, and the size of the message to\nbe sent made this impossible.</p>\n\n<p style=\"margin-left:11%;\"><b>ENOBUFS</b></p>\n\n<p style=\"margin-left:22%;\">The output queue for a network\ninterface was full. This generally indicates that the\ninterface has stopped sending, but may be caused by\ntransient congestion. (Normally, this does not occur in\nLinux. Packets are just silently dropped when a device queue\noverflows.)</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOMEM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"30%\">\n\n\n<p>No memory available.</p></td>\n<td width=\"48%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ENOTCONN</b></p>\n\n<p style=\"margin-left:22%;\">The socket is not connected,\nand no target has been given.</p>\n\n<p style=\"margin-left:11%;\"><b>ENOTSOCK</b></p>\n\n<p style=\"margin-left:22%;\">The file descriptor\n<i>sockfd</i> does not refer to a socket.</p>\n\n<p style=\"margin-left:11%;\"><b>EOPNOTSUPP</b></p>\n\n<p style=\"margin-left:22%;\">Some bit in the <i>flags</i>\nargument is inappropriate for the socket type.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EPIPE</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>The local end has been shut down on a connection\noriented socket. In this case, the process will also receive\na <b>SIGPIPE</b> unless <b>MSG_NOSIGNAL</b> is set.</p></td></tr>\n</table>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">4.4BSD, SVr4,\nPOSIX.1-2001. These interfaces first appeared in 4.2BSD.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001\ndescribes only the <b>MSG_OOB</b> and <b>MSG_EOR</b> flags.\nPOSIX.1-2008 adds a specification of <b>MSG_NOSIGNAL</b>.\nThe <b>MSG_CONFIRM</b> flag is a Linux extension.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">According to\nPOSIX.1-2001, the <i>msg_controllen</i> field of the\n<i>msghdr</i> structure should be typed as <i>socklen_t</i>,\nand the <i>msg_iovlen</i> field should be typed as\n<i>int</i>, but glibc currently types both as\n<i>size_t</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See\n<a href=\"https://man.page/2/sendmmsg\">sendmmsg(2)</a> for information about a Linux-specific\nsystem call that can be used to transmit multiple datagrams\nin a single call.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Linux may\nreturn <b>EPIPE</b> instead of <b>ENOTCONN</b>.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">An example of\nthe use of <b>sendto</b>() is shown in\n<a href=\"https://man.page/3/getaddrinfo\">getaddrinfo(3)</a>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/fcntl\">fcntl(2)</a>,\n<a href=\"https://man.page/2/getsockopt\">getsockopt(2)</a>, <a href=\"https://man.page/2/recv\">recv(2)</a>, <a href=\"https://man.page/2/select\">select(2)</a>,\n<a href=\"https://man.page/2/sendfile\">sendfile(2)</a>, <a href=\"https://man.page/2/sendmmsg\">sendmmsg(2)</a>, <a href=\"https://man.page/2/shutdown\">shutdown(2)</a>,\n<a href=\"https://man.page/2/socket\">socket(2)</a>, <a href=\"https://man.page/2/write\">write(2)</a>, <a href=\"https://man.page/3/cmsg\">cmsg(3)</a>,\n<a href=\"https://man.page/7/ip\">ip(7)</a>, <a href=\"https://man.page/7/ipv6\">ipv6(7)</a>, <a href=\"https://man.page/7/socket\">socket(7)</a>,\n<a href=\"https://man.page/7/tcp\">tcp(7)</a>, <a href=\"https://man.page/7/udp\">udp(7)</a>, <a href=\"https://man.page/7/unix\">unix(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}