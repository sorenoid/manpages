{"name":"syslog","description":"syslog, klogctl\n- read and/or clear kernel message ring buffer; set\nconsole_loglevel","body":"\n\n<h1 align=\"center\">SYSLOG</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">syslog, klogctl\n- read and/or clear kernel message ring buffer; set\nconsole_loglevel</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nsyslog(int</b> <i>type</i><b>, char *</b><i>bufp</i><b>,\nint</b> <i>len</i><b>); <br>\n/* No wrapper provided in glibc */</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* The glibc\ninterface */ <b><br>\n#include &lt;sys/klog.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nklogctl(int</b> <i>type</i><b>, char *</b><i>bufp</i><b>,\nint</b> <i>len</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><i>Note</i></b>:\nProbably, you are looking for the C library function\n<b>syslog</b>(), which talks to <b>syslogd</b>(8); see\n<a href=\"https://man.page/3/syslog\">syslog(3)</a> for details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page\ndescribes the kernel <b>syslog</b>() system call, which is\nused to control the kernel <i>printk</i>() buffer; the glibc\nwrapper function for the system call is called\n<b>klogctl</b>().</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The kernel\nlog buffer</b> <br>\nThe kernel has a cyclic buffer of length <b>LOG_BUF_LEN</b>\nin which messages given as arguments to the kernel function\n<b>printk</b>() are stored (regardless of their log level).\nIn early kernels, <b>LOG_BUF_LEN</b> had the value 4096;\nfrom kernel 1.3.54, it was 8192; from kernel 2.1.113, it was\n16384; since kernel 2.4.23/2.6, the value is a kernel\nconfiguration option (<b>CONFIG_LOG_BUF_SHIFT</b>, default\nvalue dependent on the architecture). Since Linux 2.6.6, the\nsize can be queried with command type 10 (see below).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Commands</b>\n<br>\nThe <i>type</i> argument determines the action taken by this\nfunction. The list below specifies the values for\n<i>type</i>. The symbolic names are defined in the kernel\nsource, but are not exported to user space; you will either\nneed to use the numbers, or define the names yourself.\n<b><br>\nSYSLOG_ACTION_CLOSE</b> (0)</p>\n\n<p style=\"margin-left:22%;\">Close the log. Currently a\nNOP.</p>\n\n<p style=\"margin-left:11%;\"><b>SYSLOG_ACTION_OPEN</b>\n(1)</p>\n\n<p style=\"margin-left:22%;\">Open the log. Currently a\nNOP.</p>\n\n<p style=\"margin-left:11%;\"><b>SYSLOG_ACTION_READ</b>\n(2)</p>\n\n<p style=\"margin-left:22%;\">Read from the log. The call\nwaits until the kernel log buffer is nonempty, and then\nreads at most <i>len</i> bytes into the buffer pointed to by\n<i>bufp</i>. The call returns the number of bytes read.\nBytes read from the log disappear from the log buffer: the\ninformation can be read only once. This is the function\nexecuted by the kernel when a user program reads\n<i>/proc/kmsg</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>SYSLOG_ACTION_READ_ALL</b>\n(3)</p>\n\n<p style=\"margin-left:22%;\">Read all messages remaining in\nthe ring buffer, placing them in the buffer pointed to by\n<i>bufp</i>. The call reads the last <i>len</i> bytes from\nthe log buffer (nondestructively), but will not read more\nthan was written into the buffer since the last &quot;clear\nring buffer&quot; command (see command 5 below)). The call\nreturns the number of bytes read.</p>\n\n\n<p style=\"margin-left:11%;\"><b>SYSLOG_ACTION_READ_CLEAR</b>\n(4)</p>\n\n<p style=\"margin-left:22%;\">Read and clear all messages\nremaining in the ring buffer. The call does precisely the\nsame as for a <i>type</i> of 3, but also executes the\n&quot;clear ring buffer&quot; command.</p>\n\n<p style=\"margin-left:11%;\"><b>SYSLOG_ACTION_CLEAR</b>\n(5)</p>\n\n<p style=\"margin-left:22%;\">The call executes just the\n&quot;clear ring buffer&quot; command. The <i>bufp</i> and\n<i>len</i> arguments are ignored.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">This command\ndoes not really clear the ring buffer. Rather, it sets a\nkernel bookkeeping variable that determines the results\nreturned by commands 3 (<b>SYSLOG_ACTION_READ_ALL</b>) and 4\n(<b>SYSLOG_ACTION_READ_CLEAR</b>). This command has no\neffect on commands 2 (<b>SYSLOG_ACTION_READ</b>) and 9\n(<b>SYSLOG_ACTION_SIZE_UNREAD</b>).</p>\n\n\n<p style=\"margin-left:11%;\"><b>SYSLOG_ACTION_CONSOLE_OFF</b>\n(6)</p>\n\n<p style=\"margin-left:22%;\">The command saves the current\nvalue of <i>console_loglevel</i> and then sets\n<i>console_loglevel</i> to <i>minimum_console_loglevel</i>,\nso that no messages are printed to the console. Before Linux\n2.6.32, the command simply sets <i>console_loglevel</i> to\n<i>minimum_console_loglevel</i>. See the discussion of\n<i>/proc/sys/kernel/printk</i>, below.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The <i>bufp</i>\nand <i>len</i> arguments are ignored.</p>\n\n\n<p style=\"margin-left:11%;\"><b>SYSLOG_ACTION_CONSOLE_ON</b>\n(7)</p>\n\n<p style=\"margin-left:22%;\">If a previous\n<b>SYSLOG_ACTION_CONSOLE_OFF</b> command has been performed,\nthis command restores <i>console_loglevel</i> to the value\nthat was saved by that command. Before Linux 2.6.32, this\ncommand simply sets <i>console_loglevel</i> to\n<i>default_console_loglevel</i>. See the discussion of\n<i>/proc/sys/kernel/printk</i>, below.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The <i>bufp</i>\nand <i>len</i> arguments are ignored.</p>\n\n\n<p style=\"margin-left:11%;\"><b>SYSLOG_ACTION_CONSOLE_LEVEL</b>\n(8)</p>\n\n<p style=\"margin-left:22%;\">The call sets\n<i>console_loglevel</i> to the value given in <i>len</i>,\nwhich must be an integer between 1 and 8 (inclusive). The\nkernel silently enforces a minimum value of\n<i>minimum_console_loglevel</i> for <i>len</i>. See the\n<i>log level</i> section for details. The <i>bufp</i>\nargument is ignored.</p>\n\n\n<p style=\"margin-left:11%;\"><b>SYSLOG_ACTION_SIZE_UNREAD</b>\n(9) (since Linux 2.4.10)</p>\n\n<p style=\"margin-left:22%;\">The call returns the number of\nbytes currently available to be read from the kernel log\nbuffer via command 2 (<b>SYSLOG_ACTION_READ</b>). The\n<i>bufp</i> and <i>len</i> arguments are ignored.</p>\n\n\n<p style=\"margin-left:11%;\"><b>SYSLOG_ACTION_SIZE_BUFFER</b>\n(10) (since Linux 2.6.6)</p>\n\n<p style=\"margin-left:22%;\">This command returns the total\nsize of the kernel log buffer. The <i>bufp</i> and\n<i>len</i> arguments are ignored.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All commands\nexcept 3 and 10 require privilege. In Linux kernels before\n2.6.37, command types 3 and 10 are allowed to unprivileged\nprocesses; since Linux 2.6.37, these commands are allowed to\nunprivileged processes only if\n<i>/proc/sys/kernel/dmesg_restrict</i> has the value 0.\nBefore Linux 2.6.37, &quot;privileged&quot; means that the\ncaller has the <b>CAP_SYS_ADMIN</b> capability. Since Linux\n2.6.37, &quot;privileged&quot; means that the caller has\neither the <b>CAP_SYS_ADMIN</b> capability (now deprecated\nfor this purpose) or the (new) <b>CAP_SYSLOG</b>\ncapability.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>/proc/sys/kernel/printk</b>\n<i><br>\n/proc/sys/kernel/printk</i> is a writable file containing\nfour integer values that influence kernel <i>printk()</i>\nbehavior when printing or logging error messages. The four\nvalues are: <i><br>\nconsole_loglevel</i></p>\n\n<p style=\"margin-left:22%;\">Only messages with a log level\nlower than this value will be printed to the console. The\ndefault value for this field is\n<b>DEFAULT_CONSOLE_LOGLEVEL</b> (7), but it is set to 4 if\nthe kernel command line contains the word &quot;quiet&quot;,\n10 if the kernel command line contains the word\n&quot;debug&quot;, and to 15 in case of a kernel fault (the\n10 and 15 are just silly, and equivalent to 8). The value of\n<i>console_loglevel</i> can be set (to a value in the range\n1&ndash;8) by a <b>syslog</b>() call with a <i>type</i> of\n8.</p>\n\n\n<p style=\"margin-left:11%;\"><i>default_message_loglevel</i></p>\n\n<p style=\"margin-left:22%;\">This value will be used as the\nlog level for <i>printk()</i> messages that do not have an\nexplicit level. Up to and including Linux 2.6.38, the\nhard-coded default value for this field was 4\n(<b>KERN_WARNING</b>); since Linux 2.6.39, the default value\nis a defined by the kernel configuration option\n<b>CONFIG_DEFAULT_MESSAGE_LOGLEVEL</b>, which defaults to\n4.</p>\n\n\n<p style=\"margin-left:11%;\"><i>minimum_console_loglevel</i></p>\n\n<p style=\"margin-left:22%;\">The value in this field is the\nminimum value to which <i>console_loglevel</i> can be\nset.</p>\n\n\n<p style=\"margin-left:11%;\"><i>default_console_loglevel</i></p>\n\n<p style=\"margin-left:22%;\">This is the default value for\n<i>console_loglevel</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The log\nlevel</b> <br>\nEvery <i>printk</i>() message has its own log level. If the\nlog level is not explicitly specified as part of the\nmessage, it defaults to <i>default_message_loglevel</i>. The\nconventional meaning of the log level is as follows:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"8%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"16%\"></td>\n<td width=\"8%\"></td>\n<td width=\"38%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"8%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"16%\"></td>\n<td width=\"8%\"></td>\n<td width=\"38%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"8%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"16%\"></td>\n<td width=\"8%\"></td>\n<td width=\"38%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"8%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"16%\"></td>\n<td width=\"8%\"></td>\n<td width=\"38%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"8%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"16%\"></td>\n<td width=\"8%\"></td>\n<td width=\"38%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"8%\"></td>\n<td width=\"8%\">\n</td>\n<td width=\"7%\">\n</td>\n<td width=\"16%\"></td>\n<td width=\"8%\"></td>\n<td width=\"38%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"8%\"></td>\n<td width=\"8%\">\n</td>\n<td width=\"7%\">\n</td>\n<td width=\"16%\"></td>\n<td width=\"8%\"></td>\n<td width=\"38%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"8%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"16%\"></td>\n<td width=\"8%\"></td>\n<td width=\"38%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"8%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"16%\"></td>\n<td width=\"8%\"></td>\n<td width=\"38%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"8%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"16%\"></td>\n<td width=\"8%\"></td>\n<td width=\"38%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"8%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"16%\"></td>\n<td width=\"8%\"></td>\n<td width=\"38%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"8%\"></td>\n<td width=\"8%\">\n</td>\n<td width=\"7%\">\n</td>\n<td width=\"16%\"></td>\n<td width=\"8%\"></td>\n<td width=\"38%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"8%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"16%\"></td>\n<td width=\"8%\"></td>\n<td width=\"38%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"8%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\">\n</td>\n<td width=\"16%\"></td>\n<td width=\"8%\"></td>\n<td width=\"38%\">\n</td></tr>\n</table>\n\n\n<p align=\"center\"><img src=\"grohtml-3256211.png\" alt=\"Image grohtml-3256211.png\"></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The kernel\n<i>printk()</i> routine will print a message on the console\nonly if it has a log level less than the value of\n<i>console_loglevel</i>.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For <i>type</i>\nequal to 2, 3, or 4, a successful call to <b>syslog</b>()\nreturns the number of bytes read. For <i>type</i> 9,\n<b>syslog</b>() returns the number of bytes currently\navailable to be read on the kernel log buffer. For\n<i>type</i> 10, <b>syslog</b>() returns the total size of\nthe kernel log buffer. For other values of <i>type</i>, 0 is\nreturned on success.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In case of\nerror, -1 is returned, and <i>errno</i> is set to indicate\nthe error.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">Bad arguments (e.g., bad\n<i>type</i>; or for <i>type</i> 2, 3, or 4, <i>buf</i> is\nNULL, or <i>len</i> is less than zero; or for <i>type</i> 8,\nthe <i>level</i> is outside the range 1 to 8).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOSYS</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>This <b>syslog</b>() system call is not available,\nbecause the kernel was compiled with the\n<b>CONFIG_PRINTK</b> kernel-configuration option\ndisabled.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>An attempt was made to change <i>console_loglevel</i> or\nclear the kernel message ring buffer by a process without\nsufficient privilege (more precisely: without the\n<b>CAP_SYS_ADMIN</b> or <b>CAP_SYSLOG</b> capability).</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ERESTARTSYS</b></p>\n\n<p style=\"margin-left:22%;\">System call was interrupted by\na signal; nothing was read. (This can be seen only during a\ntrace.)</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This system\ncall is Linux-specific and should not be used in programs\nintended to be portable.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">From the very\nstart, people noted that it is unfortunate that a system\ncall and a library routine of the same name are entirely\ndifferent animals.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/dmesg\">dmesg(1)</a>,\n<a href=\"https://man.page/3/syslog\">syslog(3)</a>, <a href=\"https://man.page/7/capabilities\">capabilities(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}