{"name":"ioctl_fideduperange","body":"\n\n<h1 align=\"center\">IOCTL_FIDEDUPERANGE</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">ioctl_fideduperange\n- share some the data of one file with another file</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/ioctl.h&gt; <br>\n#include &lt;linux/fs.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nioctl(int</b> <i>src_fd</i><b>, FIDEDUPERANGE, struct\nfile_dedupe_range *</b><i>arg</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">If a filesystem\nsupports files sharing physical storage between multiple\nfiles, this <a href=\"https://man.page/2/ioctl\">ioctl(2)</a> operation can be used to make\nsome of the data in the <b>src_fd</b> file appear in the\n<b>dest_fd</b> file by sharing the underlying storage if the\nfile data is identical (&quot;deduplication&quot;). Both\nfiles must reside within the same filesystem. This reduces\nstorage consumption by allowing the filesystem to store one\nshared copy of the data. If a file write should occur to a\nshared region, the filesystem must ensure that the changes\nremain private to the file being written. This behavior is\ncommonly referred to as &quot;copy on write&quot;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This ioctl\nperforms the &quot;compare and share if identical&quot;\noperation on up to <i>src_length</i> bytes from file\ndescriptor <i>src_fd</i> at offset <i>src_offset</i>. This\ninformation is conveyed in a structure of the following\nform:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct\nfile_dedupe_range { <br>\n__u64 src_offset; <br>\n__u64 src_length; <br>\n__u16 dest_count; <br>\n__u16 reserved1; <br>\n__u32 reserved2; <br>\nstruct file_dedupe_range_info info[0]; <br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Deduplication\nis atomic with regards to concurrent writes, so no locks\nneed to be taken to obtain a consistent deduplicated\ncopy.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The fields\n<i>reserved1</i> and <i>reserved2</i> must be zero.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Destinations\nfor the deduplication operation are conveyed in the array at\nthe end of the structure. The number of destinations is\ngiven in <i>dest_count</i>, and the destination information\nis conveyed in the following form:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct\nfile_dedupe_range_info { <br>\n__s64 dest_fd; <br>\n__u64 dest_offset; <br>\n__u64 bytes_deduped; <br>\n__s32 status; <br>\n__u32 reserved; <br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Each\ndeduplication operation targets <i>src_length</i> bytes in\nfile descriptor <i>dest_fd</i> at offset <i>dest_offset</i>.\nThe field <i>reserved</i> must be zero. During the call,\n<i>src_fd</i> must be open for reading and <i>dest_fd</i>\nmust be open for writing. The combined size of the struct\n<i>file_dedupe_range</i> and the struct\n<i>file_dedupe_range_info</i> array must not exceed the\nsystem page size. The maximum size of <i>src_length</i> is\nfilesystem dependent and is typically 16&nbsp;MiB. This\nlimit will be enforced silently by the filesystem. By\nconvention, the storage used by <i>src_fd</i> is mapped into\n<i>dest_fd</i> and the previous contents in <i>dest_fd</i>\nare freed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Upon successful\ncompletion of this ioctl, the number of bytes successfully\ndeduplicated is returned in <i>bytes_deduped</i> and a\nstatus code for the deduplication operation is returned in\n<i>status</i>. If even a single byte in the range does not\nmatch, the deduplication request will be ignored and\n<i>status</i> set to <b>FILE_DEDUPE_RANGE_DIFFERS</b>. The\n<i>status</i> code is set to <b>FILE_DEDUPE_RANGE_SAME</b>\nfor success, a negative error code in case of error, or\n<b>FILE_DEDUPE_RANGE_DIFFERS</b> if the data did not\nmatch.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On error, -1 is\nreturned, and <i>errno</i> is set to indicate the error.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Error codes can\nbe one of, but are not limited to, the following:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EBADF</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>src_fd</i> is not open for reading; <i>dest_fd</i> is\nnot open for writing or is open for append-only writes; or\nthe filesystem which <i>src_fd</i> resides on does not\nsupport deduplication.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The filesystem does not support deduplicating the ranges\nof the given files. This error can also appear if either\nfile descriptor represents a device, FIFO, or socket. Disk\nfilesystems generally require the offset and length\narguments to be aligned to the fundamental block size.\nNeither Btrfs nor XFS support overlapping deduplication\nranges in the same file.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EISDIR</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>One of the files is a directory and the filesystem does\nnot support shared regions in directories.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOMEM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The kernel was unable to allocate sufficient memory to\nperform the operation or <i>dest_count</i> is so large that\nthe input argument description spans more than a single page\nof memory.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>EOPNOTSUPP</b></p>\n\n<p style=\"margin-left:22%;\">This can appear if the\nfilesystem does not support deduplicating either file\ndescriptor, or if either file descriptor refers to special\ninodes.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"32%\">\n\n\n<p><i>dest_fd</i> is immutable.</p></td>\n<td width=\"46%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ETXTBSY</b></p>\n\n<p style=\"margin-left:22%;\">One of the files is a swap\nfile. Swap files cannot share storage.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EXDEV</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p><i>dest_fd</i> and <i>src_fd</i> are not on the same\nmounted filesystem.</p></td></tr>\n</table>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This ioctl\noperation first appeared in Linux 4.5. It was previously\nknown as <b>BTRFS_IOC_FILE_EXTENT_SAME</b> and was private\nto Btrfs.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This API is\nLinux-specific.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Because a\ncopy-on-write operation requires the allocation of new\nstorage, the <a href=\"https://man.page/2/fallocate\">fallocate(2)</a> operation may unshare\nshared blocks to guarantee that subsequent writes will not\nfail because of lack of disk space.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Some\nfilesystems may limit the amount of data that can be\ndeduplicated in a single call.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/ioctl\">ioctl(2)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}