{"name":"timer_getoverrun","description":"timer_getoverrun - get overrun count for a POSIX per-process timer","body":"\n\n<h1 align=\"center\">TIMER_GETOVERRUN</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">timer_getoverrun\n- get overrun count for a POSIX per-process timer</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;time.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\ntimer_getoverrun(timer_t</b> <i>timerid</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Link with\n<i>-lrt</i>.</p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>timer_getoverrun</b>():\n_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;199309L</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>timer_getoverrun</b>()\nreturns the &quot;overrun count&quot; for the timer referred\nto by <i>timerid</i>. An application can use the overrun\ncount to accurately calculate the number of timer\nexpirations that would have occurred over a given time\ninterval. Timer overruns can occur both when receiving\nexpiration notifications via signals (<b>SIGEV_SIGNAL</b>),\nand via threads (<b>SIGEV_THREAD</b>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When expiration\nnotifications are delivered via a signal, overruns can occur\nas follows. Regardless of whether or not a real-time signal\nis used for timer notifications, the system queues at most\none signal per timer. (This is the behavior specified by\nPOSIX.1. The alternative, queuing one signal for each timer\nexpiration, could easily result in overflowing the allowed\nlimits for queued signals on the system.) Because of system\nscheduling delays, or because the signal may be temporarily\nblocked, there can be a delay between the time when the\nnotification signal is generated and the time when it is\ndelivered (e.g., caught by a signal handler) or accepted\n(e.g., using <a href=\"https://man.page/2/sigwaitinfo\">sigwaitinfo(2)</a>). In this interval,\nfurther timer expirations may occur. The timer overrun count\nis the number of additional timer expirations that occurred\nbetween the time when the signal was generated and when it\nwas delivered or accepted.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Timer overruns\ncan also occur when expiration notifications are delivered\nvia invocation of a thread, since there may be an arbitrary\ndelay between an expiration of the timer and the invocation\nof the notification thread, and in that delay interval,\nadditional timer expirations may occur.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\n<b>timer_getoverrun</b>() returns the overrun count of the\nspecified timer; this count may be 0 if no overruns have\noccurred. On failure, -1 is returned, and <i>errno</i> is\nset to indicate the error.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"49%\">\n\n\n<p style=\"margin-top: 1em\"><i>timerid</i> is not a valid\ntimer ID.</p></td>\n<td width=\"29%\">\n</td></tr>\n</table>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This system\ncall is available since Linux 2.6.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">When timer\nnotifications are delivered via signals\n(<b>SIGEV_SIGNAL</b>), on Linux it is also possible to\nobtain the overrun count via the <i>si_overrun</i> field of\nthe <i>siginfo_t</i> structure (see <a href=\"https://man.page/2/sigaction\">sigaction(2)</a>).\nThis allows an application to avoid the overhead of making a\nsystem call to obtain the overrun count, but is a\nnonportable extension to POSIX.1.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1\ndiscusses timer overruns only in the context of timer\nnotifications using signals.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1\nspecifies that if the timer overrun count is equal to or\ngreater than an implementation-defined maximum,\n<b>DELAYTIMER_MAX</b>, then <b>timer_getoverrun</b>() should\nreturn <b>DELAYTIMER_MAX</b>. However, before Linux 4.19, if\nthe timer overrun value exceeds the maximum representable\ninteger, the counter cycles, starting once more from low\nvalues. Since Linux 4.19, <b>timer_getoverrun</b>() returns\n<b>DELAYTIMER_MAX</b> (defined as <b>INT_MAX</b> in\n<i>&lt;limits.h&gt;</i>) in this case (and the overrun value\nis reset to 0).</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">See\n<a href=\"https://man.page/2/timer_create\">timer_create(2)</a>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/clock_gettime\">clock_gettime(2)</a>,\n<a href=\"https://man.page/2/sigaction\">sigaction(2)</a>, <a href=\"https://man.page/2/signalfd\">signalfd(2)</a>,\n<a href=\"https://man.page/2/sigwaitinfo\">sigwaitinfo(2)</a>, <a href=\"https://man.page/2/timer_create\">timer_create(2)</a>,\n<a href=\"https://man.page/2/timer_delete\">timer_delete(2)</a>, <a href=\"https://man.page/2/timer_settime\">timer_settime(2)</a>,\n<a href=\"https://man.page/7/signal\">signal(7)</a>, <a href=\"https://man.page/7/time\">time(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}