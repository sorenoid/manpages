{"name":"get_robust_list","body":"\n\n<h1 align=\"center\">GET_ROBUST_LIST</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">get_robust_list,\nset_robust_list - get/set list of robust futexes</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;linux/futex.h&gt; <br>\n#include &lt;sys/types.h&gt; <br>\n#include &lt;syscall.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>long\nget_robust_list(int</b> <i>pid</i><b>, struct\nrobust_list_head **</b><i>head_ptr</i><b>, <br>\nsize_t *</b><i>len_ptr</i><b>); <br>\nlong set_robust_list(struct robust_list_head\n*</b><i>head</i><b>, size_t</b> <i>len</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Note</i>:\nThere are no glibc wrappers for these system calls; see\nNOTES.</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These system\ncalls deal with per-thread robust futex lists. These lists\nare managed in user space: the kernel knows only about the\nlocation of the head of the list. A thread can inform the\nkernel of the location of its robust futex list using\n<b>set_robust_list</b>(). The address of a thread&rsquo;s\nrobust futex list can be obtained using\n<b>get_robust_list</b>().</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The purpose of\nthe robust futex list is to ensure that if a thread\naccidentally fails to unlock a futex before terminating or\ncalling <a href=\"https://man.page/2/execve\">execve(2)</a>, another thread that is waiting on\nthat futex is notified that the former owner of the futex\nhas died. This notification consists of two pieces: the\n<b>FUTEX_OWNER_DIED</b> bit is set in the futex word, and\nthe kernel performs a <a href=\"https://man.page/2/futex\">futex(2)</a> <b>FUTEX_WAKE</b>\noperation on one of the threads waiting on the futex.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>get_robust_list</b>() system call returns the head of the\nrobust futex list of the thread whose thread ID is specified\nin <i>pid</i>. If <i>pid</i> is 0, the head of the list for\nthe calling thread is returned. The list head is stored in\nthe location pointed to by <i>head_ptr</i>. The size of the\nobject pointed to by <i>**head_ptr</i> is stored in\n<i>len_ptr</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Permission to\nemploy <b>get_robust_list</b>() is governed by a ptrace\naccess mode <b>PTRACE_MODE_READ_REALCREDS</b> check; see\n<a href=\"https://man.page/2/ptrace\">ptrace(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>set_robust_list</b>() system call requests the kernel to\nrecord the head of the list of robust futexes owned by the\ncalling thread. The <i>head</i> argument is the list head to\nrecord. The <i>len</i> argument should be\n<i>sizeof(*head)</i>.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>set_robust_list</b>() and <b>get_robust_list</b>() system\ncalls return zero when the operation is successful, an error\ncode otherwise.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>set_robust_list</b>() system call can fail with the\nfollowing error:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>len</i> does not equal\n<i>sizeof(struct&nbsp;robust_list_head)</i>.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>get_robust_list</b>() system call can fail with the\nfollowing errors:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EFAULT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">The head of the robust futex\nlist can&rsquo;t be stored at the location <i>head</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The calling process does not have permission to see the\nrobust futex list of the thread with the thread ID\n<i>pid</i>, and does not have the <b>CAP_SYS_PTRACE</b>\ncapability.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ESRCH</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>No thread with the thread ID <i>pid</i> could be\nfound.</p> </td></tr>\n</table>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These system\ncalls were added in Linux 2.6.17.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These system\ncalls are not needed by normal applications. No support for\nthem is provided in glibc. In the unlikely event that you\nwant to call them directly, use <a href=\"https://man.page/2/syscall\">syscall(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A thread can\nhave only one robust futex list; therefore applications that\nwish to use this functionality should use the robust mutexes\nprovided by glibc.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the initial\nimplementation, a thread waiting on a futex was notified\nthat the owner had died only if the owner terminated.\nStarting with Linux 2.6.28, notification was extended to\ninclude the case where the owner performs an\n<a href=\"https://man.page/2/execve\">execve(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The thread IDs\nmentioned in the main text are <i>kernel</i> thread IDs of\nthe kind returned by <a href=\"https://man.page/2/clone\">clone(2)</a> and\n<a href=\"https://man.page/2/gettid\">gettid(2)</a>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/futex\">futex(2)</a>,\n<a href=\"https://man.page/3/pthread_mutexattr_setrobust\">pthread_mutexattr_setrobust(3)</a></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Documentation/robust-futexes.txt</i>\nand <i>Documentation/robust-futex-ABI.txt</i> in the Linux\nkernel source tree</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}