{"name":"gettimeofday","description":"gettimeofday,\nsettimeofday - get / set time","body":"\n\n<h1 align=\"center\">GETTIMEOFDAY</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gettimeofday,\nsettimeofday - get / set time</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/time.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\ngettimeofday(struct timeval *</b><i>tv</i><b>, struct\ntimezone *</b><i>tz</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nsettimeofday(const struct timeval *</b><i>tv</i><b>, const\nstruct timezone *</b><i>tz</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>settimeofday</b>():\n<br>\nSince glibc 2.19: <br>\n_DEFAULT_SOURCE <br>\nGlibc 2.19 and earlier: <br>\n_BSD_SOURCE</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The functions\n<b>gettimeofday</b>() and <b>settimeofday</b>() can get and\nset the time as well as a timezone.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <i>tv</i>\nargument is a <i>struct timeval</i> (as specified in\n<i>&lt;sys/time.h&gt;</i>):</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct timeval\n{ <br>\ntime_t tv_sec; /* seconds */ <br>\nsuseconds_t tv_usec; /* microseconds */ <br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">and gives the\nnumber of seconds and microseconds since the Epoch (see\n<a href=\"https://man.page/2/time\">time(2)</a>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <i>tz</i>\nargument is a <i>struct timezone</i>:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct timezone\n{ <br>\nint tz_minuteswest; /* minutes west of Greenwich */ <br>\nint tz_dsttime; /* type of DST correction */ <br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If either\n<i>tv</i> or <i>tz</i> is NULL, the corresponding structure\nis not set or returned. (However, compilation warnings will\nresult if <i>tv</i> is NULL.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The use of the\n<i>timezone</i> structure is obsolete; the <i>tz</i>\nargument should normally be specified as NULL. (See NOTES\nbelow.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Under Linux,\nthere are some peculiar &quot;warp clock&quot; semantics\nassociated with the <b>settimeofday</b>() system call if on\nthe very first call (after booting) that has a non-NULL\n<i>tz</i> argument, the <i>tv</i> argument is NULL and the\n<i>tz_minuteswest</i> field is nonzero. (The\n<i>tz_dsttime</i> field should be zero for this case.) In\nsuch a case it is assumed that the CMOS clock is on local\ntime, and that it has to be incremented by this amount to\nget UTC system time. No doubt it is a bad idea to use this\nfeature.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>gettimeofday</b>()\nand <b>settimeofday</b>() return 0 for success, or -1 for\nfailure (in which case <i>errno</i> is set\nappropriately).</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EFAULT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">One of <i>tv</i> or <i>tz</i>\npointed outside the accessible address space.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>(<b>settimeofday</b>()): <i>timezone</i> is invalid.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>(<b>settimeofday</b>()): <i>tv.tv_sec</i> is negative or\n<i>tv.tv_usec</i> is outside the range [0..999,999].</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>EINVAL</b> (since Linux\n4.3)</p>\n\n<p style=\"margin-left:22%;\">(<b>settimeofday</b>()): An\nattempt was made to set the time to a value less than the\ncurrent value of the <b>CLOCK_MONOTONIC</b> clock (see\n<a href=\"https://man.page/2/clock_gettime\">clock_gettime(2)</a>).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>The calling process has insufficient privilege to call\n<b>settimeofday</b>(); under Linux the <b>CAP_SYS_TIME</b>\ncapability is required.</p></td></tr>\n</table>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">SVr4, 4.3BSD.\nPOSIX.1-2001 describes <b>gettimeofday</b>() but not\n<b>settimeofday</b>(). POSIX.1-2008 marks\n<b>gettimeofday</b>() as obsolete, recommending the use of\n<a href=\"https://man.page/2/clock_gettime\">clock_gettime(2)</a> instead.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The time\nreturned by <b>gettimeofday</b>() <i>is</i> affected by\ndiscontinuous jumps in the system time (e.g., if the system\nadministrator manually changes the system time). If you need\na monotonically increasing clock, see\n<a href=\"https://man.page/2/clock_gettime\">clock_gettime(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Macros for\noperating on <i>timeval</i> structures are described in\n<a href=\"https://man.page/3/timeradd\">timeradd(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Traditionally,\nthe fields of <i>struct timeval</i> were of type\n<i>long</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>C\nlibrary/kernel differences</b> <br>\nOn some architectures, an implementation of\n<b>gettimeofday</b>() is provided in the <a href=\"https://man.page/7/vdso\">vdso(7)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The\ntz_dsttime field</b> <br>\nOn a non-Linux kernel, with glibc, the <i>tz_dsttime</i>\nfield of <i>struct timezone</i> will be set to a nonzero\nvalue by <b>gettimeofday</b>() if the current timezone has\never had or will have a daylight saving rule applied. In\nthis sense it exactly mirrors the meaning of\n<a href=\"https://man.page/3/daylight\">daylight(3)</a> for the current zone. On Linux, with\nglibc, the setting of the <i>tz_dsttime</i> field of\n<i>struct timezone</i> has never been used by\n<b>settimeofday</b>() or <b>gettimeofday</b>(). Thus, the\nfollowing is purely of historical interest.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On old systems,\nthe field <i>tz_dsttime</i> contains a symbolic constant\n(values are given below) that indicates in which part of the\nyear Daylight Saving Time is in force. (Note: this value is\nconstant throughout the year: it does not indicate that DST\nis in force, it just selects an algorithm.) The daylight\nsaving time algorithms defined are as follows:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>DST_NONE</b>\n/* not on DST */ <b><br>\nDST_USA</b> /* USA style DST */ <b><br>\nDST_AUST</b> /* Australian style DST */ <b><br>\nDST_WET</b> /* Western European DST */ <b><br>\nDST_MET</b> /* Middle European DST */ <b><br>\nDST_EET</b> /* Eastern European DST */ <b><br>\nDST_CAN</b> /* Canada */ <b><br>\nDST_GB</b> /* Great Britain and Eire */ <b><br>\nDST_RUM</b> /* Romania */ <b><br>\nDST_TUR</b> /* Turkey */ <b><br>\nDST_AUSTALT</b> /* Australian style with shift in 1986\n*/</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Of course it\nturned out that the period in which Daylight Saving Time is\nin force cannot be given by a simple algorithm, one per\ncountry; indeed, this period is determined by unpredictable\npolitical decisions. So this method of representing\ntimezones has been abandoned.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/date\">date(1)</a>,\n<a href=\"https://man.page/2/adjtimex\">adjtimex(2)</a>, <a href=\"https://man.page/2/clock_gettime\">clock_gettime(2)</a>, <a href=\"https://man.page/2/time\">time(2)</a>,\n<a href=\"https://man.page/3/ctime\">ctime(3)</a>, <a href=\"https://man.page/3/ftime\">ftime(3)</a>, <a href=\"https://man.page/3/timeradd\">timeradd(3)</a>,\n<a href=\"https://man.page/7/capabilities\">capabilities(7)</a>, <a href=\"https://man.page/7/time\">time(7)</a>, <a href=\"https://man.page/7/vdso\">vdso(7)</a>,\n<b>hwclock</b>(8)</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}