{"name":"io_setup","description":"io_setup - create an asynchronous I/O context","body":"\n\n<h1 align=\"center\">IO_SETUP</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">io_setup -\ncreate an asynchronous I/O context</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;linux/aio_abi.h&gt;</b> /* Defines needed types */</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>long\nio_setup(unsigned</b> <i>nr_events</i><b>, aio_context_t\n*</b><i>ctx_idp</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Note</i>:\nThere is no glibc wrapper for this system call; see\nNOTES.</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Note</i>:\nthis page describes the raw Linux system call interface. The\nwrapper function provided by <i>libaio</i> uses a different\ntype for the <i>ctx_idp</i> argument. See NOTES.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>io_setup</b>() system call creates an asynchronous I/O\ncontext suitable for concurrently processing\n<i>nr_events</i> operations. The <i>ctx_idp</i> argument\nmust not point to an AIO context that already exists, and\nmust be initialized to 0 prior to the call. On successful\ncreation of the AIO context, <i>*ctx_idp</i> is filled in\nwith the resulting handle.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\n<b>io_setup</b>() returns 0. For the failure return, see\nNOTES.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EAGAIN</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">The specified <i>nr_events</i>\nexceeds the limit of available events, as defined in\n<i>/proc/sys/fs/aio-max-nr</i> (see <a href=\"https://man.page/5/proc\">proc(5)</a>).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EFAULT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>An invalid pointer is passed for <i>ctx_idp</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>ctx_idp</i> is not initialized, or the specified\n<i>nr_events</i> exceeds internal limits. <i>nr_events</i>\nshould be greater than 0.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOMEM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Insufficient kernel resources are available.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOSYS</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><b>io_setup</b>() is not implemented on this\narchitecture.</p> </td></tr>\n</table>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nasynchronous I/O system calls first appeared in Linux\n2.5.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>io_setup</b>()\nis Linux-specific and should not be used in programs that\nare intended to be portable.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Glibc does not\nprovide a wrapper function for this system call. You could\ninvoke it using <a href=\"https://man.page/2/syscall\">syscall(2)</a>. But instead, you probably\nwant to use the <b>io_setup</b>() wrapper function provided\nby <i>libaio</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that the\n<i>libaio</i> wrapper function uses a different type\n(<i>io_context_t&nbsp;*</i>) for the <i>ctx_idp</i>\nargument. Note also that the <i>libaio</i> wrapper does not\nfollow the usual C library conventions for indicating\nerrors: on error it returns a negated error number (the\nnegative of one of the values listed in ERRORS). If the\nsystem call is invoked via <a href=\"https://man.page/2/syscall\">syscall(2)</a>, then the\nreturn value follows the usual conventions for indicating an\nerror: -1, with <i>errno</i> set to a (positive) value that\nindicates the error.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/io_cancel\">io_cancel(2)</a>,\n<a href=\"https://man.page/2/io_destroy\">io_destroy(2)</a>, <a href=\"https://man.page/2/io_getevents\">io_getevents(2)</a>,\n<a href=\"https://man.page/2/io_submit\">io_submit(2)</a>, <a href=\"https://man.page/7/aio\">aio(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}