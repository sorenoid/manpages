{"name":"fallocate","description":"fallocate - manipulate file space","body":"\n\n<h1 align=\"center\">FALLOCATE</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">fallocate -\nmanipulate file space</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#define\n_GNU_SOURCE</b> /* See feature_test_macros(7) */ <b><br>\n#include &lt;fcntl.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nfallocate(int</b> <i>fd</i><b>, int</b> <i>mode</i><b>,\noff_t</b> <i>offset</i><b>, off_t</b>\n<i>len</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This is a\nnonportable, Linux-specific system call. For the portable,\nPOSIX.1-specified method of ensuring that space is allocated\nfor a file, see <a href=\"https://man.page/3/posix_fallocate\">posix_fallocate(3)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>fallocate</b>()\nallows the caller to directly manipulate the allocated disk\nspace for the file referred to by <i>fd</i> for the byte\nrange starting at <i>offset</i> and continuing for\n<i>len</i> bytes.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <i>mode</i>\nargument determines the operation to be performed on the\ngiven range. Details of the supported operations are given\nin the subsections below.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Allocating\ndisk space</b> <br>\nThe default operation (i.e., <i>mode</i> is zero) of\n<b>fallocate</b>() allocates the disk space within the range\nspecified by <i>offset</i> and <i>len</i>. The file size (as\nreported by <a href=\"https://man.page/2/stat\">stat(2)</a>) will be changed if\n<i>offset</i>+<i>len</i> is greater than the file size. Any\nsubregion within the range specified by <i>offset</i> and\n<i>len</i> that did not contain data before the call will be\ninitialized to zero. This default behavior closely resembles\nthe behavior of the <a href=\"https://man.page/3/posix_fallocate\">posix_fallocate(3)</a> library\nfunction, and is intended as a method of optimally\nimplementing that function.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">After a\nsuccessful call, subsequent writes into the range specified\nby <i>offset</i> and <i>len</i> are guaranteed not to fail\nbecause of lack of disk space.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\n<b>FALLOC_FL_KEEP_SIZE</b> flag is specified in <i>mode</i>,\nthe behavior of the call is similar, but the file size will\nnot be changed even if <i>offset</i>+<i>len</i> is greater\nthan the file size. Preallocating zeroed blocks beyond the\nend of the file in this manner is useful for optimizing\nappend workloads.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\n<b>FALLOC_FL_UNSHARE</b> flag is specified in <i>mode</i>,\nshared file data extents will be made private to the file to\nguarantee that a subsequent write will not fail due to lack\nof space. Typically, this will be done by performing a\ncopy-on-write operation on all shared data in the file. This\nflag may not be supported by all filesystems.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Because\nallocation is done in block size chunks, <b>fallocate</b>()\nmay allocate a larger range of disk space than was\nspecified.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Deallocating\nfile space</b> <br>\nSpecifying the <b>FALLOC_FL_PUNCH_HOLE</b> flag (available\nsince Linux 2.6.38) in <i>mode</i> deallocates space (i.e.,\ncreates a hole) in the byte range starting at <i>offset</i>\nand continuing for <i>len</i> bytes. Within the specified\nrange, partial filesystem blocks are zeroed, and whole\nfilesystem blocks are removed from the file. After a\nsuccessful call, subsequent reads from this range will\nreturn zeros.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>FALLOC_FL_PUNCH_HOLE</b> flag must be ORed with\n<b>FALLOC_FL_KEEP_SIZE</b> in <i>mode</i>; in other words,\neven when punching off the end of the file, the file size\n(as reported by <a href=\"https://man.page/2/stat\">stat(2)</a>) does not change.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Not all\nfilesystems support <b>FALLOC_FL_PUNCH_HOLE</b>; if a\nfilesystem doesn&rsquo;t support the operation, an error is\nreturned. The operation is supported on at least the\nfollowing filesystems:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"40%\">\n\n\n<p>XFS (since Linux 2.6.38)</p></td>\n<td width=\"45%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"40%\">\n\n\n<p>ext4 (since Linux 3.0)</p></td>\n<td width=\"45%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"40%\">\n\n\n<p>Btrfs (since Linux 3.7)</p></td>\n<td width=\"45%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"40%\">\n\n\n<p><a href=\"https://man.page/5/tmpfs\">tmpfs(5)</a> (since Linux 3.5)</p></td>\n<td width=\"45%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"40%\">\n\n\n<p><a href=\"https://man.page/5/gfs2\">gfs2(5)</a> (since Linux 4.16)</p></td>\n<td width=\"45%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Collapsing\nfile space</b> <br>\nSpecifying the <b>FALLOC_FL_COLLAPSE_RANGE</b> flag\n(available since Linux 3.15) in <i>mode</i> removes a byte\nrange from a file, without leaving a hole. The byte range to\nbe collapsed starts at <i>offset</i> and continues for\n<i>len</i> bytes. At the completion of the operation, the\ncontents of the file starting at the location\n<i>offset+len</i> will be appended at the location\n<i>offset</i>, and the file will be <i>len</i> bytes\nsmaller.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A filesystem\nmay place limitations on the granularity of the operation,\nin order to ensure efficient implementation. Typically,\n<i>offset</i> and <i>len</i> must be a multiple of the\nfilesystem logical block size, which varies according to the\nfilesystem type and configuration. If a filesystem has such\na requirement, <b>fallocate</b>() fails with the error\n<b>EINVAL</b> if this requirement is violated.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the region\nspecified by <i>offset</i> plus <i>len</i> reaches or passes\nthe end of file, an error is returned; instead, use\n<a href=\"https://man.page/2/ftruncate\">ftruncate(2)</a> to truncate a file.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">No other flags\nmay be specified in <i>mode</i> in conjunction with\n<b>FALLOC_FL_COLLAPSE_RANGE</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">As at Linux\n3.15, <b>FALLOC_FL_COLLAPSE_RANGE</b> is supported by ext4\n(only for extent-based files) and XFS.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Zeroing file\nspace</b> <br>\nSpecifying the <b>FALLOC_FL_ZERO_RANGE</b> flag (available\nsince Linux 3.15) in <i>mode</i> zeros space in the byte\nrange starting at <i>offset</i> and continuing for\n<i>len</i> bytes. Within the specified range, blocks are\npreallocated for the regions that span the holes in the\nfile. After a successful call, subsequent reads from this\nrange will return zeros.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Zeroing is done\nwithin the filesystem preferably by converting the range\ninto unwritten extents. This approach means that the\nspecified range will not be physically zeroed out on the\ndevice (except for partial blocks at the either end of the\nrange), and I/O is (otherwise) required only to update\nmetadata.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\n<b>FALLOC_FL_KEEP_SIZE</b> flag is additionally specified in\n<i>mode</i>, the behavior of the call is similar, but the\nfile size will not be changed even if\n<i>offset</i>+<i>len</i> is greater than the file size. This\nbehavior is the same as when preallocating space with\n<b>FALLOC_FL_KEEP_SIZE</b> specified.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Not all\nfilesystems support <b>FALLOC_FL_ZERO_RANGE</b>; if a\nfilesystem doesn&rsquo;t support the operation, an error is\nreturned. The operation is supported on at least the\nfollowing filesystems:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</p></td>\n<td width=\"3%\"></td>\n<td width=\"73%\">\n\n\n<p style=\"margin-top: 1em\">XFS (since Linux 3.15)</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"73%\">\n\n\n<p>ext4, for extent-based files (since Linux 3.15)</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"73%\">\n\n\n<p>SMB3 (since Linux 3.17)</p></td>\n<td width=\"12%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"73%\">\n\n\n<p>Btrfs (since Linux 4.16)</p></td>\n<td width=\"12%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Increasing\nfile space</b> <br>\nSpecifying the <b>FALLOC_FL_INSERT_RANGE</b> flag (available\nsince Linux 4.1) in <i>mode</i> increases the file space by\ninserting a hole within the file size without overwriting\nany existing data. The hole will start at <i>offset</i> and\ncontinue for <i>len</i> bytes. When inserting the hole\ninside file, the contents of the file starting at\n<i>offset</i> will be shifted upward (i.e., to a higher file\noffset) by <i>len</i> bytes. Inserting a hole inside a file\nincreases the file size by <i>len</i> bytes.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This mode has\nthe same limitations as <b>FALLOC_FL_COLLAPSE_RANGE</b>\nregarding the granularity of the operation. If the\ngranularity requirements are not met, <b>fallocate</b>()\nfails with the error <b>EINVAL</b>. If the <i>offset</i> is\nequal to or greater than the end of file, an error is\nreturned. For such operations (i.e., inserting a hole at the\nend of file), <a href=\"https://man.page/2/ftruncate\">ftruncate(2)</a> should be used.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">No other flags\nmay be specified in <i>mode</i> in conjunction with\n<b>FALLOC_FL_INSERT_RANGE</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>FALLOC_FL_INSERT_RANGE</b>\nrequires filesystem support. Filesystems that support this\noperation include XFS (since Linux 4.1) and ext4 (since\nLinux 4.2).</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\n<b>fallocate</b>() returns zero. On error, -1 is returned\nand <i>errno</i> is set to indicate the error.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EBADF</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\"><i>fd</i> is not a valid file\ndescriptor, or is not opened for writing.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EFBIG</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>offset</i>+<i>len</i> exceeds the maximum file\nsize.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EFBIG</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>mode</i> is <b>FALLOC_FL_INSERT_RANGE</b>, and the\ncurrent file size+<i>len</i> exceeds the maximum file\nsize.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINTR</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>A signal was caught during execution; see\n<a href=\"https://man.page/7/signal\">signal(7)</a>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>offset</i> was less than 0, or <i>len</i> was less\nthan or equal to 0.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>mode</i> is <b>FALLOC_FL_COLLAPSE_RANGE</b> and the\nrange specified by <i>offset</i> plus <i>len</i> reaches or\npasses the end of the file.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>mode</i> is <b>FALLOC_FL_INSERT_RANGE</b> and the\nrange specified by <i>offset</i> reaches or passes the end\nof the file.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>mode</i> is <b>FALLOC_FL_COLLAPSE_RANGE</b> or\n<b>FALLOC_FL_INSERT_RANGE</b>, but either <i>offset</i> or\n<i>len</i> is not a multiple of the filesystem block\nsize.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>mode</i> contains one of\n<b>FALLOC_FL_COLLAPSE_RANGE</b> or\n<b>FALLOC_FL_INSERT_RANGE</b> and also other flags; no other\nflags are permitted with <b>FALLOC_FL_COLLAPSE_RANGE</b> or\n<b>FALLOC_FL_INSERT_RANGE</b>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>mode</i> is <b>FALLOC_FL_COLLAPSE_RANGE</b> or\n<b>FALLOC_FL_ZERO_RANGE</b> or\n<b>FALLOC_FL_INSERT_RANGE</b>, but the file referred to by\n<i>fd</i> is not a regular file.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EIO</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>An I/O error occurred while reading from or writing to a\nfilesystem.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENODEV</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>fd</i> does not refer to a regular file or a\ndirectory. (If <i>fd</i> is a pipe or FIFO, a different\nerror results.)</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOSPC</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>There is not enough space left on the device containing\nthe file referred to by <i>fd</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOSYS</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>This kernel does not implement <b>fallocate</b>().</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>EOPNOTSUPP</b></p>\n\n<p style=\"margin-left:22%;\">The filesystem containing the\nfile referred to by <i>fd</i> does not support this\noperation; or the <i>mode</i> is not supported by the\nfilesystem containing the file referred to by <i>fd</i>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The file referred to by <i>fd</i> is marked immutable\n(see <a href=\"https://man.page/1/chattr\">chattr(1)</a>).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>mode</i> specifies <b>FALLOC_FL_PUNCH_HOLE</b> or\n<b>FALLOC_FL_COLLAPSE_RANGE</b> or\n<b>FALLOC_FL_INSERT_RANGE</b> and the file referred to by\n<i>fd</i> is marked append-only (see <a href=\"https://man.page/1/chattr\">chattr(1)</a>).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The operation was prevented by a file seal; see\n<a href=\"https://man.page/2/fcntl\">fcntl(2)</a>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ESPIPE</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>fd</i> refers to a pipe or FIFO.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ETXTBSY</b></p>\n\n<p style=\"margin-left:22%;\"><i>mode</i> specifies\n<b>FALLOC_FL_COLLAPSE_RANGE</b> or\n<b>FALLOC_FL_INSERT_RANGE</b>, but the file referred to by\n<i>fd</i> is currently being executed.</p>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>fallocate</b>()\nis available on Linux since kernel 2.6.23. Support is\nprovided by glibc since version 2.10. The <b>FALLOC_FL_*</b>\nflags are defined in glibc headers only since version\n2.18.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>fallocate</b>()\nis Linux-specific.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/fallocate\">fallocate(1)</a>,\n<a href=\"https://man.page/2/ftruncate\">ftruncate(2)</a>, <a href=\"https://man.page/3/posix_fadvise\">posix_fadvise(3)</a>,\n<a href=\"https://man.page/3/posix_fallocate\">posix_fallocate(3)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}