{"name":"setreuid","description":"setreuid, setregid - set real and/or effective user or group ID","body":"\n\n<h1 align=\"center\">SETREUID</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">setreuid,\nsetregid - set real and/or effective user or group ID</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/types.h&gt; <br>\n#include &lt;unistd.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nsetreuid(uid_t</b> <i>ruid</i><b>, uid_t</b>\n<i>euid</i><b>); <br>\nint setregid(gid_t</b> <i>rgid</i><b>, gid_t</b>\n<i>egid</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>setreuid</b>(),\n<b>setregid</b>():</p>\n\n\n<p style=\"margin-left:17%;\">_XOPEN_SOURCE&nbsp;&gt;=&nbsp;500\n<br>\n|| /* Since glibc 2.19: */ _DEFAULT_SOURCE <br>\n|| /* Glibc versions &lt;= 2.19: */ _BSD_SOURCE</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>setreuid</b>()\nsets real and effective user IDs of the calling process.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Supplying a\nvalue of -1 for either the real or effective user ID forces\nthe system to leave that ID unchanged.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Unprivileged\nprocesses may only set the effective user ID to the real\nuser ID, the effective user ID, or the saved\nset-user-ID.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Unprivileged\nusers may only set the real user ID to the real user ID or\nthe effective user ID.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the real\nuser ID is set (i.e., <i>ruid</i> is not -1) or the\neffective user ID is set to a value not equal to the\nprevious real user ID, the saved set-user-ID will be set to\nthe new effective user ID.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Completely\nanalogously, <b>setregid</b>() sets real and effective group\nID&rsquo;s of the calling process, and all of the above\nholds with &quot;group&quot; instead of\n&quot;user&quot;.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\nzero is returned. On error, -1 is returned, and <i>errno</i>\nis set appropriately.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Note</i>:\nthere are cases where <b>setreuid</b>() can fail even when\nthe caller is UID 0; it is a grave security error to omit\nchecking for a failure return from <b>setreuid</b>().</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EAGAIN</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">The call would change the\ncaller&rsquo;s real UID (i.e., <i>ruid</i> does not match\nthe caller&rsquo;s real UID), but there was a temporary\nfailure allocating the necessary kernel data structures.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EAGAIN</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>ruid</i> does not match the caller&rsquo;s real UID\nand this call would bring the number of processes belonging\nto the real user ID <i>ruid</i> over the caller&rsquo;s\n<b>RLIMIT_NPROC</b> resource limit. Since Linux 3.1, this\nerror case no longer occurs (but robust applications should\ncheck for this error); see the description of <b>EAGAIN</b>\nin <a href=\"https://man.page/2/execve\">execve(2)</a>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>One or more of the target user or group IDs is not valid\nin this user namespace.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The calling process is not privileged (on Linux, does\nnot have the necessary capability in its user namespace:\n<b>CAP_SETUID</b> in the case of <b>setreuid</b>(), or\n<b>CAP_SETGID</b> in the case of <b>setregid</b>()) and a\nchange other than (i) swapping the effective user (group) ID\nwith the real user (group) ID, or (ii) setting one to the\nvalue of the other or (iii) setting the effective user\n(group) ID to the value of the saved set-user-ID (saved\nset-group-ID) was specified.</p></td></tr>\n</table>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008, 4.3BSD (<b>setreuid</b>() and\n<b>setregid</b>() first appeared in 4.2BSD).</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Setting the\neffective user (group) ID to the saved set-user-ID (saved\nset-group-ID) is possible since Linux 1.1.37 (1.1.38).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1 does\nnot specify all of the UID changes that Linux permits for an\nunprivileged process. For <b>setreuid</b>(), the effective\nuser ID can be made the same as the real user ID or the\nsaved set-user-ID, and it is unspecified whether\nunprivileged processes may set the real user ID to the real\nuser ID, the effective user ID, or the saved set-user-ID.\nFor <b>setregid</b>(), the real group ID can be changed to\nthe value of the saved set-group-ID, and the effective group\nID can be changed to the value of the real group ID or the\nsaved set-group-ID. The precise details of what ID changes\nare permitted vary across implementations.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1 makes\nno specification about the effect of these calls on the\nsaved set-user-ID and saved set-group-ID.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The original\nLinux <b>setreuid</b>() and <b>setregid</b>() system calls\nsupported only 16-bit user and group IDs. Subsequently,\nLinux 2.4 added <b>setreuid32</b>() and <b>setregid32</b>(),\nsupporting 32-bit IDs. The glibc <b>setreuid</b>() and\n<b>setregid</b>() wrapper functions transparently deal with\nthe variations across kernel versions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>C\nlibrary/kernel differences</b> <br>\nAt the kernel level, user IDs and group IDs are a per-thread\nattribute. However, POSIX requires that all threads in a\nprocess share the same credentials. The NPTL threading\nimplementation handles the POSIX requirements by providing\nwrapper functions for the various system calls that change\nprocess UIDs and GIDs. These wrapper functions (including\nthose for <b>setreuid</b>() and <b>setregid</b>()) employ a\nsignal-based technique to ensure that when one thread\nchanges credentials, all of the other threads in the process\nalso change their credentials. For details, see\n<a href=\"https://man.page/7/nptl\">nptl(7)</a>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/getgid\">getgid(2)</a>,\n<a href=\"https://man.page/2/getuid\">getuid(2)</a>, <a href=\"https://man.page/2/seteuid\">seteuid(2)</a>, <a href=\"https://man.page/2/setgid\">setgid(2)</a>,\n<a href=\"https://man.page/2/setresuid\">setresuid(2)</a>, <a href=\"https://man.page/2/setuid\">setuid(2)</a>,\n<a href=\"https://man.page/7/capabilities\">capabilities(7)</a>, <a href=\"https://man.page/7/credentials\">credentials(7)</a>,\n<a href=\"https://man.page/7/user_namespaces\">user_namespaces(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}