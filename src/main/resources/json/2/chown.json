{"name":"chown","body":"\n\n<h1 align=\"center\">CHOWN</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">chown, fchown,\nlchown, fchownat - change ownership of a file</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;unistd.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nchown(const char *</b><i>pathname</i><b>, uid_t</b>\n<i>owner</i><b>, gid_t</b> <i>group</i><b>); <br>\nint fchown(int</b> <i>fd</i><b>, uid_t</b> <i>owner</i><b>,\ngid_t</b> <i>group</i><b>); <br>\nint lchown(const char *</b><i>pathname</i><b>, uid_t</b>\n<i>owner</i><b>, gid_t</b> <i>group</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;fcntl.h&gt;</b> /* Definition of AT_* constants */\n<b><br>\n#include &lt;unistd.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nfchownat(int</b> <i>dirfd</i><b>, const char\n*</b><i>pathname</i><b>, <br>\nuid_t</b> <i>owner</i><b>, gid_t</b> <i>group</i><b>,\nint</b> <i>flags</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>fchown</b>(),\n<b>lchown</b>():</p>\n\n<p style=\"margin-left:17%;\">/* Since glibc 2.12: */\n_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200809L <br>\n|| _XOPEN_SOURCE&nbsp;&gt;=&nbsp;500 <br>\n|| /* Glibc versions &lt;= 2.19: */ _BSD_SOURCE</p>\n\n<p style=\"margin-left:11%;\"><b>fchownat</b>():</p>\n\n<p style=\"margin-left:17%;\">Since glibc 2.10:</p>\n\n\n<p style=\"margin-left:23%;\">_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200809L</p>\n\n<p style=\"margin-left:17%;\">Before glibc 2.10:</p>\n\n<p style=\"margin-left:23%;\">_ATFILE_SOURCE</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These system\ncalls change the owner and group of a file. The\n<b>chown</b>(), <b>fchown</b>(), and <b>lchown</b>() system\ncalls differ only in how the file is specified:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p><b>chown</b>() changes the ownership of the file\nspecified by <i>pathname</i>, which is dereferenced if it is\na symbolic link.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p><b>fchown</b>() changes the ownership of the file\nreferred to by the open file descriptor <i>fd</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p><b>lchown</b>() is like <b>chown</b>(), but does not\ndereference symbolic links.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Only a\nprivileged process (Linux: one with the <b>CAP_CHOWN</b>\ncapability) may change the owner of a file. The owner of a\nfile may change the group of the file to any group of which\nthat owner is a member. A privileged process (Linux: with\n<b>CAP_CHOWN</b>) may change the group arbitrarily.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\n<i>owner</i> or <i>group</i> is specified as -1, then that\nID is not changed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When the owner\nor group of an executable file is changed by an unprivileged\nuser, the <b>S_ISUID</b> and <b>S_ISGID</b> mode bits are\ncleared. POSIX does not specify whether this also should\nhappen when root does the <b>chown</b>(); the Linux behavior\ndepends on the kernel version, and since Linux 2.2.13, root\nis treated like other users. In case of a\nnon-group-executable file (i.e., one for which the\n<b>S_IXGRP</b> bit is not set) the <b>S_ISGID</b> bit\nindicates mandatory locking, and is not cleared by a\n<b>chown</b>().</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When the owner\nor group of an executable file is changed (by any user), all\ncapability sets for the file are cleared.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>fchownat()</b>\n<br>\nThe <b>fchownat</b>() system call operates in exactly the\nsame way as <b>chown</b>(), except for the differences\ndescribed here.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the pathname\ngiven in <i>pathname</i> is relative, then it is interpreted\nrelative to the directory referred to by the file descriptor\n<i>dirfd</i> (rather than relative to the current working\ndirectory of the calling process, as is done by\n<b>chown</b>() for a relative pathname).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>pathname</i> is relative and <i>dirfd</i> is the special\nvalue <b>AT_FDCWD</b>, then <i>pathname</i> is interpreted\nrelative to the current working directory of the calling\nprocess (like <b>chown</b>()).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>pathname</i> is absolute, then <i>dirfd</i> is\nignored.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>flags</i> argument is a bit mask created by ORing\ntogether 0 or more of the following values; <b><br>\nAT_EMPTY_PATH</b> (since Linux 2.6.39)</p>\n\n<p style=\"margin-left:22%;\">If <i>pathname</i> is an empty\nstring, operate on the file referred to by <i>dirfd</i>\n(which may have been obtained using the <a href=\"https://man.page/2/open\">open(2)</a>\n<b>O_PATH</b> flag). In this case, <i>dirfd</i> can refer to\nany type of file, not just a directory. If <i>dirfd</i> is\n<b>AT_FDCWD</b>, the call operates on the current working\ndirectory. This flag is Linux-specific; define\n<b>_GNU_SOURCE</b> to obtain its definition.</p>\n\n<p style=\"margin-left:11%;\"><b>AT_SYMLINK_NOFOLLOW</b></p>\n\n<p style=\"margin-left:22%;\">If <i>pathname</i> is a\nsymbolic link, do not dereference it: instead operate on the\nlink itself, like <b>lchown</b>(). (By default,\n<b>fchownat</b>() dereferences symbolic links, like\n<b>chown</b>().)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See\n<a href=\"https://man.page/2/openat\">openat(2)</a> for an explanation of the need for\n<b>fchownat</b>().</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\nzero is returned. On error, -1 is returned, and <i>errno</i>\nis set appropriately.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Depending on\nthe filesystem, errors other than those listed below can be\nreturned.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The more\ngeneral errors for <b>chown</b>() are listed below.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EACCES</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Search permission is denied on a component of the path\nprefix. (See also <a href=\"https://man.page/7/path_resolution\">path_resolution(7)</a>.)</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EFAULT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>pathname</i> points outside your accessible address\nspace.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ELOOP</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Too many symbolic links were encountered in resolving\n<i>pathname</i>.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ENAMETOOLONG</b></p>\n\n<p style=\"margin-left:22%;\"><i>pathname</i> is too\nlong.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOENT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"63%\">\n\n\n<p>The file does not exist.</p></td>\n<td width=\"15%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOMEM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"63%\">\n\n\n<p>Insufficient kernel memory was available.</p></td>\n<td width=\"15%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ENOTDIR</b></p>\n\n<p style=\"margin-left:22%;\">A component of the path prefix\nis not a directory.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>The calling process did not have the required\npermissions (see above) to change owner and/or group.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>The file is marked immutable or append-only. (See\n<a href=\"https://man.page/2/ioctl_iflags\">ioctl_iflags(2)</a>.)</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EROFS</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>The named file resides on a read-only filesystem.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The general\nerrors for <b>fchown</b>() are listed below:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EBADF</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\"><i>fd</i> is not a valid open\nfile descriptor.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EIO</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>A low-level I/O error occurred while modifying the\ninode.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOENT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>See above.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>See above.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EROFS</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>See above.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The same errors\nthat occur for <b>chown</b>() can also occur for\n<b>fchownat</b>(). The following additional errors can occur\nfor <b>fchownat</b>():</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EBADF</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"56%\">\n\n\n<p style=\"margin-top: 1em\"><i>dirfd</i> is not a valid file\ndescriptor.</p> </td>\n<td width=\"22%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"56%\">\n\n\n<p>Invalid flag specified in <i>flags</i>.</p></td>\n<td width=\"22%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ENOTDIR</b></p>\n\n<p style=\"margin-left:22%;\"><i>pathname</i> is relative and\n<i>dirfd</i> is a file descriptor referring to a file other\nthan a directory.</p>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>fchownat</b>()\nwas added to Linux in kernel 2.6.16; library support was\nadded to glibc in version 2.4.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>chown</b>(),\n<b>fchown</b>(), <b>lchown</b>(): 4.4BSD, SVr4,\nPOSIX.1-2001, POSIX.1-2008.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The 4.4BSD\nversion can be used only by the superuser (that is, ordinary\nusers cannot give away files).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>fchownat</b>():\nPOSIX.1-2008.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Ownership of\nnew files</b> <br>\nWhen a new file is created (by, for example, <a href=\"https://man.page/2/open\">open(2)</a>\nor <a href=\"https://man.page/2/mkdir\">mkdir(2)</a>), its owner is made the same as the\nfilesystem user ID of the creating process. The group of the\nfile depends on a range of factors, including the type of\nfilesystem, the options used to mount the filesystem, and\nwhether or not the set-group-ID mode bit is enabled on the\nparent directory. If the filesystem supports the\n<b>-o&nbsp;grpid</b> (or, synonymously\n<b>-o&nbsp;bsdgroups</b>) and <b>-o&nbsp;nogrpid</b> (or,\nsynonymously <b>-o&nbsp;sysvgroups</b>) <b>mount</b>(8)\noptions, then the rules are as follows:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p>If the filesystem is mounted with <b>-o&nbsp;grpid</b>,\nthen the group of a new file is made the same as that of the\nparent directory.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p>If the filesystem is mounted with <b>-o&nbsp;nogrpid</b>\nand the set-group-ID bit is disabled on the parent\ndirectory, then the group of a new file is made the same as\nthe process&rsquo;s filesystem GID.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p>If the filesystem is mounted with <b>-o&nbsp;nogrpid</b>\nand the set-group-ID bit is enabled on the parent directory,\nthen the group of a new file is made the same as that of the\nparent directory.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">As at Linux\n4.12, the <b>-o&nbsp;grpid</b> and <b>-o&nbsp;nogrpid</b>\nmount options are supported by ext2, ext3, ext4, and XFS.\nFilesystems that don&rsquo;t support these mount options\nfollow the <b>-o&nbsp;nogrpid</b> rules.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Glibc\nnotes</b> <br>\nOn older kernels where <b>fchownat</b>() is unavailable, the\nglibc wrapper function falls back to the use of\n<b>chown</b>() and <b>lchown</b>(). When <i>pathname</i> is\na relative pathname, glibc constructs a pathname based on\nthe symbolic link in <i>/proc/self/fd</i> that corresponds\nto the <i>dirfd</i> argument.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>NFS</b> <br>\nThe <b>chown</b>() semantics are deliberately violated on\nNFS filesystems which have UID mapping enabled.\nAdditionally, the semantics of all system calls which access\nthe file contents are violated, because <b>chown</b>() may\ncause immediate access revocation on already open files.\nClient side caching may lead to a delay between the time\nwhere ownership have been changed to allow access for a user\nand the time where the file can actually be accessed by the\nuser on other clients.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Historical\ndetails</b> <br>\nThe original Linux <b>chown</b>(), <b>fchown</b>(), and\n<b>lchown</b>() system calls supported only 16-bit user and\ngroup IDs. Subsequently, Linux 2.4 added <b>chown32</b>(),\n<b>fchown32</b>(), and <b>lchown32</b>(), supporting 32-bit\nIDs. The glibc <b>chown</b>(), <b>fchown</b>(), and\n<b>lchown</b>() wrapper functions transparently deal with\nthe variations across kernel versions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In versions of\nLinux prior to 2.1.81 (and distinct from 2.1.46),\n<b>chown</b>() did not follow symbolic links. Since Linux\n2.1.81, <b>chown</b>() does follow symbolic links, and there\nis a new system call <b>lchown</b>() that does not follow\nsymbolic links. Since Linux 2.1.86, this new call (that has\nthe same semantics as the old <b>chown</b>()) has got the\nsame syscall number, and <b>chown</b>() got the newly\nintroduced number.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nprogram changes the ownership of the file named in its\nsecond command-line argument to the value specified in its\nfirst command-line argument. The new owner can be specified\neither as a numeric user ID, or as a username (which is\nconverted to a user ID by using <a href=\"https://man.page/3/getpwnam\">getpwnam(3)</a> to\nperform a lookup in the system password file).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Program\nsource</b> <br>\n#include &lt;pwd.h&gt; <br>\n#include &lt;stdio.h&gt; <br>\n#include &lt;stdlib.h&gt; <br>\n#include &lt;unistd.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(int argc, char *argv[]) <br>\n{ <br>\nuid_t uid; <br>\nstruct passwd *pwd; <br>\nchar *endptr;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (argc != 3\n|| argv[1][0] == '\\0') { <br>\nfprintf(stderr, &quot;%s &lt;owner&gt; &lt;file&gt;\\n&quot;,\nargv[0]); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">uid =\nstrtol(argv[1], &amp;endptr, 10); /* Allow a numeric string\n*/</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (*endptr !=\n'\\0') { /* Was not pure numeric string */ <br>\npwd = getpwnam(argv[1]); /* Try getting UID for username */\n<br>\nif (pwd == NULL) { <br>\nperror(&quot;getpwnam&quot;); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">uid =\npwd-&gt;pw_uid; <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if\n(chown(argv[2], uid, -1) == -1) { <br>\nperror(&quot;chown&quot;); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">exit(EXIT_SUCCESS);\n<br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/chgrp\">chgrp(1)</a>,\n<a href=\"https://man.page/1/chown\">chown(1)</a>, <a href=\"https://man.page/2/chmod\">chmod(2)</a>, <a href=\"https://man.page/2/flock\">flock(2)</a>,\n<a href=\"https://man.page/7/path_resolution\">path_resolution(7)</a>, <a href=\"https://man.page/7/symlink\">symlink(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}