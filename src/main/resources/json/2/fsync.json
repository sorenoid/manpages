{"name":"fsync","description":"fsync,\nfdatasync - synchronize a file&rsquo;s in-core state with\nstorage device","body":"\n\n<h1 align=\"center\">FSYNC</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">fsync,\nfdatasync - synchronize a file&rsquo;s in-core state with\nstorage device</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;unistd.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nfsync(int</b> <i>fd</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nfdatasync(int</b> <i>fd</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>fsync</b>():\n<br>\nGlibc 2.16 and later: <br>\nNo feature test macros need be defined <br>\nGlibc up to and including 2.15: <br>\n_BSD_SOURCE || _XOPEN_SOURCE <br>\n|| /* since glibc 2.8: */\n_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200112L <b><br>\nfdatasync</b>(): <br>\n_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;199309L ||\n_XOPEN_SOURCE&nbsp;&gt;=&nbsp;500</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>fsync</b>()\ntransfers (&quot;flushes&quot;) all modified in-core data of\n(i.e., modified buffer cache pages for) the file referred to\nby the file descriptor <i>fd</i> to the disk device (or\nother permanent storage device) so that all changed\ninformation can be retrieved even if the system crashes or\nis rebooted. This includes writing through or flushing a\ndisk cache if present. The call blocks until the device\nreports that the transfer has completed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">As well as\nflushing the file data, <b>fsync</b>() also flushes the\nmetadata information associated with the file (see\n<a href=\"https://man.page/7/inode\">inode(7)</a>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Calling\n<b>fsync</b>() does not necessarily ensure that the entry in\nthe directory containing the file has also reached disk. For\nthat an explicit <b>fsync</b>() on a file descriptor for the\ndirectory is also needed.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>fdatasync</b>()\nis similar to <b>fsync</b>(), but does not flush modified\nmetadata unless that metadata is needed in order to allow a\nsubsequent data retrieval to be correctly handled. For\nexample, changes to <i>st_atime</i> or <i>st_mtime</i>\n(respectively, time of last access and time of last\nmodification; see <a href=\"https://man.page/7/inode\">inode(7)</a>) do not require flushing\nbecause they are not necessary for a subsequent data read to\nbe handled correctly. On the other hand, a change to the\nfile size (<i>st_size</i>, as made by say\n<a href=\"https://man.page/2/ftruncate\">ftruncate(2)</a>), would require a metadata flush.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The aim of\n<b>fdatasync</b>() is to reduce disk activity for\napplications that do not require all metadata to be\nsynchronized with the disk.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\nthese system calls return zero. On error, -1 is returned,\nand <i>errno</i> is set appropriately.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EBADF</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\"><i>fd</i> is not a valid open\nfile descriptor.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EIO</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>An error occurred during synchronization. This error may\nrelate to data written to some other file descriptor on the\nsame file. Since Linux 4.13, errors from write-back will be\nreported to all file descriptors that might have written the\ndata which triggered the error. Some filesystems (e.g., NFS)\nkeep close track of which data came through which file\ndescriptor, and give more precise reporting. Other\nfilesystems (e.g., most local filesystems) will report\nerrors to all file descriptors that were open on the file\nwhen the error was recorded.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOSPC</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Disk space was exhausted while synchronizing.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>EROFS</b>, <b>EINVAL</b></p>\n\n<p style=\"margin-left:22%;\"><i>fd</i> is bound to a special\nfile (e.g., a pipe, FIFO, or socket) which does not support\nsynchronization.</p>\n\n<p style=\"margin-left:11%;\"><b>ENOSPC</b>,\n<b>EDQUOT</b></p>\n\n<p style=\"margin-left:22%;\"><i>fd</i> is bound to a file on\nNFS or another filesystem which does not allocate space at\nthe time of a <a href=\"https://man.page/2/write\">write(2)</a> system call, and some previous\nwrite failed due to insufficient storage space.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008, 4.3BSD.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On POSIX\nsystems on which <b>fdatasync</b>() is available,\n<b>_POSIX_SYNCHRONIZED_IO</b> is defined in\n<i>&lt;unistd.h&gt;</i> to a value greater than 0. (See also\n<a href=\"https://man.page/3/sysconf\">sysconf(3)</a>.)</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On some UNIX\nsystems (but not Linux), <i>fd</i> must be a <i>writable</i>\nfile descriptor.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In Linux 2.2\nand earlier, <b>fdatasync</b>() is equivalent to\n<b>fsync</b>(), and so has no performance advantage.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>fsync</b>() implementations in older kernels and lesser\nused filesystems do not know how to flush disk caches. In\nthese cases disk caches need to be disabled using\n<b>hdparm</b>(8) or <b>sdparm</b>(8) to guarantee safe\noperation.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/sync\">sync(1)</a>,\n<a href=\"https://man.page/2/bdflush\">bdflush(2)</a>, <a href=\"https://man.page/2/open\">open(2)</a>, <a href=\"https://man.page/2/posix_fadvise\">posix_fadvise(2)</a>,\n<a href=\"https://man.page/2/pwritev\">pwritev(2)</a>, <a href=\"https://man.page/2/sync\">sync(2)</a>,\n<a href=\"https://man.page/2/sync_file_range\">sync_file_range(2)</a>, <a href=\"https://man.page/3/fflush\">fflush(3)</a>,\n<a href=\"https://man.page/3/fileno\">fileno(3)</a>, <b>hdparm</b>(8), <b>mount</b>(8)</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}