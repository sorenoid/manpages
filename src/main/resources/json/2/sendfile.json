{"name":"sendfile","body":"\n\n<h1 align=\"center\">SENDFILE</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">sendfile -\ntransfer data between file descriptors</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/sendfile.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ssize_t\nsendfile(int</b> <i>out_fd</i><b>, int</b> <i>in_fd</i><b>,\noff_t *</b><i>offset</i><b>, size_t</b>\n<i>count</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>sendfile</b>()\ncopies data between one file descriptor and another. Because\nthis copying is done within the kernel, <b>sendfile</b>() is\nmore efficient than the combination of <a href=\"https://man.page/2/read\">read(2)</a> and\n<a href=\"https://man.page/2/write\">write(2)</a>, which would require transferring data to\nand from user space.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>in_fd</i>\nshould be a file descriptor opened for reading and\n<i>out_fd</i> should be a descriptor opened for writing.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>offset</i> is not NULL, then it points to a variable\nholding the file offset from which <b>sendfile</b>() will\nstart reading data from <i>in_fd</i>. When <b>sendfile</b>()\nreturns, this variable will be set to the offset of the byte\nfollowing the last byte that was read. If <i>offset</i> is\nnot NULL, then <b>sendfile</b>() does not modify the file\noffset of <i>in_fd</i>; otherwise the file offset is\nadjusted to reflect the number of bytes read from\n<i>in_fd</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>offset</i> is NULL, then data will be read from\n<i>in_fd</i> starting at the file offset, and the file\noffset will be updated by the call.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>count</i> is\nthe number of bytes to copy between the file\ndescriptors.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>in_fd</i> argument must correspond to a file which\nsupports <a href=\"https://man.page/2/mmap\">mmap(2)</a>-like operations (i.e., it cannot be\na socket).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In Linux\nkernels before 2.6.33, <i>out_fd</i> must refer to a socket.\nSince Linux 2.6.33 it can be any file. If it is a regular\nfile, then <b>sendfile</b>() changes the file offset\nappropriately.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the transfer\nwas successful, the number of bytes written to <i>out_fd</i>\nis returned. Note that a successful call to\n<b>sendfile</b>() may write fewer bytes than requested; the\ncaller should be prepared to retry the call if there were\nunsent bytes. See also NOTES.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On error, -1 is\nreturned, and <i>errno</i> is set appropriately.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EAGAIN</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">Nonblocking I/O has been\nselected using <b>O_NONBLOCK</b> and the write would\nblock.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EBADF</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The input file was not opened for reading or the output\nfile was not opened for writing.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EFAULT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Bad address.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Descriptor is not valid or locked, or an\n<a href=\"https://man.page/2/mmap\">mmap(2)</a>-like operation is not available for\n<i>in_fd</i>, or <i>count</i> is negative.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>out_fd</i> has the <b>O_APPEND</b> flag set. This is\nnot currently supported by <b>sendfile</b>().</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EIO</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Unspecified error while reading from <i>in_fd</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOMEM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Insufficient memory to read from <i>in_fd</i>.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>EOVERFLOW</b></p>\n\n<p style=\"margin-left:22%;\"><i>count</i> is too large, the\noperation would result in exceeding the maximum size of\neither the input file or the output file.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ESPIPE</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>offset</i> is not NULL but the input file is not\nseekable.</p> </td></tr>\n</table>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>sendfile</b>()\nfirst appeared in Linux 2.2. The include file\n<i>&lt;sys/sendfile.h&gt;</i> is present since glibc\n2.1.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Not specified\nin POSIX.1-2001, nor in other standards.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Other UNIX\nsystems implement <b>sendfile</b>() with different semantics\nand prototypes. It should not be used in portable\nprograms.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>sendfile</b>()\nwill transfer at most 0x7ffff000 (2,147,479,552) bytes,\nreturning the number of bytes actually transferred. (This is\ntrue on both 32-bit and 64-bit systems.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If you plan to\nuse <b>sendfile</b>() for sending files to a TCP socket, but\nneed to send some header data in front of the file contents,\nyou will find it useful to employ the <b>TCP_CORK</b>\noption, described in <a href=\"https://man.page/7/tcp\">tcp(7)</a>, to minimize the number\nof packets and to tune performance.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In Linux 2.4\nand earlier, <i>out_fd</i> could also refer to a regular\nfile; this possibility went away in the Linux 2.6.x kernel\nseries, but was restored in Linux 2.6.33.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The original\nLinux <b>sendfile</b>() system call was not designed to\nhandle large file offsets. Consequently, Linux 2.4 added\n<b>sendfile64</b>(), with a wider type for the <i>offset</i>\nargument. The glibc <b>sendfile</b>() wrapper function\ntransparently deals with the kernel differences.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Applications\nmay wish to fall back to <a href=\"https://man.page/2/read\">read(2)</a>/<a href=\"https://man.page/2/write\">write(2)</a> in\nthe case where <b>sendfile</b>() fails with <b>EINVAL</b> or\n<b>ENOSYS</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>out_fd</i> refers to a socket or pipe with zero-copy\nsupport, callers must ensure the transferred portions of the\nfile referred to by <i>in_fd</i> remain unmodified until the\nreader on the other end of <i>out_fd</i> has consumed the\ntransferred data.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nLinux-specific <a href=\"https://man.page/2/splice\">splice(2)</a> call supports transferring\ndata between arbitrary file descriptors provided one (or\nboth) of them is a pipe.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/copy_file_range\">copy_file_range(2)</a>,\n<a href=\"https://man.page/2/mmap\">mmap(2)</a>, <a href=\"https://man.page/2/open\">open(2)</a>, <a href=\"https://man.page/2/socket\">socket(2)</a>,\n<a href=\"https://man.page/2/splice\">splice(2)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}