{"name":"bind","description":"bind - bind a\nname to a socket","body":"\n\n<h1 align=\"center\">BIND</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">bind - bind a\nname to a socket</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/types.h&gt;</b> /* See NOTES */ <b><br>\n#include &lt;sys/socket.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nbind(int</b> <i>sockfd</i><b>, const struct sockaddr\n*</b><i>addr</i><b>, <br>\nsocklen_t</b> <i>addrlen</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">When a socket\nis created with <a href=\"https://man.page/2/socket\">socket(2)</a>, it exists in a name space\n(address family) but has no address assigned to it.\n<b>bind</b>() assigns the address specified by <i>addr</i>\nto the socket referred to by the file descriptor\n<i>sockfd</i>. <i>addrlen</i> specifies the size, in bytes,\nof the address structure pointed to by <i>addr</i>.\nTraditionally, this operation is called &ldquo;assigning a\nname to a socket&rdquo;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It is normally\nnecessary to assign a local address using <b>bind</b>()\nbefore a <b>SOCK_STREAM</b> socket may receive connections\n(see <a href=\"https://man.page/2/accept\">accept(2)</a>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The rules used\nin name binding vary between address families. Consult the\nmanual entries in Section 7 for detailed information. For\n<b>AF_INET</b>, see <a href=\"https://man.page/7/ip\">ip(7)</a>; for <b>AF_INET6</b>, see\n<a href=\"https://man.page/7/ipv6\">ipv6(7)</a>; for <b>AF_UNIX</b>, see <a href=\"https://man.page/7/unix\">unix(7)</a>; for\n<b>AF_APPLETALK</b>, see <a href=\"https://man.page/7/ddp\">ddp(7)</a>; for\n<b>AF_PACKET</b>, see <a href=\"https://man.page/7/packet\">packet(7)</a>; for <b>AF_X25</b>,\nsee <a href=\"https://man.page/7/x25\">x25(7)</a>; and for <b>AF_NETLINK</b>, see\n<a href=\"https://man.page/7/netlink\">netlink(7)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The actual\nstructure passed for the <i>addr</i> argument will depend on\nthe address family. The <i>sockaddr</i> structure is defined\nas something like:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct sockaddr\n{ <br>\nsa_family_t sa_family; <br>\nchar sa_data[14]; <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The only\npurpose of this structure is to cast the structure pointer\npassed in <i>addr</i> in order to avoid compiler warnings.\nSee EXAMPLES below.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\nzero is returned. On error, -1 is returned, and <i>errno</i>\nis set appropriately.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EACCES</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">The address is protected, and\nthe user is not the superuser.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>EADDRINUSE</b></p>\n\n<p style=\"margin-left:22%;\">The given address is already in\nuse.</p>\n\n<p style=\"margin-left:11%;\"><b>EADDRINUSE</b></p>\n\n<p style=\"margin-left:22%;\">(Internet domain sockets) The\nport number was specified as zero in the socket address\nstructure, but, upon attempting to bind to an ephemeral\nport, it was determined that all port numbers in the\nephemeral port range are currently in use. See the\ndiscussion of <i>/proc/sys/net/ipv4/ip_local_port_range</i>\n<a href=\"https://man.page/7/ip\">ip(7)</a>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EBADF</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>sockfd</i> is not a valid file descriptor.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The socket is already bound to an address.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>addrlen</i> is wrong, or <i>addr</i> is not a valid\naddress for this socket&rsquo;s domain.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ENOTSOCK</b></p>\n\n<p style=\"margin-left:22%;\">The file descriptor\n<i>sockfd</i> does not refer to a socket.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nerrors are specific to UNIX domain (<b>AF_UNIX</b>)\nsockets:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EACCES</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Search permission is denied on a component of the path\nprefix. (See also <a href=\"https://man.page/7/path_resolution\">path_resolution(7)</a>.)</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>EADDRNOTAVAIL</b></p>\n\n<p style=\"margin-left:22%;\">A nonexistent interface was\nrequested or the requested address was not local.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EFAULT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>addr</i> points outside the user&rsquo;s accessible\naddress space.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ELOOP</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Too many symbolic links were encountered in resolving\n<i>addr</i>.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ENAMETOOLONG</b></p>\n\n<p style=\"margin-left:22%;\"><i>addr</i> is too long.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOENT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>A component in the directory prefix of the socket\npathname does not exist.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOMEM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Insufficient kernel memory was available.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ENOTDIR</b></p>\n\n<p style=\"margin-left:22%;\">A component of the path prefix\nis not a directory.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EROFS</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>The socket inode would reside on a read-only\nfilesystem.</p> </td></tr>\n</table>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008, SVr4, 4.4BSD (<b>bind</b>() first appeared in\n4.2BSD).</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1 does\nnot require the inclusion of <i>&lt;sys/types.h&gt;</i>, and\nthis header file is not required on Linux. However, some\nhistorical (BSD) implementations required this header file,\nand portable applications are probably wise to include\nit.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For background\non the <i>socklen_t</i> type, see <a href=\"https://man.page/2/accept\">accept(2)</a>.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The transparent\nproxy options are not described.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">An example of\nthe use of <b>bind</b>() with Internet domain sockets can be\nfound in <a href=\"https://man.page/3/getaddrinfo\">getaddrinfo(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nexample shows how to bind a stream socket in the UNIX\n(<b>AF_UNIX</b>) domain, and accept connections:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#include\n&lt;sys/socket.h&gt; <br>\n#include &lt;sys/un.h&gt; <br>\n#include &lt;stdlib.h&gt; <br>\n#include &lt;stdio.h&gt; <br>\n#include &lt;string.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#define\nMY_SOCK_PATH &quot;/somepath&quot; <br>\n#define LISTEN_BACKLOG 50</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#define\nhandle_error(msg) \\ <br>\ndo { perror(msg); exit(EXIT_FAILURE); } while (0)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(int argc, char *argv[]) <br>\n{ <br>\nint sfd, cfd; <br>\nstruct sockaddr_un my_addr, peer_addr; <br>\nsocklen_t peer_addr_size;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">sfd =\nsocket(AF_UNIX, SOCK_STREAM, 0); <br>\nif (sfd == -1) <br>\nhandle_error(&quot;socket&quot;);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">memset(&amp;my_addr,\n0, sizeof(my_addr)); <br>\n/* Clear structure */ <br>\nmy_addr.sun_family = AF_UNIX; <br>\nstrncpy(my_addr.sun_path, MY_SOCK_PATH, <br>\nsizeof(my_addr.sun_path) - 1);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (bind(sfd,\n(struct sockaddr *) &amp;my_addr, <br>\nsizeof(my_addr)) == -1) <br>\nhandle_error(&quot;bind&quot;);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (listen(sfd,\nLISTEN_BACKLOG) == -1) <br>\nhandle_error(&quot;listen&quot;);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Now we can\naccept incoming connections one <br>\nat a time using accept(2) */</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">peer_addr_size\n= sizeof(peer_addr); <br>\ncfd = accept(sfd, (struct sockaddr *) &amp;peer_addr, <br>\n&amp;peer_addr_size); <br>\nif (cfd == -1) <br>\nhandle_error(&quot;accept&quot;);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Code to deal\nwith incoming connection(s)... */</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* When no\nlonger required, the socket pathname, MY_SOCK_PATH <br>\nshould be deleted using unlink(2) or remove(3) */ <br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/accept\">accept(2)</a>,\n<a href=\"https://man.page/2/connect\">connect(2)</a>, <a href=\"https://man.page/2/getsockname\">getsockname(2)</a>, <a href=\"https://man.page/2/listen\">listen(2)</a>,\n<a href=\"https://man.page/2/socket\">socket(2)</a>, <a href=\"https://man.page/3/getaddrinfo\">getaddrinfo(3)</a>,\n<a href=\"https://man.page/3/getifaddrs\">getifaddrs(3)</a>, <a href=\"https://man.page/7/ip\">ip(7)</a>, <a href=\"https://man.page/7/ipv6\">ipv6(7)</a>,\n<a href=\"https://man.page/7/path_resolution\">path_resolution(7)</a>, <a href=\"https://man.page/7/socket\">socket(7)</a>,\n<a href=\"https://man.page/7/unix\">unix(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}