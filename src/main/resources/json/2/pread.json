{"name":"pread","description":"pread, pwrite - read from or write to a file descriptor at a given offset","body":"\n\n<h1 align=\"center\">PREAD</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">pread, pwrite -\nread from or write to a file descriptor at a given\noffset</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;unistd.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ssize_t\npread(int</b> <i>fd</i><b>, void *</b><i>buf</i><b>,\nsize_t</b> <i>count</i><b>, off_t</b>\n<i>offset</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ssize_t\npwrite(int</b> <i>fd</i><b>, const void *</b><i>buf</i><b>,\nsize_t</b> <i>count</i><b>, off_t</b>\n<i>offset</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>pread</b>(),\n<b>pwrite</b>():</p>\n\n\n<p style=\"margin-left:17%;\">_XOPEN_SOURCE&nbsp;&gt;=&nbsp;500\n<br>\n|| /* Since glibc 2.12: */\n_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200809L</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>pread</b>()\nreads up to <i>count</i> bytes from file descriptor\n<i>fd</i> at offset <i>offset</i> (from the start of the\nfile) into the buffer starting at <i>buf</i>. The file\noffset is not changed.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>pwrite</b>()\nwrites up to <i>count</i> bytes from the buffer starting at\n<i>buf</i> to the file descriptor <i>fd</i> at offset\n<i>offset</i>. The file offset is not changed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The file\nreferenced by <i>fd</i> must be capable of seeking.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\n<b>pread</b>() returns the number of bytes read (a return of\nzero indicates end of file) and <b>pwrite</b>() returns the\nnumber of bytes written.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that it is\nnot an error for a successful call to transfer fewer bytes\nthan requested (see <a href=\"https://man.page/2/read\">read(2)</a> and <a href=\"https://man.page/2/write\">write(2)</a>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On error, -1 is\nreturned and <i>errno</i> is set to indicate the cause of\nthe error.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>pread</b>()\ncan fail and set <i>errno</i> to any error specified for\n<a href=\"https://man.page/2/read\">read(2)</a> or <a href=\"https://man.page/2/lseek\">lseek(2)</a>. <b>pwrite</b>() can fail\nand set <i>errno</i> to any error specified for\n<a href=\"https://man.page/2/write\">write(2)</a> or <a href=\"https://man.page/2/lseek\">lseek(2)</a>.</p>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>pread</b>() and <b>pwrite</b>() system calls were added\nto Linux in version 2.1.60; the entries in the i386 system\ncall table were added in 2.1.69. C library support\n(including emulation using <a href=\"https://man.page/2/lseek\">lseek(2)</a> on older kernels\nwithout the system calls) was added in glibc 2.1.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>pread</b>() and <b>pwrite</b>() system calls are\nespecially useful in multithreaded applications. They allow\nmultiple threads to perform I/O on the same file descriptor\nwithout being affected by changes to the file offset by\nother threads.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>C\nlibrary/kernel differences</b> <br>\nOn Linux, the underlying system calls were renamed in kernel\n2.6: <b>pread</b>() became <b>pread64</b>(), and\n<b>pwrite</b>() became <b>pwrite64</b>(). The system call\nnumbers remained the same. The glibc <b>pread</b>() and\n<b>pwrite</b>() wrapper functions transparently deal with\nthe change.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On some 32-bit\narchitectures, the calling signature for these system calls\ndiffer, for the reasons described in <a href=\"https://man.page/2/syscall\">syscall(2)</a>.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX requires\nthat opening a file with the <b>O_APPEND</b> flag should\nhave no effect on the location at which <b>pwrite</b>()\nwrites data. However, on Linux, if a file is opened with\n<b>O_APPEND</b>, <b>pwrite</b>() appends data to the end of\nthe file, regardless of the value of <i>offset</i>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/lseek\">lseek(2)</a>,\n<a href=\"https://man.page/2/read\">read(2)</a>, <a href=\"https://man.page/2/readv\">readv(2)</a>, <a href=\"https://man.page/2/write\">write(2)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}