{"name":"remap_file_pages","body":"\n\n<h1 align=\"center\">REMAP_FILE_PAGES</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">remap_file_pages\n- create a nonlinear file mapping</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#define\n_GNU_SOURCE</b> /* See feature_test_macros(7) */ <b><br>\n#include &lt;sys/mman.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nremap_file_pages(void *</b><i>addr</i><b>, size_t</b>\n<i>size</i><b>, int</b> <i>prot</i><b>, <br>\nsize_t</b> <i>pgoff</i><b>, int</b>\n<i>flags</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Note</b>:\nthis system call was marked as deprecated starting with\nLinux 3.16. In Linux 4.0, the implementation was replaced by\na slower in-kernel emulation. Those few applications that\nuse this system call should consider migrating to\nalternatives. This change was made because the kernel code\nfor this system call was complex, and it is believed to be\nlittle used or perhaps even completely unused. While it had\nsome use cases in database applications on 32-bit systems,\nthose use cases don&rsquo;t exist on 64-bit systems.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>remap_file_pages</b>() system call is used to create a\nnonlinear mapping, that is, a mapping in which the pages of\nthe file are mapped into a nonsequential order in memory.\nThe advantage of using <b>remap_file_pages</b>() over using\nrepeated calls to <a href=\"https://man.page/2/mmap\">mmap(2)</a> is that the former approach\ndoes not require the kernel to create additional VMA\n(Virtual Memory Area) data structures.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To create a\nnonlinear mapping we perform the following steps:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>1.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>Use <a href=\"https://man.page/2/mmap\">mmap(2)</a> to create a mapping (which is\ninitially linear). This mapping must be created with the\n<b>MAP_SHARED</b> flag.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>2.</p></td>\n<td width=\"1%\"></td>\n<td width=\"85%\">\n\n\n<p>Use one or more calls to <b>remap_file_pages</b>() to\nrearrange the correspondence between the pages of the\nmapping and the pages of the file. It is possible to map the\nsame page of a file into multiple locations within the\nmapped region.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>pgoff</i> and <i>size</i> arguments specify the region of\nthe file that is to be relocated within the mapping:\n<i>pgoff</i> is a file offset in units of the system page\nsize; <i>size</i> is the length of the region in bytes.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <i>addr</i>\nargument serves two purposes. First, it identifies the\nmapping whose pages we want to rearrange. Thus, <i>addr</i>\nmust be an address that falls within a region previously\nmapped by a call to <a href=\"https://man.page/2/mmap\">mmap(2)</a>. Second, <i>addr</i>\nspecifies the address at which the file pages identified by\n<i>pgoff</i> and <i>size</i> will be placed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The values\nspecified in <i>addr</i> and <i>size</i> should be multiples\nof the system page size. If they are not, then the kernel\nrounds <i>both</i> values <i>down</i> to the nearest\nmultiple of the page size.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <i>prot</i>\nargument must be specified as 0.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>flags</i> argument has the same meaning as for\n<a href=\"https://man.page/2/mmap\">mmap(2)</a>, but all flags other than <b>MAP_NONBLOCK</b>\nare ignored.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\n<b>remap_file_pages</b>() returns 0. On error, -1 is\nreturned, and <i>errno</i> is set appropriately.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\"><i>addr</i> does not refer to a\nvalid mapping created with the <b>MAP_SHARED</b> flag.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>addr</i>, <i>size</i>, <i>prot</i>, or <i>pgoff</i>\nis invalid.</p></td></tr>\n</table>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>remap_file_pages</b>() system call appeared in Linux\n2.5.46; glibc support was added in version 2.3.3.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>remap_file_pages</b>() system call is Linux-specific.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Since Linux\n2.6.23, <b>remap_file_pages</b>() creates non-linear\nmappings only on in-memory filesystems such as\n<a href=\"https://man.page/5/tmpfs\">tmpfs(5)</a>, hugetlbfs or ramfs. On filesystems with a\nbacking store, <b>remap_file_pages</b>() is not much more\nefficient than using <a href=\"https://man.page/2/mmap\">mmap(2)</a> to adjust which parts of\nthe file are mapped to which addresses.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/getpagesize\">getpagesize(2)</a>,\n<a href=\"https://man.page/2/mmap\">mmap(2)</a>, <a href=\"https://man.page/2/mmap2\">mmap2(2)</a>, <a href=\"https://man.page/2/mprotect\">mprotect(2)</a>,\n<a href=\"https://man.page/2/mremap\">mremap(2)</a>, <a href=\"https://man.page/2/msync\">msync(2)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}