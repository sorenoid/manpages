{"name":"fanotify_mark","description":"fanotify_mark - add, remove, or modify an fanotify mark on a filesystem object","body":"\n\n<h1 align=\"center\">FANOTIFY_MARK</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">fanotify_mark -\nadd, remove, or modify an fanotify mark on a filesystem\nobject</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/fanotify.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nfanotify_mark(int</b> <i>fanotify_fd</i><b>, unsigned\nint</b> <i>flags</i><b>, <br>\nuint64_t</b> <i>mask</i><b>, int</b> <i>dirfd</i><b>, const\nchar *</b><i>pathname</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For an overview\nof the fanotify API, see <a href=\"https://man.page/7/fanotify\">fanotify(7)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>fanotify_mark</b>()\nadds, removes, or modifies an fanotify mark on a filesystem\nobject. The caller must have read permission on the\nfilesystem object that is to be marked.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>fanotify_fd</i> argument is a file descriptor returned by\n<a href=\"https://man.page/2/fanotify_init\">fanotify_init(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>flags</i> is\na bit mask describing the modification to perform. It must\ninclude exactly one of the following values: <b><br>\nFAN_MARK_ADD</b></p>\n\n<p style=\"margin-left:22%;\">The events in <i>mask</i> will\nbe added to the mark mask (or to the ignore mask).\n<i>mask</i> must be nonempty or the error <b>EINVAL</b> will\noccur.</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_MARK_REMOVE</b></p>\n\n<p style=\"margin-left:22%;\">The events in argument\n<i>mask</i> will be removed from the mark mask (or from the\nignore mask). <i>mask</i> must be nonempty or the error\n<b>EINVAL</b> will occur.</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_MARK_FLUSH</b></p>\n\n<p style=\"margin-left:22%;\">Remove either all marks for\nfilesystems, all marks for mounts, or all marks for\ndirectories and files from the fanotify group. If\n<i>flags</i> contains <b>FAN_MARK_MOUNT</b>, all marks for\nmounts are removed from the group. If <i>flags</i> contains\n<b>FAN_MARK_FILESYSTEM</b>, all marks for filesystems are\nremoved from the group. Otherwise, all marks for directories\nand files are removed. No flag other than and at most one of\nthe flags <b>FAN_MARK_MOUNT</b> or\n<b>FAN_MARK_FILESYSTEM</b> can be used in conjunction with\n<b>FAN_MARK_FLUSH</b>. <i>mask</i> is ignored.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If none of the\nvalues above is specified, or more than one is specified,\nthe call fails with the error <b>EINVAL</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In addition,\nzero or more of the following values may be ORed into\n<i>flags</i>: <b><br>\nFAN_MARK_DONT_FOLLOW</b></p>\n\n<p style=\"margin-left:22%;\">If <i>pathname</i> is a\nsymbolic link, mark the link itself, rather than the file to\nwhich it refers. (By default, <b>fanotify_mark</b>()\ndereferences <i>pathname</i> if it is a symbolic link.)</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_MARK_ONLYDIR</b></p>\n\n<p style=\"margin-left:22%;\">If the filesystem object to be\nmarked is not a directory, the error <b>ENOTDIR</b> shall be\nraised.</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_MARK_MOUNT</b></p>\n\n<p style=\"margin-left:22%;\">Mark the mount point specified\nby <i>pathname</i>. If <i>pathname</i> is not itself a mount\npoint, the mount point containing <i>pathname</i> will be\nmarked. All directories, subdirectories, and the contained\nfiles of the mount point will be monitored. The events which\nrequire that filesystem objects are identified by file\nhandles, such as <b>FAN_CREATE</b>, <b>FAN_ATTRIB</b>,\n<b>FAN_MOVE</b>, and <b>FAN_DELETE_SELF</b>, cannot be\nprovided as a <i>mask</i> when <i>flags</i> contains\n<b>FAN_MARK_MOUNT</b>. Attempting to do so will result in\nthe error <b>EINVAL</b> being returned.</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_MARK_FILESYSTEM</b>\n(since Linux 4.20)</p>\n\n<p style=\"margin-left:22%;\">Mark the filesystem specified\nby <i>pathname</i>. The filesystem containing\n<i>pathname</i> will be marked. All the contained files and\ndirectories of the filesystem from any mount point will be\nmonitored.</p>\n\n\n<p style=\"margin-left:11%;\"><b>FAN_MARK_IGNORED_MASK</b></p>\n\n<p style=\"margin-left:22%;\">The events in <i>mask</i> shall\nbe added to or removed from the ignore mask.</p>\n\n\n<p style=\"margin-left:11%;\"><b>FAN_MARK_IGNORED_SURV_MODIFY</b></p>\n\n<p style=\"margin-left:22%;\">The ignore mask shall survive\nmodify events. If this flag is not set, the ignore mask is\ncleared when a modify event occurs for the ignored file or\ndirectory.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>mask</i>\ndefines which events shall be listened for (or which shall\nbe ignored). It is a bit mask composed of the following\nvalues: <b><br>\nFAN_ACCESS</b></p>\n\n<p style=\"margin-left:22%;\">Create an event when a file or\ndirectory (but see BUGS) is accessed (read).</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_MODIFY</b></p>\n\n<p style=\"margin-left:22%;\">Create an event when a file is\nmodified (write).</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_CLOSE_WRITE</b></p>\n\n<p style=\"margin-left:22%;\">Create an event when a writable\nfile is closed.</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_CLOSE_NOWRITE</b></p>\n\n<p style=\"margin-left:22%;\">Create an event when a\nread-only file or directory is closed.</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_OPEN</b></p>\n\n<p style=\"margin-left:22%;\">Create an event when a file or\ndirectory is opened.</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_OPEN_EXEC</b> (since\nLinux 5.0)</p>\n\n<p style=\"margin-left:22%;\">Create an event when a file is\nopened with the intent to be executed. See NOTES for\nadditional details.</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_ATTRIB</b> (since Linux\n5.1)</p>\n\n<p style=\"margin-left:22%;\">Create an event when the\nmetadata for a file or directory has changed. An fanotify\ngroup that identifies filesystem objects by file handles is\nrequired.</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_CREATE</b> (since Linux\n5.1)</p>\n\n<p style=\"margin-left:22%;\">Create an event when a file or\ndirectory has been created in a marked parent directory. An\nfanotify group that identifies filesystem objects by file\nhandles is required.</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_DELETE</b> (since Linux\n5.1)</p>\n\n<p style=\"margin-left:22%;\">Create an event when a file or\ndirectory has been deleted in a marked parent directory. An\nfanotify group that identifies filesystem objects by file\nhandles is required.</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_DELETE_SELF</b> (since\nLinux 5.1)</p>\n\n<p style=\"margin-left:22%;\">Create an event when a marked\nfile or directory itself is deleted. An fanotify group that\nidentifies filesystem objects by file handles is\nrequired.</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_MOVED_FROM</b> (since\nLinux 5.1)</p>\n\n<p style=\"margin-left:22%;\">Create an event when a file or\ndirectory has been moved from a marked parent directory. An\nfanotify group that identifies filesystem objects by file\nhandles is required.</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_MOVED_TO</b> (since\nLinux 5.1)</p>\n\n<p style=\"margin-left:22%;\">Create an event when a file or\ndirectory has been moved to a marked parent directory. An\nfanotify group that identifies filesystem objects by file\nhandles is required.</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_MOVE_SELF</b> (since\nLinux 5.1)</p>\n\n<p style=\"margin-left:22%;\">Create an event when a marked\nfile or directory itself has been moved. An fanotify group\nthat identifies filesystem objects by file handles is\nrequired.</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_OPEN_PERM</b></p>\n\n<p style=\"margin-left:22%;\">Create an event when a\npermission to open a file or directory is requested. An\nfanotify file descriptor created with\n<b>FAN_CLASS_PRE_CONTENT</b> or <b>FAN_CLASS_CONTENT</b> is\nrequired.</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_OPEN_EXEC_PERM</b>\n(since Linux 5.0)</p>\n\n<p style=\"margin-left:22%;\">Create an event when a\npermission to open a file for execution is requested. An\nfanotify file descriptor created with\n<b>FAN_CLASS_PRE_CONTENT</b> or <b>FAN_CLASS_CONTENT</b> is\nrequired. See NOTES for additional details.</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_ACCESS_PERM</b></p>\n\n<p style=\"margin-left:22%;\">Create an event when a\npermission to read a file or directory is requested. An\nfanotify file descriptor created with\n<b>FAN_CLASS_PRE_CONTENT</b> or <b>FAN_CLASS_CONTENT</b> is\nrequired.</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_ONDIR</b></p>\n\n<p style=\"margin-left:22%;\">Create events for\ndirectories&mdash;for example, when <a href=\"https://man.page/3/opendir\">opendir(3)</a>,\n<a href=\"https://man.page/3/readdir\">readdir(3)</a> (but see BUGS), and <a href=\"https://man.page/3/closedir\">closedir(3)</a> are\ncalled. Without this flag, events are created only for\nfiles. In the context of directory entry events, such as\n<b>FAN_CREATE</b>, <b>FAN_DELETE</b>, <b>FAN_MOVED_FROM</b>,\nand <b>FAN_MOVED_TO</b>, specifying the flag\n<b>FAN_ONDIR</b> is required in order to create events when\nsubdirectory entries are modified (i.e., <a href=\"https://man.page/2/mkdir\">mkdir(2)</a>/\n<a href=\"https://man.page/2/rmdir\">rmdir(2)</a>).</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_EVENT_ON_CHILD</b></p>\n\n<p style=\"margin-left:22%;\">Events for the immediate\nchildren of marked directories shall be created. The flag\nhas no effect when marking mounts and filesystems. Note that\nevents are not generated for children of the subdirectories\nof marked directories. More specifically, the directory\nentry modification events <b>FAN_CREATE</b>,\n<b>FAN_DELETE</b>, <b>FAN_MOVED_FROM</b>, and\n<b>FAN_MOVED_TO</b> are not generated for any entry\nmodifications performed inside subdirectories of marked\ndirectories. Note that the events <b>FAN_DELETE_SELF</b> and\n<b>FAN_MOVE_SELF</b> are not generated for children of\nmarked directories. To monitor complete directory trees it\nis necessary to mark the relevant mount or filesystem.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\ncomposed values are defined: <b><br>\nFAN_CLOSE</b></p>\n\n<p style=\"margin-left:22%;\">A file is closed\n(<b>FAN_CLOSE_WRITE</b>|<b>FAN_CLOSE_NOWRITE</b>).</p>\n\n<p style=\"margin-left:11%;\"><b>FAN_MOVE</b></p>\n\n<p style=\"margin-left:22%;\">A file or directory has been\nmoved (<b>FAN_MOVED_FROM</b>|<b>FAN_MOVED_TO</b>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The filesystem\nobject to be marked is determined by the file descriptor\n<i>dirfd</i> and the pathname specified in\n<i>pathname</i>:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>If <i>pathname</i> is NULL, <i>dirfd</i> defines the\nfilesystem object to be marked.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>If <i>pathname</i> is NULL, and <i>dirfd</i> takes the\nspecial value <b>AT_FDCWD</b>, the current working directory\nis to be marked.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>If <i>pathname</i> is absolute, it defines the\nfilesystem object to be marked, and <i>dirfd</i> is\nignored.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>If <i>pathname</i> is relative, and <i>dirfd</i> does\nnot have the value <b>AT_FDCWD</b>, then the filesystem\nobject to be marked is determined by interpreting\n<i>pathname</i> relative the directory referred to by\n<i>dirfd</i>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>If <i>pathname</i> is relative, and <i>dirfd</i> has the\nvalue <b>AT_FDCWD</b>, then the filesystem object to be\nmarked is determined by interpreting <i>pathname</i>\nrelative the current working directory.</p></td></tr>\n</table>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\n<b>fanotify_mark</b>() returns 0. On error, -1 is returned,\nand <i>errno</i> is set to indicate the error.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EBADF</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">An invalid file descriptor was\npassed in <i>fanotify_fd</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>An invalid value was passed in <i>flags</i> or\n<i>mask</i>, or <i>fanotify_fd</i> was not an fanotify file\ndescriptor.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The fanotify file descriptor was opened with\n<b>FAN_CLASS_NOTIF</b> or the fanotify group identifies\nfilesystem objects by file handles and mask contains a flag\nfor permission events (<b>FAN_OPEN_PERM</b> or\n<b>FAN_ACCESS_PERM</b>).</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENODEV</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The filesystem object indicated by <i>pathname</i> is\nnot associated with a filesystem that supports <i>fsid</i>\n(e.g., <a href=\"https://man.page/5/tmpfs\">tmpfs(5)</a>). This error can be returned only\nwith an fanotify group that identifies filesystem objects by\nfile handles.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOENT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The filesystem object indicated by <i>dirfd</i> and\n<i>pathname</i> does not exist. This error also occurs when\ntrying to remove a mark from an object which is not\nmarked.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOMEM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The necessary memory could not be allocated.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOSPC</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The number of marks exceeds the limit of 8192 and the\n<b>FAN_UNLIMITED_MARKS</b> flag was not specified when the\nfanotify file descriptor was created with\n<a href=\"https://man.page/2/fanotify_init\">fanotify_init(2)</a>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOSYS</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>This kernel does not implement <b>fanotify_mark</b>().\nThe fanotify API is available only if the kernel was\nconfigured with <b>CONFIG_FANOTIFY</b>.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ENOTDIR</b></p>\n\n<p style=\"margin-left:22%;\"><i>flags</i> contains\n<b>FAN_MARK_ONLYDIR</b>, and <i>dirfd</i> and\n<i>pathname</i> do not specify a directory.</p>\n\n<p style=\"margin-left:11%;\"><b>EOPNOTSUPP</b></p>\n\n<p style=\"margin-left:22%;\">The object indicated by\n<i>pathname</i> is associated with a filesystem that does\nnot support the encoding of file handles. This error can be\nreturned only with an fanotify group that identifies\nfilesystem objects by file handles.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EXDEV</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>The filesystem object indicated by <i>pathname</i>\nresides within a filesystem subvolume (e.g.,\n<a href=\"https://man.page/5/btrfs\">btrfs(5)</a>) which uses a different <i>fsid</i> than its\nroot superblock. This error can be returned only with an\nfanotify group that identifies filesystem objects by file\nhandles.</p> </td></tr>\n</table>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>fanotify_mark</b>()\nwas introduced in version 2.6.36 of the Linux kernel and\nenabled in version 2.6.37.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This system\ncall is Linux-specific.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>FAN_OPEN_EXEC\nand FAN_OPEN_EXEC_PERM</b> <br>\nWhen using either <b>FAN_OPEN_EXEC</b> or\n<b>FAN_OPEN_EXEC_PERM</b> within the <i>mask</i>, events of\nthese types will be returned only when the direct execution\nof a program occurs. More specifically, this means that\nevents of these types will be generated for files that are\nopened using <a href=\"https://man.page/2/execve\">execve(2)</a>, <a href=\"https://man.page/2/execveat\">execveat(2)</a>, or\n<a href=\"https://man.page/2/uselib\">uselib(2)</a>. Events of these types will not be raised\nin the situation where an interpreter is passed (or reads) a\nfile for interpretation.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Additionally,\nif a mark has also been placed on the Linux dynamic linker,\na user should also expect to receive an event for it when an\nELF object has been successfully opened using\n<a href=\"https://man.page/2/execve\">execve(2)</a> or <a href=\"https://man.page/2/execveat\">execveat(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For example, if\nthe following ELF binary were to be invoked and a\n<b>FAN_OPEN_EXEC</b> mark has been placed on /:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ /bin/echo\nfoo</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The listening\napplication in this case would receive <b>FAN_OPEN_EXEC</b>\nevents for both the ELF binary and interpreter,\nrespectively:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">/bin/echo <br>\n/lib64/ld-linux-x86-64.so.2</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nbugs were present in Linux kernels before version 3.16:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p style=\"margin-top: 1em\">If <i>flags</i> contains\n<b>FAN_MARK_FLUSH</b>, <i>dirfd</i>, and <i>pathname</i>\nmust specify a valid filesystem object, even though this\nobject is not used.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p><a href=\"https://man.page/2/readdir\">readdir(2)</a> does not generate a <b>FAN_ACCESS</b>\nevent.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>If <b>fanotify_mark</b>() is called with\n<b>FAN_MARK_FLUSH</b>, <i>flags</i> is not checked for\ninvalid values.</p></td></tr>\n</table>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/fanotify_init\">fanotify_init(2)</a>,\n<a href=\"https://man.page/7/fanotify\">fanotify(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}