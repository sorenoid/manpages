{"name":"epoll_ctl","description":"epoll_ctl -\ncontrol interface for an epoll file descriptor","body":"\n\n<h1 align=\"center\">EPOLL_CTL</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">epoll_ctl -\ncontrol interface for an epoll file descriptor</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/epoll.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nepoll_ctl(int</b> <i>epfd</i><b>, int</b> <i>op</i><b>,\nint</b> <i>fd</i><b>, struct epoll_event\n*</b><i>event</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This system\ncall is used to add, modify, or remove entries in the\ninterest list of the <a href=\"https://man.page/7/epoll\">epoll(7)</a> instance referred to by\nthe file descriptor <i>epfd</i>. It requests that the\noperation <i>op</i> be performed for the target file\ndescriptor, <i>fd</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Valid values\nfor the <i>op</i> argument are: <b><br>\nEPOLL_CTL_ADD</b></p>\n\n<p style=\"margin-left:22%;\">Add an entry to the interest\nlist of the epoll file descriptor, <i>epfd</i>. The entry\nincludes the file descriptor, <i>fd</i>, a reference to the\ncorresponding open file description (see <a href=\"https://man.page/7/epoll\">epoll(7)</a> and\n<a href=\"https://man.page/2/open\">open(2)</a>), and the settings specified in\n<i>event</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>EPOLL_CTL_MOD</b></p>\n\n<p style=\"margin-left:22%;\">Change the settings associated\nwith <i>fd</i> in the interest list to the new settings\nspecified in <i>event</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>EPOLL_CTL_DEL</b></p>\n\n<p style=\"margin-left:22%;\">Remove (deregister) the target\nfile descriptor <i>fd</i> from the interest list. The\n<i>event</i> argument is ignored and can be NULL (but see\nBUGS below).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>event</i> argument describes the object linked to the\nfile descriptor <i>fd</i>. The <i>struct epoll_event</i> is\ndefined as:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">typedef union\nepoll_data { <br>\nvoid *ptr; <br>\nint fd; <br>\nuint32_t u32; <br>\nuint64_t u64; <br>\n} epoll_data_t;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct\nepoll_event { <br>\nuint32_t events; /* Epoll events */ <br>\nepoll_data_t data; /* User data variable */ <br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <i>data</i>\nmember of the <i>epoll_event</i> structure specifies data\nthat the kernel should save and then return (via\n<a href=\"https://man.page/2/epoll_wait\">epoll_wait(2)</a>) when this file descriptor becomes\nready.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>events</i> member of the <i>epoll_event</i> structure is\na bit mask composed by ORing together zero or more of the\nfollowing available event types: <b><br>\nEPOLLIN</b></p>\n\n<p style=\"margin-left:22%;\">The associated file is\navailable for <a href=\"https://man.page/2/read\">read(2)</a> operations.</p>\n\n<p style=\"margin-left:11%;\"><b>EPOLLOUT</b></p>\n\n<p style=\"margin-left:22%;\">The associated file is\navailable for <a href=\"https://man.page/2/write\">write(2)</a> operations.</p>\n\n<p style=\"margin-left:11%;\"><b>EPOLLRDHUP</b> (since Linux\n2.6.17)</p>\n\n<p style=\"margin-left:22%;\">Stream socket peer closed\nconnection, or shut down writing half of connection. (This\nflag is especially useful for writing simple code to detect\npeer shutdown when using edge-triggered monitoring.)</p>\n\n<p style=\"margin-left:11%;\"><b>EPOLLPRI</b></p>\n\n<p style=\"margin-left:22%;\">There is an exceptional\ncondition on the file descriptor. See the discussion of\n<b>POLLPRI</b> in <a href=\"https://man.page/2/poll\">poll(2)</a>.</p>\n\n<p style=\"margin-left:11%;\"><b>EPOLLERR</b></p>\n\n<p style=\"margin-left:22%;\">Error condition happened on the\nassociated file descriptor. This event is also reported for\nthe write end of a pipe when the read end has been\nclosed.</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><a href=\"https://man.page/2/epoll_wait\">epoll_wait(2)</a>\nwill always report for this event; it is not necessary to\nset it in <i>events</i> when calling <b>epoll_ctl</b>().</p>\n\n<p style=\"margin-left:11%;\"><b>EPOLLHUP</b></p>\n\n<p style=\"margin-left:22%;\">Hang up happened on the\nassociated file descriptor.</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><a href=\"https://man.page/2/epoll_wait\">epoll_wait(2)</a>\nwill always wait for this event; it is not necessary to set\nit in <i>events</i> when calling <b>epoll_ctl</b>().</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Note that when\nreading from a channel such as a pipe or a stream socket,\nthis event merely indicates that the peer closed its end of\nthe channel. Subsequent reads from the channel will return 0\n(end of file) only after all outstanding data in the channel\nhas been consumed.</p>\n\n<p style=\"margin-left:11%;\"><b>EPOLLET</b></p>\n\n<p style=\"margin-left:22%;\">Requests edge-triggered\nnotification for the associated file descriptor. The default\nbehavior for <b>epoll</b> is level-triggered. See\n<a href=\"https://man.page/7/epoll\">epoll(7)</a> for more detailed information about\nedge-triggered and level-triggered notification.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">This flag is an\ninput flag for the <i>event.events</i> field when calling\n<b>epoll_ctl</b>(); it is never returned by\n<a href=\"https://man.page/2/epoll_wait\">epoll_wait(2)</a>.</p>\n\n<p style=\"margin-left:11%;\"><b>EPOLLONESHOT</b> (since\nLinux 2.6.2)</p>\n\n<p style=\"margin-left:22%;\">Requests one-shot notification\nfor the associated file descriptor. This means that after an\nevent notified for the file descriptor by\n<a href=\"https://man.page/2/epoll_wait\">epoll_wait(2)</a>, the file descriptor is disabled in the\ninterest list and no other events will be reported by the\n<b>epoll</b> interface. The user must call\n<b>epoll_ctl</b>() with <b>EPOLL_CTL_MOD</b> to rearm the\nfile descriptor with a new event mask.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">This flag is an\ninput flag for the <i>event.events</i> field when calling\n<b>epoll_ctl</b>(); it is never returned by\n<a href=\"https://man.page/2/epoll_wait\">epoll_wait(2)</a>.</p>\n\n<p style=\"margin-left:11%;\"><b>EPOLLWAKEUP</b> (since Linux\n3.5)</p>\n\n<p style=\"margin-left:22%;\">If <b>EPOLLONESHOT</b> and\n<b>EPOLLET</b> are clear and the process has the\n<b>CAP_BLOCK_SUSPEND</b> capability, ensure that the system\ndoes not enter &quot;suspend&quot; or &quot;hibernate&quot;\nwhile this event is pending or being processed. The event is\nconsidered as being &quot;processed&quot; from the time when\nit is returned by a call to <a href=\"https://man.page/2/epoll_wait\">epoll_wait(2)</a> until the\nnext call to <a href=\"https://man.page/2/epoll_wait\">epoll_wait(2)</a> on the same\n<a href=\"https://man.page/7/epoll\">epoll(7)</a> file descriptor, the closure of that file\ndescriptor, the removal of the event file descriptor with\n<b>EPOLL_CTL_DEL</b>, or the clearing of <b>EPOLLWAKEUP</b>\nfor the event file descriptor with <b>EPOLL_CTL_MOD</b>. See\nalso BUGS.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">This flag is an\ninput flag for the <i>event.events</i> field when calling\n<b>epoll_ctl</b>(); it is never returned by\n<a href=\"https://man.page/2/epoll_wait\">epoll_wait(2)</a>.</p>\n\n<p style=\"margin-left:11%;\"><b>EPOLLEXCLUSIVE</b> (since\nLinux 4.5)</p>\n\n<p style=\"margin-left:22%;\">Sets an exclusive wakeup mode\nfor the epoll file descriptor that is being attached to the\ntarget file descriptor, <i>fd</i>. When a wakeup event\noccurs and multiple epoll file descriptors are attached to\nthe same target file using <b>EPOLLEXCLUSIVE</b>, one or\nmore of the epoll file descriptors will receive an event\nwith <a href=\"https://man.page/2/epoll_wait\">epoll_wait(2)</a>. The default in this scenario\n(when <b>EPOLLEXCLUSIVE</b> is not set) is for all epoll\nfile descriptors to receive an event. <b>EPOLLEXCLUSIVE</b>\nis thus useful for avoiding thundering herd problems in\ncertain scenarios.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">If the same\nfile descriptor is in multiple epoll instances, some with\nthe <b>EPOLLEXCLUSIVE</b> flag, and others without, then\nevents will be provided to all epoll instances that did not\nspecify <b>EPOLLEXCLUSIVE</b>, and at least one of the epoll\ninstances that did specify <b>EPOLLEXCLUSIVE</b>.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The following\nvalues may be specified in conjunction with\n<b>EPOLLEXCLUSIVE</b>: <b>EPOLLIN</b>, <b>EPOLLOUT</b>,\n<b>EPOLLWAKEUP</b>, and <b>EPOLLET</b>. <b>EPOLLHUP</b> and\n<b>EPOLLERR</b> can also be specified, but this is not\nrequired: as usual, these events are always reported if they\noccur, regardless of whether they are specified in\n<i>events</i>. Attempts to specify other values in\n<i>events</i> yield the error <b>EINVAL</b>.</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>EPOLLEXCLUSIVE</b>\nmay be used only in an <b>EPOLL_CTL_ADD</b> operation;\nattempts to employ it with <b>EPOLL_CTL_MOD</b> yield an\nerror. If <b>EPOLLEXCLUSIVE</b> has been set using\n<b>epoll_ctl</b>(), then a subsequent <b>EPOLL_CTL_MOD</b>\non the same <i>epfd</i>,&nbsp;<i>fd</i> pair yields an\nerror. A call to <b>epoll_ctl</b>() that specifies\n<b>EPOLLEXCLUSIVE</b> in <i>events</i> and specifies the\ntarget file descriptor <i>fd</i> as an epoll instance will\nlikewise fail. The error in all of these cases is\n<b>EINVAL</b>.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The\n<b>EPOLLEXCLUSIVE</b> flag is an input flag for the\n<i>event.events</i> field when calling <b>epoll_ctl</b>();\nit is never returned by <a href=\"https://man.page/2/epoll_wait\">epoll_wait(2)</a>.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">When\nsuccessful, <b>epoll_ctl</b>() returns zero. When an error\noccurs, <b>epoll_ctl</b>() returns -1 and <i>errno</i> is\nset appropriately.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EBADF</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\"><i>epfd</i> or <i>fd</i> is not\na valid file descriptor.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EEXIST</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>op</i> was <b>EPOLL_CTL_ADD</b>, and the supplied\nfile descriptor <i>fd</i> is already registered with this\nepoll instance.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>epfd</i> is not an <b>epoll</b> file descriptor, or\n<i>fd</i> is the same as <i>epfd</i>, or the requested\noperation <i>op</i> is not supported by this interface.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>An invalid event type was specified along with\n<b>EPOLLEXCLUSIVE</b> in <i>events</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>op</i> was <b>EPOLL_CTL_MOD</b> and <i>events</i>\nincluded <b>EPOLLEXCLUSIVE</b>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>op</i> was <b>EPOLL_CTL_MOD</b> and the\n<b>EPOLLEXCLUSIVE</b> flag has previously been applied to\nthis <i>epfd</i>,&nbsp;<i>fd</i> pair.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><b>EPOLLEXCLUSIVE</b> was specified in <i>event</i> and\n<i>fd</i> refers to an epoll instance.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ELOOP</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>fd</i> refers to an epoll instance and this\n<b>EPOLL_CTL_ADD</b> operation would result in a circular\nloop of epoll instances monitoring one another or a nesting\ndepth of epoll instances greater than 5.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOENT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>op</i> was <b>EPOLL_CTL_MOD</b> or\n<b>EPOLL_CTL_DEL</b>, and <i>fd</i> is not registered with\nthis epoll instance.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOMEM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>There was insufficient memory to handle the requested\n<i>op</i> control operation.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOSPC</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The limit imposed by\n<i>/proc/sys/fs/epoll/max_user_watches</i> was encountered\nwhile trying to register (<b>EPOLL_CTL_ADD</b>) a new file\ndescriptor on an epoll instance. See <a href=\"https://man.page/7/epoll\">epoll(7)</a> for\nfurther details.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The target file <i>fd</i> does not support <b>epoll</b>.\nThis error can occur if <i>fd</i> refers to, for example, a\nregular file or a directory.</p></td></tr>\n</table>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>epoll_ctl</b>()\nwas added to the kernel in version 2.6. Library support is\nprovided in glibc starting with version 2.3.2.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>epoll_ctl</b>()\nis Linux-specific.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>epoll</b> interface supports all file descriptors that\nsupport <a href=\"https://man.page/2/poll\">poll(2)</a>.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">In kernel\nversions before 2.6.9, the <b>EPOLL_CTL_DEL</b> operation\nrequired a non-null pointer in <i>event</i>, even though\nthis argument is ignored. Since Linux 2.6.9, <i>event</i>\ncan be specified as NULL when using <b>EPOLL_CTL_DEL</b>.\nApplications that need to be portable to kernels before\n2.6.9 should specify a non-null pointer in <i>event</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<b>EPOLLWAKEUP</b> is specified in <i>flags</i>, but the\ncaller does not have the <b>CAP_BLOCK_SUSPEND</b>\ncapability, then the <b>EPOLLWAKEUP</b> flag is <i>silently\nignored</i>. This unfortunate behavior is necessary because\nno validity checks were performed on the <i>flags</i>\nargument in the original implementation, and the addition of\nthe <b>EPOLLWAKEUP</b> with a check that caused the call to\nfail if the caller did not have the <b>CAP_BLOCK_SUSPEND</b>\ncapability caused a breakage in at least one existing\nuser-space application that happened to randomly (and\nuselessly) specify this bit. A robust application should\ntherefore double check that it has the\n<b>CAP_BLOCK_SUSPEND</b> capability if attempting to use the\n<b>EPOLLWAKEUP</b> flag.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/epoll_create\">epoll_create(2)</a>,\n<a href=\"https://man.page/2/epoll_wait\">epoll_wait(2)</a>, <a href=\"https://man.page/2/poll\">poll(2)</a>, <a href=\"https://man.page/7/epoll\">epoll(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}