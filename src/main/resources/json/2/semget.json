{"name":"semget","body":"\n\n<h1 align=\"center\">SEMGET</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">semget - get a\nSystem V semaphore set identifier</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/types.h&gt; <br>\n#include &lt;sys/ipc.h&gt; <br>\n#include &lt;sys/sem.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nsemget(key_t</b> <i>key</i><b>, int</b> <i>nsems</i><b>,\nint</b> <i>semflg</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>semget</b>() system call returns the System&nbsp;V\nsemaphore set identifier associated with the argument\n<i>key</i>. It may be used either to obtain the identifier\nof a previously created semaphore set (when <i>semflg</i> is\nzero and <i>key</i> does not have the value\n<b>IPC_PRIVATE</b>), or to create a new set.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A new set of\n<i>nsems</i> semaphores is created if <i>key</i> has the\nvalue <b>IPC_PRIVATE</b> or if no existing semaphore set is\nassociated with <i>key</i> and <b>IPC_CREAT</b> is specified\nin <i>semflg</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>semflg</i> specifies both <b>IPC_CREAT</b> and\n<b>IPC_EXCL</b> and a semaphore set already exists for\n<i>key</i>, then <b>semget</b>() fails with <i>errno</i> set\nto <b>EEXIST</b>. (This is analogous to the effect of the\ncombination <b>O_CREAT | O_EXCL</b> for <a href=\"https://man.page/2/open\">open(2)</a>.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Upon creation,\nthe least significant 9 bits of the argument <i>semflg</i>\ndefine the permissions (for owner, group and others) for the\nsemaphore set. These bits have the same format, and the same\nmeaning, as the <i>mode</i> argument of <a href=\"https://man.page/2/open\">open(2)</a>\n(though the execute permissions are not meaningful for\nsemaphores, and write permissions mean permission to alter\nsemaphore values).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When creating a\nnew semaphore set, <b>semget</b>() initializes the\nset&rsquo;s associated data structure, <i>semid_ds</i> (see\n<a href=\"https://man.page/2/semctl\">semctl(2)</a>), as follows:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p><i>sem_perm.cuid</i> and <i>sem_perm.uid</i> are set to\nthe effective user ID of the calling process.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p><i>sem_perm.cgid</i> and <i>sem_perm.gid</i> are set to\nthe effective group ID of the calling process.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p>The least significant 9 bits of <i>sem_perm.mode</i> are\nset to the least significant 9 bits of <i>semflg</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p><i>sem_nsems</i> is set to the value of\n<i>nsems</i>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p><i>sem_otime</i> is set to 0.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p><i>sem_ctime</i> is set to the current time.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The argument\n<i>nsems</i> can be 0 (a don&rsquo;t care) when a semaphore\nset is not being created. Otherwise, <i>nsems</i> must be\ngreater than 0 and less than or equal to the maximum number\nof semaphores per semaphore set (<b>SEMMSL</b>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\nsemaphore set already exists, the permissions are\nverified.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">If successful,\nthe return value will be the semaphore set identifier (a\nnonnegative integer), otherwise, -1 is returned, with\n<i>errno</i> indicating the error.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On failure,\n<i>errno</i> will be set to one of the following:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EACCES</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">A semaphore set exists for\n<i>key</i>, but the calling process does not have permission\nto access the set, and does not have the\n<b>CAP_IPC_OWNER</b> capability in the user namespace that\ngoverns its IPC namespace.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EEXIST</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><b>IPC_CREAT</b> and <b>IPC_EXCL</b> were specified in\n<i>semflg</i>, but a semaphore set already exists for\n<i>key</i>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>nsems</i> is less than 0 or greater than the limit on\nthe number of semaphores per semaphore set\n(<b>SEMMSL</b>).</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>A semaphore set corresponding to <i>key</i> already\nexists, but <i>nsems</i> is larger than the number of\nsemaphores in that set.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOENT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>No semaphore set exists for <i>key</i> and <i>semflg</i>\ndid not specify <b>IPC_CREAT</b>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOMEM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>A semaphore set has to be created but the system does\nnot have enough memory for the new data structure.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOSPC</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>A semaphore set has to be created but the system limit\nfor the maximum number of semaphore sets (<b>SEMMNI</b>), or\nthe system wide maximum number of semaphores\n(<b>SEMMNS</b>), would be exceeded.</p></td></tr>\n</table>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">SVr4,\nPOSIX.1-2001.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The inclusion\nof <i>&lt;sys/types.h&gt;</i> and <i>&lt;sys/ipc.h&gt;</i>\nisn&rsquo;t required on Linux or by any version of POSIX.\nHowever, some old implementations required the inclusion of\nthese header files, and the SVID also documented their\ninclusion. Applications intended to be portable to such old\nsystems may need to include these header files.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>IPC_PRIVATE</b>\nisn&rsquo;t a flag field but a <i>key_t</i> type. If this\nspecial value is used for <i>key</i>, the system call\nignores all but the least significant 9 bits of\n<i>semflg</i> and creates a new semaphore set (on\nsuccess).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Semaphore\ninitialization</b> <br>\nThe values of the semaphores in a newly created set are\nindeterminate. (POSIX.1-2001 and POSIX.1-2008 are explicit\non this point, although POSIX.1-2008 notes that a future\nversion of the standard may require an implementation to\ninitialize the semaphores to 0.) Although Linux, like many\nother implementations, initializes the semaphore values to\n0, a portable application cannot rely on this: it should\nexplicitly initialize the semaphores to the desired\nvalues.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Initialization\ncan be done using <a href=\"https://man.page/2/semctl\">semctl(2)</a> <b>SETVAL</b> or\n<b>SETALL</b> operation. Where multiple peers do not know\nwho will be the first to initialize the set, checking for a\nnonzero <i>sem_otime</i> in the associated data structure\nretrieved by a <a href=\"https://man.page/2/semctl\">semctl(2)</a> <b>IPC_STAT</b> operation\ncan be used to avoid races.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Semaphore\nlimits</b> <br>\nThe following limits on semaphore set resources affect the\n<b>semget</b>() call:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>SEMMNI</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">System-wide limit on the number\nof semaphore sets. On Linux systems before version 3.19, the\ndefault value for this limit was 128. Since Linux 3.19, the\ndefault value is 32,000. On Linux, this limit can be read\nand modified via the fourth field of\n<i>/proc/sys/kernel/sem</i>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>SEMMSL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Maximum number of semaphores per semaphore ID. On Linux\nsystems before version 3.19, the default value for this\nlimit was 250. Since Linux 3.19, the default value is\n32,000. On Linux, this limit can be read and modified via\nthe first field of <i>/proc/sys/kernel/sem</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>SEMMNS</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>System-wide limit on the number of semaphores: policy\ndependent (on Linux, this limit can be read and modified via\nthe second field of <i>/proc/sys/kernel/sem</i>). Note that\nthe number of semaphores system-wide is also limited by the\nproduct of <b>SEMMSL</b> and <b>SEMMNI</b>.</p></td></tr>\n</table>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The name choice\n<b>IPC_PRIVATE</b> was perhaps unfortunate, <b>IPC_NEW</b>\nwould more clearly show its function.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The program\nshown below uses <b>semget</b>() to create a new semaphore\nset or retrieve the ID of an existing set. It generates the\n<i>key</i> for <b>semget</b>() using <a href=\"https://man.page/3/ftok\">ftok(3)</a>. The\nfirst two command-line arguments are used as the\n<i>pathname</i> and <i>proj_id</i> arguments for\n<a href=\"https://man.page/3/ftok\">ftok(3)</a>. The third command-line argument is an\ninteger that specifies the <i>nsems</i> argument for\n<b>semget</b>(). Command-line options can be used to specify\nthe <b>IPC_CREAT</b> (<i>-c</i>) and <b>IPC_EXCL</b>\n(<i>-x</i>) flags for the call to <b>semget</b>(). The usage\nof this program is demonstrated below.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">We first create\ntwo files that will be used to generate keys using\n<a href=\"https://man.page/3/ftok\">ftok(3)</a>, create two semaphore sets using those files,\nand then list the sets using <a href=\"https://man.page/1/ipcs\">ipcs(1)</a>:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ <b>touch\nmykey mykey2</b> <br>\n$ <b>./t_semget -c mykey p 1</b> <br>\nID = 9 <br>\n$ <b>./t_semget -c mykey2 p 2</b> <br>\nID = 10 <br>\n$ <b>ipcs -s</b></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">------\nSemaphore Arrays -------- <br>\nkey semid owner perms nsems <br>\n0x7004136d 9 mtk 600 1 <br>\n0x70041368 10 mtk 600 2</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Next, we\ndemonstrate that when <a href=\"https://man.page/2/semctl\">semctl(2)</a> is given the same\n<i>key</i> (as generated by the same arguments to\n<a href=\"https://man.page/3/ftok\">ftok(3)</a>), it returns the ID of the already existing\nsemaphore set:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ <b>./t_semget\n-c mykey p 1</b> <br>\nID = 9</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Finally, we\ndemonstrate the kind of collision that can occur when\n<a href=\"https://man.page/3/ftok\">ftok(3)</a> is given different <i>pathname</i> arguments\nthat have the same inode number:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ <b>ln mykey\nlink</b> <br>\n$ <b>ls -i1 link mykey</b> <br>\n2233197 link <br>\n2233197 mykey <br>\n$ <b>./t_semget link p 1</b> # Generates same key as 'mykey'\n<br>\nID = 9</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Program\nsource</b> <br>\n/* t_semget.c</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Licensed under\nGNU General Public License v2 or later. <br>\n*/ <br>\n#include &lt;sys/types.h&gt; <br>\n#include &lt;sys/ipc.h&gt; <br>\n#include &lt;sys/sem.h&gt; <br>\n#include &lt;sys/stat.h&gt; <br>\n#include &lt;stdio.h&gt; <br>\n#include &lt;stdlib.h&gt; <br>\n#include &lt;unistd.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">static void\n<br>\nusage(const char *pname) <br>\n{ <br>\nfprintf(stderr, &quot;Usage: %s [-cx] pathname proj-id\nnum-sems\\n&quot;, <br>\npname); <br>\nfprintf(stderr, &quot; -c Use IPC_CREAT flag\\n&quot;); <br>\nfprintf(stderr, &quot; -x Use IPC_EXCL flag\\n&quot;); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(int argc, char *argv[]) <br>\n{ <br>\nint semid, nsems, flags, opt; <br>\nkey_t key;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">flags = 0; <br>\nwhile ((opt = getopt(argc, argv, &quot;cx&quot;)) != -1) {\n<br>\nswitch (opt) { <br>\ncase 'c': flags |= IPC_CREAT; break; <br>\ncase 'x': flags |= IPC_EXCL; break; <br>\ndefault: usage(argv[0]); <br>\n} <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (argc !=\noptind + 3) <br>\nusage(argv[0]);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">key =\nftok(argv[optind], argv[optind + 1][0]); <br>\nif (key == -1) { <br>\nperror(&quot;ftok&quot;); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">nsems =\natoi(argv[optind + 2]);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">semid =\nsemget(key, nsems, flags | 0600); <br>\nif (semid == -1) { <br>\nperror(&quot;semget&quot;); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">printf(&quot;ID\n= %d\\n&quot;, semid);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">exit(EXIT_SUCCESS);\n<br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/semctl\">semctl(2)</a>,\n<a href=\"https://man.page/2/semop\">semop(2)</a>, <a href=\"https://man.page/3/ftok\">ftok(3)</a>, <a href=\"https://man.page/7/capabilities\">capabilities(7)</a>,\n<a href=\"https://man.page/7/sem_overview\">sem_overview(7)</a>, <a href=\"https://man.page/7/sysvipc\">sysvipc(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}