{"name":"getpriority","description":"getpriority,\nsetpriority - get/set program scheduling priority","body":"\n\n<h1 align=\"center\">GETPRIORITY</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">getpriority,\nsetpriority - get/set program scheduling priority</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/time.h&gt; <br>\n#include &lt;sys/resource.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\ngetpriority(int</b> <i>which</i><b>, id_t</b>\n<i>who</i><b>); <br>\nint setpriority(int</b> <i>which</i><b>, id_t</b>\n<i>who</i><b>, int</b> <i>prio</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The scheduling\npriority of the process, process group, or user, as\nindicated by <i>which</i> and <i>who</i> is obtained with\nthe <b>getpriority</b>() call and set with the\n<b>setpriority</b>() call. The process attribute dealt with\nby these system calls is the same attribute (also known as\nthe &quot;nice&quot; value) that is dealt with by\n<a href=\"https://man.page/2/nice\">nice(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The value\n<i>which</i> is one of <b>PRIO_PROCESS</b>,\n<b>PRIO_PGRP</b>, or <b>PRIO_USER</b>, and <i>who</i> is\ninterpreted relative to <i>which</i> (a process identifier\nfor <b>PRIO_PROCESS</b>, process group identifier for\n<b>PRIO_PGRP</b>, and a user ID for <b>PRIO_USER</b>). A\nzero value for <i>who</i> denotes (respectively) the calling\nprocess, the process group of the calling process, or the\nreal user ID of the calling process.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <i>prio</i>\nargument is a value in the range -20 to 19 (but see NOTES\nbelow). with -20 being the highest priority and 19 being the\nlowest priority. Attempts to set a priority outside this\nrange are silently clamped to the range. The default\npriority is 0; lower values give a process a higher\nscheduling priority.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>getpriority</b>() call returns the highest priority\n(lowest numerical value) enjoyed by any of the specified\nprocesses. The <b>setpriority</b>() call sets the priorities\nof all of the specified processes to the specified\nvalue.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Traditionally,\nonly a privileged process could lower the nice value (i.e.,\nset a higher priority). However, since Linux 2.6.12, an\nunprivileged process can decrease the nice value of a target\nprocess that has a suitable <b>RLIMIT_NICE</b> soft limit;\nsee <a href=\"https://man.page/2/getrlimit\">getrlimit(2)</a> for details.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\n<b>getpriority</b>() returns the calling thread&rsquo;s nice\nvalue, which may be a negative number. On error, it returns\n-1 and sets <i>errno</i> to indicate the cause of the\nerror.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Since a\nsuccessful call to <b>getpriority</b>() can legitimately\nreturn the value -1, it is necessary to clear the external\nvariable <i>errno</i> prior to the call, then check\n<i>errno</i> afterward to determine if -1 is an error or a\nlegitimate value.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>setpriority</b>()\nreturns 0 on success. On error, it returns -1 and sets\n<i>errno</i> to indicate the cause of the error.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\"><i>which</i> was not one of\n<b>PRIO_PROCESS</b>, <b>PRIO_PGRP</b>, or\n<b>PRIO_USER</b>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ESRCH</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>No process was located using the <i>which</i> and\n<i>who</i> values specified.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In addition to\nthe errors indicated above, <b>setpriority</b>() may fail\nif:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EACCES</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">The caller attempted to set a\nlower nice value (i.e., a higher process priority), but did\nnot have the required privilege (on Linux: did not have the\n<b>CAP_SYS_NICE</b> capability).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>A process was located, but its effective user ID did not\nmatch either the effective or the real user ID of the\ncaller, and was not privileged (on Linux: did not have the\n<b>CAP_SYS_NICE</b> capability). But see NOTES below.</p></td></tr>\n</table>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008, SVr4, 4.4BSD (these interfaces first appeared\nin 4.2BSD).</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For further\ndetails on the nice value, see <a href=\"https://man.page/7/sched\">sched(7)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Note</i>:\nthe addition of the &quot;autogroup&quot; feature in Linux\n2.6.38 means that the nice value no longer has its\ntraditional effect in many circumstances. For details, see\n<a href=\"https://man.page/7/sched\">sched(7)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A child created\nby <a href=\"https://man.page/2/fork\">fork(2)</a> inherits its parent&rsquo;s nice value.\nThe nice value is preserved across <a href=\"https://man.page/2/execve\">execve(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The details on\nthe condition for <b>EPERM</b> depend on the system. The\nabove description is what POSIX.1-2001 says, and seems to be\nfollowed on all System&nbsp;V-like systems. Linux kernels\nbefore 2.6.12 required the real or effective user ID of the\ncaller to match the real user of the process <i>who</i>\n(instead of its effective user ID). Linux 2.6.12 and later\nrequire the effective user ID of the caller to match the\nreal or effective user ID of the process <i>who</i>. All\nBSD-like systems (SunOS 4.1.3, Ultrix 4.2, 4.3BSD, FreeBSD\n4.3, OpenBSD-2.5, ...) behave in the same manner as Linux\n2.6.12 and later.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Including\n<i>&lt;sys/time.h&gt;</i> is not required these days, but\nincreases portability. (Indeed,\n<i>&lt;sys/resource.h&gt;</i> defines the <i>rusage</i>\nstructure with fields of type <i>struct timeval</i> defined\nin <i>&lt;sys/time.h&gt;</i>.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>C\nlibrary/kernel differences</b> <br>\nWithin the kernel, nice values are actually represented\nusing the range 40..1 (since negative numbers are error\ncodes) and these are the values employed by the\n<b>setpriority</b>() and <b>getpriority</b>() system calls.\nThe glibc wrapper functions for these system calls handle\nthe translations between the user-land and kernel\nrepresentations of the nice value according to the formula\n<i>unice&nbsp;=&nbsp;20&nbsp;-&nbsp;knice</i>. (Thus, the\nkernel&rsquo;s 40..1 range corresponds to the range -20..19\nas seen by user space.)</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">According to\nPOSIX, the nice value is a per-process setting. However,\nunder the current Linux/NPTL implementation of POSIX\nthreads, the nice value is a per-thread attribute: different\nthreads in the same process can have different nice values.\nPortable applications should avoid relying on the Linux\nbehavior, which may be made standards conformant in the\nfuture.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/nice\">nice(1)</a>,\n<a href=\"https://man.page/1/renice\">renice(1)</a>, <a href=\"https://man.page/2/fork\">fork(2)</a>, <a href=\"https://man.page/7/capabilities\">capabilities(7)</a>,\n<a href=\"https://man.page/7/sched\">sched(7)</a></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Documentation/scheduler/sched-nice-design.txt</i>\nin the Linux kernel source tree (since Linux 2.6.23)</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}