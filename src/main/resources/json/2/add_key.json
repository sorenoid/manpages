{"name":"add_key","description":"add_key - add a\nkey to the kernel&rsquo;s key management facility","body":"\n\n<h1 align=\"center\">ADD_KEY</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">add_key - add a\nkey to the kernel&rsquo;s key management facility</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/types.h&gt; <br>\n#include &lt;keyutils.h&gt;</b></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>key_serial_t\nadd_key(const char *</b><i>type</i><b>, const char\n*</b><i>description</i><b>, <br>\nconst void *</b><i>payload</i><b>, size_t</b>\n<i>plen</i><b>, <br>\nkey_serial_t</b> <i>keyring</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">No glibc\nwrapper is provided for this system call; see NOTES.</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>add_key</b>()\ncreates or updates a key of the given <i>type</i> and\n<i>description</i>, instantiates it with the <i>payload</i>\nof length <i>plen</i>, attaches it to the nominated\n<i>keyring</i>, and returns the key&rsquo;s serial\nnumber.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The key may be\nrejected if the provided data is in the wrong format or it\nis invalid in some other way.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\ndestination <i>keyring</i> already contains a key that\nmatches the specified <i>type</i> and <i>description</i>,\nthen, if the key type supports it, that key will be updated\nrather than a new key being created; if not, a new key (with\na different ID) will be created and it will displace the\nlink to the extant key from the keyring.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The destination\n<i>keyring</i> serial number may be that of a valid keyring\nfor which the caller has <i>write</i> permission.\nAlternatively, it may be one of the following special\nkeyring IDs: <b><br>\nKEY_SPEC_THREAD_KEYRING</b></p>\n\n<p style=\"margin-left:22%;\">This specifies the\ncaller&rsquo;s thread-specific keyring\n(<a href=\"https://man.page/7/thread-keyring\">thread-keyring(7)</a>).</p>\n\n\n<p style=\"margin-left:11%;\"><b>KEY_SPEC_PROCESS_KEYRING</b></p>\n\n<p style=\"margin-left:22%;\">This specifies the\ncaller&rsquo;s process-specific keyring\n(<a href=\"https://man.page/7/process-keyring\">process-keyring(7)</a>).</p>\n\n\n<p style=\"margin-left:11%;\"><b>KEY_SPEC_SESSION_KEYRING</b></p>\n\n<p style=\"margin-left:22%;\">This specifies the\ncaller&rsquo;s session-specific keyring\n(<a href=\"https://man.page/7/session-keyring\">session-keyring(7)</a>).</p>\n\n\n<p style=\"margin-left:11%;\"><b>KEY_SPEC_USER_KEYRING</b></p>\n\n<p style=\"margin-left:22%;\">This specifies the\ncaller&rsquo;s UID-specific keyring\n(<a href=\"https://man.page/7/user-keyring\">user-keyring(7)</a>).</p>\n\n\n<p style=\"margin-left:11%;\"><b>KEY_SPEC_USER_SESSION_KEYRING</b></p>\n\n<p style=\"margin-left:22%;\">This specifies the\ncaller&rsquo;s UID-session keyring\n(<a href=\"https://man.page/7/user-session-keyring\">user-session-keyring(7)</a>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Key\ntypes</b> <br>\nThe key <i>type</i> is a string that specifies the\nkey&rsquo;s type. Internally, the kernel defines a number of\nkey types that are available in the core key management\ncode. Among the types that are available for user-space use\nand can be specified as the <i>type</i> argument to\n<b>add_key</b>() are the following: <i><br>\n&quot;keyring&quot;</i></p>\n\n<p style=\"margin-left:22%;\">Keyrings are special key types\nthat may contain links to sequences of other keys of any\ntype. If this interface is used to create a keyring, then\n<i>payload</i> should be NULL and <i>plen</i> should be\nzero.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><i>&quot;user&quot;</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>This is a general purpose key type whose payload may be\nread and updated by user-space applications. The key is kept\nentirely within kernel memory. The payload for keys of this\ntype is a blob of arbitrary data of up to 32,767 bytes.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><i>&quot;logon&quot;</i> (since\nLinux 3.3)</p>\n\n<p style=\"margin-left:22%;\">This key type is essentially\nthe same as <i>&quot;user&quot;</i>, but it does not permit\nthe key to read. This is suitable for storing payloads that\nyou do not want to be readable from user space.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This key type\nvets the <i>description</i> to ensure that it is qualified\nby a &quot;service&quot; prefix, by checking to ensure that\nthe <i>description</i> contains a &rsquo;:&rsquo; that is\npreceded by other characters. <i><br>\n&quot;big_key&quot;</i> (since Linux 3.13)</p>\n\n<p style=\"margin-left:22%;\">This key type is similar to\n<i>&quot;user&quot;</i>, but may hold a payload of up to\n1&nbsp;MiB. If the key payload is large enough, then it may\nbe stored encrypted in tmpfs (which can be swapped out)\nrather than kernel memory.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For further\ndetails on these key types, see <a href=\"https://man.page/7/keyrings\">keyrings(7)</a>.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\n<b>add_key</b>() returns the serial number of the key it\ncreated or updated. On error, -1 is returned and\n<i>errno</i> is set to indicate the cause of the error.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EACCES</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">The keyring wasn&rsquo;t\navailable for modification by the user.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EDQUOT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The key quota for this user would be exceeded by\ncreating this key or linking it to the keyring.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EFAULT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>One or more of <i>type</i>, <i>description</i>, and\n<i>payload</i> points outside process&rsquo;s accessible\naddress space.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The size of the string (including the terminating null\nbyte) specified in <i>type</i> or <i>description</i>\nexceeded the limit (32 bytes and 4096 bytes\nrespectively).</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The payload data was invalid.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>type</i> was <i>&quot;logon&quot;</i> and the\n<i>description</i> was not qualified with a prefix string of\nthe form <i>&quot;service:&quot;</i>.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>EKEYEXPIRED</b></p>\n\n<p style=\"margin-left:22%;\">The keyring has expired.</p>\n\n<p style=\"margin-left:11%;\"><b>EKEYREVOKED</b></p>\n\n<p style=\"margin-left:22%;\">The keyring has been\nrevoked.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOKEY</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The keyring doesn&rsquo;t exist.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOMEM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Insufficient memory to create a key.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The <i>type</i> started with a period ('.'). Key types\nthat begin with a period are reserved to the\nimplementation.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EPERM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>type</i> was <i>&quot;keyring&quot;</i> and the\n<i>description</i> started with a period ('.'). Keyrings\nwith descriptions (names) that begin with a period are\nreserved to the implementation.</p></td></tr>\n</table>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This system\ncall first appeared in Linux 2.6.10.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This system\ncall is a nonstandard Linux extension.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">No wrapper for\nthis system call is provided in glibc. A wrapper is provided\nin the <i>libkeyutils</i> package. When employing the\nwrapper in that library, link with <i>-lkeyutils</i>.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The program\nbelow creates a key with the type, description, and payload\nspecified in its command-line arguments, and links that key\ninto the session keyring. The following shell session\ndemonstrates the use of the program:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ <b>./a.out\nuser mykey &quot;Some payload&quot;</b> <br>\nKey ID is 64a4dca <br>\n$ <b>grep '64a4dca' /proc/keys</b> <br>\n064a4dca I--Q--- 1 perm 3f010000 1000 1000 user mykey:\n12</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Program\nsource</b> <br>\n#include &lt;sys/types.h&gt; <br>\n#include &lt;keyutils.h&gt; <br>\n#include &lt;stdint.h&gt; <br>\n#include &lt;stdio.h&gt; <br>\n#include &lt;stdlib.h&gt; <br>\n#include &lt;string.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(int argc, char *argv[]) <br>\n{ <br>\nkey_serial_t key;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (argc != 4)\n{ <br>\nfprintf(stderr, &quot;Usage: %s type description\npayload\\n&quot;, <br>\nargv[0]); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">key =\nadd_key(argv[1], argv[2], argv[3], strlen(argv[3]), <br>\nKEY_SPEC_SESSION_KEYRING); <br>\nif (key == -1) { <br>\nperror(&quot;add_key&quot;); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">printf(&quot;Key\nID is %jx\\n&quot;, (uintmax_t) key);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">exit(EXIT_SUCCESS);\n<br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/keyctl\">keyctl(1)</a>,\n<a href=\"https://man.page/2/keyctl\">keyctl(2)</a>, <a href=\"https://man.page/2/request_key\">request_key(2)</a>, <a href=\"https://man.page/3/keyctl\">keyctl(3)</a>,\n<a href=\"https://man.page/7/keyrings\">keyrings(7)</a>, <a href=\"https://man.page/7/keyutils\">keyutils(7)</a>,\n<a href=\"https://man.page/7/persistent-keyring\">persistent-keyring(7)</a>, <a href=\"https://man.page/7/process-keyring\">process-keyring(7)</a>,\n<a href=\"https://man.page/7/session-keyring\">session-keyring(7)</a>, <a href=\"https://man.page/7/thread-keyring\">thread-keyring(7)</a>,\n<a href=\"https://man.page/7/user-keyring\">user-keyring(7)</a>, <a href=\"https://man.page/7/user-session-keyring\">user-session-keyring(7)</a></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The kernel\nsource files <i>Documentation/security/keys/core.rst</i> and\n<i>Documentation/keys/request-key.rst</i> (or, before Linux\n4.13, in the files <i>Documentation/security/keys.txt</i>\nand <i>Documentation/security/keys-request-key.txt</i>).</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}