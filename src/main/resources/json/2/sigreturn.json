{"name":"sigreturn","description":"sigreturn,\nrt_sigreturn - return from signal handler and cleanup stack\nframe","body":"\n\n<h1 align=\"center\">SIGRETURN</h1>\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">sigreturn,\nrt_sigreturn - return from signal handler and cleanup stack\nframe</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nsigreturn(...);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the Linux\nkernel determines that an unblocked signal is pending for a\nprocess, then, at the next transition back to user mode in\nthat process (e.g., upon return from a system call or when\nthe process is rescheduled onto the CPU), it creates a new\nframe on the user-space stack where it saves various pieces\nof process context (processor status word, registers, signal\nmask, and signal stack settings).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The kernel also\narranges that, during the transition back to user mode, the\nsignal handler is called, and that, upon return from the\nhandler, control passes to a piece of user-space code\ncommonly called the &quot;signal trampoline&quot;. The\nsignal trampoline code in turn calls <b>sigreturn</b>().</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This\n<b>sigreturn</b>() call undoes everything that was\ndone&mdash;changing the process&rsquo;s signal mask,\nswitching signal stacks (see <a href=\"https://man.page/2/sigaltstack\">sigaltstack(2)</a>)&mdash;in\norder to invoke the signal handler. Using the information\nthat was earlier saved on the user-space stack\n<b>sigreturn</b>() restores the process&rsquo;s signal mask,\nswitches stacks, and restores the process&rsquo;s context\n(processor flags and registers, including the stack pointer\nand instruction pointer), so that the process resumes\nexecution at the point where it was interrupted by the\nsignal.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>sigreturn</b>()\nnever returns.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Many UNIX-type\nsystems have a <b>sigreturn</b>() system call or near\nequivalent. However, this call is not specified in POSIX,\nand details of its behavior vary across systems.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>sigreturn</b>()\nexists only to allow the implementation of signal handlers.\nIt should <b>never</b> be called directly. (Indeed, a simple\n<b>sigreturn</b>() wrapper in the GNU C library simply\nreturns -1, with <i>errno</i> set to <b>ENOSYS</b>.) Details\nof the arguments (if any) passed to <b>sigreturn</b>() vary\ndepending on the architecture. (On some architectures, such\nas x86-64, <b>sigreturn</b>() takes no arguments, since all\nof the information that it requires is available in the\nstack frame that was previously created by the kernel on the\nuser-space stack.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Once upon a\ntime, UNIX systems placed the signal trampoline code onto\nthe user stack. Nowadays, pages of the user stack are\nprotected so as to disallow code execution. Thus, on\ncontemporary Linux systems, depending on the architecture,\nthe signal trampoline code lives either in the\n<a href=\"https://man.page/7/vdso\">vdso(7)</a> or in the C library. In the latter case, the\nC library&rsquo;s <a href=\"https://man.page/2/sigaction\">sigaction(2)</a> wrapper function\ninforms the kernel of the location of the trampoline code by\nplacing its address in the <i>sa_restorer</i> field of the\n<i>sigaction</i> structure, and sets the <b>SA_RESTORER</b>\nflag in the <i>sa_flags</i> field.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The saved\nprocess context information is placed in a <i>ucontext_t</i>\nstructure (see <i>&lt;sys/ucontext.h&gt;</i>). That\nstructure is visible within the signal handler as the third\nargument of a handler established via <a href=\"https://man.page/2/sigaction\">sigaction(2)</a>\nwith the <b>SA_SIGINFO</b> flag.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On some other\nUNIX systems, the operation of the signal trampoline differs\na little. In particular, on some systems, upon transitioning\nback to user mode, the kernel passes control to the\ntrampoline (rather than the signal handler), and the\ntrampoline code calls the signal handler (and then calls\n<b>sigreturn</b>() once the handler returns).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>C\nlibrary/kernel differences</b> <br>\nThe original Linux system call was named <b>sigreturn</b>().\nHowever, with the addition of real-time signals in Linux\n2.2, a new system call, <b>rt_sigreturn</b>() was added to\nsupport an enlarged <i>sigset_t</i> type. The GNU C library\nhides these details from us, transparently employing\n<b>rt_sigreturn</b>() when the kernel provides it.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/kill\">kill(2)</a>,\n<a href=\"https://man.page/2/restart_syscall\">restart_syscall(2)</a>, <a href=\"https://man.page/2/sigaltstack\">sigaltstack(2)</a>,\n<a href=\"https://man.page/2/signal\">signal(2)</a>, <a href=\"https://man.page/3/getcontext\">getcontext(3)</a>, <a href=\"https://man.page/7/signal\">signal(7)</a>,\n<a href=\"https://man.page/7/vdso\">vdso(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}