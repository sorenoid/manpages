{"name":"ioctl","description":"ioctl - control device","body":"\n\n<h1 align=\"center\">IOCTL</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">ioctl - control\ndevice</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/ioctl.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nioctl(int</b> <i>fd</i><b>, unsigned long</b>\n<i>request</i><b>, ...);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>ioctl</b>() system call manipulates the underlying device\nparameters of special files. In particular, many operating\ncharacteristics of character special files (e.g., terminals)\nmay be controlled with <b>ioctl</b>() requests. The argument\n<i>fd</i> must be an open file descriptor.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The second\nargument is a device-dependent request code. The third\nargument is an untyped pointer to memory. It&rsquo;s\ntraditionally <b>char *</b><i>argp</i> (from the days before\n<b>void *</b> was valid C), and will be so named for this\ndiscussion.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">An\n<b>ioctl</b>() <i>request</i> has encoded in it whether the\nargument is an <i>in</i> parameter or <i>out</i> parameter,\nand the size of the argument <i>argp</i> in bytes. Macros\nand defines used in specifying an <b>ioctl</b>()\n<i>request</i> are located in the file\n<i>&lt;sys/ioctl.h&gt;</i>. See NOTES.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Usually, on\nsuccess zero is returned. A few <b>ioctl</b>() requests use\nthe return value as an output parameter and return a\nnonnegative value on success. On error, -1 is returned, and\n<i>errno</i> is set appropriately.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EBADF</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\"><i>fd</i> is not a valid file\ndescriptor.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EFAULT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>argp</i> references an inaccessible memory area.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>request</i> or <i>argp</i> is not valid.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOTTY</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>fd</i> is not associated with a character special\ndevice.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOTTY</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The specified request does not apply to the kind of\nobject that the file descriptor <i>fd</i> references.</p></td></tr>\n</table>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">No single\nstandard. Arguments, returns, and semantics of\n<b>ioctl</b>() vary according to the device driver in\nquestion (the call is used as a catch-all for operations\nthat don&rsquo;t cleanly fit the UNIX stream I/O model).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>ioctl</b>() system call appeared in Version 7 AT&amp;T\nUNIX.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">In order to use\nthis call, one needs an open file descriptor. Often the\n<a href=\"https://man.page/2/open\">open(2)</a> call has unwanted side effects, that can be\navoided under Linux by giving it the <b>O_NONBLOCK</b>\nflag.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ioctl\nstructure</b> <br>\nIoctl command values are 32-bit constants. In principle\nthese constants are completely arbitrary, but people have\ntried to build some structure into them.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The old Linux\nsituation was that of mostly 16-bit constants, where the\nlast byte is a serial number, and the preceding byte(s) give\na type indicating the driver. Sometimes the major number was\nused: 0x03 for the <b>HDIO_*</b> ioctls, 0x06 for the\n<b>LP*</b> ioctls. And sometimes one or more ASCII letters\nwere used. For example, <b>TCGETS</b> has value 0x00005401,\nwith 0x54 = 'T' indicating the terminal driver, and\n<b>CYGETTIMEOUT</b> has value 0x00435906, with 0x43 0x59 =\n'C' 'Y' indicating the cyclades driver.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Later (0.98p5)\nsome more information was built into the number. One has 2\ndirection bits (00: none, 01: write, 10: read, 11:\nread/write) followed by 14 size bits (giving the size of the\nargument), followed by an 8-bit type (collecting the ioctls\nin groups for a common purpose or a common driver), and an\n8-bit serial number.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The macros\ndescribing this structure live in <i>&lt;asm/ioctl.h&gt;</i>\nand are <b>_IO(type,nr)</b> and\n<b>{_IOR,_IOW,_IOWR}(type,nr,size)</b>. They use\n<i>sizeof(size)</i> so that size is a misnomer here: this\nthird argument is a data type.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that the\nsize bits are very unreliable: in lots of cases they are\nwrong, either because of buggy macros using\n<i>sizeof(sizeof(struct))</i>, or because of legacy\nvalues.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Thus, it seems\nthat the new structure only gave disadvantages: it does not\nhelp in checking, but it causes varying values for the\nvarious architectures.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/execve\">execve(2)</a>,\n<a href=\"https://man.page/2/fcntl\">fcntl(2)</a>, <a href=\"https://man.page/2/ioctl_console\">ioctl_console(2)</a>,\n<a href=\"https://man.page/2/ioctl_fat\">ioctl_fat(2)</a>, <a href=\"https://man.page/2/ioctl_ficlonerange\">ioctl_ficlonerange(2)</a>,\n<a href=\"https://man.page/2/ioctl_fideduperange\">ioctl_fideduperange(2)</a>, <a href=\"https://man.page/2/ioctl_fslabel\">ioctl_fslabel(2)</a>,\n<a href=\"https://man.page/2/ioctl_getfsmap\">ioctl_getfsmap(2)</a>, <a href=\"https://man.page/2/ioctl_iflags\">ioctl_iflags(2)</a>,\n<a href=\"https://man.page/2/ioctl_ns\">ioctl_ns(2)</a>, <a href=\"https://man.page/2/ioctl_tty\">ioctl_tty(2)</a>,\n<a href=\"https://man.page/2/ioctl_userfaultfd\">ioctl_userfaultfd(2)</a>, <a href=\"https://man.page/2/open\">open(2)</a>, <a href=\"https://man.page/4/sd\">sd(4)</a>,\n<a href=\"https://man.page/4/tty\">tty(4)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}