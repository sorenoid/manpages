{"name":"readlink","description":"readlink,\nreadlinkat - read value of a symbolic link","body":"\n\n<h1 align=\"center\">READLINK</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">readlink,\nreadlinkat - read value of a symbolic link</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;unistd.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ssize_t\nreadlink(const char *</b><i>pathname</i><b>, char\n*</b><i>buf</i><b>, size_t</b> <i>bufsiz</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;fcntl.h&gt;</b> /* Definition of AT_* constants */\n<b><br>\n#include &lt;unistd.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ssize_t\nreadlinkat(int</b> <i>dirfd</i><b>, const char\n*</b><i>pathname</i><b>, <br>\nchar *</b><i>buf</i><b>, size_t</b>\n<i>bufsiz</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>readlink</b>():</p>\n\n\n<p style=\"margin-left:17%;\">_XOPEN_SOURCE&nbsp;&gt;=&nbsp;500\n|| _POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200112L <br>\n|| /* Glibc versions &lt;= 2.19: */ _BSD_SOURCE</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>readlinkat</b>():</p>\n\n<p style=\"margin-left:17%;\">Since glibc 2.10:</p>\n\n\n<p style=\"margin-left:23%;\">_POSIX_C_SOURCE&nbsp;&gt;=&nbsp;200809L</p>\n\n<p style=\"margin-left:17%;\">Before glibc 2.10:</p>\n\n<p style=\"margin-left:23%;\">_ATFILE_SOURCE</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>readlink</b>()\nplaces the contents of the symbolic link <i>pathname</i> in\nthe buffer <i>buf</i>, which has size <i>bufsiz</i>.\n<b>readlink</b>() does not append a null byte to <i>buf</i>.\nIt will (silently) truncate the contents (to a length of\n<i>bufsiz</i> characters), in case the buffer is too small\nto hold all of the contents.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>readlinkat()</b>\n<br>\nThe <b>readlinkat</b>() system call operates in exactly the\nsame way as <b>readlink</b>(), except for the differences\ndescribed here.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the pathname\ngiven in <i>pathname</i> is relative, then it is interpreted\nrelative to the directory referred to by the file descriptor\n<i>dirfd</i> (rather than relative to the current working\ndirectory of the calling process, as is done by\n<b>readlink</b>() for a relative pathname).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>pathname</i> is relative and <i>dirfd</i> is the special\nvalue <b>AT_FDCWD</b>, then <i>pathname</i> is interpreted\nrelative to the current working directory of the calling\nprocess (like <b>readlink</b>()).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>pathname</i> is absolute, then <i>dirfd</i> is\nignored.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Since Linux\n2.6.39, <i>pathname</i> can be an empty string, in which\ncase the call operates on the symbolic link referred to by\n<i>dirfd</i> (which should have been obtained using\n<a href=\"https://man.page/2/open\">open(2)</a> with the <b>O_PATH</b> and <b>O_NOFOLLOW</b>\nflags).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See\n<a href=\"https://man.page/2/openat\">openat(2)</a> for an explanation of the need for\n<b>readlinkat</b>().</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\nthese calls return the number of bytes placed in <i>buf</i>.\n(If the returned value equals <i>bufsiz</i>, then truncation\nmay have occurred.) On error, -1 is returned and\n<i>errno</i> is set to indicate the error.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EACCES</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">Search permission is denied for\na component of the path prefix. (See also\n<a href=\"https://man.page/7/path_resolution\">path_resolution(7)</a>.)</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EFAULT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>buf</i> extends outside the process&rsquo;s allocated\naddress space.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><i>bufsiz</i> is not positive.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The named file (i.e., the final filename component of\n<i>pathname</i>) is not a symbolic link.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EIO</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>An I/O error occurred while reading from the\nfilesystem.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ELOOP</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Too many symbolic links were encountered in translating\nthe pathname.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ENAMETOOLONG</b></p>\n\n<p style=\"margin-left:22%;\">A pathname, or a component of a\npathname, was too long.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOENT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"63%\">\n\n\n<p>The named file does not exist.</p></td>\n<td width=\"15%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ENOMEM</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"63%\">\n\n\n<p>Insufficient kernel memory was available.</p></td>\n<td width=\"15%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ENOTDIR</b></p>\n\n<p style=\"margin-left:22%;\">A component of the path prefix\nis not a directory.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nadditional errors can occur for <b>readlinkat</b>():</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>EBADF</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"56%\">\n\n\n<p><i>dirfd</i> is not a valid file descriptor.</p></td>\n<td width=\"22%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ENOTDIR</b></p>\n\n<p style=\"margin-left:22%;\"><i>pathname</i> is relative and\n<i>dirfd</i> is a file descriptor referring to a file other\nthan a directory.</p>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>readlinkat</b>()\nwas added to Linux in kernel 2.6.16; library support was\nadded to glibc in version 2.4.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>readlink</b>():\n4.4BSD (<b>readlink</b>() first appeared in 4.2BSD),\nPOSIX.1-2001, POSIX.1-2008.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>readlinkat</b>():\nPOSIX.1-2008.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">In versions of\nglibc up to and including glibc 2.4, the return type of\n<b>readlink</b>() was declared as <i>int</i>. Nowadays, the\nreturn type is declared as <i>ssize_t</i>, as (newly)\nrequired in POSIX.1-2001.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Using a\nstatically sized buffer might not provide enough room for\nthe symbolic link contents. The required size for the buffer\ncan be obtained from the <i>stat.st_size</i> value returned\nby a call to <a href=\"https://man.page/2/lstat\">lstat(2)</a> on the link. However, the\nnumber of bytes written by <b>readlink</b>() and\n<b>readlinkat</b>() should be checked to make sure that the\nsize of the symbolic link did not increase between the\ncalls. Dynamically allocating the buffer for\n<b>readlink</b>() and <b>readlinkat</b>() also addresses a\ncommon portability problem when using <b>PATH_MAX</b> for\nthe buffer size, as this constant is not guaranteed to be\ndefined per POSIX if the system does not have such\nlimit.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Glibc\nnotes</b> <br>\nOn older kernels where <b>readlinkat</b>() is unavailable,\nthe glibc wrapper function falls back to the use of\n<b>readlink</b>(). When <i>pathname</i> is a relative\npathname, glibc constructs a pathname based on the symbolic\nlink in <i>/proc/self/fd</i> that corresponds to the\n<i>dirfd</i> argument.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nprogram allocates the buffer needed by <b>readlink</b>()\ndynamically from the information provided by\n<a href=\"https://man.page/2/lstat\">lstat(2)</a>, falling back to a buffer of size\n<b>PATH_MAX</b> in cases where <a href=\"https://man.page/2/lstat\">lstat(2)</a> reports a\nsize of zero.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#include\n&lt;sys/types.h&gt; <br>\n#include &lt;sys/stat.h&gt; <br>\n#include &lt;limits.h&gt; <br>\n#include &lt;stdio.h&gt; <br>\n#include &lt;stdlib.h&gt; <br>\n#include &lt;unistd.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(int argc, char *argv[]) <br>\n{ <br>\nstruct stat sb; <br>\nchar *buf; <br>\nssize_t nbytes, bufsiz;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (argc != 2)\n{ <br>\nfprintf(stderr, &quot;Usage: %s &lt;pathname&gt;\\n&quot;,\nargv[0]); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if\n(lstat(argv[1], &amp;sb) == -1) { <br>\nperror(&quot;lstat&quot;); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Add one to\nthe link size, so that we can determine whether <br>\nthe buffer returned by readlink() was truncated. */</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">bufsiz =\nsb.st_size + 1;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Some magic\nsymlinks under (for example) /proc and /sys <br>\nreport 'st_size' as zero. In that case, take PATH_MAX as\n<br>\na &quot;good enough&quot; estimate. */</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (sb.st_size\n== 0) <br>\nbufsiz = PATH_MAX;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">buf =\nmalloc(bufsiz); <br>\nif (buf == NULL) { <br>\nperror(&quot;malloc&quot;); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">nbytes =\nreadlink(argv[1], buf, bufsiz); <br>\nif (nbytes == -1) { <br>\nperror(&quot;readlink&quot;); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">printf(&quot;'%s'\npoints to '%.*s'\\n&quot;, argv[1], (int) nbytes, buf);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* If the\nreturn value was equal to the buffer size, then the <br>\nthe link target was larger than expected (perhaps because\nthe <br>\ntarget was changed between the call to lstat() and the call\nto <br>\nreadlink()). Warn the user that the returned target may have\n<br>\nbeen truncated. */</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (nbytes ==\nbufsiz) <br>\nprintf(&quot;(Returned buffer may have been\ntruncated)\\n&quot;);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">free(buf); <br>\nexit(EXIT_SUCCESS); <br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/readlink\">readlink(1)</a>,\n<a href=\"https://man.page/2/lstat\">lstat(2)</a>, <a href=\"https://man.page/2/stat\">stat(2)</a>, <a href=\"https://man.page/2/symlink\">symlink(2)</a>,\n<a href=\"https://man.page/3/realpath\">realpath(3)</a>, <a href=\"https://man.page/7/path_resolution\">path_resolution(7)</a>,\n<a href=\"https://man.page/7/symlink\">symlink(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}