{"name":"sched_yield","description":"sched_yield - yield the processor","body":"\n\n<h1 align=\"center\">SCHED_YIELD</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">sched_yield -\nyield the processor</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sched.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>int\nsched_yield(void);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>sched_yield</b>()\ncauses the calling thread to relinquish the CPU. The thread\nis moved to the end of the queue for its static priority and\na new thread gets to run.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success,\n<b>sched_yield</b>() returns 0. On error, -1 is returned,\nand <i>errno</i> is set appropriately.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">In the Linux\nimplementation, <b>sched_yield</b>() always succeeds.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the calling\nthread is the only thread in the highest priority list at\nthat time, it will continue to run after a call to\n<b>sched_yield</b>().</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX systems\non which <b>sched_yield</b>() is available define\n<b>_POSIX_PRIORITY_SCHEDULING</b> in\n<i>&lt;unistd.h&gt;</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Strategic calls\nto <b>sched_yield</b>() can improve performance by giving\nother threads or processes a chance to run when (heavily)\ncontended resources (e.g., mutexes) have been released by\nthe caller. Avoid calling <b>sched_yield</b>() unnecessarily\nor inappropriately (e.g., when resources needed by other\nschedulable threads are still held by the caller), since\ndoing so will result in unnecessary context switches, which\nwill degrade system performance.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>sched_yield</b>()\nis intended for use with real-time scheduling policies\n(i.e., <b>SCHED_FIFO</b> or <b>SCHED_RR</b>). Use of\n<b>sched_yield</b>() with nondeterministic scheduling\npolicies such as <b>SCHED_OTHER</b> is unspecified and very\nlikely means your application design is broken.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/7/sched\">sched(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}