{"name":"sigprocmask","description":"sigprocmask, rt_sigprocmask - examine and change blocked signals","body":"\n\n<h1 align=\"center\">SIGPROCMASK</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">sigprocmask,\nrt_sigprocmask - examine and change blocked signals</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;signal.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Prototype\nfor the glibc wrapper function */ <b><br>\nint sigprocmask(int</b> <i>how</i><b>, const sigset_t\n*</b><i>set</i><b>, sigset_t *</b><i>oldset</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Prototype\nfor the underlying system call */ <b><br>\nint rt_sigprocmask(int</b> <i>how</i><b>, const\nkernel_sigset_t *</b><i>set</i><b>, <br>\nkernel_sigset_t *</b><i>oldset</i><b>, size_t</b>\n<i>sigsetsize</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* Prototype\nfor the legacy system call (deprecated) */ <b><br>\nint sigprocmask(int</b> <i>how</i><b>, const\nold_kernel_sigset_t *</b><i>set</i><b>, <br>\nold_kernel_sigset_t *</b><i>oldset</i><b>);</b></p>\n\n<p style=\"margin-left:5%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see\n<a href=\"https://man.page/7/feature_test_macros\">feature_test_macros(7)</a>):</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>sigprocmask</b>():\n_POSIX_C_SOURCE</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>sigprocmask</b>()\nis used to fetch and/or change the signal mask of the\ncalling thread. The signal mask is the set of signals whose\ndelivery is currently blocked for the caller (see also\n<a href=\"https://man.page/7/signal\">signal(7)</a> for more details).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The behavior of\nthe call is dependent on the value of <i>how</i>, as\nfollows. <b><br>\nSIG_BLOCK</b></p>\n\n<p style=\"margin-left:22%;\">The set of blocked signals is\nthe union of the current set and the <i>set</i>\nargument.</p>\n\n<p style=\"margin-left:11%;\"><b>SIG_UNBLOCK</b></p>\n\n<p style=\"margin-left:22%;\">The signals in <i>set</i> are\nremoved from the current set of blocked signals. It is\npermissible to attempt to unblock a signal which is not\nblocked.</p>\n\n<p style=\"margin-left:11%;\"><b>SIG_SETMASK</b></p>\n\n<p style=\"margin-left:22%;\">The set of blocked signals is\nset to the argument <i>set</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<i>oldset</i> is non-NULL, the previous value of the signal\nmask is stored in <i>oldset</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If <i>set</i>\nis NULL, then the signal mask is unchanged (i.e., <i>how</i>\nis ignored), but the current value of the signal mask is\nnevertheless returned in <i>oldset</i> (if it is not\nNULL).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A set of\nfunctions for modifying and inspecting variables of type\n<i>sigset_t</i> (&quot;signal sets&quot;) is described in\n<a href=\"https://man.page/3/sigsetops\">sigsetops(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The use of\n<b>sigprocmask</b>() is unspecified in a multithreaded\nprocess; see <a href=\"https://man.page/3/pthread_sigmask\">pthread_sigmask(3)</a>.</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>sigprocmask</b>()\nreturns 0 on success and -1 on error. In the event of an\nerror, <i>errno</i> is set to indicate the cause.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>EFAULT</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">The <i>set</i> or <i>oldset</i>\nargument points outside the process&rsquo;s allocated\naddress space.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>EINVAL</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Either the value specified in <i>how</i> was invalid or\nthe kernel does not support the size passed in\n<i>sigsetsize.</i></p> </td></tr>\n</table>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1-2001,\nPOSIX.1-2008.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">It is not\npossible to block <b>SIGKILL</b> or <b>SIGSTOP</b>. Attempts\nto do so are silently ignored.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Each of the\nthreads in a process has its own signal mask.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A child created\nvia <a href=\"https://man.page/2/fork\">fork(2)</a> inherits a copy of its parent&rsquo;s\nsignal mask; the signal mask is preserved across\n<a href=\"https://man.page/2/execve\">execve(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<b>SIGBUS</b>, <b>SIGFPE</b>, <b>SIGILL</b>, or\n<b>SIGSEGV</b> are generated while they are blocked, the\nresult is undefined, unless the signal was generated by\n<a href=\"https://man.page/2/kill\">kill(2)</a>, <a href=\"https://man.page/3/sigqueue\">sigqueue(3)</a>, or <a href=\"https://man.page/3/raise\">raise(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See\n<a href=\"https://man.page/3/sigsetops\">sigsetops(3)</a> for details on manipulating signal\nsets.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that it is\npermissible (although not very useful) to specify both\n<i>set</i> and <i>oldset</i> as NULL.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>C\nlibrary/kernel differences</b> <br>\nThe kernel&rsquo;s definition of <i>sigset_t</i> differs in\nsize from that used by the C library. In this manual page,\nthe former is referred to as <i>kernel_sigset_t</i> (it is\nnevertheless named <i>sigset_t</i> in the kernel\nsources).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The glibc\nwrapper function for <b>sigprocmask</b>() silently ignores\nattempts to block the two real-time signals that are used\ninternally by the NPTL threading implementation. See\n<a href=\"https://man.page/7/nptl\">nptl(7)</a> for details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The original\nLinux system call was named <b>sigprocmask</b>(). However,\nwith the addition of real-time signals in Linux 2.2, the\nfixed-size, 32-bit <i>sigset_t</i> (referred to as\n<i>old_kernel_sigset_t</i> in this manual page) type\nsupported by that system call was no longer fit for purpose.\nConsequently, a new system call, <b>rt_sigprocmask</b>(),\nwas added to support an enlarged <i>sigset_t</i> type\n(referred to as <i>kernel_sigset_t</i> in this manual page).\nThe new system call takes a fourth argument, <i>size_t\nsigsetsize</i>, which specifies the size in bytes of the\nsignal sets in <i>set</i> and <i>oldset</i>. This argument\nis currently required to have a fixed architecture specific\nvalue (equal to <i>sizeof(kernel_sigset_t)</i>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The glibc\n<b>sigprocmask</b>() wrapper function hides these details\nfrom us, transparently calling <b>rt_sigprocmask</b>() when\nthe kernel provides it.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/kill\">kill(2)</a>,\n<a href=\"https://man.page/2/pause\">pause(2)</a>, <a href=\"https://man.page/2/sigaction\">sigaction(2)</a>, <a href=\"https://man.page/2/signal\">signal(2)</a>,\n<a href=\"https://man.page/2/sigpending\">sigpending(2)</a>, <a href=\"https://man.page/2/sigsuspend\">sigsuspend(2)</a>,\n<a href=\"https://man.page/3/pthread_sigmask\">pthread_sigmask(3)</a>, <a href=\"https://man.page/3/sigqueue\">sigqueue(3)</a>,\n<a href=\"https://man.page/3/sigsetops\">sigsetops(3)</a>, <a href=\"https://man.page/7/signal\">signal(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}