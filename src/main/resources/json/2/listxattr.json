{"name":"listxattr","description":"listxattr,\nllistxattr, flistxattr - list extended attribute names","body":"\n\n<h1 align=\"center\">LISTXATTR</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">listxattr,\nllistxattr, flistxattr - list extended attribute names</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;sys/types.h&gt; <br>\n#include &lt;sys/xattr.h&gt;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ssize_t\nlistxattr(const char&nbsp;*</b><i>path</i><b>,\nchar&nbsp;*</b><i>list</i><b>, size_t</b> <i>size</i><b>);\n<br>\nssize_t llistxattr(const char&nbsp;*</b><i>path</i><b>,\nchar&nbsp;*</b><i>list</i><b>, size_t</b> <i>size</i><b>);\n<br>\nssize_t flistxattr(int</b> <i>fd</i><b>,\nchar&nbsp;*</b><i>list</i><b>, size_t</b>\n<i>size</i><b>);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Extended\nattributes are <i>name</i>:<i>value</i> pairs associated\nwith inodes (files, directories, symbolic links, etc.). They\nare extensions to the normal attributes which are associated\nwith all inodes in the system (i.e., the <a href=\"https://man.page/2/stat\">stat(2)</a>\ndata). A complete overview of extended attributes concepts\ncan be found in <a href=\"https://man.page/7/xattr\">xattr(7)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>listxattr</b>()\nretrieves the list of extended attribute names associated\nwith the given <i>path</i> in the filesystem. The retrieved\nlist is placed in <i>list</i>, a caller-allocated buffer\nwhose size (in bytes) is specified in the argument\n<i>size</i>. The list is the set of (null-terminated) names,\none after the other. Names of extended attributes to which\nthe calling process does not have access may be omitted from\nthe list. The length of the attribute name <i>list</i> is\nreturned.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>llistxattr</b>()\nis identical to <b>listxattr</b>(), except in the case of a\nsymbolic link, where the list of names of extended\nattributes associated with the link itself is retrieved, not\nthe file that it refers to.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>flistxattr</b>()\nis identical to <b>listxattr</b>(), only the open file\nreferred to by <i>fd</i> (as returned by <a href=\"https://man.page/2/open\">open(2)</a>) is\ninterrogated in place of <i>path</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A single\nextended attribute <i>name</i> is a null-terminated string.\nThe name includes a namespace prefix; there may be several,\ndisjoint namespaces associated with an individual inode.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If <i>size</i>\nis specified as zero, these calls return the current size of\nthe list of extended attribute names (and leave <i>list</i>\nunchanged). This can be used to determine the size of the\nbuffer that should be supplied in a subsequent call. (But,\nbear in mind that there is a possibility that the set of\nextended attributes may change between the two calls, so\nthat it is still necessary to check the return status from\nthe second call.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Example</b>\n<br>\nThe <i>list</i> of names is returned as an unordered array\nof null-terminated character strings (attribute names are\nseparated by null bytes ('\\0')), like this:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">user.name1\\0system.name1\\0user.name2\\0</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Filesystems\nthat implement POSIX ACLs using extended attributes might\nreturn a <i>list</i> like this:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">system.posix_acl_access\\0system.posix_acl_default\\0</p>\n\n<h2>RETURN VALUE\n<a name=\"RETURN VALUE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">On success, a\nnonnegative number is returned indicating the size of the\nextended attribute name list. On failure, -1 is returned and\n<i>errno</i> is set appropriately.</p>\n\n<h2>ERRORS\n<a name=\"ERRORS\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p style=\"margin-top: 1em\"><b>E2BIG</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">The size of the list of extended\nattribute names is larger than the maximum size allowed; the\nlist cannot be retrieved. This can happen on filesystems\nthat support an unlimited number of extended attributes per\nfile such as XFS, for example. See BUGS.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>ENOTSUP</b></p>\n\n<p style=\"margin-left:22%;\">Extended attributes are not\nsupported by the filesystem, or are disabled.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>ERANGE</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The <i>size</i> of the <i>list</i> buffer is too small\nto hold the result.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In addition,\nthe errors documented in <a href=\"https://man.page/2/stat\">stat(2)</a> can also occur.</p>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These system\ncalls have been available on Linux since kernel 2.4; glibc\nsupport is provided since version 2.3.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These system\ncalls are Linux-specific.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">As noted in\n<a href=\"https://man.page/7/xattr\">xattr(7)</a>, the VFS imposes a limit of 64&nbsp;kB on\nthe size of the extended attribute name list returned by\n<a href=\"https://man.page/7/listxattr\">listxattr(7)</a>. If the total size of attribute names\nattached to a file exceeds this limit, it is no longer\npossible to retrieve the list of attribute names.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nprogram demonstrates the usage of <b>listxattr</b>() and\n<a href=\"https://man.page/2/getxattr\">getxattr(2)</a>. For the file whose pathname is provided\nas a command-line argument, it lists all extended file\nattributes and their values.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To keep the\ncode simple, the program assumes that attribute keys and\nvalues are constant during the execution of the program. A\nproduction program should expect and handle changes during\nexecution of the program. For example, the number of bytes\nrequired for attribute keys might increase between the two\ncalls to <b>listxattr</b>(). An application could handle\nthis possibility using a loop that retries the call (perhaps\nup to a predetermined maximum number of attempts) with a\nlarger buffer each time it fails with the error\n<b>ERANGE</b>. Calls to <a href=\"https://man.page/2/getxattr\">getxattr(2)</a> could be handled\nsimilarly.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\noutput was recorded by first creating a file, setting some\nextended file attributes, and then listing the attributes\nwith the example program.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Example\noutput</b></p>\n\n<p style=\"margin-left:17%;\">$ <b>touch /tmp/foo</b> <br>\n$ <b>setfattr -n user.fred -v chocolate /tmp/foo</b> <br>\n$ <b>setfattr -n user.frieda -v bar /tmp/foo</b> <br>\n$ <b>setfattr -n user.empty /tmp/foo</b> <br>\n$ <b>./listxattr /tmp/foo</b> <br>\nuser.fred: chocolate <br>\nuser.frieda: bar <br>\nuser.empty: &lt;no value&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Program\nsource (listxattr.c)</b> <br>\n#include &lt;malloc.h&gt; <br>\n#include &lt;stdio.h&gt; <br>\n#include &lt;stdlib.h&gt; <br>\n#include &lt;string.h&gt; <br>\n#include &lt;sys/types.h&gt; <br>\n#include &lt;sys/xattr.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(int argc, char *argv[]) <br>\n{ <br>\nssize_t buflen, keylen, vallen; <br>\nchar *buf, *key, *val;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (argc != 2)\n{ <br>\nfprintf(stderr, &quot;Usage: %s path\\n&quot;, argv[0]); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* <br>\n* Determine the length of the buffer needed. <br>\n*/ <br>\nbuflen = listxattr(argv[1], NULL, 0); <br>\nif (buflen == -1) { <br>\nperror(&quot;listxattr&quot;); <br>\nexit(EXIT_FAILURE); <br>\n} <br>\nif (buflen == 0) { <br>\nprintf(&quot;%s has no attributes.\\n&quot;, argv[1]); <br>\nexit(EXIT_SUCCESS); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* <br>\n* Allocate the buffer. <br>\n*/ <br>\nbuf = malloc(buflen); <br>\nif (buf == NULL) { <br>\nperror(&quot;malloc&quot;); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* <br>\n* Copy the list of attribute keys to the buffer. <br>\n*/ <br>\nbuflen = listxattr(argv[1], buf, buflen); <br>\nif (buflen == -1) { <br>\nperror(&quot;listxattr&quot;); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* <br>\n* Loop over the list of zero terminated strings with the\n<br>\n* attribute keys. Use the remaining buffer length to\ndetermine <br>\n* the end of the list. <br>\n*/ <br>\nkey = buf; <br>\nwhile (buflen &gt; 0) {</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* <br>\n* Output attribute key. <br>\n*/ <br>\nprintf(&quot;%s: &quot;, key);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* <br>\n* Determine length of the value. <br>\n*/ <br>\nvallen = getxattr(argv[1], key, NULL, 0); <br>\nif (vallen == -1) <br>\nperror(&quot;getxattr&quot;);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">if (vallen &gt;\n0) {</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* <br>\n* Allocate value buffer. <br>\n* One extra byte is needed to append 0x00. <br>\n*/ <br>\nval = malloc(vallen + 1); <br>\nif (val == NULL) { <br>\nperror(&quot;malloc&quot;); <br>\nexit(EXIT_FAILURE); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* <br>\n* Copy value to buffer. <br>\n*/ <br>\nvallen = getxattr(argv[1], key, val, vallen); <br>\nif (vallen == -1) <br>\nperror(&quot;getxattr&quot;); <br>\nelse { <br>\n/* <br>\n* Output attribute value. <br>\n*/ <br>\nval[vallen] = 0; <br>\nprintf(&quot;%s&quot;, val); <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">free(val); <br>\n} else if (vallen == 0) <br>\nprintf(&quot;&lt;no value&gt;&quot;);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">printf(&quot;\\n&quot;);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">/* <br>\n* Forward to next attribute key. <br>\n*/ <br>\nkeylen = strlen(key) + 1; <br>\nbuflen -= keylen; <br>\nkey += keylen; <br>\n}</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">free(buf); <br>\nexit(EXIT_SUCCESS); <br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/getfattr\">getfattr(1)</a>,\n<a href=\"https://man.page/1/setfattr\">setfattr(1)</a>, <a href=\"https://man.page/2/getxattr\">getxattr(2)</a>, <a href=\"https://man.page/2/open\">open(2)</a>,\n<a href=\"https://man.page/2/removexattr\">removexattr(2)</a>, <a href=\"https://man.page/2/setxattr\">setxattr(2)</a>, <a href=\"https://man.page/2/stat\">stat(2)</a>,\n<a href=\"https://man.page/7/symlink\">symlink(7)</a>, <a href=\"https://man.page/7/xattr\">xattr(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUE\">RETURN VALUE</a>","<a href=\"#ERRORS\">ERRORS</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":2}