{"name":"evp_pkey-dh","body":"\n\n<h1 align=\"center\">EVP_PKEY-DH</h1>\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">EVP_PKEY-DH,\nEVP_PKEY-DHX, EVP_KEYMGMT-DH - EVP_PKEY DH and DHX keytype\nand algorithm support</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For\n<b><small>DH</small></b> <small>FFC</small> key agreement,\ntwo classes of domain parameters can be used:\n&quot;safe&quot; domain parameters that are associated with\napproved named safe-prime groups, and a class of &quot;\n<small>FIPS</small> 186-type&quot; domain parameters.\n<small>FIPS</small> 186-type domain parameters should only\nbe used for backward compatibility with existing\napplications that cannot be upgraded to use the approved\nsafe-prime groups.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See\n<b><small>EVP_PKEY-FFC</small></b> (7) for more information\nabout <small>FFC</small> keys.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b><small>DH</small></b> key type uses PKCS#3 format which\nsaves p and g, but not the &rsquo;q&rsquo; value. The\n<b><small>DHX</small></b> key type uses X9.42 format which\nsaves the value of &rsquo;q&rsquo; and this must be used for\n<small>FIPS186-4.</small></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For\n<b><small>DHX</small></b> that is not a named group the\n<small>FIPS186-4</small> standard specifies that the values\nused for <small>FFC</small> parameter generation are also\nrequired for parameter validation. This means that optional\n<small>FFC</small> domain parameter values for <i>seed</i>,\n<i>pcounter</i> and <i>gindex</i> or <i>hindex</i> may need\nto be stored for validation purposes. For\n<b><small>DHX</small></b> the <i>seed</i> and\n<i>pcounter</i> can be stored in <small>ASN1</small> data\n(but the <i>gindex</i> or <i>hindex</i> can not be\nstored).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><small>DH</small>\nand <small>DHX</small> domain parameters</b> <br>\nIn addition to the common <small>FCC</small> parameters that\nall <small>FFC</small> keytypes should support (see &quot;\n<small>FFC</small> parameters&quot; in\n<b><small>EVP_PKEY-FFC</small></b> (7)) the\n<b><small>DHX</small></b> and <b><small>DH</small></b>\nkeytype implementations support the following: <br>\n&quot;group&quot; (\n<b><small>OSSL_PKEY_PARAM_GROUP_NAME</small></b> ) &lt;\n<small>UTF8</small> string&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets or gets a string that\nassociates a <b><small>DH</small></b> or\n<b><small>DHX</small></b> named safe prime group with known\nvalues for <i>p</i>, <i>q</i> and <i>g</i>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The following\nvalues can be used by the OpenSSL&rsquo;s default and\n<small>FIPS</small> providers: &quot;ffdhe2048&quot;,\n&quot;ffdhe3072&quot;, &quot;ffdhe4096&quot;,\n&quot;ffdhe6144&quot;, &quot;ffdhe8192&quot;,\n&quot;modp_2048&quot;, &quot;modp_3072&quot;,\n&quot;modp_4096&quot;, &quot;modp_6144&quot;,\n&quot;modp_8192&quot;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The following\nadditional values can also be used by OpenSSL&rsquo;s\ndefault provider: &quot;modp_1536&quot;,\n&quot;dh_1024_160&quot;, &quot;dh_2048_224&quot;,\n&quot;dh_2048_256&quot;.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><small>DH/DHX</small>\nnamed groups can be easily validated since the parameters\nare well known. For protocols that only transfer <i>p</i>\nand <i>g</i> the value of <i>q</i> can also be\nretrieved.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><small>DH</small>\nand <small>DHX</small> additional parameters</b> <br>\n&quot;encoded-pub-key&quot; (\n<b><small>OSSL_PKEY_PARAM_ENCODED_PUBLIC_KEY</small></b> )\n&lt;octet string&gt;</p>\n\n<p style=\"margin-left:17%;\">Used for getting and setting\nthe encoding of the <small>DH</small> public key used in a\nkey exchange message for the <small>TLS</small> protocol.\nSee <b>EVP_PKEY_set1_encoded_public_key()</b> and\n<b>EVP_PKEY_get1_encoded_public_key()</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><small>DH</small>\nadditional domain parameters</b> <br>\n&quot;safeprime-generator&quot; (\n<b><small>OSSL_PKEY_PARAM_DH_GENERATOR</small></b> )\n&lt;integer&gt;</p>\n\n<p style=\"margin-left:17%;\">Used for <small>DH</small>\ngeneration of safe primes using the old safe prime generator\ncode. The default value is 2. It is recommended to use a\nnamed safe prime group instead, if domain parameter\nvalidation is required.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Randomly\ngenerated safe primes are not allowed by\n<small>FIPS,</small> so setting this value for the OpenSSL\n<small>FIPS</small> provider will instead choose a named\nsafe prime group based on the size of <i>p</i>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><small>DH</small>\nand <small>DHX</small> domain parameter / key generation\nparameters</b> <br>\nIn addition to the common <small>FFC</small> key generation\nparameters that all <small>FFC</small> key types should\nsupport (see &quot; <small>FFC</small> key generation\nparameters&quot; in <b><small>EVP_PKEY-FFC</small></b> (7))\nthe <b><small>DH</small></b> and <b><small>DHX</small></b>\nkeytype implementation supports the following: <br>\n&quot;type&quot; (\n<b><small>OSSL_PKEY_PARAM_FFC_TYPE</small></b> ) &lt;\n<small>UTF8</small> string&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the type of parameter\ngeneration. For <b><small>DH</small></b> valid values are:\n<br>\n&quot;fips186_4&quot; <br>\n&quot;default&quot; <br>\n&quot;fips186_2&quot;</p>\n\n<p style=\"margin-left:23%;\">These are described in &quot;\n<small>FFC</small> key generation parameters&quot; in\n<b><small>EVP_PKEY-FFC</small></b> (7)</p>\n\n<p style=\"margin-left:17%;\">&quot;group&quot;</p>\n\n<p style=\"margin-left:23%;\">This specifies that a named\nsafe prime name will be chosen using the &quot;pbits&quot;\ntype.</p>\n\n<p style=\"margin-left:17%;\">&quot;generator&quot;</p>\n\n<p style=\"margin-left:23%;\">A safe prime generator. See the\n&quot;safeprime-generator&quot; type above. This is only\nvalid for <b><small>DH</small></b> keys.</p>\n\n<p style=\"margin-left:11%;\">&quot;pbits&quot; (\n<b><small>OSSL_PKEY_PARAM_FFC_PBITS</small></b> )\n&lt;unsigned integer&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the size (in bits) of the\nprime &rsquo;p&rsquo;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For\n&quot;fips186_4&quot; this must be 2048. For\n&quot;fips186_2&quot; this must be 1024. For\n&quot;group&quot; this can be any one of 2048, 3072, 4096,\n6144 or 8192.</p>\n\n<p style=\"margin-left:11%;\">&quot;priv_len&quot; (\n<b><small>OSSL_PKEY_PARAM_DH_PRIV_LEN</small></b> )\n&lt;integer&gt;</p>\n\n<p style=\"margin-left:17%;\">An optional value to set the\nmaximum length of the generated private key. The default\nvalue used if this is not set is the maximum value of\nBN_num_bits(<i>q</i>)). The minimum value that this can be\nset to is 2 * s. Where s is the security strength of the key\nwhich has values of 112, 128, 152, 176 and 200 for key sizes\nof 2048, 3072, 4096, 6144 and 8192.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">An\n<b><small>EVP_PKEY</small></b> context can be obtained by\ncalling:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">EVP_PKEY_CTX\n*pctx = EVP_PKEY_CTX_new_from_name(NULL, &quot;DH&quot;,\nNULL);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A\n<b><small>DH</small></b> key can be generated with a named\nsafe prime group by calling:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int priv_len =\n2 * 112; <br>\nOSSL_PARAM params[3]; <br>\nEVP_PKEY *pkey = NULL; <br>\nEVP_PKEY_CTX *pctx = EVP_PKEY_CTX_new_from_name(NULL,\n&quot;DH&quot;, NULL); <br>\nparams[0] =\nOSSL_PARAM_construct_utf8_string(&quot;group&quot;,\n&quot;ffdhe2048&quot;, 0); <br>\n/* &quot;priv_len&quot; is optional */ <br>\nparams[1] = OSSL_PARAM_construct_int(&quot;priv_len&quot;,\n&amp;priv_len); <br>\nparams[2] = OSSL_PARAM_construct_end(); <br>\nEVP_PKEY_keygen_init(pctx); <br>\nEVP_PKEY_CTX_set_params(pctx, params); <br>\nEVP_PKEY_generate(pctx, &amp;pkey); <br>\n... <br>\nEVP_PKEY_free(pkey); <br>\nEVP_PKEY_CTX_free(pctx);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><small>DHX</small></b>\ndomain parameters can be generated according to\n<b><small>FIPS 186-4</small></b> by calling:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int gindex = 2;\n<br>\nunsigned int pbits = 2048; <br>\nunsigned int qbits = 256; <br>\nOSSL_PARAM params[6]; <br>\nEVP_PKEY *param_key = NULL; <br>\nEVP_PKEY_CTX *pctx = NULL; <br>\npctx = EVP_PKEY_CTX_new_from_name(NULL, &quot;DHX&quot;,\nNULL); <br>\nEVP_PKEY_paramgen_init(pctx); <br>\nparams[0] = OSSL_PARAM_construct_uint(&quot;pbits&quot;,\n&amp;pbits); <br>\nparams[1] = OSSL_PARAM_construct_uint(&quot;qbits&quot;,\n&amp;qbits); <br>\nparams[2] = OSSL_PARAM_construct_int(&quot;gindex&quot;,\n&amp;gindex); <br>\nparams[3] =\nOSSL_PARAM_construct_utf8_string(&quot;type&quot;,\n&quot;fips186_4&quot;, 0); <br>\nparams[4] =\nOSSL_PARAM_construct_utf8_string(&quot;digest&quot;,\n&quot;SHA256&quot;, 0); <br>\nparams[5] = OSSL_PARAM_construct_end(); <br>\nEVP_PKEY_CTX_set_params(pctx, params); <br>\nEVP_PKEY_generate(pctx, &amp;param_key); <br>\nEVP_PKEY_print_params(bio_out, param_key, 0, NULL); <br>\n... <br>\nEVP_PKEY_free(param_key); <br>\nEVP_PKEY_CTX_free(pctx);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A\n<b><small>DH</small></b> key can be generated using domain\nparameters by calling:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">EVP_PKEY *key =\nNULL; <br>\nEVP_PKEY_CTX *gctx = EVP_PKEY_CTX_new_from_pkey(NULL,\nparam_key, NULL); <br>\nEVP_PKEY_keygen_init(gctx); <br>\nEVP_PKEY_generate(gctx, &amp;key); <br>\nEVP_PKEY_print_private(bio_out, key, 0, NULL); <br>\n... <br>\nEVP_PKEY_free(key); <br>\nEVP_PKEY_CTX_free(gctx);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To validate\n<b><small>FIPS 186-4 DHX</small></b> domain parameters\ndecoded from <b><small>PEM</small></b> or\n<b><small>DER</small></b> data, additional values used\nduring generation may be required to be set into the\nkey.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>EVP_PKEY_todata()</b>,\n<b>OSSL_PARAM_merge()</b>, and <b>EVP_PKEY_fromdata()</b>\nare useful to add these parameters to the original key or\ndomain parameters before the actual validation. In\nproduction code the return values should be checked.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">EVP_PKEY\n*received_domp = ...; /* parameters received and decoded */\n<br>\nunsigned char *seed = ...; /* and additional parameters\nreceived */ <br>\nsize_t seedlen = ...; /* by other means, required */ <br>\nint gindex = ...; /* for the validation */ <br>\nint pcounter = ...; <br>\nint hindex = ...; <br>\nOSSL_PARAM extra_params[4]; <br>\nOSSL_PARAM *domain_params = NULL; <br>\nOSSL_PARAM *merged_params = NULL; <br>\nEVP_PKEY_CTX *ctx = NULL, *validate_ctx = NULL; <br>\nEVP_PKEY *complete_domp = NULL; <br>\nEVP_PKEY_todata(received_domp,\nOSSL_KEYMGMT_SELECT_DOMAIN_PARAMETERS, <br>\n&amp;domain_params); <br>\nextra_params[0] =\nOSSL_PARAM_construct_octet_string(&quot;seed&quot;, seed,\nseedlen); <br>\n/* <br>\n* NOTE: For unverifiable g use &quot;hindex&quot; instead of\n&quot;gindex&quot; <br>\n* extra_params[1] =\nOSSL_PARAM_construct_int(&quot;hindex&quot;, &amp;hindex);\n<br>\n*/ <br>\nextra_params[1] =\nOSSL_PARAM_construct_int(&quot;gindex&quot;, &amp;gindex);\n<br>\nextra_params[2] =\nOSSL_PARAM_construct_int(&quot;pcounter&quot;,\n&amp;pcounter); <br>\nextra_params[3] = OSSL_PARAM_construct_end(); <br>\nmerged_params = OSSL_PARAM_merge(domain_params,\nextra_params); <br>\nctx = EVP_PKEY_CTX_new_from_name(NULL, &quot;DHX&quot;,\nNULL); <br>\nEVP_PKEY_fromdata_init(ctx); <br>\nEVP_PKEY_fromdata(ctx, &amp;complete_domp,\nOSSL_KEYMGMT_SELECT_ALL, <br>\nmerged_params); <br>\nvalidate_ctx = EVP_PKEY_CTX_new_from_pkey(NULL,\ncomplete_domp, NULL); <br>\nif (EVP_PKEY_param_check(validate_ctx) &gt; 0) <br>\n/* validation_passed(); */ <br>\nelse <br>\n/* validation_failed(); */ <br>\nOSSL_PARAM_free(domain_params); <br>\nOSSL_PARAM_free(merged_params); <br>\nEVP_PKEY_CTX_free(ctx); <br>\nEVP_PKEY_CTX_free(validate_ctx); <br>\nEVP_PKEY_free(complete_domp);</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><small>RFC\n7919</small> ( <small>TLS</small> ffdhe named safe prime\ngroups) <small><br>\nRFC 3526</small> ( <small>IKE</small> modp named safe prime\ngroups) <small><br>\nRFC 5114</small> (Additional <small>DH</small> named groups\nfor dh_1024_160&quot;, &quot;dh_2048_224&quot; <br>\nand &quot;dh_2048_256&quot;).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nsections of SP800-56Ar3: <br>\n5.5.1.1 <small>FFC</small> Domain Parameter\nSelection/Generation <br>\nAppendix D: <small>FFC</small> Safe-prime Groups</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nsections of <small>FIPS 186-4:</small> <br>\nA.1.1.2 Generation of Probable Primes p and q Using an\nApproved Hash <br>\nFunction. <br>\nA.2.3 Generation of canonical generator g. <br>\nA.2.1 Unverifiable Generation of the Generator g.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><small>EVP_PKEY-FFC</small></b>\n(7), <b><small>EVP_KEYEXCH-DH</small></b> (7)\n<b><small>EVP_PKEY</small></b> (3),\n<a href=\"https://man.page/7/provider-keymgmt\">provider-keymgmt(7)</a>,\n<b><small>EVP_KEYMGMT</small></b> (3),\n<a href=\"https://man.page/7/OSSL_PROVIDER-default\">OSSL_PROVIDER-default(7)</a>,\n<b><small>OSSL_PROVIDER-FIPS</small></b> (7)</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright\n2020-2021 The OpenSSL Project Authors. All Rights\nReserved.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Licensed under\nthe Apache License 2.0 (the &quot;License&quot;). You may\nnot use this file except in compliance with the License. You\ncan obtain a copy in the file <small>LICENSE</small> in the\nsource distribution or at\n&lt;https://www.openssl.org/source/license.html&gt;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"],"level":7}