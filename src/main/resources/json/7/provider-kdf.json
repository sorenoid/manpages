{"name":"provider-kdf","body":"\n\n<h1 align=\"center\">PROVIDER-KDF</h1>\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">provider-kdf -\nThe KDF library &lt;-&gt; provider functions</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">#include\n&lt;openssl/core_dispatch.h&gt; <br>\n#include &lt;openssl/core_names.h&gt; <br>\n/* <br>\n* None of these are actual functions, but are displayed like\nthis for <br>\n* the function signatures for functions that are offered as\nfunction <br>\n* pointers in OSSL_DISPATCH arrays. <br>\n*/ <br>\n/* Context management */ <br>\nvoid *OSSL_FUNC_kdf_newctx(void *provctx); <br>\nvoid OSSL_FUNC_kdf_freectx(void *kctx); <br>\nvoid *OSSL_FUNC_kdf_dupctx(void *src); <br>\n/* Encryption/decryption */ <br>\nint OSSL_FUNC_kdf_reset(void *kctx); <br>\nint OSSL_FUNC_kdf_derive(void *kctx, unsigned char *key,\nsize_t keylen, <br>\nconst OSSL_PARAM params[]); <br>\n/* KDF parameter descriptors */ <br>\nconst OSSL_PARAM *OSSL_FUNC_kdf_gettable_params(void\n*provctx); <br>\nconst OSSL_PARAM *OSSL_FUNC_kdf_gettable_ctx_params(void\n*kcxt, void *provctx); <br>\nconst OSSL_PARAM *OSSL_FUNC_kdf_settable_ctx_params(void\n*kcxt, void *provctx); <br>\n/* KDF parameters */ <br>\nint OSSL_FUNC_kdf_get_params(OSSL_PARAM params[]); <br>\nint OSSL_FUNC_kdf_get_ctx_params(void *kctx, OSSL_PARAM\nparams[]); <br>\nint OSSL_FUNC_kdf_set_ctx_params(void *kctx, const\nOSSL_PARAM params[]);</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This\ndocumentation is primarily aimed at provider authors. See\n<a href=\"https://man.page/7/provider\">provider(7)</a> for further information.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<small>KDF</small> operation enables providers to implement\n<small>KDF</small> algorithms and make them available to\napplications via the <small>API</small> functions\n<a href=\"https://man.page/3/EVP_KDF_CTX_reset\">EVP_KDF_CTX_reset(3)</a>, and\n<a href=\"https://man.page/3/EVP_KDF_derive\">EVP_KDF_derive(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All\n&quot;functions&quot; mentioned here are passed as function\npointers between <i>libcrypto</i> and the provider in\n<b><small>OSSL_DISPATCH</small></b> arrays via\n<b><small>OSSL_ALGORITHM</small></b> arrays that are\nreturned by the provider&rsquo;s\n<b>provider_query_operation()</b> function (see\n&quot;Provider Functions&quot; in\n<a href=\"https://man.page/7/provider-base\">provider-base(7)</a>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All these\n&quot;functions&quot; have a corresponding function type\ndefinition named <b>OSSL_FUNC_{name}_fn</b>, and a helper\nfunction to retrieve the function pointer from an\n<b><small>OSSL_DISPATCH</small></b> element named\n<b>OSSL_FUNC_{name}</b>. For example, the\n&quot;function&quot; <b>OSSL_FUNC_kdf_newctx()</b> has\nthese:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">typedef void\n*(OSSL_OSSL_FUNC_kdf_newctx_fn)(void *provctx); <br>\nstatic ossl_inline OSSL_OSSL_FUNC_kdf_newctx_fn <br>\nOSSL_FUNC_kdf_newctx(const OSSL_DISPATCH *opf);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><small>OSSL_DISPATCH</small></b>\narray entries are identified by numbers that are provided as\nmacros in <b>openssl-core_dispatch.h</b>(7), as follows:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">OSSL_FUNC_kdf_newctx\nOSSL_FUNC_KDF_NEWCTX <br>\nOSSL_FUNC_kdf_freectx OSSL_FUNC_KDF_FREECTX <br>\nOSSL_FUNC_kdf_dupctx OSSL_FUNC_KDF_DUPCTX <br>\nOSSL_FUNC_kdf_reset OSSL_FUNC_KDF_RESET <br>\nOSSL_FUNC_kdf_derive OSSL_FUNC_KDF_DERIVE <br>\nOSSL_FUNC_kdf_get_params OSSL_FUNC_KDF_GET_PARAMS <br>\nOSSL_FUNC_kdf_get_ctx_params OSSL_FUNC_KDF_GET_CTX_PARAMS\n<br>\nOSSL_FUNC_kdf_set_ctx_params OSSL_FUNC_KDF_SET_CTX_PARAMS\n<br>\nOSSL_FUNC_kdf_gettable_params OSSL_FUNC_KDF_GETTABLE_PARAMS\n<br>\nOSSL_FUNC_kdf_gettable_ctx_params\nOSSL_FUNC_KDF_GETTABLE_CTX_PARAMS <br>\nOSSL_FUNC_kdf_settable_ctx_params\nOSSL_FUNC_KDF_SETTABLE_CTX_PARAMS</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A\n<small>KDF</small> algorithm implementation may not\nimplement all of these functions. In order to be a\nconsistent set of functions, at least the following\nfunctions must be implemented:\n<b>OSSL_FUNC_kdf_newctx()</b>,\n<b>OSSL_FUNC_kdf_freectx()</b>,\n<b>OSSL_FUNC_kdf_set_ctx_params()</b>,\n<b>OSSL_FUNC_kdf_derive()</b>. All other functions are\noptional.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Context\nManagement Functions <br>\nOSSL_FUNC_kdf_newctx()</b> should create and return a\npointer to a provider side structure for holding context\ninformation during a <small>KDF</small> operation. A pointer\nto this context will be passed back in a number of the other\n<small>KDF</small> operation function calls. The parameter\n<i>provctx</i> is the provider context generated during\nprovider initialisation (see <a href=\"https://man.page/7/provider\">provider(7)</a>).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_kdf_freectx()</b>\nis passed a pointer to the provider side <small>KDF</small>\ncontext in the <i>kctx</i> parameter. If it receives\n<small>NULL</small> as <i>kctx</i> value, it should not do\nanything other than return. This function should free any\nresources associated with that context.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_kdf_dupctx()</b>\nshould duplicate the provider side <small>KDF</small>\ncontext in the <i>kctx</i> parameter and return the\nduplicate copy.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Encryption/Decryption\nFunctions <br>\nOSSL_FUNC_kdf_reset()</b> initialises a <small>KDF</small>\noperation given a provider side <small>KDF</small> context\nin the <i>kctx</i> parameter.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_kdf_derive()</b>\nperforms the <small>KDF</small> operation after processing\nthe <i>params</i> as per\n<b>OSSL_FUNC_kdf_set_ctx_params()</b>. The <i>kctx</i>\nparameter contains a pointer to the provider side context.\nThe resulting key of the desired <i>keylen</i> should be\nwritten to <i>key</i>. If the algorithm does not support the\nrequested <i>keylen</i> the function must return error.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><small>KDF</small>\nParameters</b> <br>\nSee <b><small>OSSL_PARAM</small></b> (3) for further details\non the parameters structure used by these functions.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_kdf_get_params()</b>\ngets details of parameter values associated with the\nprovider algorithm and stores them in <i>params</i>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_kdf_set_ctx_params()</b>\nsets <small>KDF</small> parameters associated with the given\nprovider side <small>KDF</small> context <i>kctx</i> to\n<i>params</i>. Any parameter settings are additional to any\nthat were previously set. Passing <small>NULL</small> for\n<i>params</i> should return true.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_kdf_get_ctx_params()</b>\nretrieves gettable parameter values associated with the\ngiven provider side <small>KDF</small> context <i>kctx</i>\nand stores them in <i>params</i>. Passing\n<small>NULL</small> for <i>params</i> should return\ntrue.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_kdf_gettable_params()</b>,\n<b>OSSL_FUNC_kdf_gettable_ctx_params()</b>, and\n<b>OSSL_FUNC_kdf_settable_ctx_params()</b> all return\nconstant <b><small>OSSL_PARAM</small></b> arrays as\ndescriptors of the parameters that\n<b>OSSL_FUNC_kdf_get_params()</b>,\n<b>OSSL_FUNC_kdf_get_ctx_params()</b>, and\n<b>OSSL_FUNC_kdf_set_ctx_params()</b> can handle,\nrespectively. <b>OSSL_FUNC_kdf_gettable_ctx_params()</b> and\n<b>OSSL_FUNC_kdf_settable_ctx_params()</b> will return the\nparameters associated with the provider side context\n<i>kctx</i> in its current state if it is not\n<small>NULL.</small> Otherwise, they return the parameters\nassociated with the provider side algorithm\n<i>provctx</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Parameters\ncurrently recognised by built-in KDFs are as follows. Not\nall parameters are relevant to, or are understood by all\nKDFs: <br>\n&quot;size&quot; ( <b><small>OSSL_KDF_PARAM_SIZE</small></b>\n) &lt;unsigned integer&gt;</p>\n\n<p style=\"margin-left:17%;\">Gets the output size from the\nassociated <small>KDF</small> ctx. If the algorithm produces\na variable amount of output, <small>SIZE_MAX</small> should\nbe returned. If the input parameters required to calculate\nthe fixed output size have not yet been supplied, 0 should\nbe returned indicating an error.</p>\n\n<p style=\"margin-left:11%;\">&quot;key&quot; (\n<b><small>OSSL_KDF_PARAM_KEY</small></b> ) &lt;octet\nstring&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the key in the associated\n<small>KDF</small> ctx.</p>\n\n<p style=\"margin-left:11%;\">&quot;secret&quot; (\n<b><small>OSSL_KDF_PARAM_SECRET</small></b> ) &lt;octet\nstring&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the secret in the\nassociated <small>KDF</small> ctx.</p>\n\n<p style=\"margin-left:11%;\">&quot;pass&quot; (\n<b><small>OSSL_KDF_PARAM_PASSWORD</small></b> ) &lt;octet\nstring&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the password in the\nassociated <small>KDF</small> ctx.</p>\n\n<p style=\"margin-left:11%;\">&quot;cipher&quot; (\n<b><small>OSSL_KDF_PARAM_CIPHER</small></b> ) &lt;\n<small>UTF8</small> string&gt; <br>\n&quot;digest&quot; (\n<b><small>OSSL_KDF_PARAM_DIGEST</small></b> ) &lt;\n<small>UTF8</small> string&gt; <br>\n&quot;mac&quot; ( <b><small>OSSL_KDF_PARAM_MAC</small></b> )\n&lt; <small>UTF8</small> string&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the name of the underlying\ncipher, digest or <small>MAC</small> to be used. It must\nname a suitable algorithm for the <small>KDF</small>\nthat&rsquo;s being used.</p>\n\n<p style=\"margin-left:11%;\">&quot;maclen&quot; (\n<b><small>OSSL_KDF_PARAM_MAC_SIZE</small></b> ) &lt;octet\nstring&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the length of the\n<small>MAC</small> in the associated <small>KDF</small>\nctx.</p>\n\n<p style=\"margin-left:11%;\">&quot;properties&quot; (\n<b><small>OSSL_KDF_PARAM_PROPERTIES</small></b> ) &lt;\n<small>UTF8</small> string&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the properties to be\nqueried when trying to fetch the underlying algorithm. This\nmust be given together with the algorithm naming parameter\nto be considered valid.</p>\n\n<p style=\"margin-left:11%;\">&quot;iter&quot; (\n<b><small>OSSL_KDF_PARAM_ITER</small></b> ) &lt;unsigned\ninteger&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the number of iterations\nin the associated <small>KDF</small> ctx.</p>\n\n<p style=\"margin-left:11%;\">&quot;mode&quot; (\n<b><small>OSSL_KDF_PARAM_MODE</small></b> ) &lt;\n<small>UTF8</small> string&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the mode in the associated\n<small>KDF</small> ctx.</p>\n\n<p style=\"margin-left:11%;\">&quot;pkcs5&quot; (\n<b><small>OSSL_KDF_PARAM_PKCS5</small></b> )\n&lt;integer&gt;</p>\n\n<p style=\"margin-left:17%;\">Enables or diables the\n<small>SP800-132</small> compliance checks. A mode of 0\nenables the compliance checks.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The checks\nperformed are: <br>\n- the iteration count is at least 1000. <br>\n- the salt length is at least 128 bits. <br>\n- the derived key length is at least 112 bits.</p>\n\n<p style=\"margin-left:11%;\">&quot;ukm&quot; (\n<b><small>OSSL_KDF_PARAM_UKM</small></b> ) &lt;octet\nstring&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets an optional random string\nthat is provided by the sender called\n&quot;partyAInfo&quot;. In <small>CMS</small> this is the\nuser keying material.</p>\n\n<p style=\"margin-left:11%;\">&quot;cekalg&quot; (\n<b><small>OSSL_KDF_PARAM_CEK_ALG</small></b> ) &lt;\n<small>UTF8</small> string&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the <small>CEK</small>\nwrapping algorithm name in the associated <small>KDF</small>\nctx.</p>\n\n<p style=\"margin-left:11%;\">&quot;n&quot; (\n<b><small>OSSL_KDF_PARAM_SCRYPT_N</small></b> ) &lt;unsigned\ninteger&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the scrypt work factor\nparameter N in the associated <small>KDF</small> ctx.</p>\n\n<p style=\"margin-left:11%;\">&quot;r&quot; (\n<b><small>OSSL_KDF_PARAM_SCRYPT_R</small></b> ) &lt;unsigned\ninteger&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the scrypt work factor\nparameter r in the associated <small>KDF</small> ctx.</p>\n\n<p style=\"margin-left:11%;\">&quot;p&quot; (\n<b><small>OSSL_KDF_PARAM_SCRYPT_P</small></b> ) &lt;unsigned\ninteger&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the scrypt work factor\nparameter p in the associated <small>KDF</small> ctx.</p>\n\n<p style=\"margin-left:11%;\">&quot;maxmem_bytes&quot; (\n<b><small>OSSL_KDF_PARAM_SCRYPT_MAXMEM</small></b> )\n&lt;unsigned integer&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the scrypt work factor\nparameter maxmem in the associated <small>KDF</small>\nctx.</p>\n\n<p style=\"margin-left:11%;\">&quot;prefix&quot; (\n<b><small>OSSL_KDF_PARAM_PREFIX</small></b> ) &lt;octet\nstring&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the prefix string using by\nthe <small>TLS 1.3</small> version of <small>HKDF</small> in\nthe associated <small>KDF</small> ctx.</p>\n\n<p style=\"margin-left:11%;\">&quot;label&quot; (\n<b><small>OSSL_KDF_PARAM_LABEL</small></b> ) &lt;octet\nstring&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the label string using by\nthe <small>TLS 1.3</small> version of <small>HKDF</small> in\nthe associated <small>KDF</small> ctx.</p>\n\n<p style=\"margin-left:11%;\">&quot;data&quot; (\n<b><small>OSSL_KDF_PARAM_DATA</small></b> ) &lt;octet\nstring&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the context string using\nby the <small>TLS 1.3</small> version of <small>HKDF</small>\nin the associated <small>KDF</small> ctx.</p>\n\n<p style=\"margin-left:11%;\">&quot;info&quot; (\n<b><small>OSSL_KDF_PARAM_INFO</small></b> ) &lt;octet\nstring&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the optional shared info\nin the associated <small>KDF</small> ctx.</p>\n\n<p style=\"margin-left:11%;\">&quot;seed&quot; (\n<b><small>OSSL_KDF_PARAM_SEED</small></b> ) &lt;octet\nstring&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the <small>IV</small> in\nthe associated <small>KDF</small> ctx.</p>\n\n<p style=\"margin-left:11%;\">&quot;xcghash&quot; (\n<b><small>OSSL_KDF_PARAM_SSHKDF_XCGHASH</small></b> )\n&lt;octet string&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the xcghash in the\nassociated <small>KDF</small> ctx.</p>\n\n<p style=\"margin-left:11%;\">&quot;session_id&quot; (\n<b><small>OSSL_KDF_PARAM_SSHKDF_SESSION_ID</small></b> )\n&lt;octet string&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the session\n<small>ID</small> in the associated <small>KDF</small>\nctx.</p>\n\n<p style=\"margin-left:11%;\">&quot;type&quot; (\n<b><small>OSSL_KDF_PARAM_SSHKDF_TYPE</small></b> ) &lt;\n<small>UTF8</small> string&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the <small>SSH KDF</small>\ntype parameter in the associated <small>KDF</small> ctx.\nThere are six supported types: <small><br>\nEVP_KDF_SSHKDF_TYPE_INITIAL_IV_CLI_TO_SRV</small></p>\n\n<p style=\"margin-left:23%;\">The Initial <small>IV</small>\nfrom client to server. A single char of value 65 (\n<small>ASCII</small> char &rsquo;A&rsquo;).</p>\n\n\n<p style=\"margin-left:17%;\"><small>EVP_KDF_SSHKDF_TYPE_INITIAL_IV_SRV_TO_CLI</small></p>\n\n<p style=\"margin-left:23%;\">The Initial <small>IV</small>\nfrom server to client A single char of value 66 (\n<small>ASCII</small> char &rsquo;B&rsquo;).</p>\n\n\n<p style=\"margin-left:17%;\"><small>EVP_KDF_SSHKDF_TYPE_ENCRYPTION_KEY_CLI_TO_SRV</small></p>\n\n<p style=\"margin-left:23%;\">The Encryption Key from client\nto server A single char of value 67 ( <small>ASCII</small>\nchar &rsquo;C&rsquo;).</p>\n\n\n<p style=\"margin-left:17%;\"><small>EVP_KDF_SSHKDF_TYPE_ENCRYPTION_KEY_SRV_TO_CLI</small></p>\n\n<p style=\"margin-left:23%;\">The Encryption Key from server\nto client A single char of value 68 ( <small>ASCII</small>\nchar &rsquo;D&rsquo;).</p>\n\n\n<p style=\"margin-left:17%;\"><small>EVP_KDF_SSHKDF_TYPE_INTEGRITY_KEY_CLI_TO_SRV</small></p>\n\n<p style=\"margin-left:23%;\">The Integrity Key from client\nto server A single char of value 69 ( <small>ASCII</small>\nchar &rsquo;E&rsquo;).</p>\n\n\n<p style=\"margin-left:17%;\"><small>EVP_KDF_SSHKDF_TYPE_INTEGRITY_KEY_SRV_TO_CLI</small></p>\n\n<p style=\"margin-left:23%;\">The Integrity Key from client\nto server A single char of value 70 ( <small>ASCII</small>\nchar &rsquo;F&rsquo;).</p>\n\n<p style=\"margin-left:11%;\">&quot;constant&quot; (\n<b><small>OSSL_KDF_PARAM_CONSTANT</small></b> ) &lt;octet\nstring&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the constant value in the\nassociated <small>KDF</small> ctx.</p>\n\n<p style=\"margin-left:11%;\">&quot;id&quot; (\n<b><small>OSSL_KDF_PARAM_PKCS12_ID</small></b> )\n&lt;integer&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the intended usage of the\noutput bits in the associated <small>KDF</small> ctx. It is\ndefined as per <small>RFC 7292</small> section B.3.</p>\n\n<h2>RETURN VALUES\n<a name=\"RETURN VALUES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_kdf_newctx()</b>\nand <b>OSSL_FUNC_kdf_dupctx()</b> should return the newly\ncreated provider side <small>KDF</small> context, or\n<small>NULL</small> on failure.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_kdf_derive()</b>,\n<b>OSSL_FUNC_kdf_get_params()</b>,\n<b>OSSL_FUNC_kdf_get_ctx_params()</b> and\n<b>OSSL_FUNC_kdf_set_ctx_params()</b> should return 1 for\nsuccess or 0 on error.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_kdf_gettable_params()</b>,\n<b>OSSL_FUNC_kdf_gettable_ctx_params()</b> and\n<b>OSSL_FUNC_kdf_settable_ctx_params()</b> should return a\nconstant <b><small>OSSL_PARAM</small></b> array, or\n<small>NULL</small> if none is offered.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<small>KDF</small> life-cycle is described in\n<a href=\"https://man.page/7/life_cycle-kdf\">life_cycle-kdf(7)</a>. Providers should ensure that the\nvarious transitions listed there are supported. At some\npoint the <small>EVP</small> layer will begin enforcing the\nlisted transitions.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/7/provider\">provider(7)</a>,\n<a href=\"https://man.page/7/life_cycle-kdf\">life_cycle-kdf(7)</a>, <b><small>EVP_KDF</small></b>\n(3).</p>\n\n<h2>HISTORY\n<a name=\"HISTORY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The provider\n<small>KDF</small> interface was introduced in OpenSSL\n3.0.</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright\n2020-2021 The OpenSSL Project Authors. All Rights\nReserved.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Licensed under\nthe Apache License 2.0 (the &quot;License&quot;). You may\nnot use this file except in compliance with the License. You\ncan obtain a copy in the file <small>LICENSE</small> in the\nsource distribution or at\n&lt;https://www.openssl.org/source/license.html&gt;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUES\">RETURN VALUES</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#HISTORY\">HISTORY</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"],"level":7}