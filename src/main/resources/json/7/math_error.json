{"name":"math_error","body":"\n\n<h1 align=\"center\">MATH_ERROR</h1>\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">math_error -\ndetecting errors from mathematical functions</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;math.h&gt; <br>\n#include &lt;errno.h&gt; <br>\n#include &lt;fenv.h&gt;</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">When an error\noccurs, most library functions indicate this fact by\nreturning a special value (e.g., -1 or NULL). Because they\ntypically return a floating-point number, the mathematical\nfunctions declared in <i>&lt;math.h&gt;</i> indicate an\nerror using other mechanisms. There are two error-reporting\nmechanisms: the older one sets <i>errno</i>; the newer one\nuses the floating-point exception mechanism (the use of\n<a href=\"https://man.page/3/feclearexcept\">feclearexcept(3)</a> and <a href=\"https://man.page/3/fetestexcept\">fetestexcept(3)</a>, as\noutlined below) described in <a href=\"https://man.page/3/fenv\">fenv(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A portable\nprogram that needs to check for an error from a mathematical\nfunction should set <i>errno</i> to zero, and make the\nfollowing call</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">feclearexcept(FE_ALL_EXCEPT);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">before calling\na mathematical function.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Upon return\nfrom the mathematical function, if <i>errno</i> is nonzero,\nor the following call (see <a href=\"https://man.page/3/fenv\">fenv(3)</a>) returns\nnonzero</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">fetestexcept(FE_INVALID\n| FE_DIVBYZERO | FE_OVERFLOW | <br>\nFE_UNDERFLOW);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">then an error\noccurred in the mathematical function.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The error\nconditions that can occur for mathematical functions are\ndescribed below.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Domain\nerror</b> <br>\nA <i>domain error</i> occurs when a mathematical function is\nsupplied with an argument whose value falls outside the\ndomain for which the function is defined (e.g., giving a\nnegative argument to <a href=\"https://man.page/3/log\">log(3)</a>). When a domain error\noccurs, math functions commonly return a NaN (though some\nfunctions return a different value in this case);\n<i>errno</i> is set to <b>EDOM</b>, and an\n&quot;invalid&quot; (<b>FE_INVALID</b>) floating-point\nexception is raised.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Pole\nerror</b> <br>\nA <i>pole error</i> occurs when the mathematical result of a\nfunction is an exact infinity (e.g., the logarithm of 0 is\nnegative infinity). When a pole error occurs, the function\nreturns the (signed) value <b>HUGE_VAL</b>,\n<b>HUGE_VALF</b>, or <b>HUGE_VALL</b>, depending on whether\nthe function result type is <i>double</i>, <i>float</i>, or\n<i>long double</i>. The sign of the result is that which is\nmathematically correct for the function. <i>errno</i> is set\nto <b>ERANGE</b>, and a &quot;divide-by-zero&quot;\n(<b>FE_DIVBYZERO</b>) floating-point exception is\nraised.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Range\nerror</b> <br>\nA <i>range error</i> occurs when the magnitude of the\nfunction result means that it cannot be represented in the\nresult type of the function. The return value of the\nfunction depends on whether the range error was an overflow\nor an underflow.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A floating\nresult <i>overflows</i> if the result is finite, but is too\nlarge to represented in the result type. When an overflow\noccurs, the function returns the value <b>HUGE_VAL</b>,\n<b>HUGE_VALF</b>, or <b>HUGE_VALL</b>, depending on whether\nthe function result type is <i>double</i>, <i>float</i>, or\n<i>long double</i>. <i>errno</i> is set to <b>ERANGE</b>,\nand an &quot;overflow&quot; (<b>FE_OVERFLOW</b>)\nfloating-point exception is raised.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A floating\nresult <i>underflows</i> if the result is too small to be\nrepresented in the result type. If an underflow occurs, a\nmathematical function typically returns 0.0 (C99 says a\nfunction shall return &quot;an implementation-defined value\nwhose magnitude is no greater than the smallest normalized\npositive number in the specified type&quot;). <i>errno</i>\nmay be set to <b>ERANGE</b>, and an &quot;underflow&quot;\n(<b>FE_UNDERFLOW</b>) floating-point exception may be\nraised.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Some functions\ndeliver a range error if the supplied argument value, or the\ncorrect function result, would be <i>subnormal</i>. A\nsubnormal value is one that is nonzero, but with a magnitude\nthat is so small that it can&rsquo;t be presented in\nnormalized form (i.e., with a 1 in the most significant bit\nof the significand). The representation of a subnormal\nnumber will contain one or more leading zeros in the\nsignificand.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>math_errhandling</i> identifier specified by C99 and\nPOSIX.1 is not supported by glibc. This identifier is\nsupposed to indicate which of the two error-notification\nmechanisms (<i>errno</i>, exceptions retrievable via\n<a href=\"https://man.page/3/fetestexcept\">fetestexcept(3)</a>) is in use. The standards require\nthat at least one be in use, but permit both to be\navailable. The current (version 2.8) situation under glibc\nis messy. Most (but not all) functions raise exceptions on\nerrors. Some also set <i>errno</i>. A few functions set\n<i>errno</i>, but don&rsquo;t raise an exception. A very few\nfunctions do neither. See the individual manual pages for\ndetails.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To avoid the\ncomplexities of using <i>errno</i> and\n<a href=\"https://man.page/3/fetestexcept\">fetestexcept(3)</a> for error checking, it is often\nadvised that one should instead check for bad argument\nvalues before each call. For example, the following code\nensures that <a href=\"https://man.page/3/log\">log(3)</a>&rsquo;s argument is not a NaN and\nis not zero (a pole error) or less than zero (a domain\nerror):</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">double x,\nr;</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">if (isnan(x) ||\nislessequal(x, 0)) { <br>\n/* Deal with NaN / pole error / domain error */ <br>\n}</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">r = log(x);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The discussion\non this page does not apply to the complex mathematical\nfunctions (i.e., those declared by\n<i>&lt;complex.h&gt;</i>), which in general are not required\nto return errors by C99 and POSIX.1.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<a href=\"https://man.page/1/gcc\">gcc(1)</a> <i>-fno-math-errno</i> option causes the\nexecutable to employ implementations of some mathematical\nfunctions that are faster than the standard implementations,\nbut do not set <i>errno</i> on error. (The <a href=\"https://man.page/1/gcc\">gcc(1)</a>\n<i>-ffast-math</i> option also enables\n<i>-fno-math-errno</i>.) An error can still be tested for\nusing <a href=\"https://man.page/3/fetestexcept\">fetestexcept(3)</a>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/gcc\">gcc(1)</a>,\n<a href=\"https://man.page/3/errno\">errno(3)</a>, <a href=\"https://man.page/3/fenv\">fenv(3)</a>, <a href=\"https://man.page/3/fpclassify\">fpclassify(3)</a>,\n<a href=\"https://man.page/3/INFINITY\">INFINITY(3)</a>, <a href=\"https://man.page/3/isgreater\">isgreater(3)</a>, <a href=\"https://man.page/3/matherr\">matherr(3)</a>,\n<a href=\"https://man.page/3/nan\">nan(3)</a></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>info\nlibc</i></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":7}