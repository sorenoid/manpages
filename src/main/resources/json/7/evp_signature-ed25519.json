{"name":"evp_signature-ed25519","body":"\n\n<h1 align=\"center\">EVP_SIGNATURE-ED25519</h1>\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">EVP_SIGNATURE-ED25519,\nEVP_SIGNATURE-ED448, Ed25519, Ed448 - EVP_PKEY Ed25519 and\nEd448 support</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>Ed25519</b> and <b>Ed448</b> <small>EVP_PKEY</small>\nimplementation supports key generation, one-shot digest sign\nand digest verify using PureEdDSA and <b>Ed25519</b> or\n<b>Ed448</b> (see <small>RFC8032</small> ). It has\nassociated private and public key formats compatible with\n<small>RFC 8410.</small></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><small><b>ED25519</b></small>\n<b>and <small>ED448</small> Signature Parameters</b> <br>\nNo additional parameters can be set during one-shot signing\nor verification. In particular, because PureEdDSA is used, a\ndigest must <b><small>NOT</small></b> be specified when\nsigning or verifying. See\n<b><small>EVP_PKEY-X25519</small></b> (7) for information\nrelated to <b>X25519</b> and <b>X448</b> keys.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nsignature parameters can be retrieved using\n<b>EVP_PKEY_CTX_get_params()</b>. <br>\n&quot;algorithm-id&quot; (\n<b><small>OSSL_SIGNATURE_PARAM_ALGORITHM_ID</small></b> )\n&lt;octet string&gt;</p>\n\n<p style=\"margin-left:17%;\">The parameters are described in\n<a href=\"https://man.page/7/provider-signature\">provider-signature(7)</a>.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The PureEdDSA\nalgorithm does not support the streaming mechanism of other\nsignature algorithms using, for example,\n<b>EVP_DigestUpdate()</b>. The message to sign or verify\nmust be passed using the one-shot <b>EVP_DigestSign()</b>\nand <b>EVP_DigestVerify()</b> functions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When calling\n<b>EVP_DigestSignInit()</b> or\n<b>EVP_DigestVerifyInit()</b>, the digest <i>type</i>\nparameter <b><small>MUST</small></b> be set to\n<small>NULL.</small></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Applications\nwishing to sign certificates (or other structures such as\nCRLs or certificate requests) using Ed25519 or Ed448 can\neither use <b>X509_sign()</b> or <b>X509_sign_ctx()</b> in\nthe usual way.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Ed25519 or\nEd448 private keys can be set directly using\n<a href=\"https://man.page/3/EVP_PKEY_new_raw_private_key\">EVP_PKEY_new_raw_private_key(3)</a> or loaded from a\nPKCS#8 private key file using\n<a href=\"https://man.page/3/PEM_read_bio_PrivateKey\">PEM_read_bio_PrivateKey(3)</a> (or similar function).\nCompletely new keys can also be generated (see the example\nbelow). Setting a private key also sets the associated\npublic key.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Ed25519 or\nEd448 public keys can be set directly using\n<a href=\"https://man.page/3/EVP_PKEY_new_raw_public_key\">EVP_PKEY_new_raw_public_key(3)</a> or loaded from a\nSubjectPublicKeyInfo structure in a <small>PEM</small> file\nusing <a href=\"https://man.page/3/PEM_read_bio_PUBKEY\">PEM_read_bio_PUBKEY(3)</a> (or similar\nfunction).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Ed25519 and\nEd448 can be tested with the <a href=\"https://man.page/1/openssl-speed\">openssl-speed(1)</a>\napplication since version 1.1.1. Valid algorithm names are\n<b>ed25519</b>, <b>ed448</b> and <b>eddsa</b>. If\n<b>eddsa</b> is specified, then both Ed25519 and Ed448 are\nbenchmarked.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">To sign a\nmessage using a <small>ED25519</small> or\n<small>ED448</small> key:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">void\ndo_sign(EVP_PKEY *ed_key, unsigned char *msg, size_t\nmsg_len) <br>\n{ <br>\nsize_t sig_len; <br>\nunsigned char *sig = NULL; <br>\nEVP_MD_CTX *md_ctx = EVP_MD_CTX_new(); <br>\nEVP_DigestSignInit(md_ctx, NULL, NULL, NULL, ed_key); <br>\n/* Calculate the requires size for the signature by passing\na NULL buffer */ <br>\nEVP_DigestSign(md_ctx, NULL, &amp;sig_len, msg, msg_len);\n<br>\nsig = OPENSSL_zalloc(sig_len); <br>\nEVP_DigestSign(md_ctx, sig, &amp;sig_len, msg, msg_len);\n<br>\n... <br>\nOPENSSL_free(sig); <br>\nEVP_MD_CTX_free(md_ctx); <br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><small>EVP_PKEY-X25519</small></b>\n(7) <a href=\"https://man.page/7/provider-signature\">provider-signature(7)</a>,\n<a href=\"https://man.page/3/EVP_DigestSignInit\">EVP_DigestSignInit(3)</a>,\n<a href=\"https://man.page/3/EVP_DigestVerifyInit\">EVP_DigestVerifyInit(3)</a>,</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright\n2017-2021 The OpenSSL Project Authors. All Rights\nReserved.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Licensed under\nthe Apache License 2.0 (the &quot;License&quot;). You may\nnot use this file except in compliance with the License. You\ncan obtain a copy in the file <small>LICENSE</small> in the\nsource distribution or at\n&lt;https://www.openssl.org/source/license.html&gt;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"],"level":7}