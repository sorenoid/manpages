{"name":"time","description":"time - overview\nof time and timers\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<b>Real time\nand process time</b> <i><br>\nReal time</i> is defined as time measured from some fixed\npoint, either from a standard point in the past (see the\ndescription of the Epoch and calendar time below), or from\nsome point (e.g., the start) in the life of a process\n(<i>elapsed time</i>).\n\n<i>Process\ntime</i> is defined as the amount of CPU time used by a\nprocess. This is sometimes divided into <i>user</i> and\n<i>system</i> components. User CPU time is the time spent\nexecuting code in user mode. System CPU time is the time\nspent by the kernel executing in system mode on behalf of\nthe process (e.g., executing system calls). The\n<a href=\"https://man.page/1/time\">time(1)</a> command can be used to determine the amount\nof CPU time consumed during the execution of a program. A\nprogram can determine the amount of CPU time it has consumed\nusing <a href=\"https://man.page/2/times\">times(2)</a>, <a href=\"https://man.page/2/getrusage\">getrusage(2)</a>, or\n<a href=\"https://man.page/3/clock\">clock(3)</a>.\n\n<b>The hardware\nclock</b> <br>\nMost computers have a (battery-powered) hardware clock which\nthe kernel reads at boot time in order to initialize the\nsoftware clock. For further details, see <a href=\"https://man.page/4/rtc\">rtc(4)</a> and\n<b>hwclock</b>(8).\n\n<b>The software\nclock, HZ, and jiffies</b> <br>\nThe accuracy of various system calls that set timeouts,\n(e.g., <a href=\"https://man.page/2/select\">select(2)</a>, <a href=\"https://man.page/2/sigtimedwait\">sigtimedwait(2)</a>) and measure\nCPU time (e.g., <a href=\"https://man.page/2/getrusage\">getrusage(2)</a>) is limited by the\nresolution of the <i>software clock</i>, a clock maintained\nby the kernel which measures time in <i>jiffies</i>. The\nsize of a jiffy is determined by the value of the kernel\nconstant <i>HZ</i>.\n\nThe value of\n<i>HZ</i> varies across kernel versions and hardware\nplatforms. On i386 the situation is as follows: on kernels\nup to and including 2.4.x, HZ was 100, giving a jiffy value\nof 0.01 seconds; starting with 2.6.0, HZ was raised to 1000,\ngiving a jiffy of 0.001 seconds. Since kernel 2.6.13, the HZ\nvalue is a kernel configuration parameter and can be 100,\n250 (the default) or 1000, yielding a jiffies value of,\nrespectively, 0.01, 0.004, or 0.001 seconds. Since kernel\n2.6.20, a further frequency is available: 300, a number that\ndivides evenly for the common video frame rates (PAL, 25 HZ;\nNTSC, 30 HZ).\n\nThe\n<a href=\"https://man.page/2/times\">times(2)</a> system call is a special case. It reports\ntimes with a granularity defined by the kernel constant\n<i>USER_HZ</i>. User-space applications can determine the\nvalue of this constant using\n<i>sysconf(_SC_CLK_TCK)</i>.\n\n<b>System and\nprocess clocks; time namespaces</b> <br>\nThe kernel supports a range of clocks that measure various\nkinds of elapsed and virtual (i.e., consumed CPU) time.\nThese clocks are described in <a href=\"https://man.page/2/clock_gettime\">clock_gettime(2)</a>. A few\nof the clocks are settable using <a href=\"https://man.page/2/clock_settime\">clock_settime(2)</a>.\nThe values of certain clocks are virtualized by time\nnamespaces; see <a href=\"https://man.page/7/time_namespaces\">time_namespaces(7)</a>.\n\n\n<b>High-resolution\ntimers</b> <br>\nBefore Linux 2.6.21, the accuracy of timer and sleep system\ncalls (see below) was also limited by the size of the\njiffy.\n\nSince Linux\n2.6.21, Linux supports high-resolution timers (HRTs),\noptionally configurable via <b>CONFIG_HIGH_RES_TIMERS</b>.\nOn a system that supports HRTs, the accuracy of sleep and\ntimer system calls is no longer constrained by the jiffy,\nbut instead can be as accurate as the hardware allows\n(microsecond accuracy is typical of modern hardware). You\ncan determine whether high-resolution timers are supported\nby checking the resolution returned by a call to\n<a href=\"https://man.page/2/clock_getres\">clock_getres(2)</a> or looking at the\n&quot;resolution&quot; entries in\n<i>/proc/timer_list</i>.\n\nHRTs are not\nsupported on all hardware architectures. (Support is\nprovided on x86, arm, and powerpc, among others.)\n\n<b>The\nEpoch</b> <br>\nUNIX systems represent time in seconds since the\n<i>Epoch</i>, 1970-01-01 00:00:00 +0000 (UTC).\n\nA program can\ndetermine the <i>calendar time</i> via the\n<a href=\"https://man.page/2/clock_gettime\">clock_gettime(2)</a> <b>CLOCK_REALTIME</b> clock, which\nreturns time (in seconds and nanoseconds) that have elapsed\nsince the Epoch; <a href=\"https://man.page/2/time\">time(2)</a> provides similar\ninformation, but only with accuracy to the nearest second.\nThe system time can be changed using\n<a href=\"https://man.page/2/clock_settime\">clock_settime(2)</a>.\n\n<b>Broken-down\ntime</b> <br>\nCertain library functions use a structure of type <i>tm</i>\nto represent <i>broken-down time</i>, which stores time\nvalue separated out into distinct components (year, month,\nday, hour, minute, second, etc.). This structure is\ndescribed in <a href=\"https://man.page/3/ctime\">ctime(3)</a>, which also describes functions\nthat convert between calendar time and broken-down time.\nFunctions for converting between broken-down time and\nprintable string representations of the time are described\nin <a href=\"https://man.page/3/ctime\">ctime(3)</a>, <a href=\"https://man.page/3/strftime\">strftime(3)</a>, and\n<a href=\"https://man.page/3/strptime\">strptime(3)</a>.\n\n<b>Sleeping and\nsetting timers</b> <br>\nVarious system calls and functions allow a program to sleep\n(suspend execution) for a specified period of time; see\n<a href=\"https://man.page/2/nanosleep\">nanosleep(2)</a>, <a href=\"https://man.page/2/clock_nanosleep\">clock_nanosleep(2)</a>, and\n<a href=\"https://man.page/3/sleep\">sleep(3)</a>.\n\nVarious system\ncalls allow a process to set a timer that expires at some\npoint in the future, and optionally at repeated intervals;\nsee <a href=\"https://man.page/2/alarm\">alarm(2)</a>, <a href=\"https://man.page/2/getitimer\">getitimer(2)</a>,\n<a href=\"https://man.page/2/timerfd_create\">timerfd_create(2)</a>, and <a href=\"https://man.page/2/timer_create\">timer_create(2)</a>.\n\n<b>Timer\nslack</b> <br>\nSince Linux 2.6.28, it is possible to control the\n&quot;timer slack&quot; value for a thread. The timer slack\nis the length of time by which the kernel may delay the\nwake-up of certain system calls that block with a timeout.\nPermitting this delay allows the kernel to coalesce wake-up\nevents, thus possibly reducing the number of system wake-ups\nand saving power. For more details, see the description of\n<b>PR_SET_TIMERSLACK</b> in <a href=\"https://man.page/2/prctl\">prctl(2)</a>.\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<a href=\"https://man.page/1/date\">date(1)</a>,\n<a href=\"https://man.page/1/time\">time(1)</a>, <a href=\"https://man.page/1/timeout\">timeout(1)</a>, <a href=\"https://man.page/2/adjtimex\">adjtimex(2)</a>,\n<a href=\"https://man.page/2/alarm\">alarm(2)</a>, <a href=\"https://man.page/2/clock_gettime\">clock_gettime(2)</a>,\n<a href=\"https://man.page/2/clock_nanosleep\">clock_nanosleep(2)</a>, <a href=\"https://man.page/2/getitimer\">getitimer(2)</a>,\n<a href=\"https://man.page/2/getrlimit\">getrlimit(2)</a>, <a href=\"https://man.page/2/getrusage\">getrusage(2)</a>,\n<a href=\"https://man.page/2/gettimeofday\">gettimeofday(2)</a>, <a href=\"https://man.page/2/nanosleep\">nanosleep(2)</a>, <a href=\"https://man.page/2/stat\">stat(2)</a>,\n<a href=\"https://man.page/2/time\">time(2)</a>, <a href=\"https://man.page/2/timer_create\">timer_create(2)</a>,\n<a href=\"https://man.page/2/timerfd_create\">timerfd_create(2)</a>, <a href=\"https://man.page/2/times\">times(2)</a>, <a href=\"https://man.page/2/utime\">utime(2)</a>,\n<a href=\"https://man.page/3/adjtime\">adjtime(3)</a>, <a href=\"https://man.page/3/clock\">clock(3)</a>,\n<a href=\"https://man.page/3/clock_getcpuclockid\">clock_getcpuclockid(3)</a>, <a href=\"https://man.page/3/ctime\">ctime(3)</a>,\n<a href=\"https://man.page/3/ntp_adjtime\">ntp_adjtime(3)</a>, <a href=\"https://man.page/3/ntp_gettime\">ntp_gettime(3)</a>,\n<a href=\"https://man.page/3/pthread_getcpuclockid\">pthread_getcpuclockid(3)</a>, <a href=\"https://man.page/3/sleep\">sleep(3)</a>,\n<a href=\"https://man.page/3/strftime\">strftime(3)</a>, <a href=\"https://man.page/3/strptime\">strptime(3)</a>, <a href=\"https://man.page/3/timeradd\">timeradd(3)</a>,\n<a href=\"https://man.page/3/usleep\">usleep(3)</a>, <a href=\"https://man.page/4/rtc\">rtc(4)</a>, <a href=\"https://man.page/7/time_namespaces\">time_namespaces(7)</a>,\n<b>hwclock</b>(8)\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\nThis page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.","body":"\n\n<h1 align=\"center\">TIME</h1>\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">time - overview\nof time and timers</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Real time\nand process time</b> <i><br>\nReal time</i> is defined as time measured from some fixed\npoint, either from a standard point in the past (see the\ndescription of the Epoch and calendar time below), or from\nsome point (e.g., the start) in the life of a process\n(<i>elapsed time</i>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Process\ntime</i> is defined as the amount of CPU time used by a\nprocess. This is sometimes divided into <i>user</i> and\n<i>system</i> components. User CPU time is the time spent\nexecuting code in user mode. System CPU time is the time\nspent by the kernel executing in system mode on behalf of\nthe process (e.g., executing system calls). The\n<a href=\"https://man.page/1/time\">time(1)</a> command can be used to determine the amount\nof CPU time consumed during the execution of a program. A\nprogram can determine the amount of CPU time it has consumed\nusing <a href=\"https://man.page/2/times\">times(2)</a>, <a href=\"https://man.page/2/getrusage\">getrusage(2)</a>, or\n<a href=\"https://man.page/3/clock\">clock(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The hardware\nclock</b> <br>\nMost computers have a (battery-powered) hardware clock which\nthe kernel reads at boot time in order to initialize the\nsoftware clock. For further details, see <a href=\"https://man.page/4/rtc\">rtc(4)</a> and\n<b>hwclock</b>(8).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The software\nclock, HZ, and jiffies</b> <br>\nThe accuracy of various system calls that set timeouts,\n(e.g., <a href=\"https://man.page/2/select\">select(2)</a>, <a href=\"https://man.page/2/sigtimedwait\">sigtimedwait(2)</a>) and measure\nCPU time (e.g., <a href=\"https://man.page/2/getrusage\">getrusage(2)</a>) is limited by the\nresolution of the <i>software clock</i>, a clock maintained\nby the kernel which measures time in <i>jiffies</i>. The\nsize of a jiffy is determined by the value of the kernel\nconstant <i>HZ</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The value of\n<i>HZ</i> varies across kernel versions and hardware\nplatforms. On i386 the situation is as follows: on kernels\nup to and including 2.4.x, HZ was 100, giving a jiffy value\nof 0.01 seconds; starting with 2.6.0, HZ was raised to 1000,\ngiving a jiffy of 0.001 seconds. Since kernel 2.6.13, the HZ\nvalue is a kernel configuration parameter and can be 100,\n250 (the default) or 1000, yielding a jiffies value of,\nrespectively, 0.01, 0.004, or 0.001 seconds. Since kernel\n2.6.20, a further frequency is available: 300, a number that\ndivides evenly for the common video frame rates (PAL, 25 HZ;\nNTSC, 30 HZ).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<a href=\"https://man.page/2/times\">times(2)</a> system call is a special case. It reports\ntimes with a granularity defined by the kernel constant\n<i>USER_HZ</i>. User-space applications can determine the\nvalue of this constant using\n<i>sysconf(_SC_CLK_TCK)</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>System and\nprocess clocks; time namespaces</b> <br>\nThe kernel supports a range of clocks that measure various\nkinds of elapsed and virtual (i.e., consumed CPU) time.\nThese clocks are described in <a href=\"https://man.page/2/clock_gettime\">clock_gettime(2)</a>. A few\nof the clocks are settable using <a href=\"https://man.page/2/clock_settime\">clock_settime(2)</a>.\nThe values of certain clocks are virtualized by time\nnamespaces; see <a href=\"https://man.page/7/time_namespaces\">time_namespaces(7)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>High-resolution\ntimers</b> <br>\nBefore Linux 2.6.21, the accuracy of timer and sleep system\ncalls (see below) was also limited by the size of the\njiffy.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Since Linux\n2.6.21, Linux supports high-resolution timers (HRTs),\noptionally configurable via <b>CONFIG_HIGH_RES_TIMERS</b>.\nOn a system that supports HRTs, the accuracy of sleep and\ntimer system calls is no longer constrained by the jiffy,\nbut instead can be as accurate as the hardware allows\n(microsecond accuracy is typical of modern hardware). You\ncan determine whether high-resolution timers are supported\nby checking the resolution returned by a call to\n<a href=\"https://man.page/2/clock_getres\">clock_getres(2)</a> or looking at the\n&quot;resolution&quot; entries in\n<i>/proc/timer_list</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">HRTs are not\nsupported on all hardware architectures. (Support is\nprovided on x86, arm, and powerpc, among others.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The\nEpoch</b> <br>\nUNIX systems represent time in seconds since the\n<i>Epoch</i>, 1970-01-01 00:00:00 +0000 (UTC).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A program can\ndetermine the <i>calendar time</i> via the\n<a href=\"https://man.page/2/clock_gettime\">clock_gettime(2)</a> <b>CLOCK_REALTIME</b> clock, which\nreturns time (in seconds and nanoseconds) that have elapsed\nsince the Epoch; <a href=\"https://man.page/2/time\">time(2)</a> provides similar\ninformation, but only with accuracy to the nearest second.\nThe system time can be changed using\n<a href=\"https://man.page/2/clock_settime\">clock_settime(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Broken-down\ntime</b> <br>\nCertain library functions use a structure of type <i>tm</i>\nto represent <i>broken-down time</i>, which stores time\nvalue separated out into distinct components (year, month,\nday, hour, minute, second, etc.). This structure is\ndescribed in <a href=\"https://man.page/3/ctime\">ctime(3)</a>, which also describes functions\nthat convert between calendar time and broken-down time.\nFunctions for converting between broken-down time and\nprintable string representations of the time are described\nin <a href=\"https://man.page/3/ctime\">ctime(3)</a>, <a href=\"https://man.page/3/strftime\">strftime(3)</a>, and\n<a href=\"https://man.page/3/strptime\">strptime(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Sleeping and\nsetting timers</b> <br>\nVarious system calls and functions allow a program to sleep\n(suspend execution) for a specified period of time; see\n<a href=\"https://man.page/2/nanosleep\">nanosleep(2)</a>, <a href=\"https://man.page/2/clock_nanosleep\">clock_nanosleep(2)</a>, and\n<a href=\"https://man.page/3/sleep\">sleep(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Various system\ncalls allow a process to set a timer that expires at some\npoint in the future, and optionally at repeated intervals;\nsee <a href=\"https://man.page/2/alarm\">alarm(2)</a>, <a href=\"https://man.page/2/getitimer\">getitimer(2)</a>,\n<a href=\"https://man.page/2/timerfd_create\">timerfd_create(2)</a>, and <a href=\"https://man.page/2/timer_create\">timer_create(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Timer\nslack</b> <br>\nSince Linux 2.6.28, it is possible to control the\n&quot;timer slack&quot; value for a thread. The timer slack\nis the length of time by which the kernel may delay the\nwake-up of certain system calls that block with a timeout.\nPermitting this delay allows the kernel to coalesce wake-up\nevents, thus possibly reducing the number of system wake-ups\nand saving power. For more details, see the description of\n<b>PR_SET_TIMERSLACK</b> in <a href=\"https://man.page/2/prctl\">prctl(2)</a>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/date\">date(1)</a>,\n<a href=\"https://man.page/1/time\">time(1)</a>, <a href=\"https://man.page/1/timeout\">timeout(1)</a>, <a href=\"https://man.page/2/adjtimex\">adjtimex(2)</a>,\n<a href=\"https://man.page/2/alarm\">alarm(2)</a>, <a href=\"https://man.page/2/clock_gettime\">clock_gettime(2)</a>,\n<a href=\"https://man.page/2/clock_nanosleep\">clock_nanosleep(2)</a>, <a href=\"https://man.page/2/getitimer\">getitimer(2)</a>,\n<a href=\"https://man.page/2/getrlimit\">getrlimit(2)</a>, <a href=\"https://man.page/2/getrusage\">getrusage(2)</a>,\n<a href=\"https://man.page/2/gettimeofday\">gettimeofday(2)</a>, <a href=\"https://man.page/2/nanosleep\">nanosleep(2)</a>, <a href=\"https://man.page/2/stat\">stat(2)</a>,\n<a href=\"https://man.page/2/time\">time(2)</a>, <a href=\"https://man.page/2/timer_create\">timer_create(2)</a>,\n<a href=\"https://man.page/2/timerfd_create\">timerfd_create(2)</a>, <a href=\"https://man.page/2/times\">times(2)</a>, <a href=\"https://man.page/2/utime\">utime(2)</a>,\n<a href=\"https://man.page/3/adjtime\">adjtime(3)</a>, <a href=\"https://man.page/3/clock\">clock(3)</a>,\n<a href=\"https://man.page/3/clock_getcpuclockid\">clock_getcpuclockid(3)</a>, <a href=\"https://man.page/3/ctime\">ctime(3)</a>,\n<a href=\"https://man.page/3/ntp_adjtime\">ntp_adjtime(3)</a>, <a href=\"https://man.page/3/ntp_gettime\">ntp_gettime(3)</a>,\n<a href=\"https://man.page/3/pthread_getcpuclockid\">pthread_getcpuclockid(3)</a>, <a href=\"https://man.page/3/sleep\">sleep(3)</a>,\n<a href=\"https://man.page/3/strftime\">strftime(3)</a>, <a href=\"https://man.page/3/strptime\">strptime(3)</a>, <a href=\"https://man.page/3/timeradd\">timeradd(3)</a>,\n<a href=\"https://man.page/3/usleep\">usleep(3)</a>, <a href=\"https://man.page/4/rtc\">rtc(4)</a>, <a href=\"https://man.page/7/time_namespaces\">time_namespaces(7)</a>,\n<b>hwclock</b>(8)</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":7}