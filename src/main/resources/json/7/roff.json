{"name":"roff","body":"\n\n<h1 align=\"center\">ROFF</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">roff - concepts\nand history of roff typesetting</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>roff</i> is\nthe general name for a set of text formatting programs,\nknown under names like <b>troff</b>, <b>nroff</b>,\n<b>ditroff</b>, <b>groff</b>, etc. A <i>roff</i> system\nconsists of an extensible text formatting language and a set\nof programs for printing and converting to other text\nformats. Unix-like operating systems distribute a\n<i>roff</i> system as a core package.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The most common\n<i>roff</i> system today is the free software implementation\nGNU <i>roff</i>, <a href=\"https://man.page/1/groff\">groff(1)</a>. <i>groff</i> implements\nthe look-and-feel and functionality of its ancestors, with\nmany extensions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The ancestry of\n<i>roff</i> is described in section &ldquo;History&rdquo;\nbelow. In this document, the term <i>roff</i> always refers\nto the general class of roff programs, not to the\n<b>roff</b> command provided in early Unix systems.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In spite of its\nage, <i>roff</i> is in wide use today, for example, the\nmanual pages on Unix systems (<i>man&nbsp;pages</i>), many\nsoftware books, system documentation, standards, and\ncorporate documents are written in roff. The <i>roff</i>\noutput for text devices is still unmatched, and its\ngraphical output has the same quality as other free\ntype-setting programs and is better than some of the\ncommercial systems.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>roff</i> is\nused to format Unix <i>manual pages</i>, (or <i>man\npages</i>), the standard documentation system on many\nUnix-derived operating systems.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This document\ndescribes the history of the development of the <i>roff\nsystem</i>; some usage aspects common to all <i>roff</i>\nversions, details on the <i>roff</i> pipeline, which is\nusually hidden behind front-ends like <a href=\"https://man.page/1/groff\">groff(1)</a>; a\ngeneral overview of the formatting language; some tips for\nediting <i>roff</i> files; and many pointers to further\nreadings.</p>\n\n<h2>HISTORY\n<a name=\"HISTORY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Document\nformatting by computer dates back to the 1960s. The\n<i>roff</i> system itself is intimately connected to the\nUnix operating system, but its roots go back to the earlier\noperating systems CTSS and Multics.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The\nPredecessor RUNOFF <br>\nroff</b>&rsquo;s ancestor <b>RUNOFF</b> was written in the\nMAD language by <i>Jerry Saltzer</i> for the <i>Compatible\nTime Sharing System (CTSS)</i>, a project of the\nMassachusetts Institute of Technology (MIT), in 1963 and\n1964&mdash;note that CTSS commands were all uppercase.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In 1965,\nMIT&rsquo;s Project MAC teamed with Bell Telephone\nLaboratories (BTL) and General Electric to begin the\n<a href=\"http://www.multicians.org\"><i>Multics</i>\nsystem</a>. A command called <b>runoff</b> was written for\nMultics in the late 60s in the BCPL language, by <i>Bob\nMorris</i>, <i>Doug McIlroy</i>, and other members of the\nMultics team.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Like its CTSS\nancestor, Multics <b>runoff</b> formatted an input file\nconsisting of text and command lines; commands began with a\nperiod and were two letters. Output from these commands was\nto terminal devices such as IBM Selectric terminals. Multics\n<b>runoff</b> had additional features added, such as the\nability to do two-pass formatting; it became the main format\nfor Multics documentation and text processing.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">BCPL and\n<b>runoff</b> were ported to the GCOS system at Bell Labs\nwhen BTL left the development of Multics.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">There is a free\narchive about <i>historical RUNOFF</i> documents. You can\nget it anonymously by the shell command</p>\n\n<p style=\"margin-left:22%;\">$git clone\nhttps://github.com/bwarken/RUNOFF_historical.git</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">As well, there\nis a new project for writing a program that can read\n<i>RUNOFF files ,</i> but it does not yet work so far. You\ncan get an early version anonymously by the shell\ncommand</p>\n\n<p style=\"margin-left:22%;\">$git clone\nhttps://github.com/bwarken/runoff.git</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The\nClassical nroff/troff System</b> <br>\nAt BTL, there was a need to drive the <i>Graphic Systems\nCAT</i> typesetter, a graphical output device from a PDP-11\ncomputer running Unix. As <b>runoff</b> was too limited for\nthis task it was further developed into a more powerful text\nformatting system by <i>Joseph F. Ossanna</i>, who already\nprogrammed several runoff ports.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The name\n<i>runoff</i> was shortened to <i>roff</i>. The greatly\nenlarged language of Ossanna&rsquo;s version already\nincluded all elements of a full <i>roff system</i>. All\nmodern <i>roff</i> systems try to implement compatibility to\nthis system. So Joe Ossanna can be called the father of all\n<i>roff</i> systems.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This first\n<i>roff system</i> had three formatter programs.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>troff</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>(<i>typesetter roff</i>) generated a graphical output\nfor the <i>CAT</i> typesetter as its only device.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>nroff</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>produced text output suitable for terminals and line\nprinters.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>roff</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>was the reimplementation of the former <b>runoff</b>\nprogram with its limited features; this program was\nabandoned in later versions. Today, the name <i>roff</i> is\nused to refer to a <i>troff/nroff</i> system as a whole.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Ossanna&rsquo;s\nfirst version was written in the PDP-11 assembly language\nand released in 1973. <i>Brian Kernighan</i> joined the\n<i>roff</i> development by rewriting it in the\nC&nbsp;programming language. The C&nbsp;version was released\nin 1975.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The syntax of\nthe formatting language of the <b>nroff</b>/<b>troff</b>\nprograms was documented in the famous <i>Troff User&rsquo;s\nManual</i> [CSTR&nbsp;#54], first published in 1976, with\nfurther revisions up to 1992 by Brian Kernighan. This\ndocument is the specification of the <i>classical troff</i>.\nAll later <i>roff</i> systems tried to establish\ncompatibility with this specification.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">After\nOssanna&rsquo;s death in 1977, Kernighan went on with\ndeveloping <i>troff</i>. In the late 1970s, Kernighan\nequipped <i>troff</i> with a general interface to support\nmore devices, the intermediate output format, and the\npostprocessor system. This completed the structure of a\n<i>roff system</i> as it is still in use today; see section\n&ldquo;Using Roff&rdquo; below. In 1979, these novelties\nwere described in the paper [CSTR&nbsp;#97]. This new\n<i>troff</i> version is the basis for all existing newer\ntroff systems, including <i>groff</i>. On some systems, this\n<i>device independent troff</i> got a binary of its own,\ncalled <a href=\"https://man.page/7/ditroff\">ditroff(7)</a>. All modern <b>troff</b> programs\nalready provide the full <b>ditroff</b> capabilities\nautomatically.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Availability</b>\n<br>\nThe source code of both the ancient Unix and classical\n<i>troff</i> weren&rsquo;t available for two decades.\nNowadays, it is accessible again (on-line) for\nnon-commercial use; see <b>SEE ALSO</b>, below.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>groff\n&mdash; free GNU roff</b> <br>\nThe most important free <i>roff</i> project was the GNU\nimplementation of <i>troff</i>, written from scratch by\n<i>James Clark</i> and put under the\n<a href=\"http://www.gnu.org/copyleft\">GNU Public\nLicense</a>. It was called <i>groff</i> (GNU <i>roff</i>).\nSee <a href=\"https://man.page/1/groff\">groff(1)</a> for an overview.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>groff</i> system is still actively developed. It is\ncompatible to the classical <i>troff</i>, but many\nextensions were added. It is the first <i>roff</i> system\nthat is available on almost all operating systems &mdash;\nand it is free. This makes <i>groff</i> the de facto\n<i>roff</i> standard today.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Free\nHeirloom roff</b> <br>\nAn alternative is\n<a href=\"https://github.com/n-t-roff/heirloom-doctools\"><i>Gunnar\nRitter&rsquo;s Heirloom roff project</i></a> project,\nstarted in 2005, which provides enhanced versions of the\nvarious roff tools found in the OpenSolaris and Plan&nbsp;9\noperating systems, now available under free licenses. You\ncan get this package with the shell command:</p>\n\n<p style=\"margin-left:22%;\">$ git clone\nhttps://github.com/n-t-roff/heirloom-doctools</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Moreover, one\nfinds there the\n<a href=\"https://github.com/n-t-roff/DWB3.3\"><i>Original\nDocumenter&rsquo;s Workbench Release 3.3</i></a>.</p>\n\n<h2>USING ROFF\n<a name=\"USING ROFF\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Most people\nwon&rsquo;t even notice that they are actually using\n<i>roff</i>. When you read a system manual page (man page)\n<i>roff</i> is working in the background. But using\n<i>roff</i> explicitly isn&rsquo;t difficult either.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Some\n<i>roff</i> implementations provide wrapper programs that\nmake it easy to use the <i>roff</i> system on the shell\ncommand line. For example, the GNU <i>roff</i>\nimplementation <a href=\"https://man.page/1/groff\">groff(1)</a> provides command-line options\nto avoid the long command pipes of classical <i>troff</i>; a\nprogram <a href=\"https://man.page/1/grog\">grog(1)</a> tries to guess from the document\nwhich arguments should be used for a run of <b>groff</b>;\npeople who do not like specifying command-line options\nshould try the <a href=\"https://man.page/1/groffer\">groffer(1)</a> program for graphically\ndisplaying <i>groff</i> files and man pages.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The roff\nPipe</b> <br>\nEach <i>roff</i> system consists of preprocessors,\n<i>roff</i> formatter programs, and a set of device\npostprocessors. This concept makes heavy use of the\n<i>piping</i> mechanism, that is, a series of programs is\ncalled one after the other, where the output of each program\nin the queue is taken as the input for the next program.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">cat <i>file</i>\n| ... | <i>preproc</i> | ... | troff <i>options</i> |\n<i>postproc</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\npreprocessors generate <i>roff</i> code that is fed into a\n<i>roff</i> formatter (e.g. <b>troff</b>), which in turn\ngenerates <i>intermediate output</i> that is fed into a\ndevice postprocessor program for printing or final\noutput.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All of these\nparts use programming languages of their own; each language\nis totally unrelated to the other parts. Moreover,\n<i>roff</i> macro packages that were tailored for special\npurposes can be included.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Most\n<i>roff</i> documents use the macros of some package,\nintermixed with code for one or more preprocessors, spiced\nwith some elements from the plain <i>roff</i> language. The\nfull power of the <i>roff</i> formatting language is seldom\nneeded by users; only programmers of macro packages need to\nknow about the gory details.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Preprocessors</b>\n<br>\nA <i>roff</i> preprocessor is any program that generates\noutput that syntactically obeys the rules of the <i>roff</i>\nformatting language. Each preprocessor defines a language of\nits own that is translated into <i>roff</i> code when run\nthrough the preprocessor program. Parts written in these\nlanguages may be included within a <i>roff</i> document;\nthey are identified by special <i>roff</i> requests or\nmacros. Each document that is enhanced by preprocessor code\nmust be run through all corresponding preprocessors before\nit is fed into the actual <i>roff</i> formatter program, for\nthe formatter just ignores all alien code. The preprocessor\nprograms extract and transform only the document parts that\nare determined for them.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">There are a lot\nof free and commercial <i>roff</i> preprocessors. Some of\nthem aren&rsquo;t available on each system, but there is a\nsmall set of preprocessors that are considered as an\nintegral part of each <i>roff</i> system. The classical\npreprocessors are</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3504631.png\" alt=\"Image grohtml-3504631.png\"></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Other known\npreprocessors that are not available on all systems\ninclude</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3504632.png\" alt=\"Image grohtml-3504632.png\"></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Formatter\nPrograms</b> <br>\nA <i>roff formatter</i> is a program that parses documents\nwritten in the <i>roff</i> formatting language or uses some\nof the <i>roff</i> macro packages. It generates\n<i>intermediate output</i>, which is intended to be fed into\na single device postprocessor that must be specified by a\ncommand-line option to the formatter program. The documents\nmust have been run through all necessary preprocessors\nbefore.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The output\nproduced by a <i>roff</i> formatter is represented in yet\nanother language, the <i>intermediate output format</i> or\n<i>troff output</i>. This language was first specified in\n[CSTR&nbsp;#97]; its GNU extension is documented in\n<a href=\"https://man.page/5/groff_out\">groff_out(5)</a>. The intermediate output language is a\nkind of assembly language compared to the high-level\n<i>roff</i> language. The generated intermediate output is\noptimized for a special device, but the language is the same\nfor every device.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <i>roff</i>\nformatter is the heart of the <i>roff</i> system. The\ntraditional <i>roff</i> had two formatters, <b>nroff</b> for\ntext devices and <b>troff</b> for graphical devices.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Often, the name\n<i>troff</i> is used as a general term to refer to both\nformatters.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Devices and\nPostprocessors</b> <br>\nDevices are hardware interfaces like printers, text or\ngraphical terminals, etc., or software interfaces such as a\nconversion into a different text or graphical format.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A <i>roff</i>\npostprocessor is a program that transforms <i>troff</i>\noutput into a form suitable for a special device. The\n<i>roff</i> postprocessors are like device drivers for the\noutput target.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For each device\nthere is a postprocessor program that fits the device\noptimally. The postprocessor parses the generated\nintermediate output and generates device-specific code that\nis sent directly to the device.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The names of\nthe devices and the postprocessor programs are not fixed\nbecause they greatly depend on the software and hardware\nabilities of the actual computer. For example, the classical\ndevices mentioned in [CSTR&nbsp;#54] have greatly changed\nsince the classical times. The old hardware doesn&rsquo;t\nexist any longer and the old graphical conversions were\nquite imprecise when compared to their modern\ncounterparts.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For example,\nthe PostScript device <i>post</i> in classical <i>troff</i>\nhad a resolution of 720 units per inch, while\n<i>groff</i>&rsquo;s <i>ps</i> device has 72000, a\nrefinement of factor 100.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Today the\noperating systems provide device drivers for most\nprinter-like hardware, so it isn&rsquo;t necessary to write\na special hardware postprocessor for each printer.</p>\n\n<h2>ROFF PROGRAMMING\n<a name=\"ROFF PROGRAMMING\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Documents using\n<i>roff</i> are normal text files decorated by <i>roff</i>\nformatting elements. The <i>roff</i> formatting language is\nquite powerful; it is almost a full programming language and\nprovides elements to enlarge the language. With these, it\nbecame possible to develop macro packages that are tailored\nfor special applications. Such macro packages are much\nhandier than plain <i>roff</i>. So most people will choose a\nmacro package without worrying about the internals of the\n<i>roff</i> language.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Macro\nPackages</b> <br>\nMacro packages are collections of macros that are suitable\nto format a special kind of documents in a convenient way.\nThis greatly eases the usage of <i>roff</i>. The macro\ndefinitions of a package are kept in a file called\n<i>name</i><b>.tmac</b> (classically\n<b>tmac.</b><i>name</i>). All tmac files are stored in one\nor more directories at standardized positions. Details on\nthe naming of macro packages and their placement is found in\n<a href=\"https://man.page/5/groff_tmac\">groff_tmac(5)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A macro package\nthat is to be used in a document can be announced to the\nformatter by the command-line option <b>-m</b>, see\n<a href=\"https://man.page/1/troff\">troff(1)</a>, or it can be specified within a document\nusing the file inclusion requests of the <i>roff</i>\nlanguage, see <a href=\"https://man.page/7/groff\">groff(7)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Famous\nclassical macro packages are <i>man</i> for traditional man\npages, <i>mdoc</i> for BSD-style manual pages; the macro\nsets for books, articles, and letters are <i>me</i>\n(probably from the first name of its creator <i>Eric</i>\nAllman), <i>ms</i> (from <i>Manuscript Macros</i>), and\n<i>mm</i> (from <i>Memorandum Macros</i>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The roff\nFormatting Language</b> <br>\nThe classical <i>roff</i> formatting language is documented\nin the <i>Troff User&rsquo;s Manual</i> [CSTR&nbsp;#54]. The\n<i>roff</i> language is a full programming language\nproviding requests, definition of macros, escape sequences,\nstring variables, number or size registers, and flow\ncontrols.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Requests</i>\nare the predefined basic formatting commands similar to the\ncommands at the shell prompt. The user can define\nrequest-like elements using predefined <i>roff</i> elements.\nThese are then called <i>macros</i>. A document writer will\nnot note any difference in usage for requests or macros;\nboth are written on a line on their own starting with a\ndot.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Escape\nsequences</i> are <i>roff</i> elements starting with a\nbackslash &rsquo;<b>\\</b>&rsquo;. They can be inserted\nanywhere, also in the midst of text in a line. They are used\nto implement various features, including the insertion of\nnon-ASCII characters with <b>\\(</b>, font changes with\n<b>\\f</b>, in-line comments with <b>\\&quot;</b>, the\nescaping of special control characters like <b>\\\\</b>, and\nmany other features.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Strings</i>\nare variables that can store a string. A string is stored by\nthe <b>.ds</b> request. The stored string can be retrieved\nlater by the <b>\\*</b> escape sequence.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Registers</i>\nstore numbers and sizes. A register can be set with the\nrequest <b>.nr</b> and its value can be retrieved by the\nescape sequence <b>\\n</b>.</p>\n\n<h2>FILE NAME EXTENSIONS\n<a name=\"FILE NAME EXTENSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Manual pages\n(man pages) take the section number as a file name\nextension, e.g., the filename for this document is\n<i>roff.7</i>, i.e., it is kept in section&nbsp;7 of the man\npages.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The classical\nmacro packages take the package name as an extension, e.g.\n<i>file.</i><b>me</b> for a document using the <i>me</i>\nmacro package, <i>file.</i><b>mm</b> for <i>mm</i>,\n<i>file.</i><b>ms</b> for <i>ms</i>, <i>file.</i><b>pic</b>\nfor <i>pic</i> files, etc.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">But there is no\ngeneral naming scheme for <i>roff</i> documents, though\n<i>file.</i><b>tr</b> for <i>troff file</i> is seen now and\nthen. Maybe there should be a standardization for the\nfilename extensions of <i>roff</i> files.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">File name\nextensions can be very handy in conjunction with the\n<a href=\"https://man.page/1/less\">less(1)</a> pager. It provides the possibility to feed\nall input into a command-line pipe that is specified in the\nshell environment variable <b>LESSOPEN</b>. This process is\nnot well documented, so here an example:</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\">LESSOPEN=&rsquo;|lesspipe\n%s&rsquo;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">where\n<b>lesspipe</b> is either a system supplied command or a\nshell script of your own.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">More details\nfor <i>file name extensions</i> can be found at\n<a href=\"https://man.page/5/groff_filenames\">groff_filenames(5)</a>.</p>\n\n<h2>EDITING ROFF\n<a name=\"EDITING ROFF\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">All <i>roff</i>\nformatters provide automated line breaks and horizontal and\nvertical spacing. In order to not disturb this, the\nfollowing tips can be helpful.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"10%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">Never include empty or blank\nlines in a <i>roff</i> document. Instead, use the empty\nrequest (a line consisting of a dot only) or a line comment\n<b>.\\&quot;</b> if a structuring element is needed.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"10%\"></td>\n<td width=\"78%\">\n\n\n<p>Never start a line with whitespace because this can lead\nto unexpected behavior. Indented paragraphs can be\nconstructed in a controlled way by <i>roff</i> requests.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"10%\"></td>\n<td width=\"78%\">\n\n\n<p>Start each sentence on a line of its own, for the\nspacing after a dot is handled differently depending on\nwhether it terminates an abbreviation or a sentence. To\ndistinguish both cases, do a line break after each\nsentence.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"10%\"></td>\n<td width=\"78%\">\n\n\n<p>To additionally use the auto-fill mode in Emacs, it is\nbest to insert an empty <i>roff</i> request (a line\nconsisting of a dot only) after each sentence.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nexample shows judicious line breaking in a <i>roff</i> input\nfile.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">This is an\nexample of a <br>\n.I roff <br>\ndocument that you can type into your text editor. <br>\n. <br>\nThis is the next sentence in the same paragraph. <br>\n. <br>\nThis is a longer sentence stretching over several input\nlines; <br>\nabbreviations like cf. are easily identified because the dot\nis <br>\nnot followed by a line break. <br>\n. <br>\nIn the output, this sentence continues the same\nparagraph.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Editing with\nEmacs</b> <br>\nThe best program for editing a <i>roff</i> document is Emacs\n(or XEmacs); see <a href=\"https://man.page/1/emacs\">emacs(1)</a>. It provides an\n<i>nroff</i> mode that is suitable for all kinds of\n<i>roff</i> dialects. This mode can be activated by the\nfollowing methods.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When editing a\nfile within Emacs the mode can be changed by typing\n&rsquo;<i>M-x nroff-mode</i>&rsquo;, where <b>M-x</b> means\nto hold down the <b>Meta</b> key (or <b>Alt</b>) and press\nthe <b>x&nbsp;</b>key at the same time.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">But it is also\npossible to have the mode automatically selected when the\nfile is loaded into the editor.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"10%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">The most general method is to\ninclude the following 3 comment lines at the end of the\nfile.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:32%; margin-top: 1em\">.\\&quot; Local\nVariables: <br>\n.\\&quot; mode: nroff <br>\n.\\&quot; End:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"10%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">There is a set of file name\nextensions, e.g. the man pages that trigger the automatic\nactivation of the <i>nroff</i> mode.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"10%\"></td>\n<td width=\"78%\">\n\n\n<p>Theoretically, it is possible to write the sequence</p></td></tr>\n</table>\n\n<p style=\"margin-left:32%; margin-top: 1em\">.\\&quot;\n-*-&nbsp;nroff&nbsp;-*-</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">as the first\nline of a file to have it started in <i>nroff</i> mode when\nloaded. Unfortunately, some applications such as the\n<b>man</b> program are confused by this; so this is\ndeprecated.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Editing with\nVim</b> <br>\nBesides Emacs, some other editors provide <i>nroff</i> style\nfiles too, e.g. <a href=\"https://man.page/1/vim\">vim(1)</a>, an extension of the\n<a href=\"https://man.page/1/vi\">vi(1)</a> program. Vim&rsquo;s highlighting can be made\nto recognize <i>roff</i> files by setting the\n<i>filetype</i> option in a Vim <i>modeline</i>. For this\nfeature to work, your copy of <b>vim</b> must be built with\nsupport for, and configured to enable, several features;\nconsult the editor&rsquo;s online help topics\n&ldquo;auto-setting&rdquo;, &ldquo;filetype&rdquo;, and\n&ldquo;syntax&rdquo;. Then put the following at the end of\nyour <i>roff</i> files, after any Emacs configuration:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">.\\&quot; vim:\nset filetype=groff:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Replace\n&ldquo;groff&rdquo; in the above with &ldquo;nroff&rdquo; if\nyou want highlighing that does <i>not</i> recognize many of\nthe GNU extensions to <i>roff</i>, such as request,\nregister, and string names longer than two characters.</p>\n\n<h2>AUTHORS\n<a name=\"AUTHORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This document\nwas written by\n<a href=\"mailto:groff-bernd.warken-72@web.de\">Bernd\nWarken</a>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">There is a lot\nof documentation on <i>roff</i>. The original papers on\nclassical <i>troff</i> are still available, and all aspects\nof <i>groff</i> are documented in great detail.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Internet\nsites</b> <br>\nHistory of Unix Manpages</p>\n\n\n<p style=\"margin-left:22%;\"><a href=\"http://manpages.bsd.lv/history.html\">The\nhistory page</a> of the mdocml project provides an overview\nof <i>roff</i> development up to date, with links to\noriginal documentation and comments of the original\nauthors.</p>\n\n<p style=\"margin-left:11%;\">troff.org</p>\n\n\n<p style=\"margin-left:22%;\"><a href=\"http://www.troff.org\">The\nhistorical troff site</a> provides an overview and pointers\nto the historical aspects of <i>roff</i>.</p>\n\n<p style=\"margin-left:11%;\">Multics</p>\n\n\n<p style=\"margin-left:22%;\"><a href=\"http://www.multicians.org\">The\nMultics site</a> contains a lot of information on the MIT\nprojects, CTSS, Multics, early Unix, including\n<i>runoff</i>; especially useful are a glossary and the many\nlinks to ancient documents.</p>\n\n<p style=\"margin-left:11%;\">Unix Archive</p>\n\n\n<p style=\"margin-left:22%;\"><a href=\"http://www.tuhs.org/Archive/\">The\nAncient Unixes Archive</a> provides the source code and some\nbinaries of the ancient Unixes (including the source code of\n<i>troff</i> and its documentation) that were made public by\nCaldera since 2001, e.g. of the famous Unix version&nbsp;7\nfor PDP-11 at the\n<a href=\"http://www.tuhs.org/Archive/PDP-11/Trees/V7\">Unix\nV7 site</a>.</p>\n\n<p style=\"margin-left:11%;\">Developers at AT&amp;T Bell\nLabs</p>\n\n\n<p style=\"margin-left:22%;\"><a href=\"http://www.bell-labs.com/\">Bell\nLabs Computing and Mathematical Sciences Research</a>\nprovides a search facility for tracking information on the\nearly developers.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p>Plan 9</p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p><a href=\"http://plan9.bell-labs.com\">The Plan&nbsp;9\noperating system</a> by AT&amp;T Bell Labs.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p>runoff</p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n\n<p><a href=\"http://web.mit.edu/Saltzer/www/publications/pubs.html\">Jerry\nSaltzer&rsquo;s home page</a> stores some documents using\nthe ancient RUNOFF formatting language.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\">CSTR Papers</p>\n\n\n<p style=\"margin-left:22%;\"><a href=\"https://www.alcatel-lucent.com/bell-labs-journals\">The\nBell Labs (now Alcatel) CSTR site</a> stores the original\n<i>troff</i> manuals (CSTR #54, #97, #114, #116, #122) and\nfamous historical documents on programming.</p>\n\n<p style=\"margin-left:11%;\">GNU <i>roff</i></p>\n\n\n<p style=\"margin-left:22%;\"><a href=\"http://www.gnu.org/software/groff\">The\ngroff web site</a> provides the free <i>roff</i>\nimplementation <i>groff</i>, the actual standard\n<i>roff</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Historical\nroff Documentation</b> <br>\nMany classical <b>troff</b> documents are still available\non-line. The two main manuals of the <i>troff</i> language\nare <br>\n[CSTR&nbsp;#54]</p>\n\n<p style=\"margin-left:22%;\">J. F. Ossanna,\n<a href=\"http://www.troff.org/54.pdf\"><i>Nroff/Troff\nUser&rsquo;s Manual</i></a>; Bell Labs, 1976; revised by\nBrian Kernighan, 1992.</p>\n\n<p style=\"margin-left:11%;\">[CSTR&nbsp;#97]</p>\n\n<p style=\"margin-left:22%;\">Brian Kernighan,\n<a href=\"http://cm.bell-labs.com/cm/cs/cstr/97.ps.gz\"><i>A\nTypesetter-independent TROFF</i></a>, Bell Labs, 1981,\nrevised March 1982.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n&ldquo;little language&rdquo; <i>roff</i> papers are <br>\n[CSTR&nbsp;#114]</p>\n\n<p style=\"margin-left:22%;\">Jon L. Bentley and Brian W.\nKernighan,\n<a href=\"http://cm.bell-labs.com/cm/cs/cstr/114.ps.gz\"><i>GRAP\n&ndash; A Language for Typesetting Graphs</i></a>; Bell\nLabs, August 1984.</p>\n\n<p style=\"margin-left:11%;\">[CSTR&nbsp;#116]</p>\n\n<p style=\"margin-left:22%;\">Brian W. Kernighan,\n<a href=\"http://cm.bell-labs.com/cm/cs/cstr/116.ps.gz\"><i>PIC\n&ndash; A Graphics Language for Typesetting</i></a>; Bell\nLabs, December 1984.</p>\n\n<p style=\"margin-left:11%;\">[CSTR&nbsp;#122]</p>\n\n<p style=\"margin-left:22%;\">J. L. Bentley, L. W. Jelinski,\nand B. W. Kernighan,\n<a href=\"http://cm.bell-labs.com/cm/cs/cstr/122.ps.gz\"><i>CHEM\n&ndash; A Program for Typesetting Chemical Structure\nDiagrams, Computers and Chemistry</i></a>; Bell Labs, April\n1986.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">You can get an\narchive with most <i>classical roff documentation</i> as\nreasonable <i>PDF files</i> at <i>github</i> using the\n<i>shell command</i></p>\n\n<p style=\"margin-left:22%;\">$ git clone\nhttps://github.com/bwarken/roff_classical.git</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Manual\nPages</b> <br>\nDue to its complex structure, a full <i>roff</i> system has\nmany man pages, each describing a single aspect of\n<i>roff</i>. Unfortunately, there is no general naming\nscheme for the documentation among the different <i>roff</i>\nimplementations.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In\n<i>groff</i>, the man page <a href=\"https://man.page/1/groff\">groff(1)</a> contains a survey\nof all documentation available in <i>groff</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On other\nsystems, you are on your own, but <a href=\"https://man.page/1/troff\">troff(1)</a> might be a\ngood starting point.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#HISTORY\">HISTORY</a>","<a href=\"#USING ROFF\">USING ROFF</a>","<a href=\"#ROFF PROGRAMMING\">ROFF PROGRAMMING</a>","<a href=\"#FILE NAME EXTENSIONS\">FILE NAME EXTENSIONS</a>","<a href=\"#EDITING ROFF\">EDITING ROFF</a>","<a href=\"#AUTHORS\">AUTHORS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"],"level":7}