{"name":"utf-8","body":"\n\n<h1 align=\"center\">UTF-8</h1>\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">UTF-8 - an\nASCII compatible multibyte Unicode encoding</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The Unicode 3.0\ncharacter set occupies a 16-bit code space. The most obvious\nUnicode encoding (known as UCS-2) consists of a sequence of\n16-bit words. Such strings can contain&mdash;as part of many\n16-bit characters&mdash;bytes such as '\\0' or '/', which\nhave a special meaning in filenames and other C library\nfunction arguments. In addition, the majority of UNIX tools\nexpect ASCII files and can&rsquo;t read 16-bit words as\ncharacters without major modifications. For these reasons,\nUCS-2 is not a suitable external encoding of Unicode in\nfilenames, text files, environment variables, and so on. The\nISO 10646 Universal Character Set (UCS), a superset of\nUnicode, occupies an even larger code\nspace&mdash;31&nbsp;bits&mdash;and the obvious UCS-4\nencoding for it (a sequence of 32-bit words) has the same\nproblems.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The UTF-8\nencoding of Unicode and UCS does not have these problems and\nis the common way in which Unicode is used on UNIX-style\noperating systems.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Properties</b>\n<br>\nThe UTF-8 encoding has the following nice properties:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p>UCS characters 0x00000000 to 0x0000007f (the classic\nUS-ASCII characters) are encoded simply as bytes 0x00 to\n0x7f (ASCII compatibility). This means that files and\nstrings which contain only 7-bit ASCII characters have the\nsame encoding under both ASCII and UTF-8 .</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p>All UCS characters greater than 0x7f are encoded as a\nmultibyte sequence consisting only of bytes in the range\n0x80 to 0xfd, so no ASCII byte can appear as part of another\ncharacter and there are no problems with, for example, '\\0'\nor '/'.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p>The lexicographic sorting order of UCS-4 strings is\npreserved.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p>All possible 2^31 UCS codes can be encoded using\nUTF-8.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p>The bytes 0xc0, 0xc1, 0xfe, and 0xff are never used in\nthe UTF-8 encoding.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p>The first byte of a multibyte sequence which represents\na single non-ASCII UCS character is always in the range 0xc2\nto 0xfd and indicates how long this multibyte sequence is.\nAll further bytes in a multibyte sequence are in the range\n0x80 to 0xbf. This allows easy resynchronization and makes\nthe encoding stateless and robust against missing bytes.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p>UTF-8 encoded UCS characters may be up to six bytes\nlong, however the Unicode standard specifies no characters\nabove 0x10ffff, so Unicode characters can be only up to four\nbytes long in UTF-8.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Encoding</b>\n<br>\nThe following byte sequences are used to represent a\ncharacter. The sequence to be used depends on the UCS code\nnumber of the character: <br>\n0x00000000 - 0x0000007F:</p>\n\n<p style=\"margin-left:17%;\">0<i>xxxxxxx</i></p>\n\n<p style=\"margin-left:11%;\">0x00000080 - 0x000007FF:</p>\n\n<p style=\"margin-left:17%;\">110<i>xxxxx</i>\n10<i>xxxxxx</i></p>\n\n<p style=\"margin-left:11%;\">0x00000800 - 0x0000FFFF:</p>\n\n<p style=\"margin-left:17%;\">1110<i>xxxx</i> 10<i>xxxxxx</i>\n10<i>xxxxxx</i></p>\n\n<p style=\"margin-left:11%;\">0x00010000 - 0x001FFFFF:</p>\n\n<p style=\"margin-left:17%;\">11110<i>xxx</i> 10<i>xxxxxx</i>\n10<i>xxxxxx</i> 10<i>xxxxxx</i></p>\n\n<p style=\"margin-left:11%;\">0x00200000 - 0x03FFFFFF:</p>\n\n<p style=\"margin-left:17%;\">111110<i>xx</i> 10<i>xxxxxx</i>\n10<i>xxxxxx</i> 10<i>xxxxxx</i> 10<i>xxxxxx</i></p>\n\n<p style=\"margin-left:11%;\">0x04000000 - 0x7FFFFFFF:</p>\n\n<p style=\"margin-left:17%;\">1111110<i>x</i> 10<i>xxxxxx</i>\n10<i>xxxxxx</i> 10<i>xxxxxx</i> 10<i>xxxxxx</i>\n10<i>xxxxxx</i></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <i>xxx</i>\nbit positions are filled with the bits of the character code\nnumber in binary representation, most significant bit first\n(big-endian). Only the shortest possible multibyte sequence\nwhich can represent the code number of the character can be\nused.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The UCS code\nvalues 0xd800&ndash;0xdfff (UTF-16 surrogates) as well as\n0xfffe and 0xffff (UCS noncharacters) should not appear in\nconforming UTF-8 streams. According to RFC 3629 no point\nabove U+10FFFF should be used, which limits characters to\nfour bytes.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Example</b>\n<br>\nThe Unicode character 0xa9 = 1010 1001 (the copyright sign)\nis encoded in UTF-8 as</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">11000010\n10101001 = 0xc2 0xa9</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">and character\n0x2260 = 0010 0010 0110 0000 (the &quot;not equal&quot;\nsymbol) is encoded as:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">11100010\n10001001 10100000 = 0xe2 0x89 0xa0</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Application\nnotes</b> <br>\nUsers have to select a UTF-8 locale, for example with</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">export\nLANG=en_GB.UTF-8</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">in order to\nactivate the UTF-8 support in applications.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Application\nsoftware that has to be aware of the used character encoding\nshould always set the locale with for example</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\">setlocale(LC_CTYPE,\n&quot;&quot;)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">and programmers\ncan then test the expression</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\">strcmp(nl_langinfo(CODESET),\n&quot;UTF-8&quot;) == 0</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">to determine\nwhether a UTF-8 locale has been selected and whether\ntherefore all plaintext standard input and output, terminal\ncommunication, plaintext file content, filenames and\nenvironment variables are encoded in UTF-8.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Programmers\naccustomed to single-byte encodings such as US-ASCII or ISO\n8859 have to be aware that two assumptions made so far are\nno longer valid in UTF-8 locales. Firstly, a single byte\ndoes not necessarily correspond any more to a single\ncharacter. Secondly, since modern terminal emulators in\nUTF-8 mode also support Chinese, Japanese, and Korean\ndouble-width characters as well as nonspacing combining\ncharacters, outputting a single character does not\nnecessarily advance the cursor by one position as it did in\nASCII. Library functions such as <a href=\"https://man.page/3/mbsrtowcs\">mbsrtowcs(3)</a> and\n<a href=\"https://man.page/3/wcswidth\">wcswidth(3)</a> should be used today to count characters\nand cursor positions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The official\nESC sequence to switch from an ISO 2022 encoding scheme (as\nused for instance by VT100 terminals) to UTF-8 is ESC % G\n(&quot;\\x1b%G&quot;). The corresponding return sequence from\nUTF-8 to ISO 2022 is ESC % @ (&quot;\\x1b%@&quot;). Other ISO\n2022 sequences (such as for switching the G0 and G1 sets)\nare not applicable in UTF-8 mode.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Security</b>\n<br>\nThe Unicode and UCS standards require that producers of\nUTF-8 shall use the shortest form possible, for example,\nproducing a two-byte sequence with first byte 0xc0 is\nnonconforming. Unicode 3.1 has added the requirement that\nconforming programs must not accept non-shortest forms in\ntheir input. This is for security reasons: if user input is\nchecked for possible security violations, a program might\ncheck only for the ASCII version of &quot;/../&quot; or\n&quot;;&quot; or NUL and overlook that there are many\nnon-ASCII ways to represent these things in a non-shortest\nUTF-8 encoding.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Standards</b>\n<br>\nISO/IEC 10646-1:2000, Unicode 3.1, RFC&nbsp;3629, Plan\n9.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/locale\">locale(1)</a>,\n<a href=\"https://man.page/3/nl_langinfo\">nl_langinfo(3)</a>, <a href=\"https://man.page/3/setlocale\">setlocale(3)</a>,\n<a href=\"https://man.page/7/charsets\">charsets(7)</a>, <a href=\"https://man.page/7/unicode\">unicode(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":7}