{"name":"bootup","body":"\n\n<h1 align=\"center\">BOOTUP</h1>\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">bootup - System\nbootup process</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">A number of\ndifferent components are involved in the boot of a Linux\nsystem. Immediately after power-up, the system firmware will\ndo minimal hardware initialization, and hand control over to\na boot loader (e.g. <a href=\"https://man.page/7/systemd-boot\">systemd-boot(7)</a> or\n<b><font color=\"#0000FF\">GRUB</font></b>\n<small><font color=\"#000000\">[1]</font></small>\n<font color=\"#000000\">) stored on a persistent storage\ndevice. This boot loader will then invoke an OS kernel from\ndisk (or the network). On systems using EFI or other types\nof firmware, this firmware may also load the kernel\ndirectly.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">The\nkernel (optionally) mounts an in-memory file system, often\ngenerated by <b>dracut</b>(8), which looks for the root file\nsystem. Nowadays this is usually implemented as an initramfs\n&mdash; a compressed archive which is extracted when the\nkernel boots up into a lightweight in-memory file system\nbased on tmpfs, but in the past normal file systems using an\nin-memory block device (ramdisk) were used, and the name\n&quot;initrd&quot; is still used to describe both concepts.\nIt's the boot loader or the firmware that loads both the\nkernel and initrd/initramfs images into memory, but the\nkernel which interprets it as a file system.\n<a href=\"https://man.page/1/systemd\">systemd(1)</a> may be used to manage services in the\ninitrd, similarly to the real system.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">After\nthe root file system is found and mounted, the initrd hands\nover control to the host's system manager (such as\n<a href=\"https://man.page/1/systemd\">systemd(1)</a>) stored in the root file system, which is\nthen responsible for probing all remaining hardware,\nmounting all necessary file systems and spawning all\nconfigured services.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">On\nshutdown, the system manager stops all services, unmounts\nall file systems (detaching the storage technologies backing\nthem), and then (optionally) jumps back into the initrd code\nwhich unmounts/detaches the root file system and the storage\nit resides on. As a last step, the system is powered\ndown.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">Additional\ninformation about the system boot process may be found in\n<a href=\"https://man.page/7/boot\">boot(7)</a>.</font></p>\n\n<h2>SYSTEM MANAGER BOOTUP\n<a name=\"SYSTEM MANAGER BOOTUP\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">At\nboot, the system manager on the OS image is responsible for\ninitializing the required file systems, services and drivers\nthat are necessary for operation of the system. On\n<a href=\"https://man.page/1/systemd\">systemd(1)</a> systems, this process is split up in\nvarious discrete steps which are exposed as target units.\n(See <b>systemd.target</b>(5) for detailed information about\ntarget units.) The boot-up process is highly parallelized so\nthat the order in which specific target units are reached is\nnot deterministic, but still adheres to a limited amount of\nordering structure.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">When\nsystemd starts up the system, it will activate all units\nthat are dependencies of default.target (as well as\nrecursively all dependencies of these dependencies).\nUsually, default.target is simply an alias of\ngraphical.target or multi-user.target, depending on whether\nthe system is configured for a graphical UI or only for a\ntext console. To enforce minimal ordering between the units\npulled in, a number of well-known target units are\navailable, as listed on\n<b>systemd.special</b>(7).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">The\nfollowing chart is a structural overview of these well-known\nunits and their position in the boot-up logic. The arrows\ndescribe which units are pulled in and ordered before which\nother units. Units near the top are started before units\nnearer to the bottom of the chart.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">cryptsetup-pre.target\nveritysetup-pre.target <br>\n| <br>\n(various low-level v <br>\nAPI VFS mounts: (various cryptsetup/veritysetup devices...)\n<br>\nmqueue, configfs, | | <br>\ndebugfs, ...) v | <br>\n| cryptsetup.target | <br>\n| (various swap | | remote-fs-pre.target <br>\n| devices...) | | | | <br>\n| | | | | v <br>\n| v local-fs-pre.target | | | (network file systems) <br>\n| swap.target | | v v | <br>\n| | v | remote-cryptsetup.target | <br>\n| | (various low-level (various mounts and |\nremote-veritysetup.target | <br>\n| | services: udevd, fsck services...) | | remote-fs.target\n<br>\n| | tmpfiles, random | | | / <br>\n| | seed, sysctl, ...) v | | / <br>\n| | | local-fs.target | | / <br>\n| | | | | | / <br>\n\\____|______|_______________ ______|___________/ | / <br>\n\\ / | / <br>\nv | / <br>\nsysinit.target | / <br>\n| | / <br>\n______________________/|\\_____________________ | / <br>\n/ | | | \\ | / <br>\n| | | | | | / <br>\nv v | v | | / <br>\n(various (various | (various | |/ <br>\ntimers...) paths...) | sockets...) | | <br>\n| | | | | | <br>\nv v | v | | <br>\ntimers.target paths.target | sockets.target | | <br>\n| | | | v | <br>\nv \\_______ | _____/ rescue.service | <br>\n\\|/ | | <br>\nv v | <br>\nbasic.target <i>rescue.target</i> | <br>\n| | <br>\n________v____________________ | <br>\n/ | \\ | <br>\n| | | | <br>\nv v v | <br>\ndisplay- (various system (various system | <br>\nmanager.service services services) | <br>\n| required for | | <br>\n| graphical UIs) v v <br>\n| | <i>multi-user.target</i> <br>\nemergency.service | | | <br>\n| \\_____________ | _____________/ <br>\nv \\|/ <i><br>\nemergency.target</i> v <i><br>\ngraphical.target</i></font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">Target\nunits that are commonly used as boot targets are\n<i>emphasized</i>. These units are good choices as goal\ntargets, for example by passing them to the\n<i>systemd.unit=</i> kernel command line option (see\n<a href=\"https://man.page/1/systemd\">systemd(1)</a>) or by symlinking default.target to\nthem.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">timers.target\nis pulled-in by basic.target asynchronously. This allows\ntimers units to depend on services which become only\navailable later in boot.</font></p>\n\n<h2>USER MANAGER STARTUP\n<a name=\"USER MANAGER STARTUP\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">The\nsystem manager starts the user@<i>uid</i>.service unit for\neach user, which launches a separate unprivileged instance\nof <b>systemd</b> for each user &mdash; the user manager.\nSimilarly to the system manager, the user manager starts\nunits which are pulled in by default.target. The following\nchart is a structural overview of the well-known user units.\nFor non-graphical sessions, default.target is used. Whenever\nthe user logs into a graphical session, the login manager\nwill start the graphical-session.target target that is used\nto pull in units required for the graphical session. A\nnumber of targets (shown on the right side) are started when\nspecific hardware is available to the user.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">(various\n(various (various <br>\ntimers...) paths...) sockets...) (sound devices) <br>\n| | | | <br>\nv v v v <br>\ntimers.target paths.target sockets.target sound.target <br>\n| | | <br>\n\\______________ _|_________________/ (bluetooth devices)\n<br>\n\\ / | <br>\nV v <br>\nbasic.target bluetooth.target <br>\n| <br>\n__________/ \\_______ (smartcard devices) <br>\n/ \\ | <br>\n| | v <br>\n| v smartcard.target <br>\nv graphical-session-pre.target <br>\n(various user services) | (printers) <br>\n| v | <br>\n| (services for the graphical session) v <br>\n| | printer.target <br>\nv v <i><br>\ndefault.target</i> graphical-session.target</font></p>\n\n<h2>BOOTUP IN THE INITIAL RAM DISK (INITRD)\n<a name=\"BOOTUP IN THE INITIAL RAM DISK (INITRD)\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">The\ninitial RAM disk implementation (initrd) can be set up using\nsystemd as well. In this case, boot up inside the initrd\nfollows the following structure.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">systemd\ndetects that it is run within an initrd by checking for the\nfile /etc/initrd-release. The default target in the initrd\nis initrd.target. The bootup process begins identical to the\nsystem manager bootup (see above) until it reaches\nbasic.target. From there, systemd approaches the special\ntarget initrd.target. Before any file systems are mounted,\nit must be determined whether the system will resume from\nhibernation or proceed with normal boot. This is\naccomplished by systemd-hibernate-resume@.service which must\nbe finished before local-fs-pre.target, so no filesystems\ncan be mounted before the check is complete. When the root\ndevice becomes available, initrd-root-device.target is\nreached. If the root device can be mounted at /sysroot, the\nsysroot.mount unit becomes active and initrd-root-fs.target\nis reached. The service initrd-parse-etc.service scans\n/sysroot/etc/fstab for a possible /usr/ mount point and\nadditional entries marked with the <i>x-initrd.mount</i>\noption. All entries found are mounted below /sysroot, and\ninitrd-fs.target is reached. The service\ninitrd-cleanup.service isolates to the\ninitrd-switch-root.target, where cleanup services can run.\nAs the very last step, the initrd-switch-root.service is\nactivated, which will cause the system to switch its root to\n/sysroot.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">:\n(beginning identical to above) <br>\n: <br>\nv <br>\nbasic.target <br>\n| emergency.service <br>\n______________________/| | <br>\n/ | v <br>\n| initrd-root-device.target <i>emergency.target</i> <br>\n| | <br>\n| v <br>\n| sysroot.mount <br>\n| | <br>\n| v <br>\n| initrd-root-fs.target <br>\n| | <br>\n| v <br>\nv initrd-parse-etc.service <br>\n(custom initrd | <br>\nservices...) v <br>\n| (sysroot-usr.mount and <br>\n| various mounts marked <br>\n| with fstab option <br>\n| x-initrd.mount...) <br>\n| | <br>\n| v <br>\n| initrd-fs.target <br>\n\\______________________ | <br>\n\\| <br>\nv <br>\ninitrd.target <br>\n| <br>\nv <br>\ninitrd-cleanup.service <br>\nisolates to <br>\ninitrd-switch-root.target <br>\n| <br>\nv <br>\n______________________/| <br>\n/ v <br>\n| initrd-udevadm-cleanup-db.service <br>\nv | <br>\n(custom initrd | <br>\nservices...) | <br>\n\\______________________ | <br>\n\\| <br>\nv <br>\ninitrd-switch-root.target <br>\n| <br>\nv <br>\ninitrd-switch-root.service <br>\n| <br>\nv <br>\nTransition to Host OS</font></p>\n\n<h2>SYSTEM MANAGER SHUTDOWN\n<a name=\"SYSTEM MANAGER SHUTDOWN\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">System\nshutdown with systemd also consists of various target units\nwith some minimal ordering structure applied:</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">(conflicts\nwith (conflicts with <br>\nall system all file system <br>\nservices) mounts, swaps, <br>\n| cryptsetup/ <br>\n| veritysetup <br>\n| devices, ...) <br>\n| | <br>\nv v <br>\nshutdown.target umount.target <br>\n| | <br>\n\\_______ ______/ <br>\n\\ / <br>\nv <br>\n(various low-level <br>\nservices) <br>\n| <br>\nv <br>\nfinal.target <br>\n| <br>\n_____________________________________/\n\\_________________________________ <br>\n/ | | \\ <br>\n| | | | <br>\nv v v v <br>\nsystemd-reboot.service systemd-poweroff.service\nsystemd-halt.service systemd-kexec.service <br>\n| | | | <br>\nv v v v <i><br>\nreboot.target poweroff.target halt.target\nkexec.target</i></font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">Commonly\nused system shutdown targets are\n<i>emphasized</i>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">Note\nthat <b>systemd-halt.service</b>(8), systemd-reboot.service,\nsystemd-poweroff.service and systemd-kexec.service will\ntransition the system and server manager (PID 1) into the\nsecond phase of system shutdown (implemented in the\nsystemd-shutdown binary), which will unmount any remaining\nfile systems, kill any remaining processes and release any\nother remaining resources, in a simple and robust fashion,\nwithout taking any service or unit concept into account\nanymore. At that point, regular applications and resources\nare generally terminated and released already, the second\nphase hence operates only as safety net for everything that\ncouldn't be stopped or released for some reason during the\nprimary, unit-based shutdown phase described\nabove.</font></p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><a href=\"https://man.page/1/systemd\">systemd(1)</a>,\n<a href=\"https://man.page/7/boot\">boot(7)</a>, <b>systemd.special</b>(7),\n<b>systemd.target</b>(5), <b>systemd-halt.service</b>(8),\n<b>dracut</b>(8)</font></p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"12%\"></td>\n<td width=\"3%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">1.</font></p> </td>\n<td width=\"2%\"></td>\n<td width=\"6%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">GRUB</font></p> </td>\n<td width=\"77%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">https://www.gnu.org/software/grub/</font></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#SYSTEM MANAGER BOOTUP\">SYSTEM MANAGER BOOTUP</a>","<a href=\"#USER MANAGER STARTUP\">USER MANAGER STARTUP</a>","<a href=\"#BOOTUP IN THE INITIAL RAM DISK (INITRD)\">BOOTUP IN THE INITIAL RAM DISK (INITRD)</a>","<a href=\"#SYSTEM MANAGER SHUTDOWN\">SYSTEM MANAGER SHUTDOWN</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#NOTES\">NOTES</a>"],"level":7}