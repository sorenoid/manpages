{"name":"dconf","description":"dconf - A configuration system","body":"\n\n<h1 align=\"center\">DCONF</h1>\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">dconf - A\nconfiguration system</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">dconf is a\nsimple key/value storage system that is heavily optimised\nfor reading. This makes it an ideal system for storing user\npreferences (which are read 1000s of times for each time the\nuser changes one). It was created with this usecase in\nmind.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All preferences\nare stored in a single large binary file. Layering of\npreferences is possible using multiple files (ie: for site\ndefaults). Lock-down is also supported. The binary file for\nthe defaults can optionally be compiled from a set of plain\ntext keyfiles.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">dconf has a\npartial client/server architecture. It uses D-Bus. The\nserver is only involved in writes (and is not activated in\nthe user session until the user modifies a preference). The\nservice is stateless and can exit freely at any time (and is\ntherefore robust against crashes). The list of paths that\neach process is watching is stored within the D-Bus daemon\nitself (as D-Bus signal match rules).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Reads are\nperformed by direct access (via mmap) to the on-disk\ndatabase which is essentially a hashtable. For this reason,\ndconf reads typically involve zero system calls and are\ncomparable to a hashtable lookup in terms of speed.\nPractically speaking, in simple non-layered setups, dconf is\nless than 10 times slower than GHashTable.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Writes are\nassumed only to happen in response to explicit user\ninteraction (like clicking on a checkbox in a preferences\ndialog) and are therefore not optimised at all. On some file\nsystems, dconf-service will call fsync() for every write,\nwhich can introduce a latency of up to 100ms. This latency\nis hidden by the client libraries through a clever\n&quot;fast&quot; mechanism that records the outstanding\nchanges locally (so they can be read back immediately) until\nthe service signals that a write has completed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The binary\ndatabase format that dconf uses by default is not suitable\nfor use on NFS, where mmap does not work well. To handle\nthis common use case, dconf can be configured to place its\nbinary database in <b>XDG_RUNTIME_DIR</b> (which is\nguaranteed to be local, but non-persistent) and synchronize\nit with a plain text keyfile in the users home\ndirectory.</p>\n\n<h2>PROFILES\n<a name=\"PROFILES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">A profile is a\nlist of configuration databases that dconf consults to find\nthe value for a key. The user's personal database always\ntakes the highest priority, followed by the system databases\nin the order prescribed by the profile.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On startup,\ndconf consults the <b>DCONF_PROFILE</b> environment\nvariable. If set, dconf will attempt to open the named\nprofile, aborting if that fails. If the environment variable\nis not set, it will attempt to open the profile named\n&quot;user&quot; and if that fails, it will fall back to an\ninternal hard-wired configuration. dconf stores its profiles\nin text files. <b>DCONF_PROFILE</b> can specify a relative\npath to a file in /etc/dconf/profile/, or an absolute path\n(such as in a user's home directory). The profile name can\nonly use alphanumeric characters or '_'.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A profile file\nmight look like the following:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">user-db:user\n<br>\nsystem-db:local <br>\nsystem-db:site</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Each line in a\nprofile specifies one dconf database. The first line\nindicates the database used to write changes, and the\nremaining lines indicate read-only databases. (The first\nline should specify a user-db or service-db, so that users\ncan actually make configuration changes.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A\n&quot;user-db&quot; line specifies a user database. These\ndatabases are found in <b>$XDG_CONFIG_HOME</b>/dconf/. The\nname of the file to open in that directory is exactly as it\nis written in the profile. This file is expected to be in\nthe binary dconf database format. Note that\n<b>XDG_CONFIG_HOME</b> cannot be set/modified per terminal\nor session, because then the writer and reader would be\nworking on different DBs (the writer is started by DBus and\ncannot see that variable).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A\n&quot;service-db&quot; line instructs dconf to place the\nbinary database file for the user database in\n<b>XDG_RUNTIME_DIR</b>. Since this location is not\npersistent, the rest of the line instructs dconf how to\nstore the database persistently. A typical line is\nservice-db:keyfile/user, which tells dconf to synchronize\nthe binary database with a plain text keyfile in\n<b>$XDG_CONFIG_HOME</b>/dconf/user.txt. The synchronization\nis bi-directional.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A\n&quot;system-db&quot; line specifies a system database.\nThese databases are found in /etc/dconf/db/. Again, the name\nof the file to open in that directory is exactly as it is\nwritten in the profile and the file is expected to be in the\ndconf database format.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\n<b>DCONF_PROFILE</b> environment variable is unset and the\n&quot;user&quot; profile can not be opened, then the effect\nis as if the profile was specified by this file:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">user-db:user</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">That is, the\nuser's personal database is consulted and there are no\nsystem settings.</p>\n\n<h2>KEY FILES\n<a name=\"KEY FILES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">To facilitate\nsystem configuration with a text editor, dconf can populate\ndatabases from plain text keyfiles. For any given system\ndatabase, keyfiles can be placed into the\n/etc/dconf/db/<i>database</i>.d/ directory. The keyfiles\ncontain groups of settings as follows:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"># Some useful\ndefault settings for our site</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">[system/proxy/http]\n<br>\nhost='172.16.0.1' <br>\nenabled=true</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">[org/gnome/desktop/background]\n<br>\n\npicture-uri='file:///usr/local/rupert-corp/company-wallpaper.jpeg'</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">After changing\nkeyfiles, the database needs to be updated with the\n<a href=\"https://man.page/1/dconf\">dconf(1)</a> tool.</p>\n\n<h2>LOCKS\n<a name=\"LOCKS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">System\ndatabases can contain 'locks' for keys. If a lock for a\nparticular key or subpath is installed into a database then\nno database listed above that one in the profile will be\nable to modify any of the affected settings. This can be\nused to enforce mandatory settings.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To add locks to\na database, place text files in the\n/etc/dconf/db/<i>database</i>.d/locks directory, where\n<i>database</i> is the name of a system database, as\nspecified in the profile. The files contain list of keys to\nlock, on per line. Lines starting with a # are ignored. Here\nis an example:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"># prevent\nchanges to the company wallpaper <br>\n/org/gnome/desktop/background/picture-uri</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">After changing\nlocks, the database needs to be updated with the\n<a href=\"https://man.page/1/dconf\">dconf(1)</a> tool.</p>\n\n<h2>PORTABILITY\n<a name=\"PORTABILITY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">dconf mostly\ntargets Free Software operating systems. It will\ntheoretically run on Mac OS but there isn't much point to\nthat (since Mac OS applications want to store preferences in\nplist files). It is not possible to use dconf on Windows\nbecause of the inability to rename over a file that's still\nin use (which is what the dconf-service does on every\nwrite).</p>\n\n<h2>API STABILITY\n<a name=\"API STABILITY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The dconf API\nis not particularly friendly, and is not guaranteed to be\nstable. Because of this and the lack of portability, you\nalmost certainly want to use some sort of wrapper API around\nit. The wrapper API used by GTK+ and GNOME applications is\n<b><font color=\"#0000FF\">GSettings</font></b>\n<small><font color=\"#000000\">[1]</font></small>\n<font color=\"#000000\">, which is included as part of GLib.\nGSettings has backends for Windows (using the registry) and\nMac OS (using property lists) as well as its dconf backend\nand is the proper API to use for graphical\napplications.</font></p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><a href=\"https://man.page/1/dconf-service\">dconf-service(1)</a>,\n<a href=\"https://man.page/1/dconf-editor\">dconf-editor(1)</a>, <a href=\"https://man.page/1/dconf\">dconf(1)</a>,</font>\n<b><font color=\"#0000FF\">GSettings</font></b>\n<small><font color=\"#000000\">[1]</font></small></p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"12%\"></td>\n<td width=\"3%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">1.</font></p> </td>\n<td width=\"2%\"></td>\n<td width=\"14%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">GSettings</font></p> </td>\n<td width=\"69%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">http://developer.gnome.org/gio/stable/GSettings.html</font></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#PROFILES\">PROFILES</a>","<a href=\"#KEY FILES\">KEY FILES</a>","<a href=\"#LOCKS\">LOCKS</a>","<a href=\"#PORTABILITY\">PORTABILITY</a>","<a href=\"#API STABILITY\">API STABILITY</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#NOTES\">NOTES</a>"],"level":7}