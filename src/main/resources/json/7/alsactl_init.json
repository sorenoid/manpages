{"name":"alsactl_init","description":"alsactl_init -\nalsa control management - initialization\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n&quot;alsactl\ninit&quot; provides soundcard specific initialization.\n\n<h2>CONFIGURATION\n<a name=\"CONFIGURATION\"></a>\n</h2>\n\n\nAll\n&quot;alsactl init&quot; configuration files are placed in\n/usr/share/alsa/init/ directory. The top level configuration\nfile is /usr/share/alsa/init/00main. The default top-level\nfile can be also specified using -i or --initfile parameter\nfor the alsactl tool. Every file consists of a set of lines\nof text. All empty lines or lines beginning with '#' will be\nignored.\n\n<b>Rules\nfiles</b> <br>\nThe &quot;alsactl init&quot; rules are read from the files\nlocated in the /usr/share/alsa/init/*. The top level\nconfiguration file is /usr/share/alsa/init/00main. Every\nline in the rules file contains at least one key value pair.\nThere are two kind of keys, match and assignment keys. If\nall match keys are matching against its value, the rule gets\napplied and the assign keys get the specified value\nassigned.\n\nA rule may\nconsists of a list of one or more key value pairs separated\nby a comma. Each key has a distinct operation, depending on\nthe used operator. Valid operators are:\n\n<b>==</b>\n\n<p style=\"margin-left:17%;\">Compare for equality.\n\n<b>!=</b>\n\n<p style=\"margin-left:17%;\">Compare for non-equality.\n\n<b>=</b>\n\n<p style=\"margin-left:17%;\">Assign a value to a key. Keys\nthat represent a list, are reset and only this single value\nis assigned.\n\n<b>+=</b>\n\n<p style=\"margin-left:17%;\">Add the value to a key that\nholds a list of entries.\n\n<b>:=</b>\n\n<p style=\"margin-left:17%;\">Assign a value to a key\nfinally; disallow any later changes, which may be used to\nprevent changes by any later rules.\n\nThe following\nkey names can be used to match against device\nproperties:\n\n\n<b>CARDINDEX</b>\n\n<p style=\"margin-left:17%;\">Match the card index of the\nALSA driver.\n\n\n<b>CTL{</b><i>attribute</i><b>}</b>\n\n<p style=\"margin-left:17%;\">Set or test universal control\nattribute. Possible attributes:\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>numid</b>\n\n<p style=\"margin-left:23%;\">Numeric control\nidentification.\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>iface</b>,\n<b>interface</b>\n\n<p style=\"margin-left:23%;\">Control interface name (CARD,\nHWEDEP, MIXER, PCM, RAWMIDI, TIMER, SEQUENCER)\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>subdev</b>,\n<b>subdevice</b>\n\n<p style=\"margin-left:23%;\">Subdevice number.\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>name</b>\n\n<p style=\"margin-left:23%;\">Control name\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>index</b>\n\n<p style=\"margin-left:23%;\">Control index\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>type</b>\n\n<p style=\"margin-left:23%;\">Control type (BOOLEAN, INTEGER,\nINTEGER64, ENUMERATED, BYTES, IEC958)\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>attr</b>,\n<b>attribute</b>\n\n<p style=\"margin-left:23%;\">Attributes (stored in a string\n- use match characters * and ?):\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>r</b>\n\n<p style=\"margin-left:29%;\">control is readable\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>w</b>\n\n<p style=\"margin-left:29%;\">control is writable\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>v</b>\n\n<p style=\"margin-left:29%;\">control is volatile\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>i</b>\n\n<p style=\"margin-left:29%;\">control is inactive\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>l</b>\n\n<p style=\"margin-left:29%;\">control is locked\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>R</b>\n\n<p style=\"margin-left:29%;\">control is TLV readable\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>W</b>\n\n<p style=\"margin-left:29%;\">control is TLV writable\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>C</b>\n\n<p style=\"margin-left:29%;\">control is TLV commandable\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>o</b>\n\n<p style=\"margin-left:29%;\">process is owner of this\ncontrol\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>u</b>\n\n<p style=\"margin-left:29%;\">control created in user\nspace\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>owner</b>\n\n<p style=\"margin-left:23%;\">Control owner process PID\nnumber\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>count</b>\n\n<p style=\"margin-left:23%;\">Control count of values\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>min</b>\n\n<p style=\"margin-left:23%;\">Value range - minimum value\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>max</b>\n\n<p style=\"margin-left:23%;\">Value range - maximum value\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>step</b>\n\n<p style=\"margin-left:23%;\">Value range - step value\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>dBmin</b>\n\n<p style=\"margin-left:23%;\">Value range - minimum dB\nvalue\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>dBmax</b>\n\n<p style=\"margin-left:23%;\">Value range - maximum dB\nvalue\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>items</b>\n\n<p style=\"margin-left:23%;\">Enumerated value - number of\ntext items\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>enums</b>\n\n<p style=\"margin-left:23%;\">Enumerated value - list of text\nnames stored between '|' character\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>value</b>\n\n<p style=\"margin-left:23%;\">Value of control stored to a\nstring delimited by comma (,).\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>do_search</b>\n\n<p style=\"margin-left:23%;\">Search for a control. Value\n&quot;1&quot; is returned if a control was found. The\nCTL{name} key might contain match characters * and ?. An\ncontrol index might be specified as first argument starting\nfrom zero (e.g. CTL{do_search 2}=&quot;1&quot;).\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>do_count</b>\n\n<p style=\"margin-left:23%;\">Search for a controls and\nreturn total count of matched ones. The CTL{name} key might\ncontain match characters * and ?.\n\n\n<b>CONFIG{sysfs_device}</b>\n\n<p style=\"margin-left:17%;\">The relative path to sysfs\nsubsystem specifying the root directory of a soundcard\ndevice. Usually, it should be set to\n&quot;/class/sound/card$cardinfo{card}/device&quot;.\n\n\n<b>ATTR{</b><i>filename</i><b>}</b>\n\n<p style=\"margin-left:17%;\">Match sysfs attribute values of\nthe soundcard device. The relative path to sysfs tree must\nbe defined by CONFIG{sysfs_device} key. Trailing whitespace\nin the attribute values is ignored, if the specified match\nvalue does not contain trailing whitespace itself. Depending\non the type of operator, this key is also used to set the\nvalue of a sysfs attribute.\n\n\n<b>ENV{</b><i>key</i><b>}</b>\n\n<p style=\"margin-left:17%;\">Match against the value of an\nenvironment variable. Up to five <b>ENV</b> keys can be\nspecified per rule. Depending on the type of operator, this\nkey is also used to export a variable to the\nenvironment.\n\n\n<b>PROGRAM</b>\n\n<p style=\"margin-left:17%;\">Execute external program. The\nkey is true, if the program returns without exit code zero.\nThe whole event environment is available to the executed\nprogram. The program's output printed to stdout is available\nfor the RESULT key.\n\n<p style=\"margin-left:17%; margin-top: 1em\">Several buildin\ncommands are available:\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>__ctl_search</b>\n\n<p style=\"margin-left:23%;\">Search for a control. The\nCTL{name} key might contain match characters * and ?. An\ncontrol index might be specified as first argument starting\nfrom zero (e.g. PROGRAM=&quot;__ctl_search 2&quot;).\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>__ctl_count</b>\n\n<p style=\"margin-left:23%;\">Search for a controls and\nreturn total count of matched ones. The CTL{name} key might\ncontain match characters * and ?.\n\n\n<b>RESULT</b>\n\n<p style=\"margin-left:17%;\">Match the returned string of\nthe last PROGRAM call. This key can be used in the same or\nin any later rule after a PROGRAM call.\n\nMost of the\nfields support a shell style pattern matching. The following\npattern characters are supported:\n\n<b>*</b>\n\n<p style=\"margin-left:17%;\">Matches zero, or any number of\ncharacters.\n\n<b>?</b>\n\n<p style=\"margin-left:17%;\">Matches any single\ncharacter.\n\n<b>[]</b>\n\n<p style=\"margin-left:17%;\">Matches any single character\nspecified within the brackets. For example, the pattern\nstring 'tty[SR]' would match either 'ttyS' or 'ttyR'. Ranges\nare also supported within this match with the '-' character.\nFor example, to match on the range of all digits, the\npattern [0-9] would be used. If the first character\nfollowing the '[' is a '!', any characters not enclosed are\nmatched.\n\nThe following\nkeys can get values assigned:\n\n\n<b>CTL{numid}</b>,\n<b>CTL{iface}</b>, <b>CTL{device}</b>, <b>CTL{subdev}</b>,\n<b>CTL{name}</b>, <b>CTL{index}</b>,\n\n<p style=\"margin-left:17%;\">Select universal control\nelement.\n\n\n<b>CTL{value}</b>\n\n<p style=\"margin-left:17%;\">Value is set (written) also to\nsoundcard's control device and RESULT key is set to errno\ncode. The result of set operation is always true (it means\ncontinue with next key on line).\n\n\n<b>CTL{values}</b>\n\n<p style=\"margin-left:17%;\">Value is set (written) also to\nsoundcard's control device (all control values are set to\nspecified value) and RESULT key is set to errno code. The\nresult of set operation is always true (it means continue\nwith next key on line).\n\n\n<b>CTL{write}</b>\n\n<p style=\"margin-left:17%;\">Value is set (written) also to\nsoundcard's control device (all control values are set to\nspecified value). The result of set operation is true when\noperation succeed (it means continue with next key on\nline).\n\n\n<b>ENV{</b><i>key</i><b>}</b>\n\n<p style=\"margin-left:17%;\">Export a variable to the\nenvironment. Depending on the type of operator, this key is\nalso to match against an environment variable.\n\n\n<b>RESULT</b>\n\n<p style=\"margin-left:17%;\">Set RESULT variable. Note that\nPROGRAM also sets this variable, but setting this variable\nmanually might be useful to change code execution order\n(included files).\n\n\n<b>LABEL</b>\n\n<p style=\"margin-left:17%;\">Named label where a GOTO can\njump to.\n\n\n<b>GOTO</b>\n\n<p style=\"margin-left:17%;\">Jumps to the next LABEL with a\nmatching name. The goto cannot jump backward.\n\n\n<b>INCLUDE</b>\n\n<p style=\"margin-left:17%;\">Include the specified filename\nor files in specified directory.\n\n<p style=\"margin-left:17%; margin-top: 1em\">When a\ndirectory is specified, only the files with the extension\n&quot;.conf&quot; are read. Also they are read in the\nalphabetical order. Thus it's highly recommended to use some\nnumber prefix (e.g. &quot;01-something.conf&quot;) to assure\nthe order of execucions.\n\n\n<b>ACCESS</b>\n\n<p style=\"margin-left:17%;\">Check if specified file or\ndirectory exists\n\n\n<b>CONFIG{sysfs_device}</b>\n\n<p style=\"margin-left:17%;\">The relative path to sysfs\nsubsystem specifying the root directory of a soundcard\ndevice. Usually, it should be set to\n&quot;/class/sound/card$cardinfo{card}/device&quot;.\n\n\n<b>PRINT</b>\n\n<p style=\"margin-left:17%;\">PRINT value to stdout.\n\n\n<b>ERROR</b>\n\n<p style=\"margin-left:17%;\">PRINT value to stderr.\n\n\n<b>EXIT</b>\n\n<p style=\"margin-left:17%;\">Exit immediately and set\nprogram exit code to value (should be integer). If value is\n&quot;return&quot; string, parser leaves current included\nfile and returns to parent configuration file.\n\nThe\n<b>PROGRAM</b>, <b>RESULT</b>, <b>CTL{value}</b>,\n<b>PRINT</b>, <b>ERROR</b>, <b>EXIT</b>, <b>CONFIG{}</b>\nfields support simple printf-like string substitutions. It\nallows the use of the complete environment set by earlier\nmatching rules. For all other fields, substitutions are\napplied while the individual rule is being processed. The\navailable substitutions are:\n\n\n<b>$cardinfo{</b><i>attribute</i><b>}</b>,\n<b>%i{</b><i>attribute</i><b>}</b>\n\n<p style=\"margin-left:17%;\">See CARDINFO{} for more\ndetails.\n\n\n<b>$ctl{</b><i>attribute</i><b>}</b>,\n<b>%C{</b><i>attribute</i><b>}</b>\n\n<p style=\"margin-left:17%;\">See CTL{} for more details.\n\n\n<b>$attr{</b><i>file</i><b>}</b>,\n<b>%s{</b><i>file</i><b>}</b>\n\n<p style=\"margin-left:17%;\">The value of a sysfs attribute\nfound at the device, where all keys of the rule have\nmatched. If the attribute is a symlink, the last element of\nthe symlink target is returned as the value.\n\n\n<b>$env{</b><i>key</i><b>}</b>,\n<b>%E{</b><i>key</i><b>}</b>\n\n<p style=\"margin-left:17%;\">The value of an environment\nvariable.\n\n\n<b>$result</b>,\n<b>%c</b>\n\n<p style=\"margin-left:17%;\">The string returned by the\nexternal program requested with PROGRAM. A single part of\nthe string, separated by a space character may be selected\nby specifying the part number as an attribute: <b>%c{N}</b>.\nIf the number is followed by the '+' char this part plus all\nremaining parts of the result string are substituted:\n<b>%c{N+}</b>\n\n\n<b>$sysfsroot</b>,\n<b>%r</b>\n\n<p style=\"margin-left:17%;\">Root directory where sysfs\nfile-system is mounted. Ususally, this value is just\n&quot;/sys&quot;.\n\n\n<b>$config{</b><i>key</i><b>}</b>,\n<b>%g{</b><i>key</i><b>}</b>\n\n<p style=\"margin-left:17%;\">The value of a configuration\nvariable. See CONFIG{} for more details.\n\n<b>%%</b>\n\n<p style=\"margin-left:17%;\">The '%' character itself.\n\n<b>$$</b>\n\n<p style=\"margin-left:17%;\">The '$' character itself.\n\nThe count of\ncharacters to be substituted may be limited by specifying\nthe format length value. For example, '%3s{file}' will only\ninsert the first three characters of the sysfs attribute\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\nWritten by\nJaroslav Kysela &lt;perex@perex.cz&gt;\n\nSome portions\nare written by Greg Kroah-Hartman &lt;greg@kroah.com&gt; and\nKay Sievers &lt;kay.sievers@vrfy.org&gt;.\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<a href=\"https://man.page/1/alsactl\">alsactl(1)</a>","body":"\n\n<h1 align=\"center\">ALSACTL_INIT</h1>\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">alsactl_init -\nalsa control management - initialization</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&quot;alsactl\ninit&quot; provides soundcard specific initialization.</p>\n\n<h2>CONFIGURATION\n<a name=\"CONFIGURATION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">All\n&quot;alsactl init&quot; configuration files are placed in\n/usr/share/alsa/init/ directory. The top level configuration\nfile is /usr/share/alsa/init/00main. The default top-level\nfile can be also specified using -i or --initfile parameter\nfor the alsactl tool. Every file consists of a set of lines\nof text. All empty lines or lines beginning with '#' will be\nignored.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Rules\nfiles</b> <br>\nThe &quot;alsactl init&quot; rules are read from the files\nlocated in the /usr/share/alsa/init/*. The top level\nconfiguration file is /usr/share/alsa/init/00main. Every\nline in the rules file contains at least one key value pair.\nThere are two kind of keys, match and assignment keys. If\nall match keys are matching against its value, the rule gets\napplied and the assign keys get the specified value\nassigned.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A rule may\nconsists of a list of one or more key value pairs separated\nby a comma. Each key has a distinct operation, depending on\nthe used operator. Valid operators are:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>==</b></p>\n\n<p style=\"margin-left:17%;\">Compare for equality.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>!=</b></p>\n\n<p style=\"margin-left:17%;\">Compare for non-equality.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>=</b></p>\n\n<p style=\"margin-left:17%;\">Assign a value to a key. Keys\nthat represent a list, are reset and only this single value\nis assigned.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>+=</b></p>\n\n<p style=\"margin-left:17%;\">Add the value to a key that\nholds a list of entries.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>:=</b></p>\n\n<p style=\"margin-left:17%;\">Assign a value to a key\nfinally; disallow any later changes, which may be used to\nprevent changes by any later rules.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nkey names can be used to match against device\nproperties:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>CARDINDEX</b></p>\n\n<p style=\"margin-left:17%;\">Match the card index of the\nALSA driver.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>CTL{</b><i>attribute</i><b>}</b></p>\n\n<p style=\"margin-left:17%;\">Set or test universal control\nattribute. Possible attributes:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>numid</b></p>\n\n<p style=\"margin-left:23%;\">Numeric control\nidentification.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>iface</b>,\n<b>interface</b></p>\n\n<p style=\"margin-left:23%;\">Control interface name (CARD,\nHWEDEP, MIXER, PCM, RAWMIDI, TIMER, SEQUENCER)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>subdev</b>,\n<b>subdevice</b></p>\n\n<p style=\"margin-left:23%;\">Subdevice number.</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>name</b></p>\n\n<p style=\"margin-left:23%;\">Control name</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>index</b></p>\n\n<p style=\"margin-left:23%;\">Control index</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>type</b></p>\n\n<p style=\"margin-left:23%;\">Control type (BOOLEAN, INTEGER,\nINTEGER64, ENUMERATED, BYTES, IEC958)</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>attr</b>,\n<b>attribute</b></p>\n\n<p style=\"margin-left:23%;\">Attributes (stored in a string\n- use match characters * and ?):</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>r</b></p>\n\n<p style=\"margin-left:29%;\">control is readable</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>w</b></p>\n\n<p style=\"margin-left:29%;\">control is writable</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>v</b></p>\n\n<p style=\"margin-left:29%;\">control is volatile</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>i</b></p>\n\n<p style=\"margin-left:29%;\">control is inactive</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>l</b></p>\n\n<p style=\"margin-left:29%;\">control is locked</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>R</b></p>\n\n<p style=\"margin-left:29%;\">control is TLV readable</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>W</b></p>\n\n<p style=\"margin-left:29%;\">control is TLV writable</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>C</b></p>\n\n<p style=\"margin-left:29%;\">control is TLV commandable</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>o</b></p>\n\n<p style=\"margin-left:29%;\">process is owner of this\ncontrol</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\"><b>u</b></p>\n\n<p style=\"margin-left:29%;\">control created in user\nspace</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>owner</b></p>\n\n<p style=\"margin-left:23%;\">Control owner process PID\nnumber</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>count</b></p>\n\n<p style=\"margin-left:23%;\">Control count of values</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>min</b></p>\n\n<p style=\"margin-left:23%;\">Value range - minimum value</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>max</b></p>\n\n<p style=\"margin-left:23%;\">Value range - maximum value</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>step</b></p>\n\n<p style=\"margin-left:23%;\">Value range - step value</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>dBmin</b></p>\n\n<p style=\"margin-left:23%;\">Value range - minimum dB\nvalue</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>dBmax</b></p>\n\n<p style=\"margin-left:23%;\">Value range - maximum dB\nvalue</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>items</b></p>\n\n<p style=\"margin-left:23%;\">Enumerated value - number of\ntext items</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>enums</b></p>\n\n<p style=\"margin-left:23%;\">Enumerated value - list of text\nnames stored between '|' character</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>value</b></p>\n\n<p style=\"margin-left:23%;\">Value of control stored to a\nstring delimited by comma (,).</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>do_search</b></p>\n\n<p style=\"margin-left:23%;\">Search for a control. Value\n&quot;1&quot; is returned if a control was found. The\nCTL{name} key might contain match characters * and ?. An\ncontrol index might be specified as first argument starting\nfrom zero (e.g. CTL{do_search 2}=&quot;1&quot;).</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>do_count</b></p>\n\n<p style=\"margin-left:23%;\">Search for a controls and\nreturn total count of matched ones. The CTL{name} key might\ncontain match characters * and ?.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>CONFIG{sysfs_device}</b></p>\n\n<p style=\"margin-left:17%;\">The relative path to sysfs\nsubsystem specifying the root directory of a soundcard\ndevice. Usually, it should be set to\n&quot;/class/sound/card$cardinfo{card}/device&quot;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ATTR{</b><i>filename</i><b>}</b></p>\n\n<p style=\"margin-left:17%;\">Match sysfs attribute values of\nthe soundcard device. The relative path to sysfs tree must\nbe defined by CONFIG{sysfs_device} key. Trailing whitespace\nin the attribute values is ignored, if the specified match\nvalue does not contain trailing whitespace itself. Depending\non the type of operator, this key is also used to set the\nvalue of a sysfs attribute.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ENV{</b><i>key</i><b>}</b></p>\n\n<p style=\"margin-left:17%;\">Match against the value of an\nenvironment variable. Up to five <b>ENV</b> keys can be\nspecified per rule. Depending on the type of operator, this\nkey is also used to export a variable to the\nenvironment.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>PROGRAM</b></p>\n\n<p style=\"margin-left:17%;\">Execute external program. The\nkey is true, if the program returns without exit code zero.\nThe whole event environment is available to the executed\nprogram. The program's output printed to stdout is available\nfor the RESULT key.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Several buildin\ncommands are available:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>__ctl_search</b></p>\n\n<p style=\"margin-left:23%;\">Search for a control. The\nCTL{name} key might contain match characters * and ?. An\ncontrol index might be specified as first argument starting\nfrom zero (e.g. PROGRAM=&quot;__ctl_search 2&quot;).</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>__ctl_count</b></p>\n\n<p style=\"margin-left:23%;\">Search for a controls and\nreturn total count of matched ones. The CTL{name} key might\ncontain match characters * and ?.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>RESULT</b></p>\n\n<p style=\"margin-left:17%;\">Match the returned string of\nthe last PROGRAM call. This key can be used in the same or\nin any later rule after a PROGRAM call.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Most of the\nfields support a shell style pattern matching. The following\npattern characters are supported:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>*</b></p>\n\n<p style=\"margin-left:17%;\">Matches zero, or any number of\ncharacters.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>?</b></p>\n\n<p style=\"margin-left:17%;\">Matches any single\ncharacter.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>[]</b></p>\n\n<p style=\"margin-left:17%;\">Matches any single character\nspecified within the brackets. For example, the pattern\nstring 'tty[SR]' would match either 'ttyS' or 'ttyR'. Ranges\nare also supported within this match with the '-' character.\nFor example, to match on the range of all digits, the\npattern [0-9] would be used. If the first character\nfollowing the '[' is a '!', any characters not enclosed are\nmatched.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nkeys can get values assigned:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>CTL{numid}</b>,\n<b>CTL{iface}</b>, <b>CTL{device}</b>, <b>CTL{subdev}</b>,\n<b>CTL{name}</b>, <b>CTL{index}</b>,</p>\n\n<p style=\"margin-left:17%;\">Select universal control\nelement.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>CTL{value}</b></p>\n\n<p style=\"margin-left:17%;\">Value is set (written) also to\nsoundcard's control device and RESULT key is set to errno\ncode. The result of set operation is always true (it means\ncontinue with next key on line).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>CTL{values}</b></p>\n\n<p style=\"margin-left:17%;\">Value is set (written) also to\nsoundcard's control device (all control values are set to\nspecified value) and RESULT key is set to errno code. The\nresult of set operation is always true (it means continue\nwith next key on line).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>CTL{write}</b></p>\n\n<p style=\"margin-left:17%;\">Value is set (written) also to\nsoundcard's control device (all control values are set to\nspecified value). The result of set operation is true when\noperation succeed (it means continue with next key on\nline).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ENV{</b><i>key</i><b>}</b></p>\n\n<p style=\"margin-left:17%;\">Export a variable to the\nenvironment. Depending on the type of operator, this key is\nalso to match against an environment variable.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>RESULT</b></p>\n\n<p style=\"margin-left:17%;\">Set RESULT variable. Note that\nPROGRAM also sets this variable, but setting this variable\nmanually might be useful to change code execution order\n(included files).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>LABEL</b></p>\n\n<p style=\"margin-left:17%;\">Named label where a GOTO can\njump to.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>GOTO</b></p>\n\n<p style=\"margin-left:17%;\">Jumps to the next LABEL with a\nmatching name. The goto cannot jump backward.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>INCLUDE</b></p>\n\n<p style=\"margin-left:17%;\">Include the specified filename\nor files in specified directory.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When a\ndirectory is specified, only the files with the extension\n&quot;.conf&quot; are read. Also they are read in the\nalphabetical order. Thus it's highly recommended to use some\nnumber prefix (e.g. &quot;01-something.conf&quot;) to assure\nthe order of execucions.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ACCESS</b></p>\n\n<p style=\"margin-left:17%;\">Check if specified file or\ndirectory exists</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>CONFIG{sysfs_device}</b></p>\n\n<p style=\"margin-left:17%;\">The relative path to sysfs\nsubsystem specifying the root directory of a soundcard\ndevice. Usually, it should be set to\n&quot;/class/sound/card$cardinfo{card}/device&quot;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>PRINT</b></p>\n\n<p style=\"margin-left:17%;\">PRINT value to stdout.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>ERROR</b></p>\n\n<p style=\"margin-left:17%;\">PRINT value to stderr.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>EXIT</b></p>\n\n<p style=\"margin-left:17%;\">Exit immediately and set\nprogram exit code to value (should be integer). If value is\n&quot;return&quot; string, parser leaves current included\nfile and returns to parent configuration file.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>PROGRAM</b>, <b>RESULT</b>, <b>CTL{value}</b>,\n<b>PRINT</b>, <b>ERROR</b>, <b>EXIT</b>, <b>CONFIG{}</b>\nfields support simple printf-like string substitutions. It\nallows the use of the complete environment set by earlier\nmatching rules. For all other fields, substitutions are\napplied while the individual rule is being processed. The\navailable substitutions are:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>$cardinfo{</b><i>attribute</i><b>}</b>,\n<b>%i{</b><i>attribute</i><b>}</b></p>\n\n<p style=\"margin-left:17%;\">See CARDINFO{} for more\ndetails.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>$ctl{</b><i>attribute</i><b>}</b>,\n<b>%C{</b><i>attribute</i><b>}</b></p>\n\n<p style=\"margin-left:17%;\">See CTL{} for more details.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>$attr{</b><i>file</i><b>}</b>,\n<b>%s{</b><i>file</i><b>}</b></p>\n\n<p style=\"margin-left:17%;\">The value of a sysfs attribute\nfound at the device, where all keys of the rule have\nmatched. If the attribute is a symlink, the last element of\nthe symlink target is returned as the value.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>$env{</b><i>key</i><b>}</b>,\n<b>%E{</b><i>key</i><b>}</b></p>\n\n<p style=\"margin-left:17%;\">The value of an environment\nvariable.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>$result</b>,\n<b>%c</b></p>\n\n<p style=\"margin-left:17%;\">The string returned by the\nexternal program requested with PROGRAM. A single part of\nthe string, separated by a space character may be selected\nby specifying the part number as an attribute: <b>%c{N}</b>.\nIf the number is followed by the '+' char this part plus all\nremaining parts of the result string are substituted:\n<b>%c{N+}</b></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>$sysfsroot</b>,\n<b>%r</b></p>\n\n<p style=\"margin-left:17%;\">Root directory where sysfs\nfile-system is mounted. Ususally, this value is just\n&quot;/sys&quot;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>$config{</b><i>key</i><b>}</b>,\n<b>%g{</b><i>key</i><b>}</b></p>\n\n<p style=\"margin-left:17%;\">The value of a configuration\nvariable. See CONFIG{} for more details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>%%</b></p>\n\n<p style=\"margin-left:17%;\">The '%' character itself.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>$$</b></p>\n\n<p style=\"margin-left:17%;\">The '$' character itself.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The count of\ncharacters to be substituted may be limited by specifying\nthe format length value. For example, '%3s{file}' will only\ninsert the first three characters of the sysfs attribute</p>\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Written by\nJaroslav Kysela &lt;perex@perex.cz&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Some portions\nare written by Greg Kroah-Hartman &lt;greg@kroah.com&gt; and\nKay Sievers &lt;kay.sievers@vrfy.org&gt;.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/alsactl\">alsactl(1)</a></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#CONFIGURATION\">CONFIGURATION</a>","<a href=\"#AUTHOR\">AUTHOR</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"],"level":7}