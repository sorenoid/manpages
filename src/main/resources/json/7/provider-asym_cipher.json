{"name":"provider-asym_cipher","description":"provider-asym_cipher - The asym_cipher library &lt;-&gt; provider functions","body":"\n\n<h1 align=\"center\">PROVIDER-ASYM_CIPHER</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">provider-asym_cipher\n- The asym_cipher library &lt;-&gt; provider functions</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">#include\n&lt;openssl/core_dispatch.h&gt; <br>\n#include &lt;openssl/core_names.h&gt; <br>\n/* <br>\n* None of these are actual functions, but are displayed like\nthis for <br>\n* the function signatures for functions that are offered as\nfunction <br>\n* pointers in OSSL_DISPATCH arrays. <br>\n*/ <br>\n/* Context management */ <br>\nvoid *OSSL_FUNC_asym_cipher_newctx(void *provctx); <br>\nvoid OSSL_FUNC_asym_cipher_freectx(void *ctx); <br>\nvoid *OSSL_FUNC_asym_cipher_dupctx(void *ctx); <br>\n/* Encryption */ <br>\nint OSSL_FUNC_asym_cipher_encrypt_init(void *ctx, void\n*provkey, <br>\nconst OSSL_PARAM params[]); <br>\nint OSSL_FUNC_asym_cipher_encrypt(void *ctx, unsigned char\n*out, size_t *outlen, <br>\nsize_t outsize, const unsigned char *in, <br>\nsize_t inlen); <br>\n/* Decryption */ <br>\nint OSSL_FUNC_asym_cipher_decrypt_init(void *ctx, void\n*provkey, <br>\nconst OSSL_PARAM params[]); <br>\nint OSSL_FUNC_asym_cipher_decrypt(void *ctx, unsigned char\n*out, size_t *outlen, <br>\nsize_t outsize, const unsigned char *in, <br>\nsize_t inlen); <br>\n/* Asymmetric Cipher parameters */ <br>\nint OSSL_FUNC_asym_cipher_get_ctx_params(void *ctx,\nOSSL_PARAM params[]); <br>\nconst OSSL_PARAM\n*OSSL_FUNC_asym_cipher_gettable_ctx_params(void *provctx);\n<br>\nint OSSL_FUNC_asym_cipher_set_ctx_params(void *ctx, const\nOSSL_PARAM params[]); <br>\nconst OSSL_PARAM\n*OSSL_FUNC_asym_cipher_settable_ctx_params(void\n*provctx);</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This\ndocumentation is primarily aimed at provider authors. See\n<a href=\"https://man.page/7/provider\">provider(7)</a> for further information.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The asymmetric\ncipher ( <small>OSSL_OP_ASYM_CIPHER</small> ) operation\nenables providers to implement asymmetric cipher algorithms\nand make them available to applications via the\n<small>API</small> functions <a href=\"https://man.page/3/EVP_PKEY_encrypt\">EVP_PKEY_encrypt(3)</a>,\n<a href=\"https://man.page/3/EVP_PKEY_decrypt\">EVP_PKEY_decrypt(3)</a> and other related functions).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All\n&quot;functions&quot; mentioned here are passed as function\npointers between <i>libcrypto</i> and the provider in\n<b><small>OSSL_DISPATCH</small></b> arrays via\n<b><small>OSSL_ALGORITHM</small></b> arrays that are\nreturned by the provider&rsquo;s\n<b>provider_query_operation()</b> function (see\n&quot;Provider Functions&quot; in\n<a href=\"https://man.page/7/provider-base\">provider-base(7)</a>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All these\n&quot;functions&quot; have a corresponding function type\ndefinition named <b>OSSL_FUNC_{name}_fn</b>, and a helper\nfunction to retrieve the function pointer from an\n<b><small>OSSL_DISPATCH</small></b> element named\n<b>OSSL_FUNC_{name}</b>. For example, the\n&quot;function&quot; <b>OSSL_FUNC_asym_cipher_newctx()</b>\nhas these:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">typedef void\n*(OSSL_FUNC_asym_cipher_newctx_fn)(void *provctx); <br>\nstatic ossl_inline OSSL_FUNC_asym_cipher_newctx_fn <br>\nOSSL_FUNC_asym_cipher_newctx(const OSSL_DISPATCH *opf);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><small>OSSL_DISPATCH</small></b>\narrays are indexed by numbers that are provided as macros in\n<b>openssl-core_dispatch.h</b>(7), as follows:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">OSSL_FUNC_asym_cipher_newctx\nOSSL_FUNC_ASYM_CIPHER_NEWCTX <br>\nOSSL_FUNC_asym_cipher_freectx OSSL_FUNC_ASYM_CIPHER_FREECTX\n<br>\nOSSL_FUNC_asym_cipher_dupctx OSSL_FUNC_ASYM_CIPHER_DUPCTX\n<br>\nOSSL_FUNC_asym_cipher_encrypt_init\nOSSL_FUNC_ASYM_CIPHER_ENCRYPT_INIT <br>\nOSSL_FUNC_asym_cipher_encrypt OSSL_FUNC_ASYM_CIPHER_ENCRYPT\n<br>\nOSSL_FUNC_asym_cipher_decrypt_init\nOSSL_FUNC_ASYM_CIPHER_DECRYPT_INIT <br>\nOSSL_FUNC_asym_cipher_decrypt OSSL_FUNC_ASYM_CIPHER_DECRYPT\n<br>\nOSSL_FUNC_asym_cipher_get_ctx_params\nOSSL_FUNC_ASYM_CIPHER_GET_CTX_PARAMS <br>\nOSSL_FUNC_asym_cipher_gettable_ctx_params\nOSSL_FUNC_ASYM_CIPHER_GETTABLE_CTX_PARAMS <br>\nOSSL_FUNC_asym_cipher_set_ctx_params\nOSSL_FUNC_ASYM_CIPHER_SET_CTX_PARAMS <br>\nOSSL_FUNC_asym_cipher_settable_ctx_params\nOSSL_FUNC_ASYM_CIPHER_SETTABLE_CTX_PARAMS</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">An asymmetric\ncipher algorithm implementation may not implement all of\nthese functions. In order to be a consistent set of\nfunctions a provider must implement\nOSSL_FUNC_asym_cipher_newctx and\nOSSL_FUNC_asym_cipher_freectx. It must also implement both\nof OSSL_FUNC_asym_cipher_encrypt_init and\nOSSL_FUNC_asym_cipher_encrypt, or both of\nOSSL_FUNC_asym_cipher_decrypt_init and\nOSSL_FUNC_asym_cipher_decrypt.\nOSSL_FUNC_asym_cipher_get_ctx_params is optional but if it\nis present then so must\nOSSL_FUNC_asym_cipher_gettable_ctx_params. Similarly,\nOSSL_FUNC_asym_cipher_set_ctx_params is optional but if it\nis present then so must\nOSSL_FUNC_asym_cipher_settable_ctx_params.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">An asymmetric\ncipher algorithm must also implement some mechanism for\ngenerating, loading or importing keys via the key management\n( <small>OSSL_OP_KEYMGMT</small> ) operation. See\n<a href=\"https://man.page/7/provider-keymgmt\">provider-keymgmt(7)</a> for further details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Context\nManagement Functions <br>\nOSSL_FUNC_asym_cipher_newctx()</b> should create and return\na pointer to a provider side structure for holding context\ninformation during an asymmetric cipher operation. A pointer\nto this context will be passed back in a number of the other\nasymmetric cipher operation function calls. The parameter\n<i>provctx</i> is the provider context generated during\nprovider initialisation (see <a href=\"https://man.page/7/provider\">provider(7)</a>).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_asym_cipher_freectx()</b>\nis passed a pointer to the provider side asymmetric cipher\ncontext in the <i>ctx</i> parameter. This function should\nfree any resources associated with that context.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_asym_cipher_dupctx()</b>\nshould duplicate the provider side asymmetric cipher context\nin the <i>ctx</i> parameter and return the duplicate\ncopy.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Encryption\nFunctions <br>\nOSSL_FUNC_asym_cipher_encrypt_init()</b> initialises a\ncontext for an asymmetric encryption given a provider side\nasymmetric cipher context in the <i>ctx</i> parameter, and a\npointer to a provider key object in the <i>provkey</i>\nparameter. The <i>params</i>, if not <small>NULL,</small>\nshould be set on the context in a manner similar to using\n<b>OSSL_FUNC_asym_cipher_set_ctx_params()</b>. The key\nobject should have been previously generated, loaded or\nimported into the provider using the key management (\n<small>OSSL_OP_KEYMGMT</small> ) operation (see\n<a href=\"https://man.page/7/provider-keymgmt\">provider-keymgmt(7)</a>&gt;.\n<b>OSSL_FUNC_asym_cipher_encrypt()</b> performs the actual\nencryption itself. A previously initialised asymmetric\ncipher context is passed in the <i>ctx</i> parameter. The\ndata to be encrypted is pointed to by the <i>in</i>\nparameter which is <i>inlen</i> bytes long. Unless\n<i>out</i> is <small>NULL,</small> the encrypted data should\nbe written to the location pointed to by the <i>out</i>\nparameter and it should not exceed <i>outsize</i> bytes in\nlength. The length of the encrypted data should be written\nto <i>*outlen</i>. If <i>out</i> is <small>NULL</small> then\nthe maximum length of the encrypted data should be written\nto <i>*outlen</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Decryption\nFunctions <br>\nOSSL_FUNC_asym_cipher_decrypt_init()</b> initialises a\ncontext for an asymmetric decryption given a provider side\nasymmetric cipher context in the <i>ctx</i> parameter, and a\npointer to a provider key object in the <i>provkey</i>\nparameter. The <i>params</i>, if not <small>NULL,</small>\nshould be set on the context in a manner similar to using\n<b>OSSL_FUNC_asym_cipher_set_ctx_params()</b>. The key\nobject should have been previously generated, loaded or\nimported into the provider using the key management (\n<small>OSSL_OP_KEYMGMT</small> ) operation (see\n<a href=\"https://man.page/7/provider-keymgmt\">provider-keymgmt(7)</a>&gt;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_asym_cipher_decrypt()</b>\nperforms the actual decryption itself. A previously\ninitialised asymmetric cipher context is passed in the\n<i>ctx</i> parameter. The data to be decrypted is pointed to\nby the <i>in</i> parameter which is <i>inlen</i> bytes long.\nUnless <i>out</i> is <small>NULL,</small> the decrypted data\nshould be written to the location pointed to by the\n<i>out</i> parameter and it should not exceed <i>outsize</i>\nbytes in length. The length of the decrypted data should be\nwritten to <i>*outlen</i>. If <i>out</i> is\n<small>NULL</small> then the maximum length of the decrypted\ndata should be written to <i>*outlen</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Asymmetric\nCipher Parameters</b> <br>\nSee <b><small>OSSL_PARAM</small></b> (3) for further details\non the parameters structure used by the\n<b>OSSL_FUNC_asym_cipher_get_ctx_params()</b> and\n<b>OSSL_FUNC_asym_cipher_set_ctx_params()</b> functions.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_asym_cipher_get_ctx_params()</b>\ngets asymmetric cipher parameters associated with the given\nprovider side asymmetric cipher context <i>ctx</i> and\nstores them in <i>params</i>. Passing <small>NULL</small>\nfor <i>params</i> should return true.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_asym_cipher_set_ctx_params()</b>\nsets the asymmetric cipher parameters associated with the\ngiven provider side asymmetric cipher context <i>ctx</i> to\n<i>params</i>. Any parameter settings are additional to any\nthat were previously set. Passing <small>NULL</small> for\n<i>params</i> should return true.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Parameters\ncurrently recognised by built-in asymmetric cipher\nalgorithms are as follows. Not all parameters are relevant\nto, or are understood by all asymmetric cipher algorithms:\n<br>\n&quot;pad-mode&quot; (\n<b><small>OSSL_ASYM_CIPHER_PARAM_PAD_MODE</small></b> )\n&lt;integer&gt;</p>\n\n<p style=\"margin-left:17%;\">The type of padding to be used.\nThe interpretation of this value will depend on the\nalgorithm in use. The default provider understands these\n<small>RSA</small> padding modes: 1 (\n<small>RSA_PKCS1_PADDING</small> ), 3 (\n<small>RSA_NO_PADDING</small> ), 4 (\n<small>RSA_PKCS1_OAEP_PADDING</small> ), 5 (\n<small>RSA_X931_PADDING</small> ), 6 (\n<small>RSA_PKCS1_PSS_PADDING</small> ) and 7 (\n<small>RSA_PKCS1_WITH_TLS_PADDING</small> ). See\n<a href=\"https://man.page/3/EVP_PKEY_CTX_set_rsa_padding\">EVP_PKEY_CTX_set_rsa_padding(3)</a> for further\ndetails.</p>\n\n<p style=\"margin-left:11%;\">&quot;digest&quot; (\n<b><small>OSSL_ASYM_CIPHER_PARAM_OAEP_DIGEST</small></b> )\n&lt; <small>UTF8</small> string&gt;</p>\n\n<p style=\"margin-left:17%;\">Gets or sets the name of the\n<small>OAEP</small> digest algorithm used when\n<small>OAEP</small> padding is in use.</p>\n\n<p style=\"margin-left:11%;\">&quot;digest&quot; (\n<b><small>OSSL_ASYM_CIPHER_PARAM_DIGEST</small></b> ) &lt;\n<small>UTF8</small> string&gt;</p>\n\n<p style=\"margin-left:17%;\">Gets or sets the name of the\ndigest algorithm used by the algorithm (where\napplicable).</p>\n\n<p style=\"margin-left:11%;\">&quot;digest-props&quot; (\n<b><small>OSSL_ASYM_CIPHER_PARAM_OAEP_DIGEST_PROPS</small></b>\n) &lt; <small>UTF8</small> string&gt;</p>\n\n<p style=\"margin-left:17%;\">Gets or sets the properties to\nuse when fetching the <small>OAEP</small> digest\nalgorithm.</p>\n\n<p style=\"margin-left:11%;\">&quot;digest-props&quot; (\n<b><small>OSSL_ASYM_CIPHER_PARAM_DIGEST_PROPS</small></b> )\n&lt; <small>UTF8</small> string&gt;</p>\n\n<p style=\"margin-left:17%;\">Gets or sets the properties to\nuse when fetching the cipher digest algorithm.</p>\n\n<p style=\"margin-left:11%;\">&quot;mgf1-digest&quot; (\n<b><small>OSSL_ASYM_CIPHER_PARAM_MGF1_DIGEST</small></b> )\n&lt; <small>UTF8</small> string&gt;</p>\n\n<p style=\"margin-left:17%;\">Gets or sets the name of the\n<small>MGF1</small> digest algorithm used when\n<small>OAEP</small> or <small>PSS</small> padding is in\nuse.</p>\n\n<p style=\"margin-left:11%;\">&quot;mgf1-digest-props&quot; (\n<b><small>OSSL_ASYM_CIPHER_PARAM_MGF1_DIGEST_PROPS</small></b>\n) &lt; <small>UTF8</small> <br>\nstring&gt;</p>\n\n<p style=\"margin-left:17%;\">Gets or sets the properties to\nuse when fetching the <small>MGF1</small> digest\nalgorithm.</p>\n\n<p style=\"margin-left:11%;\">&quot;oaep-label&quot; (\n<b><small>OSSL_ASYM_CIPHER_PARAM_OAEP_LABEL</small></b> )\n&lt;octet string&gt;</p>\n\n<p style=\"margin-left:17%;\">Gets or sets the\n<small>OAEP</small> label used when <small>OAEP</small>\npadding is in use.</p>\n\n<p style=\"margin-left:11%;\">&quot;tls-client-version&quot;\n(\n<b><small>OSSL_ASYM_CIPHER_PARAM_TLS_CLIENT_VERSION</small></b>\n) <br>\n&lt;unsigned integer&gt;</p>\n\n<p style=\"margin-left:17%;\">The <small>TLS</small> protocol\nversion first requested by the client. See\n<b><small>RSA_PKCS1_WITH_TLS_PADDING</small></b> on the page\n<a href=\"https://man.page/3/EVP_PKEY_CTX_set_rsa_padding\">EVP_PKEY_CTX_set_rsa_padding(3)</a>.</p>\n\n\n<p style=\"margin-left:11%;\">&quot;tls-negotiated-version&quot;\n(\n<b><small>OSSL_ASYM_CIPHER_PARAM_TLS_CLIENT_VERSION</small></b>\n) <br>\n&lt;unsigned integer&gt;</p>\n\n<p style=\"margin-left:17%;\">The negotiated\n<small>TLS</small> protocol version. See\n<b><small>RSA_PKCS1_WITH_TLS_PADDING</small></b> on the page\n<a href=\"https://man.page/3/EVP_PKEY_CTX_set_rsa_padding\">EVP_PKEY_CTX_set_rsa_padding(3)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_asym_cipher_gettable_ctx_params()</b>\nand <b>OSSL_FUNC_asym_cipher_settable_ctx_params()</b> get a\nconstant <b><small>OSSL_PARAM</small></b> array that\ndescribes the gettable and settable parameters, i.e.\nparameters that can be used with\n<b>OSSL_FUNC_asym_cipherget_ctx_params()</b> and\n<b>OSSL_FUNC_asym_cipher_set_ctx_params()</b> respectively.\nSee <b><small>OSSL_PARAM</small></b> (3) for the use of\n<b><small>OSSL_PARAM</small></b> as parameter\ndescriptor.</p>\n\n<h2>RETURN VALUES\n<a name=\"RETURN VALUES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_asym_cipher_newctx()</b>\nand <b>OSSL_FUNC_asym_cipher_dupctx()</b> should return the\nnewly created provider side asymmetric cipher context, or\n<small>NULL</small> on failure.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All other\nfunctions should return 1 for success or 0 on error.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/7/provider\">provider(7)</a></p>\n\n<h2>HISTORY\n<a name=\"HISTORY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The provider\n<small>ASYM_CIPHER</small> interface was introduced in\nOpenSSL 3.0.</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright\n2019-2021 The OpenSSL Project Authors. All Rights\nReserved.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Licensed under\nthe Apache License 2.0 (the &quot;License&quot;). You may\nnot use this file except in compliance with the License. You\ncan obtain a copy in the file <small>LICENSE</small> in the\nsource distribution or at\n&lt;https://www.openssl.org/source/license.html&gt;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUES\">RETURN VALUES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#HISTORY\">HISTORY</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"],"level":7}