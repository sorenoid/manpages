{"name":"provider-digest","description":"provider-digest\n- The digest library &lt;-&gt; provider functions","body":"\n\n<h1 align=\"center\">PROVIDER-DIGEST</h1>\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">provider-digest\n- The digest library &lt;-&gt; provider functions</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">#include\n&lt;openssl/core_dispatch.h&gt; <br>\n#include &lt;openssl/core_names.h&gt; <br>\n/* <br>\n* Digests support the following function signatures in\nOSSL_DISPATCH arrays. <br>\n* (The function signatures are not actual functions). <br>\n*/ <br>\n/* Context management */ <br>\nvoid *OSSL_FUNC_digest_newctx(void *provctx); <br>\nvoid OSSL_FUNC_digest_freectx(void *dctx); <br>\nvoid *OSSL_FUNC_digest_dupctx(void *dctx); <br>\n/* Digest generation */ <br>\nint OSSL_FUNC_digest_init(void *dctx, const OSSL_PARAM\nparams[]); <br>\nint OSSL_FUNC_digest_update(void *dctx, const unsigned char\n*in, size_t inl); <br>\nint OSSL_FUNC_digest_final(void *dctx, unsigned char *out,\nsize_t *outl, <br>\nsize_t outsz); <br>\nint OSSL_FUNC_digest_digest(void *provctx, const unsigned\nchar *in, size_t inl, <br>\nunsigned char *out, size_t *outl, size_t outsz); <br>\n/* Digest parameter descriptors */ <br>\nconst OSSL_PARAM *OSSL_FUNC_digest_gettable_params(void\n*provctx); <br>\n/* Digest operation parameter descriptors */ <br>\nconst OSSL_PARAM *OSSL_FUNC_digest_gettable_ctx_params(void\n*dctx, <br>\nvoid *provctx); <br>\nconst OSSL_PARAM *OSSL_FUNC_digest_settable_ctx_params(void\n*dctx, <br>\nvoid *provctx); <br>\n/* Digest parameters */ <br>\nint OSSL_FUNC_digest_get_params(OSSL_PARAM params[]); <br>\n/* Digest operation parameters */ <br>\nint OSSL_FUNC_digest_set_ctx_params(void *dctx, const\nOSSL_PARAM params[]); <br>\nint OSSL_FUNC_digest_get_ctx_params(void *dctx, OSSL_PARAM\nparams[]);</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This\ndocumentation is primarily aimed at provider authors. See\n<a href=\"https://man.page/7/provider\">provider(7)</a> for further information.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<small>DIGEST</small> operation enables providers to\nimplement digest algorithms and make them available to\napplications via the <small>API</small> functions\n<a href=\"https://man.page/3/EVP_DigestInit_ex\">EVP_DigestInit_ex(3)</a>, <a href=\"https://man.page/3/EVP_DigestUpdate\">EVP_DigestUpdate(3)</a> and\n<a href=\"https://man.page/3/EVP_DigestFinal\">EVP_DigestFinal(3)</a> (and other related functions).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All\n&quot;functions&quot; mentioned here are passed as function\npointers between <i>libcrypto</i> and the provider in\n<b><small>OSSL_DISPATCH</small></b> arrays via\n<b><small>OSSL_ALGORITHM</small></b> arrays that are\nreturned by the provider&rsquo;s\n<b>provider_query_operation()</b> function (see\n&quot;Provider Functions&quot; in\n<a href=\"https://man.page/7/provider-base\">provider-base(7)</a>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All these\n&quot;functions&quot; have a corresponding function type\ndefinition named <b>OSSL_FUNC_{name}_fn</b>, and a helper\nfunction to retrieve the function pointer from an\n<b><small>OSSL_DISPATCH</small></b> element named\n<b>OSSL_FUNC_{name}</b>. For example, the\n&quot;function&quot; <b>OSSL_FUNC_digest_newctx()</b> has\nthese:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">typedef void\n*(OSSL_OSSL_FUNC_digest_newctx_fn)(void *provctx); <br>\nstatic ossl_inline OSSL_OSSL_FUNC_digest_newctx_fn <br>\nOSSL_FUNC_digest_newctx(const OSSL_DISPATCH *opf);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><small>OSSL_DISPATCH</small></b>\narrays are indexed by numbers that are provided as macros in\n<b>openssl-core_dispatch.h</b>(7), as follows:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">OSSL_FUNC_digest_newctx\nOSSL_FUNC_DIGEST_NEWCTX <br>\nOSSL_FUNC_digest_freectx OSSL_FUNC_DIGEST_FREECTX <br>\nOSSL_FUNC_digest_dupctx OSSL_FUNC_DIGEST_DUPCTX <br>\nOSSL_FUNC_digest_init OSSL_FUNC_DIGEST_INIT <br>\nOSSL_FUNC_digest_update OSSL_FUNC_DIGEST_UPDATE <br>\nOSSL_FUNC_digest_final OSSL_FUNC_DIGEST_FINAL <br>\nOSSL_FUNC_digest_digest OSSL_FUNC_DIGEST_DIGEST <br>\nOSSL_FUNC_digest_get_params OSSL_FUNC_DIGEST_GET_PARAMS <br>\nOSSL_FUNC_digest_get_ctx_params\nOSSL_FUNC_DIGEST_GET_CTX_PARAMS <br>\nOSSL_FUNC_digest_set_ctx_params\nOSSL_FUNC_DIGEST_SET_CTX_PARAMS <br>\nOSSL_FUNC_digest_gettable_params\nOSSL_FUNC_DIGEST_GETTABLE_PARAMS <br>\nOSSL_FUNC_digest_gettable_ctx_params\nOSSL_FUNC_DIGEST_GETTABLE_CTX_PARAMS <br>\nOSSL_FUNC_digest_settable_ctx_params\nOSSL_FUNC_DIGEST_SETTABLE_CTX_PARAMS</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A digest\nalgorithm implementation may not implement all of these\nfunctions. In order to be usable all or none of\nOSSL_FUNC_digest_newctx, OSSL_FUNC_digest_freectx,\nOSSL_FUNC_digest_init, OSSL_FUNC_digest_update and\nOSSL_FUNC_digest_final should be implemented. All other\nfunctions are optional.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Context\nManagement Functions <br>\nOSSL_FUNC_digest_newctx()</b> should create and return a\npointer to a provider side structure for holding context\ninformation during a digest operation. A pointer to this\ncontext will be passed back in a number of the other digest\noperation function calls. The parameter <i>provctx</i> is\nthe provider context generated during provider\ninitialisation (see <a href=\"https://man.page/7/provider\">provider(7)</a>).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_digest_freectx()</b>\nis passed a pointer to the provider side digest context in\nthe <i>dctx</i> parameter. This function should free any\nresources associated with that context.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_digest_dupctx()</b>\nshould duplicate the provider side digest context in the\n<i>dctx</i> parameter and return the duplicate copy.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Digest\nGeneration Functions <br>\nOSSL_FUNC_digest_init()</b> initialises a digest operation\ngiven a newly created provider side digest context in the\n<i>dctx</i> parameter. The <i>params</i>, if not\n<small>NULL,</small> should be set on the context in a\nmanner similar to using\n<b>OSSL_FUNC_digest_set_ctx_params()</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_digest_update()</b>\nis called to supply data to be digested as part of a\npreviously initialised digest operation. The <i>dctx</i>\nparameter contains a pointer to a previously initialised\nprovider side context. <b>OSSL_FUNC_digest_update()</b>\nshould digest <i>inl</i> bytes of data at the location\npointed to by <i>in</i>. <b>OSSL_FUNC_digest_update()</b>\nmay be called multiple times for a single digest\noperation.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_digest_final()</b>\ngenerates a digest started through previous\n<b>OSSL_FUNC_digest_init()</b> and\n<b>OSSL_FUNC_digest_update()</b> calls. The <i>dctx</i>\nparameter contains a pointer to the provider side context.\nThe digest should be written to <i>*out</i> and the length\nof the digest to <i>*outl</i>. The digest should not exceed\n<i>outsz</i> bytes.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_digest_digest()</b>\nis a &quot;oneshot&quot; digest function. No provider side\ndigest context is used. Instead the provider context that\nwas created during provider initialisation is passed in the\n<i>provctx</i> parameter (see <a href=\"https://man.page/7/provider\">provider(7)</a>).\n<i>inl</i> bytes at <i>in</i> should be digested and the\nresult should be stored at <i>out</i>. The length of the\ndigest should be stored in <i>*outl</i> which should not\nexceed <i>outsz</i> bytes.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Digest\nParameters</b> <br>\nSee <b><small>OSSL_PARAM</small></b> (3) for further details\non the parameters structure used by these functions.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_digest_get_params()</b>\ngets details of the algorithm implementation and stores them\nin <i>params</i>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_digest_set_ctx_params()</b>\nsets digest operation parameters for the provider side\ndigest context <i>dctx</i> to <i>params</i>. Any parameter\nsettings are additional to any that were previously set.\nPassing <small>NULL</small> for <i>params</i> should return\ntrue.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_digest_get_ctx_params()</b>\ngets digest operation details details from the given\nprovider side digest context <i>dctx</i> and stores them in\n<i>params</i>. Passing <small>NULL</small> for <i>params</i>\nshould return true.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_digest_gettable_params()</b>\nreturns a constant <b><small>OSSL_PARAM</small></b> array\ncontaining descriptors of the parameters that\n<b>OSSL_FUNC_digest_get_params()</b> can handle.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_digest_gettable_ctx_params()</b>\nand <b>OSSL_FUNC_digest_settable_ctx_params()</b> both\nreturn constant <b><small>OSSL_PARAM</small></b> arrays as\ndescriptors of the parameters that\n<b>OSSL_FUNC_digest_get_ctx_params()</b> and\n<b>OSSL_FUNC_digest_set_ctx_params()</b> can handle,\nrespectively. The array is based on the current state of the\nprovider side context if <i>dctx</i> is not\n<small>NULL</small> and on the provider side algorithm\n<i>provctx</i> otherwise.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Parameters\ncurrently recognised by built-in digests with this function\nare as follows. Not all parameters are relevant to, or are\nunderstood by all digests: <br>\n&quot;blocksize&quot; (\n<b><small>OSSL_DIGEST_PARAM_BLOCK_SIZE</small></b> )\n&lt;unsigned integer&gt;</p>\n\n<p style=\"margin-left:17%;\">The digest block size. The\nlength of the &quot;blocksize&quot; parameter should not\nexceed that of a <b>size_t</b>.</p>\n\n<p style=\"margin-left:11%;\">&quot;size&quot; (\n<b><small>OSSL_DIGEST_PARAM_SIZE</small></b> ) &lt;unsigned\ninteger&gt;</p>\n\n<p style=\"margin-left:17%;\">The digest output size. The\nlength of the &quot;size&quot; parameter should not exceed\nthat of a <b>size_t</b>.</p>\n\n<p style=\"margin-left:11%;\">&quot;flags&quot; (\n<b><small>OSSL_DIGEST_PARAM_FLAGS</small></b> ) &lt;unsigned\ninteger&gt;</p>\n\n<p style=\"margin-left:17%;\">Diverse flags that describe\nexceptional behaviour for the digest: <b><small><br>\nEVP_MD_FLAG_ONESHOT</small></b></p>\n\n<p style=\"margin-left:23%;\">This digest method can only\nhandle one block of input.</p>\n\n\n<p style=\"margin-left:17%;\"><b><small>EVP_MD_FLAG_XOF</small></b></p>\n\n<p style=\"margin-left:23%;\">This digest method is an\nextensible-output function ( <small>XOF</small> ) and\nsupports setting the\n<b><small>OSSL_DIGEST_PARAM_XOFLEN</small></b>\nparameter.</p>\n\n\n<p style=\"margin-left:17%;\"><b><small>EVP_MD_FLAG_DIGALGID_NULL</small></b></p>\n\n<p style=\"margin-left:23%;\">When setting up a\nDigestAlgorithmIdentifier, this flag will have the parameter\nset to <small>NULL</small> by default. Use this for PKCS#1.\n<i>Note: if combined with\n<small>EVP_MD_FLAG_DIGALGID_ABSENT,</small> the latter will\noverride.</i></p>\n\n\n<p style=\"margin-left:17%;\"><b><small>EVP_MD_FLAG_DIGALGID_ABSENT</small></b></p>\n\n<p style=\"margin-left:23%;\">When setting up a\nDigestAlgorithmIdentifier, this flag will have the parameter\nbe left absent by default. <i>Note: if combined with\n<small>EVP_MD_FLAG_DIGALGID_NULL,</small> the latter will be\noverridden.</i></p>\n\n\n<p style=\"margin-left:17%;\"><b><small>EVP_MD_FLAG_DIGALGID_CUSTOM</small></b></p>\n\n<p style=\"margin-left:23%;\">Custom\nDigestAlgorithmIdentifier handling via ctrl, with\n<b><small>EVP_MD_FLAG_DIGALGID_ABSENT</small></b> as\ndefault. <i>Note: if combined with\n<small>EVP_MD_FLAG_DIGALGID_NULL,</small> the latter will be\noverridden.</i> Currently unused.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The length of\nthe &quot;flags&quot; parameter should equal that of an\n<b>unsigned long int</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Digest\nContext Parameters <br>\nOSSL_FUNC_digest_set_ctx_params()</b> sets digest parameters\nassociated with the given provider side digest context\n<i>dctx</i> to <i>params</i>. Any parameter settings are\nadditional to any that were previously set. See\n<b><small>OSSL_PARAM</small></b> (3) for further details on\nthe parameters structure.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_digest_get_ctx_params()</b>\ngets details of currently set parameters values associated\nwith the give provider side digest context <i>dctx</i> and\nstores them in <i>params</i>. See\n<b><small>OSSL_PARAM</small></b> (3) for further details on\nthe parameters structure.</p>\n\n<h2>RETURN VALUES\n<a name=\"RETURN VALUES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_digest_newctx()</b>\nand <b>OSSL_FUNC_digest_dupctx()</b> should return the newly\ncreated provider side digest context, or <small>NULL</small>\non failure.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_digest_init()</b>,\n<b>OSSL_FUNC_digest_update()</b>,\n<b>OSSL_FUNC_digest_final()</b>,\n<b>OSSL_FUNC_digest_digest()</b>,\n<b>OSSL_FUNC_digest_set_params()</b> and\n<b>OSSL_FUNC_digest_get_params()</b> should return 1 for\nsuccess or 0 on error.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_digest_size()</b>\nshould return the digest size.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_digest_block_size()</b>\nshould return the block size of the underlying digest\nalgorithm.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>EVP_Q_digest()</b>, <b>EVP_Digest()</b> and\n<b>EVP_DigestFinal_ex()</b> <small>API</small> calls do not\nexpect the digest size to be larger than\n<small>EVP_MAX_MD_SIZE.</small> Any algorithm which produces\nlarger digests is unusable with those <small>API</small>\ncalls.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/7/provider\">provider(7)</a>,\n<b><small>OSSL_PROVIDER-FIPS</small></b> (7),\n<a href=\"https://man.page/7/OSSL_PROVIDER-default\">OSSL_PROVIDER-default(7)</a>,\n<a href=\"https://man.page/7/OSSL_PROVIDER-legacy\">OSSL_PROVIDER-legacy(7)</a>, <a href=\"https://man.page/7/EVP_MD-common\">EVP_MD-common(7)</a>,\n<b><small>EVP_MD-BLAKE2</small></b> (7),\n<b><small>EVP_MD-MD2</small></b> (7),\n<b><small>EVP_MD-MD4</small></b> (7),\n<b><small>EVP_MD-MD5</small></b> (7),\n<b><small>EVP_MD-MD5-SHA1</small></b> (7),\n<b><small>EVP_MD-MDC2</small></b> (7),\n<b><small>EVP_MD-RIPEMD160</small></b> (7),\n<b><small>EVP_MD-SHA1</small></b> (7),\n<b><small>EVP_MD-SHA2</small></b> (7),\n<b><small>EVP_MD-SHA3</small></b> (7),\n<b><small>EVP_MD-SHAKE</small></b> (7),\n<b><small>EVP_MD-SM3</small></b> (7),\n<b><small>EVP_MD-WHIRLPOOL</small></b> (7),\n<a href=\"https://man.page/7/life_cycle-digest\">life_cycle-digest(7)</a>, <a href=\"https://man.page/3/EVP_DigestInit\">EVP_DigestInit(3)</a></p>\n\n<h2>HISTORY\n<a name=\"HISTORY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The provider\n<small>DIGEST</small> interface was introduced in OpenSSL\n3.0.</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright\n2019-2021 The OpenSSL Project Authors. All Rights\nReserved.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Licensed under\nthe Apache License 2.0 (the &quot;License&quot;). You may\nnot use this file except in compliance with the License. You\ncan obtain a copy in the file <small>LICENSE</small> in the\nsource distribution or at\n&lt;https://www.openssl.org/source/license.html&gt;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUES\">RETURN VALUES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#HISTORY\">HISTORY</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"],"level":7}