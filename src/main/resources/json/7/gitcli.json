{"name":"gitcli","description":"gitcli - Git\ncommand-line interface and conventions","body":"\n\n<h1 align=\"center\">GITCLI</h1>\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gitcli - Git\ncommand-line interface and conventions</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">gitcli</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This manual\ndescribes the convention used throughout Git CLI.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Many commands\ntake revisions (most often &quot;commits&quot;, but\nsometimes &quot;tree-ish&quot;, depending on the context and\ncommand) and paths as their arguments. Here are the\nrules:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nRevisions come first and then paths. E.g. in <b>git diff\nv1.0 v2.0 arch/x86 include/asm-x86</b>, <b>v1.0</b> and\n<b>v2.0</b> are revisions and <b>arch/x86</b> and\n<b>include/asm-x86</b> are paths.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; When an\nargument can be misunderstood as either a revision or a\npath, they can be disambiguated by placing <b>--</b> between\nthem. E.g. <b>git diff -- HEAD</b> is, &quot;I have a file\ncalled HEAD in my work tree. Please show changes between the\nversion I staged in the index and what I have in the work\ntree for that file&quot;, not &quot;show difference between\nthe HEAD commit and the work tree as a whole&quot;. You can\nsay <b>git diff HEAD --</b> to ask for the latter.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Without\ndisambiguating <b>--</b>, Git makes a reasonable guess, but\nerrors out and asking you to disambiguate when ambiguous.\nE.g. if you have a file called HEAD in your work tree,\n<b>git diff HEAD</b> is ambiguous, and you have to say\neither <b>git diff HEAD --</b> or <b>git diff -- HEAD</b> to\ndisambiguate.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Because\n<b>--</b> disambiguates revisions and paths in some\ncommands, it cannot be used for those commands to separate\noptions and revisions. You can use <b>--end-of-options</b>\nfor this (it also works for commands that do not distinguish\nbetween revisions in paths, in which case it is simply an\nalias for <b>--</b>).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">When writing a\nscript that is expected to handle random user-input, it is a\ngood practice to make it explicit which arguments are which\nby placing disambiguating <b>--</b> at appropriate\nplaces.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Many\ncommands allow wildcards in paths, but you need to protect\nthem from getting globbed by the shell. These two mean\ndifferent things:</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ git restore\n*.c <br>\n$ git restore \\*.c</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The former lets\nyour shell expand the fileglob, and you are asking the dot-C\nfiles in your working tree to be overwritten with the\nversion in the index. The latter passes the <b>*.c</b> to\nGit, and you are asking the paths in the index that match\nthe pattern to be checked out to your working tree. After\nrunning <b>git add hello.c; rm hello.c</b>, you will\n<i>not</i> see <b>hello.c</b> in your working tree with the\nformer, but with the latter you will.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Just as\nthe filesystem <i>.</i> (period) refers to the current\ndirectory, using a <i>.</i> as a repository name in Git (a\ndot-repository) is a relative path and means your current\nrepository.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Here are the\nrules regarding the &quot;flags&quot; that you should follow\nwhen you are scripting Git:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nit&rsquo;s preferred to use the non-dashed form of Git\ncommands, which means that you should prefer <b>git foo</b>\nto <b>git-foo</b>.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nsplitting short options to separate words (prefer <b>git foo\n-a -b</b> to <b>git foo -ab</b>, the latter may not even\nwork).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; when a\ncommand-line option takes an argument, use the <i>stuck</i>\nform. In other words, write <b>git foo -oArg</b> instead of\n<b>git foo -o Arg</b> for short options, and <b>git foo\n--long-opt=Arg</b> instead of <b>git foo --long-opt Arg</b>\nfor long options. An option that takes optional\noption-argument must be written in the <i>stuck</i>\nform.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; when you\ngive a revision parameter to a command, make sure the\nparameter is not ambiguous with a name of a file in the work\ntree. E.g. do not write <b>git log -1 HEAD</b> but write\n<b>git log -1 HEAD --</b>; the former will not work if you\nhappen to have a file called <b>HEAD</b> in the work\ntree.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; many\ncommands allow a long option <b>--option</b> to be\nabbreviated only to their unique prefix (e.g. if there is no\nother option whose name begins with <b>opt</b>, you may be\nable to spell <b>--opt</b> to invoke the <b>--option</b>\nflag), but you should fully spell them out when writing your\nscripts; later versions of Git may introduce a new option\nwhose name shares the same prefix, e.g. <b>--optimize</b>,\nto make a short prefix that used to be unique no longer\nunique.</p>\n\n<h2>ENHANCED OPTION PARSER\n<a name=\"ENHANCED OPTION PARSER\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">From the Git\n1.5.4 series and further, many Git commands (not all of them\nat the time of the writing though) come with an enhanced\noption parser.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Here is a list\nof the facilities provided by this option parser.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Magic\nOptions</b> <br>\nCommands which have the enhanced option parser activated all\nunderstand a couple of magic command-line options:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">-h</p>\n\n<p style=\"margin-left:17%;\">gives a pretty printed usage of\nthe command.</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">$ git describe\n-h <br>\nusage: git describe [&lt;options&gt;] &lt;commit-ish&gt;*\n<br>\nor: git describe [&lt;options&gt;] --dirty</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">--contains find\nthe tag that comes after the commit <br>\n--debug debug search strategy on stderr <br>\n--all use any ref <br>\n--tags use any tag, even unannotated <br>\n--long always use long format <br>\n--abbrev[=&lt;n&gt;] use &lt;n&gt; digits to display\nSHA-1s</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that some\nsubcommand (e.g. <b>git grep</b>) may behave differently\nwhen there are things on the command line other than\n<b>-h</b>, but <b>git subcmd -h</b> without anything else on\nthe command line is meant to consistently give the\nusage.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">--help-all</p>\n\n<p style=\"margin-left:17%;\">Some Git commands take options\nthat are only used for plumbing or that are deprecated, and\nsuch options are hidden from the default usage. This option\ngives the full list of options.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Negating\noptions</b> <br>\nOptions with long option names can be negated by prefixing\n<b>--no-</b>. For example, <b>git branch</b> has the option\n<b>--track</b> which is <i>on</i> by default. You can use\n<b>--no-track</b> to override that behaviour. The same goes\nfor <b>--color</b> and <b>--no-color</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Aggregating\nshort options</b> <br>\nCommands that support the enhanced option parser allow you\nto aggregate short options. This means that you can for\nexample use <b>git rm -rf</b> or <b>git clean -fdx</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Abbreviating\nlong options</b> <br>\nCommands that support the enhanced option parser accepts\nunique prefix of a long option as if it is fully spelled\nout, but use this with a caution. For example, <b>git commit\n--amen</b> behaves as if you typed <b>git commit\n--amend</b>, but that is true only until a later version of\nGit introduces another option that shares the same prefix,\ne.g. <b>git commit --amenity</b> option.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Separating\nargument from the option</b> <br>\nYou can write the mandatory option parameter to an option as\na separate word on the command line. That means that all the\nfollowing uses work:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git foo\n--long-opt=Arg <br>\n$ git foo --long-opt Arg <br>\n$ git foo -oArg <br>\n$ git foo -o Arg</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">However, this\nis <b>NOT</b> allowed for switches with an optional value,\nwhere the <i>stuck</i> form must be used:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ git describe\n--abbrev HEAD # correct <br>\n$ git describe --abbrev=10 HEAD # correct <br>\n$ git describe --abbrev 10 HEAD # NOT WHAT YOU MEANT</p>\n\n<h2>NOTES ON FREQUENTLY CONFUSED OPTIONS\n<a name=\"NOTES ON FREQUENTLY CONFUSED OPTIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Many commands\nthat can work on files in the working tree and/or in the\nindex can take <b>--cached</b> and/or <b>--index</b>\noptions. Sometimes people incorrectly think that, because\nthe index was originally called cache, these two are\nsynonyms. They are <b>not</b> &mdash; these two options mean\nvery different things.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; The\n<b>--cached</b> option is used to ask a command that usually\nworks on files in the working tree to <b>only</b> work with\nthe index. For example, <b>git grep</b>, when used without a\ncommit to specify from which commit to look for strings in,\nusually works on files in the working tree, but with the\n<b>--cached</b> option, it looks for strings in the\nindex.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; The\n<b>--index</b> option is used to ask a command that usually\nworks on files in the working tree to <b>also</b> affect the\nindex. For example, <b>git stash apply</b> usually merges\nchanges recorded in a stash entry to the working tree, but\nwith the <b>--index</b> option, it also merges changes to\nthe index as well.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>git\napply</b> command can be used with <b>--cached</b> and\n<b>--index</b> (but not at the same time). Usually the\ncommand only affects the files in the working tree, but with\n<b>--index</b>, it patches both the files and their index\nentries, and with <b>--cached</b>, it modifies only the\nindex entries.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">See also\n<b><font color=\"#0000FF\">https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/</font></b>\n<font color=\"#000000\">and</font>\n<b><font color=\"#0000FF\">https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns.org/</font></b>\n<font color=\"#000000\">for further information.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">Some\nother commands that also work on files in the working tree\nand/or in the index can take <b>--staged</b> and/or\n<b>--worktree</b>.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>--staged</b> is exactly like <b>--cached</b>, which is\nused to ask a command to only work on the index, not the\nworking tree.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">&bull;\n<b>--worktree</b> is the opposite, to ask a command to work\non the working tree only, not the index.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">&bull;\nThe two options can be specified together to ask a command\nto work on both the index and the working tree.</font></p>\n\n<h2>GIT\n<a name=\"GIT\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">Part\nof the <a href=\"https://man.page/1/git\">git(1)</a> suite</font></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#ENHANCED OPTION PARSER\">ENHANCED OPTION PARSER</a>","<a href=\"#NOTES ON FREQUENTLY CONFUSED OPTIONS\">NOTES ON FREQUENTLY CONFUSED OPTIONS</a>","<a href=\"#GIT\">GIT</a>"],"level":7}