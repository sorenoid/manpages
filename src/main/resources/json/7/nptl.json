{"name":"nptl","description":"nptl - Native\nPOSIX Threads Library\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\nNPTL (Native\nPOSIX Threads Library) is the GNU C library POSIX threads\nimplementation that is used on modern Linux systems.\n\n<b>NPTL and\nsignals</b> <br>\nNPTL makes internal use of the first two real-time signals\n(signal numbers 32 and 33). One of these signals is used to\nsupport thread cancellation and POSIX timers (see\n<a href=\"https://man.page/2/timer_create\">timer_create(2)</a>); the other is used as part of a\nmechanism that ensures all threads in a process always have\nthe same UIDs and GIDs, as required by POSIX. These signals\ncannot be used in applications.\n\nTo prevent\naccidental use of these signals in applications, which might\ninterfere with the operation of the NPTL implementation,\nvarious glibc library functions and system call wrapper\nfunctions attempt to hide these signals from applications,\nas follows:\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p><b>SIGRTMIN</b> is defined with the value 34 (rather\nthan 32).</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>The <a href=\"https://man.page/2/sigwaitinfo\">sigwaitinfo(2)</a>, <a href=\"https://man.page/2/sigtimedwait\">sigtimedwait(2)</a>, and\n<a href=\"https://man.page/3/sigwait\">sigwait(3)</a> interfaces silently ignore requests to\nwait for these two signals if they are specified in the\nsignal set argument of these calls.</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>The <a href=\"https://man.page/2/sigprocmask\">sigprocmask(2)</a> and <a href=\"https://man.page/3/pthread_sigmask\">pthread_sigmask(3)</a>\ninterfaces silently ignore attempts to block these two\nsignals. </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>The <a href=\"https://man.page/2/sigaction\">sigaction(2)</a>, <a href=\"https://man.page/3/pthread_kill\">pthread_kill(3)</a>, and\n<a href=\"https://man.page/3/pthread_sigqueue\">pthread_sigqueue(3)</a> interfaces fail with the error\n<b>EINVAL</b> (indicating an invalid signal number) if these\nsignals are specified.</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p><a href=\"https://man.page/3/sigfillset\">sigfillset(3)</a> does not include these two signals\nwhen it creates a full signal set.</td></tr>\n</table>\n\n<b>NPTL and\nprocess credential changes</b> <br>\nAt the Linux kernel level, credentials (user and group IDs)\nare a per-thread attribute. However, POSIX requires that all\nof the POSIX threads in a process have the same credentials.\nTo accommodate this requirement, the NPTL implementation\nwraps all of the system calls that change process\ncredentials with functions that, in addition to invoking the\nunderlying system call, arrange for all other threads in the\nprocess to also change their credentials.\n\nThe\nimplementation of each of these system calls involves the\nuse of a real-time signal that is sent (using\n<a href=\"https://man.page/2/tgkill\">tgkill(2)</a>) to each of the other threads that must\nchange its credentials. Before sending these signals, the\nthread that is changing credentials saves the new\ncredential(s) and records the system call being employed in\na global buffer. A signal handler in the receiving thread(s)\nfetches this information and then uses the same system call\nto change its credentials.\n\nWrapper\nfunctions employing this technique are provided for\n<a href=\"https://man.page/2/setgid\">setgid(2)</a>, <a href=\"https://man.page/2/setuid\">setuid(2)</a>, <a href=\"https://man.page/2/setegid\">setegid(2)</a>,\n<a href=\"https://man.page/2/seteuid\">seteuid(2)</a>, <a href=\"https://man.page/2/setregid\">setregid(2)</a>, <a href=\"https://man.page/2/setreuid\">setreuid(2)</a>,\n<a href=\"https://man.page/2/setresgid\">setresgid(2)</a>, <a href=\"https://man.page/2/setresuid\">setresuid(2)</a>, and\n<a href=\"https://man.page/2/setgroups\">setgroups(2)</a>.\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\nFor details of\nthe conformance of NPTL to the POSIX standard, see\n<a href=\"https://man.page/7/pthreads\">pthreads(7)</a>.\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\nPOSIX says that\nany thread in any process with access to the memory\ncontaining a process-shared (<b>PTHREAD_PROCESS_SHARED</b>)\nmutex can operate on that mutex. However, on 64-bit x86\nsystems, the mutex definition for x86-64 is incompatible\nwith the mutex definition for i386, meaning that 32-bit and\n64-bit binaries can&rsquo;t share mutexes on x86-64\nsystems.\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<a href=\"https://man.page/7/credentials\">credentials(7)</a>,\n<a href=\"https://man.page/7/pthreads\">pthreads(7)</a>, <a href=\"https://man.page/7/signal\">signal(7)</a>,\n<a href=\"https://man.page/7/standards\">standards(7)</a>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\nThis page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.","body":"\n\n<h1 align=\"center\">NPTL</h1>\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">nptl - Native\nPOSIX Threads Library</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">NPTL (Native\nPOSIX Threads Library) is the GNU C library POSIX threads\nimplementation that is used on modern Linux systems.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>NPTL and\nsignals</b> <br>\nNPTL makes internal use of the first two real-time signals\n(signal numbers 32 and 33). One of these signals is used to\nsupport thread cancellation and POSIX timers (see\n<a href=\"https://man.page/2/timer_create\">timer_create(2)</a>); the other is used as part of a\nmechanism that ensures all threads in a process always have\nthe same UIDs and GIDs, as required by POSIX. These signals\ncannot be used in applications.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To prevent\naccidental use of these signals in applications, which might\ninterfere with the operation of the NPTL implementation,\nvarious glibc library functions and system call wrapper\nfunctions attempt to hide these signals from applications,\nas follows:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p><b>SIGRTMIN</b> is defined with the value 34 (rather\nthan 32).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>The <a href=\"https://man.page/2/sigwaitinfo\">sigwaitinfo(2)</a>, <a href=\"https://man.page/2/sigtimedwait\">sigtimedwait(2)</a>, and\n<a href=\"https://man.page/3/sigwait\">sigwait(3)</a> interfaces silently ignore requests to\nwait for these two signals if they are specified in the\nsignal set argument of these calls.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>The <a href=\"https://man.page/2/sigprocmask\">sigprocmask(2)</a> and <a href=\"https://man.page/3/pthread_sigmask\">pthread_sigmask(3)</a>\ninterfaces silently ignore attempts to block these two\nsignals.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>The <a href=\"https://man.page/2/sigaction\">sigaction(2)</a>, <a href=\"https://man.page/3/pthread_kill\">pthread_kill(3)</a>, and\n<a href=\"https://man.page/3/pthread_sigqueue\">pthread_sigqueue(3)</a> interfaces fail with the error\n<b>EINVAL</b> (indicating an invalid signal number) if these\nsignals are specified.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p><a href=\"https://man.page/3/sigfillset\">sigfillset(3)</a> does not include these two signals\nwhen it creates a full signal set.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>NPTL and\nprocess credential changes</b> <br>\nAt the Linux kernel level, credentials (user and group IDs)\nare a per-thread attribute. However, POSIX requires that all\nof the POSIX threads in a process have the same credentials.\nTo accommodate this requirement, the NPTL implementation\nwraps all of the system calls that change process\ncredentials with functions that, in addition to invoking the\nunderlying system call, arrange for all other threads in the\nprocess to also change their credentials.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nimplementation of each of these system calls involves the\nuse of a real-time signal that is sent (using\n<a href=\"https://man.page/2/tgkill\">tgkill(2)</a>) to each of the other threads that must\nchange its credentials. Before sending these signals, the\nthread that is changing credentials saves the new\ncredential(s) and records the system call being employed in\na global buffer. A signal handler in the receiving thread(s)\nfetches this information and then uses the same system call\nto change its credentials.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Wrapper\nfunctions employing this technique are provided for\n<a href=\"https://man.page/2/setgid\">setgid(2)</a>, <a href=\"https://man.page/2/setuid\">setuid(2)</a>, <a href=\"https://man.page/2/setegid\">setegid(2)</a>,\n<a href=\"https://man.page/2/seteuid\">seteuid(2)</a>, <a href=\"https://man.page/2/setregid\">setregid(2)</a>, <a href=\"https://man.page/2/setreuid\">setreuid(2)</a>,\n<a href=\"https://man.page/2/setresgid\">setresgid(2)</a>, <a href=\"https://man.page/2/setresuid\">setresuid(2)</a>, and\n<a href=\"https://man.page/2/setgroups\">setgroups(2)</a>.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">For details of\nthe conformance of NPTL to the POSIX standard, see\n<a href=\"https://man.page/7/pthreads\">pthreads(7)</a>.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX says that\nany thread in any process with access to the memory\ncontaining a process-shared (<b>PTHREAD_PROCESS_SHARED</b>)\nmutex can operate on that mutex. However, on 64-bit x86\nsystems, the mutex definition for x86-64 is incompatible\nwith the mutex definition for i386, meaning that 32-bit and\n64-bit binaries can&rsquo;t share mutexes on x86-64\nsystems.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/7/credentials\">credentials(7)</a>,\n<a href=\"https://man.page/7/pthreads\">pthreads(7)</a>, <a href=\"https://man.page/7/signal\">signal(7)</a>,\n<a href=\"https://man.page/7/standards\">standards(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":7}