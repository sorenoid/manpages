{"name":"evp_kdf-tls1_prf","description":"EVP_KDF-TLS1_PRF\n- The TLS1 PRF EVP_KDF implementation\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\nSupport for\ncomputing the <b><small>TLS1</small></b> <small>PRF</small>\nthrough the <b><small>EVP_KDF</small></b>\n<small>API.</small>\n\nThe\n<small>EVP_KDF-TLS1_PRF</small> algorithm implements the\n<small>PRF</small> used by <small>TLS</small> versions up to\nand including <small>TLS 1.2.</small>\n\n\n<b>Identity</b>\n<br>\n&quot; <small>TLS1-PRF&quot;</small> is the name for this\nimplementation; it can be used with the\n<b>EVP_KDF_fetch()</b> function.\n\n<b>Supported\nparameters</b> <br>\nThe supported parameters are: <br>\n&quot;properties&quot; (\n<b><small>OSSL_KDF_PARAM_PROPERTIES</small></b> ) &lt;\n<small>UTF8</small> string&gt; <br>\n&quot;digest&quot; (\n<b><small>OSSL_KDF_PARAM_DIGEST</small></b> ) &lt;\n<small>UTF8</small> string&gt;\n\n<p style=\"margin-left:17%;\">These parameters work as\ndescribed in &quot; <small>PARAMETERS&quot;</small> in\n<b><small>EVP_KDF</small></b> (3).\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\n<b><small>OSSL_KDF_PARAM_DIGEST</small></b> parameter is\nused to set the message digest associated with the\n<small>TLS PRF.</small> <b>EVP_md5_sha1()</b> is treated as\na special case which uses the <small>PRF</small> algorithm\nusing both <b><small>MD5</small></b> and\n<b><small>SHA1</small></b> as used in <small>TLS 1.0</small>\nand 1.1.\n\n<p style=\"margin-left:11%;\">&quot;secret&quot; (\n<b><small>OSSL_KDF_PARAM_SECRET</small></b> ) &lt;octet\nstring&gt;\n\n<p style=\"margin-left:17%;\">This parameter sets the secret\nvalue of the <small>TLS PRF.</small> Any existing secret\nvalue is replaced.\n\n<p style=\"margin-left:11%;\">&quot;seed&quot; (\n<b><small>OSSL_KDF_PARAM_SEED</small></b> ) &lt;octet\nstring&gt;\n\n<p style=\"margin-left:17%;\">This parameter sets the context\nseed. The length of the context seed cannot exceed 1024\nbytes; this should be more than enough for any normal use of\nthe <small>TLS PRF.</small>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\nA context for\nthe <small>TLS PRF</small> can be obtained by calling:\n\nEVP_KDF *kdf =\nEVP_KDF_fetch(NULL, &quot;TLS1-PRF&quot;, NULL); <br>\nEVP_KDF_CTX *kctx = EVP_KDF_CTX_new(kdf);\n\nThe digest,\nsecret value and seed must be set before a key is derived\notherwise an error will occur.\n\nThe output\nlength of the <small>PRF</small> is specified by the\n<i>keylen</i> parameter to the <b>EVP_KDF_derive()</b>\nfunction.\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\nThis example\nderives 10 bytes using <small>SHA-256</small> with the\nsecret key &quot;secret&quot; and seed value\n&quot;seed&quot;:\n\nEVP_KDF *kdf;\n<br>\nEVP_KDF_CTX *kctx; <br>\nunsigned char out[10]; <br>\nOSSL_PARAM params[4], *p = params; <br>\nkdf = EVP_KDF_fetch(NULL, &quot;TLS1-PRF&quot;, NULL); <br>\nkctx = EVP_KDF_CTX_new(kdf); <br>\nEVP_KDF_free(kdf); <br>\n*p++ =\nOSSL_PARAM_construct_utf8_string(OSSL_KDF_PARAM_DIGEST, <br>\nSN_sha256, strlen(SN_sha256)); <br>\n*p++ =\nOSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_SECRET,\n<br>\n&quot;secret&quot;, (size_t)6); <br>\n*p++ =\nOSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_SEED, <br>\n&quot;seed&quot;, (size_t)4); <br>\n*p = OSSL_PARAM_construct_end(); <br>\nif (EVP_KDF_derive(kctx, out, sizeof(out), params) &lt;= 0)\n{ <br>\nerror(&quot;EVP_KDF_derive&quot;); <br>\n} <br>\nEVP_KDF_CTX_free(kctx);\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<small>RFC\n2246, RFC 5246</small> and <small>NIST SP 800-135</small>\nr1\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<b><small>EVP_KDF</small></b>\n(3), <a href=\"https://man.page/3/EVP_KDF_CTX_new\">EVP_KDF_CTX_new(3)</a>, <a href=\"https://man.page/3/EVP_KDF_CTX_free\">EVP_KDF_CTX_free(3)</a>,\n<a href=\"https://man.page/3/EVP_KDF_CTX_set_params\">EVP_KDF_CTX_set_params(3)</a>, <a href=\"https://man.page/3/EVP_KDF_derive\">EVP_KDF_derive(3)</a>,\n&quot; <small>PARAMETERS&quot;</small> in\n<b><small>EVP_KDF</small></b> (3)\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\nCopyright\n2018-2021 The OpenSSL Project Authors. All Rights\nReserved.\n\nLicensed under\nthe Apache License 2.0 (the &quot;License&quot;). You may\nnot use this file except in compliance with the License. You\ncan obtain a copy in the file <small>LICENSE</small> in the\nsource distribution or at\n&lt;https://www.openssl.org/source/license.html&gt;.","body":"\n\n<h1 align=\"center\">EVP_KDF-TLS1_PRF</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">EVP_KDF-TLS1_PRF\n- The TLS1 PRF EVP_KDF implementation</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Support for\ncomputing the <b><small>TLS1</small></b> <small>PRF</small>\nthrough the <b><small>EVP_KDF</small></b>\n<small>API.</small></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<small>EVP_KDF-TLS1_PRF</small> algorithm implements the\n<small>PRF</small> used by <small>TLS</small> versions up to\nand including <small>TLS 1.2.</small></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Identity</b>\n<br>\n&quot; <small>TLS1-PRF&quot;</small> is the name for this\nimplementation; it can be used with the\n<b>EVP_KDF_fetch()</b> function.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Supported\nparameters</b> <br>\nThe supported parameters are: <br>\n&quot;properties&quot; (\n<b><small>OSSL_KDF_PARAM_PROPERTIES</small></b> ) &lt;\n<small>UTF8</small> string&gt; <br>\n&quot;digest&quot; (\n<b><small>OSSL_KDF_PARAM_DIGEST</small></b> ) &lt;\n<small>UTF8</small> string&gt;</p>\n\n<p style=\"margin-left:17%;\">These parameters work as\ndescribed in &quot; <small>PARAMETERS&quot;</small> in\n<b><small>EVP_KDF</small></b> (3).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The\n<b><small>OSSL_KDF_PARAM_DIGEST</small></b> parameter is\nused to set the message digest associated with the\n<small>TLS PRF.</small> <b>EVP_md5_sha1()</b> is treated as\na special case which uses the <small>PRF</small> algorithm\nusing both <b><small>MD5</small></b> and\n<b><small>SHA1</small></b> as used in <small>TLS 1.0</small>\nand 1.1.</p>\n\n<p style=\"margin-left:11%;\">&quot;secret&quot; (\n<b><small>OSSL_KDF_PARAM_SECRET</small></b> ) &lt;octet\nstring&gt;</p>\n\n<p style=\"margin-left:17%;\">This parameter sets the secret\nvalue of the <small>TLS PRF.</small> Any existing secret\nvalue is replaced.</p>\n\n<p style=\"margin-left:11%;\">&quot;seed&quot; (\n<b><small>OSSL_KDF_PARAM_SEED</small></b> ) &lt;octet\nstring&gt;</p>\n\n<p style=\"margin-left:17%;\">This parameter sets the context\nseed. The length of the context seed cannot exceed 1024\nbytes; this should be more than enough for any normal use of\nthe <small>TLS PRF.</small></p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">A context for\nthe <small>TLS PRF</small> can be obtained by calling:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">EVP_KDF *kdf =\nEVP_KDF_fetch(NULL, &quot;TLS1-PRF&quot;, NULL); <br>\nEVP_KDF_CTX *kctx = EVP_KDF_CTX_new(kdf);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The digest,\nsecret value and seed must be set before a key is derived\notherwise an error will occur.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The output\nlength of the <small>PRF</small> is specified by the\n<i>keylen</i> parameter to the <b>EVP_KDF_derive()</b>\nfunction.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This example\nderives 10 bytes using <small>SHA-256</small> with the\nsecret key &quot;secret&quot; and seed value\n&quot;seed&quot;:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">EVP_KDF *kdf;\n<br>\nEVP_KDF_CTX *kctx; <br>\nunsigned char out[10]; <br>\nOSSL_PARAM params[4], *p = params; <br>\nkdf = EVP_KDF_fetch(NULL, &quot;TLS1-PRF&quot;, NULL); <br>\nkctx = EVP_KDF_CTX_new(kdf); <br>\nEVP_KDF_free(kdf); <br>\n*p++ =\nOSSL_PARAM_construct_utf8_string(OSSL_KDF_PARAM_DIGEST, <br>\nSN_sha256, strlen(SN_sha256)); <br>\n*p++ =\nOSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_SECRET,\n<br>\n&quot;secret&quot;, (size_t)6); <br>\n*p++ =\nOSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_SEED, <br>\n&quot;seed&quot;, (size_t)4); <br>\n*p = OSSL_PARAM_construct_end(); <br>\nif (EVP_KDF_derive(kctx, out, sizeof(out), params) &lt;= 0)\n{ <br>\nerror(&quot;EVP_KDF_derive&quot;); <br>\n} <br>\nEVP_KDF_CTX_free(kctx);</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><small>RFC\n2246, RFC 5246</small> and <small>NIST SP 800-135</small>\nr1</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><small>EVP_KDF</small></b>\n(3), <a href=\"https://man.page/3/EVP_KDF_CTX_new\">EVP_KDF_CTX_new(3)</a>, <a href=\"https://man.page/3/EVP_KDF_CTX_free\">EVP_KDF_CTX_free(3)</a>,\n<a href=\"https://man.page/3/EVP_KDF_CTX_set_params\">EVP_KDF_CTX_set_params(3)</a>, <a href=\"https://man.page/3/EVP_KDF_derive\">EVP_KDF_derive(3)</a>,\n&quot; <small>PARAMETERS&quot;</small> in\n<b><small>EVP_KDF</small></b> (3)</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright\n2018-2021 The OpenSSL Project Authors. All Rights\nReserved.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Licensed under\nthe Apache License 2.0 (the &quot;License&quot;). You may\nnot use this file except in compliance with the License. You\ncan obtain a copy in the file <small>LICENSE</small> in the\nsource distribution or at\n&lt;https://www.openssl.org/source/license.html&gt;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"],"level":7}