{"name":"evp_pkey-ffc","body":"\n\n<h1 align=\"center\">EVP_PKEY-FFC</h1>\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">EVP_PKEY-FFC -\nEVP_PKEY DSA and DH/DHX shared FFC parameters.</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Finite field\ncryptography ( <small>FFC</small> ) is a method of\nimplementing discrete logarithm cryptography using finite\nfield mathematics. <small>DSA</small> is an example of\n<small>FFC</small> and Diffie-Hellman key establishment\nalgorithms specified in <small>SP800-56A</small> can also be\nimplemented as <small>FFC.</small></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b><small>DSA</small></b> , <b><small>DH</small></b> and\n<b><small>DHX</small></b> keytypes are implemented in\nOpenSSL&rsquo;s default and <small>FIPS</small> providers.\nThe implementations support the basic <small>DSA, DH</small>\nand <small>DHX</small> keys, containing the public and\nprivate keys <i>pub</i> and <i>priv</i> as well as the three\nmain domain parameters <i>p</i>, <i>q</i> and <i>g</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For\n<b><small>DSA</small></b> (and <b><small>DH</small></b> that\nis not a named group) the <small>FIPS186-4</small> standard\nspecifies that the values used for <small>FFC</small>\nparameter generation are also required for parameter\nvalidation. This means that optional <small>FFC</small>\ndomain parameter values for <i>seed</i>, <i>pcounter</i> and\n<i>gindex</i> may need to be stored for validation purposes.\nFor <b><small>DH</small></b> the <i>seed</i> and\n<i>pcounter</i> can be stored in <small>ASN1</small> data\n(but the <i>gindex</i> is not). For\n<b><small>DSA</small></b> however, these fields are not\nstored in the <small>ASN1</small> data so they need to be\nstored externally if validation is required.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b><small>DH</small></b> key type uses PKCS#3 format which\nsaves p and g, but not the &rsquo;q&rsquo; value. The\n<b><small>DHX</small></b> key type uses X9.42 format which\nsaves the value of &rsquo;q&rsquo; and this must be used for\n<small>FIPS186-4.</small></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><small><b>FFC</b></small>\n<b>parameters</b> <br>\nIn addition to the common parameters that all keytypes\nshould support (see &quot;Common parameters&quot; in\n<a href=\"https://man.page/7/provider-keymgmt\">provider-keymgmt(7)</a>), the <b><small>DSA</small></b> ,\n<b><small>DH</small></b> and <b><small>DHX</small></b>\nkeytype implementations support the following. <br>\n&quot;pub&quot; (\n<b><small>OSSL_PKEY_PARAM_PUB_KEY</small></b> ) &lt;unsigned\ninteger&gt;</p>\n\n<p style=\"margin-left:17%;\">The public key value.</p>\n\n<p style=\"margin-left:11%;\">&quot;priv&quot; (\n<b><small>OSSL_PKEY_PARAM_PRIV_KEY</small></b> )\n&lt;unsigned integer&gt;</p>\n\n<p style=\"margin-left:17%;\">The private key value.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><small>FFC\nDSA, DH</small> and <small>DHX</small> domain parameters</b>\n<br>\n&quot;p&quot; ( <b><small>OSSL_PKEY_PARAM_FFC_P</small></b>\n) &lt;unsigned integer&gt;</p>\n\n<p style=\"margin-left:17%;\">A <small>DSA</small> or\nDiffie-Hellman prime &quot;p&quot; value.</p>\n\n<p style=\"margin-left:11%;\">&quot;g&quot; (\n<b><small>OSSL_PKEY_PARAM_FFC_G</small></b> ) &lt;unsigned\ninteger&gt;</p>\n\n<p style=\"margin-left:17%;\">A <small>DSA</small> or\nDiffie-Hellman generator &quot;g&quot; value.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><small>FFC\nDSA</small> and <small>DHX</small> domain parameters</b>\n<br>\n&quot;q&quot; ( <b><small>OSSL_PKEY_PARAM_FFC_Q</small></b>\n) &lt;unsigned integer&gt;</p>\n\n<p style=\"margin-left:17%;\">A <small>DSA</small> or\nDiffie-Hellman prime &quot;q&quot; value.</p>\n\n<p style=\"margin-left:11%;\">&quot;seed&quot; (\n<b><small>OSSL_PKEY_PARAM_FFC_SEED</small></b> ) &lt;octet\nstring&gt;</p>\n\n<p style=\"margin-left:17%;\">An optional domain parameter\n<i>seed</i> value used during generation and validation of\n<i>p</i>, <i>q</i> and canonical <i>g</i>. For validation\nthis needs to set the <i>seed</i> that was produced during\ngeneration.</p>\n\n<p style=\"margin-left:11%;\">&quot;gindex&quot; (\n<b><small>OSSL_PKEY_PARAM_FFC_GINDEX</small></b> )\n&lt;integer&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the index to use for\ncanonical generation and verification of the generator\n<i>g</i>. Set this to a positive value from 0..FF to use\nthis mode. This <i>gindex</i> can then be reused during key\nvalidation to verify the value of <i>g</i>. If this value is\nnot set or is -1 then unverifiable generation of the\ngenerator <i>g</i> will be used.</p>\n\n<p style=\"margin-left:11%;\">&quot;pcounter&quot; (\n<b><small>OSSL_PKEY_PARAM_FFC_PCOUNTER</small></b> )\n&lt;integer&gt;</p>\n\n<p style=\"margin-left:17%;\">An optional domain parameter\n<i>counter</i> value that is output during generation of\n<i>p</i>. This value must be saved if domain parameter\nvalidation is required.</p>\n\n<p style=\"margin-left:11%;\">&quot;hindex&quot; (\n<b><small>OSSL_PKEY_PARAM_FFC_H</small></b> )\n&lt;integer&gt;</p>\n\n<p style=\"margin-left:17%;\">For unverifiable generation of\nthe generator <i>g</i> this value is output during\ngeneration of <i>g</i>. Its value is the first integer\nlarger than one that satisfies g = h^j mod p (where g != 1\nand &quot;j&quot; is the cofactor).</p>\n\n<p style=\"margin-left:11%;\">&quot;j&quot; (\n<b><small>OSSL_PKEY_PARAM_FFC_COFACTOR</small></b> )\n&lt;unsigned integer&gt;</p>\n\n<p style=\"margin-left:17%;\">An optional informational\ncofactor parameter that should equal to (p - 1) / q.</p>\n\n<p style=\"margin-left:11%;\">&quot;validate-pq&quot; (\n<b><small>OSSL_PKEY_PARAM_FFC_VALIDATE_PQ</small></b> )\n&lt;unsigned integer&gt; <br>\n&quot;validate-g&quot; (\n<b><small>OSSL_PKEY_PARAM_FFC_VALIDATE_G</small></b> )\n&lt;unsigned integer&gt;</p>\n\n<p style=\"margin-left:17%;\">These boolean values are used\nduring <small>FIPS186-4</small> or <small>FIPS186-2</small>\nkey validation checks (See <a href=\"https://man.page/3/EVP_PKEY_param_check\">EVP_PKEY_param_check(3)</a>)\nto select validation options. By default <i>validate-pq</i>\nand <i>validate-g</i> are both set to 1 to check that p,q\nand g are valid. Either of these may be set to 0 to skip a\ntest, which is mainly useful for testing purposes.</p>\n\n<p style=\"margin-left:11%;\">&quot;validate-legacy&quot; (\n<b><small>OSSL_PKEY_PARAM_FFC_VALIDATE_LEGACY</small></b> )\n&lt;unsigned <br>\ninteger&gt;</p>\n\n<p style=\"margin-left:17%;\">This boolean value is used\nduring key validation checks (See\n<a href=\"https://man.page/3/EVP_PKEY_param_check\">EVP_PKEY_param_check(3)</a>) to select the validation\ntype. The default value of 0 selects\n<small>FIPS186-4</small> validation. Setting this value to 1\nselects <small>FIPS186-2</small> validation.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><small>FFC</small>\nkey generation parameters</b> <br>\nThe following key generation types are available for\n<small>DSA</small> and <small>DHX</small> algorithms: <br>\n&quot;type&quot; (\n<b><small>OSSL_PKEY_PARAM_FFC_TYPE</small></b> ) &lt;\n<small>UTF8</small> string&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the type of parameter\ngeneration. The shared valid values are: <br>\n&quot;fips186_4&quot;</p>\n\n<p style=\"margin-left:23%;\">The current standard.</p>\n\n<p style=\"margin-left:17%;\">&quot;fips186_2&quot;</p>\n\n<p style=\"margin-left:23%;\">The old standard that should\nonly be used for legacy purposes.</p>\n\n<p style=\"margin-left:17%;\">&quot;default&quot;</p>\n\n<p style=\"margin-left:23%;\">This can choose one of\n&quot;fips186_4&quot; or &quot;fips186_2&quot; depending on\nother parameters set for parameter generation.</p>\n\n<p style=\"margin-left:11%;\">&quot;pbits&quot; (\n<b><small>OSSL_PKEY_PARAM_FFC_PBITS</small></b> )\n&lt;unsigned integer&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the size (in bits) of the\nprime &rsquo;p&rsquo;.</p>\n\n<p style=\"margin-left:11%;\">&quot;qbits&quot; (\n<b><small>OSSL_PKEY_PARAM_FFC_QBITS</small></b> )\n&lt;unsigned integer&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the size (in bits) of the\nprime &rsquo;q&rsquo;.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For\n&quot;fips186_4&quot; this can be either 224 or 256. For\n&quot;fips186_2&quot; this has a size of 160.</p>\n\n<p style=\"margin-left:11%;\">&quot;digest&quot; (\n<b><small>OSSL_PKEY_PARAM_FFC_DIGEST</small></b> ) &lt;\n<small>UTF8</small> string&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets the Digest algorithm to be\nused as part of the Key Generation Function associated with\nthe given Key Generation <i>ctx</i>. This must also be set\nfor key validation.</p>\n\n<p style=\"margin-left:11%;\">&quot;properties&quot; (\n<b><small>OSSL_PKEY_PARAM_FFC_DIGEST_PROPS</small></b> )\n&lt; <small>UTF8</small> string&gt;</p>\n\n<p style=\"margin-left:17%;\">Sets properties to be used upon\nlook up of the implementation for the selected Digest\nalgorithm for the Key Generation Function associated with\nthe given key generation <i>ctx</i>. This may also be set\nfor key validation.</p>\n\n<p style=\"margin-left:11%;\">&quot;seed&quot; (\n<b><small>OSSL_PKEY_PARAM_FFC_SEED</small></b> ) &lt;octet\nstring&gt;</p>\n\n<p style=\"margin-left:17%;\">For &quot;fips186_4&quot; or\n&quot;fips186_2&quot; generation this sets the <i>seed</i>\ndata to use instead of generating a random seed internally.\nThis should be used for testing purposes only. This will\neither produce fixed values for the generated parameters\n<small>OR</small> it will fail if the seed did not generate\nvalid primes.</p>\n\n<p style=\"margin-left:11%;\">&quot;gindex&quot; (\n<b><small>OSSL_PKEY_PARAM_FFC_GINDEX</small></b> )\n&lt;integer&gt; <br>\n&quot;pcounter&quot; (\n<b><small>OSSL_PKEY_PARAM_FFC_PCOUNTER</small></b> )\n&lt;integer&gt; <br>\n&quot;hindex&quot; (\n<b><small>OSSL_PKEY_PARAM_FFC_H</small></b> )\n&lt;integer&gt;</p>\n\n<p style=\"margin-left:17%;\">These types are described\nabove.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nsections of SP800-56Ar3: <br>\n5.5.1.1 <small>FFC</small> Domain Parameter\nSelection/Generation</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nsections of <small>FIPS 186-4:</small> <br>\nA.1.1.2 Generation of Probable Primes p and q Using an\nApproved Hash <br>\nFunction. <br>\nA.2.3 Generation of canonical generator g. <br>\nA.2.1 Unverifiable Generation of the Generator g.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><small>EVP_PKEY-DSA</small></b>\n(7), <b><small>EVP_PKEY-DH</small></b> (7),\n<b><small>EVP_SIGNATURE-DSA</small></b> (7),\n<b><small>EVP_KEYEXCH-DH</small></b> (7)\n<b><small>EVP_KEYMGMT</small></b> (3),\n<b><small>EVP_PKEY</small></b> (3),\n<a href=\"https://man.page/7/provider-keymgmt\">provider-keymgmt(7)</a>, <a href=\"https://man.page/7/OSSL_PROVIDER-default\">OSSL_PROVIDER-default(7)</a>,\n<b><small>OSSL_PROVIDER-FIPS</small></b> (7),</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright\n2020-2021 The OpenSSL Project Authors. All Rights\nReserved.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Licensed under\nthe Apache License 2.0 (the &quot;License&quot;). You may\nnot use this file except in compliance with the License. You\ncan obtain a copy in the file <small>LICENSE</small> in the\nsource distribution or at\n&lt;https://www.openssl.org/source/license.html&gt;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"],"level":7}