{"name":"ossl_provider-fips","description":"OSSL_PROVIDER-FIPS - OpenSSL FIPS provider","body":"\n\n<h1 align=\"center\">OSSL_PROVIDER-FIPS</h1>\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">OSSL_PROVIDER-FIPS\n- OpenSSL FIPS provider</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The OpenSSL\n<small>FIPS</small> provider is a special provider that\nconforms to the Federal Information Processing Standards (\n<small>FIPS</small> ) specified in <small>FIPS\n140-2.</small> This &rsquo;module&rsquo; contains an\napproved set of cryptographic algorithms that is validated\nby an accredited testing laboratory.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Properties</b>\n<br>\nThe implementations in this provider specifically have these\nproperties defined: <br>\n&quot;provider=fips&quot; <br>\n&quot;fips=yes&quot;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It may be used\nin a property query string with fetching functions such as\n<a href=\"https://man.page/3/EVP_MD_fetch\">EVP_MD_fetch(3)</a> or <a href=\"https://man.page/3/EVP_CIPHER_fetch\">EVP_CIPHER_fetch(3)</a>, as\nwell as with other functions that take a property query\nstring, such as <a href=\"https://man.page/3/EVP_PKEY_CTX_new_from_name\">EVP_PKEY_CTX_new_from_name(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It isn&rsquo;t\nmandatory to query for any of these properties, except to\nmake sure to get implementations of this provider and none\nother.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n&quot;fips=yes&quot; property can be use to make sure only\n<small>FIPS</small> approved implementations are used for\ncrypto operations. This may also include other non-crypto\nsupport operations that are not in the fips provider, such\nas asymmetric key encoders, see &quot;Asymmetric Key\nManagement&quot; in <a href=\"https://man.page/7/OSSL_PROVIDER-default\">OSSL_PROVIDER-default(7)</a>.</p>\n\n<h2>OPERATIONS AND ALGORITHMS\n<a name=\"OPERATIONS AND ALGORITHMS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The OpenSSL\n<small>FIPS</small> provider supports these operations and\nalgorithms:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Hashing\nAlgorithms / Message Digests</b> <small><br>\nSHA1,</small> see <b><small>EVP_MD-SHA1</small></b> (7)\n<small><br>\nSHA2,</small> see <b><small>EVP_MD-SHA2</small></b> (7)\n<small><br>\nSHA3,</small> see <b><small>EVP_MD-SHA3</small></b> (7) <br>\nKECCAK-KMAC, see <b><small>EVP_MD-KECCAK-KMAC</small></b>\n(7)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Symmetric\nCiphers</b> <small><br>\nAES,</small> see <b><small>EVP_CIPHER-AES</small></b> (7)\n<small><br>\nDES-EDE3</small> (TripleDES), see\n<b><small>EVP_CIPHER-DES</small></b> (7)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Message\nAuthentication Code ( <small>MAC</small> )</b> <small><br>\nCMAC,</small> see <b><small>EVP_MAC-CMAC</small></b> (7)\n<small><br>\nGMAC,</small> see <b><small>EVP_MAC-GMAC</small></b> (7)\n<small><br>\nHMAC,</small> see <b><small>EVP_MAC-HMAC</small></b> (7)\n<small><br>\nKMAC,</small> see <b><small>EVP_MAC-KMAC</small></b> (7)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Key\nDerivation Function ( <small>KDF</small> )</b> <small><br>\nHKDF,</small> see <b><small>EVP_KDF-HKDF</small></b> (7)\n<small><br>\nTLS13-KDF,</small> see\n<b><small>EVP_KDF-TLS13_KDF</small></b> (7) <small><br>\nSSKDF,</small> see <b><small>EVP_KDF-SSKDF</small></b> (7)\n<small><br>\nPBKDF2,</small> see <b><small>EVP_KDF-PBKDF2</small></b> (7)\n<small><br>\nSSHKDF,</small> see <b><small>EVP_KDF-SSHKDF</small></b> (7)\n<small><br>\nTLS1-PRF,</small> see <b><small>EVP_KDF-TLS1_PRF</small></b>\n(7) <small><br>\nKBKDF,</small> see <b><small>EVP_KDF-KBKDF</small></b> (7)\n<br>\nX942KDF-ASN1, see <b><small>EVP_KDF-X942-ASN1</small></b>\n(7) <br>\nX942KDF-CONCAT, see\n<b><small>EVP_KDF-X942-CONCAT</small></b> (7) <br>\nX963KDF, see <b><small>EVP_KDF-X963</small></b> (7)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Key\nExchange</b> <small><br>\nDH,</small> see <b><small>EVP_KEYEXCH-DH</small></b> (7)\n<small><br>\nECDH,</small> see <b><small>EVP_KEYEXCH-ECDH</small></b> (7)\n<br>\nX25519, see <b><small>EVP_KEYEXCH-X25519</small></b> (7)\n<br>\nX448, see <b><small>EVP_KEYEXCH-X448</small></b> (7)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Asymmetric\nSignature</b> <small><br>\nDSA,</small> see <b><small>EVP_KEYEXCH-DSA</small></b> (7)\n<small><br>\nRSA,</small> see <b><small>EVP_SIGNATURE-RSA</small></b> (7)\n<br>\nX25519, see <b><small>EVP_SIGNATURE-ED25519</small></b> (7)\n<br>\nX448, see <b><small>EVP_SIGNATURE-ED448</small></b> (7)\n<small><br>\nHMAC,</small> see <b><small>EVP_SIGNATURE-HMAC</small></b>\n(7) <small><br>\nCMAC,</small> see <b><small>EVP_SIGNATURE-CMAC</small></b>\n(7)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Asymmetric\nCipher</b> <small><br>\nRSA,</small> see <b><small>EVP_KEYEXCH-RSA</small></b>\n(7)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Asymmetric\nKey Encapsulation</b> <small><br>\nRSA,</small> see <b><small>EVP_KEM-RSA</small></b> (7)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Asymmetric\nKey Management</b> <small><br>\nDH,</small> see <b><small>EVP_KEYMGMT-DH</small></b> (7)\n<small><br>\nDSA,</small> see <b><small>EVP_KEYMGMT-DSA</small></b> (7)\n<small><br>\nRSA,</small> see <b><small>EVP_KEYMGMT-RSA</small></b>\n(7)</p>\n\n<h2>SELF TESTING\n<a name=\"SELF TESTING\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">One of the\nrequirements for the <small>FIPS</small> module is self\ntesting. An optional callback mechanism is available to\nreturn information to the user using\n<a href=\"https://man.page/3/OSSL_SELF_TEST_set_callback\">OSSL_SELF_TEST_set_callback(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The parameters\npassed to the callback are described in\n<a href=\"https://man.page/3/OSSL_SELF_TEST_new\">OSSL_SELF_TEST_new(3)</a></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The OpenSSL\n<small>FIPS</small> module uses the following mechanism to\nprovide information about the self tests as they run. This\nis useful for debugging if a self test is failing. The\ncallback also allows forcing any self test to fail, in order\nto check that it operates correctly on failure. Note that\nall self tests run even if a self test failure occurs.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<small>FIPS</small> module passes the following type(s) to\n<b>OSSL_SELF_TEST_onbegin()</b>. <br>\n&quot;Module_Integrity&quot; (\n<b><small>OSSL_SELF_TEST_TYPE_MODULE_INTEGRITY</small></b>\n)</p>\n\n<p style=\"margin-left:17%;\">Uses <small>HMAC SHA256</small>\non the module file to validate that the module has not been\nmodified. The integrity value is compared to a value written\nto a configuration file during installation.</p>\n\n<p style=\"margin-left:11%;\">&quot;Install_Integrity&quot; (\n<b><small>OSSL_SELF_TEST_TYPE_INSTALL_INTEGRITY</small></b>\n)</p>\n\n<p style=\"margin-left:17%;\">Uses <small>HMAC SHA256</small>\non a fixed string to validate that the installation process\nhas already been performed and the self test\n<small>KATS</small> have already been tested, The integrity\nvalue is compared to a value written to a configuration file\nafter successfully running the self tests during\ninstallation.</p>\n\n<p style=\"margin-left:11%;\">&quot;KAT_Cipher&quot; (\n<b><small>OSSL_SELF_TEST_TYPE_KAT_CIPHER</small></b> )</p>\n\n<p style=\"margin-left:17%;\">Known answer test for a\nsymmetric cipher.</p>\n\n\n<p style=\"margin-left:11%;\">&quot;KAT_AsymmetricCipher&quot;\n( <b><small>OSSL_SELF_TEST_TYPE_KAT_ASYM_CIPHER</small></b>\n)</p>\n\n<p style=\"margin-left:17%;\">Known answer test for a\nasymmetric cipher.</p>\n\n<p style=\"margin-left:11%;\">&quot;KAT_Digest&quot; (\n<b><small>OSSL_SELF_TEST_TYPE_KAT_DIGEST</small></b> )</p>\n\n<p style=\"margin-left:17%;\">Known answer test for a\ndigest.</p>\n\n<p style=\"margin-left:11%;\">&quot;KAT_Signature&quot; (\n<b><small>OSSL_SELF_TEST_TYPE_KAT_SIGNATURE</small></b>\n)</p>\n\n<p style=\"margin-left:17%;\">Known answer test for a\nsignature.</p>\n\n<p style=\"margin-left:11%;\">&quot;PCT_Signature&quot; (\n<b><small>OSSL_SELF_TEST_TYPE_PCT_SIGNATURE</small></b>\n)</p>\n\n<p style=\"margin-left:17%;\">Pairwise Consistency check for\na signature.</p>\n\n<p style=\"margin-left:11%;\">&quot;\n<small>KAT_KDF&quot;</small> (\n<b><small>OSSL_SELF_TEST_TYPE_KAT_KDF</small></b> )</p>\n\n<p style=\"margin-left:17%;\">Known answer test for a key\nderivation function.</p>\n\n<p style=\"margin-left:11%;\">&quot;\n<small>KAT_KA&quot;</small> (\n<b><small>OSSL_SELF_TEST_TYPE_KAT_KA</small></b> )</p>\n\n<p style=\"margin-left:17%;\">Known answer test for key\nagreement.</p>\n\n<p style=\"margin-left:11%;\">&quot;\n<small>DRBG&quot;</small> (\n<b><small>OSSL_SELF_TEST_TYPE_DRBG</small></b> )</p>\n\n<p style=\"margin-left:17%;\">Known answer test for a\nDeterministic Random Bit Generator.</p>\n\n<p style=\"margin-left:11%;\">&quot;Conditional_PCT&quot; (\n<b><small>OSSL_SELF_TEST_TYPE_PCT</small></b> )</p>\n\n<p style=\"margin-left:17%;\">Conditional test that is run\nduring the generation of key pairs.</p>\n\n\n<p style=\"margin-left:11%;\">&quot;Continuous_RNG_Test&quot;\n( <b><small>OSSL_SELF_TEST_TYPE_CRNG</small></b> )</p>\n\n<p style=\"margin-left:17%;\">Continuous random number\ngenerator test.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n&quot;Module_Integrity&quot; self test is always run at\nstartup. The &quot;Install_Integrity&quot; self test is used\nto check if the self tests have already been run at\ninstallation time. If they have already run then the self\ntests are not run on subsequent startups. All other self\ntest categories are run once at installation time, except\nfor the &quot;Pairwise_Consistency_Test&quot;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">There is only\none instance of the &quot;Module_Integrity&quot; and\n&quot;Install_Integrity&quot; self tests. All other self\ntests may have multiple instances.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<small>FIPS</small> module passes the following\ndescriptions(s) to <b>OSSL_SELF_TEST_onbegin()</b>. <br>\n&quot; <small>HMAC&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_INTEGRITY_HMAC</small></b>\n)</p>\n\n<p style=\"margin-left:17%;\">&quot;Module_Integrity&quot;\nand &quot;Install_Integrity&quot; use this.</p>\n\n<p style=\"margin-left:11%;\">&quot; <small>RSA&quot;</small>\n( <b><small>OSSL_SELF_TEST_DESC_PCT_RSA_PKCS1</small></b> )\n<br>\n&quot; <small>ECDSA&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_PCT_ECDSA</small></b> ) <br>\n&quot; <small>DSA&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_PCT_DSA</small></b> )</p>\n\n<p style=\"margin-left:17%;\">Key generation tests used with\nthe &quot;Pairwise_Consistency_Test&quot; type.</p>\n\n<p style=\"margin-left:11%;\">&quot;RSA_Encrypt&quot; (\n<b><small>OSSL_SELF_TEST_DESC_ASYM_RSA_ENC</small></b> )\n<br>\n&quot;RSA_Decrypt&quot; (\n<b><small>OSSL_SELF_TEST_DESC_ASYM_RSA_DEC</small></b> )</p>\n\n\n<p style=\"margin-left:17%;\">&quot;KAT_AsymmetricCipher&quot;\nuses this to indicate an encrypt or decrypt\n<small>KAT.</small></p>\n\n<p style=\"margin-left:11%;\">&quot;\n<small>AES_GCM&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_CIPHER_AES_GCM</small></b> )\n<br>\n&quot;AES_ECB_Decrypt&quot; (\n<b><small>OSSL_SELF_TEST_DESC_CIPHER_AES_ECB</small></b> )\n<br>\n&quot; <small>TDES&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_CIPHER_TDES</small></b> )</p>\n\n<p style=\"margin-left:17%;\">Symmetric cipher tests used\nwith the &quot;KAT_Cipher&quot; type.</p>\n\n<p style=\"margin-left:11%;\">&quot;\n<small>SHA1&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_MD_SHA1</small></b> ) <br>\n&quot; <small>SHA2&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_MD_SHA2</small></b> ) <br>\n&quot; <small>SHA3&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_MD_SHA3</small></b> )</p>\n\n<p style=\"margin-left:17%;\">Digest tests used with the\n&quot;KAT_Digest&quot; type.</p>\n\n<p style=\"margin-left:11%;\">&quot; <small>DSA&quot;</small>\n( <b><small>OSSL_SELF_TEST_DESC_SIGN_DSA</small></b> ) <br>\n&quot; <small>RSA&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_SIGN_RSA</small></b> ) <br>\n&quot; <small>ECDSA&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_SIGN_ECDSA</small></b> )</p>\n\n<p style=\"margin-left:17%;\">Signature tests used with the\n&quot;KAT_Signature&quot; type.</p>\n\n<p style=\"margin-left:11%;\">&quot;\n<small>ECDH&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_KA_ECDH</small></b> ) <br>\n&quot; <small>DH&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_KA_DH</small></b> )</p>\n\n<p style=\"margin-left:17%;\">Key agreement tests used with\nthe &quot; <small>KAT_KA&quot;</small> type.</p>\n\n<p style=\"margin-left:11%;\">&quot;\n<small>HKDF&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_KDF_HKDF</small></b> ) <br>\n&quot; <small>TLS13_KDF_EXTRACT&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_KDF_TLS13_EXTRACT</small></b>\n) <br>\n&quot; <small>TLS13_KDF_EXPAND&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_KDF_TLS13_EXPAND</small></b> )\n<br>\n&quot; <small>SSKDF&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_KDF_SSKDF</small></b> ) <br>\n&quot;X963KDF&quot; (\n<b><small>OSSL_SELF_TEST_DESC_KDF_X963KDF</small></b> ) <br>\n&quot;X942KDF&quot; (\n<b><small>OSSL_SELF_TEST_DESC_KDF_X942KDF</small></b> ) <br>\n&quot; <small>PBKDF2&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_KDF_PBKDF2</small></b> ) <br>\n&quot; <small>SSHKDF&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_KDF_SSHKDF</small></b> ) <br>\n&quot; <small>TLS12_PRF&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_KDF_TLS12_PRF</small></b> )\n<br>\n&quot; <small>KBKDF&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_KDF_KBKDF</small></b> )</p>\n\n<p style=\"margin-left:17%;\">Key Derivation Function tests\nused with the &quot; <small>KAT_KDF&quot;</small> type.</p>\n\n<p style=\"margin-left:11%;\">&quot; <small>CTR&quot;</small>\n( <b><small>OSSL_SELF_TEST_DESC_DRBG_CTR</small></b> ) <br>\n&quot; <small>HASH&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_DRBG_HASH</small></b> ) <br>\n&quot; <small>HMAC&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_DRBG_HMAC</small></b> )</p>\n\n<p style=\"margin-left:17%;\"><small>DRBG</small> tests used\nwith the &quot; <small>DRBG&quot;</small> type.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">= item &quot;\n<small>RNG&quot;</small> (\n<b><small>OSSL_SELF_TEST_DESC_RNG</small></b> )</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">&quot;Continuous_RNG_Test&quot;\nuses this.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">A simple self\ntest callback is shown below for illustrative purposes.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#include\n&lt;openssl/self_test.h&gt; <br>\nstatic OSSL_CALLBACK self_test_cb; <br>\nstatic int self_test_cb(const OSSL_PARAM params[], void\n*arg) <br>\n{ <br>\nint ret = 0; <br>\nconst OSSL_PARAM *p = NULL; <br>\nconst char *phase = NULL, *type = NULL, *desc = NULL; <br>\np = OSSL_PARAM_locate_const(params,\nOSSL_PROV_PARAM_SELF_TEST_PHASE); <br>\nif (p == NULL || p-&gt;data_type != OSSL_PARAM_UTF8_STRING)\n<br>\ngoto err; <br>\nphase = (const char *)p-&gt;data; <br>\np = OSSL_PARAM_locate_const(params,\nOSSL_PROV_PARAM_SELF_TEST_DESC); <br>\nif (p == NULL || p-&gt;data_type != OSSL_PARAM_UTF8_STRING)\n<br>\ngoto err; <br>\ndesc = (const char *)p-&gt;data; <br>\np = OSSL_PARAM_locate_const(params,\nOSSL_PROV_PARAM_SELF_TEST_TYPE); <br>\nif (p == NULL || p-&gt;data_type != OSSL_PARAM_UTF8_STRING)\n<br>\ngoto err; <br>\ntype = (const char *)p-&gt;data; <br>\n/* Do some logging */ <br>\nif (strcmp(phase, OSSL_SELF_TEST_PHASE_START) == 0) <br>\nBIO_printf(bio_out, &quot;%s : (%s) : &quot;, desc, type);\n<br>\nif (strcmp(phase, OSSL_SELF_TEST_PHASE_PASS) == 0 <br>\n|| strcmp(phase, OSSL_SELF_TEST_PHASE_FAIL) == 0) <br>\nBIO_printf(bio_out, &quot;%s\\n&quot;, phase); <br>\n/* Corrupt the SHA1 self test during the 'corrupt' phase by\nreturning 0 */ <br>\nif (strcmp(phase, OSSL_SELF_TEST_PHASE_CORRUPT) == 0 <br>\n&amp;&amp; strcmp(desc, OSSL_SELF_TEST_DESC_MD_SHA1) == 0) {\n<br>\nBIO_printf(bio_out, &quot;%s %s&quot;, phase, desc); <br>\nreturn 0; <br>\n} <br>\nret = 1; <br>\nerr: <br>\nreturn ret; <br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/openssl-fipsinstall\">openssl-fipsinstall(1)</a>,\n<a href=\"https://man.page/5/fips_config\">fips_config(5)</a>,\n<a href=\"https://man.page/3/OSSL_SELF_TEST_set_callback\">OSSL_SELF_TEST_set_callback(3)</a>,\n<a href=\"https://man.page/3/OSSL_SELF_TEST_new\">OSSL_SELF_TEST_new(3)</a>,\n<b><small>OSSL_PARAM</small></b> (3),\n<b>openssl-core.h</b>(7), <b>openssl-core_dispatch.h</b>(7),\n<a href=\"https://man.page/7/provider\">provider(7)</a></p>\n\n<h2>HISTORY\n<a name=\"HISTORY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The type and\nfunctions described here were added in OpenSSL 3.0.</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright\n2019-2021 The OpenSSL Project Authors. All Rights\nReserved.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Licensed under\nthe Apache License 2.0 (the &quot;License&quot;). You may\nnot use this file except in compliance with the License. You\ncan obtain a copy in the file <small>LICENSE</small> in the\nsource distribution or at\n&lt;https://www.openssl.org/source/license.html&gt;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#OPERATIONS AND ALGORITHMS\">OPERATIONS AND ALGORITHMS</a>","<a href=\"#SELF TESTING\">SELF TESTING</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#HISTORY\">HISTORY</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"],"level":7}