{"name":"boot","description":"boot - System bootup process based on UNIX System V Release 4","body":"\n\n<h1 align=\"center\">BOOT</h1>\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">boot - System\nbootup process based on UNIX System V Release 4</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <b>bootup\nprocess</b> (or &quot;<b>boot sequence</b>&quot;) varies in\ndetails among systems, but can be roughly divided into\nphases controlled by the following components:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>1.</p></td>\n<td width=\"3%\"></td>\n<td width=\"65%\">\n\n\n<p>hardware</p></td>\n<td width=\"18%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>2.</p></td>\n<td width=\"3%\"></td>\n<td width=\"65%\">\n\n\n<p>operating system (OS) loader</p></td>\n<td width=\"18%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>3.</p></td>\n<td width=\"3%\"></td>\n<td width=\"65%\">\n\n\n<p>kernel</p></td>\n<td width=\"18%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>4.</p></td>\n<td width=\"3%\"></td>\n<td width=\"65%\">\n\n\n<p>root user-space process (<i>init</i> and\n<i>inittab</i>)</p> </td>\n<td width=\"18%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p>5.</p></td>\n<td width=\"3%\"></td>\n<td width=\"65%\">\n\n\n<p>boot scripts</p></td>\n<td width=\"18%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Each of these\nis described below in more detail.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Hardware</b>\n<br>\nAfter power-on or hard reset, control is given to a program\nstored in read-only memory (normally PROM); for historical\nreasons involving the personal computer, this program is\noften called &quot;the <b>BIOS</b>&quot;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This program\nnormally performs a basic self-test of the machine and\naccesses nonvolatile memory to read further parameters. This\nmemory in the PC is battery-backed CMOS memory, so most\npeople refer to it as &quot;the <b>CMOS</b>&quot;; outside\nof the PC world, it is usually called &quot;the\n<b>NVRAM</b>&quot; (nonvolatile RAM).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The parameters\nstored in the NVRAM vary among systems, but as a minimum,\nthey should specify which device can supply an OS loader, or\nat least which devices may be probed for one; such a device\nis known as &quot;the <b>boot device</b>&quot;. The hardware\nboot stage loads the OS loader from a fixed position on the\nboot device, and then transfers control to it.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p style=\"margin-top: 1em\">Note:</p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">The device from which the OS\nloader is read may be attached via a network, in which case\nthe details of booting are further specified by protocols\nsuch as DHCP, TFTP, PXE, Etherboot, etc.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OS\nloader</b> <br>\nThe main job of the OS loader is to locate the kernel on\nsome device, load it, and run it. Most OS loaders allow\ninteractive use, in order to enable specification of an\nalternative kernel (maybe a backup in case the one last\ncompiled isn&rsquo;t functioning) and to pass optional\nparameters to the kernel.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In a\ntraditional PC, the OS loader is located in the initial\n512-byte block of the boot device; this block is known as\n&quot;the <b>MBR</b>&quot; (Master Boot Record).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In most\nsystems, the OS loader is very limited due to various\nconstraints. Even on non-PC systems, there are some\nlimitations on the size and complexity of this loader, but\nthe size limitation of the PC MBR (512 bytes, including the\npartition table) makes it almost impossible to squeeze much\nfunctionality into it.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Therefore, most\nsystems split the role of loading the OS between a primary\nOS loader and a secondary OS loader; this secondary OS\nloader may be located within a larger portion of persistent\nstorage, such as a disk partition.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In Linux, the\nOS loader is often either <b>lilo</b>(8) or\n<b>grub</b>(8).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Kernel</b>\n<br>\nWhen the kernel is loaded, it initializes various components\nof the computer and operating system; each portion of\nsoftware responsible for such a task is usually consider\n&quot;a <b>driver</b>&quot; for the applicable component.\nThe kernel starts the virtual memory swapper (it is a kernel\nprocess, called &quot;kswapd&quot; in a modern Linux\nkernel), and mounts some filesystem at the root path,\n<i>/</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Some of the\nparameters that may be passed to the kernel relate to these\nactivities (for example, the default root filesystem can be\noverridden); for further information on Linux kernel\nparameters, read <a href=\"https://man.page/7/bootparam\">bootparam(7)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Only then does\nthe kernel create the initial userland process, which is\ngiven the number 1 as its <b>PID</b> (process ID).\nTraditionally, this process executes the program\n<i>/sbin/init</i>, to which are passed the parameters that\nhaven&rsquo;t already been handled by the kernel.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Root\nuser-space process</b></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p style=\"margin-top: 1em\">Note:</p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">The following description\napplies to an OS based on UNIX System V Release 4. However,\na number of widely used systems have adopted a related but\nfundamentally different approach known as <a href=\"https://man.page/1/systemd\">systemd(1)</a>,\nfor which the bootup process is detailed in its associated\n<a href=\"https://man.page/7/bootup\">bootup(7)</a>.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When\n<i>/sbin/init</i> starts, it reads <i>/etc/inittab</i> for\nfurther instructions. This file defines what should be run\nwhen the <i>/sbin/init</i> program is instructed to enter a\nparticular <i>run-level</i>, giving the administrator an\neasy way to establish an environment for some usage; each\nrun-level is associated with a set of services (for example,\nrun-level <b>S</b> is <i>single-user</i> mode, and run-level\n<b>2</b> entails running most network services).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nadministrator may change the current run-level via\n<a href=\"https://man.page/1/init\">init(1)</a>, and query the current run-level via\n<b>runlevel</b>(8).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">However, since\nit is not convenient to manage individual services by\nediting this file, <i>/etc/inittab</i> only bootstraps a set\nof scripts that actually start/stop the individual\nservices.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Boot\nscripts</b></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p style=\"margin-top: 1em\">Note:</p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">The following description\napplies to an OS based on UNIX System V Release 4. However,\na number of widely used systems (Slackware Linux, FreeBSD,\nOpenBSD) have a somewhat different scheme for boot\nscripts.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For each\nmanaged service (mail, nfs server, cron, etc.), there is a\nsingle startup script located in a specific directory\n(<i>/etc/init.d</i> in most versions of Linux). Each of\nthese scripts accepts as a single argument the word\n&quot;start&quot; (causing it to start the service) or the\nword &quot;stop&quot; (causing it to stop the service). The\nscript may optionally accept other &quot;convenience&quot;\nparameters (e.g., &quot;restart&quot; to stop and then\nstart, &quot;status&quot; to display the service status,\netc.). Running the script without parameters displays the\npossible arguments.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Sequencing\ndirectories</b> <br>\nTo make specific scripts start/stop at specific run-levels\nand in a specific order, there are <i>sequencing\ndirectories</i>, normally of the form\n<i>/etc/rc[0-6S].d</i>. In each of these directories, there\nare links (usually symbolic) to the scripts in the\n<i>/etc/init.d</i> directory.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A primary\nscript (usually <i>/etc/rc</i>) is called from\n<a href=\"https://man.page/5/inittab\">inittab(5)</a>; this primary script calls each\nservice&rsquo;s script via a link in the relevant sequencing\ndirectory. Each link whose name begins with 'S' is called\nwith the argument &quot;start&quot; (thereby starting the\nservice). Each link whose name begins with 'K' is called\nwith the argument &quot;stop&quot; (thereby stopping the\nservice).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To define the\nstarting or stopping order within the same run-level, the\nname of a link contains an <b>order-number</b>. Also, for\nclarity, the name of a link usually ends with the name of\nthe service to which it refers. For example, the link\n<i>/etc/rc2.d/S80sendmail</i> starts the sendmail service on\nrunlevel 2. This happens after <i>/etc/rc2.d/S12syslog</i>\nis run but before <i>/etc/rc2.d/S90xfs</i> is run.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To manage these\nlinks is to manage the boot order and run-levels; under many\nsystems, there are tools to help with this task (e.g.,\n<b>chkconfig</b>(8)).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Boot\nconfiguration</b> <br>\nA program that provides a service is often called a\n&quot;<b>daemon</b>&quot;. Usually, a daemon may receive\nvarious command-line options and parameters. To allow a\nsystem administrator to change these inputs without editing\nan entire boot script, some separate configuration file is\nused, and is located in a specific directory where an\nassociated boot script may find it (<i>/etc/sysconfig</i> on\nolder Red Hat systems).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In older UNIX\nsystems, such a file contained the actual command line\noptions for a daemon, but in modern Linux systems (and also\nin HP-UX), it just contains shell variables. A boot script\nin <i>/etc/init.d</i> reads and includes its configuration\nfile (that is, it &quot;<b>sources</b>&quot; its\nconfiguration file) and then uses the variable values.</p>\n\n<h2>FILES\n<a name=\"FILES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>/etc/init.d/</i>,\n<i>/etc/rc[S0-6].d/</i>, <i>/etc/sysconfig/</i></p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i><b>init</b></i>(1),\n<a href=\"https://man.page/1/systemd\">systemd(1)</a>, <a href=\"https://man.page/5/inittab\">inittab(5)</a>, <a href=\"https://man.page/7/bootparam\">bootparam(7)</a>,\n<a href=\"https://man.page/7/bootup\">bootup(7)</a>, <b>runlevel</b>(8), <b>shutdown</b>(8)</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#FILES\">FILES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":7}