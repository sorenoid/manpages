{"name":"groff_diff","description":"groff_diff - differences between GNU troff and classical troff","body":"\n\n<h1 align=\"center\">GROFF_DIFF</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">groff_diff -\ndifferences between GNU troff and classical troff</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This manual\npage describes the language differences between\n<i>groff</i>, the GNU <i>roff</i> text processing system,\nand the classical <i>roff</i> formatter of the freely\navailable Unix&nbsp;7 of the 1970s, documented in the\n<i>Troff User&rsquo;s Manual</i> by <i>Ossanna</i> and\n<i>Kernighan</i>. This includes the roff language as well as\nthe intermediate output format (troff output).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Section\n&ldquo;See Also&rdquo; below gives pointers to both the\nclassical <i>roff</i> and the modern <i>groff</i>\ndocumentation.</p>\n\n<h2>GROFF LANGUAGE\n<a name=\"GROFF LANGUAGE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">In this\nsection, all additional features of <i>groff</i> compared to\nthe classical Unix&nbsp;7 <i>troff</i> are described in\ndetail.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Long\nnames</b> <br>\nThe names of number registers, fonts,\nstrings/macros/diversions, special characters (glyphs), and\ncolors can be of any length. In escape sequences,\nadditionally to the classical\n&rsquo;<b>(</b><i>xx</i>&rsquo; construction for a\ntwo-character glyph name, you can use\n&rsquo;<b>[</b><i>xxx</i><b>]</b>&rsquo; for a name of\narbitrary length.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\[</b><i>xxx</i><b>]</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"72%\">\n\n\n<p>Print the special character (glyph) called\n<i>xxx</i>.</p> </td>\n<td width=\"6%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>\\[</b><i>comp1 comp2\n...</i><b>]</b></p>\n\n<p style=\"margin-left:22%;\">Print composite glyph\nconsisting of multiple components. Example:\n&rsquo;\\[A&nbsp;ho]&rsquo; is capital letter A with ogonek\nwhich finally maps to glyph name &rsquo;u0041_0328&rsquo;.\nSee <i>Groff: The GNU Implementation of troff</i>, the\n<i>groff</i> Texinfo manual, for details of how a glyph name\nfor a composite glyph is constructed, and\n<a href=\"https://man.page/7/groff_char\">groff_char(7)</a> for a list of glyph name components\nused in composite glyph names.</p>\n\n\n<p style=\"margin-left:11%;\"><b>\\f[</b><i>xxx</i><b>]</b></p>\n\n<p style=\"margin-left:22%;\">Set font <i>xxx</i>.\nAdditionally, <b>\\f[]</b> is a new syntax form equal to\n<b>\\fP</b>, i.e., to return to the previous font.</p>\n\n<p style=\"margin-left:11%;\"><b>\\*[</b><i>xxx arg1 arg2\n...</i><b>]</b></p>\n\n<p style=\"margin-left:22%;\">Interpolate string <i>xxx</i>,\ntaking <i>arg1</i>, <i>arg2</i>, <i>...</i>, as\narguments.</p>\n\n\n<p style=\"margin-left:11%;\"><b>\\n[</b><i>xxx</i><b>]</b></p>\n\n<p style=\"margin-left:22%;\">Interpolate number register\n<i>xxx</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Fractional\npoint sizes</b> <br>\nA <i>scaled point</i> is equal to <b>1/sizescale</b> points,\nwhere <b>sizescale</b> is specified in the <i>DESC</i> file\n(1 by default). There is a new scale indicator&nbsp;<b>z</b>\nthat has the effect of multiplying by sizescale. Requests\nand escape sequences in troff interpret arguments that\nrepresent a point size as being in units of scaled points,\nbut they evaluate each such argument using a default scale\nindicator of&nbsp;<b>z</b>. Arguments treated in this way\nare the argument to the <b>ps</b> request, the third\nargument to the <b>cs</b> request, the second and fourth\narguments to the <b>tkf</b> request, the argument to the\n<b>\\H</b> escape sequence, and those variants of the\n<b>\\s</b> escape sequence that take a numeric expression as\ntheir argument.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For example,\nsuppose sizescale is 1000; then a scaled point is equivalent\nto a millipoint; the call <b>.ps&nbsp;10.25</b> is\nequivalent to <b>.ps&nbsp;10.25z</b> and so sets the point\nsize to 10250 scaled points, which is equal to 10.25\npoints.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The number\nregister <b>\\n[.s]</b> returns the point size in points as\ndecimal fraction. There is also a new number register\n<b>\\n[.ps]</b> that returns the point size in scaled\npoints.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It would make\nno sense to use the <b>z&nbsp;</b>scale indicator in a\nnumeric expression whose default scale indicator was neither\n<b>u</b> nor&nbsp;<b>z</b>, and so <b>troff</b> disallows\nthis. Similarly it would make no sense to use a scaling\nindicator other than <b>z</b> or&nbsp;<b>u</b> in a numeric\nexpression whose default scale indicator was&nbsp;<b>z</b>,\nand so <b>troff</b> disallows this as well.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">There is also\nnew scale indicator&nbsp;<b>s</b> which multiplies by the\nnumber of units in a scaled point. So, for example,\n<b>\\n[.ps]s</b> is equal to <b>1m</b>. Be sure not to\nconfuse the <b>s</b> and <b>z&nbsp;</b>scale indicators.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Numeric\nexpressions</b> <br>\nSpaces are permitted in a number expression within\nparentheses.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>M</b>\nindicates a scale of 100ths of an em. <b>f</b> indicates a\nscale of 65536 units, providing fractions for color\ndefinitions with the <b>defcolor</b> request. For example,\n0.5f = 32768u.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><i>e1</i><b>&gt;?</b><i>e2</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The maximum of <i>e1</i> and <i>e2</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><i>e1</i><b>&lt;?</b><i>e2</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The minimum of <i>e1</i> and <i>e2</i>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>(</b><i>c</i><b>;</b><i>e</i><b>)</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Evaluate <i>e</i> using <i>c</i> as the default scaling\nindicator. If <i>c</i> is missing, ignore scaling indicators\nin the evaluation of&nbsp;<i>e</i>.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>New escape\nsequences <br>\n\\A&rsquo;</b><i>anything</i><b>&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">This expands to <b>1</b>\nor&nbsp;<b>0</b>, depending on whether <i>anything</i> is or\nis not acceptable as the name of a string, macro, diversion,\nnumber register, environment, font, or color. It\nreturns&nbsp;<b>0</b> if <i>anything</i> is empty. This is\nuseful if you want to look up user input in some sort of\nassociative table.</p>\n\n\n<p style=\"margin-left:11%;\"><b>\\B&rsquo;</b><i>anything</i><b>&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">This expands to <b>1</b>\nor&nbsp;<b>0</b>, depending on whether <i>anything</i> is or\nis not a valid numeric expression. It returns&nbsp;<b>0</b>\nif <i>anything</i> is empty.</p>\n\n\n<p style=\"margin-left:11%;\"><b>\\C&rsquo;</b><i>xxx</i><b>&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">Typeset glyph named <i>xxx</i>.\nNormally it is more convenient to use\n<b>\\[</b><i>xxx</i><b>]</b>. But <b>\\C</b> has the advantage\nthat it is compatible with recent versions of Unix and is\navailable in compatibility mode.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>\\E</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>This is equivalent to an escape character, but it is not\ninterpreted in copy mode. For example, strings to start and\nend superscripting could be defined like this</p></td></tr>\n</table>\n\n<p style=\"margin-left:32%; margin-top: 1em\">.ds {\n\\v&rsquo;-.3m&rsquo;\\s&rsquo;\\En[.s]*6u/10u&rsquo; <br>\n.ds } \\s0\\v&rsquo;.3m&rsquo;</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The use of\n<b>\\E</b> ensures that these definitions work even if\n<b>\\*{</b> gets interpreted in copy mode (for example, by\nbeing used in a macro argument).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p style=\"margin-top: 1em\"><b>\\F</b><i>f</i></p></td>\n<td width=\"82%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>\\F(</b><i>fm</i></p></td>\n<td width=\"82%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>\\F[</b><i>fam</i><b>]</b></p>\n\n<p style=\"margin-left:22%;\">Change font family. This is the\nsame as the <b>fam</b> request. <b>\\F[]</b> switches back to\nthe previous font family (note that <b>\\FP</b> won&rsquo;t\nwork; it selects font family &rsquo;P&rsquo; instead).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>\\m</b><i>x</i></p></td>\n<td width=\"82%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>\\m(</b><i>xx</i></p></td>\n<td width=\"82%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>\\m[</b><i>xxx</i><b>]</b></p>\n\n<p style=\"margin-left:22%;\">Set drawing color. <b>\\m[]</b>\nswitches back to the previous color.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>\\M</b><i>x</i></p></td>\n<td width=\"82%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>\\M(</b><i>xx</i></p></td>\n<td width=\"82%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>\\M[</b><i>xxx</i><b>]</b></p>\n\n<p style=\"margin-left:22%;\">Set background color for filled\nobjects drawn with the\n<b>\\D&rsquo;</b><i>...</i><b>&rsquo;</b> commands.\n<b>\\M[]</b> switches back to the previous color.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>\\N&rsquo;</b><i>n</i><b>&rsquo;</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>Typeset the glyph with index&nbsp;<i>n</i> in the\ncurrent font. <i>n&nbsp;</i>can be any integer. Most devices\nonly have glyphs with indices between 0 and 255. If the\ncurrent font does not contain a glyph with that code,\nspecial fonts are <i>not</i> searched. The <b>\\N</b> escape\nsequence can be conveniently used in conjunction with the\n<b>char</b> request, for example</p></td></tr>\n</table>\n\n<p style=\"margin-left:32%; margin-top: 1em\">.char \\[phone]\n\\f(ZD\\N&rsquo;37&rsquo;</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The index of\neach glyph is given in the fourth column in the font\ndescription file after the <b>charset</b> command. It is\npossible to include unnamed glyphs in the font description\nfile by using a name of <b>---</b>; the <b>\\N</b> escape\nsequence is the only way to use these.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p style=\"margin-top: 1em\"><b>\\O</b><i>n</i></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>\\O[</b><i>n</i><b>]</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>Suppress troff output. The escapes <b>\\O2</b>,\n<b>\\O3</b>, <b>\\O4</b>, and <b>\\O5</b> are intended for\ninternal use by <b>grohtml</b>.</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%;\"><b>\\O0</b></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\"></td>\n<td width=\"6%\"></td>\n<td width=\"68%\">\n\n\n<p style=\"margin-top: 1em\">Disable any ditroff glyphs from\nbeing emitted to the device driver, provided that the escape\noccurs at the outer level (see <b>\\O3</b> and\n<b>\\O4</b>).</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p><b>\\O1</b></p></td>\n<td width=\"6%\"></td>\n<td width=\"68%\">\n\n\n<p>Enable output of glyphs, provided that the escape occurs\nat the outer level.</p></td></tr>\n</table>\n\n<p style=\"margin-left:32%; margin-top: 1em\"><b>\\O0</b> and\n<b>\\O1</b> also reset the registers <b>\\n[opminx]</b>,\n<b>\\n[opminy]</b>, <b>\\n[opmaxx]</b>, and <b>\\n[opmaxy]</b>\nto&nbsp;-1. These four registers mark the top left and\nbottom right hand corners of a box which encompasses all\nwritten glyphs.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p style=\"margin-top: 1em\"><b>\\O2</b></p></td>\n<td width=\"6%\"></td>\n<td width=\"68%\">\n\n\n<p style=\"margin-top: 1em\">Provided that the escape occurs\nat the outer level, enable output of glyphs and also write\nout to stderr the page number and four registers\nencompassing the glyphs previously written since the last\ncall to <b>\\O</b>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p><b>\\O3</b></p></td>\n<td width=\"6%\"></td>\n<td width=\"68%\">\n\n\n<p>Begin a nesting level. At start-up, <b>troff</b> is at\nouter level. This is really an internal mechanism for\n<b>grohtml</b> while producing images. They are generated by\nrunning the troff source through <b>troff</b> to the\nPostScript device and <b>ghostscript</b> to produce images\nin PNG format. The <b>\\O3</b> escape starts a new page if\nthe device is not html (to reduce the possibility of images\ncrossing a page boundary).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p><b>\\O4</b></p></td>\n<td width=\"6%\"></td>\n<td width=\"68%\">\n\n\n<p>End a nesting level.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:22%;\"><b>\\O5[</b><i>Pfilename</i><b>]</b></p>\n\n<p style=\"margin-left:32%;\">This escape is <b>grohtml</b>\nspecific. Provided that this escape occurs at the outer\nnesting level, write <i>filename</i> to stderr. The position\nof the image, <i>P</i>, must be specified and must be one of\n<b>l</b>, <b>r</b>, <b>c</b>, or <b>i</b> (left, right,\ncentered, inline). <i>filename</i> is associated with the\nproduction of the next inline image.</p>\n\n\n<p style=\"margin-left:11%;\"><b>\\R&rsquo;</b><i>name&nbsp;&plusmn;n</i><b>&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">This has the same effect as</p>\n\n\n<p style=\"margin-left:32%; margin-top: 1em\"><b>.nr&nbsp;</b><i>name&nbsp;&plusmn;n</i></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\s(</b><i>nn</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\s&plusmn;(</b><i>nn</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Set the point size to <i>nn</i> points; <i>nn</i> must\nbe exactly two digits.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\s[&plusmn;</b><i>n</i><b>]</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\s&plusmn;[</b><i>n</i><b>]</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\s&rsquo;&plusmn;</b><i>n</i><b>&rsquo;</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\s&plusmn;&rsquo;</b><i>n</i><b>&rsquo;</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Set the point size to <i>n</i> scaled points; <i>n</i>\nis a numeric expression with a default scale indicator\nof&nbsp;<b>z</b>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\V</b><i>x</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\V(</b><i>xx</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>\\V[</b><i>xxx</i><b>]</b></p>\n\n<p style=\"margin-left:22%;\">Interpolate the contents of the\nenvironment variable <i>xxx</i>, as returned by\n<a href=\"https://man.page/3/getenv\">getenv(3)</a>. <b>\\V</b> is interpreted in copy mode.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>\\Y</b><i>x</i></p></td>\n<td width=\"82%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>\\Y(</b><i>xx</i></p></td>\n<td width=\"82%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>\\Y[</b><i>xxx</i><b>]</b></p>\n\n<p style=\"margin-left:22%;\">This is approximately\nequivalent to <b>\\X&rsquo;\\*[</b><i>xxx</i><b>]&rsquo;</b>.\nHowever the contents of the string or macro <i>xxx</i> are\nnot interpreted; also it is permitted for <i>xxx</i> to have\nbeen defined as a macro and thus contain newlines (it is not\npermitted for the argument to <b>\\X</b> to contain\nnewlines). The inclusion of newlines requires an extension\nto the Unix troff output format, and confuses drivers that\ndo not know about this extension.</p>\n\n\n<p style=\"margin-left:11%;\"><b>\\Z&rsquo;</b><i>anything</i><b>&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">Print anything and then restore\nthe horizontal and vertical position; <i>anything</i> may\nnot contain tabs or leaders.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>\\$0</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>The name by which the current macro was invoked. The\n<b>als</b> request can make a macro have more than one\nname.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>\\$*</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>In a macro or string, the concatenation of all the\narguments separated by spaces.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>\\$@</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>In a macro or string, the concatenation of all the\narguments with each surrounded by double quotes, and\nseparated by spaces.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>\\$^</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>In a macro, the representation of all parameters as if\nthey were an argument to the <b>ds</b> request.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>\\$(</b><i>nn</i></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>\\$[</b><i>nnn</i><b>]</b></p>\n\n<p style=\"margin-left:22%;\">In a macro or string, this\ngives the <i>nn</i>-th or <i>nnn</i>-th argument. Macros and\nstrings can have an unlimited number of arguments.</p>\n\n\n<p style=\"margin-left:11%;\"><b>\\?</b><i>anything</i><b>\\?</b></p>\n\n<p style=\"margin-left:22%;\">When used in a diversion, this\ntransparently embeds <i>anything</i> in the diversion.\n<i>anything</i> is read in copy mode. When the diversion is\nreread, <i>anything</i> is interpreted. <i>anything</i> may\nnot contain newlines; use <b>\\!</b> if you want to embed\nnewlines in a diversion. The escape sequence <b>\\?</b> is\nalso recognized in copy mode and turned into a single\ninternal code; it is this code that terminates\n<i>anything</i>. Thus</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">.nr x 1 <br>\n.nf <br>\n.di d <br>\n\\?\\\\?\\\\\\\\?\\\\\\\\\\\\\\\\nx\\\\\\\\?\\\\?\\? <br>\n.di <br>\n.nr x 2 <br>\n.di e <br>\n.d <br>\n.di <br>\n.nr x 3 <br>\n.di f <br>\n.e <br>\n.di <br>\n.nr x 4 <br>\n.f</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\">prints&nbsp;<b>4</b>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>\\/</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>This increases the width of the preceding glyph so that\nthe spacing between that glyph and the following glyph is\ncorrect if the following glyph is a roman glyph. It is a\ngood idea to use this escape sequence whenever an italic\nglyph is immediately followed by a roman glyph without any\nintervening space.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>\\,</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>This modifies the spacing of the following glyph so that\nthe spacing between that glyph and the preceding glyph is\ncorrect if the preceding glyph is a roman glyph. It is a\ngood idea to use this escape sequence whenever a roman glyph\nis immediately followed by an italic glyph without any\nintervening space.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>\\)</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>Like <b>\\&amp;</b> except that it behaves like a\ncharacter declared with the <b>cflags</b> request to be\ntransparent for the purposes of end-of-sentence\nrecognition.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>\\~</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>This produces an unbreakable space that stretches like a\nnormal inter-word space when a line is adjusted.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>\\:</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>This causes the insertion of a zero-width break point.\nIt is equal to <b>\\%</b> within a word but without insertion\nof a soft hyphen glyph.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>\\#</b></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p>Everything up to and including the next newline is\nignored. This is interpreted in copy mode. It is like\n<b>\\&quot;</b> except that <b>\\&quot;</b> does not ignore\nthe terminating newline.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>New requests\n<br>\n.aln&nbsp;</b><i>xx&nbsp;yy</i></p>\n\n<p style=\"margin-left:22%;\">Create an alias <i>xx</i> for\nnumber register object named <i>yy</i>. The new name and the\nold name are exactly equivalent. If <i>yy</i> is undefined,\na warning of type <b>reg</b> is generated, and the request\nis ignored.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.als&nbsp;</b><i>xx&nbsp;yy</i></p>\n\n<p style=\"margin-left:22%;\">Create an alias <i>xx</i> for\nrequest, string, macro, or diversion object named <i>yy</i>.\nThe new name and the old name are exactly equivalent (it is\nsimilar to a hard rather than a soft link). If <i>yy</i> is\nundefined, a warning of type <b>mac</b> is generated, and\nthe request is ignored. The <b>de</b>, <b>am</b>, <b>di</b>,\n<b>da</b>, <b>ds</b>, and <b>as</b> requests only create a\nnew object if the name of the macro, diversion or string is\ncurrently undefined or if it is defined to be a request;\nnormally they modify the value of an existing object.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.am1&nbsp;</b><i>xx&nbsp;yy</i></p>\n\n<p style=\"margin-left:22%;\">Similar to <b>.am</b>, but\ncompatibility mode is switched off during execution. To be\nmore precise, a &rsquo;compatibility save&rsquo; token is\ninserted at the beginning of the macro addition, and a\n&rsquo;compatibility restore&rsquo; token at the end. As a\nconsequence, the requests <b>am</b>, <b>am1</b>, <b>de</b>,\nand <b>de1</b> can be intermixed freely since the\ncompatibility save/restore tokens only affect the macro\nparts defined by <b>.am1</b> and <b>.ds1</b>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.ami&nbsp;</b><i>xx&nbsp;yy</i></p>\n\n<p style=\"margin-left:22%;\">Append to macro indirectly. See\nthe <b>dei</b> request below for more information.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.ami1&nbsp;</b><i>xx&nbsp;yy</i></p>\n\n<p style=\"margin-left:22%;\">Same as the <b>ami</b> request\nbut compatibility mode is switched off during execution.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.as1&nbsp;</b><i>xx&nbsp;yy</i></p>\n\n<p style=\"margin-left:22%;\">Similar to <b>.as</b>, but\ncompatibility mode is switched off during expansion. To be\nmore precise, a &rsquo;compatibility save&rsquo; token is\ninserted at the beginning of the string, and a\n&rsquo;compatibility restore&rsquo; token at the end. As a\nconsequence, the requests <b>as</b>, <b>as1</b>, <b>ds</b>,\nand <b>ds1</b> can be intermixed freely since the\ncompatibility save/restore tokens only affect the\n(sub)strings defined by <b>as1</b> and <b>ds1</b>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.asciify&nbsp;</b><i>xx</i></p>\n\n<p style=\"margin-left:22%;\">This request\n&rsquo;unformats&rsquo; the diversion <i>xx</i> in such a\nway that ASCII and space characters (and some escape\nsequences) that were formatted and diverted into <i>xx</i>\nare treated like ordinary input characters when <i>xx</i> is\nreread. Useful for diversions in conjunction with the\n<b>writem</b> request. It can be also used for gross hacks;\nfor example, this</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">.tr @. <br>\n.di x <br>\n@nr n 1 <br>\n.br <br>\n.di <br>\n.tr @@ <br>\n.asciify x <br>\n.x</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">sets\nregister&nbsp;<b>n</b> to&nbsp;1. Note that glyph\ninformation (font, font size, etc.) is not preserved; use\n<b>.unformat</b> instead.</p>\n\n<p style=\"margin-left:11%;\"><b>.backtrace</b></p>\n\n<p style=\"margin-left:22%;\">Print a backtrace of the input\nstack on stderr.</p>\n\n<p style=\"margin-left:11%;\"><b>.blm&nbsp;</b><i>xx</i></p>\n\n<p style=\"margin-left:22%;\">Set the blank line macro to\n<i>xx</i>. If there is a blank line macro, it is invoked\nwhen a blank line is encountered instead of the usual troff\nbehaviour.</p>\n\n<p style=\"margin-left:11%;\"><b>.box&nbsp;</b><i>xx</i>\n<b><br>\n.boxa&nbsp;</b><i>xx</i></p>\n\n<p style=\"margin-left:22%;\">These requests are similar to\nthe <b>di</b> and <b>da</b> requests with the exception that\na partially filled line does not become part of the\ndiversion (i.e., the diversion always starts with a new\nline) but is restored after ending the diversion, discarding\nthe partially filled line which possibly comes from the\ndiversion.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>.break</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Break out of a while loop. See also the <b>while</b> and\n<b>continue</b> requests. Be sure not to confuse this with\nthe <b>br</b> request.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>.brp</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>This is the same as <b>\\p</b>.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>.cflags&nbsp;</b><i>n c1 c2\n...</i></p>\n\n<p style=\"margin-left:22%;\">Characters <i>c1</i>,\n<i>c2</i>, <i>...</i>, have properties determined by\n<i>n</i>, which is ORed from the following:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>1</p></td>\n<td width=\"6%\"></td>\n<td width=\"68%\">\n\n\n<p>The character ends sentences (initially characters\n<b>.?!</b> have this property).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>2</p></td>\n<td width=\"6%\"></td>\n<td width=\"68%\">\n\n\n<p>Lines can be broken before the character (initially no\ncharacters have this property); a line is not broken at a\ncharacter with this property unless the characters on each\nside both have non-zero hyphenation codes. This can be\noverridden with value 64.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>4</p></td>\n<td width=\"6%\"></td>\n<td width=\"68%\">\n\n\n<p>Lines can be broken after the character (initially\ncharacters <b>-\\[hy]\\[em]</b> have this property); a line is\nnot broken at a character with this property unless the\ncharacters on each side both have non-zero hyphenation\ncodes. This can be overridden with value 64.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>8</p></td>\n<td width=\"6%\"></td>\n<td width=\"68%\">\n\n\n<p>The glyph associated with this character overlaps\nhorizontally (initially characters\n<b>\\[ul]\\[rn]\\[ru]\\[radicalex]\\[sqrtex]</b> have this\nproperty).</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>16</p></td>\n<td width=\"6%\"></td>\n<td width=\"68%\">\n\n\n<p>The glyph associated with this character overlaps\nvertically (initially glyph <b>\\[br]</b> has this\nproperty).</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>32</p></td>\n<td width=\"6%\"></td>\n<td width=\"68%\">\n\n\n<p>An end-of-sentence character followed by any number of\ncharacters with this property is treated as the end of a\nsentence if followed by a newline or two spaces; in other\nwords the character is transparent for the purposes of\nend-of-sentence recognition; this is the same as having a\nzero space factor in TeX (initially characters\n<b>&quot;&rsquo;)]*\\[dg]\\[rq]\\[cq]</b> have this\nproperty).</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>64</p></td>\n<td width=\"6%\"></td>\n<td width=\"68%\">\n\n\n<p>Ignore hyphenation code values of the surrounding\ncharacters. Use this in combination with values 2 and&nbsp;4\n(initially no characters have this property).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>128</p></td>\n<td width=\"6%\"></td>\n<td width=\"68%\">\n\n\n<p>Prohibit a line break before the character, but allow a\nline break after the character. This works only in\ncombination with flags 256 and 512 and has no effect\notherwise.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>256</p></td>\n<td width=\"6%\"></td>\n<td width=\"68%\">\n\n\n<p>Prohibit a line break after the character, but allow a\nline break before the character. This works only in\ncombination with flags 128 and 512 and has no effect\notherwise.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"4%\">\n\n\n<p>512</p></td>\n<td width=\"6%\"></td>\n<td width=\"68%\">\n\n\n<p>Allow line break before or after the character. This\nworks only in combination with flags 128 and 256 and has no\neffect otherwise.</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Contrary to\nflag values 2 and&nbsp;4, the flags 128, 256, and 512 work\npairwise. If, for example, the left character has value 512,\nand the right character 128, no line break gets inserted. If\nwe use value&nbsp;6 instead for the left character, a line\nbreak after the character can&rsquo;t be suppressed since\nthe right neighbour character doesn&rsquo;t get\nexamined.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.char&nbsp;</b><i>c&nbsp;string</i></p>\n\n<p style=\"margin-left:22%;\">[This request can both define\ncharacters and glyphs.]</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Define\nentity&nbsp;<i>c</i> to be <i>string</i>. To be more\nprecise, define (or even override) a groff entity which can\nbe accessed with name&nbsp;<i>c</i> on the input side, and\nwhich uses <i>string</i> on the output side. Every time\nglyph&nbsp;<i>c</i> needs to be printed, <i>string</i> is\nprocessed in a temporary environment and the result is\nwrapped up into a single object. Compatibility mode is\nturned off and the escape character is set to&nbsp;<b>\\</b>\nwhile <i>string</i> is being processed. Any emboldening,\nconstant spacing or track kerning is applied to this object\nrather than to individual glyphs in <i>string</i>.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">A groff object\ndefined by this request can be used just like a normal glyph\nprovided by the output device. In particular other\ncharacters can be translated to it with the <b>tr</b>\nrequest; it can be made the leader glyph by the <b>lc</b>\nrequest; repeated patterns can be drawn with the glyph using\nthe <b>\\l</b> and <b>\\L</b> escape sequences; words\ncontaining&nbsp;<i>c</i> can be hyphenated correctly, if the\n<b>hcode</b> request is used to give the object a\nhyphenation code.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">There is a\nspecial anti-recursion feature: Use of glyph within the\nglyph&rsquo;s definition is handled like normal glyphs not\ndefined with <b>char</b>.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">A glyph\ndefinition can be removed with the <b>rchar</b> request.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.chop&nbsp;</b><i>xx</i></p>\n\n<p style=\"margin-left:22%;\">Chop the last element off\nmacro, string, or diversion <i>xx</i>. This is useful for\nremoving the newline from the end of diversions that are to\nbe interpolated as strings.</p>\n\n<p style=\"margin-left:11%;\"><b>.class&nbsp;</b><i>name c1\nc2 ...</i></p>\n\n<p style=\"margin-left:22%;\">Assign <i>name</i> to a set of\ncharacters <i>c1</i>, <i>c2</i>, <i>...</i>, so that they\ncan be referred to from other requests easily (currently\n<b>.cflags</b> only). Character ranges (indicated by an\nintermediate &rsquo;-&rsquo;) and nested classes are\npossible also. This is useful to assign properties to a\nlarge set of characters.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.close&nbsp;</b><i>stream</i></p>\n\n<p style=\"margin-left:22%;\">Close the stream named\n<i>stream</i>; <i>stream</i> will no longer be an acceptable\nargument to the <b>write</b> request. See the <b>open</b>\nrequest.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.composite&nbsp;</b><i>glyph1&nbsp;glyph2</i></p>\n\n<p style=\"margin-left:22%;\">Map glyph name <i>glyph1</i> to\nglyph name <i>glyph2</i> if it is used in\n<b>\\[</b><i>...</i><b>]</b> with more than one\ncomponent.</p>\n\n<p style=\"margin-left:11%;\"><b>.continue</b></p>\n\n<p style=\"margin-left:22%;\">Finish the current iteration of\na while loop. See also the <b>while</b> and <b>break</b>\nrequests.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.color&nbsp;</b><i>n</i></p>\n\n<p style=\"margin-left:22%;\">If <i>n</i> is non-zero or\nmissing, enable colors (this is the default), otherwise\ndisable them.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>.cp&nbsp;</b><i>n</i></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>If <i>n</i> is non-zero or missing, enable compatibility\nmode, otherwise disable it. In compatibility mode, long\nnames are not recognized, and the incompatibilities caused\nby long names do not arise.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>.defcolor&nbsp;</b><i>xxx&nbsp;scheme&nbsp;color_components</i></p>\n\n<p style=\"margin-left:22%;\">Define color <i>xxx</i>.\n<i>scheme</i> can be one of the following values: <b>rgb</b>\n(three components), <b>cmy</b> (three components),\n<b>cmyk</b> (four components), and <b>gray</b> or\n<b>grey</b> (one component). Color components can be given\neither as a hexadecimal string or as positive decimal\nintegers in the range 0&ndash;65535. A hexadecimal string\ncontains all color components concatenated; it must start\nwith either <b>#</b> or <b>##</b>. The former specifies hex\nvalues in the range 0&ndash;255 (which are internally\nmultiplied by&nbsp;257), the latter in the range\n0&ndash;65535. Examples: #FFC0CB (pink), ##ffff0000ffff\n(magenta). A new scaling indicator&nbsp;<b>f</b> has been\nintroduced which multiplies its value by&nbsp;65536; this\nmakes it convenient to specify color components as fractions\nin the range 0 to&nbsp;1. Example:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">.defcolor\ndarkgreen rgb 0.1f 0.5f 0.2f</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Note that\n<b>f</b> is the default scaling indicator for the\n<b>defcolor</b> request, thus the above statement is\nequivalent to</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">.defcolor\ndarkgreen rgb 0.1 0.5 0.2</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The color named\n<b>default</b> (which is device-specific) can&rsquo;t be\nredefined. It is possible that the default color for\n<b>\\M</b> and <b>\\m</b> is not the same.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.de1&nbsp;</b><i>xx&nbsp;yy</i></p>\n\n<p style=\"margin-left:22%;\">Similar to <b>.de</b>, but\ncompatibility mode is switched off during execution. On\nentry, the current compatibility mode is saved and restored\nat exit.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.dei&nbsp;</b><i>xx&nbsp;yy</i></p>\n\n<p style=\"margin-left:22%;\">Define macro indirectly. The\nfollowing example</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">.ds xx aa <br>\n.ds yy bb <br>\n.dei xx yy</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">is equivalent\nto</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">.de aa bb</p>\n\n\n<p style=\"margin-left:11%;\"><b>.dei1&nbsp;</b><i>xx&nbsp;yy</i></p>\n\n<p style=\"margin-left:22%;\">Similar to the <b>dei</b>\nrequest but compatibility mode is switched off during\nexecution.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.device&nbsp;</b><i>anything</i></p>\n\n<p style=\"margin-left:22%;\">This is (almost) the same as\nthe <b>\\X</b> escape. <i>anything</i> is read in copy mode;\na leading&nbsp;<b>&quot;</b> is stripped.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.devicem&nbsp;</b><i>xx</i></p>\n\n<p style=\"margin-left:22%;\">This is the same as the\n<b>\\Y</b> escape (to embed the contents of a macro into the\nintermediate output preceded with\n&rsquo;x&nbsp;X&rsquo;).</p>\n\n<p style=\"margin-left:11%;\"><b>.do&nbsp;</b><i>xxx</i></p>\n\n<p style=\"margin-left:22%;\">Interpret <i>.xxx</i> with\ncompatibility mode disabled. For example,</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">.do fam T</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">would have the\nsame effect as</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">.fam T</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">except that it\nwould work even if compatibility mode had been enabled. Note\nthat the previous compatibility mode is restored before any\nfiles sourced by <i>xxx</i> are interpreted.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.ds1&nbsp;</b><i>xx&nbsp;yy</i></p>\n\n<p style=\"margin-left:22%;\">Similar to <b>.ds</b>, but\ncompatibility mode is switched off during expansion. To be\nmore precise, a &rsquo;compatibility save&rsquo; token is\ninserted at the beginning of the string, and a\n&rsquo;compatibility restore&rsquo; token at the end.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"6%\">\n\n\n<p><b>.ecs</b></p></td>\n<td width=\"5%\"></td>\n<td width=\"78%\">\n\n\n<p>Save current escape character.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"6%\">\n\n\n<p><b>.ecr</b></p></td>\n<td width=\"5%\"></td>\n<td width=\"78%\">\n\n\n<p>Restore escape character saved with <b>ecs</b>. Without\na previous call to <b>ecs</b>, &rsquo;<b>\\</b>&rsquo; will\nbe the new escape character.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>.evc&nbsp;</b><i>xx</i></p>\n\n<p style=\"margin-left:22%;\">Copy the contents of\nenvironment <i>xx</i> to the current environment. No pushing\nor popping of environments is done.</p>\n\n<p style=\"margin-left:11%;\"><b>.fam&nbsp;</b><i>xx</i></p>\n\n<p style=\"margin-left:22%;\">Set the current font family to\n<i>xx</i>. The current font family is part of the current\nenvironment. If <i>xx</i> is missing, switch back to\nprevious font family. The value at start-up is\n&rsquo;T&rsquo;. See the description of the <b>sty</b>\nrequest for more information on font families.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.fchar&nbsp;</b><i>c&nbsp;string</i></p>\n\n<p style=\"margin-left:22%;\">Define fallback character (or\nglyph)&nbsp;<i>c</i> to be <i>string</i>. The syntax of this\nrequest is the same as the <b>char</b> request; the only\ndifference is that a glyph defined with <b>char</b> hides\nthe glyph with the same name in the current font, whereas a\nglyph defined with <b>fchar</b> is checked only if the\nparticular glyph isn&rsquo;t found in the current font. This\ntest happens before checking special fonts.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.fcolor&nbsp;</b><i>c</i></p>\n\n<p style=\"margin-left:22%;\">Set the fill color\nto&nbsp;<i>c</i>. If <i>c</i> is missing, switch to the\nprevious fill color.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.fschar&nbsp;</b><i>f&nbsp;c&nbsp;string</i></p>\n\n<p style=\"margin-left:22%;\">Define fallback character (or\nglyph)&nbsp;<i>c</i> for font&nbsp;<i>f</i> to be\n<i>string</i>. The syntax of this request is the same as the\n<b>char</b> request (with an additional argument to specify\nthe font); a glyph defined with <b>fschar</b> is searched\nafter the list of fonts declared with the <b>fspecial</b>\nrequest but before the list of fonts declared with\n<b>.special</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>.fspecial&nbsp;</b><i>f s1\ns2 ...</i></p>\n\n<p style=\"margin-left:22%;\">When the current font\nis&nbsp;<i>f</i>, fonts <i>s1</i>, <i>s2</i>, <i>...</i>,\nare special, that is, they are searched for glyphs not in\nthe current font. Any fonts specified in the <b>special</b>\nrequest are searched after fonts specified in the\n<b>fspecial</b> request. Without argument, reset the list of\nglobal special fonts to be empty.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.ftr&nbsp;</b><i>f&nbsp;g</i></p>\n\n<p style=\"margin-left:22%;\">Translate font&nbsp;<i>f</i>\nto&nbsp;<i>g</i>. Whenever a font named&nbsp;<i>f</i> is\nreferred to in an <b>\\f</b> escape sequence, in the <b>F</b>\nand <b>S</b> conditional operators, or in the <b>ft</b>,\n<b>ul</b>, <b>bd</b>, <b>cs</b>, <b>tkf</b>, <b>special</b>,\n<b>fspecial</b>, <b>fp</b>, or <b>sty</b> requests,\nfont&nbsp;<i>g</i> is used. If <i>g</i> is missing, or equal\nto&nbsp;<i>f</i> then font&nbsp;<i>f</i> is not\ntranslated.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.fzoom&nbsp;</b><i>f&nbsp;zoom</i></p>\n\n<p style=\"margin-left:22%;\">Set zoom factor <i>zoom</i> for\nfont&nbsp;<i>f</i>. <i>zoom</i> must a non-negative integer\nmultiple of 1/1000th. If it is missing or is equal to zero,\nit means the same as 1000, namely no magnification.\n<i>f&nbsp;</i>must be a real font name, not a style.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.gcolor&nbsp;</b><i>c</i></p>\n\n<p style=\"margin-left:22%;\">Set the glyph color\nto&nbsp;<i>c</i>. If <i>c</i> is missing, switch to the\nprevious glyph color.</p>\n\n<p style=\"margin-left:11%;\"><b>.hcode&nbsp;</b><i>c1 code1\nc2 code2 ...</i></p>\n\n<p style=\"margin-left:22%;\">Set the hyphenation code of\ncharacter <i>c1</i> to <i>code1</i> and that of <i>c2</i> to\n<i>code2</i>, and so on. A hyphenation code must be a single\ninput character (not a special character) other than a digit\nor a space. Initially each lower-case letter a&ndash;z has a\nhyphenation code, which is itself, and each upper-case\nletter A&ndash;Z has a hyphenation code which is the\nlower-case version of itself. See also the <b>hpf</b>\nrequest.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.hla&nbsp;</b><i>lang</i></p>\n\n<p style=\"margin-left:22%;\">Set the current hyphenation\nlanguage to <i>lang</i>. Hyphenation exceptions specified\nwith the <b>hw</b> request and hyphenation patterns\nspecified with the <b>hpf</b> request are both associated\nwith the current hyphenation language. The <b>hla</b>\nrequest is usually invoked by the <b>troffrc</b> file to set\nup a default language.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>.hlm&nbsp;</b><i>n</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Set the maximum number of consecutive hyphenated lines\nto&nbsp;<i>n</i>. If <i>n</i> is negative, there is no\nmaximum. The default value is&nbsp;-1. This value is\nassociated with the current environment. Only lines output\nfrom an environment count towards the maximum associated\nwith that environment. Hyphens resulting from <b>\\%</b> are\ncounted; explicit hyphens are not.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>.hpf&nbsp;</b><i>file</i></p>\n\n<p style=\"margin-left:22%;\">Read hyphenation patterns from\n<i>file</i>; this is searched for in the same way that\n<i>name</i><b>.tmac</b> is searched for when the\n<b>-m</b><i>name</i> option is specified. It should have the\nsame format as (simple) TeX patterns files. More\nspecifically, the following scanning rules are\nimplemented.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"9%\"></td>\n<td width=\"68%\">\n\n\n<p>A percent sign starts a comment (up to the end of the\nline) even if preceded by a backslash.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"9%\"></td>\n<td width=\"68%\">\n\n\n<p>No support for &rsquo;digraphs&rsquo; like\n<b>\\$</b>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"9%\"></td>\n<td width=\"68%\">\n\n\n<p><b>^^</b><i>xx</i> (<i>x</i> is 0&ndash;9 or a&ndash;f)\nand <b>^^</b><i>x</i> (character code of&nbsp;<i>x</i> in\nthe range 0&ndash;127) are recognized; other use\nof&nbsp;<b>^</b> causes an error.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"9%\"></td>\n<td width=\"68%\">\n\n\n<p>No macro expansion.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"9%\"></td>\n<td width=\"68%\">\n\n\n<p><b>hpf</b> checks for the expression\n<b>\\patterns{</b>...<b>}</b> (possibly with whitespace\nbefore and after the braces). Everything between the braces\nis taken as hyphenation patterns. Consequently,\n<b>{&nbsp;</b>and&nbsp;<b>}</b> are not allowed in\npatterns.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"9%\"></td>\n<td width=\"68%\">\n\n\n<p>Similarly, <b>\\hyphenation{</b>...<b>}</b> gives a list\nof hyphenation exceptions.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"9%\"></td>\n<td width=\"68%\">\n\n\n<p><b>\\endinput</b> is recognized also.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"9%\"></td>\n<td width=\"68%\">\n\n\n<p>For backwards compatibility, if <b>\\patterns</b> is\nmissing, the whole file is treated as a list of hyphenation\npatterns (only recognizing the <b>%&nbsp;</b>character as\nthe start of a comment).</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Use the\n<b>hpfcode</b> request to map the encoding used in\nhyphenation patterns files to <b>groff</b>&rsquo;s input\nencoding. By default, everything maps to itself except\nletters &rsquo;A&rsquo; to &rsquo;Z&rsquo; which map to\n&rsquo;a&rsquo; to &rsquo;z&rsquo;.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The set of\nhyphenation patterns is associated with the current language\nset by the <b>hla</b> request. The <b>hpf</b> request is\nusually invoked by the <b>troffrc</b> file; a second call\nreplaces the old patterns with the new ones.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.hpfa&nbsp;</b><i>file</i></p>\n\n<p style=\"margin-left:22%;\">The same as <b>hpf</b> except\nthat the hyphenation patterns from <i>file</i> are appended\nto the patterns already loaded in the current language.</p>\n\n<p style=\"margin-left:11%;\"><b>.hpfcode&nbsp;</b><i>a b c d\n...</i></p>\n\n<p style=\"margin-left:22%;\">After reading a hyphenation\npatterns file with the <b>hpf</b> or <b>hpfa</b> request,\nconvert all characters with character code&nbsp;<i>a</i> in\nthe recently read patterns to character code&nbsp;<i>b</i>,\ncharacter code&nbsp;<i>c</i> to&nbsp;<i>d</i>, etc.\nInitially, all character codes map to themselves. The\narguments of <b>hpfcode</b> must be integers in the range 0\nto&nbsp;255. Note that it is even possible to use character\ncodes which are invalid in <b>groff</b> otherwise.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>.hym&nbsp;</b><i>n</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Set the <i>hyphenation margin</i> to&nbsp;<i>n</i>: when\nthe current adjustment mode is not&nbsp;<b>b</b>, the line\nis not hyphenated if the line is no more than <i>n</i>\nshort. The default hyphenation margin is&nbsp;0. The default\nscaling indicator for this request is&nbsp;<b>m</b>. The\nhyphenation margin is associated with the current\nenvironment. The current hyphenation margin is available in\nthe <b>\\n[.hym]</b> register.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>.hys&nbsp;</b><i>n</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Set the <i>hyphenation space</i> to&nbsp;<i>n</i>: When\nthe current adjustment mode is&nbsp;<b>b</b> don&rsquo;t\nhyphenate the line if the line can be justified by adding no\nmore than <i>n</i> extra space to each word space. The\ndefault hyphenation space is&nbsp;0. The default scaling\nindicator for this request is&nbsp;<b>m</b>. The hyphenation\nspace is associated with the current environment. The\ncurrent hyphenation space is available in the\n<b>\\n[.hys]</b> register.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>.itc&nbsp;</b><i>n&nbsp;macro</i></p>\n\n<p style=\"margin-left:22%;\">Variant of <b>.it</b> for which\na line interrupted with <b>\\c</b> is not counted as an input\nline.</p>\n\n<p style=\"margin-left:11%;\"><b>.kern&nbsp;</b><i>n</i></p>\n\n<p style=\"margin-left:22%;\">If <i>n</i> is non-zero or\nmissing, enable pairwise kerning, otherwise disable it.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.length&nbsp;</b><i>xx&nbsp;string</i></p>\n\n<p style=\"margin-left:22%;\">Compute the length of\n<i>string</i> and return it in the number register <i>xx</i>\n(which is not necessarily defined before).</p>\n\n\n<p style=\"margin-left:11%;\"><b>.linetabs&nbsp;</b><i>n</i></p>\n\n<p style=\"margin-left:22%;\">If <i>n</i> is non-zero or\nmissing, enable line-tabs mode, otherwise disable it (which\nis the default). In line-tabs mode, tab distances are\ncomputed relative to the (current) output line. Otherwise\nthey are taken relative to the input line. For example, the\nfollowing</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">.ds x a\\t\\c\n<br>\n.ds y b\\t\\c <br>\n.ds z c <br>\n.ta 1i 3i <br>\n\\*x <br>\n\\*y <br>\n\\*z</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">yields</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">a b c</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">In line-tabs\nmode, the same code gives</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">a b c</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Line-tabs mode\nis associated with the current environment; the read-only\nnumber register <b>\\n[.linetabs]</b> is set to&nbsp;1 if in\nline-tabs mode, and 0 otherwise.</p>\n\n<p style=\"margin-left:11%;\"><b>.lsm&nbsp;</b><i>xx</i></p>\n\n<p style=\"margin-left:22%;\">Set the leading spaces macro to\n<i>xx</i>. If there are leading spaces in an input line, it\nis invoked instead of the usual troff behaviour; the leading\nspaces are removed. Registers <b>\\n[lsn]</b> and\n<b>\\n[lss]</b> hold the number of removed leading spaces and\nthe corresponding horizontal space, respectively.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.mso&nbsp;</b><i>file</i></p>\n\n<p style=\"margin-left:22%;\">The same as the <b>so</b>\nrequest except that <i>file</i> is searched for in the same\ndirectories as macro files for the <b>-m</b> command-line\noption. If the file name to be included has the form\n<i>name</i><b>.tmac</b> and it isn&rsquo;t found, <b>mso</b>\ntries to include <b>tmac.</b><i>name</i> instead and vice\nversa. A warning of type <b>file</b> is generated if\n<i>file</i> can&rsquo;t be loaded, and the request is\nignored.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.nop&nbsp;</b><i>anything</i></p>\n\n<p style=\"margin-left:22%;\">Execute <i>anything</i>. This\nis similar to &rsquo;.if&nbsp;1&rsquo;.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>.nroff</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Make the <b>n</b> built-in condition true and the\n<b>t</b> built-in condition false. This can be reversed\nusing the <b>troff</b> request.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>.open&nbsp;</b><i>stream&nbsp;filename</i></p>\n\n<p style=\"margin-left:22%;\">Open <i>filename</i> for\nwriting and associate the stream named <i>stream</i> with\nit. See also the <b>close</b> and <b>write</b> requests.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.opena&nbsp;</b><i>stream&nbsp;filename</i></p>\n\n<p style=\"margin-left:22%;\">Like <b>open</b>, but if\n<i>filename</i> exists, append to it instead of truncating\nit.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.output&nbsp;</b><i>string</i></p>\n\n<p style=\"margin-left:22%;\">Emit <i>string</i> directly to\nthe intermediate output (subject to copy-mode\ninterpretation); this is similar to <b>\\!</b> used at the\ntop level. An initial double quote in <i>string</i> is\nstripped off to allow initial blanks.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"6%\">\n\n\n<p><b>.pev</b></p></td>\n<td width=\"5%\"></td>\n<td width=\"78%\">\n\n\n<p>Print the current environment and each defined\nenvironment state on stderr.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"6%\">\n\n\n<p><b>.pnr</b></p></td>\n<td width=\"5%\"></td>\n<td width=\"78%\">\n\n\n<p>Print the names and contents of all currently defined\nnumber registers on stderr.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>.psbb&nbsp;</b><i>filename</i></p>\n\n<p style=\"margin-left:22%;\">Get the bounding box of a\nPostScript image <i>filename</i>. This file must conform to\nAdobe&rsquo;s Document Structuring Conventions; the command\nlooks for a <b>%%BoundingBox</b> comment to extract the\nbounding box values. After a successful call, the\ncoordinates (in PostScript units) of the lower left and\nupper right corner can be found in the registers\n<b>\\n[llx]</b>, <b>\\n[lly]</b>, <b>\\n[urx]</b>, and\n<b>\\n[ury]</b>, respectively. If some error has occurred,\nthe four registers are set to zero.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.pso&nbsp;</b><i>command</i></p>\n\n<p style=\"margin-left:22%;\">This behaves like the <b>so</b>\nrequest except that input comes from the standard output of\n<i>command</i>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"6%\">\n\n\n<p><b>.ptr</b></p></td>\n<td width=\"5%\"></td>\n<td width=\"78%\">\n\n\n<p>Print the names and positions of all traps (not\nincluding input line traps and diversion traps) on stderr.\nEmpty slots in the page trap list are printed as well,\nbecause they can affect the priority of subsequently planted\ntraps.</p> </td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>.pvs&nbsp;</b><i>&plusmn;n</i></p>\n\n<p style=\"margin-left:22%;\">Set the post-vertical line\nspace to&nbsp;<i>n</i>; default scale indicator\nis&nbsp;<b>p</b>. This value is added to each line after it\nhas been output. With no argument, the post-vertical line\nspace is set to its previous value.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The total\nvertical line spacing consists of four components:\n<b>.vs</b> and <b>\\x</b> with a negative value which are\napplied before the line is output, and <b>.pvs</b> and\n<b>\\x</b> with a positive value which are applied after the\nline is output.</p>\n\n<p style=\"margin-left:11%;\"><b>.rchar&nbsp;</b><i>c1 c2\n...</i></p>\n\n<p style=\"margin-left:22%;\">Remove the definitions of\nglyphs <i>c1</i>, <i>c2</i>, <i>...&nbsp;</i> This undoes\nthe effect of a <b>char</b> request.</p>\n\n<p style=\"margin-left:11%;\"><b>.return</b></p>\n\n<p style=\"margin-left:22%;\">Within a macro, return\nimmediately. If called with an argument, return twice,\nnamely from the current macro and from the macro one level\nhigher. No effect otherwise.</p>\n\n<p style=\"margin-left:11%;\"><b>.rfschar&nbsp;</b><i>c1 c2\n...</i></p>\n\n<p style=\"margin-left:22%;\">Remove the font-specific\ndefinitions of glyphs <i>c1</i>, <i>c2</i>, <i>...&nbsp;</i>\nThis undoes the effect of an <b>fschar</b> request.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>.rj</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>.rj&nbsp;</b><i>n</i></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>Right justify the next <i>n&nbsp;</i>input lines.\nWithout an argument right justify the next input line. The\nnumber of lines to be right justified is available in the\n<b>\\n[.rj]</b> register. This implicitly does\n<b>.ce&nbsp;0</b>. The <b>ce</b> request implicitly does\n<b>.rj&nbsp;0</b>.</p> </td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>.rnn&nbsp;</b><i>xx&nbsp;yy</i></p>\n\n<p style=\"margin-left:22%;\">Rename number register\n<i>xx</i> to <i>yy</i>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.schar&nbsp;</b><i>c&nbsp;string</i></p>\n\n<p style=\"margin-left:22%;\">Define global fallback\ncharacter (or glyph)&nbsp;<i>c</i> to be <i>string</i>. The\nsyntax of this request is the same as the <b>char</b>\nrequest; a glyph defined with <b>schar</b> is searched after\nthe list of fonts declared with the <b>special</b> request\nbut before the mounted special fonts.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>.shc&nbsp;</b><i>c</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Set the soft hyphen character to&nbsp;<i>c</i>. If\n<i>c</i> is omitted, the soft hyphen character is set to the\ndefault <b>\\[hy]</b>. The soft hyphen character is the glyph\nwhich is inserted when a word is hyphenated at a line break.\nIf the soft hyphen character does not exist in the font of\nthe glyph immediately preceding a potential break point,\nthen the line is not broken at that point. Neither\ndefinitions (specified with the <b>char</b> request) nor\ntranslations (specified with the <b>tr</b> request) are\nconsidered when finding the soft hyphen character.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>.shift&nbsp;</b><i>n</i></p>\n\n<p style=\"margin-left:22%;\">In a macro, shift the arguments\nby <i>n</i> positions: argument&nbsp;<i>i</i> becomes\nargument <i>i</i>-<i>n</i>; arguments 1 to&nbsp;<i>n</i> are\nno longer available. If <i>n</i> is missing, arguments are\nshifted by&nbsp;1. Shifting by negative amounts is currently\nundefined.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.sizes&nbsp;</b><i>s1&nbsp;s2&nbsp;...&nbsp;sn&nbsp;</i><b>[0]</b></p>\n\n<p style=\"margin-left:22%;\">This command is similar to the\n<b>sizes</b> command of a <i>DESC</i> file. It sets the\navailable font sizes for the current font to <i>s1</i>,\n<i>s2</i>, <i>...</i>,&nbsp;<i>sn</i> scaled points. The\nlist of sizes can be terminated by an\noptional&nbsp;<b>0</b>. Each <i>si</i> can also be a range\nof sizes <i>m</i>&ndash;<i>n</i>. Contrary to the font file\ncommand, the list can&rsquo;t extend over more than a single\nline.</p>\n\n<p style=\"margin-left:11%;\"><b>.special&nbsp;</b><i>s1 s2\n...</i></p>\n\n<p style=\"margin-left:22%;\">Fonts <i>s1</i>, <i>s2</i>,\n<i>...</i>, are special and are searched for glyphs not in\nthe current font. Without arguments, reset the list of\nspecial fonts to be empty.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.spreadwarn&nbsp;</b><i>limit</i></p>\n\n<p style=\"margin-left:22%;\">Make <b>troff</b> emit a\nwarning if the additional space inserted for each space\nbetween words in an output line is larger or equal to\n<i>limit</i>. A negative value is changed to zero; no\nargument toggles the warning on and off without changing\n<i>limit</i>. The default scaling indicator\nis&nbsp;<b>m</b>. At startup, <b>spreadwarn</b> is\ndeactivated, and <i>limit</i> is set to 3m. For example,\n<b>.spreadwarn&nbsp;0.2m</b> causes a warning if\n<b>troff</b> must add 0.2m or more for each interword space\nin a line. This request is active only if text is justified\nto both margins (using <b>.ad&nbsp;b</b>).</p>\n\n\n<p style=\"margin-left:11%;\"><b>.sty&nbsp;</b><i>n&nbsp;f</i></p>\n\n<p style=\"margin-left:22%;\">Associate style&nbsp;<i>f</i>\nwith font position&nbsp;<i>n</i>. A font position can be\nassociated either with a font or with a style. The current\nfont is the index of a font position and so is also either a\nfont or a style. When it is a style, the font that is\nactually used is the font the name of which is the\nconcatenation of the name of the current family and the name\nof the current style. For example, if the current font\nis&nbsp;1 and font position&nbsp;1 is associated with\nstyle&nbsp;<b>R</b> and the current font family\nis&nbsp;<b>T</b>, then font <b>TR</b> is used. If the\ncurrent font is not a style, then the current family is\nignored. When the requests <b>cs</b>, <b>bd</b>, <b>tkf</b>,\n<b>uf</b>, or <b>fspecial</b> are applied to a style, then\nthey are applied instead to the member of the current family\ncorresponding to that style. The default family can be set\nwith the <b>-f</b> command-line option. The <b>styles</b>\ncommand in the DESC file controls which font positions (if\nany) are initially associated with styles rather than\nfonts.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.substring&nbsp;</b><i>xx&nbsp;n1&nbsp;</i><b>[</b><i>n2</i><b>]</b></p>\n\n<p style=\"margin-left:22%;\">Replace the string named\n<i>xx</i> with the substring defined by the indices\n<i>n1</i> and <i>n2</i>. The first character in the string\nhas index&nbsp;0. If <i>n2</i> is omitted, it is taken to be\nequal to the string&rsquo;s length. If the index value\n<i>n1</i> or <i>n2</i> is negative, it is counted from the\nend of the string, going backwards: The last character has\nindex&nbsp;-1, the character before the last character has\nindex&nbsp;-2, etc.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.tkf&nbsp;</b><i>f&nbsp;s1&nbsp;n1&nbsp;s2&nbsp;n2</i></p>\n\n<p style=\"margin-left:22%;\">Enable track kerning for\nfont&nbsp;<i>f</i>. When the current font is&nbsp;<i>f</i>\nthe width of every glyph is increased by an amount between\n<i>n1</i> and <i>n2</i>; when the current point size is less\nthan or equal to <i>s1</i> the width is increased by\n<i>n1</i>; when it is greater than or equal to <i>s2</i> the\nwidth is increased by <i>n2</i>; when the point size is\ngreater than or equal to <i>s1</i> and less than or equal to\n<i>s2</i> the increase in width is a linear function of the\npoint size.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.tm1&nbsp;</b><i>string</i></p>\n\n<p style=\"margin-left:22%;\">Similar to the <b>tm</b>\nrequest, <i>string</i> is read in copy mode and written on\nthe standard error, but an initial double quote in\n<i>string</i> is stripped off to allow initial blanks.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.tmc&nbsp;</b><i>string</i></p>\n\n<p style=\"margin-left:22%;\">Similar to <b>tm1</b> but\nwithout writing a final newline.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.trf&nbsp;</b><i>filename</i></p>\n\n<p style=\"margin-left:22%;\">Transparently output the\ncontents of file <i>filename</i>. Each line is output as if\npreceded by <b>\\!</b>; however, the lines are not subject to\ncopy-mode interpretation. If the file does not end with a\nnewline, then a newline is added. For example, you can\ndefine a macro&nbsp;<i>x</i> containing the contents of\nfile&nbsp;<i>f</i>, using</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">.di x <br>\n.trf f <br>\n.di</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Unlike with the\n<b>cf</b> request, the file cannot contain characters, such\nas NUL, that are not valid troff input characters.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.trin&nbsp;</b><i>abcd</i></p>\n\n<p style=\"margin-left:22%;\">This is the same as the\n<b>tr</b> request except that the <b>asciify</b> request\nuses the character code (if any) before the character\ntranslation. Example:</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">.trin ax <br>\n.di xxx <br>\na <br>\n.br <br>\n.di <br>\n.xxx <br>\n.trin aa <br>\n.asciify xxx <br>\n.xxx</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The result is\n<b>x&nbsp;a</b>. Using <b>tr</b>, the result would be\n<b>x&nbsp;x</b>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.trnt&nbsp;</b><i>abcd</i></p>\n\n<p style=\"margin-left:22%;\">This is the same as the\n<b>tr</b> request except that the translations do not apply\nto text that is transparently throughput into a diversion\nwith <b>\\!</b>. For example,</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">.tr ab <br>\n.di x <br>\n\\!.tm a <br>\n.di <br>\n.x</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\">prints&nbsp;<b>b</b>;\nif <b>trnt</b> is used instead of <b>tr</b> it\nprints&nbsp;<b>a</b>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>.troff</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Make the <b>n</b> built-in condition false, and the\n<b>t</b> built-in condition true. This undoes the effect of\nthe <b>nroff</b> request.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>.unformat&nbsp;</b><i>xx</i></p>\n\n<p style=\"margin-left:22%;\">This request\n&rsquo;unformats&rsquo; the diversion <i>xx</i>. Contrary to\nthe <b>asciify</b> request, which tries to convert formatted\nelements of the diversion back to input tokens as much as\npossible, <b>.unformat</b> only handles tabs and spaces\nbetween words (usually caused by spaces or newlines in the\ninput) specially. The former are treated as if they were\ninput tokens, and the latter are stretchable again. Note\nthat the vertical size of lines is not preserved. Glyph\ninformation (font, font size, space width, etc.) is\nretained. Useful in conjunction with the <b>box</b> and\n<b>boxa</b> requests.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>.vpt&nbsp;</b><i>n</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Enable vertical position traps if <i>n</i> is non-zero,\ndisable them otherwise. Vertical position traps are traps\nset by the <b>wh</b> or <b>dt</b> requests. Traps set by the\n<b>it</b> request are not vertical position traps. The\nparameter that controls whether vertical position traps are\nenabled is global. Initially vertical position traps are\nenabled.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>.warn&nbsp;</b><i>n</i></p>\n\n<p style=\"margin-left:22%;\">Control warnings.\n<i>n&nbsp;</i>is the sum of the numbers associated with each\nwarning that is to be enabled; all other warnings are\ndisabled. The number associated with each warning is listed\nin <a href=\"https://man.page/1/troff\">troff(1)</a>. For example, <b>.warn&nbsp;0</b>\ndisables all warnings, and <b>.warn&nbsp;1</b> disables all\nwarnings except that about missing glyphs. If <i>n</i> is\nnot given, all warnings are enabled.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.warnscale&nbsp;</b><i>si</i></p>\n\n<p style=\"margin-left:22%;\">Set the scaling indicator used\nin warnings to <i>si</i>. Valid values for <i>si</i> are\n<b>u</b>, <b>i</b>, <b>c</b>, <b>p</b>, and&nbsp;<b>P</b>.\nAt startup, it is set to&nbsp;<b>i</b>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.while&nbsp;</b><i>c&nbsp;anything</i></p>\n\n<p style=\"margin-left:22%;\">While condition&nbsp;<i>c</i>\nis true, accept <i>anything</i> as input; <i>c&nbsp;</i>can\nbe any condition acceptable to an <b>if</b> request;\n<i>anything</i> can comprise multiple lines if the first\nline starts with <b>\\{</b> and the last line ends with\n<b>\\}</b>. See also the <b>break</b> and <b>continue</b>\nrequests.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.write&nbsp;</b><i>stream&nbsp;anything</i></p>\n\n<p style=\"margin-left:22%;\">Write <i>anything</i> to the\nstream named <i>stream</i>. <i>stream</i> must previously\nhave been the subject of an <b>open</b> request.\n<i>anything</i> is read in copy mode; a\nleading&nbsp;<b>&quot;</b> is stripped.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.writec&nbsp;</b><i>stream&nbsp;anything</i></p>\n\n<p style=\"margin-left:22%;\">Similar to <b>write</b> but\nwithout writing a final newline.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.writem&nbsp;</b><i>stream&nbsp;xx</i></p>\n\n<p style=\"margin-left:22%;\">Write the contents of the macro\nor string <i>xx</i> to the stream named <i>stream</i>.\n<i>stream</i> must previously have been the subject of an\n<b>open</b> request. <i>xx</i> is read in copy mode.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Extended\nescape sequences <br>\n\\D&rsquo;</b>...<b>&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">All drawing commands of\ngroff&rsquo;s intermediate output are accepted. See\nsubsection &ldquo;Drawing Commands&rdquo; below.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Extended\nrequests <br>\n.cf&nbsp;</b><i>filename</i></p>\n\n<p style=\"margin-left:22%;\">When used in a diversion, this\nembeds in the diversion an object which, when reread, will\ncause the contents of <i>filename</i> to be transparently\ncopied through to the output. In Unix troff, the contents of\n<i>filename</i> is immediately copied through to the output\nregardless of whether there is a current diversion; this\nbehaviour is so anomalous that it must be considered a\nbug.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.de&nbsp;</b><i>xx&nbsp;yy</i>\n<b><br>\n.am&nbsp;</b><i>xx&nbsp;yy</i> <b><br>\n.ds&nbsp;</b><i>xx&nbsp;yy</i> <b><br>\n.as&nbsp;</b><i>xx&nbsp;yy</i></p>\n\n<p style=\"margin-left:22%;\">In compatibility mode, these\nrequests behaves similar to <b>.de1</b>, <b>.am1</b>,\n<b>.ds1</b>, and <b>.as1</b>, respectively: A\n&rsquo;compatibility save&rsquo; token is inserted at the\nbeginning, and a &rsquo;compatibility restore&rsquo; token\nat the end, with compatibility mode switched on during\nexecution.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>.ev&nbsp;</b><i>xx</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>If <i>xx</i> is not a number, this switches to a named\nenvironment called <i>xx</i>. The environment should be\npopped with a matching <b>ev</b> request without any\narguments, just as for numbered environments. There is no\nlimit on the number of named environments; they are created\nthe first time that they are referenced.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>.hy&nbsp;</b><i>n</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>New additive values 16 and&nbsp;32 are available; the\nformer enables hyphenation before the last character, the\nlatter enables hyphenation after the first character.</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><b>.ss&nbsp;</b><i>m&nbsp;n</i></p>\n\n<p style=\"margin-left:22%;\">When two arguments are given to\nthe <b>ss</b> request, the second argument gives the\n<i>sentence space size</i>. If the second argument is not\ngiven, the sentence space size is the same as the word space\nsize. Like the word space size, the sentence space is in\nunits of one twelfth of the spacewidth parameter for the\ncurrent font. Initially both the word space size and the\nsentence space size are&nbsp;12. Contrary to Unix troff, GNU\ntroff handles this request in nroff mode also; a given value\nis then rounded down to the nearest multiple of&nbsp;12. The\nsentence space size is used in two circumstances. If the end\nof a sentence occurs at the end of a line in fill mode, then\nboth an inter-word space and a sentence space are added; if\ntwo spaces follow the end of a sentence in the middle of a\nline, then the second space is a sentence space. Note that\nthe behaviour of Unix troff is exactly that exhibited by GNU\ntroff if a second argument is never given to the <b>ss</b>\nrequest. In GNU troff, as in Unix troff, you should always\nfollow a sentence with either a newline or two spaces.</p>\n\n<p style=\"margin-left:11%;\"><b>.ta&nbsp;</b><i>n1 n2 ...\nnn</i> <b>T</b> <i>r1 r2 ... rn</i></p>\n\n<p style=\"margin-left:22%;\">Set tabs at positions\n<i>n1</i>, <i>n2</i>, <i>...</i>, <i>nn</i> and then set\ntabs at <i>nn</i>+<i>r1</i>, <i>nn</i>+<i>r2</i>,\n<i>...</i>, <i>nn</i>+<i>rn</i> and then at\n<i>nn</i>+<i>rn</i>+<i>r1</i>,\n<i>nn</i>+<i>rn</i>+<i>r2</i>, <i>...</i>,\n<i>nn</i>+<i>rn</i>+<i>rn</i>, and so on. For example,</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">.ta T .5i</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">sets tabs every\nhalf an inch.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>New number\nregisters</b> <br>\nThe following read-only registers are available: <b><br>\n\\n[.br]</b></p>\n\n<p style=\"margin-left:22%;\">Within a macro call, it is set\nto&nbsp;1 if the macro is called with the\n&rsquo;normal&rsquo; control character (&rsquo;.&rsquo; by\ndefault), and set to&nbsp;0 otherwise. This allows the\nreliable modification of requests.</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">.als bp*orig bp\n<br>\n.de bp <br>\n.tm before bp <br>\n.ie \\\\n[.br] .bp*orig <br>\n.el &rsquo;bp*orig <br>\n.tm after bp <br>\n..</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Using this\nregister outside of a macro makes no sense (it always\nreturns zero in such cases).</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\n[.C]</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"76%\">\n\n\n<p>1&nbsp;if compatibility mode is in effect,\n0&nbsp;otherwise.</p> </td>\n<td width=\"2%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>\\n[.cdp]</b></p>\n\n<p style=\"margin-left:22%;\">The depth of the last glyph\nadded to the current environment. It is positive if the\nglyph extends below the baseline.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.ce]</b></p>\n\n<p style=\"margin-left:22%;\">The number of lines remaining\nto be centered, as set by the <b>ce</b> request.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.cht]</b></p>\n\n<p style=\"margin-left:22%;\">The height of the last glyph\nadded to the current environment. It is positive if the\nglyph extends above the baseline.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.color]</b></p>\n\n<p style=\"margin-left:22%;\">1&nbsp;if colors are enabled,\n0&nbsp;otherwise.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.csk]</b></p>\n\n<p style=\"margin-left:22%;\">The skew of the last glyph\nadded to the current environment. The <i>skew</i> of a glyph\nis how far to the right of the center of a glyph the center\nof an accent over that glyph should be placed.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.ev]</b></p>\n\n<p style=\"margin-left:22%;\">The name or number of the\ncurrent environment. This is a string-valued register.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.fam]</b></p>\n\n<p style=\"margin-left:22%;\">The current font family. This\nis a string-valued register.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.fn]</b></p>\n\n<p style=\"margin-left:22%;\">The current (internal) real\nfont name. This is a string-valued register. If the current\nfont is a style, the value of <b>\\n[.fn]</b> is the proper\nconcatenation of family and style name.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.fp]</b></p>\n\n<p style=\"margin-left:22%;\">The number of the next free\nfont position.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\n[.g]</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Always&nbsp;1. Macros should use this to determine\nwhether they are running under GNU troff.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>\\n[.height]</b></p>\n\n<p style=\"margin-left:22%;\">The current height of the font\nas set with <b>\\H</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.hla]</b></p>\n\n<p style=\"margin-left:22%;\">The current hyphenation\nlanguage as set by the <b>hla</b> request.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.hlc]</b></p>\n\n<p style=\"margin-left:22%;\">The number of immediately\npreceding consecutive hyphenated lines.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.hlm]</b></p>\n\n<p style=\"margin-left:22%;\">The maximum allowed number of\nconsecutive hyphenated lines, as set by the <b>hlm</b>\nrequest.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.hy]</b></p>\n\n<p style=\"margin-left:22%;\">The current hyphenation flags\n(as set by the <b>hy</b> request).</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.hym]</b></p>\n\n<p style=\"margin-left:22%;\">The current hyphenation margin\n(as set by the <b>hym</b> request).</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.hys]</b></p>\n\n<p style=\"margin-left:22%;\">The current hyphenation space\n(as set by the <b>hys</b> request).</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.in]</b></p>\n\n<p style=\"margin-left:22%;\">The indentation that applies to\nthe current output line.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.int]</b></p>\n\n<p style=\"margin-left:22%;\">Set to a positive value if last\noutput line is interrupted (i.e., if it contains\n<b>\\c</b>).</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.kern]</b></p>\n\n<p style=\"margin-left:22%;\">1&nbsp;if pairwise kerning is\nenabled, 0&nbsp;otherwise.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.lg]</b></p>\n\n<p style=\"margin-left:22%;\">The current ligature mode (as\nset by the <b>lg</b> request).</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.linetabs]</b></p>\n\n<p style=\"margin-left:22%;\">The current line-tabs mode (as\nset by the <b>linetabs</b> request).</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.ll]</b></p>\n\n<p style=\"margin-left:22%;\">The line length that applies to\nthe current output line.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.lt]</b></p>\n\n<p style=\"margin-left:22%;\">The title length as set by the\n<b>lt</b> request.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\n[.m]</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The name of the current drawing color. This is a\nstring-valued register.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\n[.M]</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The name of the current background color. This is a\nstring-valued register.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>\\n[.ne]</b></p>\n\n<p style=\"margin-left:22%;\">The amount of space that was\nneeded in the last <b>ne</b> request that caused a trap to\nbe sprung. Useful in conjunction with the <b>\\n[.trunc]</b>\nregister.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.ns]</b></p>\n\n<p style=\"margin-left:22%;\">1&nbsp;if no-space mode is\nactive, 0&nbsp;otherwise.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\n[.O]</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The current output level as set with <b>\\O</b>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\n[.P]</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>1&nbsp;if the current page is in the output list set\nwith <b>-o</b>.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>\\n[.pe]</b></p>\n\n<p style=\"margin-left:22%;\">1&nbsp;during a page ejection\ncaused by the <b>bp</b> request, 0&nbsp;otherwise.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.pn]</b></p>\n\n<p style=\"margin-left:22%;\">The number of the next page,\neither the value set by a <b>pn</b> request, or the number\nof the current page plus&nbsp;1.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.ps]</b></p>\n\n<p style=\"margin-left:22%;\">The current point size in\nscaled points.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.psr]</b></p>\n\n<p style=\"margin-left:22%;\">The last-requested point size\nin scaled points.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.pvs]</b></p>\n\n<p style=\"margin-left:22%;\">The current post-vertical line\nspace as set with the <b>pvs</b> request.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.rj]</b></p>\n\n<p style=\"margin-left:22%;\">The number of lines to be\nright-justified as set by the <b>rj</b> request.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.slant]</b></p>\n\n<p style=\"margin-left:22%;\">The slant of the current font\nas set with <b>\\S</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.sr]</b></p>\n\n<p style=\"margin-left:22%;\">The last requested point size\nin points as a decimal fraction. This is a string-valued\nregister.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.ss] <br>\n\\n[.sss]</b></p>\n\n<p style=\"margin-left:22%;\">These give the values of the\nparameters set by the first and second arguments of the\n<b>ss</b> request.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.sty]</b></p>\n\n<p style=\"margin-left:22%;\">The current font style. This is\na string-valued register.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.tabs]</b></p>\n\n<p style=\"margin-left:22%;\">A string representation of the\ncurrent tab settings suitable for use as an argument to the\n<b>ta</b> request.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.trunc]</b></p>\n\n<p style=\"margin-left:22%;\">The amount of vertical space\ntruncated by the most recently sprung vertical position\ntrap, or, if the trap was sprung by an <b>ne</b> request,\nminus the amount of vertical motion produced by the\n<b>ne</b> request. In other words, at the point a trap is\nsprung, it represents the difference of what the vertical\nposition would have been but for the trap, and what the\nvertical position actually is. Useful in conjunction with\nthe <b>\\n[.ne]</b> register.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\n[.U]</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Set to&nbsp;1 if in safer mode and to&nbsp;0 if in\nunsafe mode (as given with the <b>-U</b> command-line\noption).</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>\\n[.vpt]</b></p>\n\n<p style=\"margin-left:22%;\">1&nbsp;if vertical position\ntraps are enabled, 0&nbsp;otherwise.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[.warn]</b></p>\n\n<p style=\"margin-left:22%;\">The sum of the numbers\nassociated with each of the currently enabled warnings. The\nnumber associated with each warning is listed in\n<a href=\"https://man.page/1/troff\">troff(1)</a>.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\n[.x]</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The major version number. For example, if the version\nnumber is 1.03, then <b>\\n[.x]</b> contains&nbsp;1.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\n[.y]</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The minor version number. For example, if the version\nnumber is 1.03, then <b>\\n[.y]</b> contains&nbsp;03.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\n[.Y]</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The revision number of groff.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>\\n[.zoom]</b></p>\n\n<p style=\"margin-left:22%;\">The zoom value of the current\nfont, in multiples of 1/1000th. Zero if no\nmagnification.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[llx] <br>\n\\n[lly] <br>\n\\n[urx] <br>\n\\n[ury]</b></p>\n\n<p style=\"margin-left:22%;\">These four read/write registers\nare set by the <b>psbb</b> request and contain the bounding\nbox values (in PostScript units) of a given PostScript\nimage.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The following\nread/write registers are set by the <b>\\w</b> escape\nsequence: <b><br>\n\\n[rst] <br>\n\\n[rsb]</b></p>\n\n<p style=\"margin-left:22%;\">Like the <b>st</b> and\n<b>sb</b> registers, but take account of the heights and\ndepths of glyphs.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[ssc]</b></p>\n\n<p style=\"margin-left:22%;\">The amount of horizontal space\n(possibly negative) that should be added to the last glyph\nbefore a subscript.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[skw]</b></p>\n\n<p style=\"margin-left:22%;\">How far to right of the center\nof the last glyph in the <b>\\w</b> argument, the center of\nan accent from a roman font should be placed over that\nglyph.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Other available\nread/write number registers are:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\n[c.]</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>The current input line number. <b>\\n[.c]</b> is a\nread-only alias to this register.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>\\n[hours]</b></p>\n\n<p style=\"margin-left:22%;\">The number of hours past\nmidnight. Initialized at start-up.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>\\n[hp]</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"70%\">\n\n\n<p>The current horizontal position at input line.</p></td>\n<td width=\"8%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>\\n[lsn] <br>\n\\n[lss]</b></p>\n\n<p style=\"margin-left:22%;\">If there are leading spaces in\nan input line, these registers hold the number of leading\nspaces and the corresponding horizontal space,\nrespectively.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[minutes]</b></p>\n\n<p style=\"margin-left:22%;\">The number of minutes after the\nhour. Initialized at start-up.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[seconds]</b></p>\n\n<p style=\"margin-left:22%;\">The number of seconds after the\nminute. Initialized at start-up.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[systat]</b></p>\n\n<p style=\"margin-left:22%;\">The return value of the\nsystem() function executed by the last <b>sy</b>\nrequest.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[slimit]</b></p>\n\n<p style=\"margin-left:22%;\">If greater than&nbsp;0, the\nmaximum number of objects on the input stack. If less than\nor equal to&nbsp;0, there is no limit on the number of\nobjects on the input stack. With no limit, recursion can\ncontinue until virtual memory is exhausted.</p>\n\n<p style=\"margin-left:11%;\"><b>\\n[year]</b></p>\n\n<p style=\"margin-left:22%;\">The current year. Note that the\ntraditional <b>troff</b> number register <b>\\n[yr]</b> is\nthe current year minus 1900.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Miscellaneous\n<br>\ntroff</b> predefines a single (read/write) string-based\nregister, <b>\\*[.T]</b>, which contains the argument given\nto the <b>-T</b> command-line option, namely the current\noutput device (for example, <i>latin1</i> or <i>ascii</i>).\nNote that this is not the same as the (read-only) number\nregister <b>\\n[.T]</b> which is defined to be&nbsp;1 if\n<b>troff</b> is called with the <b>-T</b> command-line\noption, and zero otherwise. This behaviour is different from\nUnix troff.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Fonts not\nlisted in the DESC file are automatically mounted on the\nnext available font position when they are referenced. If a\nfont is to be mounted explicitly with the <b>fp</b> request\non an unused font position, it should be mounted on the\nfirst unused font position, which can be found in the\n<b>\\n[.fp]</b> register; although <b>troff</b> does not\nenforce this strictly, it does not allow a font to be\nmounted at a position whose number is much greater than that\nof any currently used position.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Interpolating a\nstring does not hide existing macro arguments. Thus in a\nmacro, a more efficient way of doing</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>.</b><i>xx&nbsp;</i><b>\\\\$@</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">is</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>\\\\*[</b><i>xx</i><b>]\\\\</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the font\ndescription file contains pairwise kerning information,\nglyphs from that font are kerned. Kerning between two glyphs\ncan be inhibited by placing a <b>\\&amp;</b> between\nthem.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In a string\ncomparison in a condition, characters that appear at\ndifferent input levels to the first delimiter character are\nnot recognized as the second or third delimiters. This\napplies also to the <b>tl</b> request. In a <b>\\w</b> escape\nsequence, a character that appears at a different input\nlevel to the starting delimiter character is not recognized\nas the closing delimiter character. The same is true for\n<b>\\A</b>, <b>\\b</b>, <b>\\B</b>, <b>\\C</b>, <b>\\l</b>,\n<b>\\L</b>, <b>\\o</b>, <b>\\X</b>, and <b>\\Z</b>. When\ndecoding a macro or string argument that is delimited by\ndouble quotes, a character that appears at a different input\nlevel to the starting delimiter character is not recognized\nas the closing delimiter character. The implementation of\n<b>\\$@</b> ensures that the double quotes surrounding an\nargument appear at the same input level, which is different\nto the input level of the argument itself. In a long escape\nname <b>]</b> is not recognized as a closing delimiter\nexcept when it occurs at the same input level as the\nopening&nbsp;<b>[</b>. In compatibility mode, no attention\nis paid to the input-level.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">There are some\nnew types of condition: <b><br>\n.if&nbsp;r</b><i>xxx</i></p>\n\n<p style=\"margin-left:22%;\">True if there is a number\nregister named <i>xxx</i>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.if&nbsp;d</b><i>xxx</i></p>\n\n<p style=\"margin-left:22%;\">True if there is a string,\nmacro, diversion, or request named <i>xxx</i>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>.if&nbsp;m</b><i>xxx</i></p>\n\n<p style=\"margin-left:22%;\">True if there is a color named\n<i>xxx</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>.if&nbsp;c</b><i>ch</i></p>\n\n<p style=\"margin-left:22%;\">True if there is a character\n(or glyph) <i>ch</i> available; <i>ch</i> is either an ASCII\ncharacter or a glyph (special character)\n<b>\\N&rsquo;</b><i>xxx</i><b>&rsquo;</b>, <b>\\(</b><i>xx</i>\nor <b>\\[</b><i>xxx</i><b>]</b>; the condition is also true\nif <i>ch</i> has been defined by the <b>char</b>\nrequest.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>.if&nbsp;F</b><i>f</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>True if font&nbsp;<i>f</i> exists. <b>f&nbsp;</b>is\nhandled as if it was opened with the <b>ft</b> request (this\nis, font translation and styles are applied), without\nactually mounting it.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>.if&nbsp;S</b><i>s</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>True if style&nbsp;<i>s</i> has been registered. Font\ntranslation is applied.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <b>tr</b>\nrequest can now map characters onto <b>\\~</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The space width\nemitted by the <b>\\|</b> and <b>\\^</b> escape sequences can\nbe controlled on a per-font basis. If there is a glyph named\n<b>\\|</b> or <b>\\^</b>, respectively (note the leading\nbackslash), defined in the current font file, use this\nglyph&rsquo;s width instead of the default value.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">It is now\npossible to have whitespace between the first and second dot\n(or the name of the ending macro) to end a macro definition.\nExample:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">.if t \\{\\ <br>\n. de bar <br>\n. nop Hello, I&rsquo;m &rsquo;bar&rsquo;. <br>\n. . <br>\n.\\}</p>\n\n<h2>INTERMEDIATE OUTPUT FORMAT\n<a name=\"INTERMEDIATE OUTPUT FORMAT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This section\ndescribes the format output by GNU troff. The output format\nused by GNU troff is very similar to that used by Unix\ndevice-independent troff. Only the differences are\ndocumented here.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Units</b>\n<br>\nThe argument to the <b>s&nbsp;</b>command is in scaled\npoints (units of points/<i>n</i>, where <i>n</i> is the\nargument to the <b>sizescale</b> command in the DESC file).\nThe argument to the <b>x&nbsp;Height</b> command is also in\nscaled points.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Text\nCommands</b></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p style=\"margin-top: 1em\"><b>N</b><i>n</i></p></td>\n<td width=\"8%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">Print glyph with\nindex&nbsp;<i>n</i> (a non-negative integer) of the current\nfont.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\n<b>tcommand</b> line is present in the DESC file, troff uses\nthe following two commands.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>t</b><i>xxx</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\"><i>xxx</i> is any sequence of\ncharacters terminated by a space or a newline (to be more\nprecise, it is a sequence of glyphs which are accessed with\nthe corresponding characters); the first character should be\nprinted at the current position, the current horizontal\nposition should be increased by the width of the first\ncharacter, and so on for each character. The width of the\nglyph is that given in the font file, appropriately scaled\nfor the current point size, and rounded so that it is a\nmultiple of the horizontal resolution. Special characters\ncannot be printed using this command.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>u</b><i>n&nbsp;xxx</i></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>This is same as the <b>t&nbsp;</b>command except that\nafter printing each character, the current horizontal\nposition is increased by the sum of the width of that\ncharacter and&nbsp;<i>n</i>.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that\nsingle characters can have the eighth bit set, as can the\nnames of fonts and special characters.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The names of\nglyphs and fonts can be of arbitrary length; drivers should\nnot assume that they are only two characters long.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When a glyph is\nto be printed, that glyph is always in the current font.\nUnlike device-independent troff, it is not necessary for\ndrivers to search special fonts to find a glyph.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For color\nsupport, some new commands have been added: <b><br>\nmc</b> <i>cyan magenta yellow</i></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"3%\">\n\n\n<p><b>md</b></p></td>\n<td width=\"86%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>mg</b> <i>gray</i> <b><br>\nmk</b> <i>cyan magenta yellow black</i> <b><br>\nmr</b> <i>red green blue</i></p>\n\n<p style=\"margin-left:22%;\">Set the color components of the\ncurrent drawing color, using various color schemes.\n<b>md</b> resets the drawing color to the default value. The\narguments are integers in the range 0 to 65536.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<b>x&nbsp;</b>device control command has been extended.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>x u</b> <i>n</i></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>If <i>n</i> is&nbsp;1, start underlining of spaces. If\n<i>n</i> is&nbsp;0, stop underlining of spaces. This is\nneeded for the <b>cu</b> request in nroff mode and is\nignored otherwise.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Drawing\nCommands</b> <br>\nThe <b>D</b> drawing command has been extended. These\nextensions are not used by GNU pic if the <b>-n</b> option\nis given.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>Df</b> <i>n</i>\\n</p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">Set the shade of gray to be used\nfor filling solid objects to <i>n</i>; <i>n</i> must be an\ninteger between 0 and 1000, where 0 corresponds solid white\nand 1000 to solid black, and values in between correspond to\nintermediate shades of gray. This applies only to solid\ncircles, solid ellipses and solid polygons. By default, a\nlevel of 1000 is used. Whatever color a solid object has, it\nshould completely obscure everything beneath it. A value\ngreater than 1000 or less than&nbsp;0 can also be used: this\nmeans fill with the shade of gray that is currently being\nused for lines and text. Normally this is black, but some\ndrivers may provide a way of changing this.</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The\ncorresponding <b>\\D&rsquo;f</b><i>...</i><b>&rsquo;</b>\ncommand shouldn&rsquo;t be used since its argument is always\nrounded to an integer multiple of the horizontal resolution\nwhich can lead to surprising results.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p style=\"margin-top: 1em\"><b>DC</b> <i>d</i>\\n</p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p style=\"margin-top: 1em\">Draw a solid circle with a\ndiameter of <i>d</i> with the leftmost point at the current\nposition.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>DE</b> <i>dx dy</i>\\n</p>\n\n<p style=\"margin-left:22%;\">Draw a solid ellipse with a\nhorizontal diameter of <i>dx</i> and a vertical diameter of\n<i>dy</i> with the leftmost point at the current\nposition.</p>\n\n\n<p align=\"center\"><img src=\"grohtml-3548361.png\" alt=\"Image grohtml-3548361.png\"></p>\n\n<p style=\"margin-left:11%;\"><b>Dp</b> $dx sub 1$ $dy sub 1$\n$dx sub 2$ $dy sub 2$ $...$ $dx sub n$ $dy sub <br>\nn$\\n</p>\n\n<p style=\"margin-left:22%;\">Draw a polygon with, for $i = 1\n,..., n+1$, the <i>i</i>-th vertex at the current position\n$+ sum from j=1 to i-1 ( dx sub j , dy sub j )$. At the\nmoment, GNU pic only uses this command to generate triangles\nand rectangles.</p>\n\n<p style=\"margin-left:11%;\"><b>DP</b> $dx sub 1$ $dy sub 1$\n$dx sub 2$ $dy sub 2$ $...$ $dx sub n$ $dy sub <br>\nn$\\n</p>\n\n<p style=\"margin-left:22%;\">Like <b>Dp</b> but draw a solid\nrather than outlined polygon.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>Dt</b> <i>n</i>\\n</p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Set the current line thickness to <i>n&nbsp;</i>machine\nunits. Traditionally Unix troff drivers use a line thickness\nproportional to the current point size; drivers should\ncontinue to do this if no <b>Dt</b> command has been given,\nor if a <b>Dt</b> command has been given with a negative\nvalue of&nbsp;<i>n</i>. A zero value of&nbsp;<i>n</i>\nselects the smallest available line thickness.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A difficulty\narises in how the current position should be changed after\nthe execution of these commands. This is not of great\nimportance since the code generated by GNU pic does not\ndepend on this. Given a drawing command of the form</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>\\D&rsquo;</b><i>c</i>\n$x sub 1$ $y sub 1$ $x sub 2$ $y sub 2$ $...$ $x sub n$ $y\nsub n$<b>&rsquo;</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">where <i>c</i>\nis not one of <b>c</b>, <b>e</b>, <b>l</b>, <b>a</b>,\nor&nbsp;<b>~</b>, Unix troff treats each of the $x sub i$ as\na horizontal quantity, and each of the $y sub i$ as a\nvertical quantity and assumes that the width of the drawn\nobject is $sum from i=1 to n x sub i$, and that the height\nis $sum from i=1 to n y sub i$. (The assumption about the\nheight can be seen by examining the <b>st</b> and <b>sb</b>\nregisters after using such a <b>D&nbsp;</b>command in a\n<b>\\w</b> escape sequence). This rule also holds for all the\noriginal drawing commands with the exception of <b>De</b>.\nFor the sake of compatibility GNU troff also follows this\nrule, even though it produces an ugly result in the case of\nthe <b>Dt</b> and <b>Df</b>, and, to a lesser extent,\n<b>DE</b> commands. Thus after executing a\n<b>D&nbsp;</b>command of the form</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>D</b><i>c</i>\n$x sub 1$ $y sub 1$ $x sub 2$ $y sub 2$ $...$ $x sub n$ $y\nsub n$\\n</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">the current\nposition should be increased by $( sum from i=1 to n x sub i\n, sum from i=1 to n y sub i )$.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Another set of\nextensions is <b><br>\nDFc</b> <i>cyan magenta yellow</i>\\n</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>DFd</b>\\n</p></td>\n<td width=\"82%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>DFg</b> <i>gray</i>\\n\n<b><br>\nDFk</b> <i>cyan magenta yellow black</i>\\n <b><br>\nDFr</b> <i>red green blue</i>\\n</p>\n\n<p style=\"margin-left:22%;\">Set the color components of the\nfilling color similar to the <b>m&nbsp;</b>commands\nabove.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The current\nposition isn&rsquo;t changed by those colour commands\n(contrary to <b>Df</b>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Device\nControl Commands</b> <br>\nThere is a continuation convention which permits the\nargument to the <b>x&nbsp;X</b> command to contain newlines:\nwhen outputting the argument to the <b>x&nbsp;X</b> command,\nGNU troff follows each newline in the argument with a\n<b>+</b> character (as usual, it terminates the entire\nargument with a newline); thus if the line after the line\ncontaining the <b>x&nbsp;X</b> command starts with <b>+</b>,\nthen the newline ending the line containing the\n<b>x&nbsp;X</b> command should be treated as part of the\nargument to the <b>x&nbsp;X</b> command, the <b>+</b> should\nbe ignored, and the part of the line following the <b>+</b>\nshould be treated like the part of the line following the\n<b>x&nbsp;X</b> command.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The first three\noutput commands are guaranteed to be:</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>x&nbsp;T&nbsp;</b><i>device</i>\n<b><br>\nx&nbsp;res&nbsp;</b><i>n&nbsp;h&nbsp;v</i> <b><br>\nx init</b></p>\n\n<h2>INCOMPATIBILITIES\n<a name=\"INCOMPATIBILITIES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">In spite of the\nmany extensions, groff has retained compatibility to\nclassical troff to a large degree. For the cases where the\nextensions lead to collisions, a special compatibility mode\nwith the restricted, old functionality was created for\ngroff.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Groff\nLanguage</b> <i><br>\ngroff</i> provides a <b>compatibility mode</b> that allows\nthe processing of roff code written for classical\n<b>troff</b> or for other implementations of roff in a\nconsistent way.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Compatibility\nmode can be turned on with the <b>-C</b> command-line\noption, and turned on or off with the <b>.cp</b> request.\nThe number register <b>\\n(.C</b> is&nbsp;1 if compatibility\nmode is on, 0&nbsp;otherwise.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This became\nnecessary because the GNU concept for long names causes some\nincompatibilities. <i>Classical troff</i> interprets</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>.dsabcd</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">as defining a\nstring <b>ab</b> with contents <b>cd</b>. In <i>groff</i>\nmode, this is considered as a call of a macro named\n<b>dsabcd</b>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Also\n<i>classical troff</i> interprets <b>\\*[</b> or <b>\\n[</b>\nas references to a string or number register\ncalled&nbsp;<b>[</b> while <i>groff</i> takes this as the\nstart of a long name.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In\n<i>compatibility mode</i>, groff interprets these things in\nthe traditional way; so long names are not recognized.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">On the other\nhand, groff in <i>GNU native mode</i> does not allow to use\nthe single-character escapes <b>\\\\</b> (backslash),\n<b>\\|</b> (vertical bar), <b>\\^</b> (caret), <b>\\&amp;</b>\n(ampersand), <b>\\{</b> (opening brace), <b>\\}</b> (closing\nbrace), &rsquo;<b>\\&nbsp;</b>&rsquo; (space), <b>\\'</b>\n(single quote), <b>\\`</b> (backquote), <b>\\-</b> (minus),\n<b>\\_</b> (underline), <b>\\!</b> (bang), <b>\\%</b>\n(percent), and <b>\\c</b> (character&nbsp;c) in names of\nstrings, macros, diversions, number registers, fonts or\nenvironments, whereas <i>classical troff</i> does.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <b>\\A</b>\nescape sequence can be helpful in avoiding these escape\nsequences in names.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Fractional\npoint sizes cause one noteworthy incompatibility. In\n<i>classical troff</i>, the <b>ps</b> request ignores scale\nindicators and so</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>.ps&nbsp;10u</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">sets the point\nsize to 10&nbsp;points, whereas in groff native mode the\npoint size is set to 10&nbsp;scaled points.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In\n<i>groff</i>, there is a fundamental difference between\nunformatted input characters, and formatted output\ncharacters (glyphs). Everything that affects how a glyph is\noutput is stored with the glyph; once a glyph has been\nconstructed it is unaffected by any subsequent requests that\nare executed, including the <b>bd</b>, <b>cs</b>,\n<b>tkf</b>, <b>tr</b>, or <b>fp</b> requests.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Normally glyphs\nare constructed from input characters at the moment\nimmediately before the glyph is added to the current output\nline. Macros, diversions and strings are all, in fact, the\nsame type of object; they contain lists of input characters\nand glyphs in any combination.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Special\ncharacters can be both; before being added to the output,\nthey act as input entities, afterwards they denote\nglyphs.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A glyph does\nnot behave like an input character for the purposes of macro\nprocessing; it does not inherit any of the special\nproperties that the input character from which it was\nconstructed might have had. The following example makes\nthings clearer.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">.di x <br>\n\\\\\\\\ <br>\n.br <br>\n.di <br>\n.x</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">With <i>GNU\ntroff</i> this is printed as <b>\\\\</b>. So each pair of\ninput backslashes &rsquo;\\\\&rsquo; is turned into a single\noutput backslash glyph &rsquo;\\&rsquo; and the resulting\noutput backslashes are not interpreted as escape characters\nwhen they are reread.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Classical\ntroff</i> would interpret them as escape characters when\nthey were reread and would end up printing a single\nbackslash &rsquo;\\&rsquo;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In GNU, the\ncorrect way to get a printable version of the backslash\ncharacter &rsquo;\\&rsquo; is the <b>\\(rs</b> escape\nsequence, but classical troff does not provide a clean\nfeature for getting a non-syntactical backslash. A close\nmethod is the printable version of the current escape\ncharacter using the <b>\\e</b> escape sequence; this works if\nthe current escape character is not redefined. It works in\nboth GNU mode and compatibility mode, while dirty tricks\nlike specifying a sequence of multiple backslashes do not\nwork reliably; for the different handling in diversions,\nmacro definitions, or text mode quickly leads to a confusion\nabout the necessary number of backslashes.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">To store an\nescape sequence in a diversion that is interpreted when the\ndiversion is reread, either the traditional <b>\\!</b>\ntransparent output facility or the new <b>\\?</b> escape\nsequence can be used.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Intermediate\nOutput</b> <br>\nThe groff intermediate output format is in a state of\nevolution. So far it has some incompatibilities, but it is\nintended to establish a full compatibility to the classical\ntroff output format. Actually the following\nincompatibilities exist:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p>The positioning after the drawing of the polygons\nconflicts with the classical definition.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"2%\"></td>\n<td width=\"86%\">\n\n\n<p>The intermediate output cannot be rescaled to other\ndevices as classical &rsquo;device-independent&rsquo; troff\ndid.</p> </td></tr>\n</table>\n\n<h2>AUTHORS\n<a name=\"AUTHORS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This document\nwas written by <a href=\"mailto:jjc@jclark.com\">James\nClark</a> and modified by <a href=\"mailto:wl@gnu.org\">Werner\nLemberg</a> and\n<a href=\"mailto:groff-bernd.warken-72@web.de\">Bernd\nWarken</a>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>Groff: The\nGNU Implementation of troff</i>, by Trent A. Fisher and\nWerner Lemberg, is the primary <i>groff</i> manual. You can\nbrowse it interactively with &ldquo;info groff&rdquo;.\n<b><br>\ngroff</b>(1)</p>\n\n<p style=\"margin-left:22%;\">A list of all documentation\naround <i>groff</i>.</p>\n\n<p style=\"margin-left:11%;\"><a href=\"https://man.page/7/groff\">groff(7)</a></p>\n\n<p style=\"margin-left:22%;\">A description of the\n<i>groff</i> language, including a short, but complete\nreference of all predefined requests, registers, and escapes\nof plain <i>groff</i>. From the command line, this is called\nusing</p>\n\n<p style=\"margin-left:32%; margin-top: 1em\">man 7 groff</p>\n\n<p style=\"margin-left:11%;\"><a href=\"https://man.page/7/roff\">roff(7)</a></p>\n\n<p style=\"margin-left:22%;\">A survey of <i>roff</i>\nsystems, including pointers to further historical\ndocumentation.</p>\n\n<p style=\"margin-left:11%;\">[<i>CSTR&nbsp;#54</i>]</p>\n\n<p style=\"margin-left:22%;\">The <i>Nroff/Troff User&rsquo;s\nManual</i> by <i>J. F. Ossanna</i> of 1976 in the revision\nof <i>Brian Kernighan</i> of 1992, being the\n<a href=\"http://cm.bell-labs.com/cm/cs/cstr/54.ps.gz\">classical\ntroff documentation</a>.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#GROFF LANGUAGE\">GROFF LANGUAGE</a>","<a href=\"#INTERMEDIATE OUTPUT FORMAT\">INTERMEDIATE OUTPUT FORMAT</a>","<a href=\"#INCOMPATIBILITIES\">INCOMPATIBILITIES</a>","<a href=\"#AUTHORS\">AUTHORS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>"],"level":7}