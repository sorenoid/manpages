{"name":"feature_test_macros","body":"\n\n<h1 align=\"center\">FEATURE_TEST_MACROS</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">feature_test_macros\n- feature test macros</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Feature test\nmacros allow the programmer to control the definitions that\nare exposed by system header files when a program is\ncompiled.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>NOTE:</b> In\norder to be effective, a feature test macro <i>must be\ndefined before including any header files</i>. This can be\ndone either in the compilation command (<i>cc\n-DMACRO=value</i>) or by defining the macro within the\nsource code before including any headers. The requirement\nthat the macro must be defined before including any header\nfile exists because header files may freely include one\nanother. Thus, for example, in the following lines, defining\nthe <b>_GNU_SOURCE</b> macro may have no effect because the\nheader <i>&lt;abc.h&gt;</i> itself includes\n<i>&lt;xyz.h&gt;</i> (POSIX explicitly allows this):</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">#include\n&lt;abc.h&gt; <br>\n#define _GNU_SOURCE <br>\n#include &lt;xyz.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Some feature\ntest macros are useful for creating portable applications,\nby preventing nonstandard definitions from being exposed.\nOther macros can be used to expose nonstandard definitions\nthat are not exposed by default.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The precise\neffects of each of the feature test macros described below\ncan be ascertained by inspecting the\n<i>&lt;features.h&gt;</i> header file. <b>Note</b>:\napplications do <i>not</i> need to directly include\n<i>&lt;features.h&gt;</i>; indeed, doing so is actively\ndiscouraged. See NOTES.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Specification\nof feature test macro requirements in manual pages</b> <br>\nWhen a function requires that a feature test macro is\ndefined, the manual page SYNOPSIS typically includes a note\nof the following form (this example from the <a href=\"https://man.page/2/acct\">acct(2)</a>\nmanual page):</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>#include\n&lt;unistd.h&gt;</b></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>int\nacct(const char *</b><i>filename</i><b>);</b></p>\n\n<p style=\"margin-left:15%; margin-top: 1em\">Feature Test\nMacro Requirements for glibc (see <b><br>\nfeature_test_macros</b>(7)):</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>acct</b>():\n_BSD_SOURCE || (_XOPEN_SOURCE &amp;&amp;\n_XOPEN_SOURCE&nbsp;&lt;&nbsp;500)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <b>||</b>\nmeans that in order to obtain the declaration of\n<a href=\"https://man.page/2/acct\">acct(2)</a> from <i>&lt;unistd.h&gt;</i>, <i>either</i>\nof the following macro definitions must be made before\nincluding any header files:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">#define\n_BSD_SOURCE <br>\n#define _XOPEN_SOURCE /* or any value &lt; 500 */</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Alternatively,\nequivalent definitions can be included in the compilation\ncommand:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">cc\n-D_BSD_SOURCE <br>\ncc -D_XOPEN_SOURCE # Or any value &lt; 500</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that, as\ndescribed below, <b>some feature test macros are defined by\ndefault</b>, so that it may not always be necessary to\nexplicitly specify the feature test macro(s) shown in the\nSYNOPSIS.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">In a few cases,\nmanual pages use a shorthand for expressing the feature test\nmacro requirements (this example from\n<a href=\"https://man.page/2/readahead\">readahead(2)</a>):</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>#define\n_GNU_SOURCE <br>\n#include &lt;fcntl.h&gt;</b></p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><b>ssize_t\nreadahead(int</b> <i>fd</i><b>, off64_t\n*</b><i>offset</i><b>, size_t</b> <i>count</i><b>);</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This format is\nemployed in cases where only a single feature test macro can\nbe used to expose the function declaration, and that macro\nis not defined by default.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Feature test\nmacros understood by glibc</b> <br>\nThe paragraphs below explain how feature test macros are\nhandled in Linux glibc 2.<i>x</i>, <i>x</i> &gt; 0.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">First, though a\nsummary of a few details for the impatient:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>The macros that you most likely need to use in modern\nsource code are <b>_POSIX_C_SOURCE</b> (for definitions from\nvarious versions of POSIX.1), <b>_XOPEN_SOURCE</b> (for\ndefinitions from various versions of SUS),\n<b>_GNU_SOURCE</b> (for GNU and/or Linux specific stuff),\nand <b>_DEFAULT_SOURCE</b> (to get definitions that would\nnormally be provided by default).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>Certain macros are defined with default values. Thus,\nalthough one or more macros may be indicated as being\nrequired in the SYNOPSIS of a man page, it may not be\nnecessary to define them explicitly. Full details of the\ndefaults are given later in this man page.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>Defining <b>_XOPEN_SOURCE</b> with a value of 600 or\ngreater produces the same effects as defining\n<b>_POSIX_C_SOURCE</b> with a value of 200112L or greater.\nWhere one sees</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\">_POSIX_C_SOURCE\n&gt;= 200112L</p>\n\n<p style=\"margin-left:15%; margin-top: 1em\">in the feature\ntest macro requirements in the SYNOPSIS of a man page, it is\nimplicit that the following has the same effect:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">_XOPEN_SOURCE\n&gt;= 600</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p style=\"margin-top: 1em\">Defining <b>_XOPEN_SOURCE</b>\nwith a value of 700 or greater produces the same effects as\ndefining <b>_POSIX_C_SOURCE</b> with a value of 200809L or\ngreater. Where one sees</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\">_POSIX_C_SOURCE\n&gt;= 200809L</p>\n\n<p style=\"margin-left:15%; margin-top: 1em\">in the feature\ntest macro requirements in the SYNOPSIS of a man page, it is\nimplicit that the following has the same effect:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">_XOPEN_SOURCE\n&gt;= 700</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Linux glibc\nunderstands the following feature test macros: <b><br>\n__STRICT_ANSI__</b></p>\n\n<p style=\"margin-left:22%;\">ISO Standard C. This macro is\nimplicitly defined by <a href=\"https://man.page/1/gcc\">gcc(1)</a> when invoked with, for\nexample, the <i>-std=c99</i> or <i>-ansi</i> flag.</p>\n\n<p style=\"margin-left:11%;\"><b>_POSIX_C_SOURCE</b></p>\n\n<p style=\"margin-left:22%;\">Defining this macro causes\nheader files to expose definitions as follows:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>The value 1 exposes definitions conforming to\nPOSIX.1-1990 and ISO C (1990).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>The value 2 or greater additionally exposes definitions\nfor POSIX.2-1992.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>The value 199309L or greater additionally exposes\ndefinitions for POSIX.1b (real-time extensions).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>The value 199506L or greater additionally exposes\ndefinitions for POSIX.1c (threads).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>(Since glibc 2.3.3) The value 200112L or greater\nadditionally exposes definitions corresponding to the\nPOSIX.1-2001 base specification (excluding the XSI\nextension). This value also causes C95 (since glibc 2.12)\nand C99 (since glibc 2.10) features to be exposed (in other\nwords, the equivalent of defining\n<b>_ISOC99_SOURCE</b>).</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>(Since glibc 2.10) The value 200809L or greater\nadditionally exposes definitions corresponding to the\nPOSIX.1-2008 base specification (excluding the XSI\nextension).</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>_POSIX_SOURCE</b></p>\n\n<p style=\"margin-left:22%;\">Defining this obsolete macro\nwith any value is equivalent to defining\n<b>_POSIX_C_SOURCE</b> with the value 1.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Since this\nmacro is obsolete, its usage is generally not documented\nwhen discussing feature test macro requirements in the man\npages.</p>\n\n<p style=\"margin-left:11%;\"><b>_XOPEN_SOURCE</b></p>\n\n<p style=\"margin-left:22%;\">Defining this macro causes\nheader files to expose definitions as follows:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>Defining with any value exposes definitions conforming\nto POSIX.1, POSIX.2, and XPG4.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>The value 500 or greater additionally exposes\ndefinitions for SUSv2 (UNIX 98).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>(Since glibc 2.2) The value 600 or greater additionally\nexposes definitions for SUSv3 (UNIX 03; i.e., the\nPOSIX.1-2001 base specification plus the XSI extension) and\nC99 definitions.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>(Since glibc 2.10) The value 700 or greater additionally\nexposes definitions for SUSv4 (i.e., the POSIX.1-2008 base\nspecification plus the XSI extension).</p></td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">If\n<b>__STRICT_ANSI__</b> is not defined, or\n<b>_XOPEN_SOURCE</b> is defined with a value greater than or\nequal to 500 <i>and</i> neither <b>_POSIX_SOURCE</b> nor\n<b>_POSIX_C_SOURCE</b> is explicitly defined, then the\nfollowing macros are implicitly defined:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p style=\"margin-top: 1em\"><b>_POSIX_SOURCE</b> is defined\nwith the value 1.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p><b>_POSIX_C_SOURCE</b> is defined, according to the\nvalue of <b>_XOPEN_SOURCE</b>:</p></td></tr>\n</table>\n\n<p style=\"margin-left:26%;\"><b>_XOPEN_SOURCE</b> &lt;\n500</p>\n\n<p style=\"margin-left:37%;\"><b>_POSIX_C_SOURCE</b> is\ndefined with the value 2.</p>\n\n<p style=\"margin-left:26%;\">500 &lt;= <b>_XOPEN_SOURCE</b>\n&lt; 600</p>\n\n<p style=\"margin-left:37%;\"><b>_POSIX_C_SOURCE</b> is\ndefined with the value 199506L.</p>\n\n<p style=\"margin-left:26%;\">600 &lt;= <b>_XOPEN_SOURCE</b>\n&lt; 700</p>\n\n<p style=\"margin-left:37%;\"><b>_POSIX_C_SOURCE</b> is\ndefined with the value 200112L.</p>\n\n<p style=\"margin-left:26%;\">700 &lt;= <b>_XOPEN_SOURCE</b>\n(since glibc 2.10)</p>\n\n<p style=\"margin-left:37%;\"><b>_POSIX_C_SOURCE</b> is\ndefined with the value 200809L.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">In addition,\ndefining <b>_XOPEN_SOURCE</b> with a value of 500 or greater\nproduces the same effects as defining\n<b>_XOPEN_SOURCE_EXTENDED</b>.</p>\n\n\n<p style=\"margin-left:11%;\"><b>_XOPEN_SOURCE_EXTENDED</b></p>\n\n<p style=\"margin-left:22%;\">If this macro is defined,\n<i>and</i> <b>_XOPEN_SOURCE</b> is defined, then expose\ndefinitions corresponding to the XPG4v2 (SUSv1) UNIX\nextensions (UNIX 95). Defining <b>_XOPEN_SOURCE</b> with a\nvalue of 500 or more also produces the same effect as\ndefining <b>_XOPEN_SOURCE_EXTENDED</b>. Use of\n<b>_XOPEN_SOURCE_EXTENDED</b> in new source code should be\navoided.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Since defining\n<b>_XOPEN_SOURCE</b> with a value of 500 or more has the\nsame effect as defining <b>_XOPEN_SOURCE_EXTENDED</b>, the\nlatter (obsolete) feature test macro is generally not\ndescribed in the SYNOPSIS in man pages.</p>\n\n<p style=\"margin-left:11%;\"><b>_ISOC99_SOURCE</b> (since\nglibc 2.1.3)</p>\n\n<p style=\"margin-left:22%;\">Exposes declarations consistent\nwith the ISO C99 standard.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Earlier glibc\n2.1.x versions recognized an equivalent macro named\n<b>_ISOC9X_SOURCE</b> (because the C99 standard had not then\nbeen finalized). Although the use of this macro is obsolete,\nglibc continues to recognize it for backward\ncompatibility.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Defining\n<b>_ISOC99_SOURCE</b> also exposes ISO C (1990) Amendment 1\n(&quot;C95&quot;) definitions. (The primary change in C95\nwas support for international character sets.)</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Invoking the C\ncompiler with the option <i>-std=c99</i> produces the same\neffects as defining this macro.</p>\n\n<p style=\"margin-left:11%;\"><b>_ISOC11_SOURCE</b> (since\nglibc 2.16)</p>\n\n<p style=\"margin-left:22%;\">Exposes declarations consistent\nwith the ISO C11 standard. Defining this macro also enables\nC99 and C95 features (like <b>_ISOC99_SOURCE</b>).</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Invoking the C\ncompiler with the option <i>-std=c11</i> produces the same\neffects as defining this macro.</p>\n\n<p style=\"margin-left:11%;\"><b>_LARGEFILE64_SOURCE</b></p>\n\n<p style=\"margin-left:22%;\">Expose definitions for the\nalternative API specified by the LFS (Large File Summit) as\na &quot;transitional extension&quot; to the Single UNIX\nSpecification. (See\n<a href=\"http://opengroup.org/platform/lfs.html\">http://opengroup.org/platform/lfs.html</a>.)\nThe alternative API consists of a set of new objects (i.e.,\nfunctions and types) whose names are suffixed with\n&quot;64&quot; (e.g., <i>off64_t</i> versus <i>off_t</i>,\n<b>lseek64</b>() versus <b>lseek</b>(), etc.). New programs\nshould not employ this macro; instead\n<i>_FILE_OFFSET_BITS=64</i> should be employed.</p>\n\n<p style=\"margin-left:11%;\"><b>_LARGEFILE_SOURCE</b></p>\n\n<p style=\"margin-left:22%;\">This macro was historically\nused to expose certain functions (specifically\n<a href=\"https://man.page/3/fseeko\">fseeko(3)</a> and <a href=\"https://man.page/3/ftello\">ftello(3)</a>) that address\nlimitations of earlier APIs (<a href=\"https://man.page/3/fseek\">fseek(3)</a> and\n<a href=\"https://man.page/3/ftell\">ftell(3)</a>) that use <i>long</i> for file offsets. This\nmacro is implicitly defined if <b>_XOPEN_SOURCE</b> is\ndefined with a value greater than or equal to 500. New\nprograms should not employ this macro; defining\n<b>_XOPEN_SOURCE</b> as just described or defining\n<b>_FILE_OFFSET_BITS</b> with the value 64 is the preferred\nmechanism to achieve the same result.</p>\n\n<p style=\"margin-left:11%;\"><b>_FILE_OFFSET_BITS</b></p>\n\n<p style=\"margin-left:22%;\">Defining this macro with the\nvalue 64 automatically converts references to 32-bit\nfunctions and data types related to file I/O and filesystem\noperations into references to their 64-bit counterparts.\nThis is useful for performing I/O on large files (&gt; 2\nGigabytes) on 32-bit systems. (Defining this macro permits\ncorrectly written programs to use large files with only a\nrecompilation being required.)</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">64-bit systems\nnaturally permit file sizes greater than 2 Gigabytes, and on\nthose systems this macro has no effect.</p>\n\n<p style=\"margin-left:11%;\"><b>_BSD_SOURCE</b> (deprecated\nsince glibc 2.20)</p>\n\n<p style=\"margin-left:22%;\">Defining this macro with any\nvalue causes header files to expose BSD-derived\ndefinitions.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">In glibc\nversions up to and including 2.18, defining this macro also\ncauses BSD definitions to be preferred in some situations\nwhere standards conflict, unless one or more of\n<b>_SVID_SOURCE</b>, <b>_POSIX_SOURCE</b>,\n<b>_POSIX_C_SOURCE</b>, <b>_XOPEN_SOURCE</b>,\n<b>_XOPEN_SOURCE_EXTENDED</b>, or <b>_GNU_SOURCE</b> is\ndefined, in which case BSD definitions are disfavored. Since\nglibc 2.19, <b>_BSD_SOURCE</b> no longer causes BSD\ndefinitions to be preferred in case of conflicts.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Since glibc\n2.20, this macro is deprecated. It now has the same effect\nas defining <b>_DEFAULT_SOURCE</b>, but generates a\ncompile-time warning (unless <b>_DEFAULT_SOURCE</b> is also\ndefined). Use <b>_DEFAULT_SOURCE</b> instead. To allow code\nthat requires <b>_BSD_SOURCE</b> in glibc 2.19 and earlier\nand <b>_DEFAULT_SOURCE</b> in glibc 2.20 and later to\ncompile without warnings, define <i>both</i>\n<b>_BSD_SOURCE</b> and <b>_DEFAULT_SOURCE</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>_SVID_SOURCE</b> (deprecated\nsince glibc 2.20)</p>\n\n<p style=\"margin-left:22%;\">Defining this macro with any\nvalue causes header files to expose System V-derived\ndefinitions. (SVID == System V Interface Definition; see\n<a href=\"https://man.page/7/standards\">standards(7)</a>.)</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Since glibc\n2.20, this macro is deprecated in the same fashion as\n<b>_BSD_SOURCE</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>_DEFAULT_SOURCE</b> (since\nglibc 2.19)</p>\n\n<p style=\"margin-left:22%;\">This macro can be defined to\nensure that the &quot;default&quot; definitions are provided\neven when the defaults would otherwise be disabled, as\nhappens when individual macros are explicitly defined, or\nthe compiler is invoked in one of its &quot;standard&quot;\nmodes (e.g., <i>cc&nbsp;-std=c99</i>). Defining\n<b>_DEFAULT_SOURCE</b> without defining other individual\nmacros or invoking the compiler in one of its\n&quot;standard&quot; modes has no effect.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The\n&quot;default&quot; definitions comprise those required by\nPOSIX.1-2008 and ISO C99, as well as various definitions\noriginally derived from BSD and System V. On glibc 2.19 and\nearlier, these defaults were approximately equivalent to\nexplicitly defining the following:</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">cc\n-D_BSD_SOURCE -D_SVID_SOURCE -D_POSIX_C_SOURCE=200809</p>\n\n<p style=\"margin-left:11%;\"><b>_ATFILE_SOURCE</b> (since\nglibc 2.4)</p>\n\n<p style=\"margin-left:22%;\">Defining this macro with any\nvalue causes header files to expose declarations of a range\nof functions with the suffix &quot;at&quot;; see\n<a href=\"https://man.page/2/openat\">openat(2)</a>. Since glibc 2.10, this macro is also\nimplicitly defined if <b>_POSIX_C_SOURCE</b> is defined with\na value greater than or equal to 200809L.</p>\n\n<p style=\"margin-left:11%;\"><b>_GNU_SOURCE</b></p>\n\n<p style=\"margin-left:22%;\">Defining this macro (with any\nvalue) implicitly defines <b>_ATFILE_SOURCE</b>,\n<b>_LARGEFILE64_SOURCE</b>, <b>_ISOC99_SOURCE</b>,\n<b>_XOPEN_SOURCE_EXTENDED</b>, <b>_POSIX_SOURCE</b>,\n<b>_POSIX_C_SOURCE</b> with the value 200809L (200112L in\nglibc versions before 2.10; 199506L in glibc versions before\n2.5; 199309L in glibc versions before 2.1) and\n<b>_XOPEN_SOURCE</b> with the value 700 (600 in glibc\nversions before 2.10; 500 in glibc versions before 2.2). In\naddition, various GNU-specific extensions are also\nexposed.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Since glibc\n2.19, defining <b>_GNU_SOURCE</b> also has the effect of\nimplicitly defining <b>_DEFAULT_SOURCE</b>. In glibc\nversions before 2.20, defining <b>_GNU_SOURCE</b> also had\nthe effect of implicitly defining <b>_BSD_SOURCE</b> and\n<b>_SVID_SOURCE</b>.</p>\n\n<p style=\"margin-left:11%;\"><b>_REENTRANT</b></p>\n\n<p style=\"margin-left:22%;\">Historically, on various C\nlibraries it was necessary to define this macro in all\nmultithreaded code. (Some C libraries may still require\nthis.) In glibc, this macro also exposed definitions of\ncertain reentrant functions.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">However, glibc\nhas been thread-safe by default for many years; since glibc\n2.3, the only effect of defining <b>_REENTRANT</b> has been\nto enable one or two of the same declarations that are also\nenabled by defining <b>_POSIX_C_SOURCE</b> with a value of\n199606L or greater.</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>_REENTRANT</b>\nis now obsolete. In glibc 2.25 and later, defining\n<b>_REENTRANT</b> is equivalent to defining\n<b>_POSIX_C_SOURCE</b> with the value 199606L. If a higher\nPOSIX conformance level is selected by any other means (such\nas <b>_POSIX_C_SOURCE</b> itself, <b>_XOPEN_SOURCE</b>,\n<b>_DEFAULT_SOURCE</b>, or <b>_GNU_SOURCE</b>), then\ndefining <b>_REENTRANT</b> has no effect.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">This macro is\nautomatically defined if one compiles with\n<i>cc&nbsp;-pthread</i>.</p>\n\n<p style=\"margin-left:11%;\"><b>_THREAD_SAFE</b></p>\n\n<p style=\"margin-left:22%;\">Synonym for the (deprecated)\n<b>_REENTRANT</b>, provided for compatibility with some\nother implementations.</p>\n\n<p style=\"margin-left:11%;\"><b>_FORTIFY_SOURCE</b> (since\nglibc 2.3.4)</p>\n\n<p style=\"margin-left:22%;\">Defining this macro causes some\nlightweight checks to be performed to detect some buffer\noverflow errors when employing various string and memory\nmanipulation functions (for example, <a href=\"https://man.page/3/memcpy\">memcpy(3)</a>,\n<a href=\"https://man.page/3/memset\">memset(3)</a>, <a href=\"https://man.page/3/stpcpy\">stpcpy(3)</a>, <a href=\"https://man.page/3/strcpy\">strcpy(3)</a>,\n<a href=\"https://man.page/3/strncpy\">strncpy(3)</a>, <a href=\"https://man.page/3/strcat\">strcat(3)</a>, <a href=\"https://man.page/3/strncat\">strncat(3)</a>,\n<a href=\"https://man.page/3/sprintf\">sprintf(3)</a>, <a href=\"https://man.page/3/snprintf\">snprintf(3)</a>, <a href=\"https://man.page/3/vsprintf\">vsprintf(3)</a>,\n<a href=\"https://man.page/3/vsnprintf\">vsnprintf(3)</a>, <a href=\"https://man.page/3/gets\">gets(3)</a>, and wide character\nvariants thereof). For some functions, argument consistency\nis checked; for example, a check is made that <a href=\"https://man.page/2/open\">open(2)</a>\nhas been supplied with a <i>mode</i> argument when the\nspecified flags include <b>O_CREAT</b>. Not all problems are\ndetected, just some common cases.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">If\n<b>_FORTIFY_SOURCE</b> is set to 1, with compiler\noptimization level 1 (<i>gcc&nbsp;-O1</i>) and above, checks\nthat shouldn&rsquo;t change the behavior of conforming\nprograms are performed. With <b>_FORTIFY_SOURCE</b> set to\n2, some more checking is added, but some conforming programs\nmight fail.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Some of the\nchecks can be performed at compile time (via macros logic\nimplemented in header files), and result in compiler\nwarnings; other checks take place at run time, and result in\na run-time error if the check fails.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Use of this\nmacro requires compiler support, available with\n<a href=\"https://man.page/1/gcc\">gcc(1)</a> since version 4.0.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Default\ndefinitions, implicit definitions, and combining\ndefinitions</b> <br>\nIf no feature test macros are explicitly defined, then the\nfollowing feature test macros are defined by default:\n<b>_BSD_SOURCE</b> (in glibc 2.19 and earlier),\n<b>_SVID_SOURCE</b> (in glibc 2.19 and earlier),\n<b>_DEFAULT_SOURCE</b> (since glibc 2.19),\n<b>_POSIX_SOURCE</b>, and <b>_POSIX_C_SOURCE</b>=200809L\n(200112L in glibc versions before 2.10; 199506L in glibc\nversions before 2.4; 199309L in glibc versions before\n2.1).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If any of\n<b>__STRICT_ANSI__</b>, <b>_ISOC99_SOURCE</b>,\n<b>_ISOC11_SOURCE</b> (since glibc 2.18),\n<b>_POSIX_SOURCE</b>, <b>_POSIX_C_SOURCE</b>,\n<b>_XOPEN_SOURCE</b>, <b>_XOPEN_SOURCE_EXTENDED</b> (in\nglibc 2.11 and earlier), <b>_BSD_SOURCE</b> (in glibc 2.19\nand earlier), or <b>_SVID_SOURCE</b> (in glibc 2.19 and\nearlier) is explicitly defined, then <b>_BSD_SOURCE</b>,\n<b>_SVID_SOURCE</b>, and <b>_DEFAULT_SOURCE</b> are not\ndefined by default.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If\n<b>_POSIX_SOURCE</b> and <b>_POSIX_C_SOURCE</b> are not\nexplicitly defined, and either <b>__STRICT_ANSI__</b> is not\ndefined or <b>_XOPEN_SOURCE</b> is defined with a value of\n500 or more, then</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p><b>_POSIX_SOURCE</b> is defined with the value 1;\nand</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p><b>_POSIX_C_SOURCE</b> is defined with one of the\nfollowing values:</p></td></tr>\n</table>\n\n<p style=\"margin-left:15%;\">&bull;</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"2%\"></td>\n<td width=\"3%\"></td>\n<td width=\"80%\">\n\n\n<p style=\"margin-top: 1em\">2, if <b>_XOPEN_SOURCE</b> is\ndefined with a value less than 500;</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"2%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"80%\">\n\n\n<p>199506L, if <b>_XOPEN_SOURCE</b> is defined with a value\ngreater than or equal to 500 and less than 600; or</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"2%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"80%\">\n\n\n<p>(since glibc 2.4) 200112L, if <b>_XOPEN_SOURCE</b> is\ndefined with a value greater than or equal to 600 and less\nthan 700.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"2%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"80%\">\n\n\n<p>(Since glibc 2.10) 200809L, if <b>_XOPEN_SOURCE</b> is\ndefined with a value greater than or equal to 700.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"2%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"80%\">\n\n\n<p>Older versions of glibc do not know about the values\n200112L and 200809L for <b>_POSIX_C_SOURCE</b>, and the\nsetting of this macro will depend on the glibc version.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"15%\"></td>\n<td width=\"2%\">\n\n\n<p>&bull;</p></td>\n<td width=\"3%\"></td>\n<td width=\"80%\">\n\n\n<p>If <b>_XOPEN_SOURCE</b> is undefined, then the setting\nof <b>_POSIX_C_SOURCE</b> depends on the glibc version:\n199506L, in glibc versions before 2.4; 200112L, in glibc 2.4\nto 2.9; and 200809L, since glibc 2.10.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Multiple macros\ncan be defined; the results are additive.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX.1\nspecifies <b>_POSIX_C_SOURCE</b>, <b>_POSIX_SOURCE</b>, and\n<b>_XOPEN_SOURCE</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>_XOPEN_SOURCE_EXTENDED</b>\nwas specified by XPG4v2 (aka SUSv1), but is not present in\nSUSv2 and later. <b>_FILE_OFFSET_BITS</b> is not specified\nby any standard, but is employed on some other\nimplementations.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>_BSD_SOURCE</b>,\n<b>_SVID_SOURCE</b>, <b>_DEFAULT_SOURCE</b>,\n<b>_ATFILE_SOURCE</b>, <b>_GNU_SOURCE</b>,\n<b>_FORTIFY_SOURCE</b>, <b>_REENTRANT</b>, and\n<b>_THREAD_SAFE</b> are specific to Linux (glibc).</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>&lt;features.h&gt;</i>\nis a Linux/glibc-specific header file. Other systems have an\nanalogous file, but typically with a different name. This\nheader file is automatically included by other header files\nas required: it is not necessary to explicitly include it in\norder to employ feature test macros.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">According to\nwhich of the above feature test macros are defined,\n<i>&lt;features.h&gt;</i> internally defines various other\nmacros that are checked by other glibc header files. These\nmacros have names prefixed by two underscores (e.g.,\n<b>__USE_MISC</b>). Programs should <i>never</i> define\nthese macros directly: instead, the appropriate feature test\nmacro(s) from the list above should be employed.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The program\nbelow can be used to explore how the various feature test\nmacros are set depending on the glibc version and what\nfeature test macros are explicitly set. The following shell\nsession, on a system with glibc 2.10, shows some examples of\nwhat we would see:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ <b>cc\nftm.c</b> <br>\n$ <b>./a.out</b> <br>\n_POSIX_SOURCE defined <br>\n_POSIX_C_SOURCE defined: 200809L <br>\n_BSD_SOURCE defined <br>\n_SVID_SOURCE defined <br>\n_ATFILE_SOURCE defined <br>\n$ <b>cc -D_XOPEN_SOURCE=500 ftm.c</b> <br>\n$ <b>./a.out</b> <br>\n_POSIX_SOURCE defined <br>\n_POSIX_C_SOURCE defined: 199506L <br>\n_XOPEN_SOURCE defined: 500 <br>\n$ <b>cc -D_GNU_SOURCE ftm.c</b> <br>\n$ <b>./a.out</b> <br>\n_POSIX_SOURCE defined <br>\n_POSIX_C_SOURCE defined: 200809L <br>\n_ISOC99_SOURCE defined <br>\n_XOPEN_SOURCE defined: 700 <br>\n_XOPEN_SOURCE_EXTENDED defined <br>\n_LARGEFILE64_SOURCE defined <br>\n_BSD_SOURCE defined <br>\n_SVID_SOURCE defined <br>\n_ATFILE_SOURCE defined <br>\n_GNU_SOURCE defined</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Program\nsource</b> <br>\n/* ftm.c */</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#include\n&lt;stdint.h&gt; <br>\n#include &lt;stdio.h&gt; <br>\n#include &lt;unistd.h&gt; <br>\n#include &lt;stdlib.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">int <br>\nmain(int argc, char *argv[]) <br>\n{ <br>\n#ifdef _POSIX_SOURCE <br>\nprintf(&quot;_POSIX_SOURCE defined\\n&quot;); <br>\n#endif</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#ifdef\n_POSIX_C_SOURCE <br>\nprintf(&quot;_POSIX_C_SOURCE defined: %jdL\\n&quot;, <br>\n(intmax_t) _POSIX_C_SOURCE); <br>\n#endif</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#ifdef\n_ISOC99_SOURCE <br>\nprintf(&quot;_ISOC99_SOURCE defined\\n&quot;); <br>\n#endif</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#ifdef\n_ISOC11_SOURCE <br>\nprintf(&quot;_ISOC11_SOURCE defined\\n&quot;); <br>\n#endif</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#ifdef\n_XOPEN_SOURCE <br>\nprintf(&quot;_XOPEN_SOURCE defined: %d\\n&quot;,\n_XOPEN_SOURCE); <br>\n#endif</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#ifdef\n_XOPEN_SOURCE_EXTENDED <br>\nprintf(&quot;_XOPEN_SOURCE_EXTENDED defined\\n&quot;); <br>\n#endif</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#ifdef\n_LARGEFILE64_SOURCE <br>\nprintf(&quot;_LARGEFILE64_SOURCE defined\\n&quot;); <br>\n#endif</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#ifdef\n_FILE_OFFSET_BITS <br>\nprintf(&quot;_FILE_OFFSET_BITS defined: %d\\n&quot;,\n_FILE_OFFSET_BITS); <br>\n#endif</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#ifdef\n_BSD_SOURCE <br>\nprintf(&quot;_BSD_SOURCE defined\\n&quot;); <br>\n#endif</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#ifdef\n_SVID_SOURCE <br>\nprintf(&quot;_SVID_SOURCE defined\\n&quot;); <br>\n#endif</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#ifdef\n_DEFAULT_SOURCE <br>\nprintf(&quot;_DEFAULT_SOURCE defined\\n&quot;); <br>\n#endif</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#ifdef\n_ATFILE_SOURCE <br>\nprintf(&quot;_ATFILE_SOURCE defined\\n&quot;); <br>\n#endif</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#ifdef\n_GNU_SOURCE <br>\nprintf(&quot;_GNU_SOURCE defined\\n&quot;); <br>\n#endif</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#ifdef\n_REENTRANT <br>\nprintf(&quot;_REENTRANT defined\\n&quot;); <br>\n#endif</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#ifdef\n_THREAD_SAFE <br>\nprintf(&quot;_THREAD_SAFE defined\\n&quot;); <br>\n#endif</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">#ifdef\n_FORTIFY_SOURCE <br>\nprintf(&quot;_FORTIFY_SOURCE defined\\n&quot;); <br>\n#endif</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">exit(EXIT_SUCCESS);\n<br>\n}</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/7/libc\">libc(7)</a>,\n<a href=\"https://man.page/7/standards\">standards(7)</a>, <a href=\"https://man.page/7/system_data_types\">system_data_types(7)</a></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The section\n&quot;Feature Test Macros&quot; under <i>info libc</i>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>/usr/include/features.h</i></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":7}