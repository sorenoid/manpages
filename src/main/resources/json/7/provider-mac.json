{"name":"provider-mac","description":"provider-mac -\nThe mac library &lt;-&gt; provider functions","body":"\n\n<h1 align=\"center\">PROVIDER-MAC</h1>\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">provider-mac -\nThe mac library &lt;-&gt; provider functions</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">#include\n&lt;openssl/core_dispatch.h&gt; <br>\n#include &lt;openssl/core_names.h&gt; <br>\n/* <br>\n* None of these are actual functions, but are displayed like\nthis for <br>\n* the function signatures for functions that are offered as\nfunction <br>\n* pointers in OSSL_DISPATCH arrays. <br>\n*/ <br>\n/* Context management */ <br>\nvoid *OSSL_FUNC_mac_newctx(void *provctx); <br>\nvoid OSSL_FUNC_mac_freectx(void *mctx); <br>\nvoid *OSSL_FUNC_mac_dupctx(void *src); <br>\n/* Encryption/decryption */ <br>\nint OSSL_FUNC_mac_init(void *mctx, unsigned char *key,\nsize_t keylen, <br>\nconst OSSL_PARAM params[]); <br>\nint OSSL_FUNC_mac_update(void *mctx, const unsigned char\n*in, size_t inl); <br>\nint OSSL_FUNC_mac_final(void *mctx, unsigned char *out,\nsize_t *outl, size_t outsize); <br>\n/* MAC parameter descriptors */ <br>\nconst OSSL_PARAM *OSSL_FUNC_mac_gettable_params(void\n*provctx); <br>\nconst OSSL_PARAM *OSSL_FUNC_mac_gettable_ctx_params(void\n*mctx, void *provctx); <br>\nconst OSSL_PARAM *OSSL_FUNC_mac_settable_ctx_params(void\n*mctx, void *provctx); <br>\n/* MAC parameters */ <br>\nint OSSL_FUNC_mac_get_params(OSSL_PARAM params[]); <br>\nint OSSL_FUNC_mac_get_ctx_params(void *mctx, OSSL_PARAM\nparams[]); <br>\nint OSSL_FUNC_mac_set_ctx_params(void *mctx, const\nOSSL_PARAM params[]);</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This\ndocumentation is primarily aimed at provider authors. See\n<a href=\"https://man.page/7/provider\">provider(7)</a> for further information.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<small>MAC</small> operation enables providers to implement\nmac algorithms and make them available to applications via\nthe <small>API</small> functions <a href=\"https://man.page/3/EVP_MAC_init\">EVP_MAC_init(3)</a>,\n<a href=\"https://man.page/3/EVP_MAC_update\">EVP_MAC_update(3)</a> and <a href=\"https://man.page/3/EVP_MAC_final\">EVP_MAC_final(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All\n&quot;functions&quot; mentioned here are passed as function\npointers between <i>libcrypto</i> and the provider in\n<b><small>OSSL_DISPATCH</small></b> arrays via\n<b><small>OSSL_ALGORITHM</small></b> arrays that are\nreturned by the provider&rsquo;s\n<b>provider_query_operation()</b> function (see\n&quot;Provider Functions&quot; in\n<a href=\"https://man.page/7/provider-base\">provider-base(7)</a>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All these\n&quot;functions&quot; have a corresponding function type\ndefinition named <b>OSSL_FUNC_{name}_fn</b>, and a helper\nfunction to retrieve the function pointer from an\n<b><small>OSSL_DISPATCH</small></b> element named\n<b>OSSL_FUNC_{name}</b>. For example, the\n&quot;function&quot; <b>OSSL_FUNC_mac_newctx()</b> has\nthese:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">typedef void\n*(OSSL_OSSL_FUNC_mac_newctx_fn)(void *provctx); <br>\nstatic ossl_inline OSSL_OSSL_FUNC_mac_newctx_fn <br>\nOSSL_FUNC_mac_newctx(const OSSL_DISPATCH *opf);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><small>OSSL_DISPATCH</small></b>\narrays are indexed by numbers that are provided as macros in\n<b>openssl-core_dispatch.h</b>(7), as follows:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">OSSL_FUNC_mac_newctx\nOSSL_FUNC_MAC_NEWCTX <br>\nOSSL_FUNC_mac_freectx OSSL_FUNC_MAC_FREECTX <br>\nOSSL_FUNC_mac_dupctx OSSL_FUNC_MAC_DUPCTX <br>\nOSSL_FUNC_mac_init OSSL_FUNC_MAC_INIT <br>\nOSSL_FUNC_mac_update OSSL_FUNC_MAC_UPDATE <br>\nOSSL_FUNC_mac_final OSSL_FUNC_MAC_FINAL <br>\nOSSL_FUNC_mac_get_params OSSL_FUNC_MAC_GET_PARAMS <br>\nOSSL_FUNC_mac_get_ctx_params OSSL_FUNC_MAC_GET_CTX_PARAMS\n<br>\nOSSL_FUNC_mac_set_ctx_params OSSL_FUNC_MAC_SET_CTX_PARAMS\n<br>\nOSSL_FUNC_mac_gettable_params OSSL_FUNC_MAC_GETTABLE_PARAMS\n<br>\nOSSL_FUNC_mac_gettable_ctx_params\nOSSL_FUNC_MAC_GETTABLE_CTX_PARAMS <br>\nOSSL_FUNC_mac_settable_ctx_params\nOSSL_FUNC_MAC_SETTABLE_CTX_PARAMS</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A mac algorithm\nimplementation may not implement all of these functions. In\norder to be a consistent set of functions, at least the\nfollowing functions must be implemented:\n<b>OSSL_FUNC_mac_newctx()</b>,\n<b>OSSL_FUNC_mac_freectx()</b>, <b>OSSL_FUNC_mac_init()</b>,\n<b>OSSL_FUNC_mac_update()</b>, <b>OSSL_FUNC_mac_final()</b>.\nAll other functions are optional.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Context\nManagement Functions <br>\nOSSL_FUNC_mac_newctx()</b> should create and return a\npointer to a provider side structure for holding context\ninformation during a mac operation. A pointer to this\ncontext will be passed back in a number of the other mac\noperation function calls. The parameter <i>provctx</i> is\nthe provider context generated during provider\ninitialisation (see <a href=\"https://man.page/7/provider\">provider(7)</a>).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_mac_freectx()</b>\nis passed a pointer to the provider side mac context in the\n<i>mctx</i> parameter. If it receives <small>NULL</small> as\n<i>mctx</i> value, it should not do anything other than\nreturn. This function should free any resources associated\nwith that context.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_mac_dupctx()</b>\nshould duplicate the provider side mac context in the\n<i>mctx</i> parameter and return the duplicate copy.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Encryption/Decryption\nFunctions <br>\nOSSL_FUNC_mac_init()</b> initialises a mac operation given a\nnewly created provider side mac context in the <i>mctx</i>\nparameter. The <i>params</i> are set before setting the\n<small>MAC</small> <i>key</i> of <i>keylen</i> bytes.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_mac_update()</b>\nis called to supply data for <small>MAC</small> computation\nof a previously initialised mac operation. The <i>mctx</i>\nparameter contains a pointer to a previously initialised\nprovider side context. <b>OSSL_FUNC_mac_update()</b> may be\ncalled multiple times for a single mac operation.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_mac_final()</b>\ncompletes the <small>MAC</small> computation started through\nprevious <b>OSSL_FUNC_mac_init()</b> and\n<b>OSSL_FUNC_mac_update()</b> calls. The <i>mctx</i>\nparameter contains a pointer to the provider side context.\nThe resulting <small>MAC</small> should be written to\n<i>out</i> and the amount of data written to <i>*outl</i>,\nwhich should not exceed <i>outsize</i> bytes. The same\nexpectations apply to <i>outsize</i> as documented for\n<a href=\"https://man.page/3/EVP_MAC_final\">EVP_MAC_final(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Mac\nParameters</b> <br>\nSee <b><small>OSSL_PARAM</small></b> (3) for further details\non the parameters structure used by these functions.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_mac_get_params()</b>\ngets details of parameter values associated with the\nprovider algorithm and stores them in <i>params</i>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_mac_set_ctx_params()</b>\nsets mac parameters associated with the given provider side\nmac context <i>mctx</i> to <i>params</i>. Any parameter\nsettings are additional to any that were previously set.\nPassing <small>NULL</small> for <i>params</i> should return\ntrue.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_mac_get_ctx_params()</b>\ngets details of currently set parameter values associated\nwith the given provider side mac context <i>mctx</i> and\nstores them in <i>params</i>. Passing <small>NULL</small>\nfor <i>params</i> should return true.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_mac_gettable_params()</b>,\n<b>OSSL_FUNC_mac_gettable_ctx_params()</b>, and\n<b>OSSL_FUNC_mac_settable_ctx_params()</b> all return\nconstant <b><small>OSSL_PARAM</small></b> arrays as\ndescriptors of the parameters that\n<b>OSSL_FUNC_mac_get_params()</b>,\n<b>OSSL_FUNC_mac_get_ctx_params()</b>, and\n<b>OSSL_FUNC_mac_set_ctx_params()</b> can handle,\nrespectively. <b>OSSL_FUNC_mac_gettable_ctx_params()</b> and\n<b>OSSL_FUNC_mac_settable_ctx_params()</b> will return the\nparameters associated with the provider side context\n<i>mctx</i> in its current state if it is not\n<small>NULL.</small> Otherwise, they return the parameters\nassociated with the provider side algorithm\n<i>provctx</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All\n<small>MAC</small> implementations are expected to handle\nthe following parameters: <br>\nwith <b>OSSL_FUNC_set_ctx_params()</b>:</p>\n\n<p style=\"margin-left:17%;\">&quot;key&quot; (\n<b><small>OSSL_MAC_PARAM_KEY</small></b> ) &lt;octet\nstring&gt;</p>\n\n<p style=\"margin-left:23%;\">Sets the key in the associated\n<small>MAC</small> ctx. This is identical to passing a\n<i>key</i> argument to the <b>OSSL_FUNC_mac_init()</b>\nfunction.</p>\n\n<p style=\"margin-left:11%;\">with\n<b>OSSL_FUNC_get_params()</b>:</p>\n\n<p style=\"margin-left:17%;\">&quot;size&quot; (\n<b><small>OSSL_MAC_PARAM_SIZE</small></b> )\n&lt;integer&gt;</p>\n\n<p style=\"margin-left:23%;\">Can be used to get the default\n<small>MAC</small> size (which might be the only allowable\n<small>MAC</small> size for the implementation).</p>\n\n<p style=\"margin-left:23%; margin-top: 1em\">Note that some\nimplementations allow setting the size that the resulting\n<small>MAC</small> should have as well, see the\ndocumentation of the implementation.</p>\n\n<p style=\"margin-left:17%;\">&quot;size&quot; (\n<b><small>OSSL_MAC_PARAM_BLOCK_SIZE</small></b> )\n&lt;integer&gt;</p>\n\n<p style=\"margin-left:23%;\">Can be used to get the\n<small>MAC</small> block size (if supported by the\nalgorithm).</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<small>MAC</small> life-cycle is described in\n<a href=\"https://man.page/7/life_cycle-rand\">life_cycle-rand(7)</a>. Providers should ensure that the\nvarious transitions listed there are supported. At some\npoint the <small>EVP</small> layer will begin enforcing the\nlisted transitions.</p>\n\n<h2>RETURN VALUES\n<a name=\"RETURN VALUES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_mac_newctx()</b>\nand <b>OSSL_FUNC_mac_dupctx()</b> should return the newly\ncreated provider side mac context, or <small>NULL</small> on\nfailure.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_mac_init()</b>,\n<b>OSSL_FUNC_mac_update()</b>, <b>OSSL_FUNC_mac_final()</b>,\n<b>OSSL_FUNC_mac_get_params()</b>,\n<b>OSSL_FUNC_mac_get_ctx_params()</b> and\n<b>OSSL_FUNC_mac_set_ctx_params()</b> should return 1 for\nsuccess or 0 on error.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_mac_gettable_params()</b>,\n<b>OSSL_FUNC_mac_gettable_ctx_params()</b> and\n<b>OSSL_FUNC_mac_settable_ctx_params()</b> should return a\nconstant <b><small>OSSL_PARAM</small></b> array, or\n<small>NULL</small> if none is offered.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/7/provider\">provider(7)</a>,\n<b><small>EVP_MAC-BLAKE2</small></b> (7),\n<b><small>EVP_MAC-CMAC</small></b> (7),\n<b><small>EVP_MAC-GMAC</small></b> (7),\n<b><small>EVP_MAC-HMAC</small></b> (7),\n<b><small>EVP_MAC-KMAC</small></b> (7),\n<a href=\"https://man.page/7/EVP_MAC-Poly1305\">EVP_MAC-Poly1305(7)</a>, <a href=\"https://man.page/7/EVP_MAC-Siphash\">EVP_MAC-Siphash(7)</a>,\n<a href=\"https://man.page/7/life_cycle-mac\">life_cycle-mac(7)</a>, <b><small>EVP_MAC</small></b>\n(3)</p>\n\n<h2>HISTORY\n<a name=\"HISTORY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The provider\n<small>MAC</small> interface was introduced in OpenSSL\n3.0.</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright\n2019-2021 The OpenSSL Project Authors. All Rights\nReserved.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Licensed under\nthe Apache License 2.0 (the &quot;License&quot;). You may\nnot use this file except in compliance with the License. You\ncan obtain a copy in the file <small>LICENSE</small> in the\nsource distribution or at\n&lt;https://www.openssl.org/source/license.html&gt;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#RETURN VALUES\">RETURN VALUES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#HISTORY\">HISTORY</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"],"level":7}