{"name":"pty","body":"\n\n<h1 align=\"center\">PTY</h1>\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">pty -\npseudoterminal interfaces</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">A\npseudoterminal (sometimes abbreviated &quot;pty&quot;) is a\npair of virtual character devices that provide a\nbidirectional communication channel. One end of the channel\nis called the <i>master</i>; the other end is called the\n<i>slave</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The slave end\nof the pseudoterminal provides an interface that behaves\nexactly like a classical terminal. A process that expects to\nbe connected to a terminal, can open the slave end of a\npseudoterminal and then be driven by a program that has\nopened the master end. Anything that is written on the\nmaster end is provided to the process on the slave end as\nthough it was input typed on a terminal. For example,\nwriting the interrupt character (usually control-C) to the\nmaster device would cause an interrupt signal\n(<b>SIGINT</b>) to be generated for the foreground process\ngroup that is connected to the slave. Conversely, anything\nthat is written to the slave end of the pseudoterminal can\nbe read by the process that is connected to the master\nend.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Data flow\nbetween master and slave is handled asynchronously, much\nlike data flow with a physical terminal. Data written to the\nslave will be available at the master promptly, but may not\nbe available immediately. Similarly, there may be a small\nprocessing delay between a write to the master, and the\neffect being visible at the slave.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Historically,\ntwo pseudoterminal APIs have evolved: BSD and System V.\nSUSv1 standardized a pseudoterminal API based on the System\nV API, and this API should be employed in all new programs\nthat use pseudoterminals.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Linux provides\nboth BSD-style and (standardized) System V-style\npseudoterminals. System V-style terminals are commonly\ncalled UNIX 98 pseudoterminals on Linux systems.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Since kernel\n2.6.4, BSD-style pseudoterminals are considered deprecated:\nsupport can be disabled when building the kernel by\ndisabling the <b>CONFIG_LEGACY_PTYS</b> option. (Starting\nwith Linux 2.6.30, that option is disabled by default in the\nmainline kernel.) UNIX 98 pseudoterminals should be used in\nnew applications.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>UNIX 98\npseudoterminals</b> <br>\nAn unused UNIX 98 pseudoterminal master is opened by calling\n<a href=\"https://man.page/3/posix_openpt\">posix_openpt(3)</a>. (This function opens the master\nclone device, <i>/dev/ptmx</i>; see <a href=\"https://man.page/4/pts\">pts(4)</a>.) After\nperforming any program-specific initializations, changing\nthe ownership and permissions of the slave device using\n<a href=\"https://man.page/3/grantpt\">grantpt(3)</a>, and unlocking the slave using\n<a href=\"https://man.page/3/unlockpt\">unlockpt(3)</a>), the corresponding slave device can be\nopened by passing the name returned by <a href=\"https://man.page/3/ptsname\">ptsname(3)</a> in\na call to <a href=\"https://man.page/2/open\">open(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The Linux\nkernel imposes a limit on the number of available UNIX 98\npseudoterminals. In kernels up to and including 2.6.3, this\nlimit is configured at kernel compilation time\n(<b>CONFIG_UNIX98_PTYS</b>), and the permitted number of\npseudoterminals can be up to 2048, with a default setting of\n256. Since kernel 2.6.4, the limit is dynamically adjustable\nvia <i>/proc/sys/kernel/pty/max</i>, and a corresponding\nfile, <i>/proc/sys/kernel/pty/nr</i>, indicates how many\npseudoterminals are currently in use. For further details on\nthese two files, see <a href=\"https://man.page/5/proc\">proc(5)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>BSD\npseudoterminals</b> <br>\nBSD-style pseudoterminals are provided as precreated pairs,\nwith names of the form <i>/dev/ptyXY</i> (master) and\n<i>/dev/ttyXY</i> (slave), where X is a letter from the\n16-character set [p-za-e], and Y is a letter from the\n16-character set [0-9a-f]. (The precise range of letters in\nthese two sets varies across UNIX implementations.) For\nexample, <i>/dev/ptyp1</i> and <i>/dev/ttyp1</i> constitute\na BSD pseudoterminal pair. A process finds an unused\npseudoterminal pair by trying to <a href=\"https://man.page/2/open\">open(2)</a> each\npseudoterminal master until an open succeeds. The\ncorresponding pseudoterminal slave (substitute\n&quot;tty&quot; for &quot;pty&quot; in the name of the\nmaster) can then be opened.</p>\n\n<h2>FILES\n<a name=\"FILES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>/dev/ptmx</i></p>\n\n<p style=\"margin-left:22%;\">UNIX 98 master clone device</p>\n\n<p style=\"margin-left:11%;\"><i>/dev/pts/*</i></p>\n\n<p style=\"margin-left:22%;\">UNIX 98 slave devices</p>\n\n\n<p style=\"margin-left:11%;\"><i>/dev/pty[p-za-e][0-9a-f]</i></p>\n\n<p style=\"margin-left:22%;\">BSD master devices</p>\n\n\n<p style=\"margin-left:11%;\"><i>/dev/tty[p-za-e][0-9a-f]</i></p>\n\n<p style=\"margin-left:22%;\">BSD slave devices</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Pseudoterminals\nare used by applications such as network login services\n(<a href=\"https://man.page/1/ssh\">ssh(1)</a>, <a href=\"https://man.page/1/rlogin\">rlogin(1)</a>, <a href=\"https://man.page/1/telnet\">telnet(1)</a>),\nterminal emulators such as <a href=\"https://man.page/1/xterm\">xterm(1)</a>,\n<a href=\"https://man.page/1/script\">script(1)</a>, <a href=\"https://man.page/1/screen\">screen(1)</a>, <a href=\"https://man.page/1/tmux\">tmux(1)</a>,\n<a href=\"https://man.page/1/unbuffer\">unbuffer(1)</a>, and <a href=\"https://man.page/1/expect\">expect(1)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A description\nof the <b>TIOCPKT ioctl</b>(2), which controls packet mode\noperation, can be found in <a href=\"https://man.page/2/ioctl_tty\">ioctl_tty(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The BSD\n<a href=\"https://man.page/2/ioctl\">ioctl(2)</a> operations <b>TIOCSTOP</b>,\n<b>TIOCSTART</b>, <b>TIOCUCNTL</b>, and <b>TIOCREMOTE</b>\nhave not been implemented under Linux.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/ioctl_tty\">ioctl_tty(2)</a>,\n<a href=\"https://man.page/2/select\">select(2)</a>, <a href=\"https://man.page/2/setsid\">setsid(2)</a>, <a href=\"https://man.page/3/forkpty\">forkpty(3)</a>,\n<a href=\"https://man.page/3/openpty\">openpty(3)</a>, <a href=\"https://man.page/3/termios\">termios(3)</a>, <a href=\"https://man.page/4/pts\">pts(4)</a>,\n<a href=\"https://man.page/4/tty\">tty(4)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#FILES\">FILES</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":7}