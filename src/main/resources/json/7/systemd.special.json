{"name":"systemd.special","description":"systemd.special - Special systemd units","body":"\n\n<h1 align=\"center\">SYSTEMD.SPECIAL</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">systemd.special\n- Special systemd units</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">basic.target,\nbluetooth.target, cryptsetup-pre.target, cryptsetup.target,\nveritysetup-pre.target, veritysetup.target,\nctrl-alt-del.target, blockdev@.target, boot-complete.target,\ndefault.target, emergency.target, exit.target, final.target,\nfirst-boot-complete.target, getty.target, getty-pre.target,\ngraphical.target, halt.target, hibernate.target,\nhybrid-sleep.target, suspend-then-hibernate.target,\ninitrd.target, initrd-fs.target, initrd-root-device.target,\ninitrd-root-fs.target, initrd-usr-fs.target,\nkbrequest.target, kexec.target, local-fs-pre.target,\nlocal-fs.target, machines.target multi-user.target,\nnetwork-online.target, network-pre.target, network.target,\nnss-lookup.target, nss-user-lookup.target, paths.target,\npoweroff.target, printer.target, reboot.target,\nremote-cryptsetup.target, remote-veritysetup.target,\nremote-fs-pre.target, remote-fs.target, rescue.target,\nrpcbind.target, runlevel2.target, runlevel3.target,\nrunlevel4.target, runlevel5.target, shutdown.target,\nsigpwr.target, sleep.target, slices.target,\nsmartcard.target, sockets.target, sound.target,\nsuspend.target, swap.target, sysinit.target,\nsystem-update.target, system-update-pre.target,\ntime-set.target, time-sync.target, timers.target,\numount.target, usb-gadget.target, -.slice, system.slice,\nuser.slice, machine.slice, -.mount, dbus.service,\ndbus.socket, display-manager.service, init.scope,\nsyslog.socket, system-update-cleanup.service</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">A few units are\ntreated specially by systemd. Many of them have special\ninternal semantics and cannot be renamed, while others\nsimply have a standard meaning and should be present on all\nsystems.</p>\n\n<h2>UNITS MANAGED BY THE SYSTEM SERVICE MANAGER\n<a name=\"UNITS MANAGED BY THE SYSTEM SERVICE MANAGER\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Special\nSystem Units</b> <br>\n-.mount</p>\n\n<p style=\"margin-left:17%;\">The root mount point, i.e. the\nmount unit for the / path. This unit is unconditionally\nactive, during the entire time the system is up, as this\nmount point is where the basic userspace is running\nfrom.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">basic.target</p>\n\n<p style=\"margin-left:17%;\">A special target unit covering\nbasic boot-up.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">systemd\nautomatically adds dependency of the type <i>After=</i> for\nthis target unit to all services (except for those with\n<i>DefaultDependencies=no</i>).</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Usually, this\nshould pull-in all local mount points plus /var/, /tmp/ and\n/var/tmp/, swap devices, sockets, timers, path units and\nother basic initialization necessary for general purpose\ndaemons. The mentioned mount points are special cased to\nallow them to be remote.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">This target\nusually does not pull in any non-target units directly, but\nrather does so indirectly via other early boot targets. It\nis instead meant as a synchronization point for late boot\nservices. Refer to <a href=\"https://man.page/7/bootup\">bootup(7)</a> for details on the\ntargets involved.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">boot-complete.target</p>\n\n<p style=\"margin-left:17%;\">This target is intended as\ngeneric synchronization point for services that shall\ndetermine or act on whether the boot process completed\nsuccessfully. Order units that are required to succeed for a\nboot process to be considered successful before this unit,\nand add a <i>Requires=</i> dependency from the target unit\nto them. Order units that shall only run when the boot\nprocess is considered successful after the target unit and\npull in the target from it, also with <i>Requires=</i>. Note\nthat by default this target unit is not part of the initial\nboot transaction, but is supposed to be pulled in only if\nrequired by units that want to run only on successful\nboots.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">See\n<b>systemd-boot-check-no-failures.service</b>(8) for a\nservice that implements a generic system health check and\norders itself before boot-complete.target.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">See\n<b>systemd-bless-boot.service</b>(8) for a service that\npropagates boot success information to the boot loader, and\norders itself after boot-complete.target.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">ctrl-alt-del.target</p>\n\n<p style=\"margin-left:17%;\">systemd starts this target\nwhenever Control+Alt+Del is pressed on the console. Usually,\nthis should be aliased (symlinked) to reboot.target.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">cryptsetup.target</p>\n\n<p style=\"margin-left:17%;\">A target that pulls in setup\nservices for all encrypted block devices.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">veritysetup.target</p>\n\n<p style=\"margin-left:17%;\">A target that pulls in setup\nservices for all verity integrity protected block\ndevices.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">dbus.service</p>\n\n<p style=\"margin-left:17%;\">A special unit for the D-Bus\nbus daemon. As soon as this service is fully started up\nsystemd will connect to it and register its service.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">dbus.socket</p>\n\n<p style=\"margin-left:17%;\">A special unit for the D-Bus\nsystem bus socket. All units with <i>Type=dbus</i>\nautomatically gain a dependency on this unit.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">default.target</p>\n\n<p style=\"margin-left:17%;\">The default unit systemd starts\nat bootup. Usually, this should be aliased (symlinked) to\nmulti-user.target or graphical.target. See <a href=\"https://man.page/7/bootup\">bootup(7)</a>\nfor more discussion.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">The default\nunit systemd starts at bootup can be overridden with the\n<i>systemd.unit=</i> kernel command line option, or more\nconveniently, with the short names like <i>single</i>,\n<i>rescue</i>, <i>1</i>, <i>3</i>, <i>5</i>, ...; see\n<a href=\"https://man.page/1/systemd\">systemd(1)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">display-manager.service</p>\n\n<p style=\"margin-left:17%;\">The display manager service.\nUsually, this should be aliased (symlinked) to gdm.service\nor a similar display manager service.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">emergency.target</p>\n\n<p style=\"margin-left:17%;\">A special target unit that\nstarts an emergency shell on the main console. This target\ndoes not pull in other services or mounts. It is the most\nminimal version of starting the system in order to acquire\nan interactive shell; the only processes running are usually\njust the system manager (PID 1) and the shell process. This\nunit may be used by specifying <i>emergency</i> on the\nkernel command line; it is also used when a file system\ncheck on a required file system fails and boot-up cannot\ncontinue. Compare with rescue.target, which serves a similar\npurpose, but also starts the most basic services and mounts\nall file systems.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">In many ways\nbooting into emergency.target is similar to the effect of\nbooting with &quot;init=/bin/sh&quot; on the kernel command\nline, except that emergency mode provides you with the full\nsystem and service manager, and allows starting individual\nunits in order to continue the boot process in steps.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note that\ndepending on how emergency.target is reached, the root file\nsystem might be mounted read-only or read-write (no\nremounting is done specially for this target). For example,\nthe system may boot with root mounted read-only when\n<i>ro</i> is used on the kernel command line and remain this\nway for emergency.target, or the system may transition to\nemergency.target after the system has been partially booted\nand disks have already been remounted read-write.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">exit.target</p>\n\n<p style=\"margin-left:17%;\">A special service unit for\nshutting down the system or user service manager. It is\nequivalent to poweroff.target on non-container systems, and\nalso works in containers.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">systemd will\nstart this unit when it receives the <b>SIGTERM</b> or\n<b>SIGINT</b> signal when running as user service\ndaemon.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Normally, this\n(indirectly) pulls in shutdown.target, which in turn should\nbe conflicted by all units that want to be scheduled for\nshutdown when the service manager starts to exit.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">final.target</p>\n\n<p style=\"margin-left:17%;\">A special target unit that is\nused during the shutdown logic and may be used to pull in\nlate services after all normal services are already\nterminated and all mounts unmounted.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">getty.target</p>\n\n<p style=\"margin-left:17%;\">A special target unit that\npulls in statically configured local TTY getty\ninstances.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">graphical.target</p>\n\n<p style=\"margin-left:17%;\">A special target unit for\nsetting up a graphical login screen. This pulls in\nmulti-user.target.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Units that are\nneeded for graphical logins shall add <i>Wants=</i>\ndependencies for their unit to this unit (or\nmulti-user.target) during installation. This is best\nconfigured via <i>WantedBy=graphical.target</i> in the\nunit's [Install] section.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">hibernate.target</p>\n\n<p style=\"margin-left:17%;\">A special target unit for\nhibernating the system. This pulls in sleep.target.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">hybrid-sleep.target</p>\n\n<p style=\"margin-left:17%;\">A special target unit for\nhibernating and suspending the system at the same time. This\npulls in sleep.target.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">suspend-then-hibernate.target</p>\n\n<p style=\"margin-left:17%;\">A special target unit for\nsuspending the system for a period of time, waking it and\nputting it into hibernate. This pulls in sleep.target.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">halt.target</p>\n\n<p style=\"margin-left:17%;\">A special target unit for\nshutting down and halting the system. Note that this target\nis distinct from poweroff.target in that it generally really\njust halts the system rather than powering it down.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Applications\nwanting to halt the system should not start this unit\ndirectly, but should instead execute <b>systemctl halt</b>\n(possibly with the <b>--no-block</b> option) or call\n<a href=\"https://man.page/1/systemd\">systemd(1)</a>'s\n<b>org.freedesktop.systemd1.Manager.Halt</b> D-Bus method\ndirectly.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">init.scope</p>\n\n<p style=\"margin-left:17%;\">This scope unit is where the\nsystem and service manager (PID 1) itself resides. It is\nactive as long as the system is running.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">initrd.target</p>\n\n<p style=\"margin-left:17%;\">This is the default target in\nthe initramfs, similar to default.target in the main system.\nIt is used to mount the real root and transition to it. See\n<a href=\"https://man.page/7/bootup\">bootup(7)</a> for more discussion.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">initrd-fs.target</p>\n\n\n<p style=\"margin-left:17%;\"><a href=\"https://man.page/3/systemd-fstab-generator\">systemd-fstab-generator(3)</a>\nautomatically adds dependencies of type <i>Before=</i> to\nsysroot-usr.mount and all mount points found in /etc/fstab\nthat have the <b>x-initrd.mount</b> mount option set and do\nnot have the <b>noauto</b> mount option set. It is also\nindirectly ordered after sysroot.mount. Thus, once this\ntarget is reached the /sysroot/ hierarchy is fully set up,\nin preparation for the transition to the host OS.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">initrd-root-device.target</p>\n\n<p style=\"margin-left:17%;\">A special initrd target unit\nthat is reached when the root filesystem device is\navailable, but before it has been mounted.\n<a href=\"https://man.page/3/systemd-fstab-generator\">systemd-fstab-generator(3)</a> and\n<a href=\"https://man.page/3/systemd-gpt-auto-generator\">systemd-gpt-auto-generator(3)</a> automatically setup the\nappropriate dependencies to make this happen.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">initrd-root-fs.target</p>\n\n\n<p style=\"margin-left:17%;\"><a href=\"https://man.page/3/systemd-fstab-generator\">systemd-fstab-generator(3)</a>\nautomatically adds dependencies of type <i>Before=</i> to\nthe sysroot.mount unit, which is generated from the kernel\ncommand line's <i>root=</i> setting (or equivalent).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">initrd-usr-fs.target</p>\n\n\n<p style=\"margin-left:17%;\"><a href=\"https://man.page/3/systemd-fstab-generator\">systemd-fstab-generator(3)</a>\nautomatically adds dependencies of type <i>Before=</i> to\nthe sysusr-usr.mount unit, which is generated from the\nkernel command line's <i>usr=</i> switch. Services may order\nthemselves after this target unit in order to run once the\n/sysusr/ hierarchy becomes available, on systems that come\nup initially without a root file system, but with an\ninitialized /usr/ and need to access that before setting up\nthe root file system to ultimately switch to. On systems\nwhere <i>usr=</i> is not used this target is ordered after\nsysroot.mount and thus mostly equivalent to\ninitrd-root-fs.target. In effect on any system once this\ntarget is reached the file system backing /usr/ is mounted,\nthough possibly at two different locations, either below the\n/sysusr/ or the /sysroot/ hierarchies.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">kbrequest.target</p>\n\n<p style=\"margin-left:17%;\">systemd starts this target\nwhenever Alt+ArrowUp is pressed on the console. Note that\nany user with physical access to the machine will be able to\ndo this, without authentication, so this should be used\ncarefully.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">kexec.target</p>\n\n<p style=\"margin-left:17%;\">A special target unit for\nshutting down and rebooting the system via kexec.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Applications\nwanting to reboot the system should not start this unit\ndirectly, but should instead execute <b>systemctl kexec</b>\n(possibly with the <b>--no-block</b> option) or call\n<a href=\"https://man.page/1/systemd\">systemd(1)</a>'s\n<b>org.freedesktop.systemd1.Manager.KExec</b> D-Bus method\ndirectly.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">local-fs.target</p>\n\n\n<p style=\"margin-left:17%;\"><a href=\"https://man.page/3/systemd-fstab-generator\">systemd-fstab-generator(3)</a>\nautomatically adds dependencies of type <i>Before=</i> to\nall mount units that refer to local mount points for this\ntarget unit. In addition, it adds dependencies of type\n<i>Wants=</i> to this target unit for those mounts listed in\n/etc/fstab that have the <b>auto</b> mount option set.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">machines.target</p>\n\n<p style=\"margin-left:17%;\">A standard target unit for\nstarting all the containers and other virtual machines. See\nsystemd-nspawn@.service for an example.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">multi-user.target</p>\n\n<p style=\"margin-left:17%;\">A special target unit for\nsetting up a multi-user system (non-graphical). This is\npulled in by graphical.target.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Units that are\nneeded for a multi-user system shall add <i>Wants=</i>\ndependencies for their unit to this unit during\ninstallation. This is best configured via\n<i>WantedBy=multi-user.target</i> in the unit's [Install]\nsection.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">network-online.target</p>\n\n<p style=\"margin-left:17%;\">Units that strictly require a\nconfigured network connection should pull in\nnetwork-online.target (via a <i>Wants=</i> type dependency)\nand order themselves after it. This target unit is intended\nto pull in a service that delays further execution until the\nnetwork is sufficiently set up. What precisely this requires\nis left to the implementation of the network managing\nservice.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">Note the\ndistinction between this unit and network.target. This unit\nis an active unit (i.e. pulled in by the consumer rather\nthan the provider of this functionality) and pulls in a\nservice which possibly adds substantial delays to further\nexecution. In contrast, network.target is a passive unit\n(i.e. pulled in by the provider of the functionality, rather\nthan the consumer) that usually does not delay execution\nmuch. Usually, network.target is part of the boot of most\nsystems, while network-online.target is not, except when at\nleast one unit requires it. Also see\n<b><font color=\"#0000FF\">Running Services After the Network\nis up</font></b>\n<small><font color=\"#000000\">[1]</font></small>\n<font color=\"#000000\">for more information.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">All\nmount units for remote network file systems automatically\npull in this unit, and order themselves after it. Note that\nnetworking daemons that simply <i>provide</i> functionality\nto other hosts (as opposed to <i>consume</i> functionality\nof other hosts) generally do not need to pull this\nin.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">systemd\nautomatically adds dependencies of type <i>Wants=</i> and\n<i>After=</i> for this target unit to all SysV init script\nservice units with an LSB header referring to the\n&quot;$network&quot; facility.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Note\nthat this unit is only useful during the original system\nstart-up logic. After the system has completed booting up,\nit will not track the online state of the system anymore.\nDue to this it cannot be used as a network connection\nmonitor concept, it is purely a one-time system start-up\nconcept.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">paths.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A special\ntarget unit that sets up all path units (see\n<b>systemd.path</b>(5) for details) that shall be active\nafter boot.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">It\nis recommended that path units installed by applications get\npulled in via <i>Wants=</i> dependencies from this unit.\nThis is best configured via a <i>WantedBy=paths.target</i>\nin the path unit's [Install] section.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">poweroff.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A special\ntarget unit for shutting down and powering off the\nsystem.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Applications\nwanting to power off the system should not start this unit\ndirectly, but should instead execute <b>systemctl\npoweroff</b> (possibly with the <b>--no-block</b> option) or\ncall <b>systemd-logind</b>(8)'s\n<b>org.freedesktop.login1.Manager.PowerOff</b> D-Bus method\ndirectly.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">runlevel0.target\nis an alias for this target unit, for compatibility with\nSysV.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">reboot.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A special\ntarget unit for shutting down and rebooting the\nsystem.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Applications\nwanting to reboot the system should not start this unit\ndirectly, but should instead execute <b>systemctl reboot</b>\n(possibly with the <b>--no-block</b> option) or call\n<b>systemd-logind</b>(8)'s\n<b>org.freedesktop.login1.Manager.Reboot</b> D-Bus method\ndirectly.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">runlevel6.target\nis an alias for this target unit, for compatibility with\nSysV.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote-cryptsetup.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Similar\nto cryptsetup.target, but for encrypted devices which are\naccessed over the network. It is used for <b>crypttab</b>(8)\nentries marked with <b>_netdev</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote-veritysetup.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Similar\nto veritysetup.target, but for verity integrity protected\ndevices which are accessed over the network. It is used for\n<b>veritytab</b>(8) entries marked with\n<b>_netdev</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote-fs.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Similar\nto local-fs.target, but for remote mount points.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">systemd\nautomatically adds dependencies of type <i>After=</i> for\nthis target unit to all SysV init script service units with\nan LSB header referring to the &quot;$remote_fs&quot;\nfacility.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">rescue.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A special\ntarget unit that pulls in the base system (including system\nmounts) and spawns a rescue shell. Isolate to this target in\norder to administer the system in single-user mode with all\nfile systems mounted but with no services running, except\nfor the most basic. Compare with emergency.target, which is\nmuch more reduced and does not provide the file systems or\nmost basic services. Compare with multi-user.target, this\ntarget could be seen as single-user.target.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">runlevel1.target\nis an alias for this target unit, for compatibility with\nSysV.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Use\nthe &quot;systemd.unit=rescue.target&quot; kernel command\nline option to boot into this mode. A short alias for this\nkernel command line option is &quot;1&quot;, for\ncompatibility with SysV.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">runlevel2.target,\nrunlevel3.target, runlevel4.target,\nrunlevel5.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">These are\ntargets that are called whenever the SysV compatibility code\nasks for runlevel 2, 3, 4, 5, respectively. It is a good\nidea to make this an alias for (i.e. symlink to)\ngraphical.target (for runlevel 5) or multi-user.target (the\nothers).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">shutdown.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A special\ntarget unit that terminates the services on system\nshutdown.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Services\nthat shall be terminated on system shutdown shall add\n<i>Conflicts=</i> and <i>Before=</i> dependencies to this\nunit for their service unit, which is implicitly done when\n<i>DefaultDependencies=yes</i> is set (the\ndefault).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">sigpwr.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A special\ntarget that is started when systemd receives the SIGPWR\nprocess signal, which is normally sent by the kernel or UPS\ndaemons when power fails.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">sleep.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A special\ntarget unit that is pulled in by suspend.target,\nhibernate.target and hybrid-sleep.target and may be used to\nhook units into the sleep state logic.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">slices.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A special\ntarget unit that sets up all slice units (see\n<b>systemd.slice</b>(5) for details) that shall always be\nactive after boot. By default the generic system.slice slice\nunit as well as the root slice unit -.slice are pulled in\nand ordered before this unit (see below).</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Adding\nslice units to slices.target is generally not necessary.\nInstead, when some unit that uses <i>Slice=</i> is started,\nthe specified slice will be started automatically. Adding\n<i>WantedBy=slices.target</i> lines to the [Install] section\nshould only be done for units that need to be always active.\nIn that case care needs to be taken to avoid creating a loop\nthrough the automatic dependencies on &quot;parent&quot;\nslices.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">sockets.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A special\ntarget unit that sets up all socket units (see\n<b>systemd.socket</b>(5) for details) that shall be active\nafter boot.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Services\nthat can be socket-activated shall add <i>Wants=</i>\ndependencies to this unit for their socket unit during\ninstallation. This is best configured via a\n<i>WantedBy=sockets.target</i> in the socket unit's\n[Install] section.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">suspend.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A special\ntarget unit for suspending the system. This pulls in\nsleep.target.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">swap.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Similar\nto local-fs.target, but for swap partitions and swap\nfiles.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">sysinit.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">systemd\nautomatically adds dependencies of the types\n<i>Requires=</i> and <i>After=</i> for this target unit to\nall services (except for those with\n<i>DefaultDependencies=no</i>).</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\ntarget pulls in the services required for system\ninitialization. System services pulled in by this target\nshould declare <i>DefaultDependencies=no</i> and specify all\ntheir dependencies manually, including access to anything\nmore than a read only root filesystem. For details on the\ndependencies of this target, refer to\n<a href=\"https://man.page/7/bootup\">bootup(7)</a>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">syslog.socket</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nsocket unit syslog implementations should listen on. All\nuserspace log messages will be made available on this\nsocket. For more information about syslog integration,\nplease consult the</font> <b><font color=\"#0000FF\">Syslog\nInterface</font></b>\n<small><font color=\"#000000\">[2]</font></small>\n<font color=\"#000000\">document.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">system-update.target,\nsystem-update-pre.target,\nsystem-update-cleanup.service</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A special\ntarget unit that is used for offline system updates.\n<b>systemd-system-update-generator</b>(8) will redirect the\nboot process to this target if /system-update exists. For\nmore information see\n<b>systemd.offline-updates</b>(7).</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Updates\nshould happen before the system-update.target is reached,\nand the services which implement them should cause the\nmachine to reboot. The main units executing the update\nshould order themselves after system-update-pre.target but\nnot pull it in. Services which want to run during system\nupdates only, but before the actual system update is\nexecuted should order themselves before this unit and pull\nit in. As a safety measure, if this does not happen, and\n/system-update still exists after system-update.target is\nreached, system-update-cleanup.service will remove this\nsymlink and reboot the machine.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">timers.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A special\ntarget unit that sets up all timer units (see\n<b>systemd.timer</b>(5) for details) that shall be active\nafter boot.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">It\nis recommended that timer units installed by applications\nget pulled in via <i>Wants=</i> dependencies from this unit.\nThis is best configured via <i>WantedBy=timers.target</i> in\nthe timer unit's [Install] section.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">umount.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A special\ntarget unit that unmounts all mount and automount points on\nsystem shutdown.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Mounts\nthat shall be unmounted on system shutdown shall add\nConflicts dependencies to this unit for their mount unit,\nwhich is implicitly done when <i>DefaultDependencies=yes</i>\nis set (the default).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>Special\nSystem Units for Devices</b> <br>\nSome target units are automatically pulled in as devices of\ncertain kinds show up in the system. These may be used to\nautomatically activate various services based on the\nspecific type of the available hardware.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">bluetooth.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\ntarget is started automatically as soon as a Bluetooth\ncontroller is plugged in or becomes available at\nboot.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nmay be used to pull in Bluetooth management daemons\ndynamically when Bluetooth hardware is found.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">printer.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\ntarget is started automatically as soon as a printer is\nplugged in or becomes available at boot.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nmay be used to pull in printer management daemons\ndynamically when printer hardware is found.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">smartcard.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\ntarget is started automatically as soon as a smartcard\ncontroller is plugged in or becomes available at\nboot.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nmay be used to pull in smartcard management daemons\ndynamically when smartcard hardware is found.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">sound.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\ntarget is started automatically as soon as a sound card is\nplugged in or becomes available at boot.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nmay be used to pull in audio management daemons dynamically\nwhen audio hardware is found.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">usb-gadget.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\ntarget is started automatically as soon as a USB Device\nController becomes available at boot.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\nmay be used to pull in usb gadget dynamically when UDC\nhardware is found.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>Special\nPassive System Units</b> <br>\nA number of special system targets are defined that can be\nused to properly order boot-up of optional services. These\ntargets are generally not part of the initial boot\ntransaction, unless they are explicitly pulled in by one of\nthe implementing services. Note specifically that these\n<i>passive</i> target units are generally not pulled in by\nthe consumer of a service, but by the provider of the\nservice. This means: a consuming service should order itself\nafter these targets (as appropriate), but not pull it in. A\nproviding service should order itself before these targets\n(as appropriate) and pull it in (via a <i>Wants=</i> type\ndependency).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">Note\nthat these passive units cannot be started manually, i.e.\n&quot;systemctl start time-sync.target&quot; will fail with\nan error. They can only be pulled in by dependency. This is\nenforced since they exist for ordering purposes only and\nthus are not useful as only unit within a\ntransaction.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">blockdev@.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\ntemplate unit is used to order mount units and other\nconsumers of block devices after services that synthesize\nthese block devices. In particular, this is intended to be\nused with storage services (such as\n<b>systemd-cryptsetup@.service</b>(5)/\n<b>systemd-veritysetup@.service</b>(5)) that allocate and\nmanage a virtual block device. Storage services are ordered\nbefore an instance of blockdev@.target, and the consumer\nunits after it. The ordering is particularly relevant during\nshutdown, as it ensures that the mount is deactivated first\nand the service backing the mount later. The\nblockdev@.target instance should be pulled in via a\n<b>Wants=</b> dependency of the storage daemon and thus\ngenerally not be part of any transaction unless a storage\ndaemon is used. The instance name for instances of this\ntemplate unit must be a properly escaped block device node\npath, e.g. blockdev@dev-mapper-foobar.target for the storage\ndevice /dev/mapper/foobar.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">cryptsetup-pre.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\npassive target unit may be pulled in by services that want\nto run before any encrypted block device is set up. All\nencrypted block devices are set up after this target has\nbeen reached. Since the shutdown order is implicitly the\nreverse start-up order between units, this target is\nparticularly useful to ensure that a service is shut down\nonly after all encrypted block devices are fully\nstopped.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">veritysetup-pre.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\npassive target unit may be pulled in by services that want\nto run before any verity integrity protected block device is\nset up. All verity integrity protected block devices are set\nup after this target has been reached. Since the shutdown\norder is implicitly the reverse start-up order between\nunits, this target is particularly useful to ensure that a\nservice is shut down only after all verity integrity\nprotected block devices are fully stopped.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">first-boot-complete.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\npassive target is intended as a synchronization point for\nunits that need to run once during the first boot. Only\nafter all units ordered before this target have finished,\nwill the <a href=\"https://man.page/5/machine-id\">machine-id(5)</a> be committed to disk, marking\nthe first boot as completed. If the boot is aborted at any\ntime before that, the next boot will re-run any units with\n<i>ConditionFirstBoot=yes</i>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">getty-pre.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A special\npassive target unit. Users of this target are expected to\npull it in the boot transaction via a dependency (e.g.\n<i>Wants=</i>). Order your unit before this unit if you want\nto make use of the console just before getty is\nstarted.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">local-fs-pre.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\ntarget unit is automatically ordered before all local mount\npoints marked with <b>auto</b> (see above). It can be used\nto execute certain units before all local mounts.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">network.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This unit\nis supposed to indicate when network functionality is\navailable, but it is only very weakly defined what that is\nsupposed to mean. However, the following should apply at\nminimum:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nAt start-up, any configured synthetic network devices (i.e.\nnot physical ones that require hardware to show up and be\nprobed, but virtual ones like bridge devices and similar\nwhich are created programmatically) that do not depend on\nany underlying hardware should be allocated by the time this\ntarget is reached. It is not necessary for these interfaces\nto also have completed IP level configuration by the time\nnetwork.target is reached.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">&bull;\nAt shutdown, a unit that is ordered after network.target\nwill be stopped before the network &mdash; to whatever level\nit might be set up by then &mdash; is shut down. It is hence\nuseful when writing service files that require network\naccess on shutdown, which should order themselves after this\ntarget, but not pull it in. Also see</font>\n<b><font color=\"#0000FF\">Running Services After the Network\nis up</font></b>\n<small><font color=\"#000000\">[1]</font></small>\n<font color=\"#000000\">for more information.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">It\nmust emphasized that at start-up there's no guarantee that\nhardware-based devices have shown up by the time this target\nis reached, or even acquired complete IP configuration. For\nthat purpose use network-online.target as described\nabove.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">network-pre.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\npassive target unit may be pulled in by services that want\nto run before any network is set up, for example for the\npurpose of setting up a firewall. All network management\nsoftware orders itself after this target, but does not pull\nit in.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">nss-lookup.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A target\nthat should be used as synchronization point for all\nhost/network name service lookups. Note that this is\nindependent of UNIX user/group name lookups for which\nnss-user-lookup.target should be used. All services for\nwhich the availability of full host/network name resolution\nis essential should be ordered after this target, but not\npull it in. systemd automatically adds dependencies of type\n<i>After=</i> for this target unit to all SysV init script\nservice units with an LSB header referring to the\n&quot;$named&quot; facility.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">nss-user-lookup.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A target\nthat should be used as synchronization point for all regular\nUNIX user/group name service lookups. Note that this is\nindependent of host/network name lookups for which\nnss-lookup.target should be used. All services for which the\navailability of the full user/group database is essential\nshould be ordered after this target, but not pull it in. All\nservices which provide parts of the user/group database\nshould be ordered before this target, and pull it in. Note\nthat this unit is only relevant for regular users and groups\n&mdash; system users and groups are required to be\nresolvable during earliest boot already, and hence do not\nneed any special ordering against this target.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">remote-fs-pre.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\ntarget unit is automatically ordered before all mount point\nunits (see above) and cryptsetup/veritysetup devices marked\nwith the <b>_netdev</b>. It can be used to run certain units\nbefore remote encrypted devices and mounts are established.\nNote that this unit is generally not part of the initial\ntransaction, unless the unit that wants to be ordered before\nall remote mounts pulls it in via a <i>Wants=</i> type\ndependency. If the unit wants to be pulled in by the first\nremote mount showing up, it should use network-online.target\n(see above).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">rpcbind.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nportmapper/rpcbind pulls in this target and orders itself\nbefore it, to indicate its availability. systemd\nautomatically adds dependencies of type <i>After=</i> for\nthis target unit to all SysV init script service units with\nan LSB header referring to the &quot;$portmap&quot;\nfacility.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">time-set.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Services\nresponsible for setting the system clock\n(<b>CLOCK_REALTIME</b>) from a local source (such as a\nmaintained timestamp file or imprecise real-time clock)\nshould pull in this target and order themselves before it.\nServices where approximate, roughly monotonic time is\ndesired should be ordered after this unit, but not pull it\nin.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\ntarget does not provide the accuracy guarantees of\ntime-sync.target (see below), however does not depend on\nremote clock sources to be reachable, i.e. the target is\ntypically not delayed by network problems and similar. Use\nof this target is recommended for services where approximate\nclock accuracy and rough monotonicity is desired but\nactivation shall not be delayed for possibly unreliable\nnetwork communication.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">The\nservice manager automatically adds dependencies of type\n<i>After=</i> for this target unit to all timer units with\nat least one <i>OnCalendar=</i> directive.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">The\n<b>systemd-timesyncd.service</b>(8) service is a simple\ndaemon that pulls in this target and orders itself before\nit. Besides implementing the SNTP network protocol it\nmaintains a timestamp file on disk whose modification time\nis regularlary updated. At service start-up the local system\nclock is set from that modification time, ensuring it\nincreases roughly monotonically.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Note\nthat ordering a unit after time-set.target only has effect\nif there's actually a service ordered before it that delays\nit until the clock is adjusted for rough monotonicity.\nOtherwise, this target might get reached before the clock is\nadjusted to be roughly monotonic. Enable\n<b>systemd-timesyncd.service</b>(8), or an alternative NTP\nimplementation to delay the target.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">time-sync.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Services\nindicating completed synchronization of the system clock\n(<b>CLOCK_REALTIME</b>) to a remote source should pull in\nthis target and order themselves before it. Services where\naccurate time is essential should be ordered after this\nunit, but not pull it in.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">The\nservice manager automatically adds dependencies of type\n<i>After=</i> for this target unit to all SysV init script\nservice units with an LSB header referring to the\n&quot;$time&quot; facility, as well to all timer units with\nat least one <i>OnCalendar=</i> directive.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\ntarget provides stricter clock accuracy guarantees than\ntime-set.target (see above), but likely requires network\ncommunication and thus introduces unpredictable delays.\nServices that require clock accuracy and where network\ncommunication delays are acceptable should use this target.\nServices that require a less accurate clock, and only\napproximate and roughly monotonic clock behaviour should use\ntime-set.target instead.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Note\nthat ordering a unit after time-sync.target only has effect\nif there's actually a service ordered before it that delays\nit until clock synchronization is reached. Otherwise, this\ntarget might get reached before the clock is synchronized to\nany remote accurate reference clock. When using\n<b>systemd-timesyncd.service</b>(8), enable\n<b>systemd-time-wait-sync.service</b>(8) to delay the\ntarget; or use an equivalent service for other NTP\nimplementations.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\"><b>Table&nbsp;1.&nbsp;Comparison</b></font></p>\n\n\n<p align=\"center\"><font color=\"#000000\"><b><img src=\"grohtml-3513391.png\" alt=\"Image grohtml-3513391.png\"></b></font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>Special\nSlice Units</b> <br>\nThere are four &quot;.slice&quot; units which form the basis\nof the hierarchy for assignment of resources for services,\nusers, and virtual machines or containers. See\n<b>systemd.slice</b>(7) for details about slice\nunits.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">-.slice</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The root\nslice is the root of the slice hierarchy. It usually does\nnot contain units directly, but may be used to set defaults\nfor the whole tree.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">system.slice</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">By\ndefault, all system services started by <b>systemd</b> are\nfound in this slice.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">user.slice</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">By\ndefault, all user processes and services started on behalf\nof the user, including the per-user systemd instance are\nfound in this slice. This is pulled in by\nsystemd-logind.service.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">machine.slice</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">By\ndefault, all virtual machines and containers registered with\n<b>systemd-machined</b> are found in this slice. This is\npulled in by systemd-machined.service.</font></p>\n\n<h2>UNITS MANAGED BY THE USER SERVICE MANAGER\n<a name=\"UNITS MANAGED BY THE USER SERVICE MANAGER\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>Special\nUser Units</b> <br>\nWhen systemd runs as a user instance, the following special\nunits are available:</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">default.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This is\nthe main target of the user session, started by default.\nVarious services that compose the normal user session should\nbe pulled into this target. In this regard, default.target\nis similar to multi-user.target in the system instance, but\nit is a real unit, not an alias.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">In\naddition, the following units are available which have\ndefinitions similar to their system counterparts:\nexit.target, shutdown.target, sockets.target, timers.target,\npaths.target, bluetooth.target, printer.target,\nsmartcard.target, sound.target.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>Special\nPassive User Units</b> <br>\ngraphical-session.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\ntarget is active whenever any graphical session is running.\nIt is used to stop user services which only apply to a\ngraphical (X, Wayland, etc.) session when the session is\nterminated. Such services should have\n&quot;PartOf=graphical-session.target&quot; in their [Unit]\nsection. A target for a particular session (e. g.\ngnome-session.target) starts and stops\n&quot;graphical-session.target&quot; with\n&quot;BindsTo=graphical-session.target&quot;.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Which\nservices are started by a session target is determined by\nthe &quot;Wants=&quot; and &quot;Requires=&quot;\ndependencies. For services that can be enabled\nindependently, symlinks in &quot;.wants/&quot; and\n&quot;.requires/&quot; should be used, see\n<b>systemd.unit</b>(5). Those symlinks should either be\nshipped in packages, or should be added dynamically after\ninstallation, for example using &quot;systemctl\nadd-wants&quot;, see <a href=\"https://man.page/1/systemctl\">systemctl(1)</a>.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\"><b>Example&nbsp;1.&nbsp;Nautilus\nas part of a GNOME session</b>\n&quot;gnome-session.target&quot; pulls in Nautilus as\ntop-level service:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">[Unit]\n<br>\nDescription=User systemd services for GNOME graphical\nsession <br>\nWants=nautilus.service <br>\nBindsTo=graphical-session.target</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">&quot;nautilus.service&quot;\ngets stopped when the session stops:</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">[Unit]\n<br>\nDescription=Render the desktop icons with Nautilus <br>\nPartOf=graphical-session.target</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">[Service]\n<br>\n...</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">graphical-session-pre.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">This\ntarget contains services which set up the environment or\nglobal configuration of a graphical session, such as SSH/GPG\nagents (which need to export an environment variable into\nall desktop processes) or migration of obsolete d-conf keys\nafter an OS upgrade (which needs to happen before starting\nany process that might use them). This target must be\nstarted before starting a graphical session like\ngnome-session.target.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">xdg-desktop-autostart.target</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The XDG\nspecification defines a way to autostart applications using\nXDG desktop files. systemd ships\n<b>systemd-xdg-autostart-generator</b>(8) for the XDG\ndesktop files in autostart directories. Desktop Environments\ncan opt-in to use this service by adding a <i>Wants=</i>\ndependency on xdg-desktop-autostart.target.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>Special\nUser Slice Units</b> <br>\nThere are four &quot;.slice&quot; units which form the basis\nof the user hierarchy for assignment of resources for user\napplications and services. See <b>systemd.slice</b>(7) for\ndetails about slice units and the documentation about</font>\n<b><font color=\"#0000FF\">Desktop Environments</font></b>\n<small><font color=\"#000000\">[3]</font></small>\n<font color=\"#000000\">for further information.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">-.slice</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The root\nslice is the root of the user's slice hierarchy. It usually\ndoes not contain units directly, but may be used to set\ndefaults for the whole tree.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">app.slice</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">By\ndefault, all user services and applications managed by\n<b>systemd</b> are found in this slice. All interactively\nlaunched applications like web browsers and text editors as\nwell as non-critical services should be placed into this\nslice.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">session.slice</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">All\nessential services and applications required for the session\nshould use this slice. These are services that either cannot\nbe restarted easily or where latency issues may affect the\ninteractivity of the system and applications. This includes\nthe display server, screen readers and other services such\nas DBus or XDG portals. Such services should be configured\nto be part of this slice by adding\n<i>Slice=session.slice</i> to their unit files.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">background.slice</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">All\nservices running low-priority background tasks should use\nthis slice. This permits resources to be preferentially\nassigned to the other slices. Examples include\nnon-interactive tasks like file indexing or backup\noperations where latency is not important.</font></p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><a href=\"https://man.page/1/systemd\">systemd(1)</a>,\n<b>systemd.unit</b>(5), <b>systemd.service</b>(5),\n<b>systemd.socket</b>(5), <b>systemd.target</b>(5),\n<b>systemd.slice</b>(5), <a href=\"https://man.page/7/bootup\">bootup(7)</a>,\n<b>systemd-fstab-generator</b>(8),\n<b>user@.service</b>(5)</font></p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"12%\"></td>\n<td width=\"3%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">1.</font></p> </td>\n<td width=\"2%\"></td>\n<td width=\"61%\">\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">Running\nServices After the Network is up</font></p></td>\n<td width=\"22%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">https://www.freedesktop.org/wiki/Software/systemd/NetworkTarget</font></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"12%\"></td>\n<td width=\"3%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">2.</font></p> </td>\n<td width=\"2%\"></td>\n<td width=\"25%\">\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">Syslog\nInterface</font></p> </td>\n<td width=\"58%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">https://www.freedesktop.org/wiki/Software/systemd/syslog</font></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"12%\"></td>\n<td width=\"3%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">3.</font></p> </td>\n<td width=\"2%\"></td>\n<td width=\"31%\">\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">Desktop\nEnvironments</font></p> </td>\n<td width=\"52%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">https://systemd.io/DESKTOP_ENVIRONMENTS</font></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#UNITS MANAGED BY THE SYSTEM SERVICE MANAGER\">UNITS MANAGED BY THE SYSTEM SERVICE MANAGER</a>","<a href=\"#UNITS MANAGED BY THE USER SERVICE MANAGER\">UNITS MANAGED BY THE USER SERVICE MANAGER</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#NOTES\">NOTES</a>"],"level":7}