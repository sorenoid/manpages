{"name":"arp","body":"\n\n<h1 align=\"center\">ARP</h1>\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">arp - Linux ARP\nkernel module.</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This kernel\nprotocol module implements the Address Resolution Protocol\ndefined in RFC&nbsp;826. It is used to convert between\nLayer2 hardware addresses and IPv4 protocol addresses on\ndirectly connected networks. The user normally doesn&rsquo;t\ninteract directly with this module except to configure it;\ninstead it provides a service for other protocols in the\nkernel.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A user process\ncan receive ARP packets by using <a href=\"https://man.page/7/packet\">packet(7)</a> sockets.\nThere is also a mechanism for managing the ARP cache in\nuser-space by using <a href=\"https://man.page/7/netlink\">netlink(7)</a> sockets. The ARP table\ncan also be controlled via <a href=\"https://man.page/2/ioctl\">ioctl(2)</a> on any\n<b>AF_INET</b> socket.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The ARP module\nmaintains a cache of mappings between hardware addresses and\nprotocol addresses. The cache has a limited size so old and\nless frequently used entries are garbage-collected. Entries\nwhich are marked as permanent are never deleted by the\ngarbage-collector. The cache can be directly manipulated by\nthe use of ioctls and its behavior can be tuned by the\n<i>/proc</i> interfaces described below.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When there is\nno positive feedback for an existing mapping after some time\n(see the <i>/proc</i> interfaces below), a neighbor cache\nentry is considered stale. Positive feedback can be gotten\nfrom a higher layer; for example from a successful TCP ACK.\nOther protocols can signal forward progress using the\n<b>MSG_CONFIRM</b> flag to <a href=\"https://man.page/2/sendmsg\">sendmsg(2)</a>. When there is\nno forward progress, ARP tries to reprobe. It first tries to\nask a local arp daemon <b>app_solicit</b> times for an\nupdated MAC address. If that fails and an old MAC address is\nknown, a unicast probe is sent <b>ucast_solicit</b> times.\nIf that fails too, it will broadcast a new ARP request to\nthe network. Requests are sent only when there is data\nqueued for sending.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Linux will\nautomatically add a nonpermanent proxy arp entry when it\nreceives a request for an address it forwards to and proxy\narp is enabled on the receiving interface. When there is a\nreject route for the target, no proxy arp entry is\nadded.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Ioctls</b>\n<br>\nThree ioctls are available on all <b>AF_INET</b> sockets.\nThey take a pointer to a <i>struct arpreq</i> as their\nargument.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct arpreq {\n<br>\nstruct sockaddr arp_pa; /* protocol address */ <br>\nstruct sockaddr arp_ha; /* hardware address */ <br>\nint arp_flags; /* flags */ <br>\nstruct sockaddr arp_netmask; /* netmask of protocol address\n*/ <br>\nchar arp_dev[16]; <br>\n};</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>SIOCSARP</b>,\n<b>SIOCDARP</b> and <b>SIOCGARP</b> respectively set, delete\nand get an ARP mapping. Setting and deleting ARP maps are\nprivileged operations and may be performed only by a process\nwith the <b>CAP_NET_ADMIN</b> capability or an effective UID\nof 0.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>arp_pa</i>\nmust be an <b>AF_INET</b> address and <i>arp_ha</i> must\nhave the same type as the device which is specified in\n<i>arp_dev</i>. <i>arp_dev</i> is a zero-terminated string\nwhich names a device.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3505001.png\" alt=\"Image grohtml-3505001.png\"></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If the\n<b>ATF_NETMASK</b> flag is set, then <i>arp_netmask</i>\nshould be valid. Linux 2.2 does not support proxy network\nARP entries, so this should be set to 0xffffffff, or 0 to\nremove an existing proxy arp entry. <b>ATF_USETRAILERS</b>\nis obsolete and should not be used.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>/proc\ninterfaces</b> <br>\nARP supports a range of <i>/proc</i> interfaces to configure\nparameters on a global or per-interface basis. The\ninterfaces can be accessed by reading or writing the\n<i>/proc/sys/net/ipv4/neigh/*/*</i> files. Each interface in\nthe system has its own directory in\n<i>/proc/sys/net/ipv4/neigh/</i>. The setting in the\n&quot;default&quot; directory is used for all newly created\ndevices. Unless otherwise specified, time-related interfaces\nare specified in seconds. <i><br>\nanycast_delay</i> (since Linux 2.2)</p>\n\n<p style=\"margin-left:22%;\">The maximum number of jiffies\nto delay before replying to a IPv6 neighbor solicitation\nmessage. Anycast support is not yet implemented. Defaults to\n1 second.</p>\n\n<p style=\"margin-left:11%;\"><i>app_solicit</i> (since Linux\n2.2)</p>\n\n<p style=\"margin-left:22%;\">The maximum number of probes to\nsend to the user space ARP daemon via netlink before\ndropping back to multicast probes (see\n<i>mcast_solicit</i>). Defaults to 0.</p>\n\n<p style=\"margin-left:11%;\"><i>base_reachable_time</i>\n(since Linux 2.2)</p>\n\n<p style=\"margin-left:22%;\">Once a neighbor has been found,\nthe entry is considered to be valid for at least a random\nvalue between <i>base_reachable_time</i>/2 and\n3*<i>base_reachable_time</i>/2. An entry&rsquo;s validity\nwill be extended if it receives positive feedback from\nhigher level protocols. Defaults to 30 seconds. This file is\nnow obsolete in favor of <i>base_reachable_time_ms</i>.</p>\n\n<p style=\"margin-left:11%;\"><i>base_reachable_time_ms</i>\n(since Linux 2.6.12)</p>\n\n<p style=\"margin-left:22%;\">As for\n<i>base_reachable_time</i>, but measures time in\nmilliseconds. Defaults to 30000 milliseconds.</p>\n\n<p style=\"margin-left:11%;\"><i>delay_first_probe_time</i>\n(since Linux 2.2)</p>\n\n<p style=\"margin-left:22%;\">Delay before first probe after\nit has been decided that a neighbor is stale. Defaults to 5\nseconds.</p>\n\n<p style=\"margin-left:11%;\"><i>gc_interval</i> (since Linux\n2.2)</p>\n\n<p style=\"margin-left:22%;\">How frequently the garbage\ncollector for neighbor entries should attempt to run.\nDefaults to 30 seconds.</p>\n\n<p style=\"margin-left:11%;\"><i>gc_stale_time</i> (since\nLinux 2.2)</p>\n\n<p style=\"margin-left:22%;\">Determines how often to check\nfor stale neighbor entries. When a neighbor entry is\nconsidered stale, it is resolved again before sending data\nto it. Defaults to 60 seconds.</p>\n\n<p style=\"margin-left:11%;\"><i>gc_thresh1</i> (since Linux\n2.2)</p>\n\n<p style=\"margin-left:22%;\">The minimum number of entries\nto keep in the ARP cache. The garbage collector will not run\nif there are fewer than this number of entries in the cache.\nDefaults to 128.</p>\n\n<p style=\"margin-left:11%;\"><i>gc_thresh2</i> (since Linux\n2.2)</p>\n\n<p style=\"margin-left:22%;\">The soft maximum number of\nentries to keep in the ARP cache. The garbage collector will\nallow the number of entries to exceed this for 5 seconds\nbefore collection will be performed. Defaults to 512.</p>\n\n<p style=\"margin-left:11%;\"><i>gc_thresh3</i> (since Linux\n2.2)</p>\n\n<p style=\"margin-left:22%;\">The hard maximum number of\nentries to keep in the ARP cache. The garbage collector will\nalways run if there are more than this number of entries in\nthe cache. Defaults to 1024.</p>\n\n<p style=\"margin-left:11%;\"><i>locktime</i> (since Linux\n2.2)</p>\n\n<p style=\"margin-left:22%;\">The minimum number of jiffies\nto keep an ARP entry in the cache. This prevents ARP cache\nthrashing if there is more than one potential mapping\n(generally due to network misconfiguration). Defaults to 1\nsecond.</p>\n\n<p style=\"margin-left:11%;\"><i>mcast_solicit</i> (since\nLinux 2.2)</p>\n\n<p style=\"margin-left:22%;\">The maximum number of attempts\nto resolve an address by multicast/broadcast before marking\nthe entry as unreachable. Defaults to 3.</p>\n\n<p style=\"margin-left:11%;\"><i>proxy_delay</i> (since Linux\n2.2)</p>\n\n<p style=\"margin-left:22%;\">When an ARP request for a known\nproxy-ARP address is received, delay up to\n<i>proxy_delay</i> jiffies before replying. This is used to\nprevent network flooding in some cases. Defaults to 0.8\nseconds.</p>\n\n<p style=\"margin-left:11%;\"><i>proxy_qlen</i> (since Linux\n2.2)</p>\n\n<p style=\"margin-left:22%;\">The maximum number of packets\nwhich may be queued to proxy-ARP addresses. Defaults to\n64.</p>\n\n<p style=\"margin-left:11%;\"><i>retrans_time</i> (since\nLinux 2.2)</p>\n\n<p style=\"margin-left:22%;\">The number of jiffies to delay\nbefore retransmitting a request. Defaults to 1 second. This\nfile is now obsolete in favor of <i>retrans_time_ms</i>.</p>\n\n<p style=\"margin-left:11%;\"><i>retrans_time_ms</i> (since\nLinux 2.6.12)</p>\n\n<p style=\"margin-left:22%;\">The number of milliseconds to\ndelay before retransmitting a request. Defaults to 1000\nmilliseconds.</p>\n\n<p style=\"margin-left:11%;\"><i>ucast_solicit</i> (since\nLinux 2.2)</p>\n\n<p style=\"margin-left:22%;\">The maximum number of attempts\nto send unicast probes before asking the ARP daemon (see\n<i>app_solicit</i>). Defaults to 3.</p>\n\n<p style=\"margin-left:11%;\"><i>unres_qlen</i> (since Linux\n2.2)</p>\n\n<p style=\"margin-left:22%;\">The maximum number of packets\nwhich may be queued for each unresolved address by other\nnetwork layers. Defaults to 3.</p>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The <i>struct\narpreq</i> changed in Linux 2.0 to include the\n<i>arp_dev</i> member and the ioctl numbers changed at the\nsame time. Support for the old ioctls was dropped in Linux\n2.2.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Support for\nproxy arp entries for networks (netmask not equal\n0xffffffff) was dropped in Linux 2.2. It is replaced by\nautomatic proxy arp setup by the kernel for all reachable\nhosts on other interfaces (when forwarding and proxy arp is\nenabled for the interface).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>neigh/*</i> interfaces did not exist before Linux\n2.2.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Some timer\nsettings are specified in jiffies, which is architecture-\nand kernel version-dependent; see <a href=\"https://man.page/7/time\">time(7)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">There is no way\nto signal positive feedback from user space. This means\nconnection-oriented protocols implemented in user space will\ngenerate excessive ARP traffic, because ndisc will regularly\nreprobe the MAC address. The same problem applies for some\nkernel protocols (e.g., NFS over UDP).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This man page\nmashes together functionality that is IPv4-specific with\nfunctionality that is shared between IPv4 and IPv6.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/7/capabilities\">capabilities(7)</a>,\n<a href=\"https://man.page/7/ip\">ip(7)</a>, <b>arpd</b>(8)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">RFC&nbsp;826\nfor a description of ARP. RFC&nbsp;2461 for a description of\nIPv6 neighbor discovery and the base algorithms used. Linux\n2.2+ IPv4 ARP uses the IPv6 algorithms when applicable.</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":7}