{"name":"mq_overview","body":"\n\n<h1 align=\"center\">MQ_OVERVIEW</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">mq_overview -\noverview of POSIX message queues</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX message\nqueues allow processes to exchange data in the form of\nmessages. This API is distinct from that provided by System\nV message queues (<a href=\"https://man.page/2/msgget\">msgget(2)</a>, <a href=\"https://man.page/2/msgsnd\">msgsnd(2)</a>,\n<a href=\"https://man.page/2/msgrcv\">msgrcv(2)</a>, etc.), but provides similar\nfunctionality.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Message queues\nare created and opened using <a href=\"https://man.page/3/mq_open\">mq_open(3)</a>; this\nfunction returns a <i>message queue descriptor</i>\n(<i>mqd_t</i>), which is used to refer to the open message\nqueue in later calls. Each message queue is identified by a\nname of the form <i>/somename</i>; that is, a\nnull-terminated string of up to <b>NAME_MAX</b> (i.e., 255)\ncharacters consisting of an initial slash, followed by one\nor more characters, none of which are slashes. Two processes\ncan operate on the same queue by passing the same name to\n<a href=\"https://man.page/3/mq_open\">mq_open(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Messages are\ntransferred to and from a queue using <a href=\"https://man.page/3/mq_send\">mq_send(3)</a> and\n<a href=\"https://man.page/3/mq_receive\">mq_receive(3)</a>. When a process has finished using the\nqueue, it closes it using <a href=\"https://man.page/3/mq_close\">mq_close(3)</a>, and when the\nqueue is no longer required, it can be deleted using\n<a href=\"https://man.page/3/mq_unlink\">mq_unlink(3)</a>. Queue attributes can be retrieved and\n(in some cases) modified using <a href=\"https://man.page/3/mq_getattr\">mq_getattr(3)</a> and\n<a href=\"https://man.page/3/mq_setattr\">mq_setattr(3)</a>. A process can request asynchronous\nnotification of the arrival of a message on a previously\nempty queue using <a href=\"https://man.page/3/mq_notify\">mq_notify(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A message queue\ndescriptor is a reference to an <i>open message queue\ndescription</i> (see <a href=\"https://man.page/2/open\">open(2)</a>). After a\n<a href=\"https://man.page/2/fork\">fork(2)</a>, a child inherits copies of its\nparent&rsquo;s message queue descriptors, and these\ndescriptors refer to the same open message queue\ndescriptions as the corresponding message queue descriptors\nin the parent. Corresponding message queue descriptors in\nthe two processes share the flags (<i>mq_flags</i>) that are\nassociated with the open message queue description.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Each message\nhas an associated <i>priority</i>, and messages are always\ndelivered to the receiving process highest priority first.\nMessage priorities range from 0 (low) to\n<i>sysconf(_SC_MQ_PRIO_MAX)&nbsp;-&nbsp;1</i> (high). On\nLinux, <i>sysconf(_SC_MQ_PRIO_MAX)</i> returns 32768, but\nPOSIX.1 requires only that an implementation support at\nleast priorities in the range 0 to 31; some implementations\nprovide only this range.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The remainder\nof this section describes some specific details of the Linux\nimplementation of POSIX message queues.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Library\ninterfaces and system calls</b> <br>\nIn most cases the <b>mq_*</b>() library interfaces listed\nabove are implemented on top of underlying system calls of\nthe same name. Deviations from this scheme are indicated in\nthe following table:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"23%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"23%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"23%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"23%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"23%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"23%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"23%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"23%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"23%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"23%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"23%\"></td>\n<td width=\"8%\"></td>\n<td width=\"7%\"></td>\n<td width=\"62%\">\n</td></tr>\n</table>\n\n\n<p align=\"center\"><img src=\"grohtml-3521411.png\" alt=\"Image grohtml-3521411.png\"></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Versions</b>\n<br>\nPOSIX message queues have been supported on Linux since\nkernel 2.6.6. Glibc support has been provided since version\n2.3.4.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Kernel\nconfiguration</b> <br>\nSupport for POSIX message queues is configurable via the\n<b>CONFIG_POSIX_MQUEUE</b> kernel configuration option. This\noption is enabled by default.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Persistence</b>\n<br>\nPOSIX message queues have kernel persistence: if not removed\nby <a href=\"https://man.page/3/mq_unlink\">mq_unlink(3)</a>, a message queue will exist until the\nsystem is shut down.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Linking</b>\n<br>\nPrograms using the POSIX message queue API must be compiled\nwith <i>cc -lrt</i> to link against the real-time library,\n<i>librt</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>/proc\ninterfaces</b> <br>\nThe following interfaces can be used to limit the amount of\nkernel memory consumed by POSIX message queues and to set\nthe default attributes for new message queues: <i><br>\n/proc/sys/fs/mqueue/msg_default</i> (since Linux 3.5)</p>\n\n<p style=\"margin-left:22%;\">This file defines the value\nused for a new queue&rsquo;s <i>mq_maxmsg</i> setting when\nthe queue is created with a call to <a href=\"https://man.page/3/mq_open\">mq_open(3)</a> where\n<i>attr</i> is specified as NULL. The default value for this\nfile is 10. The minimum and maximum are as for\n<i>/proc/sys/fs/mqueue/msg_max</i>. A new queue&rsquo;s\ndefault <i>mq_maxmsg</i> value will be the smaller of\n<i>msg_default</i> and <i>msg_max</i>. Up until Linux\n2.6.28, the default <i>mq_maxmsg</i> was 10; from Linux\n2.6.28 to Linux 3.4, the default was the value defined for\nthe <i>msg_max</i> limit.</p>\n\n\n<p style=\"margin-left:11%;\"><i>/proc/sys/fs/mqueue/msg_max</i></p>\n\n<p style=\"margin-left:22%;\">This file can be used to view\nand change the ceiling value for the maximum number of\nmessages in a queue. This value acts as a ceiling on the\n<i>attr-&gt;mq_maxmsg</i> argument given to\n<a href=\"https://man.page/3/mq_open\">mq_open(3)</a>. The default value for <i>msg_max</i> is\n10. The minimum value is 1 (10 in kernels before 2.6.28).\nThe upper limit is <b>HARD_MSGMAX</b>. The <i>msg_max</i>\nlimit is ignored for privileged processes\n(<b>CAP_SYS_RESOURCE</b>), but the <b>HARD_MSGMAX</b>\nceiling is nevertheless imposed.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The definition\nof <b>HARD_MSGMAX</b> has changed across kernel\nversions:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>Up to Linux 2.6.32:\n<i>131072&nbsp;/&nbsp;sizeof(void&nbsp;*)</i></p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>Linux 2.6.33 to 3.4:\n<i>(32768&nbsp;*&nbsp;sizeof(void&nbsp;*) / 4)</i></p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>Since Linux 3.5: 65,536</p></td></tr>\n</table>\n\n\n<p style=\"margin-left:11%;\"><i>/proc/sys/fs/mqueue/msgsize_default</i>\n(since Linux 3.5)</p>\n\n<p style=\"margin-left:22%;\">This file defines the value\nused for a new queue&rsquo;s <i>mq_msgsize</i> setting when\nthe queue is created with a call to <a href=\"https://man.page/3/mq_open\">mq_open(3)</a> where\n<i>attr</i> is specified as NULL. The default value for this\nfile is 8192 (bytes). The minimum and maximum are as for\n<i>/proc/sys/fs/mqueue/msgsize_max</i>. If\n<i>msgsize_default</i> exceeds <i>msgsize_max</i>, a new\nqueue&rsquo;s default <i>mq_msgsize</i> value is capped to\nthe <i>msgsize_max</i> limit. Up until Linux 2.6.28, the\ndefault <i>mq_msgsize</i> was 8192; from Linux 2.6.28 to\nLinux 3.4, the default was the value defined for the\n<i>msgsize_max</i> limit.</p>\n\n\n<p style=\"margin-left:11%;\"><i>/proc/sys/fs/mqueue/msgsize_max</i></p>\n\n<p style=\"margin-left:22%;\">This file can be used to view\nand change the ceiling on the maximum message size. This\nvalue acts as a ceiling on the <i>attr-&gt;mq_msgsize</i>\nargument given to <a href=\"https://man.page/3/mq_open\">mq_open(3)</a>. The default value for\n<i>msgsize_max</i> is 8192 bytes. The minimum value is 128\n(8192 in kernels before 2.6.28). The upper limit for\n<i>msgsize_max</i> has varied across kernel versions:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>Before Linux 2.6.28, the upper limit is\n<b>INT_MAX</b>.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>From Linux 2.6.28 to 3.4, the limit is 1,048,576.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"74%\">\n\n\n<p>Since Linux 3.5, the limit is 16,777,216\n(<b>HARD_MSGSIZEMAX</b>).</p> </td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The\n<i>msgsize_max</i> limit is ignored for privileged process\n(<b>CAP_SYS_RESOURCE</b>), but, since Linux 3.5, the\n<b>HARD_MSGSIZEMAX</b> ceiling is enforced for privileged\nprocesses.</p>\n\n\n<p style=\"margin-left:11%;\"><i>/proc/sys/fs/mqueue/queues_max</i></p>\n\n<p style=\"margin-left:22%;\">This file can be used to view\nand change the system-wide limit on the number of message\nqueues that can be created. The default value for\n<i>queues_max</i> is 256. No ceiling is imposed on the\n<i>queues_max</i> limit; privileged processes\n(<b>CAP_SYS_RESOURCE</b>) can exceed the limit (but see\nBUGS).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Resource\nlimit</b> <br>\nThe <b>RLIMIT_MSGQUEUE</b> resource limit, which places a\nlimit on the amount of space that can be consumed by all of\nthe message queues belonging to a process&rsquo;s real user\nID, is described in <a href=\"https://man.page/2/getrlimit\">getrlimit(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Mounting the\nmessage queue filesystem</b> <br>\nOn Linux, message queues are created in a virtual\nfilesystem. (Other implementations may also provide such a\nfeature, but the details are likely to differ.) This\nfilesystem can be mounted (by the superuser) using the\nfollowing commands:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"># <b>mkdir\n/dev/mqueue</b> <br>\n# <b>mount -t mqueue none /dev/mqueue</b></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The sticky bit\nis automatically enabled on the mount directory.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">After the\nfilesystem has been mounted, the message queues on the\nsystem can be viewed and manipulated using the commands\nusually used for files (e.g., <a href=\"https://man.page/1/ls\">ls(1)</a> and\n<a href=\"https://man.page/1/rm\">rm(1)</a>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The contents of\neach file in the directory consist of a single line\ncontaining information about the queue:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">$ <b>cat\n/dev/mqueue/mymq</b> <br>\nQSIZE:129 NOTIFY:2 SIGNO:0 NOTIFY_PID:8260</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">These fields\nare as follows:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>QSIZE</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>Number of bytes of data in all messages in the queue\n(but see BUGS).</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><b>NOTIFY_PID</b></p>\n\n<p style=\"margin-left:22%;\">If this is nonzero, then the\nprocess with this PID has used <a href=\"https://man.page/3/mq_notify\">mq_notify(3)</a> to\nregister for asynchronous message notification, and the\nremaining fields describe how notification occurs.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>NOTIFY</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Notification method: 0 is <b>SIGEV_SIGNAL</b>; 1 is\n<b>SIGEV_NONE</b>; and 2 is <b>SIGEV_THREAD</b>.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"9%\">\n\n\n<p><b>SIGNO</b></p></td>\n<td width=\"2%\"></td>\n<td width=\"78%\">\n\n\n<p>Signal number to be used for <b>SIGEV_SIGNAL</b>.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Linux\nimplementation of message queue descriptors</b> <br>\nOn Linux, a message queue descriptor is actually a file\ndescriptor. (POSIX does not require such an implementation.)\nThis means that a message queue descriptor can be monitored\nusing <a href=\"https://man.page/2/select\">select(2)</a>, <a href=\"https://man.page/2/poll\">poll(2)</a>, or <a href=\"https://man.page/7/epoll\">epoll(7)</a>.\nThis is not portable.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nclose-on-exec flag (see <a href=\"https://man.page/2/open\">open(2)</a>) is automatically set\non the file descriptor returned by <a href=\"https://man.page/2/mq_open\">mq_open(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>IPC\nnamespaces</b> <br>\nFor a discussion of the interaction of POSIX message queue\nobjects and IPC namespaces, see\n<a href=\"https://man.page/7/ipc_namespaces\">ipc_namespaces(7)</a>.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">System V\nmessage queues (<a href=\"https://man.page/2/msgget\">msgget(2)</a>, <a href=\"https://man.page/2/msgsnd\">msgsnd(2)</a>,\n<a href=\"https://man.page/2/msgrcv\">msgrcv(2)</a>, etc.) are an older API for exchanging\nmessages between processes. POSIX message queues provide a\nbetter designed interface than System V message queues; on\nthe other hand POSIX message queues are less widely\navailable (especially on older systems) than System V\nmessage queues.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Linux does not\ncurrently (2.6.26) support the use of access control lists\n(ACLs) for POSIX message queues.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">In Linux\nversions 3.5 to 3.14, the kernel imposed a ceiling of 1024\n(<b>HARD_QUEUESMAX</b>) on the value to which the\n<i>queues_max</i> limit could be raised, and the ceiling was\nenforced even for privileged processes. This ceiling value\nwas removed in Linux 3.14, and patches to stable kernels\n3.5.x to 3.13.x also removed the ceiling.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">As originally\nimplemented (and documented), the QSIZE field displayed the\ntotal number of (user-supplied) bytes in all messages in the\nmessage queue. Some changes in Linux 3.5 inadvertently\nchanged the behavior, so that this field also included a\ncount of kernel overhead bytes used to store the messages in\nthe queue. This behavioral regression was rectified in Linux\n4.2 (and earlier stable kernel series), so that the count\nonce more included just the bytes of user data in messages\nin the queue.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">An example of\nthe use of various message queue functions is shown in\n<a href=\"https://man.page/3/mq_notify\">mq_notify(3)</a>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/getrlimit\">getrlimit(2)</a>,\n<a href=\"https://man.page/2/mq_getsetattr\">mq_getsetattr(2)</a>, <a href=\"https://man.page/2/poll\">poll(2)</a>, <a href=\"https://man.page/2/select\">select(2)</a>,\n<a href=\"https://man.page/3/mq_close\">mq_close(3)</a>, <a href=\"https://man.page/3/mq_getattr\">mq_getattr(3)</a>,\n<a href=\"https://man.page/3/mq_notify\">mq_notify(3)</a>, <a href=\"https://man.page/3/mq_open\">mq_open(3)</a>,\n<a href=\"https://man.page/3/mq_receive\">mq_receive(3)</a>, <a href=\"https://man.page/3/mq_send\">mq_send(3)</a>,\n<a href=\"https://man.page/3/mq_unlink\">mq_unlink(3)</a>, <a href=\"https://man.page/7/epoll\">epoll(7)</a>,\n<a href=\"https://man.page/7/namespaces\">namespaces(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":7}