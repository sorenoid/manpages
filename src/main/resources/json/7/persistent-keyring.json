{"name":"persistent-keyring","body":"\n\n<h1 align=\"center\">PERSISTENT-KEYRING</h1>\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">persistent-keyring\n- per-user persistent keyring</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The persistent\nkeyring is a keyring used to anchor keys on behalf of a\nuser. Each UID the kernel deals with has its own persistent\nkeyring that is shared between all threads owned by that\nUID. The persistent keyring has a name (description) of the\nform <i>_persistent.&lt;UID&gt;</i> where <i>&lt;UID&gt;</i>\nis the user ID of the corresponding user.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The persistent\nkeyring may not be accessed directly, even by processes with\nthe appropriate UID. Instead, it must first be linked to one\nof a process&rsquo;s keyrings, before that keyring can\naccess the persistent keyring by virtue of its possessor\npermits. This linking is done with the\n<a href=\"https://man.page/3/keyctl_get_persistent\">keyctl_get_persistent(3)</a> function.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If a persistent\nkeyring does not exist when it is accessed by the\n<a href=\"https://man.page/3/keyctl_get_persistent\">keyctl_get_persistent(3)</a> operation, it will be\nautomatically created.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Each time the\n<a href=\"https://man.page/3/keyctl_get_persistent\">keyctl_get_persistent(3)</a> operation is performed, the\npersistent key&rsquo;s expiration timer is reset to the\nvalue in:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">/proc/sys/kernel/keys/persistent_keyring_expiry</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Should the\ntimeout be reached, the persistent keyring will be removed\nand everything it pins can then be garbage collected. The\nkey will then be re-created on a subsequent call to\n<a href=\"https://man.page/3/keyctl_get_persistent\">keyctl_get_persistent(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The persistent\nkeyring is not directly searched by <a href=\"https://man.page/2/request_key\">request_key(2)</a>;\nit is searched only if it is linked into one of the keyrings\nthat is searched by <a href=\"https://man.page/2/request_key\">request_key(2)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The persistent\nkeyring is independent of <a href=\"https://man.page/2/clone\">clone(2)</a>, <a href=\"https://man.page/2/fork\">fork(2)</a>,\n<a href=\"https://man.page/2/vfork\">vfork(2)</a>, <a href=\"https://man.page/2/execve\">execve(2)</a>, and <a href=\"https://man.page/2/_exit\">_exit(2)</a>. It\npersists until its expiration timer triggers, at which point\nit is garbage collected. This allows the persistent keyring\nto carry keys beyond the life of the kernel&rsquo;s record\nof the corresponding UID (the destruction of which results\nin the destruction of the <a href=\"https://man.page/7/user-keyring\">user-keyring(7)</a> and the\n<a href=\"https://man.page/7/user-session-keyring\">user-session-keyring(7)</a>). The persistent keyring can\nthus be used to hold authentication tokens for processes\nthat run without user interaction, such as programs started\nby <b>cron</b>(8).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The persistent\nkeyring is used to store UID-specific objects that\nthemselves have limited lifetimes (e.g., kerberos tokens).\nIf those tokens cease to be used (i.e., the persistent\nkeyring is not accessed), then the timeout of the persistent\nkeyring ensures that the corresponding objects are\nautomatically discarded.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Special\noperations</b> <br>\nThe <i>keyutils</i> library provides the\n<a href=\"https://man.page/3/keyctl_get_persistent\">keyctl_get_persistent(3)</a> function for manipulating\npersistent keyrings. (This function is an interface to the\n<a href=\"https://man.page/2/keyctl\">keyctl(2)</a> <b>KEYCTL_GET_PERSISTENT</b> operation.)\nThis operation allows the calling thread to get the\npersistent keyring corresponding to its own UID or, if the\nthread has the <b>CAP_SETUID</b> capability, the persistent\nkeyring corresponding to some other UID in the same user\nnamespace.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Each user\nnamespace owns a keyring called <i>.persistent_register</i>\nthat contains links to all of the persistent keys in that\nnamespace. (The <i>.persistent_register</i> keyring can be\nseen when reading the contents of the <i>/proc/keys</i> file\nfor the UID 0 in the namespace.) The\n<a href=\"https://man.page/3/keyctl_get_persistent\">keyctl_get_persistent(3)</a> operation looks for a key\nwith a name of the form <i>_persistent.&lt;UID&gt;</i> in\nthat keyring, creates the key if it does not exist, and\nlinks it into the keyring.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/1/keyctl\">keyctl(1)</a>,\n<a href=\"https://man.page/3/keyctl\">keyctl(3)</a>, <a href=\"https://man.page/3/keyctl_get_persistent\">keyctl_get_persistent(3)</a>,\n<a href=\"https://man.page/7/keyrings\">keyrings(7)</a>, <a href=\"https://man.page/7/process-keyring\">process-keyring(7)</a>,\n<a href=\"https://man.page/7/session-keyring\">session-keyring(7)</a>, <a href=\"https://man.page/7/thread-keyring\">thread-keyring(7)</a>,\n<a href=\"https://man.page/7/user-keyring\">user-keyring(7)</a>, <a href=\"https://man.page/7/user-session-keyring\">user-session-keyring(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":7}