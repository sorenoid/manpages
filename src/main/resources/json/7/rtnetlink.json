{"name":"rtnetlink","description":"rtnetlink -\nLinux IPv4 routing socket","body":"\n\n<h1 align=\"center\">RTNETLINK</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">rtnetlink -\nLinux IPv4 routing socket</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>#include\n&lt;asm/types.h&gt; <br>\n#include &lt;linux/if_link.h&gt; <br>\n#include &lt;linux/netlink.h&gt; <br>\n#include &lt;linux/rtnetlink.h&gt; <br>\n#include &lt;sys/socket.h&gt;</b></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>rtnetlink_socket\n= socket(AF_NETLINK, int</b> <i>socket_type</i><b>,\nNETLINK_ROUTE);</b></p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Rtnetlink\nallows the kernel&rsquo;s routing tables to be read and\naltered. It is used within the kernel to communicate between\nvarious subsystems, though this usage is not documented\nhere, and for communication with user-space programs.\nNetwork routes, IP addresses, link parameters, neighbor\nsetups, queueing disciplines, traffic classes and packet\nclassifiers may all be controlled through\n<b>NETLINK_ROUTE</b> sockets. It is based on netlink\nmessages; see <a href=\"https://man.page/7/netlink\">netlink(7)</a> for more information.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Routing\nattributes</b> <br>\nSome rtnetlink messages have optional attributes after the\ninitial header:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">struct rtattr {\n<br>\nunsigned short rta_len; /* Length of option */ <br>\nunsigned short rta_type; /* Type of option */ <br>\n/* Data follows */ <br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">These\nattributes should be manipulated using only the RTA_* macros\nor libnetlink, see <a href=\"https://man.page/3/rtnetlink\">rtnetlink(3)</a>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Messages</b>\n<br>\nRtnetlink consists of these message types (in addition to\nstandard netlink messages): <b><br>\nRTM_NEWLINK</b>, <b>RTM_DELLINK</b>, <b>RTM_GETLINK</b></p>\n\n<p style=\"margin-left:22%;\">Create, remove, or get\ninformation about a specific network interface. These\nmessages contain an <i>ifinfomsg</i> structure followed by a\nseries of <i>rtattr</i> structures.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">struct\nifinfomsg { <br>\nunsigned char ifi_family; /* AF_UNSPEC */ <br>\nunsigned short ifi_type; /* Device type */ <br>\nint ifi_index; /* Interface index */ <br>\nunsigned int ifi_flags; /* Device flags */ <br>\nunsigned int ifi_change; /* change mask */ <br>\n};</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><i>ifi_flags</i>\ncontains the device flags, see <a href=\"https://man.page/7/netdevice\">netdevice(7)</a>;\n<i>ifi_index</i> is the unique interface index (since Linux\n3.7, it is possible to feed a nonzero value with the\n<b>RTM_NEWLINK</b> message, thus creating a link with the\ngiven <i>ifindex</i>); <i>ifi_change</i> is reserved for\nfuture use and should be always set to 0xFFFFFFFF.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3543351.png\" alt=\"Image grohtml-3543351.png\"></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The value type\nfor <b>IFLA_STATS</b> is <i>struct rtnl_link_stats</i>\n(<i>struct net_device_stats</i> in Linux 2.4 and\nearlier).</p>\n\n<p style=\"margin-left:11%;\"><b>RTM_NEWADDR</b>,\n<b>RTM_DELADDR</b>, <b>RTM_GETADDR</b></p>\n\n<p style=\"margin-left:22%;\">Add, remove, or receive\ninformation about an IP address associated with an\ninterface. In Linux 2.2, an interface can carry multiple IP\naddresses, this replaces the alias device concept in 2.0. In\nLinux 2.2, these messages support IPv4 and IPv6 addresses.\nThey contain an <i>ifaddrmsg</i> structure, optionally\nfollowed by <i>rtattr</i> routing attributes.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">struct\nifaddrmsg { <br>\nunsigned char ifa_family; /* Address type */ <br>\nunsigned char ifa_prefixlen; /* Prefixlength of address */\n<br>\nunsigned char ifa_flags; /* Address flags */ <br>\nunsigned char ifa_scope; /* Address scope */ <br>\nunsigned int ifa_index; /* Interface index */ <br>\n};</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><i>ifa_family</i>\nis the address family type (currently <b>AF_INET</b> or\n<b>AF_INET6</b>), <i>ifa_prefixlen</i> is the length of the\naddress mask of the address if defined for the family (like\nfor IPv4), <i>ifa_scope</i> is the address scope,\n<i>ifa_index</i> is the interface index of the interface the\naddress is associated with. <i>ifa_flags</i> is a flag word\nof <b>IFA_F_SECONDARY</b> for secondary address (old alias\ninterface), <b>IFA_F_PERMANENT</b> for a permanent address\nset by the user and other undocumented flags.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3543352.png\" alt=\"Image grohtml-3543352.png\"></p>\n\n<p style=\"margin-left:11%;\"><b>RTM_NEWROUTE</b>,\n<b>RTM_DELROUTE</b>, <b>RTM_GETROUTE</b></p>\n\n<p style=\"margin-left:22%;\">Create, remove, or receive\ninformation about a network route. These messages contain an\n<i>rtmsg</i> structure with an optional sequence of\n<i>rtattr</i> structures following. For <b>RTM_GETROUTE</b>,\nsetting <i>rtm_dst_len</i> and <i>rtm_src_len</i> to 0 means\nyou get all entries for the specified routing table. For the\nother fields, except <i>rtm_table</i> and\n<i>rtm_protocol</i>, 0 is the wildcard.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">struct rtmsg {\n<br>\nunsigned char rtm_family; /* Address family of route */ <br>\nunsigned char rtm_dst_len; /* Length of destination */ <br>\nunsigned char rtm_src_len; /* Length of source */ <br>\nunsigned char rtm_tos; /* TOS filter */ <br>\nunsigned char rtm_table; /* Routing table ID; <br>\nsee RTA_TABLE below */ <br>\nunsigned char rtm_protocol; /* Routing protocol; see below\n*/ <br>\nunsigned char rtm_scope; /* See below */ <br>\nunsigned char rtm_type; /* See below */</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">unsigned int\nrtm_flags; <br>\n};</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3543353.png\" alt=\"Image grohtml-3543353.png\"></p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3543354.png\" alt=\"Image grohtml-3543354.png\"></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Values larger\nthan <b>RTPROT_STATIC</b> are not interpreted by the kernel,\nthey are just for user information. They may be used to tag\nthe source of a routing information or to distinguish\nbetween multiple routing daemons. See\n<i>&lt;linux/rtnetlink.h&gt;</i> for the routing daemon\nidentifiers which are already assigned.</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><i>rtm_scope</i>\nis the distance to the destination:</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3543355.png\" alt=\"Image grohtml-3543355.png\"></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The values\nbetween <b>RT_SCOPE_UNIVERSE</b> and <b>RT_SCOPE_SITE</b>\nare available to the user.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The\n<i>rtm_flags</i> have the following meanings:</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3543356.png\" alt=\"Image grohtml-3543356.png\"></p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><i>rtm_table</i>\nspecifies the routing table</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3543357.png\" alt=\"Image grohtml-3543357.png\"></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The user may\nassign arbitrary values between <b>RT_TABLE_UNSPEC</b> and\n<b>RT_TABLE_DEFAULT</b>.</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3543358.png\" alt=\"Image grohtml-3543358.png\"></p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>RTA_MULTIPATH</b>\ncontains several packed instances of <i>struct rtnexthop</i>\ntogether with nested RTAs (<b>RTA_GATEWAY</b>):</p>\n\n<p style=\"margin-left:28%; margin-top: 1em\">struct\nrtnexthop { <br>\nunsigned short rtnh_len; /* Length of struct + length <br>\nof RTAs */ <br>\nunsigned char rtnh_flags; /* Flags (see <br>\nlinux/rtnetlink.h) */ <br>\nunsigned char rtnh_hops; /* Nexthop priority */ <br>\nint rtnh_ifindex; /* Interface index for this <br>\nnexthop */ <br>\n}</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">There exist a\nbunch of <b>RTNH_*</b> macros similar to <b>RTA_*</b> and\n<b>NLHDR_*</b> macros useful to handle these structures.</p>\n\n<p style=\"margin-left:28%; margin-top: 1em\">struct rtvia {\n<br>\nunsigned short rtvia_family; <br>\nunsigned char rtvia_addr[0]; <br>\n};</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><i>rtvia_addr</i>\nis the address, <i>rtvia_family</i> is its family type.</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>RTA_PREF</b>\nmay contain values <b>ICMPV6_ROUTER_PREF_LOW</b>,\n<b>ICMPV6_ROUTER_PREF_MEDIUM</b>, and\n<b>ICMPV6_ROUTER_PREF_HIGH</b> defined incw\n<i>&lt;linux/icmpv6.h&gt;</i>.</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>RTA_ENCAP_TYPE</b>\nmay contain values <b>LWTUNNEL_ENCAP_MPLS</b>,\n<b>LWTUNNEL_ENCAP_IP</b>, <b>LWTUNNEL_ENCAP_ILA</b>, or\n<b>LWTUNNEL_ENCAP_IP6</b> defined in\n<i>&lt;linux/lwtunnel.h&gt;</i>.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\"><b>Fill these\nvalues in!</b></p>\n\n<p style=\"margin-left:11%;\"><b>RTM_NEWNEIGH</b>,\n<b>RTM_DELNEIGH</b>, <b>RTM_GETNEIGH</b></p>\n\n<p style=\"margin-left:22%;\">Add, remove, or receive\ninformation about a neighbor table entry (e.g., an ARP\nentry). The message contains an <i>ndmsg</i> structure.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">struct ndmsg {\n<br>\nunsigned char ndm_family; <br>\nint ndm_ifindex; /* Interface index */ <br>\n__u16 ndm_state; /* State */ <br>\n__u8 ndm_flags; /* Flags */ <br>\n__u8 ndm_type; <br>\n};</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">struct\nnda_cacheinfo { <br>\n__u32 ndm_confirmed; <br>\n__u32 ndm_used; <br>\n__u32 ndm_updated; <br>\n__u32 ndm_refcnt; <br>\n};</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\"><i>ndm_state</i>\nis a bit mask of the following states:</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-3543359.png\" alt=\"Image grohtml-3543359.png\"></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Valid\n<i>ndm_flags</i> are:</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-35433510.png\" alt=\"Image grohtml-35433510.png\"></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The\n<i>rtattr</i> struct has the following meanings for the\n<i>rta_type</i> field:</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-35433511.png\" alt=\"Image grohtml-35433511.png\"></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">If the\n<i>rta_type</i> field is <b>NDA_CACHEINFO</b>, then a\n<i>struct nda_cacheinfo</i> header follows.</p>\n\n<p style=\"margin-left:11%;\"><b>RTM_NEWRULE</b>,\n<b>RTM_DELRULE</b>, <b>RTM_GETRULE</b></p>\n\n<p style=\"margin-left:22%;\">Add, delete, or retrieve a\nrouting rule. Carries a <i>struct rtmsg</i></p>\n\n<p style=\"margin-left:11%;\"><b>RTM_NEWQDISC</b>,\n<b>RTM_DELQDISC</b>, <b>RTM_GETQDISC</b></p>\n\n<p style=\"margin-left:22%;\">Add, remove, or get a queueing\ndiscipline. The message contains a <i>struct tcmsg</i> and\nmay be followed by a series of attributes.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">struct tcmsg {\n<br>\nunsigned char tcm_family; <br>\nint tcm_ifindex; /* interface index */ <br>\n__u32 tcm_handle; /* Qdisc handle */ <br>\n__u32 tcm_parent; /* Parent qdisc */ <br>\n__u32 tcm_info; <br>\n};</p>\n\n\n<p align=\"center\" style=\"margin-top: 1em\"><img src=\"grohtml-35433512.png\" alt=\"Image grohtml-35433512.png\"></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">In addition,\nvarious other qdisc-module-specific attributes are allowed.\nFor more information see the appropriate include files.</p>\n\n<p style=\"margin-left:11%;\"><b>RTM_NEWTCLASS</b>,\n<b>RTM_DELTCLASS</b>, <b>RTM_GETTCLASS</b></p>\n\n<p style=\"margin-left:22%;\">Add, remove, or get a traffic\nclass. These messages contain a <i>struct tcmsg</i> as\ndescribed above.</p>\n\n<p style=\"margin-left:11%;\"><b>RTM_NEWTFILTER</b>,\n<b>RTM_DELTFILTER</b>, <b>RTM_GETTFILTER</b></p>\n\n<p style=\"margin-left:22%;\">Add, remove, or receive\ninformation about a traffic filter. These messages contain a\n<i>struct tcmsg</i> as described above.</p>\n\n<h2>VERSIONS\n<a name=\"VERSIONS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>rtnetlink</b>\nis a new feature of Linux 2.2.</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This manual\npage is incomplete.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/cmsg\">cmsg(3)</a>,\n<a href=\"https://man.page/3/rtnetlink\">rtnetlink(3)</a>, <a href=\"https://man.page/7/ip\">ip(7)</a>, <a href=\"https://man.page/7/netlink\">netlink(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#VERSIONS\">VERSIONS</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":7}