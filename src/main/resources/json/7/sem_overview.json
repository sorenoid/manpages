{"name":"sem_overview","description":"sem_overview -\noverview of POSIX semaphores\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\nPOSIX\nsemaphores allow processes and threads to synchronize their\nactions.\n\nA semaphore is\nan integer whose value is never allowed to fall below zero.\nTwo operations can be performed on semaphores: increment the\nsemaphore value by one (<a href=\"https://man.page/3/sem_post\">sem_post(3)</a>); and decrement\nthe semaphore value by one (<a href=\"https://man.page/3/sem_wait\">sem_wait(3)</a>). If the\nvalue of a semaphore is currently zero, then a\n<a href=\"https://man.page/3/sem_wait\">sem_wait(3)</a> operation will block until the value\nbecomes greater than zero.\n\nPOSIX\nsemaphores come in two forms: named semaphores and unnamed\nsemaphores. <b><br>\nNamed semaphores</b>\n\n<p style=\"margin-left:22%;\">A named semaphore is identified\nby a name of the form <i>/somename</i>; that is, a\nnull-terminated string of up to <b>NAME_MAX</b><i>-4</i>\n(i.e., 251) characters consisting of an initial slash,\nfollowed by one or more characters, none of which are\nslashes. Two processes can operate on the same named\nsemaphore by passing the same name to\n<a href=\"https://man.page/3/sem_open\">sem_open(3)</a>.\n\n<p style=\"margin-left:22%; margin-top: 1em\">The\n<a href=\"https://man.page/3/sem_open\">sem_open(3)</a> function creates a new named semaphore or\nopens an existing named semaphore. After the semaphore has\nbeen opened, it can be operated on using <a href=\"https://man.page/3/sem_post\">sem_post(3)</a>\nand <a href=\"https://man.page/3/sem_wait\">sem_wait(3)</a>. When a process has finished using\nthe semaphore, it can use <a href=\"https://man.page/3/sem_close\">sem_close(3)</a> to close the\nsemaphore. When all processes have finished using the\nsemaphore, it can be removed from the system using\n<a href=\"https://man.page/3/sem_unlink\">sem_unlink(3)</a>.\n\n<p style=\"margin-left:11%;\"><b>Unnamed semaphores\n(memory-based semaphores)</b>\n\n<p style=\"margin-left:22%;\">An unnamed semaphore does not\nhave a name. Instead the semaphore is placed in a region of\nmemory that is shared between multiple threads (a\n<i>thread-shared semaphore</i>) or processes (a\n<i>process-shared semaphore</i>). A thread-shared semaphore\nis placed in an area of memory shared between the threads of\na process, for example, a global variable. A process-shared\nsemaphore must be placed in a shared memory region (e.g., a\nSystem V shared memory segment created using\n<a href=\"https://man.page/2/shmget\">shmget(2)</a>, or a POSIX shared memory object built\ncreated using <a href=\"https://man.page/3/shm_open\">shm_open(3)</a>).\n\n<p style=\"margin-left:22%; margin-top: 1em\">Before being\nused, an unnamed semaphore must be initialized using\n<a href=\"https://man.page/3/sem_init\">sem_init(3)</a>. It can then be operated on using\n<a href=\"https://man.page/3/sem_post\">sem_post(3)</a> and <a href=\"https://man.page/3/sem_wait\">sem_wait(3)</a>. When the\nsemaphore is no longer required, and before the memory in\nwhich it is located is deallocated, the semaphore should be\ndestroyed using <a href=\"https://man.page/3/sem_destroy\">sem_destroy(3)</a>.\n\nThe remainder\nof this section describes some specific details of the Linux\nimplementation of POSIX semaphores.\n\n\n<b>Versions</b>\n<br>\nPrior to kernel 2.6, Linux supported only unnamed,\nthread-shared semaphores. On a system with Linux 2.6 and a\nglibc that provides the NPTL threading implementation, a\ncomplete implementation of POSIX semaphores is provided.\n\n\n<b>Persistence</b>\n<br>\nPOSIX named semaphores have kernel persistence: if not\nremoved by <a href=\"https://man.page/3/sem_unlink\">sem_unlink(3)</a>, a semaphore will exist\nuntil the system is shut down.\n\n<b>Linking</b>\n<br>\nPrograms using the POSIX semaphores API must be compiled\nwith <i>cc -pthread</i> to link against the real-time\nlibrary, <i>librt</i>.\n\n<b>Accessing\nnamed semaphores via the filesystem</b> <br>\nOn Linux, named semaphores are created in a virtual\nfilesystem, normally mounted under <i>/dev/shm</i>, with\nnames of the form <b>sem.</b><i>somename</i>. (This is the\nreason that semaphore names are limited to\n<b>NAME_MAX</b><i>-4</i> rather than <b>NAME_MAX</b>\ncharacters.)\n\nSince Linux\n2.6.19, ACLs can be placed on files under this directory, to\ncontrol object permissions on a per-user and per-group\nbasis.\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\nSystem V\nsemaphores (<a href=\"https://man.page/2/semget\">semget(2)</a>, <a href=\"https://man.page/2/semop\">semop(2)</a>, etc.) are an\nolder semaphore API. POSIX semaphores provide a simpler, and\nbetter designed interface than System V semaphores; on the\nother hand POSIX semaphores are less widely available\n(especially on older systems) than System V semaphores.\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\nAn example of\nthe use of various POSIX semaphore functions is shown in\n<a href=\"https://man.page/3/sem_wait\">sem_wait(3)</a>.\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<a href=\"https://man.page/3/sem_close\">sem_close(3)</a>,\n<a href=\"https://man.page/3/sem_destroy\">sem_destroy(3)</a>, <a href=\"https://man.page/3/sem_getvalue\">sem_getvalue(3)</a>,\n<a href=\"https://man.page/3/sem_init\">sem_init(3)</a>, <a href=\"https://man.page/3/sem_open\">sem_open(3)</a>, <a href=\"https://man.page/3/sem_post\">sem_post(3)</a>,\n<a href=\"https://man.page/3/sem_unlink\">sem_unlink(3)</a>, <a href=\"https://man.page/3/sem_wait\">sem_wait(3)</a>,\n<a href=\"https://man.page/7/pthreads\">pthreads(7)</a>, <a href=\"https://man.page/7/shm_overview\">shm_overview(7)</a>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\nThis page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.","body":"\n\n<h1 align=\"center\">SEM_OVERVIEW</h1>\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">sem_overview -\noverview of POSIX semaphores</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX\nsemaphores allow processes and threads to synchronize their\nactions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A semaphore is\nan integer whose value is never allowed to fall below zero.\nTwo operations can be performed on semaphores: increment the\nsemaphore value by one (<a href=\"https://man.page/3/sem_post\">sem_post(3)</a>); and decrement\nthe semaphore value by one (<a href=\"https://man.page/3/sem_wait\">sem_wait(3)</a>). If the\nvalue of a semaphore is currently zero, then a\n<a href=\"https://man.page/3/sem_wait\">sem_wait(3)</a> operation will block until the value\nbecomes greater than zero.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">POSIX\nsemaphores come in two forms: named semaphores and unnamed\nsemaphores. <b><br>\nNamed semaphores</b></p>\n\n<p style=\"margin-left:22%;\">A named semaphore is identified\nby a name of the form <i>/somename</i>; that is, a\nnull-terminated string of up to <b>NAME_MAX</b><i>-4</i>\n(i.e., 251) characters consisting of an initial slash,\nfollowed by one or more characters, none of which are\nslashes. Two processes can operate on the same named\nsemaphore by passing the same name to\n<a href=\"https://man.page/3/sem_open\">sem_open(3)</a>.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The\n<a href=\"https://man.page/3/sem_open\">sem_open(3)</a> function creates a new named semaphore or\nopens an existing named semaphore. After the semaphore has\nbeen opened, it can be operated on using <a href=\"https://man.page/3/sem_post\">sem_post(3)</a>\nand <a href=\"https://man.page/3/sem_wait\">sem_wait(3)</a>. When a process has finished using\nthe semaphore, it can use <a href=\"https://man.page/3/sem_close\">sem_close(3)</a> to close the\nsemaphore. When all processes have finished using the\nsemaphore, it can be removed from the system using\n<a href=\"https://man.page/3/sem_unlink\">sem_unlink(3)</a>.</p>\n\n<p style=\"margin-left:11%;\"><b>Unnamed semaphores\n(memory-based semaphores)</b></p>\n\n<p style=\"margin-left:22%;\">An unnamed semaphore does not\nhave a name. Instead the semaphore is placed in a region of\nmemory that is shared between multiple threads (a\n<i>thread-shared semaphore</i>) or processes (a\n<i>process-shared semaphore</i>). A thread-shared semaphore\nis placed in an area of memory shared between the threads of\na process, for example, a global variable. A process-shared\nsemaphore must be placed in a shared memory region (e.g., a\nSystem V shared memory segment created using\n<a href=\"https://man.page/2/shmget\">shmget(2)</a>, or a POSIX shared memory object built\ncreated using <a href=\"https://man.page/3/shm_open\">shm_open(3)</a>).</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Before being\nused, an unnamed semaphore must be initialized using\n<a href=\"https://man.page/3/sem_init\">sem_init(3)</a>. It can then be operated on using\n<a href=\"https://man.page/3/sem_post\">sem_post(3)</a> and <a href=\"https://man.page/3/sem_wait\">sem_wait(3)</a>. When the\nsemaphore is no longer required, and before the memory in\nwhich it is located is deallocated, the semaphore should be\ndestroyed using <a href=\"https://man.page/3/sem_destroy\">sem_destroy(3)</a>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The remainder\nof this section describes some specific details of the Linux\nimplementation of POSIX semaphores.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Versions</b>\n<br>\nPrior to kernel 2.6, Linux supported only unnamed,\nthread-shared semaphores. On a system with Linux 2.6 and a\nglibc that provides the NPTL threading implementation, a\ncomplete implementation of POSIX semaphores is provided.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Persistence</b>\n<br>\nPOSIX named semaphores have kernel persistence: if not\nremoved by <a href=\"https://man.page/3/sem_unlink\">sem_unlink(3)</a>, a semaphore will exist\nuntil the system is shut down.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Linking</b>\n<br>\nPrograms using the POSIX semaphores API must be compiled\nwith <i>cc -pthread</i> to link against the real-time\nlibrary, <i>librt</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Accessing\nnamed semaphores via the filesystem</b> <br>\nOn Linux, named semaphores are created in a virtual\nfilesystem, normally mounted under <i>/dev/shm</i>, with\nnames of the form <b>sem.</b><i>somename</i>. (This is the\nreason that semaphore names are limited to\n<b>NAME_MAX</b><i>-4</i> rather than <b>NAME_MAX</b>\ncharacters.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Since Linux\n2.6.19, ACLs can be placed on files under this directory, to\ncontrol object permissions on a per-user and per-group\nbasis.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">System V\nsemaphores (<a href=\"https://man.page/2/semget\">semget(2)</a>, <a href=\"https://man.page/2/semop\">semop(2)</a>, etc.) are an\nolder semaphore API. POSIX semaphores provide a simpler, and\nbetter designed interface than System V semaphores; on the\nother hand POSIX semaphores are less widely available\n(especially on older systems) than System V semaphores.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">An example of\nthe use of various POSIX semaphore functions is shown in\n<a href=\"https://man.page/3/sem_wait\">sem_wait(3)</a>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/sem_close\">sem_close(3)</a>,\n<a href=\"https://man.page/3/sem_destroy\">sem_destroy(3)</a>, <a href=\"https://man.page/3/sem_getvalue\">sem_getvalue(3)</a>,\n<a href=\"https://man.page/3/sem_init\">sem_init(3)</a>, <a href=\"https://man.page/3/sem_open\">sem_open(3)</a>, <a href=\"https://man.page/3/sem_post\">sem_post(3)</a>,\n<a href=\"https://man.page/3/sem_unlink\">sem_unlink(3)</a>, <a href=\"https://man.page/3/sem_wait\">sem_wait(3)</a>,\n<a href=\"https://man.page/7/pthreads\">pthreads(7)</a>, <a href=\"https://man.page/7/shm_overview\">shm_overview(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":7}