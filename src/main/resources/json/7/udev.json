{"name":"udev","body":"\n\n<h1 align=\"center\">UDEV</h1>\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">udev - Dynamic\ndevice management</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">udev supplies\nthe system software with device events, manages permissions\nof device nodes and may create additional symlinks in the\n/dev/ directory, or renames network interfaces. The kernel\nusually just assigns unpredictable device names based on the\norder of discovery. Meaningful symlinks or network device\nnames provide a way to reliably identify devices based on\ntheir properties or current configuration.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The udev\ndaemon, <b>systemd-udevd.service</b>(8), receives device\nuevents directly from the kernel whenever a device is added\nor removed from the system, or it changes its state. When\nudev receives a device event, it matches its configured set\nof rules against various device attributes to identify the\ndevice. Rules that match may provide additional device\ninformation to be stored in the udev database or to be used\nto create meaningful symlink names.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All device\ninformation udev processes is stored in the udev database\nand sent out to possible event subscribers. Access to all\nstored data and the event sources is provided by the library\nlibudev.</p>\n\n<h2>RULES FILES\n<a name=\"RULES FILES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The udev rules\nare read from the files located in the system rules\ndirectories /lib/udev/rules.d and\n/usr/local/lib/udev/rules.d, the volatile runtime directory\n/run/udev/rules.d and the local administration directory\n/etc/udev/rules.d. All rules files are collectively sorted\nand processed in lexical order, regardless of the\ndirectories in which they live. However, files with\nidentical filenames replace each other. Files in /etc/ have\nthe highest priority, files in /run/ take precedence over\nfiles with the same name under /usr/. This can be used to\noverride a system-supplied rules file with a local file if\nneeded; a symlink in /etc/ with the same name as a rules\nfile in /lib/, pointing to /dev/null, disables the rules\nfile entirely. Rule files must have the extension .rules;\nother extensions are ignored.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Every line in\nthe rules file contains at least one key-value pair. Except\nfor empty lines or lines beginning with &quot;#&quot;, which\nare ignored. There are two kinds of keys: match and\nassignment. If all match keys match against their values,\nthe rule gets applied and the assignment keys get the\nspecified values assigned.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A matching rule\nmay rename a network interface, add symlinks pointing to the\ndevice node, or run a specified program as part of the event\nhandling.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">A rule consists\nof a comma-separated list of one or more key-operator-value\nexpressions. Each expression has a distinct effect,\ndepending on the key and operator used.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Operators</b>\n<br>\n&quot;==&quot;</p>\n\n<p style=\"margin-left:17%;\">Compare for equality. (The\nspecified key has the specified value.)</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&quot;!=&quot;</p>\n\n<p style=\"margin-left:17%;\">Compare for inequality. (The\nspecified key doesn't have the specified value, or the\nspecified key is not present at all.)</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&quot;=&quot;</p>\n\n<p style=\"margin-left:17%;\">Assign a value to a key. Keys\nthat represent a list are reset and only this single value\nis assigned.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&quot;+=&quot;</p>\n\n<p style=\"margin-left:17%;\">Add the value to a key that\nholds a list of entries.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&quot;-=&quot;</p>\n\n<p style=\"margin-left:17%;\">Remove the value from a key\nthat holds a list of entries.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&quot;:=&quot;</p>\n\n<p style=\"margin-left:17%;\">Assign a value to a key\nfinally; disallow any later changes.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Values</b>\n<br>\nValues are written as double quoted strings, such as\n(&quot;string&quot;). To include a quotation mark (&quot;)\nin the value, precede it by a backslash (\\&quot;). Any other\noccurrences of a backslash followed by a character are not\nunescaped. That is, &quot;\\t\\n&quot; is treated as four\ncharacters: backslash, lowercase t, backslash, lowercase\nn.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The string can\nbe prefixed with a lowercase e (e&quot;string\\n&quot;) to\nmark the string as <b><font color=\"#0000FF\">C-style\nescaped</font></b>\n<small><font color=\"#000000\">[1]</font></small>\n<font color=\"#000000\">. For example, e&quot;string\\n&quot;\nis parsed as 7 characters: 6 lowercase letters and a\nnewline. This can be useful for writing special characters\nwhen a kernel driver requires them.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">Please\nnote that <b>NUL</b> is not allowed in either string\nvariant.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>Keys</b>\n<br>\nThe following key names can be used to match against device\nproperties. Some of the keys also match against properties\nof the parent devices in sysfs, not only the device that has\ngenerated the event. If multiple keys that match a parent\ndevice are specified in a single rule, all these keys must\nmatch at one and the same parent device.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>ACTION</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Match the\nname of the event action.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>DEVPATH</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Match the\ndevpath of the event device.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>KERNEL</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Match the\nname of the event device.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>KERNELS</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Search\nthe devpath upwards for a matching device name.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>NAME</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Match the\nname of a network interface. It can be used once the NAME\nkey has been set in one of the preceding rules.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>SYMLINK</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Match the\nname of a symlink targeting the node. It can be used once a\nSYMLINK key has been set in one of the preceding rules.\nThere may be multiple symlinks; only one needs to\nmatch.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>SUBSYSTEM</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Match the\nsubsystem of the event device.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>SUBSYSTEMS</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Search\nthe devpath upwards for a matching device subsystem\nname.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>DRIVER</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Match the\ndriver name of the event device. Only set this key for\ndevices which are bound to a driver at the time the event is\ngenerated.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>DRIVERS</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Search\nthe devpath upwards for a matching device driver\nname.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>ATTR{filename}</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Match\nsysfs attribute value of the event device.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Trailing\nwhitespace in the attribute values is ignored unless the\nspecified match value itself contains trailing\nwhitespace.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>ATTRS{filename}</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Search\nthe devpath upwards for a device with matching sysfs\nattribute values. If multiple <i>ATTRS</i> matches are\nspecified, all of them must match on the same\ndevice.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Trailing\nwhitespace in the attribute values is ignored unless the\nspecified match value itself contains trailing\nwhitespace.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>SYSCTL{kernel\nparameter}</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Match a\nkernel parameter value.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>ENV{key}</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Match\nagainst a device property value.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>CONST{key}</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Match\nagainst a system-wide constant. Supported keys\nare:</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">&quot;arch&quot;</font></p>\n\n<p style=\"margin-left:23%;\"><font color=\"#000000\">System's\narchitecture. See <b>ConditionArchitecture=</b> in\n<b>systemd.unit</b>(5) for possible values.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">&quot;virt&quot;</font></p>\n\n<p style=\"margin-left:23%;\"><font color=\"#000000\">System's\nvirtualization environment. See\n<a href=\"https://man.page/1/systemd-detect-virt\">systemd-detect-virt(1)</a> for possible\nvalues.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Unknown\nkeys will never match.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>TAG</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Match\nagainst a device tag.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>TAGS</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Search\nthe devpath upwards for a device with matching\ntag.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>TEST{octal\nmode mask}</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Test the\nexistence of a file. An octal mode mask can be specified if\nneeded.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>PROGRAM</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Execute a\nprogram to determine whether there is a match; the key is\ntrue if the program returns successfully. The device\nproperties are made available to the executed program in the\nenvironment. The program's standard output is available in\nthe <i>RESULT</i> key.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\ncan only be used for very short-running foreground tasks.\nFor details, see <i>RUN</i>.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Note\nthat multiple <i>PROGRAM</i> keys may be specified in one\nrule, and &quot;=&quot;, &quot;:=&quot;, and &quot;+=&quot;\nhave the same effect as &quot;==&quot;.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>RESULT</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Match the\nreturned string of the last <i>PROGRAM</i> call. This key\ncan be used in the same or in any later rule after a\n<i>PROGRAM</i> call.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">Most\nof the fields support shell glob pattern matching and\nalternate patterns. The following special characters are\nsupported:</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">&quot;*&quot;</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Matches\nzero or more characters.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">&quot;?&quot;</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Matches\nany single character.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">&quot;[]&quot;</font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Matches\nany single character specified within the brackets. For\nexample, the pattern string &quot;tty[SR]&quot; would match\neither &quot;ttyS&quot; or &quot;ttyR&quot;. Ranges are also\nsupported via the &quot;-&quot; character. For example, to\nmatch on the range of all digits, the pattern\n&quot;[0-9]&quot; could be used. If the first character\nfollowing the &quot;[&quot; is a &quot;!&quot;, any\ncharacters not enclosed are matched.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">&quot;|&quot;</font></p>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Separates\nalternative patterns. For example, the pattern string\n&quot;abc|x*&quot; would match either &quot;abc&quot; or\n&quot;x*&quot;.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">The\nfollowing keys can get values assigned:</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>NAME</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The name\nto use for a network interface. See <b>systemd.link</b>(5)\nfor a higher-level mechanism for setting the interface name.\nThe name of a device node cannot be changed by udev, only\nadditional symlinks can be created.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>SYMLINK</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The name\nof a symlink targeting the node. Every matching rule adds\nthis value to the list of symlinks to be created.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">The\nset of characters to name a symlink is limited. Allowed\ncharacters are &quot;0-9A-Za-z#+-.:=@_/&quot;, valid UTF-8\ncharacter sequences, and &quot;\\x00&quot; hex encoding. All\nother characters are replaced by a &quot;_&quot;\ncharacter.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Multiple\nsymlinks may be specified by separating the names by the\nspace character. In case multiple devices claim the same\nname, the link always points to the device with the highest\nlink_priority. If the current device goes away, the links\nare re-evaluated and the device with the next highest\nlink_priority becomes the owner of the link. If no\nlink_priority is specified, the order of the devices (and\nwhich one of them owns the link) is undefined.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Symlink\nnames must never conflict with the kernel's default device\nnode names, as that would result in unpredictable\nbehavior.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>OWNER</i>,\n<i>GROUP</i>, <i>MODE</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\npermissions for the device node. Every specified value\noverrides the compiled-in default value.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>SECLABEL{module}</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Applies\nthe specified Linux Security Module label to the device\nnode.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>ATTR{key}</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The value\nthat should be written to a sysfs attribute of the event\ndevice.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>SYSCTL{kernel\nparameter}</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The value\nthat should be written to kernel parameter.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>ENV{key}</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Set a\ndevice property value. Property names with a leading\n&quot;.&quot; are neither stored in the database nor\nexported to events or external tools (run by, for example,\nthe <i>PROGRAM</i> match key).</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>TAG</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Attach a\ntag to a device. This is used to filter events for users of\nlibudev's monitor functionality, or to enumerate a group of\ntagged devices. The implementation can only work efficiently\nif only a few tags are attached to a device. It is only\nmeant to be used in contexts with specific device filter\nrequirements, and not as a general-purpose flag. Excessive\nuse might result in inefficient event handling.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>RUN{type}</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Specify a\nprogram to be executed after processing of all the rules for\nthe event. With &quot;+=&quot;, this invocation is added to\nthe list, and with &quot;=&quot; or &quot;:=&quot;, it\nreplaces any previous contents of the list. Please note that\nboth &quot;program&quot; and &quot;builtin&quot; types\ndescribed below share a common list, so clearing the list\nwith &quot;:=&quot; and &quot;=&quot; affects both\ntypes.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\"><i>type</i>\nmay be:</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">&quot;program&quot;</font></p>\n\n<p style=\"margin-left:23%;\"><font color=\"#000000\">Execute\nan external program specified as the assigned value. If no\nabsolute path is given, the program is expected to live in\n/lib/udev; otherwise, the absolute path must be\nspecified.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">This\nis the default if no <i>type</i> is specified.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">&quot;builtin&quot;</font></p>\n\n<p style=\"margin-left:23%;\"><font color=\"#000000\">As\n<i>program</i>, but use one of the built-in programs rather\nthan an external one.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">The\nprogram name and following arguments are separated by\nspaces. Single quotes can be used to specify arguments with\nspaces.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\ncan only be used for very short-running foreground tasks.\nRunning an event process for a long period of time may block\nall further events for this or a dependent\ndevice.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Note\nthat running programs that access the network or\nmount/unmount filesystems is not allowed inside of udev\nrules, due to the default sandbox that is enforced on\nsystemd-udevd.service.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Starting\ndaemons or other long-running processes is not allowed; the\nforked processes, detached or not, will be unconditionally\nkilled after the event handling has finished. In order to\nactivate long-running processes from udev rules, provide a\nservice unit and pull it in from a udev device using the\n<i>SYSTEMD_WANTS</i> device property. See\n<b>systemd.device</b>(5) for details.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>LABEL</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A named\nlabel to which a <i>GOTO</i> may jump.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>GOTO</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Jumps to\nthe next <i>LABEL</i> with a matching name.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>IMPORT{type}</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Import a\nset of variables as device properties, depending on\n<i>type</i>:</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">&quot;program&quot;</font></p>\n\n<p style=\"margin-left:23%;\"><font color=\"#000000\">Execute\nan external program specified as the assigned value and, if\nit returns successfully, import its output, which must be in\nenvironment key format. Path specification, command/argument\nseparation, and quoting work like in <i>RUN</i>.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">&quot;builtin&quot;</font></p>\n\n<p style=\"margin-left:23%;\"><font color=\"#000000\">Similar\nto &quot;program&quot;, but use one of the built-in programs\nrather than an external one.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">&quot;file&quot;</font></p>\n\n<p style=\"margin-left:23%;\"><font color=\"#000000\">Import a\ntext file specified as the assigned value, the content of\nwhich must be in environment key format.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">&quot;db&quot;</font></p>\n\n<p style=\"margin-left:23%;\"><font color=\"#000000\">Import a\nsingle property specified as the assigned value from the\ncurrent device database. This works only if the database is\nalready populated by an earlier event.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">&quot;cmdline&quot;</font></p>\n\n<p style=\"margin-left:23%;\"><font color=\"#000000\">Import a\nsingle property from the kernel command line. For simple\nflags the value of the property is set to\n&quot;1&quot;.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">&quot;parent&quot;</font></p>\n\n<p style=\"margin-left:23%;\"><font color=\"#000000\">Import\nthe stored keys from the parent device by reading the\ndatabase entry of the parent device. The value assigned to\n<b>IMPORT{parent}</b> is used as a filter of key names to\nimport (with the same shell glob pattern matching used for\ncomparisons).</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">This\ncan only be used for very short-running foreground tasks.\nFor details see <b>RUN</b>.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">Note\nthat multiple <i>IMPORT{}</i> keys may be specified in one\nrule, and &quot;=&quot;, &quot;:=&quot;, and &quot;+=&quot;\nhave the same effect as &quot;==&quot;. The key is true if\nthe import is successful, unless &quot;!=&quot; is used as\nthe operator which causes the key to be true if the import\nfailed.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><i>OPTIONS</i></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">Rule and\ndevice options:</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\"><b>link_priority=</b><i>value</i></font></p>\n\n<p style=\"margin-left:23%;\"><font color=\"#000000\">Specify\nthe priority of the created symlinks. Devices with higher\npriorities overwrite existing symlinks of other devices. The\ndefault is 0.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\"><b>string_escape=</b><i>none|replace</i></font></p>\n\n<p style=\"margin-left:23%;\"><font color=\"#000000\">When\n&quot;replace&quot;, possibly unsafe characters in strings\nassigned to <i>NAME</i>, <i>SYMLINK</i>, and <i>ENV{key}</i>\nare replaced. When &quot;none&quot;, no replacement is\nperformed. When unset, the replacement is performed for\n<i>NAME</i>, <i>SYMLINK</i>, but not for <i>ENV{key}</i>.\nDefaults to unset.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\"><b>static_node=</b></font></p>\n\n<p style=\"margin-left:23%;\"><font color=\"#000000\">Apply the\npermissions specified in this rule to the static device node\nwith the specified name. Also, for every tag specified in\nthis rule, create a symlink in the directory\n/run/udev/static_node-tags/<i>tag</i> pointing at the static\ndevice node with the specified name. Static device node\ncreation is performed by systemd-tmpfiles before\nsystemd-udevd is started. The static nodes might not have a\ncorresponding kernel device; they are used to trigger\nautomatic kernel module loading when they are\naccessed.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\"><b>watch</b></font></p>\n\n<p style=\"margin-left:23%;\"><font color=\"#000000\">Watch the\ndevice node with inotify; when the node is closed after\nbeing opened for writing, a change uevent is\nsynthesized.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\"><b>nowatch</b></font></p>\n\n<p style=\"margin-left:23%;\"><font color=\"#000000\">Disable\nthe watching of a device node with inotify.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\"><b>db_persist</b></font></p>\n\n<p style=\"margin-left:23%;\"><font color=\"#000000\">Set the\nflag (sticky bit) on the udev database entry of the event\ndevice. Device properties are then kept in the database even\nwhen <b>udevadm info --cleanup-db</b> is called. This option\ncan be useful in certain cases (e.g. Device Mapper devices)\nfor persisting device state on the transition from\ninitramfs.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\"><b>log_level=</b><i>level</i></font></p>\n\n<p style=\"margin-left:23%;\"><font color=\"#000000\">Takes a\nlog level name like &quot;debug&quot; or &quot;info&quot;,\nor a special value &quot;reset&quot;. When a log level name\nis specified, the maximum log level is changed to that\nlevel. When &quot;reset&quot; is set, then the previously\nspecified log level is revoked. Defaults to the log level of\nthe main process of <b>systemd-udevd</b>.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">This\nmay be useful when debugging events for certain devices.\nNote that the log level is applied when the line including\nthis rule is processed. So, for debugging, it is recommended\nthat this is specified at earlier place, e.g., the first\nline of 00-debug.rules.</font></p>\n\n\n<p style=\"margin-left:23%; margin-top: 1em\"><font color=\"#000000\">Example\nfor debugging uevent processing for network\ninterfaces.</font></p>\n\n\n<p style=\"margin-left:29%; margin-top: 1em\"><font color=\"#000000\">#\n/etc/udev/rules.d/00-debug-net.rules <br>\nSUBSYSTEM==&quot;net&quot;,\nOPTIONS=&quot;log_level=debug&quot;</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">The\n<i>NAME</i>, <i>SYMLINK</i>, <i>PROGRAM</i>, <i>OWNER</i>,\n<i>GROUP</i>, <i>MODE</i>, <i>SECLABEL</i>, and <i>RUN</i>\nfields support simple string substitutions. The <i>RUN</i>\nsubstitutions are performed after all rules have been\nprocessed, right before the program is executed, allowing\nfor the use of device properties set by earlier matching\nrules. For all other fields, substitutions are performed\nwhile the individual rule is being processed. The available\nsubstitutions are:</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>$kernel</b>,\n<b>%k</b></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nkernel name for this device.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>$number</b>,\n<b>%n</b></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nkernel number for this device. For example, &quot;sda3&quot;\nhas kernel number 3.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>$devpath</b>,\n<b>%p</b></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\ndevpath of the device.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>$id</b>,\n<b>%b</b></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The name\nof the device matched while searching the devpath upwards\nfor <b>SUBSYSTEMS</b>, <b>KERNELS</b>, <b>DRIVERS</b>, and\n<b>ATTRS</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>$driver</b></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\ndriver name of the device matched while searching the\ndevpath upwards for <b>SUBSYSTEMS</b>, <b>KERNELS</b>,\n<b>DRIVERS</b>, and <b>ATTRS</b>.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>$attr{</b><i>file</i><b>}</b>,\n<b>%s{</b><i>file</i><b>}</b></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The value\nof a sysfs attribute found at the device where all keys of\nthe rule have matched. If the matching device does not have\nsuch an attribute, and a previous <b>KERNELS</b>,\n<b>SUBSYSTEMS</b>, <b>DRIVERS</b>, or <b>ATTRS</b> test\nselected a parent device, then the attribute from that\nparent device is used.</font></p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\"><font color=\"#000000\">If\nthe attribute is a symlink, the last element of the symlink\ntarget is returned as the value.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>$env{</b><i>key</i><b>}</b>,\n<b>%E{</b><i>key</i><b>}</b></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A device\nproperty value.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>$major</b>,\n<b>%M</b></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nkernel major number for the device.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>$minor</b>,\n<b>%m</b></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nkernel minor number for the device.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>$result</b>,\n<b>%c</b></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nstring returned by the external program requested with\n<i>PROGRAM</i>. A single part of the string, separated by a\nspace character, may be selected by specifying the part\nnumber as an attribute: &quot;%c{N}&quot;. If the number is\nfollowed by the &quot;+&quot; character, this part plus all\nremaining parts of the result string are substituted:\n&quot;%c{N+}&quot;.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>$parent</b>,\n<b>%P</b></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The node\nname of the parent device.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>$name</b></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\ncurrent name of the device. If not changed by a rule, it is\nthe name of the kernel device.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>$links</b></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">A\nspace-separated list of the current symlinks. The value is\nonly set during a remove event or if an earlier rule\nassigned a value.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>$root</b>,\n<b>%r</b></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\nudev_root value.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>$sys</b>,\n<b>%S</b></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The sysfs\nmount point.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>$devnode</b>,\n<b>%N</b></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The name\nof the device node.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>%%</b></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\n&quot;%&quot; character itself.</font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>$$</b></font></p>\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">The\n&quot;$&quot; character itself.</font></p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>systemd-udevd.service</b>(8),\n<b>udevadm</b>(8), <b>systemd.link</b>(5)</font></p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"12%\"></td>\n<td width=\"3%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">1.</font></p> </td>\n<td width=\"2%\"></td>\n<td width=\"23%\">\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">C-style\nescaped</font></p> </td>\n<td width=\"60%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">https://en.wikipedia.org/wiki/Escape_sequences_in_C#Table_of_escape_sequences</font></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RULES FILES\">RULES FILES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#NOTES\">NOTES</a>"],"level":7}