{"name":"sigevent","description":"sigevent -\nstructure for notification from asynchronous routines","body":"\n\n<h1 align=\"center\">SIGEVENT</h1>\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">sigevent -\nstructure for notification from asynchronous routines</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">#include\n&lt;signal.h&gt;</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">union sigval {\n/* Data passed with notification */ <br>\nint sival_int; /* Integer value */ <br>\nvoid *sival_ptr; /* Pointer value */ <br>\n};</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">struct sigevent\n{ <br>\nint sigev_notify; /* Notification method */ <br>\nint sigev_signo; /* Notification signal */ <br>\nunion sigval sigev_value; <br>\n/* Data passed with notification */ <br>\nvoid (*sigev_notify_function) (union sigval); <br>\n/* Function used for thread <br>\nnotification (SIGEV_THREAD) */ <br>\nvoid *sigev_notify_attributes; <br>\n/* Attributes for notification thread <br>\n(SIGEV_THREAD) */ <br>\npid_t sigev_notify_thread_id; <br>\n/* ID of thread to signal <br>\n(SIGEV_THREAD_ID); Linux-specific */ <br>\n};</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>sigevent</i> structure is used by various APIs to\ndescribe the way a process is to be notified about an event\n(e.g., completion of an asynchronous request, expiration of\na timer, or the arrival of a message).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The definition\nshown in the SYNOPSIS is approximate: some of the fields in\nthe <i>sigevent</i> structure may be defined as part of a\nunion. Programs should employ only those fields relevant to\nthe value specified in <i>sigev_notify</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>sigev_notify</i> field specifies how notification is to\nbe performed. This field can have one of the following\nvalues: <b><br>\nSIGEV_NONE</b></p>\n\n<p style=\"margin-left:22%;\">A &quot;null&quot;\nnotification: don&rsquo;t do anything when the event\noccurs.</p>\n\n<p style=\"margin-left:11%;\"><b>SIGEV_SIGNAL</b></p>\n\n<p style=\"margin-left:22%;\">Notify the process by sending\nthe signal specified in <i>sigev_signo</i>.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">If the signal\nis caught with a signal handler that was registered using\nthe <a href=\"https://man.page/2/sigaction\">sigaction(2)</a> <b>SA_SIGINFO</b> flag, then the\nfollowing fields are set in the <i>siginfo_t</i> structure\nthat is passed as the second argument of the handler:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"12%\">\n\n\n<p><i>si_code</i></p></td>\n<td width=\"3%\"></td>\n<td width=\"63%\">\n\n\n<p>This field is set to a value that depends on the API\ndelivering the notification.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"12%\">\n\n\n<p><i>si_signo</i></p></td>\n<td width=\"3%\"></td>\n<td width=\"63%\">\n\n\n<p>This field is set to the signal number (i.e., the same\nvalue as in <i>sigev_signo</i>).</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"22%\"></td>\n<td width=\"12%\">\n\n\n<p><i>si_value</i></p></td>\n<td width=\"3%\"></td>\n<td width=\"63%\">\n\n\n<p>This field is set to the value specified in\n<i>sigev_value</i>.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Depending on\nthe API, other fields may also be set in the\n<i>siginfo_t</i> structure.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The same\ninformation is also available if the signal is accepted\nusing <a href=\"https://man.page/2/sigwaitinfo\">sigwaitinfo(2)</a>.</p>\n\n<p style=\"margin-left:11%;\"><b>SIGEV_THREAD</b></p>\n\n<p style=\"margin-left:22%;\">Notify the process by invoking\n<i>sigev_notify_function</i> &quot;as if&quot; it were the\nstart function of a new thread. (Among the implementation\npossibilities here are that each timer notification could\nresult in the creation of a new thread, or that a single\nthread is created to receive all notifications.) The\nfunction is invoked with <i>sigev_value</i> as its sole\nargument. If <i>sigev_notify_attributes</i> is not NULL, it\nshould point to a <i>pthread_attr_t</i> structure that\ndefines attributes for the new thread (see\n<a href=\"https://man.page/3/pthread_attr_init\">pthread_attr_init(3)</a>).</p>\n\n<p style=\"margin-left:11%;\"><b>SIGEV_THREAD_ID</b>\n(Linux-specific)</p>\n\n<p style=\"margin-left:22%;\">Currently used only by POSIX\ntimers; see <a href=\"https://man.page/2/timer_create\">timer_create(2)</a>.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/timer_create\">timer_create(2)</a>,\n<a href=\"https://man.page/3/aio_fsync\">aio_fsync(3)</a>, <a href=\"https://man.page/3/aio_read\">aio_read(3)</a>,\n<a href=\"https://man.page/3/aio_write\">aio_write(3)</a>, <a href=\"https://man.page/3/getaddrinfo_a\">getaddrinfo_a(3)</a>,\n<a href=\"https://man.page/3/lio_listio\">lio_listio(3)</a>, <a href=\"https://man.page/3/mq_notify\">mq_notify(3)</a>, <a href=\"https://man.page/7/aio\">aio(7)</a>,\n<a href=\"https://man.page/7/pthreads\">pthreads(7)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":7}