{"name":"evp_kdf-sshkdf","description":"EVP_KDF-SSHKDF\n- The SSHKDF EVP_KDF implementation\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\nSupport for\ncomputing the <b><small>SSHKDF</small></b>\n<small>KDF</small> through the <b><small>EVP_KDF</small></b>\n<small>API.</small>\n\nThe\n<small>EVP_KDF-SSHKDF</small> algorithm implements the\n<small>SSHKDF</small> key derivation function. It is defined\nin <small>RFC 4253,</small> section 7.2 and is used by\n<small>SSH</small> to derive IVs, encryption keys and\nintegrity keys. Five inputs are required to perform key\nderivation: The hashing function (for example\n<small>SHA256</small> ), the Initial Key, the Exchange Hash,\nthe Session <small>ID,</small> and the derivation key\ntype.\n\n\n<b>Identity</b>\n<br>\n&quot; <small>SSHKDF&quot;</small> is the name for this\nimplementation; it can be used with the\n<b>EVP_KDF_fetch()</b> function.\n\n<b>Supported\nparameters</b> <br>\nThe supported parameters are: <br>\n&quot;properties&quot; (\n<b><small>OSSL_KDF_PARAM_PROPERTIES</small></b> ) &lt;\n<small>UTF8</small> string&gt; <br>\n&quot;digest&quot; (\n<b><small>OSSL_KDF_PARAM_DIGEST</small></b> ) &lt;\n<small>UTF8</small> string&gt; <br>\n&quot;key&quot; ( <b><small>OSSL_KDF_PARAM_KEY</small></b> )\n&lt;octet string&gt;\n\n<p style=\"margin-left:17%;\">These parameters work as\ndescribed in &quot; <small>PARAMETERS&quot;</small> in\n<b><small>EVP_KDF</small></b> (3).\n\n<p style=\"margin-left:11%;\">&quot;xcghash&quot; (\n<b><small>OSSL_KDF_PARAM_SSHKDF_XCGHASH</small></b> )\n&lt;octet string&gt; <br>\n&quot;session_id&quot; (\n<b><small>OSSL_KDF_PARAM_SSHKDF_SESSION_ID</small></b> )\n&lt;octet string&gt;\n\n<p style=\"margin-left:17%;\">These parameters set the\nrespective values for the <small>KDF.</small> If a value is\nalready set, the contents are replaced.\n\n<p style=\"margin-left:11%;\">&quot;type&quot; (\n<b><small>OSSL_KDF_PARAM_SSHKDF_TYPE</small></b> ) &lt;\n<small>UTF8</small> string&gt;\n\n<p style=\"margin-left:17%;\">This parameter sets the type\nfor the <small>SSHKDF</small> operation. There are six\nsupported types: <small><br>\nEVP_KDF_SSHKDF_TYPE_INITIAL_IV_CLI_TO_SRV</small>\n\n<p style=\"margin-left:23%;\">The Initial <small>IV</small>\nfrom client to server. A single char of value 65 (\n<small>ASCII</small> char &rsquo;A&rsquo;).\n\n\n<p style=\"margin-left:17%;\"><small>EVP_KDF_SSHKDF_TYPE_INITIAL_IV_SRV_TO_CLI</small>\n\n<p style=\"margin-left:23%;\">The Initial <small>IV</small>\nfrom server to client A single char of value 66 (\n<small>ASCII</small> char &rsquo;B&rsquo;).\n\n\n<p style=\"margin-left:17%;\"><small>EVP_KDF_SSHKDF_TYPE_ENCRYPTION_KEY_CLI_TO_SRV</small>\n\n<p style=\"margin-left:23%;\">The Encryption Key from client\nto server A single char of value 67 ( <small>ASCII</small>\nchar &rsquo;C&rsquo;).\n\n\n<p style=\"margin-left:17%;\"><small>EVP_KDF_SSHKDF_TYPE_ENCRYPTION_KEY_SRV_TO_CLI</small>\n\n<p style=\"margin-left:23%;\">The Encryption Key from server\nto client A single char of value 68 ( <small>ASCII</small>\nchar &rsquo;D&rsquo;).\n\n\n<p style=\"margin-left:17%;\"><small>EVP_KDF_SSHKDF_TYPE_INTEGRITY_KEY_CLI_TO_SRV</small>\n\n<p style=\"margin-left:23%;\">The Integrity Key from client\nto server A single char of value 69 ( <small>ASCII</small>\nchar &rsquo;E&rsquo;).\n\n\n<p style=\"margin-left:17%;\"><small>EVP_KDF_SSHKDF_TYPE_INTEGRITY_KEY_SRV_TO_CLI</small>\n\n<p style=\"margin-left:23%;\">The Integrity Key from client\nto server A single char of value 70 ( <small>ASCII</small>\nchar &rsquo;F&rsquo;).\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\nA context for\n<small>SSHKDF</small> can be obtained by calling:\n\nEVP_KDF *kdf =\nEVP_KDF_fetch(NULL, &quot;SSHKDF&quot;, NULL); <br>\nEVP_KDF_CTX *kctx = EVP_KDF_CTX_new(kdf);\n\nThe output\nlength of the <small>SSHKDF</small> derivation is specified\nvia the <i>keylen</i> parameter to the\n<a href=\"https://man.page/3/EVP_KDF_derive\">EVP_KDF_derive(3)</a> function. Since the\n<small>SSHKDF</small> output length is variable, calling\n<a href=\"https://man.page/3/EVP_KDF_CTX_get_kdf_size\">EVP_KDF_CTX_get_kdf_size(3)</a> to obtain the requisite\nlength is not meaningful. The caller must allocate a buffer\nof the desired length, and pass that buffer to the\n<a href=\"https://man.page/3/EVP_KDF_derive\">EVP_KDF_derive(3)</a> function along with the desired\nlength.\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\nThis example\nderives an 8 byte <small>IV</small> using\n<small>SHA-256</small> with a 1K &quot;key&quot; and\nappropriate &quot;xcghash&quot; and &quot;session_id&quot;\nvalues:\n\nEVP_KDF *kdf;\n<br>\nEVP_KDF_CTX *kctx; <br>\nconst char type = EVP_KDF_SSHKDF_TYPE_INITIAL_IV_CLI_TO_SRV;\n<br>\nunsigned char key[1024] = &quot;01234...&quot;; <br>\nunsigned char xcghash[32] = &quot;012345...&quot;; <br>\nunsigned char session_id[32] = &quot;012345...&quot;; <br>\nunsigned char out[8]; <br>\nsize_t outlen = sizeof(out); <br>\nOSSL_PARAM params[6], *p = params; <br>\nkdf = EVP_KDF_fetch(NULL, &quot;SSHKDF&quot;, NULL); <br>\nkctx = EVP_KDF_CTX_new(kdf); <br>\nEVP_KDF_free(kdf); <br>\n*p++ =\nOSSL_PARAM_construct_utf8_string(OSSL_KDF_PARAM_DIGEST, <br>\nSN_sha256, strlen(SN_sha256)); <br>\n*p++ = OSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_KEY,\n<br>\nkey, (size_t)1024); <br>\n*p++ =\nOSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_SSHKDF_XCGHASH,\n<br>\nxcghash, (size_t)32); <br>\n*p++ =\nOSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_SSHKDF_SESSION_ID,\n<br>\nsession_id, (size_t)32); <br>\n*p++ =\nOSSL_PARAM_construct_utf8_string(OSSL_KDF_PARAM_SSHKDF_TYPE,\n<br>\n&amp;type, sizeof(type)); <br>\n*p = OSSL_PARAM_construct_end(); <br>\nif (EVP_KDF_derive(kctx, out, &amp;outlen, params) &lt;= 0)\n<br>\n/* Error */\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<small>RFC\n4253</small>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<small><b>EVP_KDF</b></small>\n(3), <a href=\"https://man.page/3/EVP_KDF_CTX_new\">EVP_KDF_CTX_new(3)</a>, <a href=\"https://man.page/3/EVP_KDF_CTX_free\">EVP_KDF_CTX_free(3)</a>,\n<a href=\"https://man.page/3/EVP_KDF_CTX_set_params\">EVP_KDF_CTX_set_params(3)</a>,\n<a href=\"https://man.page/3/EVP_KDF_CTX_get_kdf_size\">EVP_KDF_CTX_get_kdf_size(3)</a>,\n<a href=\"https://man.page/3/EVP_KDF_derive\">EVP_KDF_derive(3)</a>, &quot;\n<small>PARAMETERS&quot;</small> in\n<b><small>EVP_KDF</small></b> (3)\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\nCopyright\n2016-2021 The OpenSSL Project Authors. All Rights\nReserved.\n\nLicensed under\nthe Apache License 2.0 (the &quot;License&quot;). You may\nnot use this file except in compliance with the License. You\ncan obtain a copy in the file <small>LICENSE</small> in the\nsource distribution or at\n&lt;https://www.openssl.org/source/license.html&gt;.","body":"\n\n<h1 align=\"center\">EVP_KDF-SSHKDF</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">EVP_KDF-SSHKDF\n- The SSHKDF EVP_KDF implementation</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Support for\ncomputing the <b><small>SSHKDF</small></b>\n<small>KDF</small> through the <b><small>EVP_KDF</small></b>\n<small>API.</small></p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<small>EVP_KDF-SSHKDF</small> algorithm implements the\n<small>SSHKDF</small> key derivation function. It is defined\nin <small>RFC 4253,</small> section 7.2 and is used by\n<small>SSH</small> to derive IVs, encryption keys and\nintegrity keys. Five inputs are required to perform key\nderivation: The hashing function (for example\n<small>SHA256</small> ), the Initial Key, the Exchange Hash,\nthe Session <small>ID,</small> and the derivation key\ntype.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Identity</b>\n<br>\n&quot; <small>SSHKDF&quot;</small> is the name for this\nimplementation; it can be used with the\n<b>EVP_KDF_fetch()</b> function.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Supported\nparameters</b> <br>\nThe supported parameters are: <br>\n&quot;properties&quot; (\n<b><small>OSSL_KDF_PARAM_PROPERTIES</small></b> ) &lt;\n<small>UTF8</small> string&gt; <br>\n&quot;digest&quot; (\n<b><small>OSSL_KDF_PARAM_DIGEST</small></b> ) &lt;\n<small>UTF8</small> string&gt; <br>\n&quot;key&quot; ( <b><small>OSSL_KDF_PARAM_KEY</small></b> )\n&lt;octet string&gt;</p>\n\n<p style=\"margin-left:17%;\">These parameters work as\ndescribed in &quot; <small>PARAMETERS&quot;</small> in\n<b><small>EVP_KDF</small></b> (3).</p>\n\n<p style=\"margin-left:11%;\">&quot;xcghash&quot; (\n<b><small>OSSL_KDF_PARAM_SSHKDF_XCGHASH</small></b> )\n&lt;octet string&gt; <br>\n&quot;session_id&quot; (\n<b><small>OSSL_KDF_PARAM_SSHKDF_SESSION_ID</small></b> )\n&lt;octet string&gt;</p>\n\n<p style=\"margin-left:17%;\">These parameters set the\nrespective values for the <small>KDF.</small> If a value is\nalready set, the contents are replaced.</p>\n\n<p style=\"margin-left:11%;\">&quot;type&quot; (\n<b><small>OSSL_KDF_PARAM_SSHKDF_TYPE</small></b> ) &lt;\n<small>UTF8</small> string&gt;</p>\n\n<p style=\"margin-left:17%;\">This parameter sets the type\nfor the <small>SSHKDF</small> operation. There are six\nsupported types: <small><br>\nEVP_KDF_SSHKDF_TYPE_INITIAL_IV_CLI_TO_SRV</small></p>\n\n<p style=\"margin-left:23%;\">The Initial <small>IV</small>\nfrom client to server. A single char of value 65 (\n<small>ASCII</small> char &rsquo;A&rsquo;).</p>\n\n\n<p style=\"margin-left:17%;\"><small>EVP_KDF_SSHKDF_TYPE_INITIAL_IV_SRV_TO_CLI</small></p>\n\n<p style=\"margin-left:23%;\">The Initial <small>IV</small>\nfrom server to client A single char of value 66 (\n<small>ASCII</small> char &rsquo;B&rsquo;).</p>\n\n\n<p style=\"margin-left:17%;\"><small>EVP_KDF_SSHKDF_TYPE_ENCRYPTION_KEY_CLI_TO_SRV</small></p>\n\n<p style=\"margin-left:23%;\">The Encryption Key from client\nto server A single char of value 67 ( <small>ASCII</small>\nchar &rsquo;C&rsquo;).</p>\n\n\n<p style=\"margin-left:17%;\"><small>EVP_KDF_SSHKDF_TYPE_ENCRYPTION_KEY_SRV_TO_CLI</small></p>\n\n<p style=\"margin-left:23%;\">The Encryption Key from server\nto client A single char of value 68 ( <small>ASCII</small>\nchar &rsquo;D&rsquo;).</p>\n\n\n<p style=\"margin-left:17%;\"><small>EVP_KDF_SSHKDF_TYPE_INTEGRITY_KEY_CLI_TO_SRV</small></p>\n\n<p style=\"margin-left:23%;\">The Integrity Key from client\nto server A single char of value 69 ( <small>ASCII</small>\nchar &rsquo;E&rsquo;).</p>\n\n\n<p style=\"margin-left:17%;\"><small>EVP_KDF_SSHKDF_TYPE_INTEGRITY_KEY_SRV_TO_CLI</small></p>\n\n<p style=\"margin-left:23%;\">The Integrity Key from client\nto server A single char of value 70 ( <small>ASCII</small>\nchar &rsquo;F&rsquo;).</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">A context for\n<small>SSHKDF</small> can be obtained by calling:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">EVP_KDF *kdf =\nEVP_KDF_fetch(NULL, &quot;SSHKDF&quot;, NULL); <br>\nEVP_KDF_CTX *kctx = EVP_KDF_CTX_new(kdf);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The output\nlength of the <small>SSHKDF</small> derivation is specified\nvia the <i>keylen</i> parameter to the\n<a href=\"https://man.page/3/EVP_KDF_derive\">EVP_KDF_derive(3)</a> function. Since the\n<small>SSHKDF</small> output length is variable, calling\n<a href=\"https://man.page/3/EVP_KDF_CTX_get_kdf_size\">EVP_KDF_CTX_get_kdf_size(3)</a> to obtain the requisite\nlength is not meaningful. The caller must allocate a buffer\nof the desired length, and pass that buffer to the\n<a href=\"https://man.page/3/EVP_KDF_derive\">EVP_KDF_derive(3)</a> function along with the desired\nlength.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This example\nderives an 8 byte <small>IV</small> using\n<small>SHA-256</small> with a 1K &quot;key&quot; and\nappropriate &quot;xcghash&quot; and &quot;session_id&quot;\nvalues:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">EVP_KDF *kdf;\n<br>\nEVP_KDF_CTX *kctx; <br>\nconst char type = EVP_KDF_SSHKDF_TYPE_INITIAL_IV_CLI_TO_SRV;\n<br>\nunsigned char key[1024] = &quot;01234...&quot;; <br>\nunsigned char xcghash[32] = &quot;012345...&quot;; <br>\nunsigned char session_id[32] = &quot;012345...&quot;; <br>\nunsigned char out[8]; <br>\nsize_t outlen = sizeof(out); <br>\nOSSL_PARAM params[6], *p = params; <br>\nkdf = EVP_KDF_fetch(NULL, &quot;SSHKDF&quot;, NULL); <br>\nkctx = EVP_KDF_CTX_new(kdf); <br>\nEVP_KDF_free(kdf); <br>\n*p++ =\nOSSL_PARAM_construct_utf8_string(OSSL_KDF_PARAM_DIGEST, <br>\nSN_sha256, strlen(SN_sha256)); <br>\n*p++ = OSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_KEY,\n<br>\nkey, (size_t)1024); <br>\n*p++ =\nOSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_SSHKDF_XCGHASH,\n<br>\nxcghash, (size_t)32); <br>\n*p++ =\nOSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_SSHKDF_SESSION_ID,\n<br>\nsession_id, (size_t)32); <br>\n*p++ =\nOSSL_PARAM_construct_utf8_string(OSSL_KDF_PARAM_SSHKDF_TYPE,\n<br>\n&amp;type, sizeof(type)); <br>\n*p = OSSL_PARAM_construct_end(); <br>\nif (EVP_KDF_derive(kctx, out, &amp;outlen, params) &lt;= 0)\n<br>\n/* Error */</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><small>RFC\n4253</small></p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><small><b>EVP_KDF</b></small>\n(3), <a href=\"https://man.page/3/EVP_KDF_CTX_new\">EVP_KDF_CTX_new(3)</a>, <a href=\"https://man.page/3/EVP_KDF_CTX_free\">EVP_KDF_CTX_free(3)</a>,\n<a href=\"https://man.page/3/EVP_KDF_CTX_set_params\">EVP_KDF_CTX_set_params(3)</a>,\n<a href=\"https://man.page/3/EVP_KDF_CTX_get_kdf_size\">EVP_KDF_CTX_get_kdf_size(3)</a>,\n<a href=\"https://man.page/3/EVP_KDF_derive\">EVP_KDF_derive(3)</a>, &quot;\n<small>PARAMETERS&quot;</small> in\n<b><small>EVP_KDF</small></b> (3)</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright\n2016-2021 The OpenSSL Project Authors. All Rights\nReserved.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Licensed under\nthe Apache License 2.0 (the &quot;License&quot;). You may\nnot use this file except in compliance with the License. You\ncan obtain a copy in the file <small>LICENSE</small> in the\nsource distribution or at\n&lt;https://www.openssl.org/source/license.html&gt;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"],"level":7}