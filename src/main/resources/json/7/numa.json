{"name":"numa","description":"numa - overview\nof Non-Uniform Memory Architecture\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\nNon-Uniform\nMemory Access (NUMA) refers to multiprocessor systems whose\nmemory is divided into multiple memory nodes. The access\ntime of a memory node depends on the relative locations of\nthe accessing CPU and the accessed node. (This contrasts\nwith a symmetric multiprocessor system, where the access\ntime for all of the memory is the same for all CPUs.)\nNormally, each CPU on a NUMA system has a local memory node\nwhose contents can be accessed faster than the memory in the\nnode local to another CPU or the memory on a bus shared by\nall CPUs.\n\n<b>NUMA system\ncalls</b> <br>\nThe Linux kernel implements the following NUMA-related\nsystem calls: <a href=\"https://man.page/2/get_mempolicy\">get_mempolicy(2)</a>, <a href=\"https://man.page/2/mbind\">mbind(2)</a>,\n<a href=\"https://man.page/2/migrate_pages\">migrate_pages(2)</a>, <a href=\"https://man.page/2/move_pages\">move_pages(2)</a>, and\n<a href=\"https://man.page/2/set_mempolicy\">set_mempolicy(2)</a>. However, applications should\nnormally use the interface provided by <i>libnuma</i>; see\n&quot;Library Support&quot; below.\n\n\n<b>/proc/[number]/numa_maps\n(since Linux 2.6.14)</b> <br>\nThis file displays information about a process&rsquo;s NUMA\nmemory policy and allocation.\n\nEach line\ncontains information about a memory range used by the\nprocess, displaying&mdash;among other information&mdash;the\neffective memory policy for that memory range and on which\nnodes the pages have been allocated.\n\n\n<i>numa_maps</i>\nis a read-only file. When <i>/proc/&lt;pid&gt;/numa_maps</i>\nis read, the kernel will scan the virtual address space of\nthe process and report how memory is used. One line is\ndisplayed for each unique memory range of the process.\n\nThe first field\nof each line shows the starting address of the memory range.\nThis field allows a correlation with the contents of the\n<i>/proc/&lt;pid&gt;/maps</i> file, which contains the end\naddress of the range and other information, such as the\naccess permissions and sharing.\n\nThe second\nfield shows the memory policy currently in effect for the\nmemory range. Note that the effective policy is not\nnecessarily the policy installed by the process for that\nmemory range. Specifically, if the process installed a\n&quot;default&quot; policy for that range, the effective\npolicy for that range will be the process policy, which may\nor may not be &quot;default&quot;.\n\nThe rest of the\nline contains information about the pages allocated in the\nmemory range, as follows: <i><br>\nN&lt;node&gt;=&lt;nr_pages&gt;</i>\n\n<p style=\"margin-left:22%;\">The number of pages allocated\non <i>&lt;node&gt;</i>. <i>&lt;nr_pages&gt;</i> includes\nonly pages currently mapped by the process. Page migration\nand memory reclaim may have temporarily unmapped pages\nassociated with this memory range. These pages may show up\nagain only after the process has attempted to reference\nthem. If the memory range represents a shared memory area or\nfile mapping, other processes may currently have additional\npages mapped in a corresponding memory range.\n\n\n<p style=\"margin-left:11%;\"><i>file=&lt;filename&gt;</i>\n\n<p style=\"margin-left:22%;\">The file backing the memory\nrange. If the file is mapped as private, write accesses may\nhave generated COW (Copy-On-Write) pages in this memory\nrange. These pages are displayed as anonymous pages.\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><i>heap</i></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>Memory range is used for the heap.</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><i>stack</i></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>Memory range is used for the stack.</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><i>huge</i></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>Huge memory range. The page counts shown are huge pages\nand not regular sized pages.</td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><i>anon=&lt;pages&gt;</i>\n\n<p style=\"margin-left:22%;\">The number of anonymous page in\nthe range.\n\n<p style=\"margin-left:11%;\"><i>dirty=&lt;pages&gt;</i>\n\n<p style=\"margin-left:22%;\">Number of dirty pages.\n\n\n<p style=\"margin-left:11%;\"><i>mapped=&lt;pages&gt;</i>\n\n<p style=\"margin-left:22%;\">Total number of mapped pages,\nif different from <i>dirty</i> and <i>anon</i> pages.\n\n\n<p style=\"margin-left:11%;\"><i>mapmax=&lt;count&gt;</i>\n\n<p style=\"margin-left:22%;\">Maximum mapcount (number of\nprocesses mapping a single page) encountered during the\nscan. This may be used as an indicator of the degree of\nsharing occurring in a given memory range.\n\n\n<p style=\"margin-left:11%;\"><i>swapcache=&lt;count&gt;</i>\n\n<p style=\"margin-left:22%;\">Number of pages that have an\nassociated entry on a swap device.\n\n\n<p style=\"margin-left:11%;\"><i>active=&lt;pages&gt;</i>\n\n<p style=\"margin-left:22%;\">The number of pages on the\nactive list. This field is shown only if different from the\nnumber of pages in this range. This means that some inactive\npages exist in the memory range that may be removed from\nmemory by the swapper soon.\n\n\n<p style=\"margin-left:11%;\"><i>writeback=&lt;pages&gt;</i>\n\n<p style=\"margin-left:22%;\">Number of pages that are\ncurrently being written out to disk.\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\nNo standards\ngovern NUMA interfaces.\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\nThe Linux NUMA\nsystem calls and <i>/proc</i> interface are available only\nif the kernel was configured and built with the\n<b>CONFIG_NUMA</b> option.\n\n<b>Library\nsupport</b> <br>\nLink with <i>-lnuma</i> to get the system call definitions.\n<i>libnuma</i> and the required <i>&lt;numaif.h&gt;</i>\nheader are available in the <i>numactl</i> package.\n\nHowever,\napplications should not use these system calls directly.\nInstead, the higher level interface provided by the\n<a href=\"https://man.page/3/numa\">numa(3)</a> functions in the <i>numactl</i> package is\nrecommended. The <i>numactl</i> package is available at\n<a href=\"ftp://oss.sgi.com/www/projects/libnuma/download/\">ftp://oss.sgi.com/www/projects/libnuma/download/</a>.\nThe package is also included in some Linux distributions.\nSome distributions include the development library and\nheader in the separate <i>numactl-devel</i> package.\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<a href=\"https://man.page/2/get_mempolicy\">get_mempolicy(2)</a>,\n<a href=\"https://man.page/2/mbind\">mbind(2)</a>, <a href=\"https://man.page/2/move_pages\">move_pages(2)</a>,\n<a href=\"https://man.page/2/set_mempolicy\">set_mempolicy(2)</a>, <a href=\"https://man.page/3/numa\">numa(3)</a>, <a href=\"https://man.page/7/cpuset\">cpuset(7)</a>,\n<b>numactl</b>(8)\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\nThis page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.","body":"\n\n<h1 align=\"center\">NUMA</h1>\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">numa - overview\nof Non-Uniform Memory Architecture</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Non-Uniform\nMemory Access (NUMA) refers to multiprocessor systems whose\nmemory is divided into multiple memory nodes. The access\ntime of a memory node depends on the relative locations of\nthe accessing CPU and the accessed node. (This contrasts\nwith a symmetric multiprocessor system, where the access\ntime for all of the memory is the same for all CPUs.)\nNormally, each CPU on a NUMA system has a local memory node\nwhose contents can be accessed faster than the memory in the\nnode local to another CPU or the memory on a bus shared by\nall CPUs.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>NUMA system\ncalls</b> <br>\nThe Linux kernel implements the following NUMA-related\nsystem calls: <a href=\"https://man.page/2/get_mempolicy\">get_mempolicy(2)</a>, <a href=\"https://man.page/2/mbind\">mbind(2)</a>,\n<a href=\"https://man.page/2/migrate_pages\">migrate_pages(2)</a>, <a href=\"https://man.page/2/move_pages\">move_pages(2)</a>, and\n<a href=\"https://man.page/2/set_mempolicy\">set_mempolicy(2)</a>. However, applications should\nnormally use the interface provided by <i>libnuma</i>; see\n&quot;Library Support&quot; below.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>/proc/[number]/numa_maps\n(since Linux 2.6.14)</b> <br>\nThis file displays information about a process&rsquo;s NUMA\nmemory policy and allocation.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Each line\ncontains information about a memory range used by the\nprocess, displaying&mdash;among other information&mdash;the\neffective memory policy for that memory range and on which\nnodes the pages have been allocated.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>numa_maps</i>\nis a read-only file. When <i>/proc/&lt;pid&gt;/numa_maps</i>\nis read, the kernel will scan the virtual address space of\nthe process and report how memory is used. One line is\ndisplayed for each unique memory range of the process.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The first field\nof each line shows the starting address of the memory range.\nThis field allows a correlation with the contents of the\n<i>/proc/&lt;pid&gt;/maps</i> file, which contains the end\naddress of the range and other information, such as the\naccess permissions and sharing.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The second\nfield shows the memory policy currently in effect for the\nmemory range. Note that the effective policy is not\nnecessarily the policy installed by the process for that\nmemory range. Specifically, if the process installed a\n&quot;default&quot; policy for that range, the effective\npolicy for that range will be the process policy, which may\nor may not be &quot;default&quot;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The rest of the\nline contains information about the pages allocated in the\nmemory range, as follows: <i><br>\nN&lt;node&gt;=&lt;nr_pages&gt;</i></p>\n\n<p style=\"margin-left:22%;\">The number of pages allocated\non <i>&lt;node&gt;</i>. <i>&lt;nr_pages&gt;</i> includes\nonly pages currently mapped by the process. Page migration\nand memory reclaim may have temporarily unmapped pages\nassociated with this memory range. These pages may show up\nagain only after the process has attempted to reference\nthem. If the memory range represents a shared memory area or\nfile mapping, other processes may currently have additional\npages mapped in a corresponding memory range.</p>\n\n\n<p style=\"margin-left:11%;\"><i>file=&lt;filename&gt;</i></p>\n\n<p style=\"margin-left:22%;\">The file backing the memory\nrange. If the file is mapped as private, write accesses may\nhave generated COW (Copy-On-Write) pages in this memory\nrange. These pages are displayed as anonymous pages.</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><i>heap</i></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>Memory range is used for the heap.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><i>stack</i></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>Memory range is used for the stack.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><i>huge</i></p></td>\n<td width=\"4%\"></td>\n<td width=\"78%\">\n\n\n<p>Huge memory range. The page counts shown are huge pages\nand not regular sized pages.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%;\"><i>anon=&lt;pages&gt;</i></p>\n\n<p style=\"margin-left:22%;\">The number of anonymous page in\nthe range.</p>\n\n<p style=\"margin-left:11%;\"><i>dirty=&lt;pages&gt;</i></p>\n\n<p style=\"margin-left:22%;\">Number of dirty pages.</p>\n\n\n<p style=\"margin-left:11%;\"><i>mapped=&lt;pages&gt;</i></p>\n\n<p style=\"margin-left:22%;\">Total number of mapped pages,\nif different from <i>dirty</i> and <i>anon</i> pages.</p>\n\n\n<p style=\"margin-left:11%;\"><i>mapmax=&lt;count&gt;</i></p>\n\n<p style=\"margin-left:22%;\">Maximum mapcount (number of\nprocesses mapping a single page) encountered during the\nscan. This may be used as an indicator of the degree of\nsharing occurring in a given memory range.</p>\n\n\n<p style=\"margin-left:11%;\"><i>swapcache=&lt;count&gt;</i></p>\n\n<p style=\"margin-left:22%;\">Number of pages that have an\nassociated entry on a swap device.</p>\n\n\n<p style=\"margin-left:11%;\"><i>active=&lt;pages&gt;</i></p>\n\n<p style=\"margin-left:22%;\">The number of pages on the\nactive list. This field is shown only if different from the\nnumber of pages in this range. This means that some inactive\npages exist in the memory range that may be removed from\nmemory by the swapper soon.</p>\n\n\n<p style=\"margin-left:11%;\"><i>writeback=&lt;pages&gt;</i></p>\n\n<p style=\"margin-left:22%;\">Number of pages that are\ncurrently being written out to disk.</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">No standards\ngovern NUMA interfaces.</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The Linux NUMA\nsystem calls and <i>/proc</i> interface are available only\nif the kernel was configured and built with the\n<b>CONFIG_NUMA</b> option.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Library\nsupport</b> <br>\nLink with <i>-lnuma</i> to get the system call definitions.\n<i>libnuma</i> and the required <i>&lt;numaif.h&gt;</i>\nheader are available in the <i>numactl</i> package.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">However,\napplications should not use these system calls directly.\nInstead, the higher level interface provided by the\n<a href=\"https://man.page/3/numa\">numa(3)</a> functions in the <i>numactl</i> package is\nrecommended. The <i>numactl</i> package is available at\n<a href=\"ftp://oss.sgi.com/www/projects/libnuma/download/\">ftp://oss.sgi.com/www/projects/libnuma/download/</a>.\nThe package is also included in some Linux distributions.\nSome distributions include the development library and\nheader in the separate <i>numactl-devel</i> package.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/2/get_mempolicy\">get_mempolicy(2)</a>,\n<a href=\"https://man.page/2/mbind\">mbind(2)</a>, <a href=\"https://man.page/2/move_pages\">move_pages(2)</a>,\n<a href=\"https://man.page/2/set_mempolicy\">set_mempolicy(2)</a>, <a href=\"https://man.page/3/numa\">numa(3)</a>, <a href=\"https://man.page/7/cpuset\">cpuset(7)</a>,\n<b>numactl</b>(8)</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":7}