{"name":"queue","description":"queue -\nimplementations of linked lists and queues\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\nThe\n<i>&lt;sys/queue.h&gt;</i> header file provides a set of\nmacros that define and operate on the following data\nstructures:\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</td>\n<td width=\"3%\"></td>\n<td width=\"60%\">\n\n\n<p>singly linked lists (SLIST)</td>\n<td width=\"25%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</td>\n<td width=\"3%\"></td>\n<td width=\"60%\">\n\n\n<p>doubly linked lists (LIST)</td>\n<td width=\"25%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</td>\n<td width=\"3%\"></td>\n<td width=\"60%\">\n\n\n<p>singly linked tail queues (STAILQ)</td>\n<td width=\"25%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</td>\n<td width=\"3%\"></td>\n<td width=\"60%\">\n\n\n<p>doubly linked tail queues (TAILQ)</td>\n<td width=\"25%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</td>\n<td width=\"3%\"></td>\n<td width=\"60%\">\n\n\n<p>doubly linked circular queues (CIRCLEQ)</td>\n<td width=\"25%\">\n</td></tr>\n</table>\n\nAll structures\nsupport the following functionality:\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p style=\"margin-top: 1em\">Insertion of a new entry at the\nhead of the list.</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>Insertion of a new entry after any element in the\nlist. </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>O(1) removal of an entry from the head of the list.</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>Forward traversal through the list.</td></tr>\n</table>\n\nCode size and\nexecution time depend on the complexity of the data\nstructure being used, so programmers should take care to\nchoose the appropriate one.\n\n<b>Singly\nlinked lists (SLIST)</b> <br>\nSingly linked lists are the simplest and support only the\nabove functionality. Singly linked lists are ideal for\napplications with large datasets and few or no removals, or\nfor implementing a LIFO queue. Singly linked lists add the\nfollowing functionality:\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</td>\n<td width=\"3%\"></td>\n<td width=\"59%\">\n\n\n<p style=\"margin-top: 1em\">O(n) removal of any entry in the\nlist. </td>\n<td width=\"26%\">\n</td></tr>\n</table>\n\n<b>Singly\nlinked tail queues (STAILQ)</b> <br>\nSingly linked tail queues add the following\nfunctionality:\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</td>\n<td width=\"3%\"></td>\n<td width=\"65%\">\n\n\n<p style=\"margin-top: 1em\">Entries can be added at the end\nof a list.</td>\n<td width=\"20%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</td>\n<td width=\"3%\"></td>\n<td width=\"65%\">\n\n\n<p>O(n) removal of any entry in the list.</td>\n<td width=\"20%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</td>\n<td width=\"3%\"></td>\n<td width=\"65%\">\n\n\n<p>They may be concatenated.</td>\n<td width=\"20%\">\n</td></tr>\n</table>\n\nHowever:\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">All list insertions must specify\nthe head of the list.</td>\n<td width=\"2%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>Each head entry requires two pointers rather than\none. </td>\n<td width=\"2%\">\n</td></tr>\n</table>\n\nSingly linked\ntail queues are ideal for applications with large datasets\nand few or no removals, or for implementing a FIFO\nqueue.\n\n<b>Doubly\nlinked data structures</b> <br>\nAll doubly linked types of data structures (lists and tail\nqueues) additionally allow:\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p style=\"margin-top: 1em\">Insertion of a new entry before\nany element in the list.</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>O(1) removal of any entry in the list.</td></tr>\n</table>\n\nHowever:\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</td>\n<td width=\"3%\"></td>\n<td width=\"79%\">\n\n\n<p style=\"margin-top: 1em\">Each element requires two\npointers rather than one.</td>\n<td width=\"6%\">\n</td></tr>\n</table>\n\n<b>Doubly\nlinked lists (LIST)</b> <br>\nLinked lists are the simplest of the doubly linked data\nstructures. They add the following functionality over the\nabove:\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</td>\n<td width=\"3%\"></td>\n<td width=\"50%\">\n\n\n<p style=\"margin-top: 1em\">They may be traversed\nbackwards. </td>\n<td width=\"35%\">\n</td></tr>\n</table>\n\nHowever:\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p style=\"margin-top: 1em\">To traverse backwards, an entry\nto begin the traversal and the list in which it is contained\nmust be specified.</td></tr>\n</table>\n\n<b>Doubly\nlinked tail queues (TAILQ)</b> <br>\nTail queues add the following functionality:\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</td>\n<td width=\"3%\"></td>\n<td width=\"79%\">\n\n\n<p style=\"margin-top: 1em\">Entries can be added at the end\nof a list.</td>\n<td width=\"6%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</td>\n<td width=\"3%\"></td>\n<td width=\"79%\">\n\n\n<p>They may be traversed backwards, from tail to head.</td>\n<td width=\"6%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</td>\n<td width=\"3%\"></td>\n<td width=\"79%\">\n\n\n<p>They may be concatenated.</td>\n<td width=\"6%\">\n</td></tr>\n</table>\n\nHowever:\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p style=\"margin-top: 1em\">All list insertions and removals\nmust specify the head of the list.</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>Each head entry requires two pointers rather than\none. </td></tr>\n</table>\n\n<b>Doubly\nlinked circular queues (CIRCLEQ)</b> <br>\nCircular queues add the following functionality over the\nabove:\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</td>\n<td width=\"3%\"></td>\n<td width=\"63%\">\n\n\n<p style=\"margin-top: 1em\">The first and last entries are\nconnected. </td>\n<td width=\"22%\">\n</td></tr>\n</table>\n\nHowever:\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p style=\"margin-top: 1em\">The termination condition for\ntraversal is more complex.</td></tr>\n</table>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\nNot in POSIX.1,\nPOSIX.1-2001 or POSIX.1-2008. Present on the BSDs.\n<i>&lt;sys/queue.h&gt;</i> macros first appeared in\n4.4BSD.\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<a href=\"https://man.page/3/circleq\">circleq(3)</a>,\n<a href=\"https://man.page/3/insque\">insque(3)</a>, <a href=\"https://man.page/3/list\">list(3)</a>, <a href=\"https://man.page/3/slist\">slist(3)</a>,\n<a href=\"https://man.page/3/stailq\">stailq(3)</a>, <a href=\"https://man.page/3/tailq\">tailq(3)</a>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\nThis page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.","body":"\n\n<h1 align=\"center\">QUEUE</h1>\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">queue -\nimplementations of linked lists and queues</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<i>&lt;sys/queue.h&gt;</i> header file provides a set of\nmacros that define and operate on the following data\nstructures:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"60%\">\n\n\n<p>singly linked lists (SLIST)</p></td>\n<td width=\"25%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"60%\">\n\n\n<p>doubly linked lists (LIST)</p></td>\n<td width=\"25%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"60%\">\n\n\n<p>singly linked tail queues (STAILQ)</p></td>\n<td width=\"25%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"60%\">\n\n\n<p>doubly linked tail queues (TAILQ)</p></td>\n<td width=\"25%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"60%\">\n\n\n<p>doubly linked circular queues (CIRCLEQ)</p></td>\n<td width=\"25%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All structures\nsupport the following functionality:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p style=\"margin-top: 1em\">Insertion of a new entry at the\nhead of the list.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>Insertion of a new entry after any element in the\nlist.</p> </td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>O(1) removal of an entry from the head of the list.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>Forward traversal through the list.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Code size and\nexecution time depend on the complexity of the data\nstructure being used, so programmers should take care to\nchoose the appropriate one.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Singly\nlinked lists (SLIST)</b> <br>\nSingly linked lists are the simplest and support only the\nabove functionality. Singly linked lists are ideal for\napplications with large datasets and few or no removals, or\nfor implementing a LIFO queue. Singly linked lists add the\nfollowing functionality:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</p></td>\n<td width=\"3%\"></td>\n<td width=\"59%\">\n\n\n<p style=\"margin-top: 1em\">O(n) removal of any entry in the\nlist.</p> </td>\n<td width=\"26%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Singly\nlinked tail queues (STAILQ)</b> <br>\nSingly linked tail queues add the following\nfunctionality:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</p></td>\n<td width=\"3%\"></td>\n<td width=\"65%\">\n\n\n<p style=\"margin-top: 1em\">Entries can be added at the end\nof a list.</p></td>\n<td width=\"20%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"65%\">\n\n\n<p>O(n) removal of any entry in the list.</p></td>\n<td width=\"20%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"65%\">\n\n\n<p>They may be concatenated.</p></td>\n<td width=\"20%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">However:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p style=\"margin-top: 1em\">All list insertions must specify\nthe head of the list.</p></td>\n<td width=\"2%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"83%\">\n\n\n<p>Each head entry requires two pointers rather than\none.</p> </td>\n<td width=\"2%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Singly linked\ntail queues are ideal for applications with large datasets\nand few or no removals, or for implementing a FIFO\nqueue.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Doubly\nlinked data structures</b> <br>\nAll doubly linked types of data structures (lists and tail\nqueues) additionally allow:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p style=\"margin-top: 1em\">Insertion of a new entry before\nany element in the list.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>O(1) removal of any entry in the list.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">However:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</p></td>\n<td width=\"3%\"></td>\n<td width=\"79%\">\n\n\n<p style=\"margin-top: 1em\">Each element requires two\npointers rather than one.</p></td>\n<td width=\"6%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Doubly\nlinked lists (LIST)</b> <br>\nLinked lists are the simplest of the doubly linked data\nstructures. They add the following functionality over the\nabove:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</p></td>\n<td width=\"3%\"></td>\n<td width=\"50%\">\n\n\n<p style=\"margin-top: 1em\">They may be traversed\nbackwards.</p> </td>\n<td width=\"35%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">However:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p style=\"margin-top: 1em\">To traverse backwards, an entry\nto begin the traversal and the list in which it is contained\nmust be specified.</p></td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Doubly\nlinked tail queues (TAILQ)</b> <br>\nTail queues add the following functionality:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</p></td>\n<td width=\"3%\"></td>\n<td width=\"79%\">\n\n\n<p style=\"margin-top: 1em\">Entries can be added at the end\nof a list.</p></td>\n<td width=\"6%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"79%\">\n\n\n<p>They may be traversed backwards, from tail to head.</p></td>\n<td width=\"6%\">\n</td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"79%\">\n\n\n<p>They may be concatenated.</p></td>\n<td width=\"6%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">However:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p style=\"margin-top: 1em\">All list insertions and removals\nmust specify the head of the list.</p></td></tr>\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p>*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p>Each head entry requires two pointers rather than\none.</p> </td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Doubly\nlinked circular queues (CIRCLEQ)</b> <br>\nCircular queues add the following functionality over the\nabove:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</p></td>\n<td width=\"3%\"></td>\n<td width=\"63%\">\n\n\n<p style=\"margin-top: 1em\">The first and last entries are\nconnected.</p> </td>\n<td width=\"22%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:11%; margin-top: 1em\">However:</p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"1%\">\n\n\n<p style=\"margin-top: 1em\">*</p></td>\n<td width=\"3%\"></td>\n<td width=\"85%\">\n\n\n<p style=\"margin-top: 1em\">The termination condition for\ntraversal is more complex.</p></td></tr>\n</table>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Not in POSIX.1,\nPOSIX.1-2001 or POSIX.1-2008. Present on the BSDs.\n<i>&lt;sys/queue.h&gt;</i> macros first appeared in\n4.4BSD.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/3/circleq\">circleq(3)</a>,\n<a href=\"https://man.page/3/insque\">insque(3)</a>, <a href=\"https://man.page/3/list\">list(3)</a>, <a href=\"https://man.page/3/slist\">slist(3)</a>,\n<a href=\"https://man.page/3/stailq\">stailq(3)</a>, <a href=\"https://man.page/3/tailq\">tailq(3)</a></p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":7}