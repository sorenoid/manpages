{"name":"provider-kem","description":"provider-kem - The kem library &lt;-&gt; provider functions","body":"\n\n<h1 align=\"center\">PROVIDER-KEM</h1>\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">provider-kem -\nThe kem library &lt;-&gt; provider functions</p>\n\n<h2>SYNOPSIS\n<a name=\"SYNOPSIS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">#include\n&lt;openssl/core_dispatch.h&gt; <br>\n#include &lt;openssl/core_names.h&gt; <br>\n/* <br>\n* None of these are actual functions, but are displayed like\nthis for <br>\n* the function signatures for functions that are offered as\nfunction <br>\n* pointers in OSSL_DISPATCH arrays. <br>\n*/ <br>\n/* Context management */ <br>\nvoid *OSSL_FUNC_kem_newctx(void *provctx); <br>\nvoid OSSL_FUNC_kem_freectx(void *ctx); <br>\nvoid *OSSL_FUNC_kem_dupctx(void *ctx); <br>\n/* Encapsulation */ <br>\nint OSSL_FUNC_kem_encapsulate_init(void *ctx, void *provkey,\nconst char *name, <br>\nconst OSSL_PARAM params[]); <br>\nint OSSL_FUNC_kem_encapsulate(void *ctx, unsigned char *out,\nsize_t *outlen, <br>\nunsigned char *secret, size_t *secretlen); <br>\n/* Decapsulation */ <br>\nint OSSL_FUNC_kem_decapsulate_init(void *ctx, void *provkey,\nconst char *name); <br>\nint OSSL_FUNC_kem_decapsulate(void *ctx, unsigned char *out,\nsize_t *outlen, <br>\nconst unsigned char *in, size_t inlen); <br>\n/* KEM parameters */ <br>\nint OSSL_FUNC_kem_get_ctx_params(void *ctx, OSSL_PARAM\nparams[]); <br>\nconst OSSL_PARAM *OSSL_FUNC_kem_gettable_ctx_params(void\n*ctx, void *provctx); <br>\nint OSSL_FUNC_kem_set_ctx_params(void *ctx, const OSSL_PARAM\nparams[]); <br>\nconst OSSL_PARAM *OSSL_FUNC_kem_settable_ctx_params(void\n*ctx, void *provctx);</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This\ndocumentation is primarily aimed at provider authors. See\n<a href=\"https://man.page/7/provider\">provider(7)</a> for further information.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The asymmetric\nkem ( <small>OSSL_OP_KEM</small> ) operation enables\nproviders to implement asymmetric kem algorithms and make\nthem available to applications via the <small>API</small>\nfunctions <a href=\"https://man.page/3/EVP_PKEY_encapsulate\">EVP_PKEY_encapsulate(3)</a>,\n<a href=\"https://man.page/3/EVP_PKEY_decapsulate\">EVP_PKEY_decapsulate(3)</a> and other related\nfunctions.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All\n&quot;functions&quot; mentioned here are passed as function\npointers between <i>libcrypto</i> and the provider in\n<b><small>OSSL_DISPATCH</small></b> arrays via\n<b><small>OSSL_ALGORITHM</small></b> arrays that are\nreturned by the provider&rsquo;s\n<b>provider_query_operation()</b> function (see\n&quot;Provider Functions&quot; in\n<a href=\"https://man.page/7/provider-base\">provider-base(7)</a>).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All these\n&quot;functions&quot; have a corresponding function type\ndefinition named <b>OSSL_FUNC_{name}_fn</b>, and a helper\nfunction to retrieve the function pointer from an\n<b><small>OSSL_DISPATCH</small></b> element named\n<b>OSSL_FUNC_{name}</b>. For example, the\n&quot;function&quot; <b>OSSL_FUNC_kem_newctx()</b> has\nthese:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">typedef void\n*(OSSL_FUNC_kem_newctx_fn)(void *provctx); <br>\nstatic ossl_inline OSSL_FUNC_kem_newctx_fn <br>\nOSSL_FUNC_kem_newctx(const OSSL_DISPATCH *opf);</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><small>OSSL_DISPATCH</small></b>\narrays are indexed by numbers that are provided as macros in\n<b>openssl-core_dispatch.h</b>(7), as follows:</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">OSSL_FUNC_kem_newctx\nOSSL_FUNC_KEM_NEWCTX <br>\nOSSL_FUNC_kem_freectx OSSL_FUNC_KEM_FREECTX <br>\nOSSL_FUNC_kem_dupctx OSSL_FUNC_KEM_DUPCTX <br>\nOSSL_FUNC_kem_encapsulate_init\nOSSL_FUNC_KEM_ENCAPSULATE_INIT <br>\nOSSL_FUNC_kem_encapsulate OSSL_FUNC_KEM_ENCAPSULATE <br>\nOSSL_FUNC_kem_decapsulate_init\nOSSL_FUNC_KEM_DECAPSULATE_INIT <br>\nOSSL_FUNC_kem_decapsulate OSSL_FUNC_KEM_DECAPSULATE <br>\nOSSL_FUNC_kem_get_ctx_params OSSL_FUNC_KEM_GET_CTX_PARAMS\n<br>\nOSSL_FUNC_kem_gettable_ctx_params\nOSSL_FUNC_KEM_GETTABLE_CTX_PARAMS <br>\nOSSL_FUNC_kem_set_ctx_params OSSL_FUNC_KEM_SET_CTX_PARAMS\n<br>\nOSSL_FUNC_kem_settable_ctx_params\nOSSL_FUNC_KEM_SETTABLE_CTX_PARAMS</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">An asymmetric\nkem algorithm implementation may not implement all of these\nfunctions. In order to be a consistent set of functions a\nprovider must implement OSSL_FUNC_kem_newctx and\nOSSL_FUNC_kem_freectx. It must also implement both of\nOSSL_FUNC_kem_encapsulate_init and\nOSSL_FUNC_kem_encapsulate, or both of\nOSSL_FUNC_kem_decapsulate_init and\nOSSL_FUNC_kem_decapsulate. OSSL_FUNC_kem_get_ctx_params is\noptional but if it is present then so must\nOSSL_FUNC_kem_gettable_ctx_params. Similarly,\nOSSL_FUNC_kem_set_ctx_params is optional but if it is\npresent then so must OSSL_FUNC_kem_settable_ctx_params.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">An asymmetric\nkem algorithm must also implement some mechanism for\ngenerating, loading or importing keys via the key management\n( <small>OSSL_OP_KEYMGMT</small> ) operation. See\n<a href=\"https://man.page/7/provider-keymgmt\">provider-keymgmt(7)</a> for further details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Context\nManagement Functions <br>\nOSSL_FUNC_kem_newctx()</b> should create and return a\npointer to a provider side structure for holding context\ninformation during an asymmetric kem operation. A pointer to\nthis context will be passed back in a number of the other\nasymmetric kem operation function calls. The parameter\n<i>provctx</i> is the provider context generated during\nprovider initialisation (see <a href=\"https://man.page/7/provider\">provider(7)</a>).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_kem_freectx()</b>\nis passed a pointer to the provider side asymmetric kem\ncontext in the <i>ctx</i> parameter. This function should\nfree any resources associated with that context.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_kem_dupctx()</b>\nshould duplicate the provider side asymmetric kem context in\nthe <i>ctx</i> parameter and return the duplicate copy.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Asymmetric\nKey Encapsulation Functions <br>\nOSSL_FUNC_kem_encapsulate_init()</b> initialises a context\nfor an asymmetric encapsulation given a provider side\nasymmetric kem context in the <i>ctx</i> parameter, a\npointer to a provider key object in the <i>provkey</i>\nparameter and the <i>name</i> of the algorithm. The\n<i>params</i>, if not <small>NULL,</small> should be set on\nthe context in a manner similar to using\n<b>OSSL_FUNC_kem_set_ctx_params()</b>. The key object should\nhave been previously generated, loaded or imported into the\nprovider using the key management (\n<small>OSSL_OP_KEYMGMT</small> ) operation (see\n<a href=\"https://man.page/7/provider-keymgmt\">provider-keymgmt(7)</a>&gt;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_kem_encapsulate()</b>\nperforms the actual encapsulation itself. A previously\ninitialised asymmetric kem context is passed in the\n<i>ctx</i> parameter. Unless <i>out</i> is\n<small>NULL,</small> the data to be encapsulated is\ninternally generated, and returned into the buffer pointed\nto by the <i>secret</i> parameter and the encapsulated data\nshould also be written to the location pointed to by the\n<i>out</i> parameter. The length of the encapsulated data\nshould be written to <i>*outlen</i> and the length of the\ngenerated secret should be written to <i>*secretlen</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">If <i>out</i>\nis <small>NULL</small> then the maximum length of the\nencapsulated data should be written to <i>*outlen</i>, and\nthe maximum length of the generated secret should be written\nto <i>*secretlen</i>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Decapsulation\nFunctions <br>\nOSSL_FUNC_kem_decapsulate_init()</b> initialises a context\nfor an asymmetric decapsulation given a provider side\nasymmetric kem context in the <i>ctx</i> parameter, a\npointer to a provider key object in the <i>provkey</i>\nparameter, and a <i>name</i> of the algorithm. The key\nobject should have been previously generated, loaded or\nimported into the provider using the key management (\n<small>OSSL_OP_KEYMGMT</small> ) operation (see\n<a href=\"https://man.page/7/provider-keymgmt\">provider-keymgmt(7)</a>&gt;.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_kem_decapsulate()</b>\nperforms the actual decapsulation itself. A previously\ninitialised asymmetric kem context is passed in the\n<i>ctx</i> parameter. The data to be decapsulated is pointed\nto by the <i>in</i> parameter which is <i>inlen</i> bytes\nlong. Unless <i>out</i> is <small>NULL,</small> the\ndecapsulated data should be written to the location pointed\nto by the <i>out</i> parameter. The length of the\ndecapsulated data should be written to <i>*outlen</i>. If\n<i>out</i> is <small>NULL</small> then the maximum length of\nthe decapsulated data should be written to\n<i>*outlen</i>.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Asymmetric\nKey Encapsulation Parameters</b> <br>\nSee <b><small>OSSL_PARAM</small></b> (3) for further details\non the parameters structure used by the\n<b>OSSL_FUNC_kem_get_ctx_params()</b> and\n<b>OSSL_FUNC_kem_set_ctx_params()</b> functions.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_kem_get_ctx_params()</b>\ngets asymmetric kem parameters associated with the given\nprovider side asymmetric kem context <i>ctx</i> and stores\nthem in <i>params</i>. Passing <small>NULL</small> for\n<i>params</i> should return true.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_kem_set_ctx_params()</b>\nsets the asymmetric kem parameters associated with the given\nprovider side asymmetric kem context <i>ctx</i> to\n<i>params</i>. Any parameter settings are additional to any\nthat were previously set. Passing <small>NULL</small> for\n<i>params</i> should return true.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">No parameters\nare currently recognised by built-in asymmetric kem\nalgorithms.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_kem_gettable_ctx_params()</b>\nand <b>OSSL_FUNC_kem_settable_ctx_params()</b> get a\nconstant <b><small>OSSL_PARAM</small></b> array that\ndescribes the gettable and settable parameters, i.e.\nparameters that can be used with\n<b>OSSL_FUNC_kem_get_ctx_params()</b> and\n<b>OSSL_FUNC_kem_set_ctx_params()</b> respectively. See\n<b><small>OSSL_PARAM</small></b> (3) for the use of\n<b><small>OSSL_PARAM</small></b> as parameter\ndescriptor.</p>\n\n<h2>RETURN VALUES\n<a name=\"RETURN VALUES\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>OSSL_FUNC_kem_newctx()</b>\nand <b>OSSL_FUNC_kem_dupctx()</b> should return the newly\ncreated provider side asymmetric kem context, or\n<small>NULL</small> on failure.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">All other\nfunctions should return 1 for success or 0 on error.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><a href=\"https://man.page/7/provider\">provider(7)</a></p>\n\n<h2>HISTORY\n<a name=\"HISTORY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The provider\n<small>KEM</small> interface was introduced in OpenSSL\n3.0.</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright\n2020-2021 The OpenSSL Project Authors. All Rights\nReserved.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Licensed under\nthe Apache License 2.0 (the &quot;License&quot;). You may\nnot use this file except in compliance with the License. You\ncan obtain a copy in the file <small>LICENSE</small> in the\nsource distribution or at\n&lt;https://www.openssl.org/source/license.html&gt;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#SYNOPSIS\">SYNOPSIS</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#RETURN VALUES\">RETURN VALUES</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#HISTORY\">HISTORY</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"],"level":7}