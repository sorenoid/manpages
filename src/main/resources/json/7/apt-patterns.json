{"name":"apt-patterns","description":"apt-patterns -\nSyntax and semantics of apt search patterns\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\nStarting with\nversion 2.0, <b>APT</b> provides support for patterns, which\ncan be used to query the apt cache for packages.\n\n<h2>LOGIC PATTERNS\n<a name=\"LOGIC PATTERNS\"></a>\n</h2>\n\n\nThese patterns\nprovide the basic means to combine other patterns into more\ncomplex expressions, as well as ?true and ?false\npatterns.\n\n?and(PATTERN,\nPATTERN, ...), PATTERN PATTERN ...\n\n<p style=\"margin-left:17%;\">Selects objects where all\nspecified patterns match.\n\n?false, ~F\n\n<p style=\"margin-left:17%;\">Selects nothing.\n\n?not(PATTERN),\n!PATTERN\n\n<p style=\"margin-left:17%;\">Selects objects where PATTERN\ndoes not match.\n\n?or(PATTERN,\nPATTERN, ...), PATTERN | PATTERN | ...\n\n<p style=\"margin-left:17%;\">Selects objects where at least\none of the specified patterns match.\n\n?true, ~T\n\n<p style=\"margin-left:17%;\">Selects all objects.\n\n(PATTERN)\n\n<p style=\"margin-left:17%;\">Selects the same as PATTERN,\ncan be used to work around precedence, for example,\n(~ramd64|~ri386)~nfoo\n\n<h2>NARROWING PATTERNS\n<a name=\"NARROWING PATTERNS\"></a>\n</h2>\n\n\n\n?all-versions(PATTERN)\n\n<p style=\"margin-left:17%;\">Selects packages where all\nversions match PATTERN. When matching versions instead, same\nas PATTERN.\n\n\n?any-version(PATTERN)\n\n<p style=\"margin-left:17%;\">Selects any version where the\npattern matches on the version.\n\n<p style=\"margin-left:17%; margin-top: 1em\">For example,\nwhile ?and(?version(1),?version(2)) matches a package which\nhas one version containing 1 and one version containing 2,\n?any-version(?and(?version(1),?version(2))) restricts the\n?and to act on the same version.\n\n\n?narrow(PATTERN...)\n\n<p style=\"margin-left:17%;\">Selects any version matching\nall PATTERNs, short for ?any-version(?and(PATTERN...)).\n\n<h2>PACKAGE PATTERNS\n<a name=\"PACKAGE PATTERNS\"></a>\n</h2>\n\n\nThese patterns\nselect specific packages.\n\n\n?architecture(WILDCARD),\n~rWILDCARD\n\n<p style=\"margin-left:17%;\">Selects packages matching the\nspecified architecture, which may contain wildcards using\nany.\n\n?automatic,\n~M\n\n<p style=\"margin-left:17%;\">Selects packages that were\ninstalled automatically.\n\n?broken, ~b\n\n<p style=\"margin-left:17%;\">Selects packages that have\nbroken dependencies.\n\n?config-files,\n~c\n\n<p style=\"margin-left:17%;\">Selects packages that are not\nfully installed, but have solely residual configuration\nfiles left.\n\n?essential,\n~E\n\n<p style=\"margin-left:17%;\">Selects packages that have\nEssential: yes set in their control file.\n\n\n?exact-name(NAME)\n\n<p style=\"margin-left:17%;\">Selects packages with the exact\nspecified name.\n\n?garbage,\n~g\n\n<p style=\"margin-left:17%;\">Selects packages that can be\nremoved automatically.\n\n?installed,\n~i\n\n<p style=\"margin-left:17%;\">Selects packages that are\ncurrently installed.\n\n?name(REGEX),\n~nREGEX\n\n<p style=\"margin-left:17%;\">Selects packages where the name\nmatches the given regular expression.\n\n?obsolete,\n~o\n\n<p style=\"margin-left:17%;\">Selects packages that no longer\nexist in repositories.\n\n?upgradable,\n~U\n\n<p style=\"margin-left:17%;\">Selects packages that can be\nupgraded (have a newer candidate).\n\n?virtual,\n~v\n\n<p style=\"margin-left:17%;\">Selects all virtual packages;\nthat is packages without a version. These exist when they\nare referenced somewhere in the archive, for example because\nsomething depends on that name.\n\n<h2>VERSION PATTERNS\n<a name=\"VERSION PATTERNS\"></a>\n</h2>\n\n\nThese patterns\nselect specific versions of a package.\n\n\n?archive(REGEX),\n~AREGEX\n\n<p style=\"margin-left:17%;\">Selects versions that come from\nthe archive that matches the specified regular expression.\nArchive, here, means the values after a= in <b>apt-cache\npolicy</b>.\n\n\n?codename(REGEX)\n\n<p style=\"margin-left:17%;\">Selects versions that come from\nthe codename that matches the specified regular expression.\nCodename, here, means the values after n= in <b>apt-cache\npolicy</b>.\n\n\n?origin(REGEX),\n~OREGEX\n\n<p style=\"margin-left:17%;\">Selects versions that come from\nthe origin that matches the specified regular expression.\nOrigin, here, means the values after o= in <b>apt-cache\npolicy</b>.\n\n\n?section(REGEX),\n~sREGEX\n\n<p style=\"margin-left:17%;\">Selects versions where the\nsection matches the specified regular expression.\n\n\n?source-package(REGEX),\n~eREGEX\n\n<p style=\"margin-left:17%;\">Selects versions where the\nsource package name matches the specified regular\nexpression.\n\n\n?source-version(REGEX)\n\n<p style=\"margin-left:17%;\">Selects versions where the\nsource package version matches the specified regular\nexpression.\n\n\n?version(REGEX),\n~VREGEX\n\n<p style=\"margin-left:17%;\">Selects versions where the\nversion string matches the specified regular expression.\n\n\n?priority(NAME),\n~pNAME\n\n<p style=\"margin-left:17%;\">Selects versions where the\nPriority string equals the given name.\n\n<h2>PACKAGE RELATIONSHIP PATTERNS\n<a name=\"PACKAGE RELATIONSHIP PATTERNS\"></a>\n</h2>\n\n\nThese patterns\nmatch specific package versions that depend/conflict with\nsome other packages.\n\n\n?depends(PATTERN),\n~DPATTERN, ?pre-depends(PATTERN), ~DPre-Depends:PATTERN,\n?suggests(PATTERN), ~DSuggests:PATTERN, ?conflicts(PATTERN),\n~DConflicts:PATTERN, ?replaces(PATTERN), ~DReplaces:PATTERN,\n?obsoletes(PATTERN), ~DObsoletes:PATTERN, ?breaks(PATTERN),\n~DBreaks:PATTERN, ?enhances(PATTERN), ~DEnhances:PATTERN\n\n<p style=\"margin-left:17%;\">Selects versions\ndepending/pre-depending/suggesting/conflicting/etc on/with/\npackages matching PATTERN.\n\n\n?reverse-<i>depType</i>(PATTERN),\n~R<i>DepType</i>:PATTERN\n\n<p style=\"margin-left:17%;\">Opposite of ?depends and\nfriends - selects all packages that have\nreverse-dependencies (versions) matching PATTERN.\n\n<p style=\"margin-left:17%; margin-top: 1em\"><i>depType</i>\nis one of the dependency types such as depends, so that we\ndon't have to repeat the entire list from the first\nparagraph here.\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\napt remove\n?garbage\n\n<p style=\"margin-left:17%;\">Remove all packages that are\nautomatically installed and no longer needed - same as apt\nautoremove\n\napt purge\n?config-files\n\n<p style=\"margin-left:17%;\">Purge all packages that only\nhave configuration files left\n\napt list '~i\n!~M (~slibs|~sperl|~spython)'\n\n<p style=\"margin-left:17%;\">List all manually-installed\npackages in sections matching libs, perl, or python.\n\n<h2>MIGRATING FROM APTITUDE\n<a name=\"MIGRATING FROM APTITUDE\"></a>\n</h2>\n\n\nPatterns in apt\nare heavily inspired by patterns in aptitude, but with some\ntweaks:\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Syntax\nis uniform: If there is an opening parenthesis after a term,\nit is always assumed to be the beginning of an argument\nlist.\n\n<p style=\"margin-left:17%; margin-top: 1em\">In aptitude, a\nsyntactic form &quot;?foo(bar)&quot; could mean\n&quot;?and(?foo,bar)&quot; if foo does not take an argument.\nIn APT, this will cause an error.\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Not all\npatterns are supported.\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Some\nadditional patterns are available, for example, for finding\ngstreamer codecs.\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Escaping\nterms with ~ is not supported.\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; A\ntrailing comma is allowed in argument lists\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; ?narrow\naccepts infinite arguments\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; foo\ncannot be used as a shortform for ?name(foo), as this can\ncause typos to go unnoticed: Consider ?and(...,~poptional):\nthis requires the package to have required priority, but if\nyou do not type the ~, it would require the package name to\ncontain poptional.\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Grouping\npatterns with (...) or writing ?or(A,B) as A|B are not\nsupported. We do not believe that the use of | is that\ncommon, and the grouping is not necessary without it.\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nDependency types for ~D and related operators need to be\nspecified in the canonical case.\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<b>apt-get</b>(8),\n<b>apt</b>(8)\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n\n<b><font color=\"#0000FF\">APT\nbug page</font></b>\n<small><font color=\"#000000\">[1]</font></small>\n<font color=\"#000000\">. If you wish to report a bug in APT,\nplease see /usr/share/doc/debian/bug-reporting.txt or the\n<a href=\"https://man.page/1/reportbug\">reportbug(1)</a> command.</font>\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\n\n<font color=\"#000000\">APT\nwas written by the APT team\n&lt;apt@packages.debian.org&gt;.</font>\n\n<h2>AUTHORS\n<a name=\"AUTHORS\"></a>\n</h2>\n\n\n\n<font color=\"#000000\"><b>Jason\nGunthorpe</b></font>\n\n\n<font color=\"#000000\"><b>APT\nteam</b></font>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"12%\"></td>\n<td width=\"3%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">1.</font> </td>\n<td width=\"2%\"></td>\n<td width=\"18%\">\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">APT bug\npage</font> </td>\n<td width=\"65%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">http://bugs.debian.org/src:apt</font>","body":"\n\n<h1 align=\"center\">APT-PATTERNS</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">apt-patterns -\nSyntax and semantics of apt search patterns</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Starting with\nversion 2.0, <b>APT</b> provides support for patterns, which\ncan be used to query the apt cache for packages.</p>\n\n<h2>LOGIC PATTERNS\n<a name=\"LOGIC PATTERNS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These patterns\nprovide the basic means to combine other patterns into more\ncomplex expressions, as well as ?true and ?false\npatterns.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">?and(PATTERN,\nPATTERN, ...), PATTERN PATTERN ...</p>\n\n<p style=\"margin-left:17%;\">Selects objects where all\nspecified patterns match.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">?false, ~F</p>\n\n<p style=\"margin-left:17%;\">Selects nothing.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">?not(PATTERN),\n!PATTERN</p>\n\n<p style=\"margin-left:17%;\">Selects objects where PATTERN\ndoes not match.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">?or(PATTERN,\nPATTERN, ...), PATTERN | PATTERN | ...</p>\n\n<p style=\"margin-left:17%;\">Selects objects where at least\none of the specified patterns match.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">?true, ~T</p>\n\n<p style=\"margin-left:17%;\">Selects all objects.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">(PATTERN)</p>\n\n<p style=\"margin-left:17%;\">Selects the same as PATTERN,\ncan be used to work around precedence, for example,\n(~ramd64|~ri386)~nfoo</p>\n\n<h2>NARROWING PATTERNS\n<a name=\"NARROWING PATTERNS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">?all-versions(PATTERN)</p>\n\n<p style=\"margin-left:17%;\">Selects packages where all\nversions match PATTERN. When matching versions instead, same\nas PATTERN.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">?any-version(PATTERN)</p>\n\n<p style=\"margin-left:17%;\">Selects any version where the\npattern matches on the version.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">For example,\nwhile ?and(?version(1),?version(2)) matches a package which\nhas one version containing 1 and one version containing 2,\n?any-version(?and(?version(1),?version(2))) restricts the\n?and to act on the same version.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">?narrow(PATTERN...)</p>\n\n<p style=\"margin-left:17%;\">Selects any version matching\nall PATTERNs, short for ?any-version(?and(PATTERN...)).</p>\n\n<h2>PACKAGE PATTERNS\n<a name=\"PACKAGE PATTERNS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These patterns\nselect specific packages.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">?architecture(WILDCARD),\n~rWILDCARD</p>\n\n<p style=\"margin-left:17%;\">Selects packages matching the\nspecified architecture, which may contain wildcards using\nany.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">?automatic,\n~M</p>\n\n<p style=\"margin-left:17%;\">Selects packages that were\ninstalled automatically.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">?broken, ~b</p>\n\n<p style=\"margin-left:17%;\">Selects packages that have\nbroken dependencies.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">?config-files,\n~c</p>\n\n<p style=\"margin-left:17%;\">Selects packages that are not\nfully installed, but have solely residual configuration\nfiles left.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">?essential,\n~E</p>\n\n<p style=\"margin-left:17%;\">Selects packages that have\nEssential: yes set in their control file.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">?exact-name(NAME)</p>\n\n<p style=\"margin-left:17%;\">Selects packages with the exact\nspecified name.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">?garbage,\n~g</p>\n\n<p style=\"margin-left:17%;\">Selects packages that can be\nremoved automatically.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">?installed,\n~i</p>\n\n<p style=\"margin-left:17%;\">Selects packages that are\ncurrently installed.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">?name(REGEX),\n~nREGEX</p>\n\n<p style=\"margin-left:17%;\">Selects packages where the name\nmatches the given regular expression.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">?obsolete,\n~o</p>\n\n<p style=\"margin-left:17%;\">Selects packages that no longer\nexist in repositories.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">?upgradable,\n~U</p>\n\n<p style=\"margin-left:17%;\">Selects packages that can be\nupgraded (have a newer candidate).</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">?virtual,\n~v</p>\n\n<p style=\"margin-left:17%;\">Selects all virtual packages;\nthat is packages without a version. These exist when they\nare referenced somewhere in the archive, for example because\nsomething depends on that name.</p>\n\n<h2>VERSION PATTERNS\n<a name=\"VERSION PATTERNS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These patterns\nselect specific versions of a package.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">?archive(REGEX),\n~AREGEX</p>\n\n<p style=\"margin-left:17%;\">Selects versions that come from\nthe archive that matches the specified regular expression.\nArchive, here, means the values after a= in <b>apt-cache\npolicy</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">?codename(REGEX)</p>\n\n<p style=\"margin-left:17%;\">Selects versions that come from\nthe codename that matches the specified regular expression.\nCodename, here, means the values after n= in <b>apt-cache\npolicy</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">?origin(REGEX),\n~OREGEX</p>\n\n<p style=\"margin-left:17%;\">Selects versions that come from\nthe origin that matches the specified regular expression.\nOrigin, here, means the values after o= in <b>apt-cache\npolicy</b>.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">?section(REGEX),\n~sREGEX</p>\n\n<p style=\"margin-left:17%;\">Selects versions where the\nsection matches the specified regular expression.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">?source-package(REGEX),\n~eREGEX</p>\n\n<p style=\"margin-left:17%;\">Selects versions where the\nsource package name matches the specified regular\nexpression.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">?source-version(REGEX)</p>\n\n<p style=\"margin-left:17%;\">Selects versions where the\nsource package version matches the specified regular\nexpression.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">?version(REGEX),\n~VREGEX</p>\n\n<p style=\"margin-left:17%;\">Selects versions where the\nversion string matches the specified regular expression.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">?priority(NAME),\n~pNAME</p>\n\n<p style=\"margin-left:17%;\">Selects versions where the\nPriority string equals the given name.</p>\n\n<h2>PACKAGE RELATIONSHIP PATTERNS\n<a name=\"PACKAGE RELATIONSHIP PATTERNS\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">These patterns\nmatch specific package versions that depend/conflict with\nsome other packages.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">?depends(PATTERN),\n~DPATTERN, ?pre-depends(PATTERN), ~DPre-Depends:PATTERN,\n?suggests(PATTERN), ~DSuggests:PATTERN, ?conflicts(PATTERN),\n~DConflicts:PATTERN, ?replaces(PATTERN), ~DReplaces:PATTERN,\n?obsoletes(PATTERN), ~DObsoletes:PATTERN, ?breaks(PATTERN),\n~DBreaks:PATTERN, ?enhances(PATTERN), ~DEnhances:PATTERN</p>\n\n<p style=\"margin-left:17%;\">Selects versions\ndepending/pre-depending/suggesting/conflicting/etc on/with/\npackages matching PATTERN.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">?reverse-<i>depType</i>(PATTERN),\n~R<i>DepType</i>:PATTERN</p>\n\n<p style=\"margin-left:17%;\">Opposite of ?depends and\nfriends - selects all packages that have\nreverse-dependencies (versions) matching PATTERN.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\"><i>depType</i>\nis one of the dependency types such as depends, so that we\ndon't have to repeat the entire list from the first\nparagraph here.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">apt remove\n?garbage</p>\n\n<p style=\"margin-left:17%;\">Remove all packages that are\nautomatically installed and no longer needed - same as apt\nautoremove</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">apt purge\n?config-files</p>\n\n<p style=\"margin-left:17%;\">Purge all packages that only\nhave configuration files left</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">apt list '~i\n!~M (~slibs|~sperl|~spython)'</p>\n\n<p style=\"margin-left:17%;\">List all manually-installed\npackages in sections matching libs, perl, or python.</p>\n\n<h2>MIGRATING FROM APTITUDE\n<a name=\"MIGRATING FROM APTITUDE\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Patterns in apt\nare heavily inspired by patterns in aptitude, but with some\ntweaks:</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Syntax\nis uniform: If there is an opening parenthesis after a term,\nit is always assumed to be the beginning of an argument\nlist.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">In aptitude, a\nsyntactic form &quot;?foo(bar)&quot; could mean\n&quot;?and(?foo,bar)&quot; if foo does not take an argument.\nIn APT, this will cause an error.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Not all\npatterns are supported.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Some\nadditional patterns are available, for example, for finding\ngstreamer codecs.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Escaping\nterms with ~ is not supported.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; A\ntrailing comma is allowed in argument lists</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; ?narrow\naccepts infinite arguments</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; foo\ncannot be used as a shortform for ?name(foo), as this can\ncause typos to go unnoticed: Consider ?and(...,~poptional):\nthis requires the package to have required priority, but if\nyou do not type the ~, it would require the package name to\ncontain poptional.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull; Grouping\npatterns with (...) or writing ?or(A,B) as A|B are not\nsupported. We do not believe that the use of | is that\ncommon, and the grouping is not necessary without it.</p>\n\n<p style=\"margin-left:17%; margin-top: 1em\">&bull;\nDependency types for ~D and related operators need to be\nspecified in the canonical case.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>apt-get</b>(8),\n<b>apt</b>(8)</p>\n\n<h2>BUGS\n<a name=\"BUGS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b><font color=\"#0000FF\">APT\nbug page</font></b>\n<small><font color=\"#000000\">[1]</font></small>\n<font color=\"#000000\">. If you wish to report a bug in APT,\nplease see /usr/share/doc/debian/bug-reporting.txt or the\n<a href=\"https://man.page/1/reportbug\">reportbug(1)</a> command.</font></p>\n\n<h2>AUTHOR\n<a name=\"AUTHOR\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\">APT\nwas written by the APT team\n&lt;apt@packages.debian.org&gt;.</font></p>\n\n<h2>AUTHORS\n<a name=\"AUTHORS\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>Jason\nGunthorpe</b></font></p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><font color=\"#000000\"><b>APT\nteam</b></font></p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"12%\"></td>\n<td width=\"3%\">\n\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">1.</font></p> </td>\n<td width=\"2%\"></td>\n<td width=\"18%\">\n\n\n<p style=\"margin-top: 1em\"><font color=\"#000000\">APT bug\npage</font></p> </td>\n<td width=\"65%\">\n</td></tr>\n</table>\n\n\n<p style=\"margin-left:17%;\"><font color=\"#000000\">http://bugs.debian.org/src:apt</font></p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#LOGIC PATTERNS\">LOGIC PATTERNS</a>","<a href=\"#NARROWING PATTERNS\">NARROWING PATTERNS</a>","<a href=\"#PACKAGE PATTERNS\">PACKAGE PATTERNS</a>","<a href=\"#VERSION PATTERNS\">VERSION PATTERNS</a>","<a href=\"#PACKAGE RELATIONSHIP PATTERNS\">PACKAGE RELATIONSHIP PATTERNS</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#MIGRATING FROM APTITUDE\">MIGRATING FROM APTITUDE</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#BUGS\">BUGS</a>","<a href=\"#AUTHOR\">AUTHOR</a>","<a href=\"#AUTHORS\">AUTHORS</a>","<a href=\"#NOTES\">NOTES</a>"],"level":7}