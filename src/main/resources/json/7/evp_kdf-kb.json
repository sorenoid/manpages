{"name":"evp_kdf-kb","description":"EVP_KDF-KB -\nThe Key-Based EVP_KDF implementation\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\nThe\n<small>EVP_KDF-KB</small> algorithm implements the Key-Based\nkey derivation function ( <small>KBKDF</small> ).\n<small>KBKDF</small> derives a key from repeated application\nof a keyed <small>MAC</small> to an input secret (and other\noptional values).\n\n\n<b>Identity</b>\n<br>\n&quot; <small>KBKDF&quot;</small> is the name for this\nimplementation; it can be used with the\n<b>EVP_KDF_fetch()</b> function.\n\n<b>Supported\nparameters</b> <br>\nThe supported parameters are: <br>\n&quot;mode&quot; ( <b><small>OSSL_KDF_PARAM_MODE</small></b>\n) &lt; <small>UTF8</small> string&gt;\n\n<p style=\"margin-left:17%;\">The mode parameter determines\nwhich flavor of <small>KBKDF</small> to use - currently the\nchoices are &quot;counter&quot; and &quot;feedback&quot;.\n&quot;counter&quot; is the default, and will be used if\nunspecified.\n\n<p style=\"margin-left:11%;\">&quot;mac&quot; (\n<b><small>OSSL_KDF_PARAM_MAC</small></b> ) &lt;\n<small>UTF8</small> string&gt;\n\n<p style=\"margin-left:17%;\">The value is either\n<small>CMAC</small> or <small>HMAC.</small>\n\n<p style=\"margin-left:11%;\">&quot;digest&quot; (\n<b><small>OSSL_KDF_PARAM_DIGEST</small></b> ) &lt;\n<small>UTF8</small> string&gt; <br>\n&quot;cipher&quot; (\n<b><small>OSSL_KDF_PARAM_CIPHER</small></b> ) &lt;\n<small>UTF8</small> string&gt; <br>\n&quot;properties&quot; (\n<b><small>OSSL_KDF_PARAM_PROPERTIES</small></b> ) &lt;\n<small>UTF8</small> string&gt; <br>\n&quot;key&quot; ( <b><small>OSSL_KDF_PARAM_KEY</small></b> )\n&lt;octet string&gt; <br>\n&quot;salt&quot; ( <b><small>OSSL_KDF_PARAM_SALT</small></b>\n) &lt;octet string&gt; <br>\n&quot;info ( <b><small>OSSL_KDF_PARAM_INFO</small></b> )\n&lt;octet string&gt; <br>\n&quot;seed&quot; ( <b><small>OSSL_KDF_PARAM_SEED</small></b>\n) &lt;octet string&gt;\n\n<p style=\"margin-left:17%;\">The seed parameter is unused in\ncounter mode.\n\n<p style=\"margin-left:11%;\">&quot;use-l&quot; (\n<b><small>OSSL_KDF_PARAM_KBKDF_USE_L</small></b> )\n&lt;integer&gt;\n\n<p style=\"margin-left:17%;\">Set to <b>0</b> to disable use\nof the optional Fixed Input data &rsquo;L&rsquo; (see\n<small>SP800-108</small> ). The default value of <b>1</b>\nwill be used if unspecified.\n\n<p style=\"margin-left:11%;\">&quot;use-separator&quot; (\n<b><small>OSSL_KDF_PARAM_KBKDF_USE_SEPARATOR</small></b> )\n&lt;integer&gt;\n\n<p style=\"margin-left:17%;\">Set to <b>0</b> to disable use\nof the optional Fixed Input data &rsquo;zero\nseparator&rsquo; (see <small>SP800-108</small> ) that is\nplaced between the Label and Context. The default value of\n<b>1</b> will be used if unspecified.\n\nDepending on\nwhether mac is <small>CMAC</small> or <small>HMAC,</small>\neither digest or cipher is required (respectively) and the\nother is unused.\n\nThe parameters\nkey, salt, info, and seed correspond to <small>KI,</small>\nLabel, Context, and <small>IV</small> (respectively) in\n<small>SP800-108.</small> As in that document, salt, info,\nand seed are optional and may be omitted.\n\n\n&quot;mac&quot;,\n&quot;digest&quot;, cipher&quot; and &quot;properties&quot;\nare described in &quot; <small>PARAMETERS&quot;</small> in\n<b><small>EVP_KDF</small></b> (3).\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\nA context for\n<small>KBKDF</small> can be obtained by calling:\n\nEVP_KDF *kdf =\nEVP_KDF_fetch(NULL, &quot;KBKDF&quot;, NULL); <br>\nEVP_KDF_CTX *kctx = EVP_KDF_CTX_new(kdf);\n\nThe output\nlength of an <small>KBKDF</small> is specified via the\n&quot;keylen&quot; parameter to the <a href=\"https://man.page/3/EVP_KDF_derive\">EVP_KDF_derive(3)</a>\nfunction.\n\nNote that\ncurrently OpenSSL only implements counter and feedback\nmodes. Other variants may be supported in the future.\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\nThis example\nderives 10 bytes using <small>COUNTER-HMAC-SHA256,</small>\nwith <small>KI</small> &quot;secret&quot;, Label\n&quot;label&quot;, and Context &quot;context&quot;.\n\nEVP_KDF *kdf;\n<br>\nEVP_KDF_CTX *kctx; <br>\nunsigned char out[10]; <br>\nOSSL_PARAM params[6], *p = params; <br>\nkdf = EVP_KDF_fetch(NULL, &quot;KBKDF&quot;, NULL); <br>\nkctx = EVP_KDF_CTX_new(kdf); <br>\nEVP_KDF_free(kdf); <br>\n*p++ =\nOSSL_PARAM_construct_utf8_string(OSSL_KDF_PARAM_DIGEST, <br>\n&quot;SHA2-256&quot;, 0); <br>\n*p++ = OSSL_PARAM_construct_utf8_string(OSSL_KDF_PARAM_MAC,\n<br>\n&quot;HMAC&quot;, 0); <br>\n*p++ = OSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_KEY,\n<br>\n&quot;secret&quot;, strlen(&quot;secret&quot;)); <br>\n*p++ =\nOSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_SALT, <br>\n&quot;label&quot;, strlen(&quot;label&quot;)); <br>\n*p++ =\nOSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_INFO, <br>\n&quot;context&quot;, strlen(&quot;context&quot;)); <br>\n*p = OSSL_PARAM_construct_end(); <br>\nif (EVP_KDF_derive(kctx, out, sizeof(out), params) &lt;= 0)\n<br>\nerror(&quot;EVP_KDF_derive&quot;); <br>\nEVP_KDF_CTX_free(kctx);\n\nThis example\nderives 10 bytes using <small>FEEDBACK-CMAC-AES256,</small>\nwith <small>KI</small> &quot;secret&quot;, Label\n&quot;label&quot;, and <small>IV</small> &quot;sixteen bytes\niv&quot;.\n\nEVP_KDF *kdf;\n<br>\nEVP_KDF_CTX *kctx; <br>\nunsigned char out[10]; <br>\nOSSL_PARAM params[8], *p = params; <br>\nunsigned char *iv = &quot;sixteen bytes iv&quot;; <br>\nkdf = EVP_KDF_fetch(NULL, &quot;KBKDF&quot;, NULL); <br>\nkctx = EVP_KDF_CTX_new(kdf); <br>\nEVP_KDF_free(kdf); <br>\n*p++ =\nOSSL_PARAM_construct_utf8_string(OSSL_KDF_PARAM_CIPHER,\n&quot;AES256&quot;, 0); <br>\n*p++ = OSSL_PARAM_construct_utf8_string(OSSL_KDF_PARAM_MAC,\n&quot;CMAC&quot;, 0); <br>\n*p++ = OSSL_PARAM_construct_utf8_string(OSSL_KDF_PARAM_MODE,\n&quot;FEEDBACK&quot;, 0); <br>\n*p++ = OSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_KEY,\n<br>\n&quot;secret&quot;, strlen(&quot;secret&quot;)); <br>\n*p++ =\nOSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_SALT, <br>\n&quot;label&quot;, strlen(&quot;label&quot;)); <br>\n*p++ =\nOSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_INFO, <br>\n&quot;context&quot;, strlen(&quot;context&quot;)); <br>\n*p++ =\nOSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_SEED, <br>\niv, strlen(iv)); <br>\n*p = OSSL_PARAM_construct_end(); <br>\nif (EVP_KDF_derive(kctx, out, sizeof(out), params) &lt;= 0)\n<br>\nerror(&quot;EVP_KDF_derive&quot;); <br>\nEVP_KDF_CTX_free(kctx);\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<small>NIST\nSP800-108, IETF RFC 6803, IETF RFC 8009.</small>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<small><b>EVP_KDF</b></small>\n(3), <a href=\"https://man.page/3/EVP_KDF_CTX_free\">EVP_KDF_CTX_free(3)</a>,\n<a href=\"https://man.page/3/EVP_KDF_CTX_get_kdf_size\">EVP_KDF_CTX_get_kdf_size(3)</a>,\n<a href=\"https://man.page/3/EVP_KDF_derive\">EVP_KDF_derive(3)</a>, &quot;\n<small>PARAMETERS&quot;</small> in\n<b><small>EVP_KDF</small></b> (3)\n\n<h2>HISTORY\n<a name=\"HISTORY\"></a>\n</h2>\n\n\nThis\nfunctionality was added to OpenSSL 3.0.\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\nCopyright\n2019-2021 The OpenSSL Project Authors. All Rights Reserved.\nCopyright 2019 Red Hat, Inc.\n\nLicensed under\nthe Apache License 2.0 (the &quot;License&quot;). You may\nnot use this file except in compliance with the License. You\ncan obtain a copy in the file <small>LICENSE</small> in the\nsource distribution or at\n&lt;https://www.openssl.org/source/license.html&gt;.","body":"\n\n<h1 align=\"center\">EVP_KDF-KB</h1>\n\n\n\n\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">EVP_KDF-KB -\nThe Key-Based EVP_KDF implementation</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\n<small>EVP_KDF-KB</small> algorithm implements the Key-Based\nkey derivation function ( <small>KBKDF</small> ).\n<small>KBKDF</small> derives a key from repeated application\nof a keyed <small>MAC</small> to an input secret (and other\noptional values).</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Identity</b>\n<br>\n&quot; <small>KBKDF&quot;</small> is the name for this\nimplementation; it can be used with the\n<b>EVP_KDF_fetch()</b> function.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Supported\nparameters</b> <br>\nThe supported parameters are: <br>\n&quot;mode&quot; ( <b><small>OSSL_KDF_PARAM_MODE</small></b>\n) &lt; <small>UTF8</small> string&gt;</p>\n\n<p style=\"margin-left:17%;\">The mode parameter determines\nwhich flavor of <small>KBKDF</small> to use - currently the\nchoices are &quot;counter&quot; and &quot;feedback&quot;.\n&quot;counter&quot; is the default, and will be used if\nunspecified.</p>\n\n<p style=\"margin-left:11%;\">&quot;mac&quot; (\n<b><small>OSSL_KDF_PARAM_MAC</small></b> ) &lt;\n<small>UTF8</small> string&gt;</p>\n\n<p style=\"margin-left:17%;\">The value is either\n<small>CMAC</small> or <small>HMAC.</small></p>\n\n<p style=\"margin-left:11%;\">&quot;digest&quot; (\n<b><small>OSSL_KDF_PARAM_DIGEST</small></b> ) &lt;\n<small>UTF8</small> string&gt; <br>\n&quot;cipher&quot; (\n<b><small>OSSL_KDF_PARAM_CIPHER</small></b> ) &lt;\n<small>UTF8</small> string&gt; <br>\n&quot;properties&quot; (\n<b><small>OSSL_KDF_PARAM_PROPERTIES</small></b> ) &lt;\n<small>UTF8</small> string&gt; <br>\n&quot;key&quot; ( <b><small>OSSL_KDF_PARAM_KEY</small></b> )\n&lt;octet string&gt; <br>\n&quot;salt&quot; ( <b><small>OSSL_KDF_PARAM_SALT</small></b>\n) &lt;octet string&gt; <br>\n&quot;info ( <b><small>OSSL_KDF_PARAM_INFO</small></b> )\n&lt;octet string&gt; <br>\n&quot;seed&quot; ( <b><small>OSSL_KDF_PARAM_SEED</small></b>\n) &lt;octet string&gt;</p>\n\n<p style=\"margin-left:17%;\">The seed parameter is unused in\ncounter mode.</p>\n\n<p style=\"margin-left:11%;\">&quot;use-l&quot; (\n<b><small>OSSL_KDF_PARAM_KBKDF_USE_L</small></b> )\n&lt;integer&gt;</p>\n\n<p style=\"margin-left:17%;\">Set to <b>0</b> to disable use\nof the optional Fixed Input data &rsquo;L&rsquo; (see\n<small>SP800-108</small> ). The default value of <b>1</b>\nwill be used if unspecified.</p>\n\n<p style=\"margin-left:11%;\">&quot;use-separator&quot; (\n<b><small>OSSL_KDF_PARAM_KBKDF_USE_SEPARATOR</small></b> )\n&lt;integer&gt;</p>\n\n<p style=\"margin-left:17%;\">Set to <b>0</b> to disable use\nof the optional Fixed Input data &rsquo;zero\nseparator&rsquo; (see <small>SP800-108</small> ) that is\nplaced between the Label and Context. The default value of\n<b>1</b> will be used if unspecified.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Depending on\nwhether mac is <small>CMAC</small> or <small>HMAC,</small>\neither digest or cipher is required (respectively) and the\nother is unused.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The parameters\nkey, salt, info, and seed correspond to <small>KI,</small>\nLabel, Context, and <small>IV</small> (respectively) in\n<small>SP800-108.</small> As in that document, salt, info,\nand seed are optional and may be omitted.</p>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">&quot;mac&quot;,\n&quot;digest&quot;, cipher&quot; and &quot;properties&quot;\nare described in &quot; <small>PARAMETERS&quot;</small> in\n<b><small>EVP_KDF</small></b> (3).</p>\n\n<h2>NOTES\n<a name=\"NOTES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">A context for\n<small>KBKDF</small> can be obtained by calling:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">EVP_KDF *kdf =\nEVP_KDF_fetch(NULL, &quot;KBKDF&quot;, NULL); <br>\nEVP_KDF_CTX *kctx = EVP_KDF_CTX_new(kdf);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The output\nlength of an <small>KBKDF</small> is specified via the\n&quot;keylen&quot; parameter to the <a href=\"https://man.page/3/EVP_KDF_derive\">EVP_KDF_derive(3)</a>\nfunction.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that\ncurrently OpenSSL only implements counter and feedback\nmodes. Other variants may be supported in the future.</p>\n\n<h2>EXAMPLES\n<a name=\"EXAMPLES\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This example\nderives 10 bytes using <small>COUNTER-HMAC-SHA256,</small>\nwith <small>KI</small> &quot;secret&quot;, Label\n&quot;label&quot;, and Context &quot;context&quot;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">EVP_KDF *kdf;\n<br>\nEVP_KDF_CTX *kctx; <br>\nunsigned char out[10]; <br>\nOSSL_PARAM params[6], *p = params; <br>\nkdf = EVP_KDF_fetch(NULL, &quot;KBKDF&quot;, NULL); <br>\nkctx = EVP_KDF_CTX_new(kdf); <br>\nEVP_KDF_free(kdf); <br>\n*p++ =\nOSSL_PARAM_construct_utf8_string(OSSL_KDF_PARAM_DIGEST, <br>\n&quot;SHA2-256&quot;, 0); <br>\n*p++ = OSSL_PARAM_construct_utf8_string(OSSL_KDF_PARAM_MAC,\n<br>\n&quot;HMAC&quot;, 0); <br>\n*p++ = OSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_KEY,\n<br>\n&quot;secret&quot;, strlen(&quot;secret&quot;)); <br>\n*p++ =\nOSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_SALT, <br>\n&quot;label&quot;, strlen(&quot;label&quot;)); <br>\n*p++ =\nOSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_INFO, <br>\n&quot;context&quot;, strlen(&quot;context&quot;)); <br>\n*p = OSSL_PARAM_construct_end(); <br>\nif (EVP_KDF_derive(kctx, out, sizeof(out), params) &lt;= 0)\n<br>\nerror(&quot;EVP_KDF_derive&quot;); <br>\nEVP_KDF_CTX_free(kctx);</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">This example\nderives 10 bytes using <small>FEEDBACK-CMAC-AES256,</small>\nwith <small>KI</small> &quot;secret&quot;, Label\n&quot;label&quot;, and <small>IV</small> &quot;sixteen bytes\niv&quot;.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">EVP_KDF *kdf;\n<br>\nEVP_KDF_CTX *kctx; <br>\nunsigned char out[10]; <br>\nOSSL_PARAM params[8], *p = params; <br>\nunsigned char *iv = &quot;sixteen bytes iv&quot;; <br>\nkdf = EVP_KDF_fetch(NULL, &quot;KBKDF&quot;, NULL); <br>\nkctx = EVP_KDF_CTX_new(kdf); <br>\nEVP_KDF_free(kdf); <br>\n*p++ =\nOSSL_PARAM_construct_utf8_string(OSSL_KDF_PARAM_CIPHER,\n&quot;AES256&quot;, 0); <br>\n*p++ = OSSL_PARAM_construct_utf8_string(OSSL_KDF_PARAM_MAC,\n&quot;CMAC&quot;, 0); <br>\n*p++ = OSSL_PARAM_construct_utf8_string(OSSL_KDF_PARAM_MODE,\n&quot;FEEDBACK&quot;, 0); <br>\n*p++ = OSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_KEY,\n<br>\n&quot;secret&quot;, strlen(&quot;secret&quot;)); <br>\n*p++ =\nOSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_SALT, <br>\n&quot;label&quot;, strlen(&quot;label&quot;)); <br>\n*p++ =\nOSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_INFO, <br>\n&quot;context&quot;, strlen(&quot;context&quot;)); <br>\n*p++ =\nOSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_SEED, <br>\niv, strlen(iv)); <br>\n*p = OSSL_PARAM_construct_end(); <br>\nif (EVP_KDF_derive(kctx, out, sizeof(out), params) &lt;= 0)\n<br>\nerror(&quot;EVP_KDF_derive&quot;); <br>\nEVP_KDF_CTX_free(kctx);</p>\n\n<h2>CONFORMING TO\n<a name=\"CONFORMING TO\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><small>NIST\nSP800-108, IETF RFC 6803, IETF RFC 8009.</small></p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><small><b>EVP_KDF</b></small>\n(3), <a href=\"https://man.page/3/EVP_KDF_CTX_free\">EVP_KDF_CTX_free(3)</a>,\n<a href=\"https://man.page/3/EVP_KDF_CTX_get_kdf_size\">EVP_KDF_CTX_get_kdf_size(3)</a>,\n<a href=\"https://man.page/3/EVP_KDF_derive\">EVP_KDF_derive(3)</a>, &quot;\n<small>PARAMETERS&quot;</small> in\n<b><small>EVP_KDF</small></b> (3)</p>\n\n<h2>HISTORY\n<a name=\"HISTORY\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This\nfunctionality was added to OpenSSL 3.0.</p>\n\n<h2>COPYRIGHT\n<a name=\"COPYRIGHT\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">Copyright\n2019-2021 The OpenSSL Project Authors. All Rights Reserved.\nCopyright 2019 Red Hat, Inc.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Licensed under\nthe Apache License 2.0 (the &quot;License&quot;). You may\nnot use this file except in compliance with the License. You\ncan obtain a copy in the file <small>LICENSE</small> in the\nsource distribution or at\n&lt;https://www.openssl.org/source/license.html&gt;.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#NOTES\">NOTES</a>","<a href=\"#EXAMPLES\">EXAMPLES</a>","<a href=\"#CONFORMING TO\">CONFORMING TO</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#HISTORY\">HISTORY</a>","<a href=\"#COPYRIGHT\">COPYRIGHT</a>"],"level":7}