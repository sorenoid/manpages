{"name":"bootparam","description":"bootparam - introduction to boot time parameters of the Linux kernel","body":"\n\n<h1 align=\"center\">BOOTPARAM</h1>\n\n\n\n\n\n\n<hr>\n\n\n<h2>NAME\n<a name=\"NAME\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">bootparam -\nintroduction to boot time parameters of the Linux kernel</p>\n\n<h2>DESCRIPTION\n<a name=\"DESCRIPTION\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">The Linux\nkernel accepts certain &rsquo;command-line options&rsquo; or\n&rsquo;boot time parameters&rsquo; at the moment it is\nstarted. In general, this is used to supply the kernel with\ninformation about hardware parameters that the kernel would\nnot be able to determine on its own, or to avoid/override\nthe values that the kernel would otherwise detect.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">When the kernel\nis booted directly by the BIOS, you have no opportunity to\nspecify any parameters. So, in order to take advantage of\nthis possibility you have to use a boot loader that is able\nto pass parameters, such as GRUB.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The argument\nlist</b> <br>\nThe kernel command line is parsed into a list of strings\n(boot arguments) separated by spaces. Most of the boot\narguments have the form:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">name[=value_1][,value_2]...[,value_10]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">where\n&rsquo;name&rsquo; is a unique keyword that is used to\nidentify what part of the kernel the associated values (if\nany) are to be given to. Note the limit of 10 is real, as\nthe present code handles only 10 comma separated parameters\nper keyword. (However, you can reuse the same keyword with\nup to an additional 10 parameters in unusually complicated\nsituations, assuming the setup function supports it.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Most of the\nsorting is coded in the kernel source file\n<i>init/main.c</i>. First, the kernel checks to see if the\nargument is any of the special arguments\n&rsquo;root=&rsquo;, &rsquo;nfsroot=&rsquo;,\n&rsquo;nfsaddrs=&rsquo;, &rsquo;ro&rsquo;, &rsquo;rw&rsquo;,\n&rsquo;debug&rsquo; or &rsquo;init&rsquo;. The meaning of\nthese special arguments is described below.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Then it walks a\nlist of setup functions to see if the specified argument\nstring (such as &rsquo;foo&rsquo;) has been associated with\na setup function (&rsquo;foo_setup()&rsquo;) for a\nparticular device or part of the kernel. If you passed the\nkernel the line foo=3,4,5,6 then the kernel would search the\nbootsetups array to see if &rsquo;foo&rsquo; was registered.\nIf it was, then it would call the setup function associated\nwith &rsquo;foo&rsquo; (foo_setup()) and hand it the\narguments 3, 4, 5, and 6 as given on the kernel command\nline.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Anything of the\nform &rsquo;foo=bar&rsquo; that is not accepted as a setup\nfunction as described above is then interpreted as an\nenvironment variable to be set. A (useless?) example would\nbe to use &rsquo;TERM=vt100&rsquo; as a boot argument.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Any remaining\narguments that were not picked up by the kernel and were not\ninterpreted as environment variables are then passed onto\nPID 1, which is usually the <a href=\"https://man.page/1/init\">init(1)</a> program. The most\ncommon argument that is passed to the <i>init</i> process is\nthe word &rsquo;single&rsquo; which instructs it to boot the\ncomputer in single user mode, and not launch all the usual\ndaemons. Check the manual page for the version of\n<a href=\"https://man.page/1/init\">init(1)</a> installed on your system to see what\narguments it accepts.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>General\nnon-device-specific boot arguments <br>\n&rsquo;init=...&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">This sets the initial command\nto be executed by the kernel. If this is not set, or cannot\nbe found, the kernel will try <i>/sbin/init</i>, then\n<i>/etc/init</i>, then <i>/bin/init</i>, then <i>/bin/sh</i>\nand panic if all of this fails.</p>\n\n\n<p style=\"margin-left:11%;\"><b>&rsquo;nfsaddrs=...&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">This sets the NFS boot address\nto the given string. This boot address is used in case of a\nnet boot.</p>\n\n\n<p style=\"margin-left:11%;\"><b>&rsquo;nfsroot=...&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">This sets the NFS root name to\nthe given string. If this string does not begin with\n&rsquo;/&rsquo; or &rsquo;,&rsquo; or a digit, then it is\nprefixed by &rsquo;/tftpboot/&rsquo;. This root name is used\nin case of a net boot.</p>\n\n\n<p style=\"margin-left:11%;\"><b>&rsquo;root=...&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">This argument tells the kernel\nwhat device is to be used as the root filesystem while\nbooting. The default of this setting is determined at\ncompile time, and usually is the value of the root device of\nthe system that the kernel was built on. To override this\nvalue, and select the second floppy drive as the root\ndevice, one would use &rsquo;root=/dev/fd1&rsquo;.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The root device\ncan be specified symbolically or numerically. A symbolic\nspecification has the form <i>/dev/XXYN</i>, where XX\ndesignates the device type (e.g., &rsquo;hd&rsquo; for\nST-506 compatible hard disk, with Y in\n&rsquo;a&rsquo;&ndash;&rsquo;d&rsquo;; &rsquo;sd&rsquo; for\nSCSI compatible disk, with Y in\n&rsquo;a&rsquo;&ndash;&rsquo;e&rsquo;), Y the driver letter\nor number, and N the number (in decimal) of the partition on\nthis device.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Note that this\nhas nothing to do with the designation of these devices on\nyour filesystem. The &rsquo;/dev/&rsquo; part is purely\nconventional.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The more\nawkward and less portable numeric specification of the above\npossible root devices in major/minor format is also\naccepted. (For example, <i>/dev/sda3</i> is major 8, minor\n3, so you could use &rsquo;root=0x803&rsquo; as an\nalternative.)</p>\n\n\n<p style=\"margin-left:11%;\"><b>&rsquo;rootdelay=&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">This parameter sets the delay\n(in seconds) to pause before attempting to mount the root\nfilesystem.</p>\n\n\n<p style=\"margin-left:11%;\"><b>&rsquo;rootflags=...&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">This parameter sets the mount\noption string for the root filesystem (see also\n<a href=\"https://man.page/5/fstab\">fstab(5)</a>).</p>\n\n\n<p style=\"margin-left:11%;\"><b>&rsquo;rootfstype=...&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">The &rsquo;rootfstype&rsquo;\noption tells the kernel to mount the root filesystem as if\nit where of the type specified. This can be useful (for\nexample) to mount an ext3 filesystem as ext2 and then remove\nthe journal in the root filesystem, in fact reverting its\nformat from ext3 to ext2 without the need to boot the box\nfrom alternate media.</p>\n\n<p style=\"margin-left:11%;\"><b>&rsquo;ro&rsquo;</b> and\n<b>&rsquo;rw&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">The &rsquo;ro&rsquo; option\ntells the kernel to mount the root filesystem as\n&rsquo;read-only&rsquo; so that filesystem consistency check\nprograms (fsck) can do their work on a quiescent filesystem.\nNo processes can write to files on the filesystem in\nquestion until it is &rsquo;remounted&rsquo; as read/write\ncapable, for example, by &rsquo;mount -w -n -o remount\n/&rsquo;. (See also <b>mount</b>(8).)</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The\n&rsquo;rw&rsquo; option tells the kernel to mount the root\nfilesystem read/write. This is the default.</p>\n\n\n<p style=\"margin-left:11%;\"><b>&rsquo;resume=...&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">This tells the kernel the\nlocation of the suspend-to-disk data that you want the\nmachine to resume from after hibernation. Usually, it is the\nsame as your swap partition or file. Example:</p>\n\n\n<p style=\"margin-left:28%; margin-top: 1em\">resume=/dev/hda2</p>\n\n\n<p style=\"margin-left:11%;\"><b>&rsquo;reserve=...&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">This is used to protect I/O\nport regions from probes. The form of the command is:</p>\n\n\n<p style=\"margin-left:28%; margin-top: 1em\"><b>reserve=</b><i>iobase,extent[,iobase,extent]...</i></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">In some\nmachines it may be necessary to prevent device drivers from\nchecking for devices (auto-probing) in a specific region.\nThis may be because of hardware that reacts badly to the\nprobing, or hardware that would be mistakenly identified, or\nmerely hardware you don&rsquo;t want the kernel to\ninitialize.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The reserve\nboot-time argument specifies an I/O port region that\nshouldn&rsquo;t be probed. A device driver will not probe a\nreserved region, unless another boot argument explicitly\nspecifies that it do so.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">For example,\nthe boot line</p>\n\n\n<p style=\"margin-left:28%; margin-top: 1em\">reserve=0x300,32\nblah=0x300</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">keeps all\ndevice drivers except the driver for &rsquo;blah&rsquo; from\nprobing 0x300-0x31f.</p>\n\n\n<p style=\"margin-left:11%;\"><b>&rsquo;panic=N&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">By default, the kernel will not\nreboot after a panic, but this option will cause a kernel\nreboot after N seconds (if N is greater than zero). This\npanic timeout can also be set by</p>\n\n<p style=\"margin-left:28%; margin-top: 1em\">echo N &gt;\n/proc/sys/kernel/panic</p>\n\n\n<p style=\"margin-left:11%;\"><b>&rsquo;reboot=[warm|cold][,[bios|hard]]&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">Since Linux 2.0.22, a reboot is\nby default a cold reboot. One asks for the old default with\n&rsquo;reboot=warm&rsquo;. (A cold reboot may be required to\nreset certain hardware, but might destroy not yet written\ndata in a disk cache. A warm reboot may be faster.) By\ndefault, a reboot is hard, by asking the keyboard controller\nto pulse the reset line low, but there is at least one type\nof motherboard where that doesn&rsquo;t work. The option\n&rsquo;reboot=bios&rsquo; will instead jump through the\nBIOS.</p>\n\n<p style=\"margin-left:11%;\"><b>&rsquo;nosmp&rsquo;</b> and\n<b>&rsquo;maxcpus=N&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">(Only when __SMP__ is defined.)\nA command-line option of &rsquo;nosmp&rsquo; or\n&rsquo;maxcpus=0&rsquo; will disable SMP activation\nentirely; an option &rsquo;maxcpus=N&rsquo; limits the\nmaximum number of CPUs activated in SMP mode to N.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Boot\narguments for use by kernel developers <br>\n&rsquo;debug&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">Kernel messages are handed off\nto a daemon (e.g., <b>klogd</b>(8) or similar) so that they\nmay be logged to disk. Messages with a priority above\n<i>console_loglevel</i> are also printed on the console.\n(For a discussion of log levels, see <a href=\"https://man.page/2/syslog\">syslog(2)</a>.) By\ndefault, <i>console_loglevel</i> is set to log messages at\nlevels higher than <b>KERN_DEBUG</b>. This boot argument\nwill cause the kernel to also print messages logged at level\n<b>KERN_DEBUG</b>. The console loglevel can also be set on a\nbooted system via the <i>/proc/sys/kernel/printk</i> file\n(described in <a href=\"https://man.page/2/syslog\">syslog(2)</a>), the <a href=\"https://man.page/2/syslog\">syslog(2)</a>\n<b>SYSLOG_ACTION_CONSOLE_LEVEL</b> operation, or\n<b>dmesg</b>(8).</p>\n\n\n<p style=\"margin-left:11%;\"><b>&rsquo;profile=N&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">It is possible to enable a\nkernel profiling function, if one wishes to find out where\nthe kernel is spending its CPU cycles. Profiling is enabled\nby setting the variable <i>prof_shift</i> to a nonzero\nvalue. This is done either by specifying\n<b>CONFIG_PROFILE</b> at compile time, or by giving the\n&rsquo;profile=&rsquo; option. Now the value that\n<i>prof_shift</i> gets will be N, when given, or\n<b>CONFIG_PROFILE_SHIFT</b>, when that is given, or 2, the\ndefault. The significance of this variable is that it gives\nthe granularity of the profiling: each clock tick, if the\nsystem was executing kernel code, a counter is\nincremented:</p>\n\n\n<p style=\"margin-left:28%; margin-top: 1em\">profile[address\n&gt;&gt; prof_shift]++;</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The raw\nprofiling information can be read from <i>/proc/profile</i>.\nProbably you&rsquo;ll want to use a tool such as\nreadprofile.c to digest it. Writing to <i>/proc/profile</i>\nwill clear the counters.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Boot\narguments for ramdisk use</b> <br>\n(Only if the kernel was compiled with\n<b>CONFIG_BLK_DEV_RAM</b>.) In general it is a bad idea to\nuse a ramdisk under Linux&mdash;the system will use\navailable memory more efficiently itself. But while booting,\nit is often useful to load the floppy contents into a\nramdisk. One might also have a system in which first some\nmodules (for filesystem or hardware) must be loaded before\nthe main disk can be accessed.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">In Linux\n1.3.48, ramdisk handling was changed drastically. Earlier,\nthe memory was allocated statically, and there was a\n&rsquo;ramdisk=N&rsquo; parameter to tell its size. (This\ncould also be set in the kernel image at compile time.)\nThese days ram disks use the buffer cache, and grow\ndynamically. For a lot of information on the current ramdisk\nsetup, see the kernel source file\n<i>Documentation/blockdev/ramdisk.txt</i>\n(<i>Documentation/ramdisk.txt</i> in older kernels).</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">There are four\nparameters, two boolean and two integral.</p>\n\n\n<p style=\"margin-left:11%;\"><b>&rsquo;load_ramdisk=N&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">If N=1, do load a ramdisk. If\nN=0, do not load a ramdisk. (This is the default.)</p>\n\n\n<p style=\"margin-left:11%;\"><b>&rsquo;prompt_ramdisk=N&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">If N=1, do prompt for insertion\nof the floppy. (This is the default.) If N=0, do not prompt.\n(Thus, this parameter is never needed.)</p>\n\n\n<p style=\"margin-left:11%;\"><b>&rsquo;ramdisk_size=N&rsquo;</b>\nor (obsolete) <b>&rsquo;ramdisk=N&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">Set the maximal size of the\nramdisk(s) to N kB. The default is 4096 (4&nbsp;MB).</p>\n\n\n<p style=\"margin-left:11%;\"><b>&rsquo;ramdisk_start=N&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">Sets the starting block number\n(the offset on the floppy where the ramdisk starts) to N.\nThis is needed in case the ramdisk follows a kernel\nimage.</p>\n\n\n<p style=\"margin-left:11%;\"><b>&rsquo;noinitrd&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">(Only if the kernel was\ncompiled with <b>CONFIG_BLK_DEV_RAM</b> and\n<b>CONFIG_BLK_DEV_INITRD</b>.) These days it is possible to\ncompile the kernel to use initrd. When this feature is\nenabled, the boot process will load the kernel and an\ninitial ramdisk; then the kernel converts initrd into a\n&quot;normal&quot; ramdisk, which is mounted read-write as\nroot device; then <i>/linuxrc</i> is executed; afterward the\n&quot;real&quot; root filesystem is mounted, and the initrd\nfilesystem is moved over to <i>/initrd</i>; finally the\nusual boot sequence (e.g., invocation of <i>/sbin/init</i>)\nis performed.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">For a detailed\ndescription of the initrd feature, see the kernel source\nfile <i>Documentation/admin-guide/initrd.rst</i> (or\n<i>Documentation/initrd.txt</i> before Linux 4.10).</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The\n&rsquo;noinitrd&rsquo; option tells the kernel that although\nit was compiled for operation with initrd, it should not go\nthrough the above steps, but leave the initrd data under\n<i>/dev/initrd</i>. (This device can be used only once: the\ndata is freed as soon as the last process that used it has\nclosed <i>/dev/initrd</i>.)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Boot\narguments for SCSI devices</b> <br>\nGeneral notation for this section:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>iobase</i>\n-- the first I/O port that the SCSI host occupies. These are\nspecified in hexadecimal notation, and usually lie in the\nrange from 0x200 to 0x3ff.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>irq</i> --\nthe hardware interrupt that the card is configured to use.\nValid values will be dependent on the card in question, but\nwill usually be 5, 7, 9, 10, 11, 12, and 15. The other\nvalues are usually used for common peripherals like IDE hard\ndisks, floppies, serial ports, and so on.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>scsi-id</i>\n-- the ID that the host adapter uses to identify itself on\nthe SCSI bus. Only some host adapters allow you to change\nthis value, as most have it permanently specified\ninternally. The usual default value is 7, but the Seagate\nand Future Domain TMC-950 boards use 6.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><i>parity</i>\n-- whether the SCSI host adapter expects the attached\ndevices to supply a parity value with all information\nexchanges. Specifying a one indicates parity checking is\nenabled, and a zero disables parity checking. Again, not all\nadapters will support selection of parity behavior as a boot\nargument. <b><br>\n&rsquo;max_scsi_luns=...&rsquo;</b></p>\n\n<p style=\"margin-left:22%;\">A SCSI device can have a number\nof &rsquo;subdevices&rsquo; contained within itself. The\nmost common example is one of the new SCSI CD-ROMs that\nhandle more than one disk at a time. Each CD is addressed as\na &rsquo;Logical Unit Number&rsquo; (LUN) of that particular\ndevice. But most devices, such as hard disks, tape drives\nand such are only one device, and will be assigned to LUN\nzero.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Some poorly\ndesigned SCSI devices cannot handle being probed for LUNs\nnot equal to zero. Therefore, if the compile-time flag\n<b>CONFIG_SCSI_MULTI_LUN</b> is not set, newer kernels will\nby default probe only LUN zero.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">To specify the\nnumber of probed LUNs at boot, one enters\n&rsquo;max_scsi_luns=n&rsquo; as a boot arg, where n is a\nnumber between one and eight. To avoid problems as described\nabove, one would use n=1 to avoid upsetting such broken\ndevices.</p>\n\n<p style=\"margin-left:11%;\"><b>SCSI tape\nconfiguration</b></p>\n\n<p style=\"margin-left:22%;\">Some boot time configuration of\nthe SCSI tape driver can be achieved by using the\nfollowing:</p>\n\n\n<p style=\"margin-left:28%; margin-top: 1em\"><b>st=</b><i>buf_size[,write_threshold[,max_bufs]]</i></p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The first two\nnumbers are specified in units of kB. The default\n<i>buf_size</i> is 32k&nbsp;B, and the maximum size that can\nbe specified is a ridiculous 16384&nbsp;kB. The\n<i>write_threshold</i> is the value at which the buffer is\ncommitted to tape, with a default value of 30&nbsp;kB. The\nmaximum number of buffers varies with the number of drives\ndetected, and has a default of two. An example usage would\nbe:</p>\n\n<p style=\"margin-left:28%; margin-top: 1em\">st=32,30,2</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Full details\ncan be found in the file <i>Documentation/scsi/st.txt</i>\n(or <i>drivers/scsi/README.st</i> for older kernels) in the\nLinux kernel source.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Hard disks\n<br>\nIDE Disk/CD-ROM Driver Parameters</b></p>\n\n<p style=\"margin-left:22%;\">The IDE driver accepts a number\nof parameters, which range from disk geometry\nspecifications, to support for broken controller chips.\nDrive-specific options are specified by using\n&rsquo;hdX=&rsquo; with X in\n&rsquo;a&rsquo;&ndash;&rsquo;h&rsquo;.</p>\n\n\n<p style=\"margin-left:22%; margin-top: 1em\">Non-drive-specific\noptions are specified with the prefix &rsquo;hd=&rsquo;.\nNote that using a drive-specific prefix for a\nnon-drive-specific option will still work, and the option\nwill just be applied as expected.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">Also note that\n&rsquo;hd=&rsquo; can be used to refer to the next\nunspecified drive in the (a, ..., h) sequence. For the\nfollowing discussions, the &rsquo;hd=&rsquo; option will be\ncited for brevity. See the file\n<i>Documentation/ide/ide.txt</i> (or\n<i>Documentation/ide.txt</i> in older kernels, or\n<i>drivers/block/README.ide</i> in ancient kernels) in the\nLinux kernel source for more details.</p>\n\n<p style=\"margin-left:11%;\"><b>The\n&rsquo;hd=cyls,heads,sects[,wpcom[,irq]]&rsquo;\noptions</b></p>\n\n<p style=\"margin-left:22%;\">These options are used to\nspecify the physical geometry of the disk. Only the first\nthree values are required. The cylinder/head/sectors values\nwill be those used by fdisk. The write precompensation value\nis ignored for IDE disks. The IRQ value specified will be\nthe IRQ used for the interface that the drive resides on,\nand is not really a drive-specific parameter.</p>\n\n<p style=\"margin-left:11%;\"><b>The\n&rsquo;hd=serialize&rsquo; option</b></p>\n\n<p style=\"margin-left:22%;\">The dual IDE interface CMD-640\nchip is broken as designed such that when drives on the\nsecondary interface are used at the same time as drives on\nthe primary interface, it will corrupt your data. Using this\noption tells the driver to make sure that both interfaces\nare never used at the same time.</p>\n\n<p style=\"margin-left:11%;\"><b>The &rsquo;hd=noprobe&rsquo;\noption</b></p>\n\n<p style=\"margin-left:22%;\">Do not probe for this drive.\nFor example,</p>\n\n<p style=\"margin-left:28%; margin-top: 1em\">hdb=noprobe\nhdb=1166,7,17</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">would disable\nthe probe, but still specify the drive geometry so that it\nwould be registered as a valid block device, and hence\nusable.</p>\n\n<p style=\"margin-left:11%;\"><b>The &rsquo;hd=nowerr&rsquo;\noption</b></p>\n\n<p style=\"margin-left:22%;\">Some drives apparently have the\n<b>WRERR_STAT</b> bit stuck on permanently. This enables a\nwork-around for these broken devices.</p>\n\n<p style=\"margin-left:11%;\"><b>The &rsquo;hd=cdrom&rsquo;\noption</b></p>\n\n<p style=\"margin-left:22%;\">This tells the IDE driver that\nthere is an ATAPI compatible CD-ROM attached in place of a\nnormal IDE hard disk. In most cases the CD-ROM is identified\nautomatically, but if it isn&rsquo;t then this may help.</p>\n\n<p style=\"margin-left:11%;\"><b>Standard ST-506 Disk Driver\nOptions (&rsquo;hd=&rsquo;)</b></p>\n\n<p style=\"margin-left:22%;\">The standard disk driver can\naccept geometry arguments for the disks similar to the IDE\ndriver. Note however that it expects only three values\n(C/H/S); any more or any less and it will silently ignore\nyou. Also, it accepts only &rsquo;hd=&rsquo; as an argument,\nthat is, &rsquo;hda=&rsquo; and so on are not valid here.\nThe format is as follows:</p>\n\n\n<p style=\"margin-left:28%; margin-top: 1em\">hd=cyls,heads,sects</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">If there are\ntwo disks installed, the above is repeated with the geometry\nparameters of the second disk.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>Ethernet\ndevices</b> <br>\nDifferent drivers make use of different parameters, but they\nall at least share having an IRQ, an I/O port base value,\nand a name. In its most generic form, it looks something\nlike this:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">ether=irq,iobase[,param_1[,...param_8]],name</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The first\nnonnumeric argument is taken as the name. The param_n values\n(if applicable) usually have different meanings for each\ndifferent card/driver. Typical param_n values are used to\nspecify things like shared memory address, interface\nselection, DMA channel and the like.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The most common\nuse of this parameter is to force probing for a second\nethercard, as the default is to probe only for one. This can\nbe accomplished with a simple:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">ether=0,0,eth1</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">Note that the\nvalues of zero for the IRQ and I/O base in the above example\ntell the driver(s) to autoprobe.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">The\nEthernet-HowTo has extensive documentation on using multiple\ncards and on the card/driver-specific implementation of the\nparam_n values where used. Interested readers should refer\nto the section in that document on their particular\ncard.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The floppy\ndisk driver</b> <br>\nThere are many floppy driver options, and they are all\nlisted in <i>Documentation/blockdev/floppy.txt</i> (or\n<i>Documentation/floppy.txt</i> in older kernels, or\n<i>drivers/block/README.fd</i> for ancient kernels) in the\nLinux kernel source. See that file for the details.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The sound\ndriver</b> <br>\nThe sound driver can also accept boot arguments to override\nthe compiled-in values. This is not recommended, as it is\nrather complex. It is described in the Linux kernel source\nfile <i>Documentation/sound/oss/README.OSS</i>\n(<i>drivers/sound/Readme.linux</i> in older kernel\nversions). It accepts a boot argument of the form:</p>\n\n\n<p style=\"margin-left:17%; margin-top: 1em\">sound=device1[,device2[,device3...[,device10]]]</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">where each\ndeviceN value is of the following format 0xTaaaId and the\nbytes are used as follows:</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">T - device\ntype: 1=FM, 2=SB, 3=PAS, 4=GUS, 5=MPU401, 6=SB16,\n7=SB16-MPU401</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">aaa - I/O\naddress in hex.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">I - interrupt\nline in hex (i.e., 10=a, 11=b, ...)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">d - DMA\nchannel.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">As you can see,\nit gets pretty messy, and you are better off to compile in\nyour own personal values as recommended. Using a boot\nargument of &rsquo;sound=0&rsquo; will disable the sound\ndriver entirely.</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>The line\nprinter driver</b></p>\n\n<table width=\"100%\" border=\"0\" rules=\"none\" frame=\"void\"\n       cellspacing=\"0\" cellpadding=\"0\">\n<tr valign=\"top\" align=\"left\">\n<td width=\"11%\"></td>\n<td width=\"7%\">\n\n\n<p><b>&rsquo;lp=&rsquo;</b></p></td>\n<td width=\"4%\"></td>\n<td width=\"10%\">\n\n\n<p>Syntax:</p></td>\n<td width=\"68%\">\n</td></tr>\n</table>\n\n<p style=\"margin-left:28%; margin-top: 1em\">lp=0 <br>\nlp=auto <br>\nlp=reset <br>\nlp=port[,port...]</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">You can tell\nthe printer driver what ports to use and what ports not to\nuse. The latter comes in handy if you don&rsquo;t want the\nprinter driver to claim all available parallel ports, so\nthat other drivers (e.g., PLIP, PPA) can use them\ninstead.</p>\n\n<p style=\"margin-left:22%; margin-top: 1em\">The format of\nthe argument is multiple port names. For example,\nlp=none,parport0 would use the first parallel port for lp1,\nand disable lp0. To disable the printer driver entirely, one\ncan use lp=0.</p>\n\n<h2>SEE ALSO\n<a name=\"SEE ALSO\"></a>\n</h2>\n\n\n\n<p style=\"margin-left:11%; margin-top: 1em\"><b>klogd</b>(8),\n<b>mount</b>(8)</p>\n\n<p style=\"margin-left:11%; margin-top: 1em\">For up-to-date\ninformation, see the kernel source file\n<i>Documentation/admin-guide/kernel-parameters.txt</i>.</p>\n\n<h2>COLOPHON\n<a name=\"COLOPHON\"></a>\n</h2>\n\n\n<p style=\"margin-left:11%; margin-top: 1em\">This page is\npart of release 5.10 of the Linux <i>man-pages</i> project.\nA description of the project, information about reporting\nbugs, and the latest version of this page, can be found at\nhttps://www.kernel.org/doc/man-pages/.</p>\n<hr>\n","headings":["<a href=\"#NAME\">NAME</a>","<a href=\"#DESCRIPTION\">DESCRIPTION</a>","<a href=\"#SEE ALSO\">SEE ALSO</a>","<a href=\"#COLOPHON\">COLOPHON</a>"],"level":7}